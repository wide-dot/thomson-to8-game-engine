                      (C:\Users\bhrou\gi):00001                 INCLUDE "./generated-code/EHZ/ObjectId.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0001             (./generated-code/):00003         ObjID_EHZ_Mask equ 1
     0002             (./generated-code/):00004         ObjID_EHZ equ 2
     0003             (./generated-code/):00005         ObjID_Scroll equ 3
     0004             (./generated-code/):00006         ObjID_Sonic equ 4
     0005             (./generated-code/):00007         ObjID_Smps equ 5
     0006             (./generated-code/):00008         ObjID_EHZ_Back equ 6
                      (C:\Users\bhrou\gi):00002                 INCLUDE "./generated-code/Game.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     010E             (./generated-code/):00003         Build_RAMLoaderManager equ $010E
     0000             (./generated-code/):00004         GmID_EHZ equ 0
     0000             (./generated-code/):00005         gmboot equ 0
                      (C:\Users\bhrou\gi):00003         
                      (C:\Users\bhrou\gi):00004                 opt   c,ct
                      (C:\Users\bhrou\gi):00005                 
                      (C:\Users\bhrou\gi):00006                 ********************************************************************************
                      (C:\Users\bhrou\gi):00007                 * Game Engine (TO8 Thomson) - Benoit Rousseau 2020-2021
                      (C:\Users\bhrou\gi):00008                 * ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00009                 *
                      (C:\Users\bhrou\gi):00010                 *
                      (C:\Users\bhrou\gi):00011                 ********************************************************************************
                      (C:\Users\bhrou\gi):00012                 
                      (C:\Users\bhrou\gi):00013                         INCLUDE "./Engine/Constants.asm"
                      (./Engine/Constant):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00002                 * Constants
                      (./Engine/Constant):00003                 *
                      (./Engine/Constant):00004                 * Naming convention
                      (./Engine/Constant):00005                 * -----------------
                      (./Engine/Constant):00006                 * - lower case
                      (./Engine/Constant):00007                 * - underscore-separated names
                      (./Engine/Constant):00008                 *
                      (./Engine/Constant):00009                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00010                 
                      (./Engine/Constant):00011                 * ===========================================================================
                      (./Engine/Constant):00012                 * TO8 Registers
                      (./Engine/Constant):00013                 * ===========================================================================
                      (./Engine/Constant):00014                 
                      (./Engine/Constant):00015                 ; Disk routine registers (ROM)
                      (./Engine/Constant):00016                 
     6049             (./Engine/Constant):00017                 dk_drive                      equ $6049
     604A             (./Engine/Constant):00018                 dk_track                      equ $604A
     604B             (./Engine/Constant):00019                 dk_track_lsb                  equ $604B
     604C             (./Engine/Constant):00020                 dk_sector                     equ $604C
     604F             (./Engine/Constant):00021                 dk_write_location             equ $604F
                      (./Engine/Constant):00022                 
                      (./Engine/Constant):00023                 * ===========================================================================
                      (./Engine/Constant):00024                 * Globals
                      (./Engine/Constant):00025                 * ===========================================================================
                      (./Engine/Constant):00026                 
     009F             (./Engine/Constant):00027                 glb_direct_page               equ $9F    ; direct page for globals
                      (./Engine/Constant):00028                 
                      (./Engine/Constant):00029                 ; compilated sprite
     9FFE             (./Engine/Constant):00030                 glb_register_s                equ $9FFE  ; reverved space to store S from ROM routines
                      (./Engine/Constant):00031                 
                      (./Engine/Constant):00032                 ; DrawSprites
     9FFC             (./Engine/Constant):00033                 glb_screen_location_1         equ $9FFC  ; start address for rendering of current sprite Part1     
     9FFA             (./Engine/Constant):00034                 glb_screen_location_2         equ $9FFA  ; start address for rendering of current sprite Part2 (Must follow Part1)
                      (./Engine/Constant):00035                 
                      (./Engine/Constant):00036                 ; CheckSpritesRefresh
     9FF9             (./Engine/Constant):00037                 glb_cur_priority              equ $9FF9
     9FF7             (./Engine/Constant):00038                 glb_cur_ptr_sub_obj_erase     equ $9FF7
     9FF5             (./Engine/Constant):00039                 glb_cur_ptr_sub_obj_draw      equ $9FF5
     9FF3             (./Engine/Constant):00040                 glb_camera_x_pos              equ $9FF3 ; camera x position in palyfield coordinates
     9FF1             (./Engine/Constant):00041                 glb_camera_y_pos              equ $9FF1 ; camera y position in palyfield coordinates
     9FEF             (./Engine/Constant):00042                 glb_camera_x_min_pos          equ $9FEF
     9FED             (./Engine/Constant):00043                 glb_camera_y_min_pos          equ $9FED
     9FEB             (./Engine/Constant):00044                 glb_camera_x_max_pos          equ $9FEB
     9FE9             (./Engine/Constant):00045                 glb_camera_y_max_pos          equ $9FE9
     9FE8             (./Engine/Constant):00046                 glb_force_sprite_refresh      equ $9FE8
     9FE7             (./Engine/Constant):00047                 glb_camera_move               equ $9FE7
     9FE6             (./Engine/Constant):00048                 glb_alphaTiles                equ $9FE6
     9F00             (./Engine/Constant):00049                 glb_tmp_var                   equ $9F00 ; custom tmp var space for routine
     9F00             (./Engine/Constant):00050                 glb_system_stack              equ $9F00
                      (./Engine/Constant):00051                 
                      (./Engine/Constant):00052                 * ===========================================================================
                      (./Engine/Constant):00053                 * Display Constants
                      (./Engine/Constant):00054                 * ===========================================================================
                      (./Engine/Constant):00055                 
     00A0             (./Engine/Constant):00056                 screen_width                  equ 160    ; in pixel
     001C             (./Engine/Constant):00057                 screen_top                    equ 28     ; in pixel
     00E3             (./Engine/Constant):00058                 screen_bottom                 equ 28+199 ; in pixel
     0030             (./Engine/Constant):00059                 screen_left                   equ 48     ; in pixel
     00CF             (./Engine/Constant):00060                 screen_right                  equ 48+159 ; in pixel
     0008             (./Engine/Constant):00061                 nb_priority_levels            equ 8      ; number of priority levels (need code change if modified)
                      (./Engine/Constant):00062                 
                      (./Engine/Constant):00063                 * ===========================================================================
                      (./Engine/Constant):00064                 * Images Constants
                      (./Engine/Constant):00065                 * ===========================================================================
                      (./Engine/Constant):00066                 
     0004             (./Engine/Constant):00067                 image_x_size                  equ 4
     0005             (./Engine/Constant):00068                 image_y_size                  equ 5
     0006             (./Engine/Constant):00069                 image_center_offset           equ 6
                      (./Engine/Constant):00070                 
     0004             (./Engine/Constant):00071                 image_subset_x1_offset        equ 4
     0005             (./Engine/Constant):00072                 image_subset_y1_offset        equ 5
                      (./Engine/Constant):00073                 
     0000             (./Engine/Constant):00074                 page_draw_routine             equ 0
     0001             (./Engine/Constant):00075                 draw_routine                  equ 1
     0003             (./Engine/Constant):00076                 page_erase_routine            equ 3
     0004             (./Engine/Constant):00077                 erase_routine                 equ 4
     0006             (./Engine/Constant):00078                 erase_nb_cell                 equ 6
                      (./Engine/Constant):00079                 
                      (./Engine/Constant):00080                 * ===========================================================================
                      (./Engine/Constant):00081                 * Sound Constants
                      (./Engine/Constant):00082                 * ===========================================================================
                      (./Engine/Constant):00083                 
     0000             (./Engine/Constant):00084                 sound_page        equ 0
     0001             (./Engine/Constant):00085                 sound_start_addr  equ 1
     0003             (./Engine/Constant):00086                 sound_end_addr    equ 3
     0005             (./Engine/Constant):00087                 sound_meta_size   equ 5
                      (./Engine/Constant):00088                 
                      (./Engine/Constant):00089                 * ===========================================================================
                      (./Engine/Constant):00090                 * Object Constants
                      (./Engine/Constant):00091                 * ===========================================================================
                      (./Engine/Constant):00092                 
     005D             (./Engine/Constant):00093                 object_core_size              equ 93  ; the size of an object without ext_vars - DEPENDENCY ClearObj routine
     0064             (./Engine/Constant):00094                 object_size                   equ object_core_size+ext_variables_size ; the size of a dynamic object
     0064             (./Engine/Constant):00095                 next_object                   equ object_size
     005D             (./Engine/Constant):00096                 ext_variables                 equ object_core_size ; start of reserved space for additionnal variables
                      (./Engine/Constant):00097                 
     0000             (./Engine/Constant):00098                 id                            equ 0           ; reference to object model id (ObjID_) (0: free slot)
     0001             (./Engine/Constant):00099                 subtype                       equ 1           ; reference to object subtype (Sub_)
     0002             (./Engine/Constant):00100                 render_flags                  equ 2
                      (./Engine/Constant):00101                 
                      (./Engine/Constant):00102                 * --- render_flags bitfield variables ---
     0001             (./Engine/Constant):00103                 render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
     0002             (./Engine/Constant):00104                 render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
     0004             (./Engine/Constant):00105                 render_overlay_mask           equ $04 ; (bit 2) DEPENDENCY should be bit 2 - compilated sprite with no background save
     0008             (./Engine/Constant):00106                 render_motionless_mask        equ $08 ; (bit 3) tell display engine to compute sub image and position check only once until the flag is removed  
     0010             (./Engine/Constant):00107                 render_playfieldcoord_mask    equ $10 ; (bit 4) tell display engine to use playfield (1) or screen (0) coordinates
     0020             (./Engine/Constant):00108                 render_hide_mask              equ $20 ; (bit 5) tell display engine to hide sprite (keep priority and mapping_frame)
     0040             (./Engine/Constant):00109                 render_todelete_mask          equ $40 ; (bit 6) tell display engine to delete sprite and clear OST for this object
     0080             (./Engine/Constant):00110                 render_xloop_mask             equ $80 ; (bit 7) (screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
                      (./Engine/Constant):00111                  
     0003             (./Engine/Constant):00112                 priority                      equ 3           ; display priority (0: nothing to display, 1:front, ..., 8:back)
     0004             (./Engine/Constant):00113                 anim                          equ 4  ; and 5  ; reference to current animation (Ani_)
     0006             (./Engine/Constant):00114                 prev_anim                     equ 6  ; and 7  ; reference to previous animation (Ani_)
     0008             (./Engine/Constant):00115                 anim_frame                    equ 8           ; index of current frame in animation
     0009             (./Engine/Constant):00116                 anim_frame_duration           equ 9           ; number of frames for each image in animation, range: 00-7F (0-127), 0 means display only during one frame
     000A             (./Engine/Constant):00117                 anim_flags                    equ 10          ; byte offset to reference an anim_flags LUT (adv) / store a link flag (non adv)
                      (./Engine/Constant):00118                 
                      (./Engine/Constant):00119                 * --- anim_flags bitfield variables ---
     0001             (./Engine/Constant):00120                 anim_link_mask                equ $01 ; (bit 0) if set, allow the load of a new animation without reseting anim_frame and anim_frame_duration
                      (./Engine/Constant):00121                 
     000B             (./Engine/Constant):00122                 status_flags                  equ 11          ; orientation of sprite, is applied to animation xmirror flag during AnimateSprite
                      (./Engine/Constant):00123                 
                      (./Engine/Constant):00124                 * --- status_flags bitfield variables ---
     0001             (./Engine/Constant):00125                 status_xflip_mask             equ $01 ; (bit 0) X Flip
     0002             (./Engine/Constant):00126                 status_yflip_mask             equ $02 ; (bit 1) Y Flip
                      (./Engine/Constant):00127                 
     000C             (./Engine/Constant):00128                 image_set                     equ 12 ; and 13 ; reference to current image (Img_) (0000 if no image)
     000E             (./Engine/Constant):00129                 x_pos                         equ 14 ; and 15 ; x playfield coordinate
     0010             (./Engine/Constant):00130                 x_sub                         equ 16          ; x subpixel (1/256 of a pixel), must follow x_pos in data structure
     0011             (./Engine/Constant):00131                 y_pos                         equ 17 ; and 18 ; y playfield coordinate
     0013             (./Engine/Constant):00132                 y_sub                         equ 19          ; y subpixel (1/256 of a pixel), must follow y_pos in data structure
     0014             (./Engine/Constant):00133                 xy_pixel                      equ 20          ; x and y screen coordinate
     0014             (./Engine/Constant):00134                 x_pixel                       equ 20          ; x screen coordinate
     0015             (./Engine/Constant):00135                 y_pixel                       equ 21          ; y screen coordinate, must follow x_pixel
                      (./Engine/Constant):00136                 ;x_offset                      equ 93          ; x screen coordinate offset that is applied at rendering
                      (./Engine/Constant):00137                 ;y_offset                      equ 94          ; x screen coordinate offset that is applied at rendering
     0016             (./Engine/Constant):00138                 x_vel                         equ 22 ; and 23 ; horizontal velocity
     0018             (./Engine/Constant):00139                 y_vel                         equ 24 ; and 25 ; vertical velocity
     001A             (./Engine/Constant):00140                 x_acl                         equ 26 ; and 27 ; horizontal gravity
     001C             (./Engine/Constant):00141                 y_acl                         equ 28 ; and 29 ; vertical gravity
     001E             (./Engine/Constant):00142                 routine                       equ 30          ; index of current object routine
     001F             (./Engine/Constant):00143                 routine_secondary             equ 31          ; index of current secondary routine
     0020             (./Engine/Constant):00144                 routine_tertiary              equ 32          ; index of current tertiary routine
     0021             (./Engine/Constant):00145                 routine_quaternary            equ 33          ; index of current quaternary routine
                      (./Engine/Constant):00146                 
                      (./Engine/Constant):00147                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00148                 * reserved variables (update by engine)
                      (./Engine/Constant):00149                 
     0022             (./Engine/Constant):00150                 rsv_render_flags              equ 34
                      (./Engine/Constant):00151                 
                      (./Engine/Constant):00152                 * --- rsv_render_flags bitfield variables ---
     0001             (./Engine/Constant):00153                 rsv_render_checkrefresh_mask  equ $01 ; (bit 0) if erasesprite and display sprite flag are processed for this frame
     0002             (./Engine/Constant):00154                 rsv_render_erasesprite_mask   equ $02 ; (bit 1) if a sprite need to be cleared on screen
     0004             (./Engine/Constant):00155                 rsv_render_displaysprite_mask equ $04 ; (bit 2) if a sprite need to be rendered on screen
     0008             (./Engine/Constant):00156                 rsv_render_outofrange_mask    equ $08 ; (bit 3) if a sprite is out of range for full rendering in screen
     0080             (./Engine/Constant):00157                 rsv_render_onscreen_mask      equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on last screen buffer (may be 0 or 1)
                      (./Engine/Constant):00158                 
     0023             (./Engine/Constant):00159                 rsv_prev_anim                 equ 35 ; and 36 ; reference to previous animation (Ani_) w * UTILE ?
     0025             (./Engine/Constant):00160                 rsv_image_center_offset       equ 37 ; 0 or 1 offset that indicate if image center is even or odd (DRS_XYToAddress)
     0026             (./Engine/Constant):00161                 rsv_image_subset              equ 38 ; and 39 ; reference to current image regarding mirror flags w
     0028             (./Engine/Constant):00162                 rsv_mapping_frame             equ 40 ; and 41 ; reference to current image regarding mirror flags, overlay flag and x precision w
     002A             (./Engine/Constant):00163                 rsv_erase_nb_cell             equ 42 ; b 
     002B             (./Engine/Constant):00164                 rsv_page_draw_routine         equ 43 ; b
     002C             (./Engine/Constant):00165                 rsv_draw_routine              equ 44 ; and 45 ; w
     002E             (./Engine/Constant):00166                 rsv_page_erase_routine        equ 46 ; b
     002F             (./Engine/Constant):00167                 rsv_erase_routine             equ 47 ; and 48 ; w 
     0031             (./Engine/Constant):00168                 rsv_xy1_pixel                 equ 49 ;
     0031             (./Engine/Constant):00169                 rsv_x1_pixel                  equ 49 ; x+x_offset-(x_size/2) screen coordinate
     0032             (./Engine/Constant):00170                 rsv_y1_pixel                  equ 50 ; y+y_offset-(y_size/2) screen coordinate, must follow rsv_x1_pixel
     0033             (./Engine/Constant):00171                 rsv_xy2_pixel                 equ 51 ;
     0033             (./Engine/Constant):00172                 rsv_x2_pixel                  equ 51 ; x+x_offset+(x_size/2) screen coordinate
     0034             (./Engine/Constant):00173                 rsv_y2_pixel                  equ 52 ; y+y_offset+(y_size/2) screen coordinate, must follow rsv_x2_pixel
                      (./Engine/Constant):00174                 
                      (./Engine/Constant):00175                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00176                 * reserved variables (engine) - buffer specific
                      (./Engine/Constant):00177                 
     0035             (./Engine/Constant):00178                 rsv_buffer_0                  equ 53 ; Start index of buffer 0 variables
     0035             (./Engine/Constant):00179                 rsv_priority_0                equ 53 ; internal value that hold priority in video buffer 0
     0036             (./Engine/Constant):00180                 rsv_priority_prev_obj_0       equ 54 ; and 55 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
     0038             (./Engine/Constant):00181                 rsv_priority_next_obj_0       equ 56 ; and 57 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
     003A             (./Engine/Constant):00182                 rsv_prev_mapping_frame_0      equ 58 ; and 59 ; reference to previous image in video buffer 0 w
     003C             (./Engine/Constant):00183                 rsv_prev_erase_nb_cell_0      equ 60 : b
     003D             (./Engine/Constant):00184                 rsv_prev_page_erase_routine_0 equ 61 ; b
     003E             (./Engine/Constant):00185                 rsv_prev_erase_routine_0      equ 62 ; and 63 ; w
     0040             (./Engine/Constant):00186                 rsv_bgdata_0                  equ 64 ; and 65 ; address of background data in screen 0 w
     0042             (./Engine/Constant):00187                 rsv_prev_xy_pixel_0           equ 66 ;
     0042             (./Engine/Constant):00188                 rsv_prev_x_pixel_0            equ 66 ; previous x screen coordinate b
     0043             (./Engine/Constant):00189                 rsv_prev_y_pixel_0            equ 67 ; previous y screen coordinate b, must follow x_pixel
     0044             (./Engine/Constant):00190                 rsv_prev_xy1_pixel_0          equ 68 ;
     0044             (./Engine/Constant):00191                 rsv_prev_x1_pixel_0           equ 68 ; previous x+x_offset-(x_size/2) screen coordinate b
     0045             (./Engine/Constant):00192                 rsv_prev_y1_pixel_0           equ 69 ; previous y+y_offset-(y_size/2) screen coordinate b, must follow x1_pixel
     0046             (./Engine/Constant):00193                 rsv_prev_xy2_pixel_0          equ 70 ;
     0046             (./Engine/Constant):00194                 rsv_prev_x2_pixel_0           equ 70 ; previous x+x_offset+(x_size/2) screen coordinate b
     0047             (./Engine/Constant):00195                 rsv_prev_y2_pixel_0           equ 71 ; previous y+y_offset+(y_size/2) screen coordinate b, must follow x2_pixel
     0048             (./Engine/Constant):00196                 rsv_prev_render_flags_0       equ 72 ;
                      (./Engine/Constant):00197                 * --- rsv_prev_render_flags_0 bitfield variables ---
     0001             (./Engine/Constant):00198                 rsv_prev_render_overlay_mask  equ $01 ; (bit 0) if a sprite has been rendered with compilated sprite and no background save on screen buffer 0/1
     0080             (./Engine/Constant):00199                 rsv_prev_render_onscreen_mask equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on screen buffer 0/1
                      (./Engine/Constant):00200                 
     0049             (./Engine/Constant):00201                 rsv_buffer_1                  equ 73 ; Start index of buffer 1 variables
     0049             (./Engine/Constant):00202                 rsv_priority_1                equ 73 ; internal value that hold priority in video buffer 1
     004A             (./Engine/Constant):00203                 rsv_priority_prev_obj_1       equ 74 ; and 75 ; previous object (OST address) in display priority list for video buffer 1 (0000 if none) w
     004C             (./Engine/Constant):00204                 rsv_priority_next_obj_1       equ 76 ; and 77 ; next object (OST address) in display priority list for video buffer 1 (0000 if none) w
     004E             (./Engine/Constant):00205                 rsv_prev_mapping_frame_1      equ 78 ; and 79 ; reference to previous image in video buffer 1 w
     0050             (./Engine/Constant):00206                 rsv_prev_erase_nb_cell_1      equ 80 ; b
     0051             (./Engine/Constant):00207                 rsv_prev_page_erase_routine_1 equ 81 ; b
     0052             (./Engine/Constant):00208                 rsv_prev_erase_routine_1      equ 82 ; and 83 ; w
     0054             (./Engine/Constant):00209                 rsv_bgdata_1                  equ 84 ; and 85 ; address of background data in screen 1 w
     0056             (./Engine/Constant):00210                 rsv_prev_xy_pixel_1           equ 86 ;
     0056             (./Engine/Constant):00211                 rsv_prev_x_pixel_1            equ 86 ; previous x screen coordinate b
     0057             (./Engine/Constant):00212                 rsv_prev_y_pixel_1            equ 87 ; previous y screen coordinate b, must follow x_pixel
     0058             (./Engine/Constant):00213                 rsv_prev_xy1_pixel_1          equ 88 ;
     0058             (./Engine/Constant):00214                 rsv_prev_x1_pixel_1           equ 88 ; previous x+x_size screen coordinate b
     0059             (./Engine/Constant):00215                 rsv_prev_y1_pixel_1           equ 89 ; previous y+y_size screen coordinate b, must follow x_pixel
     005A             (./Engine/Constant):00216                 rsv_prev_xy2_pixel_1          equ 90 ;
     005A             (./Engine/Constant):00217                 rsv_prev_x2_pixel_1           equ 90 ; previous x+x_size screen coordinate b
     005B             (./Engine/Constant):00218                 rsv_prev_y2_pixel_1           equ 91 ; previous y+y_size screen coordinate b, must follow x_pixel
     005C             (./Engine/Constant):00219                 rsv_prev_render_flags_1       equ 92 ;
                      (./Engine/Constant):00220                 
     0000             (./Engine/Constant):00221                 buf_priority                  equ 0  ; offset for each rsv_buffer variables
     0001             (./Engine/Constant):00222                 buf_priority_prev_obj         equ 1  ;
     0003             (./Engine/Constant):00223                 buf_priority_next_obj         equ 3  ;
     0005             (./Engine/Constant):00224                 buf_prev_mapping_frame        equ 5  ;
     0007             (./Engine/Constant):00225                 buf_erase_nb_cell             equ 7  ;
     0008             (./Engine/Constant):00226                 buf_page_erase_routine        equ 8 ;
     0009             (./Engine/Constant):00227                 buf_erase_routine             equ 9 ;
     000B             (./Engine/Constant):00228                 buf_bgdata                    equ 11 ;
     000D             (./Engine/Constant):00229                 buf_prev_xy_pixel             equ 13 ;
     000D             (./Engine/Constant):00230                 buf_prev_x_pixel              equ 13 ;
     000E             (./Engine/Constant):00231                 buf_prev_y_pixel              equ 14 ;
     000F             (./Engine/Constant):00232                 buf_prev_xy1_pixel            equ 15 ;
     000F             (./Engine/Constant):00233                 buf_prev_x1_pixel             equ 15 ;
     0010             (./Engine/Constant):00234                 buf_prev_y1_pixel             equ 16 ;
     0011             (./Engine/Constant):00235                 buf_prev_xy2_pixel            equ 17 ;
     0011             (./Engine/Constant):00236                 buf_prev_x2_pixel             equ 17 ;
     0012             (./Engine/Constant):00237                 buf_prev_y2_pixel             equ 18 ;
     0013             (./Engine/Constant):00238                 buf_prev_render_flags         equ 19 ;
                      (C:\Users\bhrou\gi):00014                         INCLUDE "./Engine/Macros.asm"        
0000                  (./Engine/Macros.a):00001                 _ldd MACRO
                      (./Engine/Macros.a):00002                         ldd   #((\1)*256)+\2
                      (./Engine/Macros.a):00003                  ENDM
                      (./Engine/Macros.a):00004                  
0000                  (./Engine/Macros.a):00005                 _ldx MACRO
                      (./Engine/Macros.a):00006                         ldx   #((\1)*256)+\2
                      (./Engine/Macros.a):00007                  ENDM
                      (./Engine/Macros.a):00008                  
0000                  (./Engine/Macros.a):00009                 _ldy MACRO
                      (./Engine/Macros.a):00010                         ldy   #((\1)*256)+\2
                      (./Engine/Macros.a):00011                  ENDM
                      (./Engine/Macros.a):00012                  
0000                  (./Engine/Macros.a):00013                 _ldu MACRO
                      (./Engine/Macros.a):00014                         ldu   #((\1)*256)+\2
                      (./Engine/Macros.a):00015                  ENDM  
                      (./Engine/Macros.a):00016                  
0000                  (./Engine/Macros.a):00017                 _lds MACRO
                      (./Engine/Macros.a):00018                         lds   #((\1)*256)+\2
                      (./Engine/Macros.a):00019                  ENDM   
                      (./Engine/Macros.a):00020                  
0000                  (./Engine/Macros.a):00021                 _SetCartPageA MACRO
                      (./Engine/Macros.a):00022                  IFDEF T2
                      (./Engine/Macros.a):00023                         jsr   SetCartPageA
                      (./Engine/Macros.a):00024                  ELSE
                      (./Engine/Macros.a):00025                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00026                  ENDC
                      (./Engine/Macros.a):00027                  ENDM      
                      (./Engine/Macros.a):00028                  
0000                  (./Engine/Macros.a):00029                 _GetCartPageA MACRO
                      (./Engine/Macros.a):00030                  IFDEF T2
                      (./Engine/Macros.a):00031                         jsr   GetCartPageA
                      (./Engine/Macros.a):00032                  ELSE
                      (./Engine/Macros.a):00033                         lda   $E7E6
                      (./Engine/Macros.a):00034                  ENDC
                      (./Engine/Macros.a):00035                  ENDM
                      (./Engine/Macros.a):00036                 
0000                  (./Engine/Macros.a):00037                 _SetCartPageB MACRO
                      (./Engine/Macros.a):00038                  IFDEF T2
                      (./Engine/Macros.a):00039                         jsr   SetCartPageB
                      (./Engine/Macros.a):00040                  ELSE
                      (./Engine/Macros.a):00041                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00042                  ENDC
                      (./Engine/Macros.a):00043                  ENDM      
                      (./Engine/Macros.a):00044                  
0000                  (./Engine/Macros.a):00045                 _GetCartPageB MACRO
                      (./Engine/Macros.a):00046                  IFDEF T2
                      (./Engine/Macros.a):00047                         jsr   GetCartPageB
                      (./Engine/Macros.a):00048                  ELSE
                      (./Engine/Macros.a):00049                         ldb   $E7E6
                      (./Engine/Macros.a):00050                  ENDC
                      (./Engine/Macros.a):00051                  ENDM     
                      (./Engine/Macros.a):00052                 
0000                  (./Engine/Macros.a):00053                 _RunObjectSwap MACRO
                      (./Engine/Macros.a):00054                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00055                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00056                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00057                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00058                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00059                         stu   glb_Address       
                      (./Engine/Macros.a):00060                         ldu   \2             
                      (./Engine/Macros.a):00061                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00062                  ENDM    
                      (./Engine/Macros.a):00063                 
0000                  (./Engine/Macros.a):00064                 _RunObjectSwapRoutine MACRO
                      (./Engine/Macros.a):00065                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00066                         ; param 2 : Object routine
                      (./Engine/Macros.a):00067                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00068                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00069                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00070                         stu   glb_Address       
                      (./Engine/Macros.a):00071                         lda   \2        
                      (./Engine/Macros.a):00072                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00073                  ENDM 
                      (./Engine/Macros.a):00074                  
0000                  (./Engine/Macros.a):00075                 _MountObject MACRO 
                      (./Engine/Macros.a):00076                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00077                         ; manual mount of an object from the resident page 1
                      (./Engine/Macros.a):00078                         lda   Obj_Index_Page+\1
                      (./Engine/Macros.a):00079                         _SetCartPageA
                      (./Engine/Macros.a):00080                         ldx   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00081                  ENDM
                      (./Engine/Macros.a):00082                 
0000                  (./Engine/Macros.a):00083                 _RunObject MACRO 
                      (./Engine/Macros.a):00084                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00085                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00086                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00087                         _MountObject \1
                      (./Engine/Macros.a):00088                         ldu   \2        
                      (./Engine/Macros.a):00089                         jsr   ,x
                      (./Engine/Macros.a):00090                  ENDM
                      (./Engine/Macros.a):00091                 
0000                  (./Engine/Macros.a):00092                 _RunObjectRoutine MACRO 
                      (./Engine/Macros.a):00093                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00094                         ; param 2 : Object routine
                      (./Engine/Macros.a):00095                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00096                         ; this object does not need or have a data structure for this routine
                      (./Engine/Macros.a):00097                         _MountObject \1
                      (./Engine/Macros.a):00098                         lda   \2        
                      (./Engine/Macros.a):00099                         jsr   ,x
                      (./Engine/Macros.a):00100                  ENDM
                      (./Engine/Macros.a):00101                 
0000                  (./Engine/Macros.a):00102                 _asld MACRO
                      (./Engine/Macros.a):00103                         aslb
                      (./Engine/Macros.a):00104                         rola
                      (./Engine/Macros.a):00105                  ENDM        
                      (./Engine/Macros.a):00106                  
0000                  (./Engine/Macros.a):00107                 _asrd MACRO
                      (./Engine/Macros.a):00108                         asra
                      (./Engine/Macros.a):00109                         rorb
                      (./Engine/Macros.a):00110                  ENDM      
                      (./Engine/Macros.a):00111                  
0000                  (./Engine/Macros.a):00112                 _lsld MACRO
                      (./Engine/Macros.a):00113                         lslb
                      (./Engine/Macros.a):00114                         rola
                      (./Engine/Macros.a):00115                  ENDM        
                      (./Engine/Macros.a):00116                  
0000                  (./Engine/Macros.a):00117                 _lsrd MACRO
                      (./Engine/Macros.a):00118                         lsra
                      (./Engine/Macros.a):00119                         rorb
                      (./Engine/Macros.a):00120                  ENDM
                      (./Engine/Macros.a):00121                  
0000                  (./Engine/Macros.a):00122                 _rold MACRO
                      (./Engine/Macros.a):00123                         rolb
                      (./Engine/Macros.a):00124                         rola
                      (./Engine/Macros.a):00125                  ENDM    
                      (./Engine/Macros.a):00126                  
0000                  (./Engine/Macros.a):00127                 _rord MACRO
                      (./Engine/Macros.a):00128                         rora
                      (./Engine/Macros.a):00129                         rorb
                      (./Engine/Macros.a):00130                  ENDM
                      (./Engine/Macros.a):00131                 
0000                  (./Engine/Macros.a):00132                 _negd MACRO
                      (./Engine/Macros.a):00133                         nega
                      (./Engine/Macros.a):00134                         negb
                      (./Engine/Macros.a):00135                         sbca  #0
                      (./Engine/Macros.a):00136                  ENDM
                      (./Engine/Macros.a):00137                 
0000                  (./Engine/Macros.a):00138                 _cba MACRO
                      (./Engine/Macros.a):00139                         pshs  b
                      (./Engine/Macros.a):00140                         cmpa  ,s+
                      (./Engine/Macros.a):00141                  ENDM
                      (./Engine/Macros.a):00142                 
0000                  (./Engine/Macros.a):00143                 _aba MACRO
                      (./Engine/Macros.a):00144                         pshs  b
                      (./Engine/Macros.a):00145                         adda  ,s+
                      (./Engine/Macros.a):00146                  ENDM
                      (./Engine/Macros.a):00147                 
0000                  (./Engine/Macros.a):00148                 _sba MACRO
                      (./Engine/Macros.a):00149                         pshs  b
                      (./Engine/Macros.a):00150                         suba  ,s+
                      (./Engine/Macros.a):00151                  ENDM
                      (./Engine/Macros.a):00152                 
0000                  (./Engine/Macros.a):00153                 _cab MACRO
                      (./Engine/Macros.a):00154                         pshs  a
                      (./Engine/Macros.a):00155                         cmpb  ,s+
                      (./Engine/Macros.a):00156                  ENDM
                      (./Engine/Macros.a):00157                 
0000                  (./Engine/Macros.a):00158                 _aab MACRO
                      (./Engine/Macros.a):00159                         pshs  a
                      (./Engine/Macros.a):00160                         addb  ,s+
                      (./Engine/Macros.a):00161                  ENDM
                      (./Engine/Macros.a):00162                 
0000                  (./Engine/Macros.a):00163                 _sab MACRO
                      (./Engine/Macros.a):00164                         pshs  a
                      (./Engine/Macros.a):00165                         subb  ,s+
                      (./Engine/Macros.a):00166                  ENDM
                      (C:\Users\bhrou\gi):00015                         INCLUDE "./objects/engine/smps/SndID.equ"       
     0002             (./objects/engine/):00001                 SndID_Jump equ   ($A0-$A0)*2+2
     0004             (./objects/engine/):00002                 SndID_Checkpoint equ   ($A1-$A0)*2+2
     0006             (./objects/engine/):00003                 SndID_SpikeSwitch equ   ($A2-$A0)*2+2
     0008             (./objects/engine/):00004                 SndID_Hurt equ   ($A3-$A0)*2+2
     000A             (./objects/engine/):00005                 SndID_Skidding equ   ($A4-$A0)*2+2
     000C             (./objects/engine/):00006                 SndID_BlockPush equ   ($A5-$A0)*2+2
     000E             (./objects/engine/):00007                 SndID_HurtBySpikes equ   ($A6-$A0)*2+2
     0010             (./objects/engine/):00008                 SndID_Sparkle equ   ($A7-$A0)*2+2
     0012             (./objects/engine/):00009                 SndID_Beep equ   ($A8-$A0)*2+2
     0014             (./objects/engine/):00010                 SndID_Bwoop equ   ($A9-$A0)*2+2
     0016             (./objects/engine/):00011                 SndID_Splash equ   ($AA-$A0)*2+2
     0018             (./objects/engine/):00012                 SndID_Swish equ   ($AB-$A0)*2+2
     001A             (./objects/engine/):00013                 SndID_BossHit equ   ($AC-$A0)*2+2
     001C             (./objects/engine/):00014                 SndID_InhalingBubble equ   ($AD-$A0)*2+2
     001E             (./objects/engine/):00015                 SndID_ArrowFiring equ   ($AE-$A0)*2+2
     001E             (./objects/engine/):00016                 SndID_LavaBall equ   ($AE-$A0)*2+2
     0020             (./objects/engine/):00017                 SndID_Shield equ   ($AF-$A0)*2+2
     0022             (./objects/engine/):00018                 SndID_LaserBeam equ   ($B0-$A0)*2+2
     0024             (./objects/engine/):00019                 SndID_Zap equ   ($B1-$A0)*2+2
     0026             (./objects/engine/):00020                 SndID_Drown equ   ($B2-$A0)*2+2
     0028             (./objects/engine/):00021                 SndID_FireBurn equ   ($B3-$A0)*2+2
     002A             (./objects/engine/):00022                 SndID_Bumper equ   ($B4-$A0)*2+2
     002C             (./objects/engine/):00023                 SndID_Ring equ   ($B5-$A0)*2+2
     002C             (./objects/engine/):00024                 SndID_RingRight equ   ($B5-$A0)*2+2
     002E             (./objects/engine/):00025                 SndID_SpikesMove equ   ($B6-$A0)*2+2
     0030             (./objects/engine/):00026                 SndID_Rumbling equ   ($B7-$A0)*2+2
     0034             (./objects/engine/):00027                 SndID_Smash equ   ($B9-$A0)*2+2
     0038             (./objects/engine/):00028                 SndID_DoorSlam equ   ($BB-$A0)*2+2
     003A             (./objects/engine/):00029                 SndID_SpindashRelease equ   ($BC-$A0)*2+2
     003C             (./objects/engine/):00030                 SndID_Hammer equ   ($BD-$A0)*2+2
     003E             (./objects/engine/):00031                 SndID_Roll equ   ($BE-$A0)*2+2
     0040             (./objects/engine/):00032                 SndID_ContinueJingle equ   ($BF-$A0)*2+2
     0042             (./objects/engine/):00033                 SndID_CasinoBonus equ   ($C0-$A0)*2+2
     0044             (./objects/engine/):00034                 SndID_Explosion equ   ($C1-$A0)*2+2
     0046             (./objects/engine/):00035                 SndID_WaterWarning equ   ($C2-$A0)*2+2
     0048             (./objects/engine/):00036                 SndID_EnterGiantRing equ   ($C3-$A0)*2+2
     004A             (./objects/engine/):00037                 SndID_BossExplosion equ   ($C4-$A0)*2+2
     004C             (./objects/engine/):00038                 SndID_TallyEnd equ   ($C5-$A0)*2+2
     004E             (./objects/engine/):00039                 SndID_RingSpill equ   ($C6-$A0)*2+2
     0052             (./objects/engine/):00040                 SndID_Flamethrower equ   ($C8-$A0)*2+2
     0054             (./objects/engine/):00041                 SndID_Bonus equ   ($C9-$A0)*2+2
     0056             (./objects/engine/):00042                 SndID_SpecStageEntry equ   ($CA-$A0)*2+2
     0058             (./objects/engine/):00043                 SndID_SlowSmash equ   ($CB-$A0)*2+2
     005A             (./objects/engine/):00044                 SndID_Spring equ   ($CC-$A0)*2+2
     005C             (./objects/engine/):00045                 SndID_Blip equ   ($CD-$A0)*2+2
     005E             (./objects/engine/):00046                 SndID_RingLeft equ   ($CE-$A0)*2+2
     0060             (./objects/engine/):00047                 SndID_Signpost equ   ($CF-$A0)*2+2
     0062             (./objects/engine/):00048                 SndID_CNZBossZap equ   ($D0-$A0)*2+2
     0068             (./objects/engine/):00049                 SndID_Signpost2P equ   ($D3-$A0)*2+2
     006A             (./objects/engine/):00050                 SndID_OOZLidPop equ   ($D4-$A0)*2+2
     006C             (./objects/engine/):00051                 SndID_SlidingSpike equ   ($D5-$A0)*2+2
     006E             (./objects/engine/):00052                 SndID_CNZElevator equ   ($D6-$A0)*2+2
     0070             (./objects/engine/):00053                 SndID_PlatformKnock equ   ($D7-$A0)*2+2
     0072             (./objects/engine/):00054                 SndID_BonusBumper equ   ($D8-$A0)*2+2
     0074             (./objects/engine/):00055                 SndID_LargeBumper equ   ($D9-$A0)*2+2
     0076             (./objects/engine/):00056                 SndID_Gloop equ   ($DA-$A0)*2+2
     0078             (./objects/engine/):00057                 SndID_PreArrowFiring equ   ($DB-$A0)*2+2
     007A             (./objects/engine/):00058                 SndID_Fire equ   ($DC-$A0)*2+2
     007C             (./objects/engine/):00059                 SndID_ArrowStick equ   ($DD-$A0)*2+2
     007E             (./objects/engine/):00060                 SndID_Helicopter equ   ($DE-$A0)*2+2
     0080             (./objects/engine/):00061                 SndID_SuperTransform equ   ($DF-$A0)*2+2
     0082             (./objects/engine/):00062                 SndID_SpindashRev equ   ($E0-$A0)*2+2
     0084             (./objects/engine/):00063                 SndID_Rumbling2 equ   ($E1-$A0)*2+2
     0086             (./objects/engine/):00064                 SndID_CNZLaunch equ   ($E2-$A0)*2+2
     0088             (./objects/engine/):00065                 SndID_Flipper equ   ($E3-$A0)*2+2
     008A             (./objects/engine/):00066                 SndID_HTZLiftClick equ   ($E4-$A0)*2+2
     008C             (./objects/engine/):00067                 SndID_Leaves equ   ($E5-$A0)*2+2
     008E             (./objects/engine/):00068                 SndID_MegaMackDrop equ   ($E6-$A0)*2+2
     0090             (./objects/engine/):00069                 SndID_DrawbridgeMove equ   ($E7-$A0)*2+2
     0092             (./objects/engine/):00070                 SndID_QuickDoorSlam equ   ($E8-$A0)*2+2
     0094             (./objects/engine/):00071                 SndID_DrawbridgeDown equ   ($E9-$A0)*2+2
     0096             (./objects/engine/):00072                 SndID_LaserBurst equ   ($EA-$A0)*2+2
     0098             (./objects/engine/):00073                 SndID_Scatter equ   ($EB-$A0)*2+2
     0098             (./objects/engine/):00074                 SndID_LaserFloor equ   ($EB-$A0)*2+2
     009A             (./objects/engine/):00075                 SndID_Teleport equ   ($EC-$A0)*2+2
     009C             (./objects/engine/):00076                 SndID_Error equ   ($ED-$A0)*2+2
     009E             (./objects/engine/):00077                 SndID_MechaSonicBuzz equ   ($EE-$A0)*2+2
     00A0             (./objects/engine/):00078                 SndID_LargeLaser equ   ($EF-$A0)*2+2
     00A2             (./objects/engine/):00079                 SndID_OilSlide equ   ($F0-$A0)*2+2
                      (C:\Users\bhrou\gi):00016                         org   $6100
                      (C:\Users\bhrou\gi):00017                         INCLUDE "./Engine/InitGlobals.asm"      
                      (./Engine/InitGlob):00001                 
6100 CC0000           (./Engine/InitGlob):00002 [3]     3               ldd   #0
                      (./Engine/InitGlob):00003                 
                      (./Engine/InitGlob):00004                 ; compilated sprite
6103 FD9FFE           (./Engine/InitGlob):00005 [6]     9               std   glb_register_s
                      (./Engine/InitGlob):00006                 
                      (./Engine/InitGlob):00007                 ; DrawSprites
6106 FD9FFC           (./Engine/InitGlob):00008 [6]     15              std   glb_screen_location_1
6109 FD9FFA           (./Engine/InitGlob):00009 [6]     21              std   glb_screen_location_2
                      (./Engine/InitGlob):00010                 
                      (./Engine/InitGlob):00011                 ; CheckSpritesRefresh
610C FD9FF9           (./Engine/InitGlob):00012 [6]     27              std   glb_cur_priority         
610F FD9FF7           (./Engine/InitGlob):00013 [6]     33              std   glb_cur_ptr_sub_obj_erase
6112 FD9FF5           (./Engine/InitGlob):00014 [6]     39              std   glb_cur_ptr_sub_obj_draw 
6115 FD9FF3           (./Engine/InitGlob):00015 [6]     45              std   glb_camera_x_pos         
6118 FD9FF1           (./Engine/InitGlob):00016 [6]     51              std   glb_camera_y_pos         
611B B79FE8           (./Engine/InitGlob):00017 [5]     56              sta   glb_force_sprite_refresh
611E B79FE7           (./Engine/InitGlob):00018 [5]     61              sta   glb_camera_move
6121 B79FE6           (./Engine/InitGlob):00019 [5]     66              sta   glb_alphaTiles
                      (C:\Users\bhrou\gi):00018                 
6124 BD985D           (C:\Users\bhrou\gi):00019 [8]     74              jsr   LoadAct       
6127 BD800C           (C:\Users\bhrou\gi):00020 [8]     82              jsr   ReadJoypads
                      (C:\Users\bhrou\gi):00021                 
612A                  (C:\Users\bhrou\gi):00022                 LevelSizeLoad ; todo move to an object
                      (C:\Users\bhrou\gi):00023                 
612A CE639B           (C:\Users\bhrou\gi):00024 [3]     85              ldu   #MainCharacter
612D CC0060           (C:\Users\bhrou\gi):00025 [3]     88              ldd   #screen_left+$60/2
6130 ED4E             (C:\Users\bhrou\gi):00026 [6]     94              std   x_pos,u
6132 CC02BF           (C:\Users\bhrou\gi):00027 [3]     97              ldd   #screen_top+20+$028F
6135 EDC811           (C:\Users\bhrou\gi):00028 [6]     103             std   y_pos,u
                      (C:\Users\bhrou\gi):00029                 
6138 CC0070           (C:\Users\bhrou\gi):00030 [3]     106             ldd   #camera_Y_pos_bias_default
613B FD6F6E           (C:\Users\bhrou\gi):00031 [6]     112             std   Camera_Y_pos_bias
                      (C:\Users\bhrou\gi):00032                 
613E CC0000           (C:\Users\bhrou\gi):00033 [3]     115             ldd   #0
6141 DDF3             (C:\Users\bhrou\gi):00034 [5]     120             std   <glb_camera_x_pos
6143 ECC811           (C:\Users\bhrou\gi):00035 [6]     126             ldd   y_pos,u
6146 B36F6E           (C:\Users\bhrou\gi):00036 [7]     133             subd  Camera_Y_pos_bias
6149 DDF1             (C:\Users\bhrou\gi):00037 [5]     138             std   <glb_camera_y_pos
                      (C:\Users\bhrou\gi):00038                 
                      (C:\Users\bhrou\gi):00039                         ; global speed setting, animation and movement scale
614B 8605             (C:\Users\bhrou\gi):00040 [2]     140             lda   #5
614D B7703F           (C:\Users\bhrou\gi):00041 [5]     145             sta   Vint_Main_runcount_cap
                      (C:\Users\bhrou\gi):00042                 
                      (C:\Users\bhrou\gi):00043                         _RunObjectRoutine ObjID_EHZ,#0
                      (_RunObjectRoutine):00001                         _MountObject ObjID_EHZ
6150 B69822           (     _MountObject):00001 [5]     150             lda   Obj_Index_Page+ObjID_EHZ
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
6153 B7E7E6           (    _SetCartPageA):00004 [5]     155             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6156 BE982B           (     _MountObject):00003 [6]     161             ldx   Obj_Index_Address+2*ObjID_EHZ
6159 8600             (_RunObjectRoutine):00002 [2]     163             lda   #0        
615B AD84             (_RunObjectRoutine):00003 [7]     170             jsr   ,x
                      (C:\Users\bhrou\gi):00044                 
                      (C:\Users\bhrou\gi):00045                         ; init tile buffer based on camera pos
615D BD8353           (C:\Users\bhrou\gi):00046 [8]     178             jsr   InitTileBuffer
                      (C:\Users\bhrou\gi):00047                 
                      (C:\Users\bhrou\gi):00048                         ; init Animated tiles
6160 8E62D0           (C:\Users\bhrou\gi):00049 [3]     181             ldx   #Animated_EHZ_script
6163 BD6261           (C:\Users\bhrou\gi):00050 [8]     189             jsr   TileAnimScriptInit
                      (C:\Users\bhrou\gi):00051                 
6166 8601             (C:\Users\bhrou\gi):00052 [2]     191             lda   #$01                     ; 1: play 60hz track at 50hz, 0: do not skip frames
6168 B781ED           (C:\Users\bhrou\gi):00053 [5]     196             sta   Smps.60HzData 
                      (C:\Users\bhrou\gi):00054                         _RunObjectRoutine ObjID_Smps,#0 ; YM2413_DrumModeOn
                      (_RunObjectRoutine):00001                         _MountObject ObjID_Smps
616B B69825           (     _MountObject):00001 [5]     201             lda   Obj_Index_Page+ObjID_Smps
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
616E B7E7E6           (    _SetCartPageA):00004 [5]     206             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6171 BE9831           (     _MountObject):00003 [6]     212             ldx   Obj_Index_Address+2*ObjID_Smps
6174 8600             (_RunObjectRoutine):00002 [2]     214             lda   #0        
6176 AD84             (_RunObjectRoutine):00003 [7]     221             jsr   ,x
6178 C602             (C:\Users\bhrou\gi):00055 [2]     223             ldb   #2                        ; music id
                      (C:\Users\bhrou\gi):00056                         _RunObjectRoutine ObjID_Smps,#2 ; PlayMusic 
                      (_RunObjectRoutine):00001                         _MountObject ObjID_Smps
617A B69825           (     _MountObject):00001 [5]     228             lda   Obj_Index_Page+ObjID_Smps
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
617D B7E7E6           (    _SetCartPageA):00004 [5]     233             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6180 BE9831           (     _MountObject):00003 [6]     239             ldx   Obj_Index_Address+2*ObjID_Smps
6183 8602             (_RunObjectRoutine):00002 [2]     241             lda   #2        
6185 AD84             (_RunObjectRoutine):00003 [7]     248             jsr   ,x
                      (C:\Users\bhrou\gi):00057                 
                      (C:\Users\bhrou\gi):00058                         ; start music
6187 BD81EE           (C:\Users\bhrou\gi):00059 [8]     256             jsr   IrqSet50Hz 
                      (C:\Users\bhrou\gi):00060                 
                      (C:\Users\bhrou\gi):00061                 * ==============================================================================
                      (C:\Users\bhrou\gi):00062                 * Main Loop
                      (C:\Users\bhrou\gi):00063                 * ==============================================================================
618A                  (C:\Users\bhrou\gi):00064                 LevelMainLoop
618A BD6FE2           (C:\Users\bhrou\gi):00065 [8]     264             jsr   WaitVBL    
618D BD6289           (C:\Users\bhrou\gi):00066 [8]     272             jsr   TileAnimScript
6190 BD800C           (C:\Users\bhrou\gi):00067 [8]     280             jsr   ReadJoypads  
                      (C:\Users\bhrou\gi):00068                         _RunObject ObjID_Sonic,#MainCharacter 
                      (       _RunObject):00001                         _MountObject ObjID_Sonic
6193 B69824           (     _MountObject):00001 [5]     285             lda   Obj_Index_Page+ObjID_Sonic
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
6196 B7E7E6           (    _SetCartPageA):00004 [5]     290             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6199 BE982F           (     _MountObject):00003 [6]     296             ldx   Obj_Index_Address+2*ObjID_Sonic
619C CE639B           (       _RunObject):00002 [3]     299             ldu   #MainCharacter        
619F AD84             (       _RunObject):00003 [7]     306             jsr   ,x
                      (C:\Users\bhrou\gi):00069                         _RunObject ObjID_Scroll,#MainCharacter   
                      (       _RunObject):00001                         _MountObject ObjID_Scroll
61A1 B69823           (     _MountObject):00001 [5]     311             lda   Obj_Index_Page+ObjID_Scroll
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
61A4 B7E7E6           (    _SetCartPageA):00004 [5]     316             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
61A7 BE982D           (     _MountObject):00003 [6]     322             ldx   Obj_Index_Address+2*ObjID_Scroll
61AA CE639B           (       _RunObject):00002 [3]     325             ldu   #MainCharacter        
61AD AD84             (       _RunObject):00003 [7]     332             jsr   ,x
61AF BD8073           (C:\Users\bhrou\gi):00070 [8]     340             jsr   RunObjects
61B2 BD61D2           (C:\Users\bhrou\gi):00071 [8]     348             jsr   ForceRefresh
61B5 BD7386           (C:\Users\bhrou\gi):00072 [8]     356             jsr   CheckSpritesRefresh
61B8 BD7A90           (C:\Users\bhrou\gi):00073 [8]     364             jsr   EraseSprites
61BB BD7CF6           (C:\Users\bhrou\gi):00074 [8]     372             jsr   UnsetDisplayPriority
61BE BD61DA           (C:\Users\bhrou\gi):00075 [8]     380             jsr   EHZ_Back
61C1 BD8364           (C:\Users\bhrou\gi):00076 [8]     388             jsr   ComputeTileBuffer
61C4 BD860F           (C:\Users\bhrou\gi):00077 [8]     396             jsr   DrawBufferedTile
61C7 BD7DD5           (C:\Users\bhrou\gi):00078 [8]     404             jsr   DrawSprites
61CA BD871A           (C:\Users\bhrou\gi):00079 [8]     412             jsr   DrawHighPriorityBufferedTile    
61CD BD6206           (C:\Users\bhrou\gi):00080 [8]     420             jsr   EHZ_Mask
61D0 20B8             (C:\Users\bhrou\gi):00081 [3]     423             bra   LevelMainLoop
                      (C:\Users\bhrou\gi):00082                 
61D2                  (C:\Users\bhrou\gi):00083                 ForceRefresh
                      (C:\Users\bhrou\gi):00084                         ; Force sprite to be refreshed when background changes
                      (C:\Users\bhrou\gi):00085                         ; ----------------------------------------------------
61D2 8601             (C:\Users\bhrou\gi):00086 [2]     425             lda   #1
61D4 97E8             (C:\Users\bhrou\gi):00087 [4]     429             sta   <glb_force_sprite_refresh
61D6 B79FE7           (C:\Users\bhrou\gi):00088 [5]     434             sta   glb_camera_move
61D9 39               (C:\Users\bhrou\gi):00089 [5]     439             rts
                      (C:\Users\bhrou\gi):00090                 
61DA                  (C:\Users\bhrou\gi):00091                 EHZ_Back
61DA B69FE7           (C:\Users\bhrou\gi):00092 [5]     444             lda   glb_camera_move
61DD 2601             (C:\Users\bhrou\gi):00093 [3]     447             bne   @a
61DF 39               (C:\Users\bhrou\gi):00094 [5]     452             rts
61E0                  (C:\Users\bhrou\gi):00095                 @a
                      (C:\Users\bhrou\gi):00096                 
                      (C:\Users\bhrou\gi):00097                         ; this is not perfect as it will cause a tiny glitch (nearly unoticable)
                      (C:\Users\bhrou\gi):00098                         ; will not refresh background if last frame was made 
                      (C:\Users\bhrou\gi):00099                         ; will only non alpha tiles, not the new one ...
61E0 B69FE6           (C:\Users\bhrou\gi):00100 [5]     457             lda   glb_alphaTiles
61E3 2601             (C:\Users\bhrou\gi):00101 [3]     460             bne   @a
61E5 39               (C:\Users\bhrou\gi):00102 [5]     465             rts
61E6                  (C:\Users\bhrou\gi):00103                 @a
61E6 8600             (C:\Users\bhrou\gi):00104 [2]     467             lda   #0
61E8 B79FE6           (C:\Users\bhrou\gi):00105 [5]     472             sta   glb_alphaTiles
                      (C:\Users\bhrou\gi):00106                 
                      (C:\Users\bhrou\gi):00107                         _RunObjectRoutine ObjID_EHZ_Back,#0
                      (_RunObjectRoutine):00001                         _MountObject ObjID_EHZ_Back
61EB B69826           (     _MountObject):00001 [5]     477             lda   Obj_Index_Page+ObjID_EHZ_Back
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
61EE B7E7E6           (    _SetCartPageA):00004 [5]     482             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
61F1 BE9833           (     _MountObject):00003 [6]     488             ldx   Obj_Index_Address+2*ObjID_EHZ_Back
61F4 8600             (_RunObjectRoutine):00002 [2]     490             lda   #0        
61F6 AD84             (_RunObjectRoutine):00003 [7]     497             jsr   ,x
                      (C:\Users\bhrou\gi):00108                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
61F8 B7E7E6           (    _SetCartPageA):00004 [5]     502             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (C:\Users\bhrou\gi):00109                 
                      (C:\Users\bhrou\gi):00110                         ; get image location, this code works for a ND0 only image
                      (C:\Users\bhrou\gi):00111                         ; please adapt metadata decoding if you want another image
61FB A60D             (C:\Users\bhrou\gi):00112 [5]     507             lda   13,x
61FD AE0E             (C:\Users\bhrou\gi):00113 [6]     513             ldx   14,x
                      (C:\Users\bhrou\gi):00114                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
61FF B7E7E6           (    _SetCartPageA):00004 [5]     518             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6202 DEFA             (C:\Users\bhrou\gi):00115 [5]     523             ldu   <glb_screen_location_2
6204 6E84             (C:\Users\bhrou\gi):00116 [3]     526             jmp   ,x
                      (C:\Users\bhrou\gi):00117                 
6206                  (C:\Users\bhrou\gi):00118                 EHZ_Mask
                      (C:\Users\bhrou\gi):00119                         _RunObjectRoutine ObjID_EHZ_Mask,#0
                      (_RunObjectRoutine):00001                         _MountObject ObjID_EHZ_Mask
6206 B69821           (     _MountObject):00001 [5]     531             lda   Obj_Index_Page+ObjID_EHZ_Mask
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
6209 B7E7E6           (    _SetCartPageA):00004 [5]     536             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
620C BE9829           (     _MountObject):00003 [6]     542             ldx   Obj_Index_Address+2*ObjID_EHZ_Mask
620F 8600             (_RunObjectRoutine):00002 [2]     544             lda   #0        
6211 AD84             (_RunObjectRoutine):00003 [7]     551             jsr   ,x
                      (C:\Users\bhrou\gi):00120                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
6213 B7E7E6           (    _SetCartPageA):00004 [5]     556             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (C:\Users\bhrou\gi):00121                 
                      (C:\Users\bhrou\gi):00122                         ; get image location, this code works for a ND0 only image
                      (C:\Users\bhrou\gi):00123                         ; please adapt metadata decoding if you want another image
6216 A60D             (C:\Users\bhrou\gi):00124 [5]     561             lda   13,x
6218 AE0E             (C:\Users\bhrou\gi):00125 [6]     567             ldx   14,x
                      (C:\Users\bhrou\gi):00126                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
621A B7E7E6           (    _SetCartPageA):00004 [5]     572             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
621D DEFA             (C:\Users\bhrou\gi):00127 [5]     577             ldu   <glb_screen_location_2
621F 6E84             (C:\Users\bhrou\gi):00128 [3]     580             jmp   ,x
                      (C:\Users\bhrou\gi):00129                 
                      (C:\Users\bhrou\gi):00130                         INCLUDE "./Engine/Graphics/Tilemap/TileAnimScript.asm"  
                      (./Engine/Graphics):00001                 ; ===========================================================================
                      (./Engine/Graphics):00002                 ; ZONE ANIMATION SCRIPTS - TODO mettre dans une lib
                      (./Engine/Graphics):00003                 ;
                      (./Engine/Graphics):00004                 
     0000             (./Engine/Graphics):00005                 ZACurIndex equ   0 ; current index in animation script
     0001             (./Engine/Graphics):00006                 ZACurFrame equ   1 ; current frame in animation
     0002             (./Engine/Graphics):00007                 ZADuration equ   2 ; remaining duration of current frame (20ms by step)
     0003             (./Engine/Graphics):00008                 ZAMaxFrame equ   3 ; max index in animation script
     0004             (./Engine/Graphics):00009                 ZASize     equ   4 ; size of this data structure
6221                  (./Engine/Graphics):00010                 TileAnimScriptData
6221 0000000000000000 (./Engine/Graphics):00011                         fill  0,16*ZASize
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (./Engine/Graphics):00012                 
6261                  (./Engine/Graphics):00013                 TileAnimScriptInit
6261 BF628A           (./Engine/Graphics):00014 [6]     586             stx   TileAnimScriptList
6264 CE6221           (./Engine/Graphics):00015 [3]     589             ldu   #TileAnimScriptData
6267 10AE81           (./Engine/Graphics):00016 [9]     598     @loop   ldy   ,x++
626A 271C             (./Engine/Graphics):00017 [3]     601             beq   @rts
626C ECA4             (./Engine/Graphics):00018 [5]     606             ldd   ,y                       ; load global frame duration, number of frames in animation
626E 2A09             (./Engine/Graphics):00019 [3]     609             bpl   @globalduration
6270 E743             (./Engine/Graphics):00020 [5]     614             stb   ZAMaxFrame,u
6272 EC22             (./Engine/Graphics):00021 [6]     620             ldd   2,y
6274 5C               (./Engine/Graphics):00022 [2]     622             incb
6275 ED41             (./Engine/Graphics):00023 [6]     628             std   ZACurFrame,u             ; and ZADuration
6277 2007             (./Engine/Graphics):00024 [3]     631             bra   @common 
6279                  (./Engine/Graphics):00025                 @globalduration
6279 4C               (./Engine/Graphics):00026 [2]     633             inca
627A ED42             (./Engine/Graphics):00027 [6]     639             std   ZADuration,u             ; and ZAMaxFrame
627C A622             (./Engine/Graphics):00028 [5]     644             lda   2,y
627E A741             (./Engine/Graphics):00029 [5]     649             sta   ZACurFrame,u
6280 8600             (./Engine/Graphics):00030 [2]     651     @common lda   #0
6282 A7C4             (./Engine/Graphics):00031 [4]     655             sta   ZACurIndex,u
6284 3344             (./Engine/Graphics):00032 [5]     660             leau  ZASize,u
6286 20DF             (./Engine/Graphics):00033 [3]     663             bra   @loop
6288 39               (./Engine/Graphics):00034 [5]     668     @rts    rts
                      (./Engine/Graphics):00035                 
6289                  (./Engine/Graphics):00036                 TileAnimScript
6289 8E0000           (./Engine/Graphics):00037 [3]     671             ldx   #0                       ; (dynamic)
     628A             (./Engine/Graphics):00038                 TileAnimScriptList equ *-2
628C 2739             (./Engine/Graphics):00039 [3]     674             beq   @rts                     ; no animation script to process
628E CE6221           (./Engine/Graphics):00040 [3]     677             ldu   #TileAnimScriptData
6291 10AE81           (./Engine/Graphics):00041 [9]     686     @loop   ldy   ,x++                     ; process a script
6294 2731             (./Engine/Graphics):00042 [3]     689             beq   @rts                     ; at the end of script list ?
6296 A642             (./Engine/Graphics):00043 [5]     694             lda   ZADuration,u
6298 B0703E           (./Engine/Graphics):00044 [5]     699             suba  Vint_Main_runcount       ; tick down animation frame in sync with elapsed 50hz IRQ
629B 2506             (./Engine/Graphics):00045 [3]     702             bcs   @loadScript
629D A742             (./Engine/Graphics):00046 [5]     707             sta   ZADuration,u             ; animation is not over
629F 3344             (./Engine/Graphics):00047 [5]     712             leau  ZASize,u
62A1 20EE             (./Engine/Graphics):00048 [3]     715             bra   @loop
62A3                  (./Engine/Graphics):00049                 @loadScript
62A3 A6C4             (./Engine/Graphics):00050 [4]     719             lda   ZACurIndex,u             ; animation frame is over, load next one
62A5 4C               (./Engine/Graphics):00051 [2]     721             inca  
62A6 A143             (./Engine/Graphics):00052 [5]     726             cmpa  ZAMaxFrame,u             ; at the end of script ?
62A8 2602             (./Engine/Graphics):00053 [3]     729             bne   @a                       ; if not continue
62AA 8600             (./Engine/Graphics):00054 [2]     731             lda   #0                       ; otherwise reset animation
62AC A7C4             (./Engine/Graphics):00055 [4]     735     @a      sta   ZACurIndex,u             ; save new index
62AE E621             (./Engine/Graphics):00056 [5]     740             ldb   1,y
62B0 E743             (./Engine/Graphics):00057 [5]     745             stb   ZAMaxFrame,u
62B2 E6A4             (./Engine/Graphics):00058 [4]     749             ldb   ,y                       ; load global frame duration
62B4 2A07             (./Engine/Graphics):00059 [3]     752             bpl   @globalduration
62B6 48               (./Engine/Graphics):00060 [2]     754             asla                           ; 2 data bytes per index
62B7 8B02             (./Engine/Graphics):00061 [2]     756             adda  #2                       ; skip header
62B9 ECA6             (./Engine/Graphics):00062 [6]     762             ldd   a,y
62BB 2004             (./Engine/Graphics):00063 [3]     765             bra   @b 
62BD                  (./Engine/Graphics):00064                 @globalduration
62BD 8B02             (./Engine/Graphics):00065 [2]     767             adda  #2                       ; skip header
62BF A6A6             (./Engine/Graphics):00066 [5]     772             lda   a,y
62C1 ED41             (./Engine/Graphics):00067 [6]     778     @b      std   ZACurFrame,u             ; and ZADuration
62C3 3344             (./Engine/Graphics):00068 [5]     783             leau  ZASize,u
62C5 20CA             (./Engine/Graphics):00069 [3]     786             bra   @loop
62C7 39               (./Engine/Graphics):00070 [5]     791     @rts    rts
                      (./Engine/Graphics):00071                 
62C8                  (./Engine/Graphics):00072                 TileAnimRun
62C8 E686             (./Engine/Graphics):00073 [5]     796             ldb   a,x
62CA F7E7E6           (./Engine/Graphics):00074 [5]     801             stb   $E7E6
62CD 4C               (./Engine/Graphics):00075 [2]     803             inca
62CE 6E96             (./Engine/Graphics):00076 [7]     810             jmp   [a,x]
                      (C:\Users\bhrou\gi):00131                 
                      (C:\Users\bhrou\gi):00132                 ; ===========================================================================
                      (C:\Users\bhrou\gi):00133                 ; for each script :
                      (C:\Users\bhrou\gi):00134                 ;       - Global frame duration. If -1, then each frame will use its own duration, instead
                      (C:\Users\bhrou\gi):00135                 ;       - Number of frames
                      (C:\Users\bhrou\gi):00136                 ;       - Tile ID
                      (C:\Users\bhrou\gi):00137                 ;       - Frame duration. Only here if global duration is -1
                      (C:\Users\bhrou\gi):00138                 
62D0                  (C:\Users\bhrou\gi):00139                 Animated_EHZ_script
62D0 62DC             (C:\Users\bhrou\gi):00140                         fdb   Animated_EHZ_1
62D2 62EA             (C:\Users\bhrou\gi):00141                         fdb   Animated_EHZ_2
62D4 62FC             (C:\Users\bhrou\gi):00142                         fdb   Animated_EHZ_3
62D6 6300             (C:\Users\bhrou\gi):00143                         fdb   Animated_EHZ_4
62D8 6312             (C:\Users\bhrou\gi):00144                         fdb   Animated_EHZ_5
62DA 0000             (C:\Users\bhrou\gi):00145                         fdb   0
                      (C:\Users\bhrou\gi):00146                 
62DC                  (C:\Users\bhrou\gi):00147                 Animated_EHZ_1
                      (C:\Users\bhrou\gi):00148                         ; Flowers 1
62DC FF06             (C:\Users\bhrou\gi):00149                         fcb   -1,6
62DE 007F             (C:\Users\bhrou\gi):00150                         fcb   0,127
62E0 0313             (C:\Users\bhrou\gi):00151                         fcb   3,19
62E2 0007             (C:\Users\bhrou\gi):00152                         fcb   0,7
62E4 0307             (C:\Users\bhrou\gi):00153                         fcb   3,7
62E6 0007             (C:\Users\bhrou\gi):00154                         fcb   0,7
62E8 0307             (C:\Users\bhrou\gi):00155                         fcb   3,7
62EA                  (C:\Users\bhrou\gi):00156                 Animated_EHZ_2
                      (C:\Users\bhrou\gi):00157                         ; Flowers 2
62EA FF08             (C:\Users\bhrou\gi):00158                         fcb  -1,8
62EC 037F             (C:\Users\bhrou\gi):00159                         fcb   3,127
62EE 000B             (C:\Users\bhrou\gi):00160                         fcb   0,11
62F0 030B             (C:\Users\bhrou\gi):00161                         fcb   3,11
62F2 000B             (C:\Users\bhrou\gi):00162                         fcb   0,11
62F4 0305             (C:\Users\bhrou\gi):00163                         fcb   3,5
62F6 0005             (C:\Users\bhrou\gi):00164                         fcb   0,5
62F8 0305             (C:\Users\bhrou\gi):00165                         fcb   3,5
62FA 0005             (C:\Users\bhrou\gi):00166                         fcb   0,5
62FC                  (C:\Users\bhrou\gi):00167                 Animated_EHZ_3
                      (C:\Users\bhrou\gi):00168                         ; Flowers 3
62FC 0702             (C:\Users\bhrou\gi):00169                         fcb   7,2
62FE 00               (C:\Users\bhrou\gi):00170                         fcb   0
62FF 03               (C:\Users\bhrou\gi):00171                         fcb   3
6300                  (C:\Users\bhrou\gi):00172                 Animated_EHZ_4
                      (C:\Users\bhrou\gi):00173                         ; Flowers 4
6300 FF08             (C:\Users\bhrou\gi):00174                         fcb   -1,8
6302 007F             (C:\Users\bhrou\gi):00175                         fcb   0,127
6304 0307             (C:\Users\bhrou\gi):00176                         fcb   3,7
6306 0007             (C:\Users\bhrou\gi):00177                         fcb   0,7
6308 0307             (C:\Users\bhrou\gi):00178                         fcb   3,7
630A 0007             (C:\Users\bhrou\gi):00179                         fcb   0,7
630C 030B             (C:\Users\bhrou\gi):00180                         fcb   3,11
630E 000B             (C:\Users\bhrou\gi):00181                         fcb   0,11
6310 030B             (C:\Users\bhrou\gi):00182                         fcb   3,11
6312                  (C:\Users\bhrou\gi):00183                 Animated_EHZ_5
                      (C:\Users\bhrou\gi):00184                         ; Pulsing thing against checkered background
6312 FF06             (C:\Users\bhrou\gi):00185                         fcb   -1,6
6314 007F             (C:\Users\bhrou\gi):00186                         fcb   0,127
6316 0309             (C:\Users\bhrou\gi):00187                         fcb   3,9
6318 060B             (C:\Users\bhrou\gi):00188                         fcb   6,11
631A 0917             (C:\Users\bhrou\gi):00189                         fcb   9,23
631C 060B             (C:\Users\bhrou\gi):00190                         fcb   6,11
631E 0309             (C:\Users\bhrou\gi):00191                         fcb   3,9
                      (C:\Users\bhrou\gi):00192                 
6320                  (C:\Users\bhrou\gi):00193                 TlsAni_EHZ_flower1
6320 B66222           (C:\Users\bhrou\gi):00194 [5]     815             lda   TileAnimScriptData+0*ZASize+1
6323 8E6329           (C:\Users\bhrou\gi):00195 [3]     818             ldx   #TlsAni_EHZ_flower1_imgs
6326 7E62C8           (C:\Users\bhrou\gi):00196 [4]     822             jmp   TileAnimRun
6329                  (C:\Users\bhrou\gi):00197                 TlsAni_EHZ_flower1_imgs
6329                  (C:\Users\bhrou\gi):00198                 gentag_17
6329 000000000000     (C:\Users\bhrou\gi):00199                         fill  0,6
                      (C:\Users\bhrou\gi):00200                 
632F                  (C:\Users\bhrou\gi):00201                 TlsAni_EHZ_flower2
632F B66226           (C:\Users\bhrou\gi):00202 [5]     827             lda   TileAnimScriptData+1*ZASize+1
6332 8E6338           (C:\Users\bhrou\gi):00203 [3]     830             ldx   #TlsAni_EHZ_flower2_imgs
6335 7E62C8           (C:\Users\bhrou\gi):00204 [4]     834             jmp   TileAnimRun
6338                  (C:\Users\bhrou\gi):00205                 TlsAni_EHZ_flower2_imgs
6338                  (C:\Users\bhrou\gi):00206                 gentag_18
6338 000000000000     (C:\Users\bhrou\gi):00207                         fill  0,6
                      (C:\Users\bhrou\gi):00208                 
633E                  (C:\Users\bhrou\gi):00209                 TlsAni_EHZ_flower3
633E B6622A           (C:\Users\bhrou\gi):00210 [5]     839             lda   TileAnimScriptData+2*ZASize+1
6341 8E6347           (C:\Users\bhrou\gi):00211 [3]     842             ldx   #TlsAni_EHZ_flower3_imgs
6344 7E62C8           (C:\Users\bhrou\gi):00212 [4]     846             jmp   TileAnimRun
6347                  (C:\Users\bhrou\gi):00213                 TlsAni_EHZ_flower3_imgs
6347                  (C:\Users\bhrou\gi):00214                 gentag_19
6347 000000000000     (C:\Users\bhrou\gi):00215                         fill  0,6
                      (C:\Users\bhrou\gi):00216                 
634D                  (C:\Users\bhrou\gi):00217                 TlsAni_EHZ_flower4
634D B6622E           (C:\Users\bhrou\gi):00218 [5]     851             lda   TileAnimScriptData+3*ZASize+1
6350 8E6356           (C:\Users\bhrou\gi):00219 [3]     854             ldx   #TlsAni_EHZ_flower4_imgs
6353 7E62C8           (C:\Users\bhrou\gi):00220 [4]     858             jmp   TileAnimRun
6356                  (C:\Users\bhrou\gi):00221                 TlsAni_EHZ_flower4_imgs
6356                  (C:\Users\bhrou\gi):00222                 gentag_20
6356 000000000000     (C:\Users\bhrou\gi):00223                         fill  0,6
                      (C:\Users\bhrou\gi):00224                 
635C                  (C:\Users\bhrou\gi):00225                 TlsAni_EHZ_pulseball1
635C B66232           (C:\Users\bhrou\gi):00226 [5]     863             lda   TileAnimScriptData+4*ZASize+1
635F 8E6365           (C:\Users\bhrou\gi):00227 [3]     866             ldx   #TlsAni_EHZ_pulseball1_imgs
6362 7E62C8           (C:\Users\bhrou\gi):00228 [4]     870             jmp   TileAnimRun
6365                  (C:\Users\bhrou\gi):00229                 TlsAni_EHZ_pulseball1_imgs
6365                  (C:\Users\bhrou\gi):00230                 gentag_21
6365 0000000000000000 (C:\Users\bhrou\gi):00231                         fill  0,12
     00000000
                      (C:\Users\bhrou\gi):00232                 
6371                  (C:\Users\bhrou\gi):00233                 TlsAni_EHZ_pulseball2
6371 B66232           (C:\Users\bhrou\gi):00234 [5]     875             lda   TileAnimScriptData+4*ZASize+1
6374 8E637A           (C:\Users\bhrou\gi):00235 [3]     878             ldx   #TlsAni_EHZ_pulseball2_imgs
6377 7E62C8           (C:\Users\bhrou\gi):00236 [4]     882             jmp   TileAnimRun
637A                  (C:\Users\bhrou\gi):00237                 TlsAni_EHZ_pulseball2_imgs
637A                  (C:\Users\bhrou\gi):00238                 gentag_22
637A 0000000000000000 (C:\Users\bhrou\gi):00239                         fill  0,12
     00000000
                      (C:\Users\bhrou\gi):00240                 
6386                  (C:\Users\bhrou\gi):00241                 TlsAni_EHZ_pulseball3
6386 B66232           (C:\Users\bhrou\gi):00242 [5]     887             lda   TileAnimScriptData+4*ZASize+1
6389 8E638F           (C:\Users\bhrou\gi):00243 [3]     890             ldx   #TlsAni_EHZ_pulseball3_imgs
638C 7E62C8           (C:\Users\bhrou\gi):00244 [4]     894             jmp   TileAnimRun
638F                  (C:\Users\bhrou\gi):00245                 TlsAni_EHZ_pulseball3_imgs
638F                  (C:\Users\bhrou\gi):00246                 gentag_23
638F 0000000000000000 (C:\Users\bhrou\gi):00247                         fill  0,12
     00000000
                      (C:\Users\bhrou\gi):00248                 
                      (C:\Users\bhrou\gi):00249                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00250                 * Game Mode RAM variables
                      (C:\Users\bhrou\gi):00251                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00252                         
                      (C:\Users\bhrou\gi):00253                         INCLUDE "./game-mode/EHZ/ram-data.asm"       
                      (./game-mode/EHZ/r):00001                 * ===========================================================================
                      (./game-mode/EHZ/r):00002                 * Object Constants
                      (./game-mode/EHZ/r):00003                 * ===========================================================================
                      (./game-mode/EHZ/r):00004                 
     0001             (./game-mode/EHZ/r):00005                 nb_reserved_objects               equ 1
     001D             (./game-mode/EHZ/r):00006                 nb_dynamic_objects                equ 29
     0000             (./game-mode/EHZ/r):00007                 nb_level_objects                  equ 0
     001E             (./game-mode/EHZ/r):00008                 nb_graphical_objects              equ 30 * max 64 total
                      (./game-mode/EHZ/r):00009                 
                      (./game-mode/EHZ/r):00010                 * ===========================================================================
                      (./game-mode/EHZ/r):00011                 * Object Status Table - OST
                      (./game-mode/EHZ/r):00012                 * ===========================================================================
                      (./game-mode/EHZ/r):00013                  
639B                  (./game-mode/EHZ/r):00014                 Reserved_Object_RAM
639B 04               (./game-mode/EHZ/r):00015                 MainCharacter                 fcb   ObjID_Sonic
639C 0000000000000000 (./game-mode/EHZ/r):00016                                               fill  0,main_object_size-1
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
                      (./game-mode/EHZ/r):00017                 ;Sidekick                      fill  0,main_object_size
641A                  (./game-mode/EHZ/r):00018                 Reserved_Object_RAM_End
641A                  (./game-mode/EHZ/r):00019                 Object_RAM
641A 0000000000000000 (./game-mode/EHZ/r):00020                 Dynamic_Object_RAM            fill  0,nb_dynamic_objects*object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
6F6E                  (./game-mode/EHZ/r):00021                 Dynamic_Object_RAM_End
                      (./game-mode/EHZ/r):00022                 
6F6E                  (./game-mode/EHZ/r):00023                 LevelOnly_Object_RAM                              * faire comme pour Dynamic_Object_RAM
                      (./game-mode/EHZ/r):00024                 ;Obj_TailsTails                fill  0,object_size * Positionnement et nommage a mettre dans objet Tails
                      (./game-mode/EHZ/r):00025                 ;Obj_SonicDust                 fill  0,object_size * Positionnement et nommage a mettre dans objet Tails
                      (./game-mode/EHZ/r):00026                 ;Obj_TailsDust                 fill  0,object_size * Positionnement et nommage a mettre dans objet Tails
6F6E                  (./game-mode/EHZ/r):00027                 LevelOnly_Object_RAM_End
6F6E                  (./game-mode/EHZ/r):00028                 Object_RAM_End
                      (./game-mode/EHZ/r):00029                 
                      (./game-mode/EHZ/r):00030                 * ===========================================================================
                      (./game-mode/EHZ/r):00031                 * Common object structure
                      (./game-mode/EHZ/r):00032                 * ===========================================================================
                      (./game-mode/EHZ/r):00033                 
                      (./game-mode/EHZ/r):00034                 ; ext_variables_size is for dynamic objects
     0007             (./game-mode/EHZ/r):00035                 ext_variables_size            equ 7
                      (./game-mode/EHZ/r):00036                 
     000B             (./game-mode/EHZ/r):00037                 status                        equ   status_flags   ; note  exact meaning depends on the object... for sonic/tails  bit 0  leftfacing. bit 1  inair. bit 2  spinning. bit 3  onobject. bit 4  rolljumping. bit 5  pushing. bit 6  underwater.
     005D             (./game-mode/EHZ/r):00038                 width_pixels                  equ   ext_variables
     005E             (./game-mode/EHZ/r):00039                 y_radius                      equ   ext_variables+1 ; collision height / 2
     005F             (./game-mode/EHZ/r):00040                 x_radius                      equ   ext_variables+2 ; collision width / 2
     0060             (./game-mode/EHZ/r):00041                 angle                         equ   ext_variables+3 ; angle about the z axis (360 degrees  equ  256)
     0061             (./game-mode/EHZ/r):00042                 collision_flags               equ   ext_variables+4
     0062             (./game-mode/EHZ/r):00043                 collision_property            equ   ext_variables+5
     0063             (./game-mode/EHZ/r):00044                 respawn_index                 equ   ext_variables+6
                      (./game-mode/EHZ/r):00045                 
                      (./game-mode/EHZ/r):00046                 * ===========================================================================
                      (./game-mode/EHZ/r):00047                 * Main characters object structure
                      (./game-mode/EHZ/r):00048                 * ===========================================================================
                      (./game-mode/EHZ/r):00049                 
     0022             (./game-mode/EHZ/r):00050                 main_ext_variables_size       equ   34
     007F             (./game-mode/EHZ/r):00051                 main_object_size              equ   object_core_size+main_ext_variables_size ; the size of a main character object
     007F             (./game-mode/EHZ/r):00052                 next_main_object              equ   main_object_size
                      (./game-mode/EHZ/r):00053                 
     0064             (./game-mode/EHZ/r):00054                 inertia            equ   ext_variables+7  ; and +8 ; directionless representation of speed... not updated in the air
     0066             (./game-mode/EHZ/r):00055                 flip_angle         equ   ext_variables+9  ; angle about the x axis (360 degrees  equ  256) (twist/tumble)
     0067             (./game-mode/EHZ/r):00056                 air_left           equ   ext_variables+10
     0068             (./game-mode/EHZ/r):00057                 flip_turned        equ   ext_variables+11 ; 0 for normal, 1 to invert flipping (it's a 180 degree rotation about the axis of Sonic's spine, so he stays in the same position but looks turned around)
     0069             (./game-mode/EHZ/r):00058                 obj_control        equ   ext_variables+12 ; 0 for normal, 1 for hanging or for resting on a flipper, $81 for going through CNZ/OOZ/MTZ tubes or stopped in CNZ cages or stoppers or flying if Tails
     006A             (./game-mode/EHZ/r):00059                 status_secondary   equ   ext_variables+13
     006B             (./game-mode/EHZ/r):00060                 flips_remaining    equ   ext_variables+14 ; number of flip revolutions remaining
     006C             (./game-mode/EHZ/r):00061                 flip_speed         equ   ext_variables+15 ; number of flip revolutions per frame / 256
     006D             (./game-mode/EHZ/r):00062                 move_lock          equ   ext_variables+16 ; and +17 ; horizontal control lock, counts down to 0
     006F             (./game-mode/EHZ/r):00063                 invulnerable_time  equ   ext_variables+18 ; and +19 ; time remaining until you stop blinking
     0071             (./game-mode/EHZ/r):00064                 invincibility_time equ   ext_variables+20 ; and +21 ; remaining
     0073             (./game-mode/EHZ/r):00065                 speedshoes_time    equ   ext_variables+22 ; and +23 ; remaining
     0075             (./game-mode/EHZ/r):00066                 next_tilt          equ   ext_variables+24 ; angle on ground in front of sprite
     0076             (./game-mode/EHZ/r):00067                 tilt               equ   ext_variables+25 ; angle on ground
     0077             (./game-mode/EHZ/r):00068                 stick_to_convex    equ   ext_variables+26 ; 0 for normal, 1 to make Sonic stick to convex surfaces like the rotating discs in Sonic 1 and 3 (unused in Sonic 2 but fully functional)
     0078             (./game-mode/EHZ/r):00069                 spindash_flag      equ   ext_variables+27 ; 0 for normal, 1 for charging a spindash or forced rolling
     0078             (./game-mode/EHZ/r):00070                 pinball_mode       equ   spindash_flag
     0079             (./game-mode/EHZ/r):00071                 spindash_counter   equ   ext_variables+28 ; and +29
     0079             (./game-mode/EHZ/r):00072                 restart_countdown  equ   spindash_counter ; and 1+spindash_counter
     007B             (./game-mode/EHZ/r):00073                 jumping            equ   ext_variables+30
     007C             (./game-mode/EHZ/r):00074                 interact           equ   ext_variables+31 ; RAM address of the last object Sonic stood on, minus $FFFFB000 and divided by $40
     007D             (./game-mode/EHZ/r):00075                 top_solid_bit      equ   ext_variables+32 ; the bit to check for top solidity (either $C or $E)
     007E             (./game-mode/EHZ/r):00076                 lrb_solid_bit      equ   ext_variables+33 ; the bit to check for left/right/bottom solidity (either $D or $F)
                      (./game-mode/EHZ/r):00077                 
                      (./game-mode/EHZ/r):00078                 ; ---------------------------------------------------------------------------
                      (./game-mode/EHZ/r):00079                 ; Bits 3-6 of an object's status after a SolidObject call is a
                      (./game-mode/EHZ/r):00080                 ; bitfield with the following meaning 
     0003             (./game-mode/EHZ/r):00081                 p1_standing_bit    equ   3
     0003             (./game-mode/EHZ/r):00082                 p2_standing_bit    equ   p1_standing_bit + 1
                      (./game-mode/EHZ/r):00083                 
     0008             (./game-mode/EHZ/r):00084                 p1_standing        equ   %00001000
     0010             (./game-mode/EHZ/r):00085                 p2_standing        equ   %00010000
                      (./game-mode/EHZ/r):00086                 
     0002             (./game-mode/EHZ/r):00087                 pushing_bit_delta  equ   2
     0005             (./game-mode/EHZ/r):00088                 p1_pushing_bit     equ   p1_standing_bit+pushing_bit_delta
     0006             (./game-mode/EHZ/r):00089                 p2_pushing_bit     equ   p1_pushing_bit+1
                      (./game-mode/EHZ/r):00090                 
     0020             (./game-mode/EHZ/r):00091                 p1_pushing         equ   %00100000
     0040             (./game-mode/EHZ/r):00092                 p2_pushing         equ   %01000000
                      (./game-mode/EHZ/r):00093                 
                      (./game-mode/EHZ/r):00094                 
     0018             (./game-mode/EHZ/r):00095                 standing_mask      equ   p1_standing|p2_standing
     0060             (./game-mode/EHZ/r):00096                 pushing_mask       equ   p1_pushing|p2_pushing
                      (./game-mode/EHZ/r):00097                 
                      (./game-mode/EHZ/r):00098                 ; ---------------------------------------------------------------------------
                      (./game-mode/EHZ/r):00099                 ; The high word of d6 after a SolidObject call is a bitfield
                      (./game-mode/EHZ/r):00100                 ; with the following meaning 
     0000             (./game-mode/EHZ/r):00101                 p1_touch_side_bit    equ   0
     0001             (./game-mode/EHZ/r):00102                 p2_touch_side_bit    equ   p1_touch_side_bit+1
                      (./game-mode/EHZ/r):00103                 
     0001             (./game-mode/EHZ/r):00104                 p1_touch_side        equ   %00000001
     0002             (./game-mode/EHZ/r):00105                 p2_touch_side        equ   %00000010
                      (./game-mode/EHZ/r):00106                 
     0003             (./game-mode/EHZ/r):00107                 touch_side_mask      equ   p1_touch_side|p2_touch_side
                      (./game-mode/EHZ/r):00108                 
     0002             (./game-mode/EHZ/r):00109                 p1_touch_bottom_bit  equ   p1_touch_side_bit+pushing_bit_delta
     0003             (./game-mode/EHZ/r):00110                 p2_touch_bottom_bit  equ   p1_touch_bottom_bit+1
                      (./game-mode/EHZ/r):00111                 
     0004             (./game-mode/EHZ/r):00112                 p1_touch_bottom      equ   %00000100
     0008             (./game-mode/EHZ/r):00113                 p2_touch_bottom      equ   %00001000
                      (./game-mode/EHZ/r):00114                 
     000C             (./game-mode/EHZ/r):00115                 touch_bottom_mask    equ   p1_touch_bottom|p2_touch_bottom
                      (./game-mode/EHZ/r):00116                 
     0004             (./game-mode/EHZ/r):00117                 p1_touch_top_bit     equ   p1_touch_bottom_bit+pushing_bit_delta
     0005             (./game-mode/EHZ/r):00118                 p2_touch_top_bit     equ   p1_touch_top_bit+1
                      (./game-mode/EHZ/r):00119                 
     0010             (./game-mode/EHZ/r):00120                 p1_touch_top         equ   %00010000
     0020             (./game-mode/EHZ/r):00121                 p2_touch_top         equ   %00100000
                      (./game-mode/EHZ/r):00122                 
     0030             (./game-mode/EHZ/r):00123                 touch_top_mask       equ   p1_touch_top|p2_touch_top
                      (./game-mode/EHZ/r):00124                 
                      (./game-mode/EHZ/r):00125                 ; ---------------------------------------------------------------------------
                      (./game-mode/EHZ/r):00126                 ; status_secondary bitfield variables
                      (./game-mode/EHZ/r):00127                 ;
                      (./game-mode/EHZ/r):00128                 ; status_secondary variable bit numbers
     0000             (./game-mode/EHZ/r):00129                 status_sec_hasShield            equ   0
     0001             (./game-mode/EHZ/r):00130                 status_sec_isInvincible         equ   1
     0002             (./game-mode/EHZ/r):00131                 status_sec_hasSpeedShoes        equ   2
     0007             (./game-mode/EHZ/r):00132                 status_sec_isSliding            equ   7
                      (./game-mode/EHZ/r):00133                 
     0001             (./game-mode/EHZ/r):00134                 status_sec_hasShield_mask       equ   $01
     0002             (./game-mode/EHZ/r):00135                 status_sec_isInvincible_mask    equ   $02
     0004             (./game-mode/EHZ/r):00136                 status_sec_hasSpeedShoes_mask   equ   $04
     0080             (./game-mode/EHZ/r):00137                 status_sec_isSliding_mask       equ   $80
                      (./game-mode/EHZ/r):00138                 
                      (./game-mode/EHZ/r):00139                 * --- status bitfield variables for objects ---
     0001             (./game-mode/EHZ/r):00140                 status_x_orientation          equ   $01 ; (bit 0) X Orientation. Clear is left and set is right
     0002             (./game-mode/EHZ/r):00141                 status_y_orientation          equ   $02 ; (bit 1) Y Orientation. Clear is right-side up, and set is upside-down
     0004             (./game-mode/EHZ/r):00142                 status_bit2                   equ   $04 ; (bit 2) Unused
     0008             (./game-mode/EHZ/r):00143                 status_mainchar_standing      equ   $08 ; (bit 3) Set if Main character is standing on this object
     0010             (./game-mode/EHZ/r):00144                 status_sidekick_standing      equ   $10 ; (bit 4) Set if Sidekick is standing on this object
     0020             (./game-mode/EHZ/r):00145                 status_mainchar_pushing       equ   $20 ; (bit 5) Set if Main character is pushing on this object
     0040             (./game-mode/EHZ/r):00146                 status_sidekick_pushing       equ   $40 ; (bit 6) Set if Sidekick is pushing on this object
     0080             (./game-mode/EHZ/r):00147                 status_bit7                   equ   $80 ; (bit 7) Unused
                      (./game-mode/EHZ/r):00148                 
                      (./game-mode/EHZ/r):00149                 * --- status bitfield variables for Main characters ---
     0002             (./game-mode/EHZ/r):00150                 status_inair                  equ   $02 ; (bit 1) Set if in the air (jump counts)
     0004             (./game-mode/EHZ/r):00151                 status_jumporroll             equ   $04 ; (bit 2) Set if jumping or rolling
     0008             (./game-mode/EHZ/r):00152                 status_norgroundnorfall       equ   $08 ; (bit 3) Set if isn't on the ground but shouldn't fall. (Usually when he is on a object that should stop him falling, like a platform or a bridge.)
     0010             (./game-mode/EHZ/r):00153                 status_jumpingafterrolling    equ   $10 ; (bit 4) Set if jumping after rolling
     0020             (./game-mode/EHZ/r):00154                 status_pushing                equ   $20 ; (bit 5) Set if pushing something
     0040             (./game-mode/EHZ/r):00155                 status_underwater             equ   $40 ; (bit 6) Set if underwater
                      (./game-mode/EHZ/r):00156                 
                      (./game-mode/EHZ/r):00157                 * ===========================================================================
                      (./game-mode/EHZ/r):00158                 * Physics Constants
                      (./game-mode/EHZ/r):00159                 * ===========================================================================
                      (./game-mode/EHZ/r):00160                 
     0038             (./game-mode/EHZ/r):00161                 gravity                       equ   $38 ; 56 sub-pixels par frame
     0070             (./game-mode/EHZ/r):00162                 camera_Y_pos_bias_default     equ   screen_top+(200/2)-16 ; position of default camera center on screen
                      (./game-mode/EHZ/r):00163                 
                      (./game-mode/EHZ/r):00164                 * ===========================================================================
                      (./game-mode/EHZ/r):00165                 * Game specific globals
                      (./game-mode/EHZ/r):00166                 * ===========================================================================
                      (./game-mode/EHZ/r):00167                 
6F6E 0000             (./game-mode/EHZ/r):00168                 Camera_Y_pos_bias             fdb   0
6F70 00               (./game-mode/EHZ/r):00169                 Camera_Max_Y_Pos_Changing     fcb   0
6F71 0000             (./game-mode/EHZ/r):00170                 Horiz_scroll_delay_val        fdb   0
                      (C:\Users\bhrou\gi):00254                         
                      (C:\Users\bhrou\gi):00255                 * ==============================================================================
                      (C:\Users\bhrou\gi):00256                 * Routines
                      (C:\Users\bhrou\gi):00257                 * ==============================================================================
                      (C:\Users\bhrou\gi):00258                         INCLUDE "./Engine/Ram/BankSwitch.asm"
6F73 00               (./Engine/Ram/Bank):00001                 glb_Page                      fcb   $00
                      (./Engine/Ram/Bank):00002                 
6F74                  (./Engine/Ram/Bank):00003                 SetCartPageA
6F74 B76F73           (./Engine/Ram/Bank):00004 [5]     899             sta   glb_Page
6F77 2A25             (./Engine/Ram/Bank):00005 [3]     902             bpl   @RAMPg
6F79 B6E7E6           (./Engine/Ram/Bank):00006 [5]     907             lda   $E7E6
6F7C 84DF             (./Engine/Ram/Bank):00007 [2]     909             anda  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
6F7E B7E7E6           (./Engine/Ram/Bank):00008 [5]     914             sta   $E7E6
6F81 86F0             (./Engine/Ram/Bank):00009 [2]     916             lda   #$F0                     ; sortie du mode commande T.2
6F83 B70555           (./Engine/Ram/Bank):00010 [5]     921             sta   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
6F86 86AA             (./Engine/Ram/Bank):00011 [2]     923             lda   #$AA                     ; sequence pour commutation de page T.2
6F88 B70555           (./Engine/Ram/Bank):00012 [5]     928             sta   $0555
6F8B 44               (./Engine/Ram/Bank):00013 [2]     930             lsra                           ; lda   #$55
6F8C B702AA           (./Engine/Ram/Bank):00014 [5]     935             sta   $02AA
6F8F 86C0             (./Engine/Ram/Bank):00015 [2]     937             lda   #$C0
6F91 B70555           (./Engine/Ram/Bank):00016 [5]     942             sta   $0555
6F94 B66F73           (./Engine/Ram/Bank):00017 [5]     947             lda   glb_Page
6F97 847F             (./Engine/Ram/Bank):00018 [2]     949             anda  #$7F                     ; le bit 7 doit etre a 0        
6F99 B70555           (./Engine/Ram/Bank):00019 [5]     954             sta   $0555                    ; selection de la page T.2 en zone cartouche
6F9C 2003             (./Engine/Ram/Bank):00020 [3]     957             bra   @rts
6F9E B7E7E6           (./Engine/Ram/Bank):00021 [5]     962     @RAMPg  sta   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
6FA1 39               (./Engine/Ram/Bank):00022 [5]     967     @rts    rts
                      (./Engine/Ram/Bank):00023                 
6FA2                  (./Engine/Ram/Bank):00024                 SetCartPageB
6FA2 F76F73           (./Engine/Ram/Bank):00025 [5]     972             stb   glb_Page
6FA5 2A25             (./Engine/Ram/Bank):00026 [3]     975             bpl   @RAMPg
6FA7 F6E7E6           (./Engine/Ram/Bank):00027 [5]     980             ldb   $E7E6
6FAA C4DF             (./Engine/Ram/Bank):00028 [2]     982             andb  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
6FAC F7E7E6           (./Engine/Ram/Bank):00029 [5]     987             stb   $E7E6
6FAF C6F0             (./Engine/Ram/Bank):00030 [2]     989             ldb   #$F0                     ; sortie du mode commande T.2
6FB1 F70555           (./Engine/Ram/Bank):00031 [5]     994             stb   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
6FB4 C6AA             (./Engine/Ram/Bank):00032 [2]     996             ldb   #$AA                     ; sequence pour commutation de page T.2
6FB6 F70555           (./Engine/Ram/Bank):00033 [5]     1001            stb   $0555
6FB9 54               (./Engine/Ram/Bank):00034 [2]     1003            lsrb                           ; lda   #$55
6FBA F702AA           (./Engine/Ram/Bank):00035 [5]     1008            stb   $02AA
6FBD C6C0             (./Engine/Ram/Bank):00036 [2]     1010            ldb   #$C0
6FBF F70555           (./Engine/Ram/Bank):00037 [5]     1015            stb   $0555
6FC2 F66F73           (./Engine/Ram/Bank):00038 [5]     1020            ldb   glb_Page
6FC5 C47F             (./Engine/Ram/Bank):00039 [2]     1022            andb  #$7F                     ; le bit 7 doit etre a 0        
6FC7 F70555           (./Engine/Ram/Bank):00040 [5]     1027            stb   $0555                    ; selection de la page T.2 en zone cartouche
6FCA 2003             (./Engine/Ram/Bank):00041 [3]     1030            bra   @rts
6FCC F7E7E6           (./Engine/Ram/Bank):00042 [5]     1035    @RAMPg  stb   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
6FCF 39               (./Engine/Ram/Bank):00043 [5]     1040    @rts    rts
                      (./Engine/Ram/Bank):00044                 
6FD0                  (./Engine/Ram/Bank):00045                 GetCartPageA
6FD0 B66F73           (./Engine/Ram/Bank):00046 [5]     1045            lda   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
6FD3 2603             (./Engine/Ram/Bank):00047 [3]     1048            bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
6FD5 B6E7E6           (./Engine/Ram/Bank):00048 [5]     1053            lda   $E7E6
6FD8 39               (./Engine/Ram/Bank):00049 [5]     1058    @rts    rts
                      (./Engine/Ram/Bank):00050                 
6FD9                  (./Engine/Ram/Bank):00051                 GetCartPageB
6FD9 F66F73           (./Engine/Ram/Bank):00052 [5]     1063            ldb   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
6FDC 2603             (./Engine/Ram/Bank):00053 [3]     1066            bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
6FDE F6E7E6           (./Engine/Ram/Bank):00054 [5]     1071            ldb   $E7E6
6FE1 39               (./Engine/Ram/Bank):00055 [5]     1076    @rts   rts
                      (./Engine/Ram/Bank):00056                 
                      (C:\Users\bhrou\gi):00259                         INCLUDE "./Engine/Graphics/WaitVBL.asm"
                      (./Engine/Graphics):00001                 ********************************************************************************
                      (./Engine/Graphics):00002                 * Attente VBL
                      (./Engine/Graphics):00003                 * Alternance de la page 2 et 3 entre affichage et espace cartouche
                      (./Engine/Graphics):00004                 * Alternance de la RAMA et RAM B dans l'espace ecran
                      (./Engine/Graphics):00005                 * ------------------------------------------------------------------------------
                      (./Engine/Graphics):00006                 *
                      (./Engine/Graphics):00007                 * Page Affichee par l'automate Video
                      (./Engine/Graphics):00008                 * ----------------------------------
                      (./Engine/Graphics):00009                 *   $E7DD determine la page affichee a l'ecran
                      (./Engine/Graphics):00010                 *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : page 0
                      (./Engine/Graphics):00011                 *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : page 1
                      (./Engine/Graphics):00012                 *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : page 2
                      (./Engine/Graphics):00013                 *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : page 3
                      (./Engine/Graphics):00014                 *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : couleur du cadre
                      (./Engine/Graphics):00015                 *   Remarque : bit5 et bit4 utilisable uniquement en mode MO
                      (./Engine/Graphics):00016                 *
                      (./Engine/Graphics):00017                 * Page en espace cartouche
                      (./Engine/Graphics):00018                 * ------------------------
                      (./Engine/Graphics):00019                 *   $E7E6 determine la page visible dans l'espace cartouche (0000 a 3FFF)
                      (./Engine/Graphics):00020                 *   bit7 toujours a 0
                      (./Engine/Graphics):00021                 *   bit6=1 : ecriture autorisee
                      (./Engine/Graphics):00022                 *   bit5=1 : espace cartouche recouvert par de la RAM
                      (./Engine/Graphics):00023                 *   bit4=0 : CAS1N valide : banques 0-15 / 1 = CAS2N valide : banques 16-31
                      (./Engine/Graphics):00024                 *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bit0=0 (#$60) : page 0
                      (./Engine/Graphics):00025                 *   ...
                      (./Engine/Graphics):00026                 *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bit0=1 (#$6F) : page 15
                      (./Engine/Graphics):00027                 *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bit0=0 (#$70) : page 16
                      (./Engine/Graphics):00028                 *   ...
                      (./Engine/Graphics):00029                 *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bit0=1 (#$7F) : page 31
                      (./Engine/Graphics):00030                 *
                      (./Engine/Graphics):00031                 * Demi-Page 0 en espace ecran (4000 a 5FFF)
                      (./Engine/Graphics):00032                 * -----------------------------------------
                      (./Engine/Graphics):00033                 *   $E7C3 determine la demi-page de la page 0 visible dans l'espace ecran
                      (./Engine/Graphics):00034                 *   bit0=0 : 8Ko RAMA
                      (./Engine/Graphics):00035                 *   bit0=1 : 8ko RAMB
                      (./Engine/Graphics):00036                 *
                      (./Engine/Graphics):00037                 * Page en espace donnees
                      (./Engine/Graphics):00038                 * ----------------------
                      (./Engine/Graphics):00039                 * lda   #$04
                      (./Engine/Graphics):00040                 * sta   $E7E5                    * selection de la page 04 en RAM Donnees (A000-DFFF)
                      (./Engine/Graphics):00041                 *
                      (./Engine/Graphics):00042                 ********************************************************************************
6FE2                  (./Engine/Graphics):00043                 WaitVBL
6FE2 FC7039           (./Engine/Graphics):00044 [6]     1082            ldd   Vint_runcount
6FE5 B3703B           (./Engine/Graphics):00045 [7]     1089            subd  Vint_Last_runcount
6FE8 C102             (./Engine/Graphics):00046 [2]     1091            cmpb  #2
6FEA 240A             (./Engine/Graphics):00047 [3]     1094            bhs   SwapVideoPage
6FEC                  (./Engine/Graphics):00048                 @a
6FEC 7DE7E7           (./Engine/Graphics):00049 [7]     1101            tst   $E7E7              * le faisceau n'est pas dans l'ecran
6FEF 2AFB             (./Engine/Graphics):00050 [3]     1104            bpl   @a                 * tant que le bit est a 0 on boucle
6FF1                  (./Engine/Graphics):00051                 @b
6FF1 7DE7E7           (./Engine/Graphics):00052 [7]     1111            tst   $E7E7              * le faisceau est dans l'ecran
6FF4 2BFB             (./Engine/Graphics):00053 [3]     1114            bmi   @b                 * tant que le bit est a 1 on boucle
                      (./Engine/Graphics):00054                                         
6FF6                  (./Engine/Graphics):00055                 SwapVideoPage
6FF6 F67004           (./Engine/Graphics):00056 [5]     1119            ldb   am_SwapVideoPage+1 * charge la valeur du ldb suivant am_SwapVideoPage
6FF9 C440             (./Engine/Graphics):00057 [2]     1121            andb  #$40               * alterne bit6=0 et bit6=1 (suivant la valeur B $00 ou $FF)
6FFB                  (./Engine/Graphics):00058                 glb_screen_border_color        
6FFB CA80             (./Engine/Graphics):00059 [2]     1123            orb   #$80               * bit7=1, bit3 a bit0=couleur de cadre (ici 0)
6FFD F7E7DD           (./Engine/Graphics):00060 [5]     1128            stb   $E7DD              * changement page (2 ou 3) affichee a l'ecran
7000 737004           (./Engine/Graphics):00061 [7]     1135            com   am_SwapVideoPage+1 * alterne $00 et $FF sur le ldb suivant am_SwapVideoPage
7003                  (./Engine/Graphics):00062                 am_SwapVideoPage
7003 C600             (./Engine/Graphics):00063 [2]     1137            ldb   #$00
7005 C401             (./Engine/Graphics):00064 [2]     1139            andb  #$01               * alterne bit0=0 et bit0=1 (suivant la valeur B $00 ou $FF)
7007 F77040           (./Engine/Graphics):00065 [5]     1144            stb   glb_Cur_Wrk_Screen_Id
700A CA02             (./Engine/Graphics):00066 [2]     1146            orb   #$02               * bit1=1
700C F7E7E5           (./Engine/Graphics):00067 [5]     1151            stb   $E7E5              * changement page (2 ou 3) visible dans l'espace donnees
700F F6E7C3           (./Engine/Graphics):00068 [5]     1156            ldb   $E7C3              * charge l'identifiant de la demi-page 0 configuree en espace ecran
7012 C801             (./Engine/Graphics):00069 [2]     1158            eorb  #$01               * alterne bit0 = 0 ou 1 changement demi-page de la page 0 visible dans l'espace ecran
7014 F7E7C3           (./Engine/Graphics):00070 [5]     1163            stb   $E7C3
                      (./Engine/Graphics):00071                         
7017 7C7038           (./Engine/Graphics):00072 [7]     1170            inc   glb_Main_runcount+1
701A 2603             (./Engine/Graphics):00073 [3]     1173            bne   @a
701C 7C7037           (./Engine/Graphics):00074 [7]     1180            inc   glb_Main_runcount  
701F                  (./Engine/Graphics):00075                 @a
                      (./Engine/Graphics):00076                 
701F FC7039           (./Engine/Graphics):00077 [6]     1186            ldd   Vint_runcount            ; store in Vint_Main_runcount the number of elapsed 50Hz frames
7022 B3703B           (./Engine/Graphics):00078 [7]     1193            subd  Vint_Last_runcount       ; used in AnimateSpriteSync
7025 F1703F           (./Engine/Graphics):00079 [5]     1198            cmpb  Vint_Main_runcount_cap   ; allow to cap Animation and Mvt Sync
7028 2303             (./Engine/Graphics):00080 [3]     1201            bls   @a
702A F6703F           (./Engine/Graphics):00081 [5]     1206            ldb   Vint_Main_runcount_cap
702D F7703E           (./Engine/Graphics):00082 [5]     1211    @a      stb   Vint_Main_runcount
                      (./Engine/Graphics):00083                 
7030 FC7039           (./Engine/Graphics):00084 [6]     1217            ldd   Vint_runcount
7033 FD703B           (./Engine/Graphics):00085 [6]     1223            std   Vint_Last_runcount
7036 39               (./Engine/Graphics):00086 [5]     1228            rts
                      (./Engine/Graphics):00087                         
7037 0000             (./Engine/Graphics):00088                 glb_Main_runcount      fdb   0 ; page swap counter
7039 0000             (./Engine/Graphics):00089                 Vint_runcount          fdb   0 ; incremented in 50Hz IRQ
703B 0000             (./Engine/Graphics):00090                 Vint_Last_runcount     fdb   0
703D 00               (./Engine/Graphics):00091                 Vint_Main_runcount_w   fcb   0 ; pad to be able to load Vint_Main_runcount as a word
703E 00               (./Engine/Graphics):00092                 Vint_Main_runcount     fcb   0
703F 00               (./Engine/Graphics):00093                 Vint_Main_runcount_cap fcb   0
7040 00               (./Engine/Graphics):00094                 glb_Cur_Wrk_Screen_Id  fcb   0 ; screen buffer set to write operations (0 or 1)
                      (C:\Users\bhrou\gi):00260                         INCLUDE "./Engine/Graphics/AnimateSpriteSync.asm"       
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * Subroutine to animate a sprite using an animation script
                      (./Engine/Graphics):00003                 * Use VBL to keep a constant animation rate
                      (./Engine/Graphics):00004                 *
                      (./Engine/Graphics):00005                 * input REG : [u] pointeur sur l'objet
                      (./Engine/Graphics):00006                 *
                      (./Engine/Graphics):00007                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00008                 
                      (./Engine/Graphics):00009                                                             *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00010                                                             *; Subroutine to animate a sprite using an animation script
                      (./Engine/Graphics):00011                                                             *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                             *
                      (./Engine/Graphics):00013                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Graphics):00014                                                             *
                      (./Engine/Graphics):00015                                                             *; sub_16544:
7041                  (./Engine/Graphics):00016                 AnimateSpriteSync                           *AnimateSprite:
                      (./Engine/Graphics):00017                                                             *    moveq   #0,d0
                      (./Engine/Graphics):00018                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
7041 B6E7E6           (    _GetCartPageA):00004 [5]     1233            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
7044 B770A3           (./Engine/Graphics):00019 [5]     1238            sta   Anim_Rts+1                    ; backup cart page     
7047 8E9848           (./Engine/Graphics):00020 [3]     1241            ldx   #Ani_Page_Index
704A E6C4             (./Engine/Graphics):00021 [4]     1245            ldb   id,u
704C 3A               (./Engine/Graphics):00022 [3]     1248            abx
704D A684             (./Engine/Graphics):00023 [4]     1252            lda   ,x
                      (./Engine/Graphics):00024                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
704F B7E7E6           (    _SetCartPageA):00004 [5]     1257            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00025                 ;
7052 AE44             (./Engine/Graphics):00026 [6]     1263            ldx   anim,u                        *    move.b  anim(a0),d0      ; move animation number to d0
7054 2A0C             (./Engine/Graphics):00027 [3]     1266            bpl   @a                       ; branch if anim is an address of anim
7056 8E984F           (./Engine/Graphics):00028 [3]     1269            ldx   #Ani_Asd_Index           ; negative means anim,u is a signed 8 bit offset for a LUT
                      (./Engine/Graphics):00029                         ; ldb   id,u                   ; already loaded
7059 58               (./Engine/Graphics):00030 [2]     1271            aslb
705A 3A               (./Engine/Graphics):00031 [3]     1274            abx
705B AE94             (./Engine/Graphics):00032 [8]     1282            ldx   [,x]                     ; load Anim LUT (first entry in Asd LUT)
705D E645             (./Engine/Graphics):00033 [5]     1287            ldb   anim+1,u                 ; load offset
705F 3A               (./Engine/Graphics):00034 [3]     1290            abx                            ; apply offset
7060 AE84             (./Engine/Graphics):00035 [5]     1295            ldx   ,x                       ; load target anim address
7062 AC46             (./Engine/Graphics):00036 [7]     1302    @a      cmpx  prev_anim,u                   *    cmp.b   prev_anim(a0),d0 ; is animation set to change?
7064 270E             (./Engine/Graphics):00037 [3]     1305            beq   Anim_Run                      *    beq.s   Anim_Run         ; if not, branch
7066 AF46             (./Engine/Graphics):00038 [6]     1311            stx   prev_anim,u                   *    move.b  d0,prev_anim(a0) ; set prev anim to current animation
                      (./Engine/Graphics):00039                         
7068 A64A             (./Engine/Graphics):00040 [5]     1316            lda   anim_flags,u
706A 8401             (./Engine/Graphics):00041 [2]     1318            anda  #anim_link_mask               ; if animation link, when changing animation
706C 2613             (./Engine/Graphics):00042 [3]     1321            bne   Anim_Reload                   ; will skip frame and duration reinit
                      (./Engine/Graphics):00043                         
706E C600             (./Engine/Graphics):00044 [2]     1323            ldb   #0                            
7070 E748             (./Engine/Graphics):00045 [5]     1328            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0)          ; reset animation
7072 2009             (./Engine/Graphics):00046 [3]     1331            bra   @b                            *    move.b  #0,anim_frame_duration(a0) ; reset frame duration
                      (./Engine/Graphics):00047                                                             *; loc_16560:
7074                  (./Engine/Graphics):00048                 Anim_Run                                    *Anim_Run:
7074 E649             (./Engine/Graphics):00049 [5]     1336            ldb   anim_frame_duration,u
7076 F0703E           (./Engine/Graphics):00050 [5]     1341            subb  Vint_Main_runcount
7079 E749             (./Engine/Graphics):00051 [5]     1346            stb   anim_frame_duration,u
                      (./Engine/Graphics):00052                                                             *    subq.b  #1,anim_frame_duration(a0)   ; subtract 1 from frame duration
707B 2A25             (./Engine/Graphics):00053 [3]     1349            bpl   Anim_Rts                      *    bpl.s   Anim_Wait                    ; if time remains, branch
                      (./Engine/Graphics):00054                         * no offset table                   *    add.w   d0,d0
                      (./Engine/Graphics):00055                         * anim is the address of anim       *    adda.w  (a1,d0.w),a1                 ; calculate address of appropriate animation script
707D E61F             (./Engine/Graphics):00056 [5]     1354    @b      ldb   -1,x                            
707F E749             (./Engine/Graphics):00057 [5]     1359            stb   anim_frame_duration,u         *    move.b  (a1),anim_frame_duration(a0) ; load frame duration
7081                  (./Engine/Graphics):00058                 Anim_Reload                                 *    moveq   #0,d1
7081 E648             (./Engine/Graphics):00059 [5]     1364            ldb   anim_frame,u                  *    move.b  anim_frame(a0),d1 ; load current frame number
7083 8600             (./Engine/Graphics):00060 [2]     1366            lda   #0
                      (./Engine/Graphics):00061                         _asld
7085 58               (            _asld):00001 [2]     1368            aslb
7086 49               (            _asld):00002 [2]     1370            rola
7087 318B             (./Engine/Graphics):00062 [8]     1378            leay  d,x
7089 ECA4             (./Engine/Graphics):00063 [5]     1383            ldd   ,y                            *    move.b  1(a1,d1.w),d0 ; read sprite number from script
                      (./Engine/Graphics):00064                         * bmi   Anim_End_FF                 *    bmi.s   Anim_End_FF   ; if animation is complete, branch MJ: Delete this line
708B 81FA             (./Engine/Graphics):00065 [2]     1385            cmpa  #$FA                          *    cmp.b   #$FA,d0       ; MJ: is it a flag from FA to FF?
708D 2419             (./Engine/Graphics):00066 [3]     1388            bhs   Anim_End_FF                   *    bhs     Anim_End_FF   ; MJ: if so, branch to flag routines
                      (./Engine/Graphics):00067                                                             *; loc_1657C:
708F                  (./Engine/Graphics):00068                 Anim_Next                                   *Anim_Next:
                      (./Engine/Graphics):00069                                                             *    andi.b  #$7F,d0               ; clear sign bit
708F ED4C             (./Engine/Graphics):00070 [6]     1394            std   image_set,u                   *    move.b  d0,mapping_frame(a0)  ; load sprite number
7091 A64B             (./Engine/Graphics):00071 [5]     1399            lda   status_flags,u
7093 8403             (./Engine/Graphics):00072 [2]     1401            anda  #status_xflip_mask|status_yflip_mask
7095 B7709D           (./Engine/Graphics):00073 [5]     1406            sta   @dyn+1
7098 A642             (./Engine/Graphics):00074 [5]     1411            lda   render_flags,u
709A 84FE             (./Engine/Graphics):00075 [2]     1413            anda  #^render_xmirror_mask
709C 8A00             (./Engine/Graphics):00076 [2]     1415    @dyn    ora   #0
709E A742             (./Engine/Graphics):00077 [5]     1420            sta   render_flags,u
                      (./Engine/Graphics):00078                                                             *    move.b  status(a0),d1         ; match the orientaion dictated by the object
                      (./Engine/Graphics):00079                                                             *    andi.b  #3,d1                 ; with the orientation used by the object engine
                      (./Engine/Graphics):00080                                                             *    andi.b  #$FC,render_flags(a0)
                      (./Engine/Graphics):00081                                                             *    or.b    d1,render_flags(a0)
70A0 6C48             (./Engine/Graphics):00082 [7]     1427            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)     ; next frame number
                      (./Engine/Graphics):00083                                                             *; return_1659A:
70A2                  (./Engine/Graphics):00084                 Anim_Rts                                    *Anim_Wait:
70A2 8600             (./Engine/Graphics):00085 [2]     1429            lda   #$00                          ; (dynamic)
                      (./Engine/Graphics):00086                         _SetCartPageA                       ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
70A4 B7E7E6           (    _SetCartPageA):00004 [5]     1434            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
70A7 39               (./Engine/Graphics):00087 [5]     1439            rts                                 *    rts 
                      (./Engine/Graphics):00088                                                             *; ===========================================================================
                      (./Engine/Graphics):00089                                                             *; loc_1659C:
70A8                  (./Engine/Graphics):00090                 Anim_End_FF                                 *Anim_End_FF:
70A8 4C               (./Engine/Graphics):00091 [2]     1441            inca                                *    addq.b  #1,d0       ; is the end flag = $FF ?
70A9 2608             (./Engine/Graphics):00092 [3]     1444            bne   Anim_End_FE                   *    bne.s   Anim_End_FE ; if not, branch
70AB C600             (./Engine/Graphics):00093 [2]     1446            ldb   #0                            
70AD E748             (./Engine/Graphics):00094 [5]     1451            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0) ; restart the animation
70AF EC84             (./Engine/Graphics):00095 [5]     1456            ldd   ,x                            *    move.b  1(a1),d0          ; read sprite number
70B1 20DC             (./Engine/Graphics):00096 [3]     1459            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./Engine/Graphics):00097                                                             *; ===========================================================================
                      (./Engine/Graphics):00098                                                             *; loc_165AC:
70B3                  (./Engine/Graphics):00099                 Anim_End_FE                                 *Anim_End_FE:
70B3 4C               (./Engine/Graphics):00100 [2]     1461            inca                                *    addq.b  #1,d0             ; is the end flag = $FE ?
70B4 2610             (./Engine/Graphics):00101 [3]     1464            bne   Anim_End_FD                   *    bne.s   Anim_End_FD       ; if not, branch
70B6 A648             (./Engine/Graphics):00102 [5]     1469            lda   anim_frame,u                  
70B8 F770BC           (./Engine/Graphics):00103 [5]     1474            stb   Anim_End_FE_dyn+1             *    move.b  2(a1,d1.w),d0     ; read the next byte in the script
70BB                  (./Engine/Graphics):00104                 Anim_End_FE_dyn
70BB 8000             (./Engine/Graphics):00105 [2]     1476            suba  #$00                          ; (dynamic)                          
70BD A748             (./Engine/Graphics):00106 [5]     1481            sta   anim_frame,u                  *    sub.b   d0,anim_frame(a0) ; jump back d0 bytes in the script
                      (./Engine/Graphics):00107                                                             *    sub.b   d0,d1
70BF C602             (./Engine/Graphics):00108 [2]     1483            ldb   #2
70C1 3D               (./Engine/Graphics):00109 [11]    1494            mul                                             
70C2 EC8B             (./Engine/Graphics):00110 [9]     1503            ldd   d,x                           *    move.b  1(a1,d1.w),d0     ; read sprite number
70C4 20C9             (./Engine/Graphics):00111 [3]     1506            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./Engine/Graphics):00112                                                             *; ===========================================================================
                      (./Engine/Graphics):00113                                                             *; loc_165C0:
70C6                  (./Engine/Graphics):00114                 Anim_End_FD                                 *Anim_End_FD:
70C6 4C               (./Engine/Graphics):00115 [2]     1508            inca                                *    addq.b  #1,d0               ; is the end flag = $FD ?
70C7 2606             (./Engine/Graphics):00116 [3]     1511            bne   Anim_End_FC                   *    bne.s   Anim_End_FC         ; if not, branch
70C9 EC21             (./Engine/Graphics):00117 [6]     1517            ldd   1,y                           ; read word after FD
70CB ED44             (./Engine/Graphics):00118 [6]     1523            std   anim,u                        *    move.b  2(a1,d1.w),anim(a0) ; read next byte, run that animation
70CD 20D3             (./Engine/Graphics):00119 [3]     1526            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00120                                                             *; ===========================================================================
                      (./Engine/Graphics):00121                                                             *; loc_165CC:
70CF                  (./Engine/Graphics):00122                 Anim_End_FC                                 *Anim_End_FC:
70CF 4C               (./Engine/Graphics):00123 [2]     1528            inca                                *    addq.b  #1,d0          ; is the end flag = $FC ?
70D0 260B             (./Engine/Graphics):00124 [3]     1531            bne   Anim_End_FB                   *    bne.s   Anim_End_FB    ; if not, branch
70D2 6CC81E           (./Engine/Graphics):00125 [7]     1538            inc   routine,u                     *    addq.b  #2,routine(a0) ; jump to next routine
70D5 8600             (./Engine/Graphics):00126 [2]     1540            lda   #0                            
70D7 A749             (./Engine/Graphics):00127 [5]     1545            sta   anim_frame_duration,u         *    move.b  #0,anim_frame_duration(a0)
70D9 6C48             (./Engine/Graphics):00128 [7]     1552            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)
70DB 20C5             (./Engine/Graphics):00129 [3]     1555            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00130                                                             *; ===========================================================================
                      (./Engine/Graphics):00131                                                             *; loc_165E0:
70DD                  (./Engine/Graphics):00132                 Anim_End_FB                                 *Anim_End_FB:
70DD 4C               (./Engine/Graphics):00133 [2]     1557            inca                                *    addq.b  #1,d0                 ; is the end flag = $FB ?
70DE 2609             (./Engine/Graphics):00134 [3]     1560            bne   Anim_End_FA                   *    bne.s   Anim_End_FA           ; if not, branch
70E0 8600             (./Engine/Graphics):00135 [2]     1562            lda   #0                            
70E2 A748             (./Engine/Graphics):00136 [5]     1567            sta   anim_frame,u                  *    move.b  #0,anim_frame(a0)     ; reset animation
70E4 A7C81F           (./Engine/Graphics):00137 [5]     1572            sta   routine_secondary,u           *    clr.b   routine_secondary(a0) ; reset 2nd routine counter
70E7 20B9             (./Engine/Graphics):00138 [3]     1575            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00139                                                             *; ===========================================================================
                      (./Engine/Graphics):00140                                                             *; loc_165F0:
70E9                  (./Engine/Graphics):00141                 Anim_End_FA                                 *Anim_End_FA:
70E9 4C               (./Engine/Graphics):00142 [2]     1577            inca                                *    addq.b  #1,d0                    ; is the end flag = $FA ?
70EA 2603             (./Engine/Graphics):00143 [3]     1580            bne   Anim_End                      *    bne.s   Anim_End_F9              ; if not, branch
70EC 6CC81F           (./Engine/Graphics):00144 [7]     1587            inc   routine_secondary,u           *    addq.b  #2,routine_secondary(a0) ; jump to next routine    
70EF                  (./Engine/Graphics):00145                 Anim_End               
70EF 20B1             (./Engine/Graphics):00146 [3]     1590            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00147                                                             *; ===========================================================================
                      (./Engine/Graphics):00148                                                             *; loc_165FA:
                      (./Engine/Graphics):00149                                                             *Anim_End_F9:
                      (./Engine/Graphics):00150                                                             *    addq.b  #1,d0            ; is the end flag = $F9 ?
                      (./Engine/Graphics):00151                                                             *    bne.s   Anim_End         ; if not, branch
                      (./Engine/Graphics):00152                                                             *    addq.b  #2,objoff_2A(a0) ; Actually obj89_arrow_routine
                      (./Engine/Graphics):00153                                                             *; return_16602:
                      (./Engine/Graphics):00154                                                             *Anim_End:
                      (./Engine/Graphics):00155                                                             *    rts
                      (./Engine/Graphics):00156                                                             *; End of function AnimateSprite
                      (C:\Users\bhrou\gi):00261                         INCLUDE "./objects/main-characters/sonic/sonic-animate.asm"
                      (./objects/main-ch):00001                 
                      (./objects/main-ch):00002                 
                      (./objects/main-ch):00003                                                                       *; ---------------------------------------------------------------------------
                      (./objects/main-ch):00004                                                                       *; Subroutine to animate Sonic's sprites
                      (./objects/main-ch):00005                                                                       *; See also: AnimateSprite
                      (./objects/main-ch):00006                                                                       *; ---------------------------------------------------------------------------
                      (./objects/main-ch):00007                                                                       *
                      (./objects/main-ch):00008                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./objects/main-ch):00009                                                                       *
                      (./objects/main-ch):00010                                                                       *; loc_1B350:
70F1                  (./objects/main-ch):00011                 Sonic_Animate_Do                                      *Sonic_Animate:
                      (./objects/main-ch):00012                                                                       *  lea (SonicAniData).l,a1
                      (./objects/main-ch):00013                                                                       *  tst.b   (Super_Sonic_flag).w
                      (./objects/main-ch):00014                                                                       *  beq.s   +
                      (./objects/main-ch):00015                                                                       *  lea (SuperSonicAniData).l,a1
                      (./objects/main-ch):00016                                                                       *+
                      (./objects/main-ch):00017                                                                       *  moveq   #0,d0
                      (./objects/main-ch):00018                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
70F1 B6E7E6           (    _GetCartPageA):00004 [5]     1595            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
70F4 B7714C           (./objects/main-ch):00019 [5]     1600            sta   @page                    ; backup cart page     
70F7 8E9848           (./objects/main-ch):00020 [3]     1603            ldx   #Ani_Page_Index
70FA E6C4             (./objects/main-ch):00021 [4]     1607            ldb   id,u
70FC 3A               (./objects/main-ch):00022 [3]     1610            abx
70FD A684             (./objects/main-ch):00023 [4]     1614            lda   ,x
                      (./objects/main-ch):00024                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
70FF B7E7E6           (    _SetCartPageA):00004 [5]     1619            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./objects/main-ch):00025                 ;
7102 AE44             (./objects/main-ch):00026 [6]     1625            ldx   anim,u                                  *  move.b  anim(a0),d0
7104 AC46             (./objects/main-ch):00027 [7]     1632    !       cmpx  prev_anim,u                             *  cmp.b   prev_anim(a0),d0    ; has animation changed?
7106 270E             (./objects/main-ch):00028 [3]     1635            beq   SAnim_Do                                *  beq.s   SAnim_Do        ; if not, branch
7108 AF46             (./objects/main-ch):00029 [6]     1641            stx   prev_anim,u                             *  move.b  d0,prev_anim(a0)    ; set previous animation
710A C600             (./objects/main-ch):00030 [2]     1643            ldb   #0                            
710C E748             (./objects/main-ch):00031 [5]     1648            stb   anim_frame,u                            *  move.b  #0,anim_frame(a0)   ; reset animation frame
710E E749             (./objects/main-ch):00032 [5]     1653            stb   anim_frame_duration,u                   *  move.b  #0,anim_frame_duration(a0)  ; reset frame duration
7110 E64B             (./objects/main-ch):00033 [5]     1658            ldb   status,u
7112 C4DF             (./objects/main-ch):00034 [2]     1660            andb  #^status_pushing 
7114 E74B             (./objects/main-ch):00035 [5]     1665            stb   status,u                                *  bclr    #5,status(a0)
                      (./objects/main-ch):00036                                                                       *; loc_1B384:
7116                  (./objects/main-ch):00037                 SAnim_Do                                              *SAnim_Do:
                      (./objects/main-ch):00038                         ; no offset table                             *  add.w   d0,d0
                      (./objects/main-ch):00039                         ; anim is the address of anim                 *  adda.w  (a1,d0.w),a1    ; calculate address of appropriate animation script
7116 E61F             (./objects/main-ch):00040 [5]     1670            ldb   -1,x                            
7118 F77136           (./objects/main-ch):00041 [5]     1675            stb   @a                                      *  move.b  (a1),d0
711B 2B4A             (./objects/main-ch):00042 [3]     1678            bmi   Go_SAnim_WalkRun                        *  bmi.s   SAnim_WalkRun   ; if animation is walk/run/roll/jump, branch
711D E64B             (./objects/main-ch):00043 [5]     1683            ldb   status,u                                *  move.b  status(a0),d1
711F C401             (./objects/main-ch):00044 [2]     1685            andb  #status_x_orientation                   *  andi.b  #1,d1
7121 F77129           (./objects/main-ch):00045 [5]     1690            stb   @b
7124 E642             (./objects/main-ch):00046 [5]     1695            ldb   render_flags,u
7126 C4FC             (./objects/main-ch):00047 [2]     1697            andb  #^(render_xmirror_mask|render_ymirror_mask) *  andi.b  #$FC,render_flags(a0)
7128 CA00             (./objects/main-ch):00048 [2]     1699            orb   #0                                      *  or.b    d1,render_flags(a0)
     7129             (./objects/main-ch):00049                 @b      equ   *-1
712A E742             (./objects/main-ch):00050 [5]     1704            stb   render_flags,u
712C E649             (./objects/main-ch):00051 [5]     1709            ldb   anim_frame_duration,u
712E F0703E           (./objects/main-ch):00052 [5]     1714            subb  Vint_Main_runcount
7131 E749             (./objects/main-ch):00053 [5]     1719            stb   anim_frame_duration,u                   *  subq.b  #1,anim_frame_duration(a0)  ; subtract 1 from frame duration
7133 2A16             (./objects/main-ch):00054 [3]     1722            bpl   SAnim_Delay                             *  bpl.s   SAnim_Delay         ; if time remains, branch
7135 C600             (./objects/main-ch):00055 [2]     1724            ldb   #0
     7136             (./objects/main-ch):00056                 @a      equ   *-1
7137 E749             (./objects/main-ch):00057 [5]     1729            stb   anim_frame_duration,u                   *  move.b  d0,anim_frame_duration(a0)  ; load frame duration
                      (./objects/main-ch):00058                                                                       *; loc_1B3AA:
7139                  (./objects/main-ch):00059                 SAnim_Do2                                             *SAnim_Do2:
                      (./objects/main-ch):00060                                                                       *  moveq   #0,d1
7139 E648             (./objects/main-ch):00061 [5]     1734            ldb   anim_frame,u                            *  move.b  anim_frame(a0),d1   ; load current frame number
713B 8600             (./objects/main-ch):00062 [2]     1736            lda   #0
                      (./objects/main-ch):00063                         _asld
713D 58               (            _asld):00001 [2]     1738            aslb
713E 49               (            _asld):00002 [2]     1740            rola
713F 318B             (./objects/main-ch):00064 [8]     1748            leay  d,x
7141 ECA4             (./objects/main-ch):00065 [5]     1753            ldd   ,y                                      *  move.b  1(a1,d1.w),d0       ; read sprite number from script
7143 81F0             (./objects/main-ch):00066 [2]     1755            cmpa  #$F0                                    *  cmpi.b  #$F0,d0
7145 2427             (./objects/main-ch):00067 [3]     1758            bhs   SAnim_End_FF                            *  bhs.s   SAnim_End_FF        ; if animation is complete, branch
                      (./objects/main-ch):00068                                                                       *; loc_1B3BA:
7147                  (./objects/main-ch):00069                 SAnim_Next                                            *SAnim_Next:
7147 ED4C             (./objects/main-ch):00070 [6]     1764            std   image_set,u                             *  move.b  d0,mapping_frame(a0)    ; load sprite number
7149 6C48             (./objects/main-ch):00071 [7]     1771            inc   anim_frame,u                            *  addq.b  #1,anim_frame(a0)   ; go to next frame
                      (./objects/main-ch):00072                                                                       *; return_1B3C2:
714B                  (./objects/main-ch):00073                 SAnim_Delay                                           *SAnim_Delay:
714B CC0000           (./objects/main-ch):00074 [3]     1774            ldd   #$00 ; page in a and 0 in b
     714C             (./objects/main-ch):00075                 @page   equ   *-2
                      (./objects/main-ch):00076                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
714E B7E7E6           (    _SetCartPageA):00004 [5]     1779            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7151 39               (./objects/main-ch):00077 [5]     1784            rts                                           *  rts
                      (./objects/main-ch):00078                         ;
7152                  (./objects/main-ch):00079                 Call_SAnim_Do2
                      (./objects/main-ch):00080                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
7152 B6E7E6           (    _GetCartPageA):00004 [5]     1789            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
7155 B7714C           (./objects/main-ch):00081 [5]     1794            sta   @page                    ; backup cart page     
7158 8E9848           (./objects/main-ch):00082 [3]     1797            ldx   #Ani_Page_Index
715B E6C4             (./objects/main-ch):00083 [4]     1801            ldb   id,u
715D 3A               (./objects/main-ch):00084 [3]     1804            abx
715E A684             (./objects/main-ch):00085 [4]     1808            lda   ,x
                      (./objects/main-ch):00086                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7160 B7E7E6           (    _SetCartPageA):00004 [5]     1813            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7163 AE44             (./objects/main-ch):00087 [6]     1819            ldx   anim,u
7165 20D2             (./objects/main-ch):00088 [3]     1822            bra   SAnim_Do2
                      (./objects/main-ch):00089                         ;
7167                  (./objects/main-ch):00090                 Go_SAnim_WalkRun
7167 B6714C           (./objects/main-ch):00091 [5]     1827            lda   @page
                      (./objects/main-ch):00092                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
716A B7E7E6           (    _SetCartPageA):00004 [5]     1832            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
716D 39               (./objects/main-ch):00093 [5]     1837            rts
                      (./objects/main-ch):00094                                                                       *; ===========================================================================
                      (./objects/main-ch):00095                                                                       *; loc_1B3C4:
716E                  (./objects/main-ch):00096                 SAnim_End_FF                                          *SAnim_End_FF:
716E 4C               (./objects/main-ch):00097 [2]     1839            inca                                          *  addq.b  #1,d0       ; is the end flag = $FF ?
716F 2608             (./objects/main-ch):00098 [3]     1842            bne   SAnim_End_FE                            *  bne.s   SAnim_End_FE    ; if not, branch
7171 C600             (./objects/main-ch):00099 [2]     1844            ldb   #0      
7173 E748             (./objects/main-ch):00100 [5]     1849            stb   anim_frame,u                            *  move.b  #0,anim_frame(a0)   ; restart the animation
7175 EC84             (./objects/main-ch):00101 [5]     1854            ldd   ,x                                      *  move.b  1(a1),d0    ; read sprite number
7177 20CE             (./objects/main-ch):00102 [3]     1857            bra   SAnim_Next                              *  bra.s   SAnim_Next
                      (./objects/main-ch):00103                                                                       *; ===========================================================================
                      (./objects/main-ch):00104                                                                       *; loc_1B3D4:
7179                  (./objects/main-ch):00105                 SAnim_End_FE                                          *SAnim_End_FE:
7179 4C               (./objects/main-ch):00106 [2]     1859            inca                                          *  addq.b  #1,d0       ; is the end flag = $FE ?
717A 2610             (./objects/main-ch):00107 [3]     1862            bne   SAnim_End_FD                            *  bne.s   SAnim_End_FD    ; if not, branch
717C A648             (./objects/main-ch):00108 [5]     1867            lda   anim_frame,u                  
717E F77182           (./objects/main-ch):00109 [5]     1872            stb   @c                                      *  move.b  2(a1,d1.w),d0   ; read the next byte in the script
7181 8000             (./objects/main-ch):00110 [2]     1874            suba  #0
     7182             (./objects/main-ch):00111                 @c      equ   *-1        
7183 A748             (./objects/main-ch):00112 [5]     1879            sta   anim_frame,u                            *  sub.b   d0,anim_frame(a0)   ; jump back d0 bytes in the script
                      (./objects/main-ch):00113                                                                       *  sub.b   d0,d1
7185 C602             (./objects/main-ch):00114 [2]     1881            ldb   #2
7187 3D               (./objects/main-ch):00115 [11]    1892            mul                                             
7188 EC8B             (./objects/main-ch):00116 [9]     1901            ldd   d,x                                     *  move.b  1(a1,d1.w),d0   ; read sprite number
718A 20BB             (./objects/main-ch):00117 [3]     1904            bra   SAnim_Next                              *  bra.s   SAnim_Next
                      (./objects/main-ch):00118                                                                       *; ===========================================================================
                      (./objects/main-ch):00119                                                                       *; loc_1B3E8:
718C                  (./objects/main-ch):00120                 SAnim_End_FD                                          *SAnim_End_FD:
718C 4C               (./objects/main-ch):00121 [2]     1906            inca                                          *  addq.b  #1,d0           ; is the end flag = $FD ?
718D 2604             (./objects/main-ch):00122 [3]     1909            bne   SAnim_End                               *  bne.s   SAnim_End       ; if not, branch
718F EC21             (./objects/main-ch):00123 [6]     1915            ldd   1,y
7191 ED44             (./objects/main-ch):00124 [6]     1921            std   anim,u                                  *  move.b  2(a1,d1.w),anim(a0) ; read next byte, run that animation
                      (./objects/main-ch):00125                                                                       *; return_1B3F2:
7193                  (./objects/main-ch):00126                 SAnim_End                                             *SAnim_End:
7193 FC714C           (./objects/main-ch):00127 [6]     1927            ldd   @page ; and set b to 0
                      (./objects/main-ch):00128                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7196 B7E7E6           (    _SetCartPageA):00004 [5]     1932            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7199 39               (./objects/main-ch):00129 [5]     1937            rts                                           *  rts
                      (./objects/main-ch):00130                                                                       *
719A                  (./objects/main-ch):00131                 SAnim_WalkRun_Sub
                      (./objects/main-ch):00132                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
719A B6E7E6           (    _GetCartPageA):00004 [5]     1942            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
719D B7714C           (./objects/main-ch):00133 [5]     1947            sta   @page                    ; backup cart page     
71A0 8E9848           (./objects/main-ch):00134 [3]     1950            ldx   #Ani_Page_Index
71A3 E6C4             (./objects/main-ch):00135 [4]     1954            ldb   id,u
71A5 3A               (./objects/main-ch):00136 [3]     1957            abx
71A6 A684             (./objects/main-ch):00137 [4]     1961            lda   ,x
                      (./objects/main-ch):00138                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
71A8 B7E7E6           (    _SetCartPageA):00004 [5]     1966            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
71AB AE44             (./objects/main-ch):00139 [6]     1972            ldx   anim,u                                  *  moveq   #0,d1
71AD E648             (./objects/main-ch):00140 [5]     1977            ldb   anim_frame,u                            *  move.b  anim_frame(a0),d1   ; load current frame number
71AF 8600             (./objects/main-ch):00141 [2]     1979            lda   #0
                      (./objects/main-ch):00142                         _asld
71B1 58               (            _asld):00001 [2]     1981            aslb
71B2 49               (            _asld):00002 [2]     1983            rola
71B3 318B             (./objects/main-ch):00143 [8]     1991            leay  d,x
71B5 ECA4             (./objects/main-ch):00144 [5]     1996            ldd   ,y                                      *  move.b  1(a1,d1.w),d0       ; read sprite number from script
71B7 81FF             (./objects/main-ch):00145 [2]     1998            cmpa  #$FF                                    *  cmpi.b  #-1,d0
71B9 2606             (./objects/main-ch):00146 [3]     2001            bne   >                                       *  bne.s   +
71BB C600             (./objects/main-ch):00147 [2]     2003            ldb   #0      
71BD E748             (./objects/main-ch):00148 [5]     2008            stb   anim_frame,u                            *  move.b  #0,anim_frame(a0)   ; restart the animation
71BF EC84             (./objects/main-ch):00149 [5]     2013            ldd   ,x                                      *  move.b  1(a1),d0    ; read sprite number
                      (./objects/main-ch):00150                 !
71C1 ED4C             (./objects/main-ch):00151 [6]     2019            std   image_set,u                             *  move.b  d0,mapping_frame(a0)
71C3 2086             (./objects/main-ch):00152 [3]     2022            bra   SAnim_Delay
                      (C:\Users\bhrou\gi):00262                         INCLUDE "./Engine/Graphics/DisplaySprite.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * DisplaySprite
                      (./Engine/Graphics):00003                 * -------------
                      (./Engine/Graphics):00004                 * Subroutine to manage sprite priority.
                      (./Engine/Graphics):00005                 * Object's priority is read and object is (un)registred in display engine.
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * Unlike original S2 code, sprite priority is stored in an open doubly linked list
                      (./Engine/Graphics):00011                 * it allows to keep an exact sprite order for each screen buffer 
                      (./Engine/Graphics):00012                 *
                      (./Engine/Graphics):00013                 * DisplaySprite
                      (./Engine/Graphics):00014                 * input REG : [u] object pointer (OST)
                      (./Engine/Graphics):00015                 *
                      (./Engine/Graphics):00016                 * DisplaySprite_x
                      (./Engine/Graphics):00017                 * input REG : [x] object pointer (OST)
                      (./Engine/Graphics):00018                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00019                                                                                            
71C5                  (./Engine/Graphics):00020                 DisplaySprite_x 
71C5 3456             (./Engine/Graphics):00021 [11]    2033            pshs  d,x,u
71C7 1F13             (./Engine/Graphics):00022 [6]     2039            tfr   x,u
71C9 2002             (./Engine/Graphics):00023 [3]     2042            bra   DSP_Start
                      (./Engine/Graphics):00024                         
71CB                  (./Engine/Graphics):00025                 DisplaySprite 
71CB 3456             (./Engine/Graphics):00026 [11]    2053            pshs  d,x,u
                      (./Engine/Graphics):00027                         
71CD                  (./Engine/Graphics):00028                 DSP_Start
71CD A642             (./Engine/Graphics):00029 [5]     2058            lda   render_flags,u
71CF 84DF             (./Engine/Graphics):00030 [2]     2060            anda  #^render_hide_mask            ; unset hide flag
71D1 A742             (./Engine/Graphics):00031 [5]     2065            sta   render_flags,u
                      (./Engine/Graphics):00032                 
71D3 B67040           (./Engine/Graphics):00033 [5]     2070            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
71D6 2609             (./Engine/Graphics):00034 [3]     2073            bne   DSP_SetBuffer1
                      (./Engine/Graphics):00035                         
71D8                  (./Engine/Graphics):00036                 DSP_SetBuffer0        
71D8 30C835           (./Engine/Graphics):00037 [5]     2078            leax  rsv_buffer_0,u                ; set x pointer to object variables that belongs to screen buffer 0
71DB 108E724A         (./Engine/Graphics):00038 [4]     2082            ldy   #DPS_buffer_0                 ; set y pointer to Display Priority Structure that belongs to screen buffer 0
71DF 2007             (./Engine/Graphics):00039 [3]     2085            bra   DSP_BufferPositionned
                      (./Engine/Graphics):00040                         
71E1                  (./Engine/Graphics):00041                 DSP_SetBuffer1       
71E1 30C849           (./Engine/Graphics):00042 [5]     2090            leax  rsv_buffer_1,u                ; set x pointer to object variables that belongs to screen buffer 1
71E4 108E72AC         (./Engine/Graphics):00043 [4]     2094            ldy   #DPS_buffer_1                 ; set y pointer to Display Priority Structure that belongs to screen buffer 1        
                      (./Engine/Graphics):00044                         
71E8                  (./Engine/Graphics):00045                 DSP_BufferPositionned       
71E8 A643             (./Engine/Graphics):00046 [5]     2099            lda   priority,u                    ; read priority set for this object
71EA A184             (./Engine/Graphics):00047 [4]     2103            cmpa  buf_priority,x
71EC 271E             (./Engine/Graphics):00048 [3]     2106            beq   DSP_rts                       ; priority and current priority are the same: nothing to do
71EE E684             (./Engine/Graphics):00049 [4]     2110            ldb   buf_priority,x   
71F0 2641             (./Engine/Graphics):00050 [3]     2113            bne   DSP_ChangePriority
                      (./Engine/Graphics):00051                         
71F2                  (./Engine/Graphics):00052                 DSP_InitPriority
71F2 A784             (./Engine/Graphics):00053 [4]     2117            sta   buf_priority,x                ; init priority for this screen buffer with priority from object
                      (./Engine/Graphics):00054                         
71F4                  (./Engine/Graphics):00055                 DSP_CheckLastEntry
71F4 31A90012         (./Engine/Graphics):00056 [8]     2125            leay  buf_Tbl_Priority_Last_Entry,y
71F8 48               (./Engine/Graphics):00057 [2]     2127            asla                                ; change priority number to priority index (value x2)        
71F9 6DA6             (./Engine/Graphics):00058 [7]     2134            tst   a,y                           ; test left byte only is ok, no object will be stored at $00__ address
71FB 2611             (./Engine/Graphics):00059 [3]     2137            bne   DSP_addToExistingNode         ; not the first object at this priority level, branch
                      (./Engine/Graphics):00060                         
71FD                  (./Engine/Graphics):00061                 DSP_addFirstNode        
71FD EFA6             (./Engine/Graphics):00062 [6]     2143            stu   a,y                           ; save object as last entry in linked list
71FF 31A9FFEE         (./Engine/Graphics):00063 [8]     2151            leay  buf_Tbl_Priority_First_Entry-buf_Tbl_Priority_Last_Entry,y
7203 EFA6             (./Engine/Graphics):00064 [6]     2157            stu   a,y                           ; save object as first entry in linked list
7205 CC0000           (./Engine/Graphics):00065 [3]     2160            ldd   #0
7208 ED01             (./Engine/Graphics):00066 [6]     2166            std   buf_priority_prev_obj,x       ; clear object prev and next link, it's the only object at this priority level
720A ED03             (./Engine/Graphics):00067 [6]     2172            std   buf_priority_next_obj,x
                      (./Engine/Graphics):00068                         
720C                  (./Engine/Graphics):00069                 DSP_rts
720C 35D6             (./Engine/Graphics):00070 [13]    2185            puls  d,x,u,pc                      ; rts        
                      (./Engine/Graphics):00071                         
720E                  (./Engine/Graphics):00072                 DSP_addToExistingNode
720E AEA6             (./Engine/Graphics):00073 [6]     2191            ldx   a,y                           ; x register now store last object at the priority level of current object
7210 F67040           (./Engine/Graphics):00074 [5]     2196            ldb   glb_Cur_Wrk_Screen_Id
7213 260E             (./Engine/Graphics):00075 [3]     2199            bne   DSP_LinkBuffer1
7215 EF8838           (./Engine/Graphics):00076 [6]     2205            stu   rsv_priority_next_obj_0,x     ; link last object with current object if active screen buffer 0
7218 AFC836           (./Engine/Graphics):00077 [6]     2211            stx   rsv_priority_prev_obj_0,u     ; link current object with previous object
721B 6FC838           (./Engine/Graphics):00078 [7]     2218            clr   rsv_priority_next_obj_0,u     ; clear object next link        
721E 6FC839           (./Engine/Graphics):00079 [7]     2225            clr   rsv_priority_next_obj_0+1,u   ; clear object next link        
7221 200C             (./Engine/Graphics):00080 [3]     2228            bra   DSP_LinkCurWithPrev        
7223                  (./Engine/Graphics):00081                 DSP_LinkBuffer1        
7223 EF884C           (./Engine/Graphics):00082 [6]     2234            stu   rsv_priority_next_obj_1,x     ; link last object with current object if active screen buffer 1
7226 AFC84A           (./Engine/Graphics):00083 [6]     2240            stx   rsv_priority_prev_obj_1,u     ; link current object with previous object
7229 6FC84C           (./Engine/Graphics):00084 [7]     2247            clr   rsv_priority_next_obj_1,u     ; clear object next link        
722C 6FC84D           (./Engine/Graphics):00085 [7]     2254            clr   rsv_priority_next_obj_1+1,u   ; clear object next link        
                      (./Engine/Graphics):00086                         
722F                  (./Engine/Graphics):00087                 DSP_LinkCurWithPrev        
722F EFA6             (./Engine/Graphics):00088 [6]     2260            stu   a,y                           ; update last object in index
7231 35D6             (./Engine/Graphics):00089 [13]    2273            puls  d,x,u,pc                      ; rts
                      (./Engine/Graphics):00090                         
7233                  (./Engine/Graphics):00091                 DSP_ChangePriority
7233 3426             (./Engine/Graphics):00092 [9]     2282            pshs  d,y
7235 31A90024         (./Engine/Graphics):00093 [8]     2290            leay  buf_Lst_Priority_Unset,y
7239 EFB4             (./Engine/Graphics):00094 [8]     2298            stu   [,y]                          ; add current object address to last free unset list cell
723B ECA4             (./Engine/Graphics):00095 [5]     2303            ldd   ,y
723D C30002           (./Engine/Graphics):00096 [4]     2307            addd  #2
7240 EDA4             (./Engine/Graphics):00097 [5]     2312            std   ,y                            ; set unset list free index to next free cell of unset list
7242 3526             (./Engine/Graphics):00098 [9]     2321            puls  d,y                           ; get back DSP_buffer in y
7244 8100             (./Engine/Graphics):00099 [2]     2323            cmpa  #0
7246 26AC             (./Engine/Graphics):00100 [3]     2326            bne   DSP_CheckLastEntry            ; priority is != 0, branch to add object to display priority list
7248 35D6             (./Engine/Graphics):00101 [13]    2339            puls  d,x,u,pc                      ; rts
                      (./Engine/Graphics):00102                 
                      (./Engine/Graphics):00103                         
                      (./Engine/Graphics):00104                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00105                                                        *; Subroutine to display a sprite/object, when a0 is the object RAM
                      (./Engine/Graphics):00106                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00107                                                        *
                      (./Engine/Graphics):00108                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Graphics):00109                                                        *
                      (./Engine/Graphics):00110                                                        *; sub_164F4:
                      (./Engine/Graphics):00111                                                        *DisplaySprite:
                      (./Engine/Graphics):00112                                                        *    lea (Sprite_Table_Input).w,a1
                      (./Engine/Graphics):00113                                                        *    move.w  priority(a0),d0
                      (./Engine/Graphics):00114                                                        *    lsr.w   #1,d0
                      (./Engine/Graphics):00115                                                        *    andi.w  #$380,d0
                      (./Engine/Graphics):00116                                                        *    adda.w  d0,a1
                      (./Engine/Graphics):00117                                                        
                      (./Engine/Graphics):00118                                                        *    cmpi.w  #$7E,(a1)
                      (./Engine/Graphics):00119                                                        *    bhs.s   return_16510
                      (./Engine/Graphics):00120                                                        *    addq.w  #2,(a1)
                      (./Engine/Graphics):00121                                                        
                      (./Engine/Graphics):00122                                                        *    adda.w  (a1),a1
                      (./Engine/Graphics):00123                                                        *    move.w  a0,(a1)
                      (./Engine/Graphics):00124                                                        *
                      (./Engine/Graphics):00125                                                        *return_16510:
                      (./Engine/Graphics):00126                                                        
                      (./Engine/Graphics):00127                                                        *    rts
                      (./Engine/Graphics):00128                                                        *; End of function DisplaySprite       
                      (./Engine/Graphics):00129                 
                      (./Engine/Graphics):00130                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00131                 * Display Priority Structure - DPS
                      (./Engine/Graphics):00132                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00133                 
724A                  (./Engine/Graphics):00134                 DPS_buffer_0
724A 0000000000000000 (./Engine/Graphics):00135                 Tbl_Priority_First_Entry_0    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
725C 0000000000000000 (./Engine/Graphics):00136                 Tbl_Priority_Last_Entry_0     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
726E 7270             (./Engine/Graphics):00137                 Lst_Priority_Unset_0          fdb   Lst_Priority_Unset_0+2     ; pointer to end of list (initialized to its own address+2) (buffer 0)
7270 0000000000000000 (./Engine/Graphics):00138                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
72AC                  (./Engine/Graphics):00139                 DPS_buffer_1                              
72AC 0000000000000000 (./Engine/Graphics):00140                 Tbl_Priority_First_Entry_1    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
72BE 0000000000000000 (./Engine/Graphics):00141                 Tbl_Priority_Last_Entry_1     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
72D0 72D2             (./Engine/Graphics):00142                 Lst_Priority_Unset_1          fdb   Lst_Priority_Unset_1+2     ; pointer to end of list (initialized to its own address+2) (buffer 1)
72D2 0000000000000000 (./Engine/Graphics):00143                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
730E                  (./Engine/Graphics):00144                 DPS_buffer_end                              
                      (./Engine/Graphics):00145                 
     0000             (./Engine/Graphics):00146                 buf_Tbl_Priority_First_Entry  equ   0                                                            
     0012             (./Engine/Graphics):00147                 buf_Tbl_Priority_Last_Entry   equ   Tbl_Priority_Last_Entry_0-DPS_buffer_0          
     0024             (./Engine/Graphics):00148                 buf_Lst_Priority_Unset        equ   Lst_Priority_Unset_0-DPS_buffer_0                                       
                      (C:\Users\bhrou\gi):00263                         INCLUDE "./Engine/Graphics/CheckSpritesRefresh.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * CheckSpritesRefresh
                      (./Engine/Graphics):00003                 * -------------------
                      (./Engine/Graphics):00004                 * Subroutine to determine if sprites are gonna be erased and/or drawn
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (back to front)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                 
                      (./Engine/Graphics):00013                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00014                 * Sub Priority Objects List - SOL
                      (./Engine/Graphics):00015                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00016                 
730E 0000000000000000 (./Engine/Graphics):00017                 Tbl_Sub_Object_Erase          fill  0,nb_graphical_objects*2    ; entries of objects that have erase flag in the order back to front
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
734A 0000000000000000 (./Engine/Graphics):00018                 Tbl_Sub_Object_Draw           fill  0,nb_graphical_objects*2    ; entries of objects that have draw flag in the order back to front                                
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
                      (./Engine/Graphics):00019                                                            
7386                  (./Engine/Graphics):00020                 CheckSpritesRefresh
                      (./Engine/Graphics):00021                 
7386                  (./Engine/Graphics):00022                 CSR_Start
7386 CC730E           (./Engine/Graphics):00023 [3]     2342            ldd   #Tbl_Sub_Object_Erase
7389 DDF7             (./Engine/Graphics):00024 [5]     2347            std   <glb_cur_ptr_sub_obj_erase
738B CC734A           (./Engine/Graphics):00025 [3]     2350            ldd   #Tbl_Sub_Object_Draw
738E DDF5             (./Engine/Graphics):00026 [5]     2355            std   <glb_cur_ptr_sub_obj_draw
7390 B67040           (./Engine/Graphics):00027 [5]     2360            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7393 2666             (./Engine/Graphics):00028 [3]     2363            bne   CSR_SetBuffer1
                      (./Engine/Graphics):00029                         
7395                  (./Engine/Graphics):00030                 CSR_SetBuffer0        
7395 8635             (./Engine/Graphics):00031 [2]     2365            lda   #rsv_buffer_0                 ; set offset to object variables that belongs to screen buffer 0
7397 B77463           (./Engine/Graphics):00032 [5]     2370            sta   CSR_ProcessEachPriorityLevel+2    
739A                  (./Engine/Graphics):00033                 CSR_P8B0
739A FE725A           (./Engine/Graphics):00034 [6]     2376            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
739D 2707             (./Engine/Graphics):00035 [3]     2379            beq   CSR_P7B0
739F 8608             (./Engine/Graphics):00036 [2]     2381            lda   #$08
73A1 97F9             (./Engine/Graphics):00037 [4]     2385            sta   <glb_cur_priority        
73A3 BD7461           (./Engine/Graphics):00038 [8]     2393            jsr   CSR_ProcessEachPriorityLevel   
73A6                  (./Engine/Graphics):00039                 CSR_P7B0
73A6 FE7258           (./Engine/Graphics):00040 [6]     2399            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
73A9 2707             (./Engine/Graphics):00041 [3]     2402            beq   CSR_P6B0
73AB 8607             (./Engine/Graphics):00042 [2]     2404            lda   #$07
73AD 97F9             (./Engine/Graphics):00043 [4]     2408            sta   <glb_cur_priority        
73AF BD7461           (./Engine/Graphics):00044 [8]     2416            jsr   CSR_ProcessEachPriorityLevel   
73B2                  (./Engine/Graphics):00045                 CSR_P6B0
73B2 FE7256           (./Engine/Graphics):00046 [6]     2422            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
73B5 2707             (./Engine/Graphics):00047 [3]     2425            beq   CSR_P5B0
73B7 8606             (./Engine/Graphics):00048 [2]     2427            lda   #$06
73B9 97F9             (./Engine/Graphics):00049 [4]     2431            sta   <glb_cur_priority        
73BB BD7461           (./Engine/Graphics):00050 [8]     2439            jsr   CSR_ProcessEachPriorityLevel   
73BE                  (./Engine/Graphics):00051                 CSR_P5B0
73BE FE7254           (./Engine/Graphics):00052 [6]     2445            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
73C1 2707             (./Engine/Graphics):00053 [3]     2448            beq   CSR_P4B0
73C3 8605             (./Engine/Graphics):00054 [2]     2450            lda   #$05
73C5 97F9             (./Engine/Graphics):00055 [4]     2454            sta   <glb_cur_priority                       
73C7 BD7461           (./Engine/Graphics):00056 [8]     2462            jsr   CSR_ProcessEachPriorityLevel   
73CA                  (./Engine/Graphics):00057                 CSR_P4B0
73CA FE7252           (./Engine/Graphics):00058 [6]     2468            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
73CD 2707             (./Engine/Graphics):00059 [3]     2471            beq   CSR_P3B0
73CF 8604             (./Engine/Graphics):00060 [2]     2473            lda   #$04
73D1 97F9             (./Engine/Graphics):00061 [4]     2477            sta   <glb_cur_priority                       
73D3 BD7461           (./Engine/Graphics):00062 [8]     2485            jsr   CSR_ProcessEachPriorityLevel               
73D6                  (./Engine/Graphics):00063                 CSR_P3B0
73D6 FE7250           (./Engine/Graphics):00064 [6]     2491            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
73D9 2707             (./Engine/Graphics):00065 [3]     2494            beq   CSR_P2B0
73DB 8603             (./Engine/Graphics):00066 [2]     2496            lda   #$03
73DD 97F9             (./Engine/Graphics):00067 [4]     2500            sta   <glb_cur_priority                       
73DF BD7461           (./Engine/Graphics):00068 [8]     2508            jsr   CSR_ProcessEachPriorityLevel      
73E2                  (./Engine/Graphics):00069                 CSR_P2B0
73E2 FE724E           (./Engine/Graphics):00070 [6]     2514            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
73E5 2707             (./Engine/Graphics):00071 [3]     2517            beq   CSR_P1B0
73E7 8602             (./Engine/Graphics):00072 [2]     2519            lda   #$02
73E9 97F9             (./Engine/Graphics):00073 [4]     2523            sta   <glb_cur_priority                       
73EB BD7461           (./Engine/Graphics):00074 [8]     2531            jsr   CSR_ProcessEachPriorityLevel  
73EE                  (./Engine/Graphics):00075                 CSR_P1B0
73EE FE724C           (./Engine/Graphics):00076 [6]     2537            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
73F1 2707             (./Engine/Graphics):00077 [3]     2540            beq   CSR_rtsB0
73F3 8601             (./Engine/Graphics):00078 [2]     2542            lda   #$01
73F5 97F9             (./Engine/Graphics):00079 [4]     2546            sta   <glb_cur_priority                       
73F7 BD7461           (./Engine/Graphics):00080 [8]     2554            jsr   CSR_ProcessEachPriorityLevel
73FA                  (./Engine/Graphics):00081                 CSR_rtsB0        
73FA 39               (./Engine/Graphics):00082 [5]     2559            rts
                      (./Engine/Graphics):00083                         
73FB                  (./Engine/Graphics):00084                 CSR_SetBuffer1       
73FB 8649             (./Engine/Graphics):00085 [2]     2561            lda   #rsv_buffer_1                 ; set offset to object variables that belongs to screen buffer 1
73FD B77463           (./Engine/Graphics):00086 [5]     2566            sta   CSR_ProcessEachPriorityLevel+2        
7400                  (./Engine/Graphics):00087                 CSR_P8B1
7400 FE72BC           (./Engine/Graphics):00088 [6]     2572            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
7403 2707             (./Engine/Graphics):00089 [3]     2575            beq   CSR_P7B1
7405 8608             (./Engine/Graphics):00090 [2]     2577            lda   #$08
7407 97F9             (./Engine/Graphics):00091 [4]     2581            sta   <glb_cur_priority        
7409 BD7461           (./Engine/Graphics):00092 [8]     2589            jsr   CSR_ProcessEachPriorityLevel   
740C                  (./Engine/Graphics):00093                 CSR_P7B1
740C FE72BA           (./Engine/Graphics):00094 [6]     2595            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
740F 2707             (./Engine/Graphics):00095 [3]     2598            beq   CSR_P6B1
7411 8607             (./Engine/Graphics):00096 [2]     2600            lda   #$07
7413 97F9             (./Engine/Graphics):00097 [4]     2604            sta   <glb_cur_priority                       
7415 BD7461           (./Engine/Graphics):00098 [8]     2612            jsr   CSR_ProcessEachPriorityLevel   
7418                  (./Engine/Graphics):00099                 CSR_P6B1
7418 FE72B8           (./Engine/Graphics):00100 [6]     2618            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
741B 2707             (./Engine/Graphics):00101 [3]     2621            beq   CSR_P5B1
741D 8606             (./Engine/Graphics):00102 [2]     2623            lda   #$06
741F 97F9             (./Engine/Graphics):00103 [4]     2627            sta   <glb_cur_priority                       
7421 BD7461           (./Engine/Graphics):00104 [8]     2635            jsr   CSR_ProcessEachPriorityLevel   
7424                  (./Engine/Graphics):00105                 CSR_P5B1
7424 FE72B6           (./Engine/Graphics):00106 [6]     2641            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
7427 2707             (./Engine/Graphics):00107 [3]     2644            beq   CSR_P4B1
7429 8605             (./Engine/Graphics):00108 [2]     2646            lda   #$05
742B 97F9             (./Engine/Graphics):00109 [4]     2650            sta   <glb_cur_priority                       
742D BD7461           (./Engine/Graphics):00110 [8]     2658            jsr   CSR_ProcessEachPriorityLevel   
7430                  (./Engine/Graphics):00111                 CSR_P4B1
7430 FE72B4           (./Engine/Graphics):00112 [6]     2664            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
7433 2707             (./Engine/Graphics):00113 [3]     2667            beq   CSR_P3B1
7435 8604             (./Engine/Graphics):00114 [2]     2669            lda   #$04
7437 97F9             (./Engine/Graphics):00115 [4]     2673            sta   <glb_cur_priority
7439 BD7461           (./Engine/Graphics):00116 [8]     2681            jsr   CSR_ProcessEachPriorityLevel               
743C                  (./Engine/Graphics):00117                 CSR_P3B1
743C FE72B2           (./Engine/Graphics):00118 [6]     2687            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
743F 2707             (./Engine/Graphics):00119 [3]     2690            beq   CSR_P2B1
7441 8603             (./Engine/Graphics):00120 [2]     2692            lda   #$03
7443 97F9             (./Engine/Graphics):00121 [4]     2696            sta   <glb_cur_priority                       
7445 BD7461           (./Engine/Graphics):00122 [8]     2704            jsr   CSR_ProcessEachPriorityLevel      
7448                  (./Engine/Graphics):00123                 CSR_P2B1
7448 FE72B0           (./Engine/Graphics):00124 [6]     2710            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
744B 2707             (./Engine/Graphics):00125 [3]     2713            beq   CSR_P1B1
744D 8602             (./Engine/Graphics):00126 [2]     2715            lda   #$02
744F 97F9             (./Engine/Graphics):00127 [4]     2719            sta   <glb_cur_priority                       
7451 BD7461           (./Engine/Graphics):00128 [8]     2727            jsr   CSR_ProcessEachPriorityLevel  
7454                  (./Engine/Graphics):00129                 CSR_P1B1
7454 FE72AE           (./Engine/Graphics):00130 [6]     2733            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
7457 2707             (./Engine/Graphics):00131 [3]     2736            beq   CSR_rtsB1
7459 8601             (./Engine/Graphics):00132 [2]     2738            lda   #$01
745B 97F9             (./Engine/Graphics):00133 [4]     2742            sta   <glb_cur_priority                       
745D BD7461           (./Engine/Graphics):00134 [8]     2750            jsr   CSR_ProcessEachPriorityLevel
7460                  (./Engine/Graphics):00135                 CSR_rtsB1        
7460 39               (./Engine/Graphics):00136 [5]     2755            rts
                      (./Engine/Graphics):00137                 
7461                  (./Engine/Graphics):00138                 CSR_ProcessEachPriorityLevel
7461 30C810           (./Engine/Graphics):00139 [5]     2760            leax  16,u                          ; dynamic offset, x point to object variables relative to current writable buffer (beware that rsv_buffer_0 and rsv_buffer_1 should be equ >=16)
                      (./Engine/Graphics):00140                         
7464                  (./Engine/Graphics):00141                 CSR_CheckDelHide
7464 A642             (./Engine/Graphics):00142 [5]     2765            lda   render_flags,u
7466 8460             (./Engine/Graphics):00143 [2]     2767            anda  #render_hide_mask|render_todelete_mask
7468 1026005B         (./Engine/Graphics):00144 [5+?]   2772            lbne  CSR_DoNotDisplaySprite      
                      (./Engine/Graphics):00145                 
746C                  (./Engine/Graphics):00146                 CSR_CheckRefresh        
746C A6C822           (./Engine/Graphics):00147 [5]     2777            lda   rsv_render_flags,u
746F 8401             (./Engine/Graphics):00148 [2]     2779            anda  #rsv_render_checkrefresh_mask ; branch if checkrefresh is true
7471 1026014F         (./Engine/Graphics):00149 [5+?]   2784            lbne  CSR_CheckErase
                      (./Engine/Graphics):00150                 
7475                  (./Engine/Graphics):00151                 CSR_UpdSpriteImageBasedOnMirror
                      (./Engine/Graphics):00152                 
                      (./Engine/Graphics):00153                         ; an image set is made of 1 to 4 image subsets
                      (./Engine/Graphics):00154                         ; each subset represent a mirrored version of the image (N: normal, X: x mirror, Y: y mirror, XY: xy mirror)
                      (./Engine/Graphics):00155                         ; this code set the active image subset based on mirror flags
                      (./Engine/Graphics):00156                 
7475 A6C822           (./Engine/Graphics):00157 [5]     2789            lda   rsv_render_flags,u
7478 8A01             (./Engine/Graphics):00158 [2]     2791            ora   #rsv_render_checkrefresh_mask
747A A7C822           (./Engine/Graphics):00159 [5]     2796            sta   rsv_render_flags,u            ; set checkrefresh flag to true
                      (./Engine/Graphics):00160                         
747D 108E9841         (./Engine/Graphics):00161 [4]     2800            ldy   #Img_Page_Index               ; call page that store imageset for this object
7481 8600             (./Engine/Graphics):00162 [2]     2802            lda   #$00
7483 E6C4             (./Engine/Graphics):00163 [4]     2806            ldb   id,u
7485 A6AB             (./Engine/Graphics):00164 [8]     2814            lda   d,y
                      (./Engine/Graphics):00165                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7487 B7E7E6           (    _SetCartPageA):00004 [5]     2819            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00166                         
748A A642             (./Engine/Graphics):00167 [5]     2824            lda   render_flags,u                ; set image to display based on x and y mirror flags
748C 8403             (./Engine/Graphics):00168 [2]     2826            anda  #render_xmirror_mask|render_ymirror_mask
748E 10AE4C           (./Engine/Graphics):00169 [7]     2833            ldy   image_set,u
7491 E626             (./Engine/Graphics):00170 [5]     2838            ldb   image_center_offset,y
7493 E7C825           (./Engine/Graphics):00171 [5]     2843            stb   rsv_image_center_offset,u        
7496 E6A6             (./Engine/Graphics):00172 [5]     2848            ldb   a,y
7498 31A5             (./Engine/Graphics):00173 [5]     2853            leay  b,y                           ; read image set index
749A 10AFC826         (./Engine/Graphics):00174 [7]     2860            sty   rsv_image_subset,u
                      (./Engine/Graphics):00175                         
749E                  (./Engine/Graphics):00176                 CSR_CheckPlayFieldCoord
749E A642             (./Engine/Graphics):00177 [5]     2865            lda   render_flags,u
74A0 8410             (./Engine/Graphics):00178 [2]     2867            anda  #render_playfieldcoord_mask
74A2 274A             (./Engine/Graphics):00179 [3]     2870            beq   CSR_ComputeMappingFrame       ; branch if position is already expressed in screen coordinate
                      (./Engine/Graphics):00180                 
                      (./Engine/Graphics):00181                         ; purpose here is to check if image coordinate in the playfield
                      (./Engine/Graphics):00182                         ; can be converted to screen position, if not it is flagged out of range
                      (./Engine/Graphics):00183                 
74A4 EC4E             (./Engine/Graphics):00184 [6]     2876            ldd   x_pos,u
74A6 93F3             (./Engine/Graphics):00185 [6]     2882            subd  <glb_camera_x_pos
74A8 10250110         (./Engine/Graphics):00186 [5+?]   2887            lblo  CSR_SetOutOfRange             ; out of range if x_pos < glb_camera_x_pos
74AC 4D               (./Engine/Graphics):00187 [2]     2889            tsta 
74AD 1026010B         (./Engine/Graphics):00188 [5+?]   2894            lbne  CSR_SetOutOfRange             ; out of range if x_pos + 256 > glb_camera_x_pos
74B1 E7C814           (./Engine/Graphics):00189 [5]     2899            stb   x_pixel,u
                      (./Engine/Graphics):00190                 
74B4 ECC811           (./Engine/Graphics):00191 [6]     2905            ldd   y_pos,u
74B7 93F1             (./Engine/Graphics):00192 [6]     2911            subd  <glb_camera_y_pos
74B9 102500FF         (./Engine/Graphics):00193 [5+?]   2916            lblo  CSR_SetOutOfRange             ; out of range if y_pos < glb_camera_y_pos
74BD 4D               (./Engine/Graphics):00194 [2]     2918            tsta 
74BE 102600FA         (./Engine/Graphics):00195 [5+?]   2923            lbne  CSR_SetOutOfRange             ; out of range if y_pos + 256 > glb_camera_y_pos
74C2 E7C815           (./Engine/Graphics):00196 [5]     2928            stb   y_pixel,u
74C5 2027             (./Engine/Graphics):00197 [3]     2931            bra   CSR_ComputeMappingFrame
                      (./Engine/Graphics):00198                         
74C7                  (./Engine/Graphics):00199                 CSR_DoNotDisplaySprite
74C7 A643             (./Engine/Graphics):00200 [5]     2936            lda   priority,u                     
74C9 91F9             (./Engine/Graphics):00201 [4]     2940            cmpa  <glb_cur_priority 
74CB 261A             (./Engine/Graphics):00202 [3]     2943            bne   CSR_NextObject                ; next object if this one is a new priority record (no need to erase) 
                      (./Engine/Graphics):00203                         
74CD A6C822           (./Engine/Graphics):00204 [5]     2948            lda   rsv_render_flags,u
74D0 84F9             (./Engine/Graphics):00205 [2]     2950            anda  #^rsv_render_erasesprite_mask&^rsv_render_displaysprite_mask ; set erase and display flag to false
74D2 A7C822           (./Engine/Graphics):00206 [5]     2955            sta   rsv_render_flags,u
                      (./Engine/Graphics):00207                                 
74D5 E68813           (./Engine/Graphics):00208 [5]     2960            ldb   buf_prev_render_flags,x
74D8 2A0D             (./Engine/Graphics):00209 [3]     2963            bpl   CSR_NextObject                ; branch if not on screen
                      (./Engine/Graphics):00210                         
74DA 8A02             (./Engine/Graphics):00211 [2]     2965            ora   #rsv_render_erasesprite_mask  ; set erase flag to true if on screen                  
74DC A7C822           (./Engine/Graphics):00212 [5]     2970            sta   rsv_render_flags,u
                      (./Engine/Graphics):00213                         
74DF 109EF7           (./Engine/Graphics):00214 [6]     2976            ldy   <glb_cur_ptr_sub_obj_erase         ; maintain list of changing sprites to erase
74E2 EFA1             (./Engine/Graphics):00215 [8]     2984            stu   ,y++
74E4 109FF7           (./Engine/Graphics):00216 [6]     2990            sty   <glb_cur_ptr_sub_obj_erase 
                      (./Engine/Graphics):00217                         
74E7                  (./Engine/Graphics):00218                 CSR_NextObject
74E7 EE03             (./Engine/Graphics):00219 [6]     2996            ldu   buf_priority_next_obj,x
74E9 1026FF74         (./Engine/Graphics):00220 [5+?]   3001            lbne  CSR_ProcessEachPriorityLevel   
74ED 39               (./Engine/Graphics):00221 [5]     3006            rts
                      (./Engine/Graphics):00222                 
74EE                  (./Engine/Graphics):00223                 CSR_ComputeMappingFrame
                      (./Engine/Graphics):00224                 
                      (./Engine/Graphics):00225                         ; The image subset reference up to 4 version of an image
                      (./Engine/Graphics):00226                         ; Draw/Erase, Draw routines and shifted version by 1 pixel of these two routines
                      (./Engine/Graphics):00227                         ; The following code set the appropriate routine that will draw the image
                      (./Engine/Graphics):00228                         ; First thing is to check if the image position is odd or even
                      (./Engine/Graphics):00229                         ; and select the appropriate routine. If no routine is found, it will select the avaible routine.
                      (./Engine/Graphics):00230                         ; The selected image will also be based on image type overlay or not (Simple Draw or Draw/Erase)
                      (./Engine/Graphics):00231                 
74EE E6C814           (./Engine/Graphics):00232 [5]     3011    @a      ldb   x_pixel,u                     ; compute mapping_frame 
74F1 E8C825           (./Engine/Graphics):00233 [5]     3016    @b      eorb  rsv_image_center_offset,u     ; case of odd image center switch shifted image with normal
74F4 C401             (./Engine/Graphics):00234 [2]     3018            andb  #1                            ; index of sub image is encoded in two bits: 00|B0, 01|D0, 10|B1, 11|D1         
74F6 58               (./Engine/Graphics):00235 [2]     3020            aslb                                ; set bit2 for 1px shifted image  
74F7 A642             (./Engine/Graphics):00236 [5]     3025            lda   render_flags,u            
74F9 8404             (./Engine/Graphics):00237 [2]     3027            anda  #render_overlay_mask          ; set bit1 for normal (background save) or overlay sprite (no background save)
74FB 2701             (./Engine/Graphics):00238 [3]     3030            beq   @c
74FD 5C               (./Engine/Graphics):00239 [2]     3032            incb
74FE                  (./Engine/Graphics):00240                 @c
74FE A6A5             (./Engine/Graphics):00241 [5]     3037            lda   b,y
7500 2708             (./Engine/Graphics):00242 [3]     3040            beq   CSR_NoDefinedFrame
7502 31A6             (./Engine/Graphics):00243 [5]     3045            leay  a,y                           ; read image subset index
7504 10AFC828         (./Engine/Graphics):00244 [7]     3052            sty   rsv_mapping_frame,u
7508 2021             (./Engine/Graphics):00245 [3]     3055            bra   CSR_UpdateMetadata
750A                  (./Engine/Graphics):00246                 CSR_NoDefinedFrame
750A C802             (./Engine/Graphics):00247 [2]     3057            eorb  #%00000010                    ; check if there is an alternate shifted image available
750C 2705             (./Engine/Graphics):00248 [3]     3060            beq   @e
750E 6CC825           (./Engine/Graphics):00249 [7]     3067            inc   rsv_image_center_offset,u     ; ajust offset for alternate
7511 2003             (./Engine/Graphics):00250 [3]     3070            bra   @f
7513 6AC825           (./Engine/Graphics):00251 [7]     3077    @e      dec   rsv_image_center_offset,u
7516 6DA5             (./Engine/Graphics):00252 [7]     3084    @f      tst   b,y
7518 26E4             (./Engine/Graphics):00253 [3]     3087            bne   @c        
                      (./Engine/Graphics):00254                 
751A 108E0000         (./Engine/Graphics):00255 [4]     3091            ldy   #0                            ; no defined frame, nothing will be displayed
751E 10AFC828         (./Engine/Graphics):00256 [7]     3098            sty   rsv_mapping_frame,u
7522 A642             (./Engine/Graphics):00257 [5]     3103            lda   render_flags,u
7524 8A20             (./Engine/Graphics):00258 [2]     3105            ora   #render_hide_mask             ; set hide flag
7526 A742             (./Engine/Graphics):00259 [5]     3110            sta   render_flags,u
7528 7E75C4           (./Engine/Graphics):00260 [4]     3114            jmp   CSR_CheckErase
                      (./Engine/Graphics):00261                                 
752B                  (./Engine/Graphics):00262                 CSR_UpdateMetadata
752B A626             (./Engine/Graphics):00263 [5]     3119            lda   erase_nb_cell,y               ; copy current image metadata into object data
752D A7C82A           (./Engine/Graphics):00264 [5]     3124            sta   rsv_erase_nb_cell,u           ; this is needed to avoid a lot of page switch 
7530 A6A4             (./Engine/Graphics):00265 [4]     3128            lda   page_draw_routine,y           ; during following routines
7532 A7C82B           (./Engine/Graphics):00266 [5]     3133            sta   rsv_page_draw_routine,u
7535 EC21             (./Engine/Graphics):00267 [6]     3139            ldd   draw_routine,y
7537 EDC82C           (./Engine/Graphics):00268 [6]     3145            std   rsv_draw_routine,u
753A A623             (./Engine/Graphics):00269 [5]     3150            lda   page_erase_routine,y
753C A7C82E           (./Engine/Graphics):00270 [5]     3155            sta   rsv_page_erase_routine,u
753F EC24             (./Engine/Graphics):00271 [6]     3161            ldd   erase_routine,y
7541 EDC82F           (./Engine/Graphics):00272 [6]     3167            std   rsv_erase_routine,u
                      (./Engine/Graphics):00273                         
7544                  (./Engine/Graphics):00274                 CSR_CheckPosition        
7544 E6C815           (./Engine/Graphics):00275 [5]     3172            ldb   y_pixel,u                     ; check if sprite is fully in screen vertical range
7547 10AEC826         (./Engine/Graphics):00276 [7]     3179            ldy   rsv_image_subset,u
754B EB25             (./Engine/Graphics):00277 [5]     3184            addb  image_subset_y1_offset,y
754D C1E3             (./Engine/Graphics):00278 [2]     3186            cmpb  #screen_bottom
754F 226B             (./Engine/Graphics):00279 [3]     3189            bhi   CSR_SetOutOfRange
7551 C11C             (./Engine/Graphics):00280 [2]     3191            cmpb  #screen_top
7553 2567             (./Engine/Graphics):00281 [3]     3194            blo   CSR_SetOutOfRange        
7555 E7C832           (./Engine/Graphics):00282 [5]     3199            stb   rsv_y1_pixel,u
7558 10AE4C           (./Engine/Graphics):00283 [7]     3206            ldy   image_set,u
755B EB25             (./Engine/Graphics):00284 [5]     3211            addb  image_y_size,y
755D C1E3             (./Engine/Graphics):00285 [2]     3213            cmpb  #screen_bottom
755F 225B             (./Engine/Graphics):00286 [3]     3216            bhi   CSR_SetOutOfRange
7561 C11C             (./Engine/Graphics):00287 [2]     3218            cmpb  #screen_top
7563 2557             (./Engine/Graphics):00288 [3]     3221            blo   CSR_SetOutOfRange        
7565 E7C834           (./Engine/Graphics):00289 [5]     3226            stb   rsv_y2_pixel,u
7568 E1C832           (./Engine/Graphics):00290 [5]     3231            cmpb  rsv_y1_pixel,u                ; check wrapping
756B 254F             (./Engine/Graphics):00291 [3]     3234            blo   CSR_SetOutOfRange
                      (./Engine/Graphics):00292                                 
756D A642             (./Engine/Graphics):00293 [5]     3239            lda   render_flags,u                ; check if sprite is fully in screen horizontal range
756F 8580             (./Engine/Graphics):00294 [2]     3241            bita  #render_xloop_mask
7571 262B             (./Engine/Graphics):00295 [3]     3244            bne   CSR_DontCheckXFrontier   
                      (./Engine/Graphics):00296                         
7573 E6C814           (./Engine/Graphics):00297 [5]     3249            ldb   x_pixel,u
7576 10AEC826         (./Engine/Graphics):00298 [7]     3256            ldy   rsv_image_subset,u
757A EB24             (./Engine/Graphics):00299 [5]     3261            addb  image_subset_x1_offset,y
757C C1CF             (./Engine/Graphics):00300 [2]     3263            cmpb  #screen_right
757E 223C             (./Engine/Graphics):00301 [3]     3266            bhi   CSR_SetOutOfRange
7580 C130             (./Engine/Graphics):00302 [2]     3268            cmpb  #screen_left
7582 2538             (./Engine/Graphics):00303 [3]     3271            blo   CSR_SetOutOfRange
7584 E7C831           (./Engine/Graphics):00304 [5]     3276            stb   rsv_x1_pixel,u
7587 10AE4C           (./Engine/Graphics):00305 [7]     3283            ldy   image_set,u
758A EB24             (./Engine/Graphics):00306 [5]     3288            addb  image_x_size,y
758C C1CF             (./Engine/Graphics):00307 [2]     3290            cmpb  #screen_right
758E 222C             (./Engine/Graphics):00308 [3]     3293            bhi   CSR_SetOutOfRange
7590 C130             (./Engine/Graphics):00309 [2]     3295            cmpb  #screen_left
7592 2528             (./Engine/Graphics):00310 [3]     3298            blo   CSR_SetOutOfRange
7594 E7C833           (./Engine/Graphics):00311 [5]     3303            stb   rsv_x2_pixel,u
7597 E1C831           (./Engine/Graphics):00312 [5]     3308            cmpb  rsv_x1_pixel,u                ; check wrapping
759A 2520             (./Engine/Graphics):00313 [3]     3311            blo   CSR_SetOutOfRange 
                      (./Engine/Graphics):00314                                 
759C 2014             (./Engine/Graphics):00315 [3]     3314            bra   CSR_DontCheckXFrontier_end        
                      (./Engine/Graphics):00316                         
759E                  (./Engine/Graphics):00317                 CSR_DontCheckXFrontier  
759E E6C814           (./Engine/Graphics):00318 [5]     3319            ldb   x_pixel,u
75A1 10AEC826         (./Engine/Graphics):00319 [7]     3326            ldy   rsv_image_subset,u
75A5 EB24             (./Engine/Graphics):00320 [5]     3331            addb  image_subset_x1_offset,y
75A7 E7C831           (./Engine/Graphics):00321 [5]     3336            stb   rsv_x1_pixel,u
                      (./Engine/Graphics):00322                         
75AA 10AE4C           (./Engine/Graphics):00323 [7]     3343            ldy   image_set,u
75AD EB24             (./Engine/Graphics):00324 [5]     3348            addb  image_x_size,y
75AF E7C833           (./Engine/Graphics):00325 [5]     3353            stb   rsv_x2_pixel,u      
                      (./Engine/Graphics):00326                 
75B2                  (./Engine/Graphics):00327                 CSR_DontCheckXFrontier_end        
75B2 A6C822           (./Engine/Graphics):00328 [5]     3358            lda   rsv_render_flags,u
75B5 84F7             (./Engine/Graphics):00329 [2]     3360            anda  #^rsv_render_outofrange_mask  ; unset out of range flag
75B7 A7C822           (./Engine/Graphics):00330 [5]     3365            sta   rsv_render_flags,u
75BA 2008             (./Engine/Graphics):00331 [3]     3368            bra   CSR_CheckErase
                      (./Engine/Graphics):00332                                 
75BC                  (./Engine/Graphics):00333                 CSR_SetOutOfRange
75BC A6C822           (./Engine/Graphics):00334 [5]     3373            lda   rsv_render_flags,u
75BF 8A08             (./Engine/Graphics):00335 [2]     3375            ora   #rsv_render_outofrange_mask   ; set out of range flag
75C1 A7C822           (./Engine/Graphics):00336 [5]     3380            sta   rsv_render_flags,u
                      (./Engine/Graphics):00337                 
75C4                  (./Engine/Graphics):00338                 CSR_CheckErase
75C4 BF769E           (./Engine/Graphics):00339 [6]     3386            stx   CSR_CheckDraw+1
75C7 A684             (./Engine/Graphics):00340 [4]     3390            lda   buf_priority,x
75C9 91F9             (./Engine/Graphics):00341 [4]     3394            cmpa  <glb_cur_priority 
75CB 102600CE         (./Engine/Graphics):00342 [5+?]   3399            lbne  CSR_CheckDraw
                      (./Engine/Graphics):00343                         
75CF 109EF7           (./Engine/Graphics):00344 [6]     3405            ldy   <glb_cur_ptr_sub_obj_erase
                      (./Engine/Graphics):00345                         
75D2 A6C822           (./Engine/Graphics):00346 [5]     3410            lda   rsv_render_flags,u
75D5 8408             (./Engine/Graphics):00347 [2]     3412            anda  #rsv_render_outofrange_mask
75D7 2709             (./Engine/Graphics):00348 [3]     3415            beq   CSR_CheckErase_InRange
75D9 A68813           (./Engine/Graphics):00349 [5]     3420            lda   buf_prev_render_flags,x
75DC 102A0109         (./Engine/Graphics):00350 [5+?]   3425            lbpl  CSR_SetEraseDrawFalse         ; branch if object is not on screen    
75E0 2024             (./Engine/Graphics):00351 [3]     3428            bra   CSR_SetEraseTrue
                      (./Engine/Graphics):00352                                 
75E2                  (./Engine/Graphics):00353                 CSR_CheckErase_InRange        
75E2 A68813           (./Engine/Graphics):00354 [5]     3433            lda   buf_prev_render_flags,x
75E5 102A00AC         (./Engine/Graphics):00355 [5+?]   3438            lbpl  CSR_SetEraseFalse             ; branch if object is not on screen
75E9 96E8             (./Engine/Graphics):00356 [4]     3442            lda   <glb_force_sprite_refresh
75EB 2619             (./Engine/Graphics):00357 [3]     3445            bne   CSR_SetEraseTrue
75ED ECC814           (./Engine/Graphics):00358 [6]     3451            ldd   xy_pixel,u
75F0 44               (./Engine/Graphics):00359 [2]     3453            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit, y position precision is y_pixel  
75F1 10A30D           (./Engine/Graphics):00360 [8]     3461            cmpd  buf_prev_xy_pixel,x
75F4 2610             (./Engine/Graphics):00361 [3]     3464            bne   CSR_SetEraseTrue              ; branch if object moved since last frame
75F6 ECC828           (./Engine/Graphics):00362 [6]     3470            ldd   rsv_mapping_frame,u
75F9 10A305           (./Engine/Graphics):00363 [8]     3478            cmpd  buf_prev_mapping_frame,x
75FC 2608             (./Engine/Graphics):00364 [3]     3481            bne   CSR_SetEraseTrue              ; branch if object image changed since last frame
75FE A643             (./Engine/Graphics):00365 [5]     3486            lda   priority,u
7600 A184             (./Engine/Graphics):00366 [4]     3490            cmpa  buf_priority,x
7602 2602             (./Engine/Graphics):00367 [3]     3493            bne   CSR_SetEraseTrue              ; branch if object priority changed since last frame
7604 2010             (./Engine/Graphics):00368 [3]     3496            bra   CSR_SubEraseSpriteSearchInit  ; branch if object is on screen but unchanged since last frame
                      (./Engine/Graphics):00369                         
7606                  (./Engine/Graphics):00370                 CSR_SetEraseTrue        
7606 A6C822           (./Engine/Graphics):00371 [5]     3501            lda   rsv_render_flags,u
7609 8A02             (./Engine/Graphics):00372 [2]     3503            ora   #rsv_render_erasesprite_mask
760B A7C822           (./Engine/Graphics):00373 [5]     3508            sta   rsv_render_flags,u
                      (./Engine/Graphics):00374                         
760E EFA1             (./Engine/Graphics):00375 [8]     3516            stu   ,y++
7610 109FF7           (./Engine/Graphics):00376 [6]     3522            sty   <glb_cur_ptr_sub_obj_erase
                      (./Engine/Graphics):00377                                 
7613 7E769D           (./Engine/Graphics):00378 [4]     3526            jmp   CSR_CheckDraw
                      (./Engine/Graphics):00379                         
7616                  (./Engine/Graphics):00380                 CSR_SubEraseSpriteSearchInit
                      (./Engine/Graphics):00381                 
                      (./Engine/Graphics):00382                         * search a collision with a sprite under the current sprite
                      (./Engine/Graphics):00383                         * the sprite under should have to be erased or displayed
                      (./Engine/Graphics):00384                         * in this case it forces the refresh of the current sprite that was not supposed to be refreshed
                      (./Engine/Graphics):00385                         * as a sub loop, this should be optimized as much as possible ... I hope it is
                      (./Engine/Graphics):00386                         * there are two lists because a sprite can be erased at a position
                      (./Engine/Graphics):00387                         * and displayed at another position : both cases should be tested !
                      (./Engine/Graphics):00388                 
7616 9EF7             (./Engine/Graphics):00389 [5]     3531            ldx   <glb_cur_ptr_sub_obj_erase       
7618 B67040           (./Engine/Graphics):00390 [5]     3536            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
761B 2627             (./Engine/Graphics):00391 [3]     3539            bne   CSR_SubEraseSearchB1
                      (./Engine/Graphics):00392                         
761D                  (./Engine/Graphics):00393                 CSR_SubEraseSearchB0
761D 8C730E           (./Engine/Graphics):00394 [4]     3543            cmpx  #Tbl_Sub_Object_Erase
7620 2749             (./Engine/Graphics):00395 [3]     3546            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
7622 10AE83           (./Engine/Graphics):00396 [9]     3555            ldy   ,--x
                      (./Engine/Graphics):00397                         
7625                  (./Engine/Graphics):00398                 CSR_SubEraseCheckCollisionB0
7625 ECA844           (./Engine/Graphics):00399 [6]     3561            ldd   rsv_prev_xy1_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 and rsv_prev_y_pixel_0 in one instruction
7628 A1C833           (./Engine/Graphics):00400 [5]     3566            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
762B 22F0             (./Engine/Graphics):00401 [3]     3569            bhi   CSR_SubEraseSearchB0
762D E1C834           (./Engine/Graphics):00402 [5]     3574            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
7630 22EB             (./Engine/Graphics):00403 [3]     3577            bhi   CSR_SubEraseSearchB0
7632 ECA846           (./Engine/Graphics):00404 [6]     3583            ldd   rsv_prev_xy2_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 + rsv_prev_mapping_frame_0.x_size and rsv_prev_y_pixel_0 + rsv_prev_mapping_frame_0.y_size in one instruction
7635 A1C831           (./Engine/Graphics):00405 [5]     3588            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
7638 25E3             (./Engine/Graphics):00406 [3]     3591            blo   CSR_SubEraseSearchB0
763A E1C832           (./Engine/Graphics):00407 [5]     3596            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
763D 25DE             (./Engine/Graphics):00408 [3]     3599            blo   CSR_SubEraseSearchB0
                      (./Engine/Graphics):00409                         
763F 109EF7           (./Engine/Graphics):00410 [6]     3605            ldy   <glb_cur_ptr_sub_obj_erase
7642 20C2             (./Engine/Graphics):00411 [3]     3608            bra   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00412                 
7644                  (./Engine/Graphics):00413                 CSR_SubEraseSearchB1
7644 8C730E           (./Engine/Graphics):00414 [4]     3612            cmpx  #Tbl_Sub_Object_Erase
7647 2722             (./Engine/Graphics):00415 [3]     3615            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
7649 10AE83           (./Engine/Graphics):00416 [9]     3624            ldy   ,--x
                      (./Engine/Graphics):00417                         
764C                  (./Engine/Graphics):00418                 CSR_SubEraseCheckCollisionB1
764C ECA858           (./Engine/Graphics):00419 [6]     3630            ldd   rsv_prev_xy1_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 and rsv_prev_y_pixel_1 in one instruction
764F A1C833           (./Engine/Graphics):00420 [5]     3635            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
7652 22F0             (./Engine/Graphics):00421 [3]     3638            bhi   CSR_SubEraseSearchB1
7654 E1C834           (./Engine/Graphics):00422 [5]     3643            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
7657 22EB             (./Engine/Graphics):00423 [3]     3646            bhi   CSR_SubEraseSearchB1
7659 ECA85A           (./Engine/Graphics):00424 [6]     3652            ldd   rsv_prev_xy2_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 + rsv_prev_mapping_frame_1.x_size and rsv_prev_y_pixel_1 + rsv_prev_mapping_frame_1.y_size in one instruction
765C A1C831           (./Engine/Graphics):00425 [5]     3657            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
765F 25E3             (./Engine/Graphics):00426 [3]     3660            blo   CSR_SubEraseSearchB1
7661 E1C832           (./Engine/Graphics):00427 [5]     3665            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
7664 25DE             (./Engine/Graphics):00428 [3]     3668            blo   CSR_SubEraseSearchB1
                      (./Engine/Graphics):00429                         
7666 109EF7           (./Engine/Graphics):00430 [6]     3674            ldy   <glb_cur_ptr_sub_obj_erase
7669 209B             (./Engine/Graphics):00431 [3]     3677            bra   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00432                 
766B                  (./Engine/Graphics):00433                 CSR_SubDrawSpriteSearchInit
766B 9EF5             (./Engine/Graphics):00434 [5]     3682            ldx   <glb_cur_ptr_sub_obj_draw
                      (./Engine/Graphics):00435                         
766D                  (./Engine/Graphics):00436                 CSR_SubDrawSearch
766D 8C734A           (./Engine/Graphics):00437 [4]     3686            cmpx  #Tbl_Sub_Object_Draw
7670 2723             (./Engine/Graphics):00438 [3]     3689            beq   CSR_SetEraseFalse             ; branch if no more sub objects
7672 10AE83           (./Engine/Graphics):00439 [9]     3698            ldy   ,--x
                      (./Engine/Graphics):00440                 
7675                  (./Engine/Graphics):00441                 CSR_SubDrawCheckCollision
7675 ECA831           (./Engine/Graphics):00442 [6]     3704            ldd   rsv_xy1_pixel,y               ; sub entry : x_pixel and y_pixel in one instruction
7678 A1C833           (./Engine/Graphics):00443 [5]     3709            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
767B 22F0             (./Engine/Graphics):00444 [3]     3712            bhi   CSR_SubDrawSearch
767D E1C834           (./Engine/Graphics):00445 [5]     3717            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
7680 22EB             (./Engine/Graphics):00446 [3]     3720            bhi   CSR_SubDrawSearch
7682 ECA833           (./Engine/Graphics):00447 [6]     3726            ldd   rsv_xy2_pixel,y               ; sub entry : x_pixel + rsv_mapping_frame.x_size and y_pixel + rsv_mapping_frame.y_size in one instruction
7685 A1C831           (./Engine/Graphics):00448 [5]     3731            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
7688 25E3             (./Engine/Graphics):00449 [3]     3734            blo   CSR_SubDrawSearch
768A E1C832           (./Engine/Graphics):00450 [5]     3739            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
768D 25DE             (./Engine/Graphics):00451 [3]     3742            blo   CSR_SubDrawSearch
                      (./Engine/Graphics):00452                         
768F 109EF7           (./Engine/Graphics):00453 [6]     3748            ldy   <glb_cur_ptr_sub_obj_erase
7692 7E7606           (./Engine/Graphics):00454 [4]     3752            jmp   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00455                 
7695                  (./Engine/Graphics):00456                 CSR_SetEraseFalse
7695 A6C822           (./Engine/Graphics):00457 [5]     3757            lda   rsv_render_flags,u 
7698 84FD             (./Engine/Graphics):00458 [2]     3759            anda  #^rsv_render_erasesprite_mask
769A A7C822           (./Engine/Graphics):00459 [5]     3764            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00460                                
769D                  (./Engine/Graphics):00461                 CSR_CheckDraw
769D 8EFFFF           (./Engine/Graphics):00462 [3]     3767            ldx   #$FFFF                        ; dynamic restore x
76A0 A643             (./Engine/Graphics):00463 [5]     3772            lda   priority,u
76A2 91F9             (./Engine/Graphics):00464 [4]     3776            cmpa  <glb_cur_priority 
76A4 1026FE3F         (./Engine/Graphics):00465 [5+?]   3781            lbne  CSR_NextObject
                      (./Engine/Graphics):00466                         
76A8 109EF5           (./Engine/Graphics):00467 [6]     3787            ldy   <glb_cur_ptr_sub_obj_draw
                      (./Engine/Graphics):00468                         
76AB A6C822           (./Engine/Graphics):00469 [5]     3792            lda   rsv_render_flags,u
76AE 8408             (./Engine/Graphics):00470 [2]     3794            anda  #rsv_render_outofrange_mask
76B0 263F             (./Engine/Graphics):00471 [3]     3797            bne   CSR_SetDrawFalse              ; branch if object image is out of range
76B2 ECC828           (./Engine/Graphics):00472 [6]     3803            ldd   rsv_mapping_frame,u
76B5 273A             (./Engine/Graphics):00473 [3]     3806            beq   CSR_SetDrawFalse              ; branch if object have no image
76B7 A642             (./Engine/Graphics):00474 [5]     3811            lda   render_flags,u
76B9 8420             (./Engine/Graphics):00475 [2]     3813            anda  #render_hide_mask
76BB 2634             (./Engine/Graphics):00476 [3]     3816            bne   CSR_SetDrawFalse              ; branch if object is hidden
                      (./Engine/Graphics):00477                         
76BD                  (./Engine/Graphics):00478                 CSR_SetDrawTrue 
76BD A6C822           (./Engine/Graphics):00479 [5]     3821            lda   rsv_render_flags,u
76C0 8A04             (./Engine/Graphics):00480 [2]     3823            ora   #rsv_render_displaysprite_mask ; set displaysprite flag   
76C2 A7C822           (./Engine/Graphics):00481 [5]     3828            sta   rsv_render_flags,u         
                      (./Engine/Graphics):00482                         
76C5 8502             (./Engine/Graphics):00483 [2]     3830            bita  #rsv_render_erasesprite_mask
76C7 2702             (./Engine/Graphics):00484 [3]     3833            beq   CSR_SDT1
76C9 2007             (./Engine/Graphics):00485 [3]     3836            bra   CSR_SDT2
76CB                  (./Engine/Graphics):00486                 CSR_SDT1                      
76CB E68813           (./Engine/Graphics):00487 [5]     3841            ldb   buf_prev_render_flags,x
76CE 2B0C             (./Engine/Graphics):00488 [3]     3844            bmi   CSR_SetHide
76D0 2005             (./Engine/Graphics):00489 [3]     3847            bra   CSR_SDT3      
76D2                  (./Engine/Graphics):00490                 CSR_SDT2                      
76D2 E68813           (./Engine/Graphics):00491 [5]     3852            ldb   buf_prev_render_flags,x
76D5 2A05             (./Engine/Graphics):00492 [3]     3855            bpl   CSR_SetHide
76D7                  (./Engine/Graphics):00493                 CSR_SDT3
76D7 EFA1             (./Engine/Graphics):00494 [8]     3863            stu   ,y++
76D9 109FF5           (./Engine/Graphics):00495 [6]     3869            sty   <glb_cur_ptr_sub_obj_draw          ; maintain list of changing sprites to draw, should be to draw and ((on screen and to erase) or (not on screen and not to erase)) 
                      (./Engine/Graphics):00496                 
76DC                  (./Engine/Graphics):00497                 CSR_SetHide        
76DC A642             (./Engine/Graphics):00498 [5]     3874            lda   render_flags,u
76DE 8A20             (./Engine/Graphics):00499 [2]     3876            ora   #render_hide_mask             ; set hide flag
76E0 A742             (./Engine/Graphics):00500 [5]     3881            sta   render_flags,u        
                      (./Engine/Graphics):00501                         
76E2 EE03             (./Engine/Graphics):00502 [6]     3887            ldu   buf_priority_next_obj,x
76E4 1026FD79         (./Engine/Graphics):00503 [5+?]   3892            lbne  CSR_ProcessEachPriorityLevel   
76E8 39               (./Engine/Graphics):00504 [5]     3897            rts
                      (./Engine/Graphics):00505                 
76E9                  (./Engine/Graphics):00506                 CSR_SetEraseDrawFalse 
76E9 A6C822           (./Engine/Graphics):00507 [5]     3902            lda   rsv_render_flags,u 
76EC 84FD             (./Engine/Graphics):00508 [2]     3904            anda  #^rsv_render_erasesprite_mask
76EE A7C822           (./Engine/Graphics):00509 [5]     3909            sta   rsv_render_flags,u 
                      (./Engine/Graphics):00510                 
76F1                  (./Engine/Graphics):00511                 CSR_SetDrawFalse 
76F1 A6C822           (./Engine/Graphics):00512 [5]     3914            lda   rsv_render_flags,u
76F4 84FB             (./Engine/Graphics):00513 [2]     3916            anda  #^rsv_render_displaysprite_mask
76F6 A7C822           (./Engine/Graphics):00514 [5]     3921            sta   rsv_render_flags,u
                      (./Engine/Graphics):00515                         
76F9 EE03             (./Engine/Graphics):00516 [6]     3927            ldu   buf_priority_next_obj,x
76FB 1026FD62         (./Engine/Graphics):00517 [5+?]   3932            lbne   CSR_ProcessEachPriorityLevel   
76FF 39               (./Engine/Graphics):00518 [5]     3937            rts      
                      (C:\Users\bhrou\gi):00264                         INCLUDE "./Engine/Graphics/EraseSprites.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * EraseSprites
                      (./Engine/Graphics):00003                 * ------------
                      (./Engine/Graphics):00004                 * Subroutine to erase sprites on screen
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (front to back)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                                                 
                      (./Engine/Graphics):00013                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00014                 * Background Backup Cells - BBC
                      (./Engine/Graphics):00015                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00016                 
                      (./Engine/Graphics):00017                 * ----- Cell variables
     0000             (./Engine/Graphics):00018                 nb_cells                      equ   0
     0001             (./Engine/Graphics):00019                 cell_start                    equ   1
     0003             (./Engine/Graphics):00020                 cell_end                      equ   3
     0005             (./Engine/Graphics):00021                 next_entry                    equ   5
     0007             (./Engine/Graphics):00022                 entry_size                    equ   7
                      (./Engine/Graphics):00023                 
                      (./Engine/Graphics):00024                 * ----- Cells List
     0080             (./Engine/Graphics):00025                 nb_free_cells                 equ   128
     0040             (./Engine/Graphics):00026                 cell_size                     equ   64     ; 64 bytes x 128 from $4000 to $5FFF
     6000             (./Engine/Graphics):00027                 cell_start_adr                equ   $6000
                      (./Engine/Graphics):00028                 
7700 7702             (./Engine/Graphics):00029                 Lst_FreeCellFirstEntry_0      fdb   Lst_FreeCell_0 ; Pointer to first entry in free cell list (buffer 0)
7702 80               (./Engine/Graphics):00030                 Lst_FreeCell_0                fcb   nb_free_cells ; init of first free cell
7703 4000             (./Engine/Graphics):00031                                               fdb   cell_start_adr-cell_size*nb_free_cells
7705 6000             (./Engine/Graphics):00032                                               fdb   cell_start_adr
7707 0000             (./Engine/Graphics):00033                                               fdb   $0000
7709 0000000000000000 (./Engine/Graphics):00034                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 0)
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./Engine/Graphics):00035                                               
78C8 78CA             (./Engine/Graphics):00036                 Lst_FreeCellFirstEntry_1      fdb   Lst_FreeCell_1 ; Pointer to first entry in free cell list (buffer 1)
78CA 80               (./Engine/Graphics):00037                 Lst_FreeCell_1                fcb   nb_free_cells ; init of first free cell
78CB 4000             (./Engine/Graphics):00038                                               fdb   cell_start_adr-cell_size*nb_free_cells
78CD 6000             (./Engine/Graphics):00039                                               fdb   cell_start_adr
78CF 0000             (./Engine/Graphics):00040                                               fdb   $0000
78D1 0000000000000000 (./Engine/Graphics):00041                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 1)                                                
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./Engine/Graphics):00042                                                                                            
7A90                  (./Engine/Graphics):00043                 EraseSprites
7A90 8600             (./Engine/Graphics):00044 [2]     3939            lda   #0
7A92 97E8             (./Engine/Graphics):00045 [4]     3943            sta   <glb_force_sprite_refresh
                      (./Engine/Graphics):00046                 
7A94                  (./Engine/Graphics):00047                 ESP_Start
7A94 B67040           (./Engine/Graphics):00048 [5]     3948            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7A97 2669             (./Engine/Graphics):00049 [3]     3951            bne   ESP_P1B1
                      (./Engine/Graphics):00050                 
7A99                  (./Engine/Graphics):00051                 ESP_P1B0
7A99 FE725E           (./Engine/Graphics):00052 [6]     3957            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
7A9C 2708             (./Engine/Graphics):00053 [3]     3960            beq   ESP_P2B0
7A9E 8601             (./Engine/Graphics):00054 [2]     3962            lda   #$01
7AA0 B77B6F           (./Engine/Graphics):00055 [5]     3967            sta   ESP_CheckPriorityB0+1        
7AA3 BD7B6B           (./Engine/Graphics):00056 [8]     3975            jsr   ESP_ProcessEachPriorityLevelB0
7AA6                  (./Engine/Graphics):00057                 ESP_P2B0
7AA6 FE7260           (./Engine/Graphics):00058 [6]     3981            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+4
7AA9 2708             (./Engine/Graphics):00059 [3]     3984            beq   ESP_P3B0
7AAB 8602             (./Engine/Graphics):00060 [2]     3986            lda   #$02
7AAD B77B6F           (./Engine/Graphics):00061 [5]     3991            sta   ESP_CheckPriorityB0+1        
7AB0 BD7B6B           (./Engine/Graphics):00062 [8]     3999            jsr   ESP_ProcessEachPriorityLevelB0   
7AB3                  (./Engine/Graphics):00063                 ESP_P3B0
7AB3 FE7262           (./Engine/Graphics):00064 [6]     4005            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+6
7AB6 2708             (./Engine/Graphics):00065 [3]     4008            beq   ESP_P4B0
7AB8 8603             (./Engine/Graphics):00066 [2]     4010            lda   #$03
7ABA B77B6F           (./Engine/Graphics):00067 [5]     4015            sta   ESP_CheckPriorityB0+1        
7ABD BD7B6B           (./Engine/Graphics):00068 [8]     4023            jsr   ESP_ProcessEachPriorityLevelB0   
7AC0                  (./Engine/Graphics):00069                 ESP_P4B0
7AC0 FE7264           (./Engine/Graphics):00070 [6]     4029            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+8
7AC3 2708             (./Engine/Graphics):00071 [3]     4032            beq   ESP_P5B0
7AC5 8604             (./Engine/Graphics):00072 [2]     4034            lda   #$04
7AC7 B77B6F           (./Engine/Graphics):00073 [5]     4039            sta   ESP_CheckPriorityB0+1        
7ACA BD7B6B           (./Engine/Graphics):00074 [8]     4047            jsr   ESP_ProcessEachPriorityLevelB0   
7ACD                  (./Engine/Graphics):00075                 ESP_P5B0
7ACD FE7266           (./Engine/Graphics):00076 [6]     4053            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+10
7AD0 2708             (./Engine/Graphics):00077 [3]     4056            beq   ESP_P6B0
7AD2 8605             (./Engine/Graphics):00078 [2]     4058            lda   #$05
7AD4 B77B6F           (./Engine/Graphics):00079 [5]     4063            sta   ESP_CheckPriorityB0+1        
7AD7 BD7B6B           (./Engine/Graphics):00080 [8]     4071            jsr   ESP_ProcessEachPriorityLevelB0               
7ADA                  (./Engine/Graphics):00081                 ESP_P6B0
7ADA FE7268           (./Engine/Graphics):00082 [6]     4077            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+12
7ADD 2708             (./Engine/Graphics):00083 [3]     4080            beq   ESP_P7B0
7ADF 8606             (./Engine/Graphics):00084 [2]     4082            lda   #$06
7AE1 B77B6F           (./Engine/Graphics):00085 [5]     4087            sta   ESP_CheckPriorityB0+1        
7AE4 BD7B6B           (./Engine/Graphics):00086 [8]     4095            jsr   ESP_ProcessEachPriorityLevelB0      
7AE7                  (./Engine/Graphics):00087                 ESP_P7B0
7AE7 FE726A           (./Engine/Graphics):00088 [6]     4101            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+14
7AEA 2708             (./Engine/Graphics):00089 [3]     4104            beq   ESP_P8B0
7AEC 8607             (./Engine/Graphics):00090 [2]     4106            lda   #$07
7AEE B77B6F           (./Engine/Graphics):00091 [5]     4111            sta   ESP_CheckPriorityB0+1        
7AF1 BD7B6B           (./Engine/Graphics):00092 [8]     4119            jsr   ESP_ProcessEachPriorityLevelB0  
7AF4                  (./Engine/Graphics):00093                 ESP_P8B0
7AF4 FE726C           (./Engine/Graphics):00094 [6]     4125            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+16
7AF7 2708             (./Engine/Graphics):00095 [3]     4128            beq   ESP_rtsB0
7AF9 8608             (./Engine/Graphics):00096 [2]     4130            lda   #$08
7AFB B77B6F           (./Engine/Graphics):00097 [5]     4135            sta   ESP_CheckPriorityB0+1                   
7AFE BD7B6B           (./Engine/Graphics):00098 [8]     4143            jsr   ESP_ProcessEachPriorityLevelB0
7B01                  (./Engine/Graphics):00099                 ESP_rtsB0        
7B01 39               (./Engine/Graphics):00100 [5]     4148            rts
                      (./Engine/Graphics):00101                         
7B02                  (./Engine/Graphics):00102                 ESP_P1B1
7B02 FE72C0           (./Engine/Graphics):00103 [6]     4154            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
7B05 2708             (./Engine/Graphics):00104 [3]     4157            beq   ESP_P2B1
7B07 8601             (./Engine/Graphics):00105 [2]     4159            lda   #$01
7B09 B77BE8           (./Engine/Graphics):00106 [5]     4164            sta   ESP_CheckPriorityB1+1        
7B0C BD7BE4           (./Engine/Graphics):00107 [8]     4172            jsr   ESP_ProcessEachPriorityLevelB1
7B0F                  (./Engine/Graphics):00108                 ESP_P2B1
7B0F FE72C2           (./Engine/Graphics):00109 [6]     4178            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+4
7B12 2708             (./Engine/Graphics):00110 [3]     4181            beq   ESP_P3B1
7B14 8602             (./Engine/Graphics):00111 [2]     4183            lda   #$02
7B16 B77BE8           (./Engine/Graphics):00112 [5]     4188            sta   ESP_CheckPriorityB1+1        
7B19 BD7BE4           (./Engine/Graphics):00113 [8]     4196            jsr   ESP_ProcessEachPriorityLevelB1   
7B1C                  (./Engine/Graphics):00114                 ESP_P3B1
7B1C FE72C4           (./Engine/Graphics):00115 [6]     4202            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+6
7B1F 2708             (./Engine/Graphics):00116 [3]     4205            beq   ESP_P4B1
7B21 8603             (./Engine/Graphics):00117 [2]     4207            lda   #$03
7B23 B77BE8           (./Engine/Graphics):00118 [5]     4212            sta   ESP_CheckPriorityB1+1        
7B26 BD7BE4           (./Engine/Graphics):00119 [8]     4220            jsr   ESP_ProcessEachPriorityLevelB1   
7B29                  (./Engine/Graphics):00120                 ESP_P4B1
7B29 FE72C6           (./Engine/Graphics):00121 [6]     4226            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+8
7B2C 2708             (./Engine/Graphics):00122 [3]     4229            beq   ESP_P5B1
7B2E 8604             (./Engine/Graphics):00123 [2]     4231            lda   #$04
7B30 B77BE8           (./Engine/Graphics):00124 [5]     4236            sta   ESP_CheckPriorityB1+1        
7B33 BD7BE4           (./Engine/Graphics):00125 [8]     4244            jsr   ESP_ProcessEachPriorityLevelB1   
7B36                  (./Engine/Graphics):00126                 ESP_P5B1
7B36 FE72C8           (./Engine/Graphics):00127 [6]     4250            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+10
7B39 2708             (./Engine/Graphics):00128 [3]     4253            beq   ESP_P6B1
7B3B 8605             (./Engine/Graphics):00129 [2]     4255            lda   #$05
7B3D B77BE8           (./Engine/Graphics):00130 [5]     4260            sta   ESP_CheckPriorityB1+1        
7B40 BD7BE4           (./Engine/Graphics):00131 [8]     4268            jsr   ESP_ProcessEachPriorityLevelB1               
7B43                  (./Engine/Graphics):00132                 ESP_P6B1
7B43 FE72CA           (./Engine/Graphics):00133 [6]     4274            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+12
7B46 2708             (./Engine/Graphics):00134 [3]     4277            beq   ESP_P7B1
7B48 8606             (./Engine/Graphics):00135 [2]     4279            lda   #$06
7B4A B77BE8           (./Engine/Graphics):00136 [5]     4284            sta   ESP_CheckPriorityB1+1        
7B4D BD7BE4           (./Engine/Graphics):00137 [8]     4292            jsr   ESP_ProcessEachPriorityLevelB1      
7B50                  (./Engine/Graphics):00138                 ESP_P7B1
7B50 FE72CC           (./Engine/Graphics):00139 [6]     4298            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+14
7B53 2708             (./Engine/Graphics):00140 [3]     4301            beq   ESP_P8B1
7B55 8607             (./Engine/Graphics):00141 [2]     4303            lda   #$07
7B57 B77BE8           (./Engine/Graphics):00142 [5]     4308            sta   ESP_CheckPriorityB1+1        
7B5A BD7BE4           (./Engine/Graphics):00143 [8]     4316            jsr   ESP_ProcessEachPriorityLevelB1  
7B5D                  (./Engine/Graphics):00144                 ESP_P8B1
7B5D FE72CE           (./Engine/Graphics):00145 [6]     4322            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+16
7B60 2708             (./Engine/Graphics):00146 [3]     4325            beq   ESP_rtsB1
7B62 8608             (./Engine/Graphics):00147 [2]     4327            lda   #$08
7B64 B77BE8           (./Engine/Graphics):00148 [5]     4332            sta   ESP_CheckPriorityB1+1        
7B67 BD7BE4           (./Engine/Graphics):00149 [8]     4340            jsr   ESP_ProcessEachPriorityLevelB1
7B6A                  (./Engine/Graphics):00150                 ESP_rtsB1        
7B6A 39               (./Engine/Graphics):00151 [5]     4345            rts
                      (./Engine/Graphics):00152                 
                      (./Engine/Graphics):00153                 * -----------------------------------------------
                      (./Engine/Graphics):00154                 * BUFFER0
                      (./Engine/Graphics):00155                 * -----------------------------------------------
                      (./Engine/Graphics):00156                 
7B6B                  (./Engine/Graphics):00157                 ESP_ProcessEachPriorityLevelB0
7B6B A6C835           (./Engine/Graphics):00158 [5]     4350            lda   rsv_priority_0,u
                      (./Engine/Graphics):00159                         
7B6E                  (./Engine/Graphics):00160                 ESP_CheckPriorityB0
7B6E 8100             (./Engine/Graphics):00161 [2]     4352            cmpa  #0                            ; dynamic current priority
7B70 10260068         (./Engine/Graphics):00162 [5+?]   4357            lbne   ESP_NextObjectB0             ; do not process this entry (case of priority change)
                      (./Engine/Graphics):00163                         
7B74                  (./Engine/Graphics):00164                 ESP_UnsetCheckRefreshB0
7B74 A6C822           (./Engine/Graphics):00165 [5]     4362            lda   rsv_render_flags,u
7B77 E642             (./Engine/Graphics):00166 [5]     4367            ldb   render_flags,u
7B79 C408             (./Engine/Graphics):00167 [2]     4369            andb  #render_motionless_mask
7B7B 2605             (./Engine/Graphics):00168 [3]     4372            bne   ESP_CheckEraseB0
7B7D 84FE             (./Engine/Graphics):00169 [2]     4374            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag
7B7F A7C822           (./Engine/Graphics):00170 [5]     4379            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00171                         
7B82                  (./Engine/Graphics):00172                 ESP_CheckEraseB0
7B82 8402             (./Engine/Graphics):00173 [2]     4381            anda  #rsv_render_erasesprite_mask
7B84 10270054         (./Engine/Graphics):00174 [5+?]   4386            lbeq   ESP_NextObjectB0
7B88 E6C848           (./Engine/Graphics):00175 [5]     4391            ldb   rsv_prev_render_flags_0,u
7B8B C401             (./Engine/Graphics):00176 [2]     4393            andb  #rsv_prev_render_overlay_mask
7B8D 263D             (./Engine/Graphics):00177 [3]     4396            bne   ESP_UnsetOnScreenFlagB0
                      (./Engine/Graphics):00178                         
7B8F                  (./Engine/Graphics):00179                 ESP_CallEraseRoutineB0
7B8F A6C83D           (./Engine/Graphics):00180 [5]     4401            lda   rsv_prev_page_erase_routine_0,u
                      (./Engine/Graphics):00181                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7B92 B7E7E6           (    _SetCartPageA):00004 [5]     4406            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7B95 AEC83E           (./Engine/Graphics):00182 [6]     4412            ldx   rsv_prev_erase_routine_0,u
7B98 FF7BA4           (./Engine/Graphics):00183 [6]     4418            stu   ESP_CallEraseRoutineB0_00+1   ; backup u (pointer to object)                
7B9B EEC840           (./Engine/Graphics):00184 [6]     4424            ldu   rsv_bgdata_0,u                ; cell_start background data        
7B9E AD84             (./Engine/Graphics):00185 [7]     4431            jsr   ,x                            ; erase sprite on working screen buffer
7BA0 FF7C60           (./Engine/Graphics):00186 [6]     4437            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
7BA3                  (./Engine/Graphics):00187                 ESP_CallEraseRoutineB0_00        
7BA3 CE0000           (./Engine/Graphics):00188 [3]     4440            ldu   #$0000                        ; restore u (pointer to object)
7BA6 ECC840           (./Engine/Graphics):00189 [6]     4446            ldd   rsv_bgdata_0,u                ; cell_start
7BA9 830010           (./Engine/Graphics):00190 [4]     4450            subd  #16
7BAC C4C0             (./Engine/Graphics):00191 [2]     4452            andb  #256-cell_size                ; round cell_start to cell size
7BAE FD7C5E           (./Engine/Graphics):00192 [6]     4458            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./Engine/Graphics):00193                                         
7BB1                  (./Engine/Graphics):00194                 ESP_FreeEraseBufferB0
7BB1 A6C83C           (./Engine/Graphics):00195 [5]     4463            lda   rsv_prev_erase_nb_cell_0,u     ; get nb of cell to free
7BB4 B77C5D           (./Engine/Graphics):00196 [5]     4468            sta   BBF_nb_cells
7BB7 FF7CF3           (./Engine/Graphics):00197 [6]     4474            stu   BBF_rts+1
7BBA CE7702           (./Engine/Graphics):00198 [3]     4477            ldu   #Lst_FreeCell_0
7BBD FF7CD1           (./Engine/Graphics):00199 [6]     4483            stu   BBF_AddNewEntry+1
7BC0 CE7700           (./Engine/Graphics):00200 [3]     4486            ldu   #Lst_FreeCellFirstEntry_0        
7BC3 FF7CF0           (./Engine/Graphics):00201 [6]     4492            stu   BBF_SetNewEntryPrevLink+1     ; init prev address destination as Lst_FreeCellFirstEntry                
7BC6 FE7700           (./Engine/Graphics):00202 [6]     4498            ldu   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
7BC9 BD7C64           (./Engine/Graphics):00203 [8]     4506            jsr   BgBufferFree                  ; free background data in memory
                      (./Engine/Graphics):00204                         
7BCC                  (./Engine/Graphics):00205                 ESP_UnsetOnScreenFlagB0
7BCC A6C848           (./Engine/Graphics):00206 [5]     4511            lda   rsv_prev_render_flags_0,u
7BCF 847F             (./Engine/Graphics):00207 [2]     4513            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen
7BD1 A7C848           (./Engine/Graphics):00208 [5]     4518            sta   rsv_prev_render_flags_0,u
7BD4 A6C822           (./Engine/Graphics):00209 [5]     4523            lda   rsv_render_flags,u
7BD7 847F             (./Engine/Graphics):00210 [2]     4525            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
7BD9 A7C822           (./Engine/Graphics):00211 [5]     4530            sta   rsv_render_flags,u
                      (./Engine/Graphics):00212                 
7BDC                  (./Engine/Graphics):00213                 ESP_NextObjectB0
7BDC EEC836           (./Engine/Graphics):00214 [6]     4536            ldu   rsv_priority_prev_obj_0,u
7BDF 1026FF88         (./Engine/Graphics):00215 [5+?]   4541            lbne   ESP_ProcessEachPriorityLevelB0   
7BE3 39               (./Engine/Graphics):00216 [5]     4546            rts      
                      (./Engine/Graphics):00217                 
                      (./Engine/Graphics):00218                 * -----------------------------------------------        
                      (./Engine/Graphics):00219                 * BUFFER1
                      (./Engine/Graphics):00220                 * -----------------------------------------------        
                      (./Engine/Graphics):00221                                 
7BE4                  (./Engine/Graphics):00222                 ESP_ProcessEachPriorityLevelB1
7BE4 A6C849           (./Engine/Graphics):00223 [5]     4551            lda   rsv_priority_1,u
                      (./Engine/Graphics):00224                         
7BE7                  (./Engine/Graphics):00225                 ESP_CheckPriorityB1
7BE7 8100             (./Engine/Graphics):00226 [2]     4553            cmpa  #0                            ; dynamic current priority
7BE9 10260068         (./Engine/Graphics):00227 [5+?]   4558            lbne   ESP_NextObjectB1             ; do not process this entry (case of priority change)
                      (./Engine/Graphics):00228                         
7BED                  (./Engine/Graphics):00229                 ESP_UnsetCheckRefreshB1
7BED A6C822           (./Engine/Graphics):00230 [5]     4563            lda   rsv_render_flags,u
7BF0 E642             (./Engine/Graphics):00231 [5]     4568            ldb   render_flags,u
7BF2 C408             (./Engine/Graphics):00232 [2]     4570            andb  #render_motionless_mask
7BF4 2605             (./Engine/Graphics):00233 [3]     4573            bne   ESP_CheckEraseB1
7BF6 84FE             (./Engine/Graphics):00234 [2]     4575            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag (CheckSpriteRefresh)
7BF8 A7C822           (./Engine/Graphics):00235 [5]     4580            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00236                         
7BFB                  (./Engine/Graphics):00237                 ESP_CheckEraseB1
7BFB 8402             (./Engine/Graphics):00238 [2]     4582            anda  #rsv_render_erasesprite_mask
7BFD 10270054         (./Engine/Graphics):00239 [5+?]   4587            lbeq   ESP_NextObjectB1
7C01 E6C85C           (./Engine/Graphics):00240 [5]     4592            ldb   rsv_prev_render_flags_1,u
7C04 C401             (./Engine/Graphics):00241 [2]     4594            andb  #rsv_prev_render_overlay_mask
7C06 263D             (./Engine/Graphics):00242 [3]     4597            bne   ESP_UnsetOnScreenFlagB1        
                      (./Engine/Graphics):00243                         
7C08                  (./Engine/Graphics):00244                 ESP_CallEraseRoutineB1
7C08 A6C851           (./Engine/Graphics):00245 [5]     4602            lda   rsv_prev_page_erase_routine_1,u
                      (./Engine/Graphics):00246                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7C0B B7E7E6           (    _SetCartPageA):00004 [5]     4607            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7C0E AEC852           (./Engine/Graphics):00247 [6]     4613            ldx   rsv_prev_erase_routine_1,u
7C11 FF7C1D           (./Engine/Graphics):00248 [6]     4619            stu   ESP_CallEraseRoutineB1_00+1   ; backup u (pointer to object)                
7C14 EEC854           (./Engine/Graphics):00249 [6]     4625            ldu   rsv_bgdata_1,u                ; cell_start background data        
7C17 AD84             (./Engine/Graphics):00250 [7]     4632            jsr   ,x                            ; erase sprite on working screen buffer
7C19 FF7C60           (./Engine/Graphics):00251 [6]     4638            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
7C1C                  (./Engine/Graphics):00252                 ESP_CallEraseRoutineB1_00        
7C1C CE0000           (./Engine/Graphics):00253 [3]     4641            ldu   #$0000                        ; restore u (pointer to object)
7C1F ECC854           (./Engine/Graphics):00254 [6]     4647            ldd   rsv_bgdata_1,u                ; cell_start
7C22 830010           (./Engine/Graphics):00255 [4]     4651            subd  #16
7C25 C4C0             (./Engine/Graphics):00256 [2]     4653            andb  #256-cell_size                ; round cell_start to cell size
7C27 FD7C5E           (./Engine/Graphics):00257 [6]     4659            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./Engine/Graphics):00258                                         
7C2A                  (./Engine/Graphics):00259                 ESP_FreeEraseBufferB1
7C2A A6C850           (./Engine/Graphics):00260 [5]     4664            lda   rsv_prev_erase_nb_cell_1,u       
7C2D B77C5D           (./Engine/Graphics):00261 [5]     4669            sta   BBF_nb_cells         
7C30 FF7CF3           (./Engine/Graphics):00262 [6]     4675            stu   BBF_rts+1
7C33 CE78CA           (./Engine/Graphics):00263 [3]     4678            ldu   #Lst_FreeCell_1
7C36 FF7CD1           (./Engine/Graphics):00264 [6]     4684            stu   BBF_AddNewEntry+1
7C39 CE78C8           (./Engine/Graphics):00265 [3]     4687            ldu   #Lst_FreeCellFirstEntry_1        
7C3C FF7CF0           (./Engine/Graphics):00266 [6]     4693            stu   BBF_SetNewEntryPrevLink+1          
7C3F FE78C8           (./Engine/Graphics):00267 [6]     4699            ldu   Lst_FreeCellFirstEntry_1
7C42 BD7C64           (./Engine/Graphics):00268 [8]     4707            jsr   BgBufferFree                  ; free background data in memory
                      (./Engine/Graphics):00269                         
7C45                  (./Engine/Graphics):00270                 ESP_UnsetOnScreenFlagB1
7C45 A6C85C           (./Engine/Graphics):00271 [5]     4712            lda   rsv_prev_render_flags_1,u
7C48 847F             (./Engine/Graphics):00272 [2]     4714            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen 
7C4A A7C85C           (./Engine/Graphics):00273 [5]     4719            sta   rsv_prev_render_flags_1,u
7C4D A6C822           (./Engine/Graphics):00274 [5]     4724            lda   rsv_render_flags,u
7C50 847F             (./Engine/Graphics):00275 [2]     4726            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
7C52 A7C822           (./Engine/Graphics):00276 [5]     4731            sta   rsv_render_flags,u
                      (./Engine/Graphics):00277                         
7C55                  (./Engine/Graphics):00278                 ESP_NextObjectB1
7C55 EEC84A           (./Engine/Graphics):00279 [6]     4737            ldu   rsv_priority_prev_obj_1,u
7C58 1026FF88         (./Engine/Graphics):00280 [5+?]   4742            lbne   ESP_ProcessEachPriorityLevelB1   
7C5C 39               (./Engine/Graphics):00281 [5]     4747            rts
                      (./Engine/Graphics):00282                         
                      (./Engine/Graphics):00283                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00284                 * BgBufferFree
                      (./Engine/Graphics):00285                 * ------------
                      (./Engine/Graphics):00286                 * Subroutine to free memory from background buffer
                      (./Engine/Graphics):00287                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00288                      
7C5D 00               (./Engine/Graphics):00289                 BBF_nb_cells   fcb   $00
7C5E 0000             (./Engine/Graphics):00290                 BBF_cell_start fdb   $0000
7C60 0000             (./Engine/Graphics):00291                 BBF_cell_end   fdb   $0000       
7C62 0000             (./Engine/Graphics):00292                 BBF_prev       fdb   $0000
                      (./Engine/Graphics):00293                 
                      (./Engine/Graphics):00294                         ; search position of the new free cells in the linked list
                      (./Engine/Graphics):00295                         ; linked list is ordered by cell_end (address) descending
                      (./Engine/Graphics):00296                         ; starting at Lst_FreeCellFirstEntry_x
                      (./Engine/Graphics):00297                         ; ----------------------------------------------------------
                      (./Engine/Graphics):00298                 
7C64                  (./Engine/Graphics):00299                 BgBufferFree        
7C64 2764             (./Engine/Graphics):00300 [3]     4750            beq   BBF_AddLastEntry
7C66                  (./Engine/Graphics):00301                 BBF_SearchPos 
7C66 AE43             (./Engine/Graphics):00302 [6]     4756            ldx   cell_end,u
7C68 BC7C60           (./Engine/Graphics):00303 [7]     4763            cmpx  BBF_cell_end
7C6B 2510             (./Engine/Graphics):00304 [3]     4766            blo   BBF_CombineNext
7C6D FF7C62           (./Engine/Graphics):00305 [6]     4772            stu   BBF_prev
7C70 EC45             (./Engine/Graphics):00306 [6]     4778            ldd   next_entry,u                  ; test next entry
7C72 273B             (./Engine/Graphics):00307 [3]     4781            beq   BBF_CombinePrevNoNext
7C74 3045             (./Engine/Graphics):00308 [5]     4786            leax  next_entry,u                  ; there is a next entry, save next_entry position
7C76 BF7CF0           (./Engine/Graphics):00309 [6]     4792            stx   BBF_SetNewEntryPrevLink+1   
7C79 EE45             (./Engine/Graphics):00310 [6]     4798            ldu   next_entry,u                  ; move to next entry        
7C7B 20E9             (./Engine/Graphics):00311 [3]     4801            bra   BBF_SearchPos        
                      (./Engine/Graphics):00312                         
                      (./Engine/Graphics):00313                         ; try to combine with next block
                      (./Engine/Graphics):00314                         ; ----------------------------------------------------------        
                      (./Engine/Graphics):00315                         
7C7D                  (./Engine/Graphics):00316                 BBF_CombineNext
7C7D FF7CEB           (./Engine/Graphics):00317 [6]     4807            stu   BBF_SetNewEntryNextentry+1
7C80 BE7C5E           (./Engine/Graphics):00318 [6]     4813            ldx   BBF_cell_start
7C83 AC43             (./Engine/Graphics):00319 [7]     4820            cmpx  cell_end,u
7C85 262E             (./Engine/Graphics):00320 [3]     4823            bne   BBF_CombinePrev
7C87 BE7C60           (./Engine/Graphics):00321 [6]     4829            ldx   BBF_cell_end
7C8A AF43             (./Engine/Graphics):00322 [6]     4835            stx   cell_end,u
7C8C A6C4             (./Engine/Graphics):00323 [4]     4839            lda   nb_cells,u
7C8E BB7C5D           (./Engine/Graphics):00324 [5]     4844            adda  BBF_nb_cells
7C91 A7C4             (./Engine/Graphics):00325 [4]     4848            sta   nb_cells,u
                      (./Engine/Graphics):00326                         
7C93                  (./Engine/Graphics):00327                 BBF_CombineNextAndPrev
7C93 10BE7C62         (./Engine/Graphics):00328 [7]     4855            ldy   BBF_prev
7C97 AC21             (./Engine/Graphics):00329 [7]     4862            cmpx  cell_start,y
7C99 2657             (./Engine/Graphics):00330 [3]     4865            bne   BBF_rts
7C9B AE41             (./Engine/Graphics):00331 [6]     4871            ldx   cell_start,u
7C9D AF21             (./Engine/Graphics):00332 [6]     4877            stx   cell_start,y
7C9F A6C4             (./Engine/Graphics):00333 [4]     4881            lda   nb_cells,u        
7CA1 ABA4             (./Engine/Graphics):00334 [4]     4885            adda  nb_cells,y
7CA3 A7A4             (./Engine/Graphics):00335 [4]     4889            sta   nb_cells,y
7CA5 EC45             (./Engine/Graphics):00336 [6]     4895            ldd   next_entry,u
7CA7 ED25             (./Engine/Graphics):00337 [6]     4901            std   next_entry,y
7CA9 8600             (./Engine/Graphics):00338 [2]     4903            lda   #$00
7CAB A7C4             (./Engine/Graphics):00339 [4]     4907            sta   nb_cells,u                    ; delete the entry
7CAD 2043             (./Engine/Graphics):00340 [3]     4910            bra   BBF_rts
                      (./Engine/Graphics):00341                                 
                      (./Engine/Graphics):00342                         ; try to combine with prev block 
                      (./Engine/Graphics):00343                         ; ----------------------------------------------------------      
                      (./Engine/Graphics):00344                         
7CAF                  (./Engine/Graphics):00345                 BBF_CombinePrevNoNext
7CAF CC0000           (./Engine/Graphics):00346 [3]     4913            ldd   #$0000
7CB2 FD7CEB           (./Engine/Graphics):00347 [6]     4919            std   BBF_SetNewEntryNextentry+1
7CB5                  (./Engine/Graphics):00348                 BBF_CombinePrev
7CB5 BE7C60           (./Engine/Graphics):00349 [6]     4925            ldx   BBF_cell_end
7CB8 AC41             (./Engine/Graphics):00350 [7]     4932            cmpx  cell_start,u
7CBA 2614             (./Engine/Graphics):00351 [3]     4935            bne   BBF_AddNewEntry
7CBC BE7C5E           (./Engine/Graphics):00352 [6]     4941            ldx   BBF_cell_start
7CBF AF41             (./Engine/Graphics):00353 [6]     4947            stx   cell_start,u
7CC1 A6C4             (./Engine/Graphics):00354 [4]     4951            lda   nb_cells,u        
7CC3 BB7C5D           (./Engine/Graphics):00355 [5]     4956            adda  BBF_nb_cells
7CC6 A7C4             (./Engine/Graphics):00356 [4]     4960            sta   nb_cells,u
7CC8 2028             (./Engine/Graphics):00357 [3]     4963            bra   BBF_rts   
                      (./Engine/Graphics):00358                 
                      (./Engine/Graphics):00359                         ; Add New Entry
                      (./Engine/Graphics):00360                         ; ----------------------------------------------------------
                      (./Engine/Graphics):00361                         
7CCA                  (./Engine/Graphics):00362                 BBF_AddLastEntry
7CCA CC0000           (./Engine/Graphics):00363 [3]     4966            ldd   #$0000
7CCD FD7CEB           (./Engine/Graphics):00364 [6]     4972            std   BBF_SetNewEntryNextentry+1        
7CD0                  (./Engine/Graphics):00365                 BBF_AddNewEntry
7CD0 CE0000           (./Engine/Graphics):00366 [3]     4975            ldu   #$0000                        ; (dynamic) start of linked list data index
7CD3                  (./Engine/Graphics):00367                 BBF_FindFreeSlot
7CD3 E6C4             (./Engine/Graphics):00368 [4]     4979            ldb   nb_cells,u                    ; read Lst_FreeCell as a table (not a linked list)
7CD5 2704             (./Engine/Graphics):00369 [3]     4982            beq   BBF_SetNewEntry               ; branch if empty entry
7CD7 3347             (./Engine/Graphics):00370 [5]     4987            leau  entry_size,u                  ; move to next entry
7CD9 20F8             (./Engine/Graphics):00371 [3]     4990            bra   BBF_FindFreeSlot              ; loop             
                      (./Engine/Graphics):00372                 
7CDB                  (./Engine/Graphics):00373                 BBF_SetNewEntry        
7CDB B67C5D           (./Engine/Graphics):00374 [5]     4995            lda   BBF_nb_cells              
7CDE A7C4             (./Engine/Graphics):00375 [4]     4999            sta   nb_cells,u                    ; store released cells
7CE0 FC7C5E           (./Engine/Graphics):00376 [6]     5005            ldd   BBF_cell_start
7CE3 ED41             (./Engine/Graphics):00377 [6]     5011            std   cell_start,u                  ; store cell start adress
7CE5 FC7C60           (./Engine/Graphics):00378 [6]     5017            ldd   BBF_cell_end
7CE8 ED43             (./Engine/Graphics):00379 [6]     5023            std   cell_end,u                    ; store cell end adress
                      (./Engine/Graphics):00380                         
7CEA                  (./Engine/Graphics):00381                 BBF_SetNewEntryNextentry        
7CEA CC0000           (./Engine/Graphics):00382 [3]     5026            ldd   #$0000                        ; (dynamic) value is dynamically set
7CED ED45             (./Engine/Graphics):00383 [6]     5032            std   next_entry,u                  ; link to 0000 if no more entry or next_entry
                      (./Engine/Graphics):00384                         
7CEF                  (./Engine/Graphics):00385                 BBF_SetNewEntryPrevLink        
7CEF FFFFFF           (./Engine/Graphics):00386 [6]     5038            stu   $FFFF                         ; (dynamic) set Lst_FreeCellFirstEntry or prev_entry.next_entry with new entry
                      (./Engine/Graphics):00387                         
7CF2                  (./Engine/Graphics):00388                 BBF_rts
7CF2 CE0000           (./Engine/Graphics):00389 [3]     5041            ldu   #$0000
7CF5 39               (./Engine/Graphics):00390 [5]     5046            rts
                      (./Engine/Graphics):00391                                 
                      (C:\Users\bhrou\gi):00265                         INCLUDE "./Engine/Graphics/UnsetDisplayPriority.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * UnsetDisplayPriority
                      (./Engine/Graphics):00003                 * --------------------
                      (./Engine/Graphics):00004                 * Subroutine to unset sprites in Display Sprite Priority structure
                      (./Engine/Graphics):00005                 * Read Lst_Priority_Unset_0/1
                      (./Engine/Graphics):00006                 *
                      (./Engine/Graphics):00007                 * input REG : none
                      (./Engine/Graphics):00008                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                                                                                            
7CF6                  (./Engine/Graphics):00010                 UnsetDisplayPriority
                      (./Engine/Graphics):00011                 
7CF6                  (./Engine/Graphics):00012                 UDP_Start
7CF6 B67040           (./Engine/Graphics):00013 [5]     5051            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7CF9 266D             (./Engine/Graphics):00014 [3]     5054            bne   UDP_B1
                      (./Engine/Graphics):00015                         
7CFB                  (./Engine/Graphics):00016                 UDP_B0                                    
7CFB 8E7270           (./Engine/Graphics):00017 [3]     5057            ldx   #Lst_Priority_Unset_0+2
                      (./Engine/Graphics):00018                         
7CFE                  (./Engine/Graphics):00019                 UDP_CheckEndB0        
7CFE BC726E           (./Engine/Graphics):00020 [7]     5064            cmpx  Lst_Priority_Unset_0          ; end of priority unset list
7D01 2607             (./Engine/Graphics):00021 [3]     5067            bne   UDP_CheckPrioPrevB0
                      (./Engine/Graphics):00022                         
7D03                  (./Engine/Graphics):00023                 UDP_InitListB0      
7D03 8E7270           (./Engine/Graphics):00024 [3]     5070            ldx   #Lst_Priority_Unset_0+2 
7D06 BF726E           (./Engine/Graphics):00025 [6]     5076            stx   Lst_Priority_Unset_0          ; set Lst_Priority_Unset_0 index
7D09 39               (./Engine/Graphics):00026 [5]     5081            rts
                      (./Engine/Graphics):00027                         
7D0A                  (./Engine/Graphics):00028                 UDP_CheckPrioPrevB0
7D0A EE81             (./Engine/Graphics):00029 [8]     5089            ldu   ,x++
7D0C ECC836           (./Engine/Graphics):00030 [6]     5095            ldd   rsv_priority_prev_obj_0,u
7D0F 2611             (./Engine/Graphics):00031 [3]     5098            bne   UDP_ChainPrevB0
                      (./Engine/Graphics):00032                         
7D11 A6C835           (./Engine/Graphics):00033 [5]     5103            lda   rsv_priority_0,u
7D14 48               (./Engine/Graphics):00034 [2]     5105            lsla
7D15 108E724A         (./Engine/Graphics):00035 [4]     5109            ldy   #Tbl_Priority_First_Entry_0
7D19 31A6             (./Engine/Graphics):00036 [5]     5114            leay  a,y
7D1B ECC838           (./Engine/Graphics):00037 [6]     5120            ldd   rsv_priority_next_obj_0,u
7D1E EDA4             (./Engine/Graphics):00038 [5]     5125            std   ,y
7D20 200A             (./Engine/Graphics):00039 [3]     5128            bra   UDP_CheckPrioNextB0
                      (./Engine/Graphics):00040                                 
7D22                  (./Engine/Graphics):00041                 UDP_ChainPrevB0
7D22 ECC838           (./Engine/Graphics):00042 [6]     5134            ldd   rsv_priority_next_obj_0,u
7D25 10AEC836         (./Engine/Graphics):00043 [7]     5141            ldy   rsv_priority_prev_obj_0,u        
7D29 EDA838           (./Engine/Graphics):00044 [6]     5147            std   rsv_priority_next_obj_0,y        
                      (./Engine/Graphics):00045                 
7D2C                  (./Engine/Graphics):00046                 UDP_CheckPrioNextB0       
7D2C ECC838           (./Engine/Graphics):00047 [6]     5153            ldd   rsv_priority_next_obj_0,u
7D2F 2611             (./Engine/Graphics):00048 [3]     5156            bne   UDP_ChainNextB0
                      (./Engine/Graphics):00049                 
7D31 A6C835           (./Engine/Graphics):00050 [5]     5161            lda   rsv_priority_0,u
7D34 48               (./Engine/Graphics):00051 [2]     5163            lsla
7D35 108E725C         (./Engine/Graphics):00052 [4]     5167            ldy   #Tbl_Priority_Last_Entry_0
7D39 31A6             (./Engine/Graphics):00053 [5]     5172            leay  a,y
7D3B ECC836           (./Engine/Graphics):00054 [6]     5178            ldd   rsv_priority_prev_obj_0,u
7D3E EDA4             (./Engine/Graphics):00055 [5]     5183            std   ,y
7D40 200A             (./Engine/Graphics):00056 [3]     5186            bra   UDP_CheckDeleteB0
                      (./Engine/Graphics):00057                                 
7D42                  (./Engine/Graphics):00058                 UDP_ChainNextB0
7D42 ECC836           (./Engine/Graphics):00059 [6]     5192            ldd   rsv_priority_prev_obj_0,u
7D45 10AEC838         (./Engine/Graphics):00060 [7]     5199            ldy   rsv_priority_next_obj_0,u        
7D49 EDA836           (./Engine/Graphics):00061 [6]     5205            std   rsv_priority_prev_obj_0,y
                      (./Engine/Graphics):00062                         
7D4C                  (./Engine/Graphics):00063                 UDP_CheckDeleteB0
7D4C A642             (./Engine/Graphics):00064 [5]     5210            lda   render_flags,u
7D4E 8440             (./Engine/Graphics):00065 [2]     5212            anda  #render_todelete_mask
7D50 270F             (./Engine/Graphics):00066 [3]     5215            beq   UDP_SetNewPrioB0
7D52 A6C848           (./Engine/Graphics):00067 [5]     5220            lda   rsv_prev_render_flags_0,u
7D55 2B0A             (./Engine/Graphics):00068 [3]     5223            bmi   UDP_SetNewPrioB0
7D57 A6C85C           (./Engine/Graphics):00069 [5]     5228            lda   rsv_prev_render_flags_1,u
7D5A 2B05             (./Engine/Graphics):00070 [3]     5231            bmi   UDP_SetNewPrioB0
7D5C BD8166           (./Engine/Graphics):00071 [8]     5239            jsr   ClearObj
7D5F 209D             (./Engine/Graphics):00072 [3]     5242            bra   UDP_CheckEndB0
                      (./Engine/Graphics):00073                         
7D61                  (./Engine/Graphics):00074                 UDP_SetNewPrioB0
7D61 A643             (./Engine/Graphics):00075 [5]     5247            lda   priority,u
7D63 A7C835           (./Engine/Graphics):00076 [5]     5252            sta   rsv_priority_0,u
7D66 2096             (./Engine/Graphics):00077 [3]     5255            bra   UDP_CheckEndB0        
                      (./Engine/Graphics):00078                 
7D68                  (./Engine/Graphics):00079                 UDP_B1                                    
7D68 8E72D2           (./Engine/Graphics):00080 [3]     5258            ldx   #Lst_Priority_Unset_1+2
                      (./Engine/Graphics):00081                         
7D6B                  (./Engine/Graphics):00082                 UDP_CheckEndB1        
7D6B BC72D0           (./Engine/Graphics):00083 [7]     5265            cmpx  Lst_Priority_Unset_1          ; end of priority unset list
7D6E 2607             (./Engine/Graphics):00084 [3]     5268            bne   UDP_CheckPrioPrevB1
                      (./Engine/Graphics):00085                         
7D70                  (./Engine/Graphics):00086                 UDP_InitListB1      
7D70 8E72D2           (./Engine/Graphics):00087 [3]     5271            ldx   #Lst_Priority_Unset_1+2 
7D73 BF72D0           (./Engine/Graphics):00088 [6]     5277            stx   Lst_Priority_Unset_1          ; set Lst_Priority_Unset_0 index
7D76 39               (./Engine/Graphics):00089 [5]     5282            rts
                      (./Engine/Graphics):00090                         
7D77                  (./Engine/Graphics):00091                 UDP_CheckPrioPrevB1
7D77 EE81             (./Engine/Graphics):00092 [8]     5290            ldu   ,x++
7D79 ECC84A           (./Engine/Graphics):00093 [6]     5296            ldd   rsv_priority_prev_obj_1,u
7D7C 2611             (./Engine/Graphics):00094 [3]     5299            bne   UDP_ChainPrevB1
                      (./Engine/Graphics):00095                         
7D7E A6C849           (./Engine/Graphics):00096 [5]     5304            lda   rsv_priority_1,u
7D81 48               (./Engine/Graphics):00097 [2]     5306            lsla
7D82 108E72AC         (./Engine/Graphics):00098 [4]     5310            ldy   #Tbl_Priority_First_Entry_1
7D86 31A6             (./Engine/Graphics):00099 [5]     5315            leay  a,y
7D88 ECC84C           (./Engine/Graphics):00100 [6]     5321            ldd   rsv_priority_next_obj_1,u
7D8B EDA4             (./Engine/Graphics):00101 [5]     5326            std   ,y
7D8D 200A             (./Engine/Graphics):00102 [3]     5329            bra   UDP_CheckPrioNextB1
                      (./Engine/Graphics):00103                                 
7D8F                  (./Engine/Graphics):00104                 UDP_ChainPrevB1
7D8F ECC84C           (./Engine/Graphics):00105 [6]     5335            ldd   rsv_priority_next_obj_1,u
7D92 10AEC84A         (./Engine/Graphics):00106 [7]     5342            ldy   rsv_priority_prev_obj_1,u        
7D96 EDA84C           (./Engine/Graphics):00107 [6]     5348            std   rsv_priority_next_obj_1,y        
                      (./Engine/Graphics):00108                 
7D99                  (./Engine/Graphics):00109                 UDP_CheckPrioNextB1       
7D99 ECC84C           (./Engine/Graphics):00110 [6]     5354            ldd   rsv_priority_next_obj_1,u
7D9C 2611             (./Engine/Graphics):00111 [3]     5357            bne   UDP_ChainNextB1
                      (./Engine/Graphics):00112                 
7D9E A6C849           (./Engine/Graphics):00113 [5]     5362            lda   rsv_priority_1,u
7DA1 48               (./Engine/Graphics):00114 [2]     5364            lsla
7DA2 108E72BE         (./Engine/Graphics):00115 [4]     5368            ldy   #Tbl_Priority_Last_Entry_1
7DA6 31A6             (./Engine/Graphics):00116 [5]     5373            leay  a,y
7DA8 ECC84A           (./Engine/Graphics):00117 [6]     5379            ldd   rsv_priority_prev_obj_1,u
7DAB EDA4             (./Engine/Graphics):00118 [5]     5384            std   ,y
7DAD 200A             (./Engine/Graphics):00119 [3]     5387            bra   UDP_CheckDeleteB1
                      (./Engine/Graphics):00120                                 
7DAF                  (./Engine/Graphics):00121                 UDP_ChainNextB1
7DAF ECC84A           (./Engine/Graphics):00122 [6]     5393            ldd   rsv_priority_prev_obj_1,u
7DB2 10AEC84C         (./Engine/Graphics):00123 [7]     5400            ldy   rsv_priority_next_obj_1,u        
7DB6 EDA84A           (./Engine/Graphics):00124 [6]     5406            std   rsv_priority_prev_obj_1,y
                      (./Engine/Graphics):00125                         
7DB9                  (./Engine/Graphics):00126                 UDP_CheckDeleteB1
7DB9 A642             (./Engine/Graphics):00127 [5]     5411            lda   render_flags,u
7DBB 8440             (./Engine/Graphics):00128 [2]     5413            anda  #render_todelete_mask
7DBD 270F             (./Engine/Graphics):00129 [3]     5416            beq   UDP_SetNewPrioB1
7DBF A6C848           (./Engine/Graphics):00130 [5]     5421            lda   rsv_prev_render_flags_0,u
7DC2 2B0A             (./Engine/Graphics):00131 [3]     5424            bmi   UDP_SetNewPrioB1
7DC4 A6C85C           (./Engine/Graphics):00132 [5]     5429            lda   rsv_prev_render_flags_1,u
7DC7 2B05             (./Engine/Graphics):00133 [3]     5432            bmi   UDP_SetNewPrioB1
7DC9 BD8166           (./Engine/Graphics):00134 [8]     5440            jsr   ClearObj
7DCC 209D             (./Engine/Graphics):00135 [3]     5443            bra   UDP_CheckEndB1
                      (./Engine/Graphics):00136                         
7DCE                  (./Engine/Graphics):00137                 UDP_SetNewPrioB1
7DCE A643             (./Engine/Graphics):00138 [5]     5448            lda   priority,u
7DD0 A7C849           (./Engine/Graphics):00139 [5]     5453            sta   rsv_priority_1,u
7DD3 2096             (./Engine/Graphics):00140 [3]     5456            bra   UDP_CheckEndB1
                      (C:\Users\bhrou\gi):00266                         INCLUDE "./Engine/Graphics/DrawSprites.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * DrawSprites
                      (./Engine/Graphics):00003                 * ------------
                      (./Engine/Graphics):00004                 * Subroutine to draw sprites on screen
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (back to front)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                                                            
7DD5                  (./Engine/Graphics):00013                 DrawSprites
                      (./Engine/Graphics):00014                 
7DD5                  (./Engine/Graphics):00015                 DRS_Start
7DD5 B67040           (./Engine/Graphics):00016 [5]     5461            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7DD8 2641             (./Engine/Graphics):00017 [3]     5464            bne   DRS_P8B1
                      (./Engine/Graphics):00018                         
7DDA                  (./Engine/Graphics):00019                 DRS_P8B0                                    
7DDA BE725A           (./Engine/Graphics):00020 [6]     5470            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
7DDD 2703             (./Engine/Graphics):00021 [3]     5473            beq   DRS_P7B0
7DDF BD7E5C           (./Engine/Graphics):00022 [8]     5481            jsr   DRS_ProcessEachPriorityLevelB0   
7DE2                  (./Engine/Graphics):00023                 DRS_P7B0
7DE2 BE7258           (./Engine/Graphics):00024 [6]     5487            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
7DE5 2703             (./Engine/Graphics):00025 [3]     5490            beq   DRS_P6B0
7DE7 BD7E5C           (./Engine/Graphics):00026 [8]     5498            jsr   DRS_ProcessEachPriorityLevelB0  
7DEA                  (./Engine/Graphics):00027                 DRS_P6B0
7DEA BE7256           (./Engine/Graphics):00028 [6]     5504            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
7DED 2703             (./Engine/Graphics):00029 [3]     5507            beq   DRS_P5B0
7DEF BD7E5C           (./Engine/Graphics):00030 [8]     5515            jsr   DRS_ProcessEachPriorityLevelB0  
7DF2                  (./Engine/Graphics):00031                 DRS_P5B0
7DF2 BE7254           (./Engine/Graphics):00032 [6]     5521            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
7DF5 2703             (./Engine/Graphics):00033 [3]     5524            beq   DRS_P4B0
7DF7 BD7E5C           (./Engine/Graphics):00034 [8]     5532            jsr   DRS_ProcessEachPriorityLevelB0  
7DFA                  (./Engine/Graphics):00035                 DRS_P4B0
7DFA BE7252           (./Engine/Graphics):00036 [6]     5538            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
7DFD 2703             (./Engine/Graphics):00037 [3]     5541            beq   DRS_P3B0
7DFF BD7E5C           (./Engine/Graphics):00038 [8]     5549            jsr   DRS_ProcessEachPriorityLevelB0              
7E02                  (./Engine/Graphics):00039                 DRS_P3B0
7E02 BE7250           (./Engine/Graphics):00040 [6]     5555            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
7E05 2703             (./Engine/Graphics):00041 [3]     5558            beq   DRS_P2B0
7E07 BD7E5C           (./Engine/Graphics):00042 [8]     5566            jsr   DRS_ProcessEachPriorityLevelB0     
7E0A                  (./Engine/Graphics):00043                 DRS_P2B0
7E0A BE724E           (./Engine/Graphics):00044 [6]     5572            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
7E0D 2703             (./Engine/Graphics):00045 [3]     5575            beq   DRS_P1B0
7E0F BD7E5C           (./Engine/Graphics):00046 [8]     5583            jsr   DRS_ProcessEachPriorityLevelB0 
7E12                  (./Engine/Graphics):00047                 DRS_P1B0
7E12 BE724C           (./Engine/Graphics):00048 [6]     5589            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
7E15 2703             (./Engine/Graphics):00049 [3]     5592            beq   DRS_rtsB0
7E17 BD7E5C           (./Engine/Graphics):00050 [8]     5600            jsr   DRS_ProcessEachPriorityLevelB0
7E1A                  (./Engine/Graphics):00051                 DRS_rtsB0        
7E1A 39               (./Engine/Graphics):00052 [5]     5605            rts
                      (./Engine/Graphics):00053                         
7E1B                  (./Engine/Graphics):00054                 DRS_P8B1
7E1B BE72BC           (./Engine/Graphics):00055 [6]     5611            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
7E1E 2703             (./Engine/Graphics):00056 [3]     5614            beq   DRS_P7B1
7E20 BD7F1B           (./Engine/Graphics):00057 [8]     5622            jsr   DRS_ProcessEachPriorityLevelB1   
7E23                  (./Engine/Graphics):00058                 DRS_P7B1
7E23 BE72BA           (./Engine/Graphics):00059 [6]     5628            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
7E26 2703             (./Engine/Graphics):00060 [3]     5631            beq   DRS_P6B1
7E28 BD7F1B           (./Engine/Graphics):00061 [8]     5639            jsr   DRS_ProcessEachPriorityLevelB1   
7E2B                  (./Engine/Graphics):00062                 DRS_P6B1
7E2B BE72B8           (./Engine/Graphics):00063 [6]     5645            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
7E2E 2703             (./Engine/Graphics):00064 [3]     5648            beq   DRS_P5B1
7E30 BD7F1B           (./Engine/Graphics):00065 [8]     5656            jsr   DRS_ProcessEachPriorityLevelB1   
7E33                  (./Engine/Graphics):00066                 DRS_P5B1
7E33 BE72B6           (./Engine/Graphics):00067 [6]     5662            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
7E36 2703             (./Engine/Graphics):00068 [3]     5665            beq   DRS_P4B1
7E38 BD7F1B           (./Engine/Graphics):00069 [8]     5673            jsr   DRS_ProcessEachPriorityLevelB1   
7E3B                  (./Engine/Graphics):00070                 DRS_P4B1
7E3B BE72B4           (./Engine/Graphics):00071 [6]     5679            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
7E3E 2703             (./Engine/Graphics):00072 [3]     5682            beq   DRS_P3B1
7E40 BD7F1B           (./Engine/Graphics):00073 [8]     5690            jsr   DRS_ProcessEachPriorityLevelB1             
7E43                  (./Engine/Graphics):00074                 DRS_P3B1
7E43 BE72B2           (./Engine/Graphics):00075 [6]     5696            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
7E46 2703             (./Engine/Graphics):00076 [3]     5699            beq   DRS_P2B1
7E48 BD7F1B           (./Engine/Graphics):00077 [8]     5707            jsr   DRS_ProcessEachPriorityLevelB1    
7E4B                  (./Engine/Graphics):00078                 DRS_P2B1
7E4B BE72B0           (./Engine/Graphics):00079 [6]     5713            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
7E4E 2703             (./Engine/Graphics):00080 [3]     5716            beq   DRS_P1B1
7E50 BD7F1B           (./Engine/Graphics):00081 [8]     5724            jsr   DRS_ProcessEachPriorityLevelB1
7E53                  (./Engine/Graphics):00082                 DRS_P1B1
7E53 BE72AE           (./Engine/Graphics):00083 [6]     5730            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
7E56 2703             (./Engine/Graphics):00084 [3]     5733            beq   DRS_rtsB1
7E58 BD7F1B           (./Engine/Graphics):00085 [8]     5741            jsr   DRS_ProcessEachPriorityLevelB1
7E5B                  (./Engine/Graphics):00086                 DRS_rtsB1        
7E5B 39               (./Engine/Graphics):00087 [5]     5746            rts
                      (./Engine/Graphics):00088                 
7E5C                  (./Engine/Graphics):00089                 DRS_ProcessEachPriorityLevelB0    
7E5C A68822           (./Engine/Graphics):00090 [5]     5751            lda   rsv_render_flags,x
7E5F 8404             (./Engine/Graphics):00091 [2]     5753            anda  #rsv_render_displaysprite_mask
7E61 1027007F         (./Engine/Graphics):00092 [5+?]   5758            lbeq  DRS_NextObjectB0
                      (./Engine/Graphics):00093                         
7E65 A68848           (./Engine/Graphics):00094 [5]     5763            lda   rsv_prev_render_flags_0,x
7E68 102B0078         (./Engine/Graphics):00095 [5+?]   5768            lbmi  DRS_NextObjectB0
7E6C A602             (./Engine/Graphics):00096 [5]     5773            lda   render_flags,x
7E6E 8404             (./Engine/Graphics):00097 [2]     5775            anda  #render_overlay_mask
7E70 260E             (./Engine/Graphics):00098 [3]     5778            bne   DRS_DrawWithoutBackupB0
7E72 A6882A           (./Engine/Graphics):00099 [5]     5783            lda   rsv_erase_nb_cell,x        
7E75 BD7FAB           (./Engine/Graphics):00100 [8]     5791            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
7E78 108C0000         (./Engine/Graphics):00101 [5]     5796            cmpy  #$0000                        ; y contains cell_end of allocated space 
7E7C 10270064         (./Engine/Graphics):00102 [5+?]   5801            lbeq   DRS_NextObjectB0             ; branch if no more free space
7E80                  (./Engine/Graphics):00103                 DRS_DrawWithoutBackupB0        
7E80 EC8814           (./Engine/Graphics):00104 [6]     5807            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
7E83 A08825           (./Engine/Graphics):00105 [5]     5812            suba  rsv_image_center_offset,x
7E86 BD7EEC           (./Engine/Graphics):00106 [8]     5820            jsr   DRS_XYToAddress
7E89 EC8828           (./Engine/Graphics):00107 [6]     5826            ldd   rsv_mapping_frame,x
7E8C ED883A           (./Engine/Graphics):00108 [6]     5832            std   rsv_prev_mapping_frame_0,x    ; save previous mapping_frame
7E8F A6882B           (./Engine/Graphics):00109 [5]     5837            lda   rsv_page_draw_routine,x
                      (./Engine/Graphics):00110                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7E92 B7E7E6           (    _SetCartPageA):00004 [5]     5842            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7E95 BF7E9E           (./Engine/Graphics):00111 [6]     5848            stx   DRS_dyn3B0+1                  ; save x reg
7E98 DEFA             (./Engine/Graphics):00112 [5]     5853            ldu   <glb_screen_location_2
7E9A AD982C           (./Engine/Graphics):00113 [11]    5864            jsr   [rsv_draw_routine,x]          ; backup background and draw sprite on working screen buffer
7E9D                  (./Engine/Graphics):00114                 DRS_dyn3B0        
7E9D 8E0000           (./Engine/Graphics):00115 [3]     5867            ldx   #$0000                        ; (dynamic) restore x reg
7EA0 EF8840           (./Engine/Graphics):00116 [6]     5873            stu   rsv_bgdata_0,x                ; store pointer to saved background data
7EA3 EC8814           (./Engine/Graphics):00117 [6]     5879            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
7EA6 44               (./Engine/Graphics):00118 [2]     5881            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
7EA7 ED8842           (./Engine/Graphics):00119 [6]     5887            std   rsv_prev_xy_pixel_0,x         ; save previous x_pixel and y_pixel in one operation             
7EAA EC8831           (./Engine/Graphics):00120 [6]     5893            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
7EAD ED8844           (./Engine/Graphics):00121 [6]     5899            std   rsv_prev_xy1_pixel_0,x        ; save as previous x' and y'        
7EB0 EC8833           (./Engine/Graphics):00122 [6]     5905            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
7EB3 ED8846           (./Engine/Graphics):00123 [6]     5911            std   rsv_prev_xy2_pixel_0,x        ; save as previous x'' and y''
7EB6 A6882A           (./Engine/Graphics):00124 [5]     5916            lda   rsv_erase_nb_cell,x
7EB9 A7883C           (./Engine/Graphics):00125 [5]     5921            sta   rsv_prev_erase_nb_cell_0,x
7EBC A6882E           (./Engine/Graphics):00126 [5]     5926            lda   rsv_page_erase_routine,x
7EBF A7883D           (./Engine/Graphics):00127 [5]     5931            sta   rsv_prev_page_erase_routine_0,x
7EC2 EC882F           (./Engine/Graphics):00128 [6]     5937            ldd   rsv_erase_routine,x
7EC5 ED883E           (./Engine/Graphics):00129 [6]     5943            std   rsv_prev_erase_routine_0,x
7EC8 A68848           (./Engine/Graphics):00130 [5]     5948            lda   rsv_prev_render_flags_0,x
7ECB 8A80             (./Engine/Graphics):00131 [2]     5950            ora   #rsv_prev_render_onscreen_mask
7ECD E602             (./Engine/Graphics):00132 [5]     5955            ldb   render_flags,x
7ECF C504             (./Engine/Graphics):00133 [2]     5957            bitb  #render_overlay_mask
7ED1 2704             (./Engine/Graphics):00134 [3]     5960            beq   DRS_NoOverlayB0
7ED3 8A01             (./Engine/Graphics):00135 [2]     5962            ora   #rsv_prev_render_overlay_mask
7ED5 2002             (./Engine/Graphics):00136 [3]     5965            bra   DRS_UpdateRenderFlagB0
                      (./Engine/Graphics):00137                         
7ED7                  (./Engine/Graphics):00138                 DRS_NoOverlayB0
7ED7 84FE             (./Engine/Graphics):00139 [2]     5967            anda   #^rsv_prev_render_overlay_mask
                      (./Engine/Graphics):00140                 
7ED9                  (./Engine/Graphics):00141                 DRS_UpdateRenderFlagB0        
7ED9 A78848           (./Engine/Graphics):00142 [5]     5972            sta   rsv_prev_render_flags_0,x     ; set the onscreen flag and save overlay flag
7EDC A68822           (./Engine/Graphics):00143 [5]     5977            lda   rsv_render_flags,x
7EDF 8A80             (./Engine/Graphics):00144 [2]     5979            ora   #rsv_render_onscreen_mask     ; sprite is on screen
7EE1 A78822           (./Engine/Graphics):00145 [5]     5984            sta   rsv_render_flags,x
                      (./Engine/Graphics):00146                         
7EE4                  (./Engine/Graphics):00147                 DRS_NextObjectB0        
7EE4 AE8838           (./Engine/Graphics):00148 [6]     5990            ldx   rsv_priority_next_obj_0,x
7EE7 1026FF71         (./Engine/Graphics):00149 [5+?]   5995            lbne  DRS_ProcessEachPriorityLevelB0   
7EEB 39               (./Engine/Graphics):00150 [5]     6000            rts
                      (./Engine/Graphics):00151                 
                      (./Engine/Graphics):00152                 ********************************************************************************
                      (./Engine/Graphics):00153                 * x_pixel and y_pixel coordinate system
                      (./Engine/Graphics):00154                 * x coordinates:
                      (./Engine/Graphics):00155                 *    - off-screen left 00-2F (0-47)
                      (./Engine/Graphics):00156                 *    - on screen 30-CF (48-207)
                      (./Engine/Graphics):00157                 *    - off-screen right D0-FF (208-255)
                      (./Engine/Graphics):00158                 *
                      (./Engine/Graphics):00159                 * y coordinates:
                      (./Engine/Graphics):00160                 *    - off-screen top 00-1B (0-27)
                      (./Engine/Graphics):00161                 *    - on screen 1C-E3 (28-227)
                      (./Engine/Graphics):00162                 *    - off-screen bottom E4-FF (228-255)
                      (./Engine/Graphics):00163                 ********************************************************************************
                      (./Engine/Graphics):00164                 
7EEC                  (./Engine/Graphics):00165                 DRS_XYToAddress
7EEC 8030             (./Engine/Graphics):00166 [2]     6002            suba  #$30
7EEE 2403             (./Engine/Graphics):00167 [3]     6005            bcc   DRS_XYToAddressPositive
7EF0 8060             (./Engine/Graphics):00168 [2]     6007            suba  #$60                          ; get x position one line up, skipping (160-255)
7EF2 5A               (./Engine/Graphics):00169 [2]     6009            decb
7EF3                  (./Engine/Graphics):00170                 DRS_XYToAddressPositive        
7EF3 C01C             (./Engine/Graphics):00171 [2]     6011            subb  #$1C                          ; TODO same thing as x for negative case
7EF5 44               (./Engine/Graphics):00172 [2]     6013            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
7EF6 44               (./Engine/Graphics):00173 [2]     6015            lsra                                ; x=x/2, RAMA RAMB enterlace  
7EF7 2511             (./Engine/Graphics):00174 [3]     6018            bcs   DRS_XYToAddressRAM2First      ; Branch if write must begin in RAM2 first
7EF9                  (./Engine/Graphics):00175                 DRS_XYToAddressRAM1First
7EF9 B77F01           (./Engine/Graphics):00176 [5]     6023            sta   DRS_dyn1+2
7EFC 8628             (./Engine/Graphics):00177 [2]     6025            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
7EFE 3D               (./Engine/Graphics):00178 [11]    6036            mul
7EFF                  (./Engine/Graphics):00179                 DRS_dyn1        
7EFF C3C000           (./Engine/Graphics):00180 [4]     6040            addd  #$C000                        ; (dynamic)
7F02 DDFA             (./Engine/Graphics):00181 [5]     6045            std   <glb_screen_location_2
7F04 832000           (./Engine/Graphics):00182 [4]     6049            subd  #$2000
7F07 DDFC             (./Engine/Graphics):00183 [5]     6054            std   <glb_screen_location_1     
7F09 39               (./Engine/Graphics):00184 [5]     6059            rts
7F0A                  (./Engine/Graphics):00185                 DRS_XYToAddressRAM2First
7F0A B77F12           (./Engine/Graphics):00186 [5]     6064            sta   DRS_dyn2+2
7F0D 8628             (./Engine/Graphics):00187 [2]     6066            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
7F0F 3D               (./Engine/Graphics):00188 [11]    6077            mul
7F10                  (./Engine/Graphics):00189                 DRS_dyn2        
7F10 C3A000           (./Engine/Graphics):00190 [4]     6081            addd  #$A000                        ; (dynamic)
7F13 DDFA             (./Engine/Graphics):00191 [5]     6086            std   <glb_screen_location_2
7F15 C32001           (./Engine/Graphics):00192 [4]     6090            addd  #$2001
7F18 DDFC             (./Engine/Graphics):00193 [5]     6095            std   <glb_screen_location_1
7F1A 39               (./Engine/Graphics):00194 [5]     6100            rts
                      (./Engine/Graphics):00195                         
7F1B                  (./Engine/Graphics):00196                 DRS_ProcessEachPriorityLevelB1
7F1B A68822           (./Engine/Graphics):00197 [5]     6105            lda   rsv_render_flags,x
7F1E 8404             (./Engine/Graphics):00198 [2]     6107            anda  #rsv_render_displaysprite_mask
7F20 1027007F         (./Engine/Graphics):00199 [5+?]   6112            lbeq  DRS_NextObjectB1
                      (./Engine/Graphics):00200                         
7F24 A6885C           (./Engine/Graphics):00201 [5]     6117            lda   rsv_prev_render_flags_1,x
7F27 102B0078         (./Engine/Graphics):00202 [5+?]   6122            lbmi  DRS_NextObjectB1
7F2B A602             (./Engine/Graphics):00203 [5]     6127            lda   render_flags,x
7F2D 8404             (./Engine/Graphics):00204 [2]     6129            anda  #render_overlay_mask
7F2F 260E             (./Engine/Graphics):00205 [3]     6132            bne   DRS_DrawWithoutBackupB1
7F31 A6882A           (./Engine/Graphics):00206 [5]     6137            lda   rsv_erase_nb_cell,x        
7F34 BD7FAB           (./Engine/Graphics):00207 [8]     6145            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
7F37 108C0000         (./Engine/Graphics):00208 [5]     6150            cmpy  #$0000                        ; y contains cell_end of allocated space
7F3B 10270064         (./Engine/Graphics):00209 [5+?]   6155            lbeq   DRS_NextObjectB1             ; branch if no more free space
7F3F                  (./Engine/Graphics):00210                 DRS_DrawWithoutBackupB1        
7F3F EC8814           (./Engine/Graphics):00211 [6]     6161            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
7F42 A08825           (./Engine/Graphics):00212 [5]     6166            suba  rsv_image_center_offset,x
7F45 BD7EEC           (./Engine/Graphics):00213 [8]     6174            jsr   DRS_XYToAddress
7F48 EC8828           (./Engine/Graphics):00214 [6]     6180            ldd   rsv_mapping_frame,x
7F4B ED884E           (./Engine/Graphics):00215 [6]     6186            std   rsv_prev_mapping_frame_1,x    ; save previous mapping_frame
7F4E A6882B           (./Engine/Graphics):00216 [5]     6191            lda   rsv_page_draw_routine,x
                      (./Engine/Graphics):00217                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7F51 B7E7E6           (    _SetCartPageA):00004 [5]     6196            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7F54 BF7F5D           (./Engine/Graphics):00218 [6]     6202            stx   DRS_dyn3B1+1                  ; save x reg
7F57 DEFA             (./Engine/Graphics):00219 [5]     6207            ldu   <glb_screen_location_2
7F59 AD982C           (./Engine/Graphics):00220 [11]    6218            jsr   [rsv_draw_routine,x]
7F5C                  (./Engine/Graphics):00221                 DRS_dyn3B1        
7F5C 8E0000           (./Engine/Graphics):00222 [3]     6221            ldx   #$0000                        ; (dynamic) restore x reg
7F5F EF8854           (./Engine/Graphics):00223 [6]     6227            stu   rsv_bgdata_1,x                ; store pointer to saved background data
7F62 EC8814           (./Engine/Graphics):00224 [6]     6233            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
7F65 44               (./Engine/Graphics):00225 [2]     6235            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
7F66 ED8856           (./Engine/Graphics):00226 [6]     6241            std   rsv_prev_xy_pixel_1,x         ; save previous x_pixel and y_pixel in one operation         
7F69 EC8831           (./Engine/Graphics):00227 [6]     6247            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
7F6C ED8858           (./Engine/Graphics):00228 [6]     6253            std   rsv_prev_xy1_pixel_1,x        ; save as previous x' and y'        
7F6F EC8833           (./Engine/Graphics):00229 [6]     6259            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
7F72 ED885A           (./Engine/Graphics):00230 [6]     6265            std   rsv_prev_xy2_pixel_1,x        ; save as previous x'' and y''
7F75 A6882A           (./Engine/Graphics):00231 [5]     6270            lda   rsv_erase_nb_cell,x
7F78 A78850           (./Engine/Graphics):00232 [5]     6275            sta   rsv_prev_erase_nb_cell_1,x
7F7B A6882E           (./Engine/Graphics):00233 [5]     6280            lda   rsv_page_erase_routine,x
7F7E A78851           (./Engine/Graphics):00234 [5]     6285            sta   rsv_prev_page_erase_routine_1,x
7F81 EC882F           (./Engine/Graphics):00235 [6]     6291            ldd   rsv_erase_routine,x
7F84 ED8852           (./Engine/Graphics):00236 [6]     6297            std   rsv_prev_erase_routine_1,x                        
7F87 A6885C           (./Engine/Graphics):00237 [5]     6302            lda   rsv_prev_render_flags_1,x
7F8A 8A80             (./Engine/Graphics):00238 [2]     6304            ora   #rsv_prev_render_onscreen_mask
7F8C E602             (./Engine/Graphics):00239 [5]     6309            ldb   render_flags,x
7F8E C504             (./Engine/Graphics):00240 [2]     6311            bitb  #render_overlay_mask
7F90 2704             (./Engine/Graphics):00241 [3]     6314            beq   DRS_NoOverlayB1
7F92 8A01             (./Engine/Graphics):00242 [2]     6316            ora   #rsv_prev_render_overlay_mask
7F94 2002             (./Engine/Graphics):00243 [3]     6319            bra   DRS_UpdateRenderFlagB1
                      (./Engine/Graphics):00244                         
7F96                  (./Engine/Graphics):00245                 DRS_NoOverlayB1
7F96 84FE             (./Engine/Graphics):00246 [2]     6321            anda   #^rsv_prev_render_overlay_mask
                      (./Engine/Graphics):00247                 
7F98                  (./Engine/Graphics):00248                 DRS_UpdateRenderFlagB1
7F98 A7885C           (./Engine/Graphics):00249 [5]     6326            sta   rsv_prev_render_flags_1,x     ; set the onscreen flag and save overlay flag
7F9B A68822           (./Engine/Graphics):00250 [5]     6331            lda   rsv_render_flags,x
7F9E 8A80             (./Engine/Graphics):00251 [2]     6333            ora   #rsv_render_onscreen_mask     ; sprite is on screen
7FA0 A78822           (./Engine/Graphics):00252 [5]     6338            sta   rsv_render_flags,x        
                      (./Engine/Graphics):00253                                 
7FA3                  (./Engine/Graphics):00254                 DRS_NextObjectB1        
7FA3 AE884C           (./Engine/Graphics):00255 [6]     6344            ldx   rsv_priority_next_obj_1,x
7FA6 1026FF71         (./Engine/Graphics):00256 [5+?]   6349            lbne  DRS_ProcessEachPriorityLevelB1   
7FAA 39               (./Engine/Graphics):00257 [5]     6354            rts
                      (C:\Users\bhrou\gi):00267                         INCLUDE "./Engine/Graphics/BgBufferAlloc.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * BgBufferAlloc
                      (./Engine/Graphics):00003                 * -------------
                      (./Engine/Graphics):00004                 * Subroutine to allocate memory into background buffer
                      (./Engine/Graphics):00005                 *
                      (./Engine/Graphics):00006                 * input  REG : [a] number of requested cells
                      (./Engine/Graphics):00007                 * output REG : [y] cell_end or 0000 if no more space
                      (./Engine/Graphics):00008                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                 
7FAB                  (./Engine/Graphics):00010                 BgBufferAlloc
7FAB 3414             (./Engine/Graphics):00011 [8]     6362            pshs  b,x
7FAD F67040           (./Engine/Graphics):00012 [5]     6367            ldb   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7FB0 2609             (./Engine/Graphics):00013 [3]     6370            bne   BBA1                          ; branch if buffer 1 is current
                      (./Engine/Graphics):00014                         
7FB2                  (./Engine/Graphics):00015                 BBA0        
7FB2 8E7700           (./Engine/Graphics):00016 [3]     6373            ldx   #Lst_FreeCellFirstEntry_0     ; save previous cell.next_entry into x for future update
7FB5 10BE7700         (./Engine/Graphics):00017 [7]     6380            ldy   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
7FB9 2007             (./Engine/Graphics):00018 [3]     6383            bra   BBA_Next
                      (./Engine/Graphics):00019                         
7FBB                  (./Engine/Graphics):00020                 BBA1        
7FBB 8E78C8           (./Engine/Graphics):00021 [3]     6386            ldx   #Lst_FreeCellFirstEntry_1     ; save previous cell.next_entry into x for future update
7FBE 10BE78C8         (./Engine/Graphics):00022 [7]     6393            ldy   Lst_FreeCellFirstEntry_1      ; load first cell for screen buffer 1
                      (./Engine/Graphics):00023                         
7FC2                  (./Engine/Graphics):00024                 BBA_Next
7FC2 2740             (./Engine/Graphics):00025 [3]     6396            beq   BBA_rts                       ; loop thru all entries, branch if no more free space
7FC4 A1A4             (./Engine/Graphics):00026 [4]     6400            cmpa  nb_cells,y                    ; compare current nb of free cells with requested
7FC6 2709             (./Engine/Graphics):00027 [3]     6403            beq   BBA_FitCell                   ; branch if current free cells is the same size than requested
7FC8 231D             (./Engine/Graphics):00028 [3]     6406            bls   BBA_DivideCell                ; branch if current free cells are greater than requested
7FCA 3025             (./Engine/Graphics):00029 [5]     6411            leax  next_entry,y                  ; save previous cell.next_entry into x for future update        
7FCC 10AE25           (./Engine/Graphics):00030 [7]     6418            ldy   next_entry,y                  ; move to next entry
7FCF 20F1             (./Engine/Graphics):00031 [3]     6421            bra   BBA_Next
                      (./Engine/Graphics):00032                           
7FD1                  (./Engine/Graphics):00033                 BBA_FitCell
7FD1 EC25             (./Engine/Graphics):00034 [6]     6427            ldd   next_entry,y
7FD3 ED84             (./Engine/Graphics):00035 [5]     6432            std   ,x                            ; chain previous cell with next cell
7FD5 EC23             (./Engine/Graphics):00036 [6]     6438            ldd   cell_end,y                    ; return cell_end
7FD7 FD8002           (./Engine/Graphics):00037 [6]     6444            std   cell_end_return+2
                      (./Engine/Graphics):00038                 
7FDA CC0000           (./Engine/Graphics):00039 [3]     6447            ldd   #0
7FDD A7A4             (./Engine/Graphics):00040 [4]     6451            sta   nb_cells,y                    ; clean current cell
7FDF ED21             (./Engine/Graphics):00041 [6]     6457            std   cell_start,y                  ;
7FE1 ED23             (./Engine/Graphics):00042 [6]     6463            std   cell_end,y                    ;
7FE3 ED25             (./Engine/Graphics):00043 [6]     6469            std   next_entry,y                  ;
                      (./Engine/Graphics):00044                 
7FE5 2019             (./Engine/Graphics):00045 [3]     6472            bra   cell_end_return
                      (./Engine/Graphics):00046                         
7FE7                  (./Engine/Graphics):00047                 BBA_DivideCell
7FE7 B77FED           (./Engine/Graphics):00048 [5]     6477            sta   BBA_dyn+1
7FEA E6A4             (./Engine/Graphics):00049 [4]     6481            ldb   nb_cells,y
7FEC                  (./Engine/Graphics):00050                 BBA_dyn
7FEC C000             (./Engine/Graphics):00051 [2]     6483            subb  #$00                          ; substract requested cells to nb_cells
7FEE E7A4             (./Engine/Graphics):00052 [4]     6487            stb   nb_cells,y                    ; update nb_cells
                      (./Engine/Graphics):00053                         
7FF0 C640             (./Engine/Graphics):00054 [2]     6489            ldb   #cell_size
7FF2 3D               (./Engine/Graphics):00055 [11]    6500            mul
                      (./Engine/Graphics):00056                         _negd
7FF3 40               (            _negd):00001 [2]     6502            nega
7FF4 50               (            _negd):00002 [2]     6504            negb
7FF5 8200             (            _negd):00003 [2]     6506            sbca  #0
7FF7 AE23             (./Engine/Graphics):00057 [6]     6512            ldx   cell_end,y
7FF9 BF8002           (./Engine/Graphics):00058 [6]     6518            stx   cell_end_return+2        
7FFC 308B             (./Engine/Graphics):00059 [8]     6526            leax  d,x                           ; cell_end = cell_end - (number of requested cells * nb of bytes in a cell)
7FFE AF23             (./Engine/Graphics):00060 [6]     6532            stx   cell_end,y                    ; update cell_end
8000                  (./Engine/Graphics):00061                 cell_end_return        
8000 108E0000         (./Engine/Graphics):00062 [4]     6536            ldy   #$0000
8004                  (./Engine/Graphics):00063                 BBA_rts
8004 3594             (./Engine/Graphics):00064 [10]    6546            puls  b,x,pc
                      (C:\Users\bhrou\gi):00268                         INCLUDE "./Engine/Joypad/ReadJoypads2.asm"
                      (./Engine/Joypad/R):00001                 ********************************************************************************
                      (./Engine/Joypad/R):00002                 * Get joystick parameters (Version 2)
                      (./Engine/Joypad/R):00003                 *
                      (./Engine/Joypad/R):00004                 * Read Joypads and store result as Press and Help values :
                      (./Engine/Joypad/R):00005                 * One byte with direction and button for player 1
                      (./Engine/Joypad/R):00006                 * One byte with direction and button for player 2
                      (./Engine/Joypad/R):00007                 *
                      (./Engine/Joypad/R):00008                 * Note : to have one byte for direction and another for button, use V1
                      (./Engine/Joypad/R):00009                 * ------------------------------------------------------------------------------
                      (./Engine/Joypad/R):00010                 *
                      (./Engine/Joypad/R):00011                 * Joypads Direction
                      (./Engine/Joypad/R):00012                 * -----------------
                      (./Engine/Joypad/R):00013                 * Register: $E7CC (8bits)
                      (./Engine/Joypad/R):00014                 *
                      (./Engine/Joypad/R):00015                 * Joypad2     Joypad1
                      (./Engine/Joypad/R):00016                 * 1111        1111 (0: press | 1: release)  
                      (./Engine/Joypad/R):00017                 * ||||_Up     ||||_Up
                      (./Engine/Joypad/R):00018                 * |||__Down   |||__Down
                      (./Engine/Joypad/R):00019                 * ||___Left   ||___Left
                      (./Engine/Joypad/R):00020                 * |____Right  |____Right
                      (./Engine/Joypad/R):00021                 *
                      (./Engine/Joypad/R):00022                 * Joypads Bouttons
                      (./Engine/Joypad/R):00023                 * ----------------
                      (./Engine/Joypad/R):00024                 * Register: $E7CD (8bits)
                      (./Engine/Joypad/R):00025                 *
                      (./Engine/Joypad/R):00026                 *   [------] 6 bits DAC
                      (./Engine/Joypad/R):00027                 * 11 001100 (0: press | 1: release) 
                      (./Engine/Joypad/R):00028                 * ||   ||
                      (./Engine/Joypad/R):00029                 * ||   ||_ Btn B Joypad1
                      (./Engine/Joypad/R):00030                 * ||   |__ Btn B Joypad2
                      (./Engine/Joypad/R):00031                 * ||
                      (./Engine/Joypad/R):00032                 * ||______ Btn A Joypad1
                      (./Engine/Joypad/R):00033                 * |_______ Btn A Joypad2
                      (./Engine/Joypad/R):00034                 *
                      (./Engine/Joypad/R):00035                 * Result values: Joypads_Held, Joypads_Press
                      (./Engine/Joypad/R):00036                 * -----------------------------------------------
                      (./Engine/Joypad/R):00037                 * (16 bits)
                      (./Engine/Joypad/R):00038                 * Joypad1
                      (./Engine/Joypad/R):00039                 * 0000        0000 (0: release | 1: press)
                      (./Engine/Joypad/R):00040                 * ||||_Up     ||
                      (./Engine/Joypad/R):00041                 * |||__Down   ||
                      (./Engine/Joypad/R):00042                 * ||___Left   ||___Btn B
                      (./Engine/Joypad/R):00043                 * |____Right  |____Btn A
                      (./Engine/Joypad/R):00044                 *
                      (./Engine/Joypad/R):00045                 * Joypad2
                      (./Engine/Joypad/R):00046                 * 0000        0000 (0: release | 1: press)
                      (./Engine/Joypad/R):00047                 * ||||_Up     ||
                      (./Engine/Joypad/R):00048                 * |||__Down   ||
                      (./Engine/Joypad/R):00049                 * ||___Left   ||___Btn B
                      (./Engine/Joypad/R):00050                 * |____Right  |____Btn A
                      (./Engine/Joypad/R):00051                 *
                      (./Engine/Joypad/R):00052                 ********************************************************************************
                      (./Engine/Joypad/R):00053                 
                      (./Engine/Joypad/R):00054                 ; ---------------------------------------------------------------------------
                      (./Engine/Joypad/R):00055                 ; Controller Buttons
                      (./Engine/Joypad/R):00056                 ;
                      (./Engine/Joypad/R):00057                 ; Buttons bit numbers
     0004             (./Engine/Joypad/R):00058                 button_up                       equ   4
     0005             (./Engine/Joypad/R):00059                 button_down                     equ   5
     0006             (./Engine/Joypad/R):00060                 button_left                     equ   6
     0007             (./Engine/Joypad/R):00061                 button_right                    equ   7
     0002             (./Engine/Joypad/R):00062                 button_B                        equ   2
     0003             (./Engine/Joypad/R):00063                 button_C                        equ   3
     0003             (./Engine/Joypad/R):00064                 button_A                        equ   3
     0003             (./Engine/Joypad/R):00065                 button_start                    equ   3
                      (./Engine/Joypad/R):00066                 ; Buttons masks
     0010             (./Engine/Joypad/R):00067                 button_up_mask                  equ   %00010000
     0020             (./Engine/Joypad/R):00068                 button_down_mask                equ   %00100000
     0040             (./Engine/Joypad/R):00069                 button_left_mask                equ   %01000000
     0080             (./Engine/Joypad/R):00070                 button_right_mask               equ   %10000000
     0004             (./Engine/Joypad/R):00071                 button_B_mask                   equ   %00000100
     0008             (./Engine/Joypad/R):00072                 button_C_mask                   equ   %00001000
     0008             (./Engine/Joypad/R):00073                 button_A_mask                   equ   %00001000
     0008             (./Engine/Joypad/R):00074                 button_start_mask               equ   %00001000
                      (./Engine/Joypad/R):00075                 
8006                  (./Engine/Joypad/R):00076                 Ctrl_1_Logical
8006 00               (./Engine/Joypad/R):00077                 Ctrl_1_Held_Logical             fcb   0
8007 00               (./Engine/Joypad/R):00078                 Ctrl_1_Press_Logical            fcb   0
8008                  (./Engine/Joypad/R):00079                 Ctrl_1
8008 00               (./Engine/Joypad/R):00080                 Ctrl_1_Held                     fcb   0
8009 00               (./Engine/Joypad/R):00081                 Ctrl_1_Press                    fcb   0
800A                  (./Engine/Joypad/R):00082                 Ctrl_2
800A 00               (./Engine/Joypad/R):00083                 Ctrl_2_Held                     fcb   0
800B 00               (./Engine/Joypad/R):00084                 Ctrl_2_Press                    fcb   0
                      (./Engine/Joypad/R):00085                 
800C                  (./Engine/Joypad/R):00086                 ReadJoypads
800C FCE7CC           (./Engine/Joypad/R):00087 [6]     6552            ldd   $E7CC
                      (./Engine/Joypad/R):00088                         ; Ctrl 1
800F F78021           (./Engine/Joypad/R):00089 [5]     6557            stb   @a
8012 840F             (./Engine/Joypad/R):00090 [2]     6559            anda  #%00001111
8014 48               (./Engine/Joypad/R):00091 [2]     6561            lsla
8015 48               (./Engine/Joypad/R):00092 [2]     6563            lsla
8016 48               (./Engine/Joypad/R):00093 [2]     6565            lsla
8017 48               (./Engine/Joypad/R):00094 [2]     6567            lsla
8018 C440             (./Engine/Joypad/R):00095 [2]     6569            andb  #%01000000
801A 54               (./Engine/Joypad/R):00096 [2]     6571            lsrb
801B 54               (./Engine/Joypad/R):00097 [2]     6573            lsrb
801C 54               (./Engine/Joypad/R):00098 [2]     6575            lsrb
801D F78025           (./Engine/Joypad/R):00099 [5]     6580            stb   @b
8020 C600             (./Engine/Joypad/R):00100 [2]     6582            ldb   #0
     8021             (./Engine/Joypad/R):00101                 @a      equ   *-1
8022 C404             (./Engine/Joypad/R):00102 [2]     6584            andb  #%00000100
8024 CA00             (./Engine/Joypad/R):00103 [2]     6586            orb   #0
     8025             (./Engine/Joypad/R):00104                 @b      equ   *-1
8026 F7802A           (./Engine/Joypad/R):00105 [5]     6591            stb   @c
8029 8A00             (./Engine/Joypad/R):00106 [2]     6593            ora   #0
     802A             (./Engine/Joypad/R):00107                 @c      equ   *-1
802B 43               (./Engine/Joypad/R):00108 [2]     6595            coma
802C B7803C           (./Engine/Joypad/R):00109 [5]     6600            sta   @d
802F B68008           (./Engine/Joypad/R):00110 [5]     6605            lda   Ctrl_1_Held
8032 B8803C           (./Engine/Joypad/R):00111 [5]     6610            eora  @d
8035 B4803C           (./Engine/Joypad/R):00112 [5]     6615            anda  @d
8038 B78009           (./Engine/Joypad/R):00113 [5]     6620            sta   Ctrl_1_Press
803B 8600             (./Engine/Joypad/R):00114 [2]     6622            lda   #0
     803C             (./Engine/Joypad/R):00115                 @d      equ   *-1
803D B78008           (./Engine/Joypad/R):00116 [5]     6627            sta   Ctrl_1_Held
                      (./Engine/Joypad/R):00117                 
8040 FCE7CC           (./Engine/Joypad/R):00118 [6]     6633            ldd   $E7CC
                      (./Engine/Joypad/R):00119                         ; Ctrl 2
8043 F78052           (./Engine/Joypad/R):00120 [5]     6638            stb   @a
8046 84F0             (./Engine/Joypad/R):00121 [2]     6640            anda  #%11110000
8048 C480             (./Engine/Joypad/R):00122 [2]     6642            andb  #%10000000
804A 54               (./Engine/Joypad/R):00123 [2]     6644            lsrb
804B 54               (./Engine/Joypad/R):00124 [2]     6646            lsrb
804C 54               (./Engine/Joypad/R):00125 [2]     6648            lsrb
804D 54               (./Engine/Joypad/R):00126 [2]     6650            lsrb
804E F78057           (./Engine/Joypad/R):00127 [5]     6655            stb   @b
8051 C600             (./Engine/Joypad/R):00128 [2]     6657            ldb   #0
     8052             (./Engine/Joypad/R):00129                 @a      equ   *-1
8053 C408             (./Engine/Joypad/R):00130 [2]     6659            andb  #%00001000
8055 54               (./Engine/Joypad/R):00131 [2]     6661            lsrb
8056 CA00             (./Engine/Joypad/R):00132 [2]     6663            orb   #0
     8057             (./Engine/Joypad/R):00133                 @b      equ   *-1
8058 F7805C           (./Engine/Joypad/R):00134 [5]     6668            stb   @c
805B 8A00             (./Engine/Joypad/R):00135 [2]     6670            ora   #0
     805C             (./Engine/Joypad/R):00136                 @c      equ   *-1
805D 43               (./Engine/Joypad/R):00137 [2]     6672            coma
805E B7806E           (./Engine/Joypad/R):00138 [5]     6677            sta   @d
8061 B6800A           (./Engine/Joypad/R):00139 [5]     6682            lda   Ctrl_2_Held
8064 B8806E           (./Engine/Joypad/R):00140 [5]     6687            eora  @d
8067 B4806E           (./Engine/Joypad/R):00141 [5]     6692            anda  @d
806A B7800B           (./Engine/Joypad/R):00142 [5]     6697            sta   Ctrl_2_Press
806D 8600             (./Engine/Joypad/R):00143 [2]     6699            lda   #0
     806E             (./Engine/Joypad/R):00144                 @d      equ   *-1
806F B7800A           (./Engine/Joypad/R):00145 [5]     6704            sta   Ctrl_2_Held
8072 39               (./Engine/Joypad/R):00146 [5]     6709            rts
                      (./Engine/Joypad/R):00147                 
                      (C:\Users\bhrou\gi):00269                         INCLUDE "./Engine/ObjectManagement/RunObjects.asm"
                      (./Engine/ObjectMa):00001                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00002                 * RunObjects
                      (./Engine/ObjectMa):00003                 * ------------
                      (./Engine/ObjectMa):00004                 * Subroutine to run objects code
                      (./Engine/ObjectMa):00005                 *
                      (./Engine/ObjectMa):00006                 * input REG : none
                      (./Engine/ObjectMa):00007                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00008                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00009                                                             *; This runs the code of all the objects that are in Object_RAM
                      (./Engine/ObjectMa):00010                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00011                                                             *
                      (./Engine/ObjectMa):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00013                                                             *
                      (./Engine/ObjectMa):00014                                                             *; sub_15F9C: ObjectsLoad:
8073                  (./Engine/ObjectMa):00015                 RunObjects                                  *RunObjects:
                      (./Engine/ObjectMa):00016                                                             *    tst.b   (Teleport_flag).w
                      (./Engine/ObjectMa):00017                                                             *    bne.s   RunObjects_End  ; rts
8073 CE641A           (./Engine/ObjectMa):00018 [3]     6712            ldu   #Object_RAM                   *    lea (Object_RAM).w,a0 ; a0=object
8076 2017             (./Engine/ObjectMa):00019 [3]     6715            bra   am_RunNextObject
                      (./Engine/ObjectMa):00020                                                             *    moveq   #(Dynamic_Object_RAM_End-Object_RAM)/object_size-1,d7 ; run the first $80 objects out of levels
                      (./Engine/ObjectMa):00021                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00022                                                             *    cmpi.b  #GameModeID_Demo,(Game_Mode).w  ; demo mode?
                      (./Engine/ObjectMa):00023                                                             *    beq.s   +   ; if in a level in a demo, branch
                      (./Engine/ObjectMa):00024                                                             *    cmpi.b  #GameModeID_Level,(Game_Mode).w ; regular level mode?
                      (./Engine/ObjectMa):00025                                                             *    bne.s   RunObject ; if not in a level, branch to RunObject
8078                  (./Engine/ObjectMa):00026                 RunObjects_01                               *+
                      (./Engine/ObjectMa):00027                                                             *    move.w  #(Object_RAM_End-Object_RAM)/object_size-1,d7   ; run the first $90 objects in levels
                      (./Engine/ObjectMa):00028                                                             *    tst.w   (Two_player_mode).w
                      (./Engine/ObjectMa):00029                                                             *    bne.s   RunObject ; if in 2 player competition mode, branch to RunObject
                      (./Engine/ObjectMa):00030                                                             *
                      (./Engine/ObjectMa):00031                         ;tst   glb_MainCharacter_Is_Dead     *    cmpi.b  #6,(MainCharacter+routine).w
                      (./Engine/ObjectMa):00032                         ;bne   RunObjectsWhenPlayerIsDead    *    bhs.s   RunObjectsWhenPlayerIsDead ; if dead, branch
                      (./Engine/ObjectMa):00033                                                             *    ; continue straight to RunObject
                      (./Engine/ObjectMa):00034                                                             *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00035                                                             *
                      (./Engine/ObjectMa):00036                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00037                                                             *; This is THE place where each individual object's code gets called from
                      (./Engine/ObjectMa):00038                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00039                                                             *
                      (./Engine/ObjectMa):00040                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00041                                                             *
                      (./Engine/ObjectMa):00042                                                             *; sub_15FCC:
8078                  (./Engine/ObjectMa):00043                 RunObject                                   *RunObject:
8078 E6C4             (./Engine/ObjectMa):00044 [4]     6719            ldb   id,u                          *    move.b  id(a0),d0   ; get the object's ID
807A 2710             (./Engine/ObjectMa):00045 [3]     6722            beq   RunNextObject                 *    beq.s   RunNextObject ; if it's obj00, skip it
                      (./Engine/ObjectMa):00046                 
807C 8E9820           (./Engine/ObjectMa):00047 [3]     6725            ldx   #Obj_Index_Page
807F 3A               (./Engine/ObjectMa):00048 [3]     6728            abx
8080 A684             (./Engine/ObjectMa):00049 [4]     6732            lda   ,x                            ; page memoire
                      (./Engine/ObjectMa):00050                         _SetCartPageA                       ; selection de la page en RAM (0000-3FFF)
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8082 B7E7E6           (    _SetCartPageA):00004 [5]     6737            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8085 58               (./Engine/ObjectMa):00051 [2]     6739            aslb                                *    add.w   d0,d0
                      (./Engine/ObjectMa):00052                                                             *    add.w   d0,d0   ; d0 = object ID * 4
8086 8E9827           (./Engine/ObjectMa):00053 [3]     6742            ldx   #Obj_Index_Address            *    movea.l Obj_Index-4(pc,d0.w),a1 ; load the address of the object's code
8089 3A               (./Engine/ObjectMa):00054 [3]     6745            abx
808A AD94             (./Engine/ObjectMa):00055 [10]    6755            jsr   [,x]                          *    jsr (a1)    ; dynamic call! to one of the the entries in Obj_Index
                      (./Engine/ObjectMa):00056                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00057                                                             *
                      (./Engine/ObjectMa):00058                                                             *; loc_15FDC:
808C                  (./Engine/ObjectMa):00059                 RunNextObject                               *RunNextObject:
808C 33C864           (./Engine/ObjectMa):00060 [5]     6760            leau  next_object,u                 *    lea next_object(a0),a0 ; load 0bj address
808F                  (./Engine/ObjectMa):00061                 am_RunNextObject                            
808F 11836F6E         (./Engine/ObjectMa):00062 [5]     6765            cmpu  #Object_RAM_End               *    dbf d7,RunObject
8093 26E3             (./Engine/ObjectMa):00063 [3]     6768            bne   RunObject                     *; return_15FE4:
8095                  (./Engine/ObjectMa):00064                 RunObjects_End                              *RunObjects_End:
8095 39               (./Engine/ObjectMa):00065 [5]     6773            rts                                 *    rts
                      (./Engine/ObjectMa):00066                                                             *
                      (./Engine/ObjectMa):00067                                                             *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00068                                                             *; this skips certain objects to make enemies and things pause when Sonic dies
                      (./Engine/ObjectMa):00069                                                             *; loc_15FE6:
8096                  (./Engine/ObjectMa):00070                 RunObjectsWhenPlayerIsDead                  *RunObjectsWhenPlayerIsDead:
                      (./Engine/ObjectMa):00071                         ;ldu   #Reserved_Object_RAM
                      (./Engine/ObjectMa):00072                         ;ldx   #Reserved_Object_RAM_End
                      (./Engine/ObjectMa):00073                         ;stx   am_RunNextObject+2            *    moveq   #(Reserved_Object_RAM_End-Reserved_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00074                         ;bsr   RunObject                     *    bsr.s   RunObject   ; run the first $10 objects normally
                      (./Engine/ObjectMa):00075                                                             *    moveq   #(Dynamic_Object_RAM_End-Dynamic_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00076                                                             *    bsr.s   RunObjectDisplayOnly ; all objects in this range are paused      
                      (./Engine/ObjectMa):00077                         ;ldu   #LevelOnly_Object_RAM 
                      (./Engine/ObjectMa):00078                         ;ldx   #LevelOnly_Object_RAM_End
                      (./Engine/ObjectMa):00079                         ;stx   am_RunNextObject+2            *    moveq   #(LevelOnly_Object_RAM_End-LevelOnly_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00080                         ;bsr   RunObject                     *    bra.s   RunObject   ; run the last $10 objects normally
                      (./Engine/ObjectMa):00081                                                             *
                      (./Engine/ObjectMa):00082                         ;ldx   #Object_RAM_End               * repositionne la fin du RunObject avec sa valeur par d�faut
                      (./Engine/ObjectMa):00083                         ;stx   am_RunNextObject+2
                      (./Engine/ObjectMa):00084                         ;rts            
                      (./Engine/ObjectMa):00085                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00086                                                             *
                      (./Engine/ObjectMa):00087                                                             *; sub_15FF2:
                      (./Engine/ObjectMa):00088                                                             *RunObjectDisplayOnly:
                      (./Engine/ObjectMa):00089                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00090                                                             *    move.b  id(a0),d0   ; get the object's ID
                      (./Engine/ObjectMa):00091                                                             *    beq.s   +   ; if it's obj00, skip it
                      (./Engine/ObjectMa):00092                                                             *    tst.b   render_flags(a0)    ; should we render it?
                      (./Engine/ObjectMa):00093                                                             *    bpl.s   +           ; if not, skip it
                      (./Engine/ObjectMa):00094                                                             *    bsr.w   DisplaySprite
                      (./Engine/ObjectMa):00095                                                             *+
                      (./Engine/ObjectMa):00096                                                             *    lea next_object(a0),a0 ; load 0bj address
                      (./Engine/ObjectMa):00097                                                             *    dbf d7,RunObjectDisplayOnly
                      (./Engine/ObjectMa):00098                                                             
                      (./Engine/ObjectMa):00099                                                             *    rts
                      (./Engine/ObjectMa):00100                                                             *; End of function RunObjectDisplayOnly
                      (./Engine/ObjectMa):00101                                                             *
                      (./Engine/ObjectMa):00102                                                             *; ===========================================================================
                      (C:\Users\bhrou\gi):00270                         INCLUDE "./Engine/ObjectManagement/DeleteObject.asm"
                      (./Engine/ObjectMa):00001                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00002                 * DeleteObject
                      (./Engine/ObjectMa):00003                 * ------------
                      (./Engine/ObjectMa):00004                 * Subroutine to delete an object.
                      (./Engine/ObjectMa):00005                 * If the object is rendered as a sprite it will be deleted by EraseSprites
                      (./Engine/ObjectMa):00006                 * routine
                      (./Engine/ObjectMa):00007                 *
                      (./Engine/ObjectMa):00008                 * DeleteObject
                      (./Engine/ObjectMa):00009                 * input REG : [u] object pointer (OST)
                      (./Engine/ObjectMa):00010                 *
                      (./Engine/ObjectMa):00011                 * DeleteObject_x
                      (./Engine/ObjectMa):00012                 * input REG : [x] object pointer (OST)
                      (./Engine/ObjectMa):00013                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00014                 
                      (./Engine/ObjectMa):00015                                                        *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00016                                                        *; Subroutine to delete an object
                      (./Engine/ObjectMa):00017                                                        *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00018                                                        *
                      (./Engine/ObjectMa):00019                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00020                                                        *
                      (./Engine/ObjectMa):00021                                                        *; freeObject:
8096                  (./Engine/ObjectMa):00022                 DeleteObject_x                *DeleteObject:
8096 3456             (./Engine/ObjectMa):00023 [11]    6784            pshs  d,x,u                    *    movea.l a0,a1
8098 3384             (./Engine/ObjectMa):00024 [4]     6788            leau  ,x                       *; sub_164E8:
809A 200A             (./Engine/ObjectMa):00025 [3]     6791            bra   DOB_Start
809C                  (./Engine/ObjectMa):00026                 DeleteObject_return
809C 35D6             (./Engine/ObjectMa):00027 [13]    6804            puls  d,x,u,pc                      ; rts
                      (./Engine/ObjectMa):00028                         
809E                  (./Engine/ObjectMa):00029                 DeleteObject                  *DeleteObject2:
809E 3456             (./Engine/ObjectMa):00030 [11]    6815            pshs  d,x,u
                      (./Engine/ObjectMa):00031                         
80A0 A642             (./Engine/ObjectMa):00032 [5]     6820            lda   render_flags,u
80A2 8440             (./Engine/ObjectMa):00033 [2]     6822            anda  #render_todelete_mask
80A4 26F6             (./Engine/ObjectMa):00034 [3]     6825            bne   DeleteObject_return           ; branch if already registred for deletion        
                      (./Engine/ObjectMa):00035                         
80A6                  (./Engine/ObjectMa):00036                 DOB_Start
80A6 A6C848           (./Engine/ObjectMa):00037 [5]     6830            lda   rsv_prev_render_flags_0,u
80A9 2A27             (./Engine/ObjectMa):00038 [3]     6833            bpl   DOB_RemoveFromDPSB0           ; branch if not onscreen on buffer 0
                      (./Engine/ObjectMa):00039                 
80AB                  (./Engine/ObjectMa):00040                 DOB_ToDeleteFlag0
80AB A642             (./Engine/ObjectMa):00041 [5]     6838            lda   render_flags,u
80AD 8A40             (./Engine/ObjectMa):00042 [2]     6840            ora   #render_todelete_mask
80AF A742             (./Engine/ObjectMa):00043 [5]     6845            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./Engine/ObjectMa):00044                         
80B1                  (./Engine/ObjectMa):00045                 DOB_Unset0        
80B1 BE726E           (./Engine/ObjectMa):00046 [6]     6851            ldx   Lst_Priority_Unset_0          ; add object to unset list on buffer 0
80B4 EF84             (./Engine/ObjectMa):00047 [5]     6856            stu   ,x
80B6 3002             (./Engine/ObjectMa):00048 [5]     6861            leax  2,x
80B8 BF726E           (./Engine/ObjectMa):00049 [6]     6867            stx   Lst_Priority_Unset_0
                      (./Engine/ObjectMa):00050                         
80BB                  (./Engine/ObjectMa):00051                 DOB_TestOnscreen1
80BB A6C85C           (./Engine/ObjectMa):00052 [5]     6872            lda   rsv_prev_render_flags_1,u
80BE 2A54             (./Engine/ObjectMa):00053 [3]     6875            bpl   DOB_RemoveFromDPSB1           ; branch if not onscreen on buffer 1
                      (./Engine/ObjectMa):00054                         
80C0                  (./Engine/ObjectMa):00055                 DOB_ToDeleteFlag1
80C0 A642             (./Engine/ObjectMa):00056 [5]     6880            lda   render_flags,u
80C2 8A40             (./Engine/ObjectMa):00057 [2]     6882            ora   #render_todelete_mask
80C4 A742             (./Engine/ObjectMa):00058 [5]     6887            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./Engine/ObjectMa):00059                         
80C6                  (./Engine/ObjectMa):00060                 DOB_Unset1
80C6 BE72D0           (./Engine/ObjectMa):00061 [6]     6893            ldx   Lst_Priority_Unset_1          ; add object to unset list on buffer 1                       
80C9 EF84             (./Engine/ObjectMa):00062 [5]     6898            stu   ,x
80CB 3002             (./Engine/ObjectMa):00063 [5]     6903            leax  2,x
80CD BF72D0           (./Engine/ObjectMa):00064 [6]     6909            stx   Lst_Priority_Unset_1
80D0 35D6             (./Engine/ObjectMa):00065 [13]    6922            puls  d,x,u,pc                      ; rts
                      (./Engine/ObjectMa):00066                 
80D2                  (./Engine/ObjectMa):00067                 DOB_RemoveFromDPSB0
80D2 ECC836           (./Engine/ObjectMa):00068 [6]     6928            ldd   rsv_priority_prev_obj_0,u     ; remove object from DSP on buffer 0
80D5 2611             (./Engine/ObjectMa):00069 [3]     6931            bne   DOB_ChainPrevB0
                      (./Engine/ObjectMa):00070                         
80D7 A6C835           (./Engine/ObjectMa):00071 [5]     6936            lda   rsv_priority_0,u
80DA 48               (./Engine/ObjectMa):00072 [2]     6938            lsla
80DB 108E724A         (./Engine/ObjectMa):00073 [4]     6942            ldy   #Tbl_Priority_First_Entry_0
80DF 31A6             (./Engine/ObjectMa):00074 [5]     6947            leay  a,y
80E1 ECC838           (./Engine/ObjectMa):00075 [6]     6953            ldd   rsv_priority_next_obj_0,u
80E4 EDA4             (./Engine/ObjectMa):00076 [5]     6958            std   ,y
80E6 200A             (./Engine/ObjectMa):00077 [3]     6961            bra   DOB_CheckPrioNextB0
                      (./Engine/ObjectMa):00078                                 
80E8                  (./Engine/ObjectMa):00079                 DOB_ChainPrevB0
80E8 ECC838           (./Engine/ObjectMa):00080 [6]     6967            ldd   rsv_priority_next_obj_0,u
80EB 10AEC836         (./Engine/ObjectMa):00081 [7]     6974            ldy   rsv_priority_prev_obj_0,u        
80EF EDA838           (./Engine/ObjectMa):00082 [6]     6980            std   rsv_priority_next_obj_0,y        
                      (./Engine/ObjectMa):00083                 
80F2                  (./Engine/ObjectMa):00084                 DOB_CheckPrioNextB0       
80F2 ECC838           (./Engine/ObjectMa):00085 [6]     6986            ldd   rsv_priority_next_obj_0,u
80F5 2611             (./Engine/ObjectMa):00086 [3]     6989            bne   DOB_ChainNextB0
                      (./Engine/ObjectMa):00087                 
80F7 A6C835           (./Engine/ObjectMa):00088 [5]     6994            lda   rsv_priority_0,u
80FA 48               (./Engine/ObjectMa):00089 [2]     6996            lsla
80FB 108E725C         (./Engine/ObjectMa):00090 [4]     7000            ldy   #Tbl_Priority_Last_Entry_0
80FF 31A6             (./Engine/ObjectMa):00091 [5]     7005            leay  a,y
8101 ECC836           (./Engine/ObjectMa):00092 [6]     7011            ldd   rsv_priority_prev_obj_0,u
8104 EDA4             (./Engine/ObjectMa):00093 [5]     7016            std   ,y
8106 20B3             (./Engine/ObjectMa):00094 [3]     7019            bra   DOB_TestOnscreen1
                      (./Engine/ObjectMa):00095                                 
8108                  (./Engine/ObjectMa):00096                 DOB_ChainNextB0
8108 ECC836           (./Engine/ObjectMa):00097 [6]     7025            ldd   rsv_priority_prev_obj_0,u
810B 10AEC838         (./Engine/ObjectMa):00098 [7]     7032            ldy   rsv_priority_next_obj_0,u        
810F EDA836           (./Engine/ObjectMa):00099 [6]     7038            std   rsv_priority_prev_obj_0,y
8112 20A7             (./Engine/ObjectMa):00100 [3]     7041            bra   DOB_TestOnscreen1        
                      (./Engine/ObjectMa):00101                 
8114                  (./Engine/ObjectMa):00102                 DOB_RemoveFromDPSB1
8114 ECC84A           (./Engine/ObjectMa):00103 [6]     7047            ldd   rsv_priority_prev_obj_1,u
8117 2611             (./Engine/ObjectMa):00104 [3]     7050            bne   DOB_ChainPrevB1
                      (./Engine/ObjectMa):00105                         
8119 A6C849           (./Engine/ObjectMa):00106 [5]     7055            lda   rsv_priority_1,u
811C 48               (./Engine/ObjectMa):00107 [2]     7057            lsla
811D 108E72AC         (./Engine/ObjectMa):00108 [4]     7061            ldy   #Tbl_Priority_First_Entry_1
8121 31A6             (./Engine/ObjectMa):00109 [5]     7066            leay  a,y
8123 ECC84C           (./Engine/ObjectMa):00110 [6]     7072            ldd   rsv_priority_next_obj_1,u
8126 EDA4             (./Engine/ObjectMa):00111 [5]     7077            std   ,y
8128 200A             (./Engine/ObjectMa):00112 [3]     7080            bra   DOB_CheckPrioNextB1
                      (./Engine/ObjectMa):00113                                 
812A                  (./Engine/ObjectMa):00114                 DOB_ChainPrevB1
812A ECC84C           (./Engine/ObjectMa):00115 [6]     7086            ldd   rsv_priority_next_obj_1,u
812D 10AEC84A         (./Engine/ObjectMa):00116 [7]     7093            ldy   rsv_priority_prev_obj_1,u        
8131 EDA84C           (./Engine/ObjectMa):00117 [6]     7099            std   rsv_priority_next_obj_1,y        
                      (./Engine/ObjectMa):00118                 
8134                  (./Engine/ObjectMa):00119                 DOB_CheckPrioNextB1       
8134 ECC84C           (./Engine/ObjectMa):00120 [6]     7105            ldd   rsv_priority_next_obj_1,u
8137 2619             (./Engine/ObjectMa):00121 [3]     7108            bne   DOB_ChainNextB1
                      (./Engine/ObjectMa):00122                 
8139 A6C849           (./Engine/ObjectMa):00123 [5]     7113            lda   rsv_priority_1,u
813C 48               (./Engine/ObjectMa):00124 [2]     7115            lsla
813D 108E72BE         (./Engine/ObjectMa):00125 [4]     7119            ldy   #Tbl_Priority_Last_Entry_1
8141 31A6             (./Engine/ObjectMa):00126 [5]     7124            leay  a,y
8143 ECC84A           (./Engine/ObjectMa):00127 [6]     7130            ldd   rsv_priority_prev_obj_1,u
8146 EDA4             (./Engine/ObjectMa):00128 [5]     7135            std   ,y
8148 A6C848           (./Engine/ObjectMa):00129 [5]     7140            lda   rsv_prev_render_flags_0,u
814B 2B03             (./Engine/ObjectMa):00130 [3]     7143            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
814D BD8166           (./Engine/ObjectMa):00131 [8]     7151            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
8150                  (./Engine/ObjectMa):00132                 DOB_rts                                *
8150 35D6             (./Engine/ObjectMa):00133 [13]    7164            puls  d,x,u,pc        
                      (./Engine/ObjectMa):00134                                 
8152                  (./Engine/ObjectMa):00135                 DOB_ChainNextB1
8152 ECC84A           (./Engine/ObjectMa):00136 [6]     7170            ldd   rsv_priority_prev_obj_1,u
8155 10AEC84C         (./Engine/ObjectMa):00137 [7]     7177            ldy   rsv_priority_next_obj_1,u        
8159 EDA84A           (./Engine/ObjectMa):00138 [6]     7183            std   rsv_priority_prev_obj_1,y
815C A6C848           (./Engine/ObjectMa):00139 [5]     7188            lda   rsv_prev_render_flags_0,u
815F 2BEF             (./Engine/ObjectMa):00140 [3]     7191            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
8161 BD8166           (./Engine/ObjectMa):00141 [8]     7199            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
8164 35D6             (./Engine/ObjectMa):00142 [13]    7212            puls  d,x,u,pc        
                      (./Engine/ObjectMa):00143                 
                      (./Engine/ObjectMa):00144                                                        *    moveq   #0,d1
                      (./Engine/ObjectMa):00145                                                        *
                      (./Engine/ObjectMa):00146                                                        *    moveq   #bytesToLcnt(next_object),d0 ; we want to clear up to the next object
                      (./Engine/ObjectMa):00147                                                        *    ; delete the object by setting all of its bytes to 0
                      (./Engine/ObjectMa):00148                                                        *-   move.l  d1,(a1)+
                      (./Engine/ObjectMa):00149                                                        *    dbf d0,-
                      (./Engine/ObjectMa):00150                                                        *    if object_size&3
                      (./Engine/ObjectMa):00151                                                        *    move.w  d1,(a1)+
                      (./Engine/ObjectMa):00152                                                        *    endif
                      (./Engine/ObjectMa):00153                                                        *
                      (./Engine/ObjectMa):00154                                                        *    rts
                      (./Engine/ObjectMa):00155                                                        *; End of function DeleteObject2                                            
                      (C:\Users\bhrou\gi):00271                         INCLUDE "./engine/object-management/clear-obj-107.asm"  
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * ClearObj107
                      (./engine/object-m):00003                 * -----------
                      (./engine/object-m):00004                 * Subroutine to clear an object data in OST and ext_variables
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * input REG : [u] pointer on objet (OST)
                      (./engine/object-m):00007                 * clear REG : [d,y]
                      (./engine/object-m):00008                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00009                 
8166                  (./engine/object-m):00010                 ClearObj
8166 3476             (./engine/object-m):00011 [13]    7225            pshs  d,x,y,u
8168 10FF8195         (./engine/object-m):00012 [7]     7232            sts   CLO_1+2
816C 32C86B           (./engine/object-m):00013 [5]     7237            leas  107,u        
816F CC0000           (./engine/object-m):00014 [3]     7240            ldd   #$0000
8172 8E0000           (./engine/object-m):00015 [3]     7243            ldx   #$0000
8175 3184             (./engine/object-m):00016 [4]     7247            leay  ,x
8177 3384             (./engine/object-m):00017 [4]     7251            leau  ,x
8179 3476             (./engine/object-m):00018 [13]    7264            pshs  d,x,y,u
817B 3476             (./engine/object-m):00019 [13]    7277            pshs  d,x,y,u
817D 3476             (./engine/object-m):00020 [13]    7290            pshs  d,x,y,u
817F 3476             (./engine/object-m):00021 [13]    7303            pshs  d,x,y,u
8181 3476             (./engine/object-m):00022 [13]    7316            pshs  d,x,y,u
8183 3476             (./engine/object-m):00023 [13]    7329            pshs  d,x,y,u
8185 3476             (./engine/object-m):00024 [13]    7342            pshs  d,x,y,u
8187 3476             (./engine/object-m):00025 [13]    7355            pshs  d,x,y,u
8189 3476             (./engine/object-m):00026 [13]    7368            pshs  d,x,y,u
818B 3476             (./engine/object-m):00027 [13]    7381            pshs  d,x,y,u
818D 3476             (./engine/object-m):00028 [13]    7394            pshs  d,x,y,u
818F 3402             (./engine/object-m):00029 [6]     7400            pshs  a
8191 33E4             (./engine/object-m):00030 [4]     7404            leau  ,s
8193                  (./engine/object-m):00031                 CLO_1        
8193 10CE0000         (./engine/object-m):00032 [4]     7408            lds   #$0000        ; start of object should not be written with S as an index because of IRQ        
8197 3636             (./engine/object-m):00033 [11]    7419            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
8199 3636             (./engine/object-m):00034 [11]    7430            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine  (here 18 bytes of margin)
819B 3636             (./engine/object-m):00035 [11]    7441            pshu  d,x,y         ; DEPENDENCY on object_size definition
819D                  (./engine/object-m):00036                 CLO_2        
819D 35F6             (./engine/object-m):00037 [15]    7456            puls  d,x,y,u,pc
                      (C:\Users\bhrou\gi):00272                         INCLUDE "./Engine/Ram/ClearDataMemory.asm"
                      (./Engine/Ram/Clea):00001                 ********************************************************************************
                      (./Engine/Ram/Clea):00002                 * Clear memory in data area
                      (./Engine/Ram/Clea):00003                 ********************************************************************************
                      (./Engine/Ram/Clea):00004                 
819F                  (./Engine/Ram/Clea):00005                 ClearDataMem 
819F 3448             (./Engine/Ram/Clea):00006 [8]     7464            pshs  u,dp
81A1 10FF81CF         (./Engine/Ram/Clea):00007 [7]     7471            sts   ClearDataMem_3+2
81A5 10CEE000         (./Engine/Ram/Clea):00008 [4]     7475            lds   #$E000
81A9 3384             (./Engine/Ram/Clea):00009 [4]     7479            leau  ,x
81AB 3184             (./Engine/Ram/Clea):00010 [4]     7483            leay  ,x
81AD 1F10             (./Engine/Ram/Clea):00011 [6]     7489            tfr   x,d
81AF 1F8B             (./Engine/Ram/Clea):00012 [6]     7495            tfr   a,dp
81B1                  (./Engine/Ram/Clea):00013                 ClearDataMem_2
81B1 347E             (./Engine/Ram/Clea):00014 [14]    7509            pshs  u,y,x,dp,b,a
81B3 347E             (./Engine/Ram/Clea):00015 [14]    7523            pshs  u,y,x,dp,b,a
81B5 347E             (./Engine/Ram/Clea):00016 [14]    7537            pshs  u,y,x,dp,b,a
81B7 347E             (./Engine/Ram/Clea):00017 [14]    7551            pshs  u,y,x,dp,b,a
81B9 347E             (./Engine/Ram/Clea):00018 [14]    7565            pshs  u,y,x,dp,b,a
81BB 347E             (./Engine/Ram/Clea):00019 [14]    7579            pshs  u,y,x,dp,b,a
81BD 347E             (./Engine/Ram/Clea):00020 [14]    7593            pshs  u,y,x,dp,b,a
81BF 347E             (./Engine/Ram/Clea):00021 [14]    7607            pshs  u,y,x,dp,b,a
81C1 347E             (./Engine/Ram/Clea):00022 [14]    7621            pshs  u,y,x,dp,b,a
81C3 3478             (./Engine/Ram/Clea):00023 [12]    7633            pshs  u,y,x,dp
81C5 118CA010         (./Engine/Ram/Clea):00024 [5]     7638            cmps  #$A010                        
81C9 26E6             (./Engine/Ram/Clea):00025 [3]     7641            bne   ClearDataMem_2
81CB 33E4             (./Engine/Ram/Clea):00026 [4]     7645            leau  ,s        
81CD                  (./Engine/Ram/Clea):00027                 ClearDataMem_3        
81CD 10CE0000         (./Engine/Ram/Clea):00028 [4]     7649            lds   #$0000        ; start of memory should not be written with S as an index because of IRQ        
81D1 3636             (./Engine/Ram/Clea):00029 [11]    7660            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
81D3 3636             (./Engine/Ram/Clea):00030 [11]    7671            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine (here 16 bytes of margin)
81D5 3616             (./Engine/Ram/Clea):00031 [9]     7680            pshu  d,x
81D7 35C8             (./Engine/Ram/Clea):00032 [10]    7690            puls  dp,u,pc
                      (C:\Users\bhrou\gi):00273                         INCLUDE "./Engine/Irq/IrqSmpsObj.asm"      
                      (./Engine/Irq/IrqS):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Irq/IrqS):00002                 * IrqSmps
                      (./Engine/Irq/IrqS):00003                 * -------
                      (./Engine/Irq/IrqS):00004                 * IRQ Subroutine to play sound with SN76489/YM2413
                      (./Engine/Irq/IrqS):00005                 *
                      (./Engine/Irq/IrqS):00006                 * input REG : [dp] with value E7 (from Monitor ROM)
                      (./Engine/Irq/IrqS):00007                 * reset REG : none
                      (./Engine/Irq/IrqS):00008                 *
                      (./Engine/Irq/IrqS):00009                 * IrqOn
                      (./Engine/Irq/IrqS):00010                 * reset REG : [a]
                      (./Engine/Irq/IrqS):00011                 *
                      (./Engine/Irq/IrqS):00012                 * IrqOff
                      (./Engine/Irq/IrqS):00013                 * reset REG : [a]
                      (./Engine/Irq/IrqS):00014                 *
                      (./Engine/Irq/IrqS):00015                 * IrqSync
                      (./Engine/Irq/IrqS):00016                 * input REG : [a] screen line (0-199)
                      (./Engine/Irq/IrqS):00017                 *             [x] timer value
                      (./Engine/Irq/IrqS):00018                 * reset REG : [d]
                      (./Engine/Irq/IrqS):00019                 * ---------------------------------------------------------------------------
                      (./Engine/Irq/IrqS):00020                 
     6027             (./Engine/Irq/IrqS):00021                 irq_routine       equ $6027 
     E7C5             (./Engine/Irq/IrqS):00022                 irq_timer_ctrl    equ $E7C5 
     E7C6             (./Engine/Irq/IrqS):00023                 irq_timer         equ $E7C6
     4DFF             (./Engine/Irq/IrqS):00024                 irq_one_frame     equ 312*64-1               ; one frame timer (lines*cycles_per_lines-1), timer launch at -1
                      (./Engine/Irq/IrqS):00025                 
                      (./Engine/Irq/IrqS):00026                 SmpsVar STRUCT
0000s                 (./Engine/Irq/IrqS):00027                 SFXPriorityVal                 rmb   1        
0001s                 (./Engine/Irq/IrqS):00028                 TempoTimeout                   rmb   1        
0002s                 (./Engine/Irq/IrqS):00029                 CurrentTempo                   rmb   1                ; Stores current tempo value here
0003s                 (./Engine/Irq/IrqS):00030                 StopMusic                      rmb   1                ; Set to 7Fh to pause music, set to 80h to unpause. Otherwise 00h
0004s                 (./Engine/Irq/IrqS):00031                 FadeOutCounter                 rmb   1        
0005s                 (./Engine/Irq/IrqS):00032                 FadeOutDelay                   rmb   1        
0006s                 (./Engine/Irq/IrqS):00033                 QueueToPlay                    rmb   1                ; if NOT set to 80h, means new index was requested by 68K
0007s                 (./Engine/Irq/IrqS):00034                 SFXToPlay                      rmb   1                ; When Genesis wants to play "normal" sound, it writes it here
0008s                 (./Engine/Irq/IrqS):00035                 VoiceTblPtr                    rmb   2                ; address of the voices
000As                 (./Engine/Irq/IrqS):00036                 SFXVoiceTblPtr                 rmb   2                ; address of the SFX voices
000Cs                 (./Engine/Irq/IrqS):00037                 FadeInFlag                     rmb   1        
000Ds                 (./Engine/Irq/IrqS):00038                 FadeInDelay                    rmb   1        
000Es                 (./Engine/Irq/IrqS):00039                 FadeInCounter                  rmb   1        
000Fs                 (./Engine/Irq/IrqS):00040                 1upPlaying                     rmb   1        
0010s                 (./Engine/Irq/IrqS):00041                 TempoMod                       rmb   1        
0011s                 (./Engine/Irq/IrqS):00042                 TempoTurbo                     rmb   1                ; Stores the tempo if speed shoes are acquired (or 7Bh is played anywho)
0012s                 (./Engine/Irq/IrqS):00043                 SpeedUpFlag                    rmb   1        
0013s                 (./Engine/Irq/IrqS):00044                 DACEnabled                     rmb   1                
0014s                 (./Engine/Irq/IrqS):00045                 60HzData                       rmb   1                ; 1: play 60hz track at 50hz, 0: do not skip frames
0015s                 (./Engine/Irq/IrqS):00046                  ENDSTRUCT
                      (./Engine/Irq/IrqS):00047                 
81D9                  (./Engine/Irq/IrqS):00048                 SmpsStructStart
81D9                  (./Engine/Irq/IrqS):00049                 Smps          SmpsVar
                      (./Engine/Irq/IrqS):00050                         org   SmpsStructStart                
81D9 0000000000000000 (./Engine/Irq/IrqS):00051                         fill  0,sizeof{SmpsVar}
     0000000000000000
     0000000000
                      (./Engine/Irq/IrqS):00052                        
81EE                  (./Engine/Irq/IrqS):00053                 IrqSet50Hz
81EE C642             (./Engine/Irq/IrqS):00054 [2]     7692            ldb   #$42
81F0 F7E7C5           (./Engine/Irq/IrqS):00055 [5]     7697            stb   irq_timer_ctrl                     ; timer precision x8
81F3 CC823A           (./Engine/Irq/IrqS):00056 [3]     7700            ldd   #IrqSmps
81F6 FD6027           (./Engine/Irq/IrqS):00057 [6]     7706            std   irq_routine
                      (./Engine/Irq/IrqS):00058                 
81F9 86C7             (./Engine/Irq/IrqS):00059 [2]     7708            lda   #199                               ; screen line to sync
81FB 8E4DFF           (./Engine/Irq/IrqS):00060 [3]     7711            ldx   #irq_one_frame                     ; on every frame
81FE BD821B           (./Engine/Irq/IrqS):00061 [8]     7719            jsr   IrqSync
8201 BD8205           (./Engine/Irq/IrqS):00062 [8]     7727            jsr   IrqOn 
8204 39               (./Engine/Irq/IrqS):00063 [5]     7732            rts
                      (./Engine/Irq/IrqS):00064                        
8205                  (./Engine/Irq/IrqS):00065                 IrqOn         
8205 B66019           (./Engine/Irq/IrqS):00066 [5]     7737            lda   $6019                           
8208 8A20             (./Engine/Irq/IrqS):00067 [2]     7739            ora   #$20
820A B76019           (./Engine/Irq/IrqS):00068 [5]     7744            sta   $6019                                   ; STATUS register
820D 1CEF             (./Engine/Irq/IrqS):00069 [3]     7747            andcc #$EF                                    ; tell 6809 to activate irq
820F 39               (./Engine/Irq/IrqS):00070 [5]     7752            rts
                      (./Engine/Irq/IrqS):00071                         
8210                  (./Engine/Irq/IrqS):00072                 IrqOff 
8210 B66019           (./Engine/Irq/IrqS):00073 [5]     7757            lda   $6019                           
8213 84DF             (./Engine/Irq/IrqS):00074 [2]     7759            anda  #$DF
8215 B76019           (./Engine/Irq/IrqS):00075 [5]     7764            sta   $6019                                   ; STATUS register
8218 1A10             (./Engine/Irq/IrqS):00076 [3]     7767            orcc  #$10                                    ; tell 6809 to activate irq
821A 39               (./Engine/Irq/IrqS):00077 [5]     7772            rts
                      (./Engine/Irq/IrqS):00078                         
821B                  (./Engine/Irq/IrqS):00079                 IrqSync 
821B C642             (./Engine/Irq/IrqS):00080 [2]     7774            ldb   #$42
821D F7E7C5           (./Engine/Irq/IrqS):00081 [5]     7779            stb   irq_timer_ctrl
                      (./Engine/Irq/IrqS):00082                         
8220 C608             (./Engine/Irq/IrqS):00083 [2]     7781            ldb   #8                                      ; ligne * 64 (cycles par ligne) / 8 (nb cycles boucle tempo)
8222 3D               (./Engine/Irq/IrqS):00084 [11]    7792            mul
8223 1F02             (./Engine/Irq/IrqS):00085 [6]     7798            tfr   d,y
8225 31A8E0           (./Engine/Irq/IrqS):00086 [5]     7803            leay  -32,y                                   ; manual adjustment
                      (./Engine/Irq/IrqS):00087                 
8228                  (./Engine/Irq/IrqS):00088                 IrqSync_1
8228 7DE7E7           (./Engine/Irq/IrqS):00089 [7]     7810            tst   $E7E7                                   ;
822B 2BFB             (./Engine/Irq/IrqS):00090 [3]     7813            bmi   IrqSync_1                               ; while spot is in a visible screen line        
822D                  (./Engine/Irq/IrqS):00091                 IrqSync_2
822D 7DE7E7           (./Engine/Irq/IrqS):00092 [7]     7820            tst   $E7E7                                   ;
8230 2AFB             (./Engine/Irq/IrqS):00093 [3]     7823            bpl   IrqSync_2                               ; while spot is not in a visible screen line
8232                  (./Engine/Irq/IrqS):00094                 IrqSync_3
8232 313F             (./Engine/Irq/IrqS):00095 [5]     7828            leay  -1,y                                    ;
8234 26FC             (./Engine/Irq/IrqS):00096 [3]     7831            bne   IrqSync_3                               ; wait until desired line
                      (./Engine/Irq/IrqS):00097                        
8236 BFE7C6           (./Engine/Irq/IrqS):00098 [6]     7837            stx   irq_timer                               ; spot is at the end of desired line
8239 39               (./Engine/Irq/IrqS):00099 [5]     7842            rts     
                      (./Engine/Irq/IrqS):00100                 
823A                  (./Engine/Irq/IrqS):00101                 IrqSmps 
823A 10FF828A         (./Engine/Irq/IrqS):00102 [7]     7849            sts   @bcks                                   ; backup system stack
823E 10CE82AF         (./Engine/Irq/IrqS):00103 [4]     7853            lds   #IRQSysStack                            ; set tmp system stack for IRQ 
                      (./Engine/Irq/IrqS):00104                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
8242 B6E7E6           (    _GetCartPageA):00004 [5]     7858            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
8245 B78284           (./Engine/Irq/IrqS):00105 [5]     7863            sta   IrqSmps_end+1                           ; backup data page
8248 FC7039           (./Engine/Irq/IrqS):00106 [6]     7869            ldd   Vint_runcount
824B C30001           (./Engine/Irq/IrqS):00107 [4]     7873            addd  #1
824E FD7039           (./Engine/Irq/IrqS):00108 [6]     7879            std   Vint_runcount
8251                  (./Engine/Irq/IrqS):00109                 PaletteCycling
8251 B682AF           (./Engine/Irq/IrqS):00110 [5]     7884            lda   glb_pal_elapsed_frames
8254 4C               (./Engine/Irq/IrqS):00111 [2]     7886            inca
8255 B782AF           (./Engine/Irq/IrqS):00112 [5]     7891            sta   glb_pal_elapsed_frames
8258 8108             (./Engine/Irq/IrqS):00113 [2]     7893            cmpa  #8
825A 2F17             (./Engine/Irq/IrqS):00114 [3]     7896            ble   @a        
825C 8600             (./Engine/Irq/IrqS):00115 [2]     7898            lda   #0
825E B782AF           (./Engine/Irq/IrqS):00116 [5]     7903            sta   glb_pal_elapsed_frames
8261 B782B0           (./Engine/Irq/IrqS):00117 [5]     7908            sta   Refresh_palette
8264 BE82B1           (./Engine/Irq/IrqS):00118 [6]     7914            ldx   Cur_palette
8267 EE04             (./Engine/Irq/IrqS):00119 [6]     7920            ldu   4,x
8269 EC02             (./Engine/Irq/IrqS):00120 [6]     7926            ldd   2,x
826B ED04             (./Engine/Irq/IrqS):00121 [6]     7932            std   4,x
826D EC84             (./Engine/Irq/IrqS):00122 [5]     7937            ldd   ,x
826F ED02             (./Engine/Irq/IrqS):00123 [6]     7943            std   2,x
8271 EF84             (./Engine/Irq/IrqS):00124 [5]     7948            stu   ,x
8273                  (./Engine/Irq/IrqS):00125                 @a
8273 BD8313           (./Engine/Irq/IrqS):00126 [8]     7956            jsr   UpdatePalette
                      (./Engine/Irq/IrqS):00127                         _RunObjectRoutine ObjID_Smps,#4               ; MusicFrame
                      (_RunObjectRoutine):00001                         _MountObject ObjID_Smps
8276 B69825           (     _MountObject):00001 [5]     7961            lda   Obj_Index_Page+ObjID_Smps
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8279 B7E7E6           (    _SetCartPageA):00004 [5]     7966            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
827C BE9831           (     _MountObject):00003 [6]     7972            ldx   Obj_Index_Address+2*ObjID_Smps
827F 8604             (_RunObjectRoutine):00002 [2]     7974            lda   #4        
8281 AD84             (_RunObjectRoutine):00003 [7]     7981            jsr   ,x
8283                  (./Engine/Irq/IrqS):00128                 IrqSmps_end        
8283 8600             (./Engine/Irq/IrqS):00129 [2]     7983            lda   #$00                                    ; (dynamic)
                      (./Engine/Irq/IrqS):00130                         _SetCartPageA                                 ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8285 B7E7E6           (    _SetCartPageA):00004 [5]     7988            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8288 10CE0000         (./Engine/Irq/IrqS):00131 [4]     7992            lds   #0                                      ; (dynamic) restore system stack   
     828A             (./Engine/Irq/IrqS):00132                 @bcks   equ   *-2
828C 7EE830           (./Engine/Irq/IrqS):00133 [4]     7996            jmp   $E830                                   ; return to caller
                      (./Engine/Irq/IrqS):00134                 
                      (./Engine/Irq/IrqS):00135                 ; This space allow the use of system stack inside IRQ calls
                      (./Engine/Irq/IrqS):00136                 ; otherwise the writes in sys stack will erase data when S is in use
                      (./Engine/Irq/IrqS):00137                 ; (outside of IRQ) for another task than sys stack, ex: stack blast copy 
828F 0000000000000000 (./Engine/Irq/IrqS):00138                               fill  0,32
     0000000000000000
     0000000000000000
     0000000000000000
82AF                  (./Engine/Irq/IrqS):00139                 IRQSysStack
                      (./Engine/Irq/IrqS):00140                 
82AF 00               (./Engine/Irq/IrqS):00141                 glb_pal_elapsed_frames fcb 0
                      (./Engine/Irq/IrqS):00142                         INCLUDE "./Engine/Palette/UpdatePalette.asm"
                      (./Engine/Palette/):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Palette/):00002                 * UpdatePalette
                      (./Engine/Palette/):00003                 * -------------
                      (./Engine/Palette/):00004                 * Subroutine to update palette
                      (./Engine/Palette/):00005                 * should be called just after WaitVBL
                      (./Engine/Palette/):00006                 *
                      (./Engine/Palette/):00007                 * input REG : none
                      (./Engine/Palette/):00008                 * reset REG : [d] [x] [y]
                      (./Engine/Palette/):00009                 * ---------------------------------------------------------------------------
                      (./Engine/Palette/):00010                 
82B0 FF               (./Engine/Palette/):00011                 Refresh_palette fcb   $FF            
82B1 82B3             (./Engine/Palette/):00012                 Cur_palette     fdb   Dyn_palette    
82B3 0000000000000000 (./Engine/Palette/):00013                 Dyn_palette     fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
82D3 0000000000000000 (./Engine/Palette/):00014                 Black_palette   fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
82F3 FF0F             (./Engine/Palette/):00015                 White_palette   fdb   $ff0f          
82F5 FF0F             (./Engine/Palette/):00016                                 fdb   $ff0f
82F7 FF0F             (./Engine/Palette/):00017                                 fdb   $ff0f
82F9 FF0F             (./Engine/Palette/):00018                                 fdb   $ff0f
82FB FF0F             (./Engine/Palette/):00019                                 fdb   $ff0f
82FD FF0F             (./Engine/Palette/):00020                                 fdb   $ff0f
82FF FF0F             (./Engine/Palette/):00021                                 fdb   $ff0f
8301 FF0F             (./Engine/Palette/):00022                                 fdb   $ff0f
8303 FF0F             (./Engine/Palette/):00023                                 fdb   $ff0f               
8305 FF0F             (./Engine/Palette/):00024                                 fdb   $ff0f
8307 FF0F             (./Engine/Palette/):00025                                 fdb   $ff0f
8309 FF0F             (./Engine/Palette/):00026                                 fdb   $ff0f
830B FF0F             (./Engine/Palette/):00027                                 fdb   $ff0f
830D FF0F             (./Engine/Palette/):00028                                 fdb   $ff0f
830F FF0F             (./Engine/Palette/):00029                                 fdb   $ff0f
8311 FF0F             (./Engine/Palette/):00030                                 fdb   $ff0f
                      (./Engine/Palette/):00031                 
8313                  (./Engine/Palette/):00032                 UpdatePalette 
8313 7D82B0           (./Engine/Palette/):00033 [7]     8003            tst   Refresh_palette
8316 2701             (./Engine/Palette/):00034 [3]     8006            beq   @a
8318 39               (./Engine/Palette/):00035 [5]     8011            rts
8319 3408             (./Engine/Palette/):00036 [6]     8017    @a      pshs  dp        
831B 108E0195         (./Engine/Palette/):00037 [4]     8021            ldy   #0405                    * 3328 (52 lignes) - 88 (cycles apres VBL)
831F                  (./Engine/Palette/):00038                 UPP_Tempo        
831F 313F             (./Engine/Palette/):00039 [5]     8026            leay  -1,y
8321 26FC             (./Engine/Palette/):00040 [3]     8029            bne   UPP_Tempo                * tempo pour etre dans la bordure invisible
8323 C6E7             (./Engine/Palette/):00041 [2]     8031            ldb   #$E7
8325 1F9B             (./Engine/Palette/):00042 [6]     8037            tfr   b,dp        
8327 BE82B1           (./Engine/Palette/):00043 [6]     8043            ldx   Cur_palette
832A 0FDB             (./Engine/Palette/):00044 [6]     8049            clr   <$DB                     * indice couleur a 0
832C 108E0010         (./Engine/Palette/):00045 [4]     8053            ldy   #$0010                   * init cpt
8330                  (./Engine/Palette/):00046                 UPP_SetColor
8330 EC81             (./Engine/Palette/):00047 [8]     8061            ldd   ,x++                     * chargement de la couleur et increment du poiteur x
8332 97DA             (./Engine/Palette/):00048 [4]     8065            sta   <$DA                     * set de la couleur Vert et Rouge
8334 D7DA             (./Engine/Palette/):00049 [4]     8069            stb   <$DA                     * set de la couleur Bleu
8336 313F             (./Engine/Palette/):00050 [5]     8074            leay  -1,y
8338 26F6             (./Engine/Palette/):00051 [3]     8077            bne   UPP_SetColor             * on reboucle si fin de liste pas atteinte
833A 7382B0           (./Engine/Palette/):00052 [7]     8084            com   Refresh_palette          * update flag, next run this routine will be ignored if no pal update is requested
833D                  (./Engine/Palette/):00053                 UPP_return
833D 3588             (./Engine/Palette/):00054 [8]     8092            puls dp,pc
                      (./Engine/Palette/):00055                 
                      (./Engine/Palette/):00056                         
                      (./Engine/Palette/):00057                         
                      (C:\Users\bhrou\gi):00274                         INCLUDE "./Engine/Graphics/Tilemap/TilemapBuffer.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 *
                      (./Engine/Graphics):00003                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00004                 
                      (./Engine/Graphics):00005                         INCLUDE "./Engine/Graphics/Tilemap/DataTypes/map16bits.equ"
                      (./Engine/Graphics):00001                 ; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 ; DataType Offsets for tile layer
                      (./Engine/Graphics):00003                 ; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00004                 
     0000             (./Engine/Graphics):00005                 submap_camera_x_min equ   0  ; w - camera position limit
     0002             (./Engine/Graphics):00006                 submap_camera_y_min equ   2  ; w - camera position limit
     0004             (./Engine/Graphics):00007                 submap_camera_x_max equ   4  ; w - camera position limit
     0006             (./Engine/Graphics):00008                 submap_camera_y_max equ   6  ; w - camera position limit   
     0008             (./Engine/Graphics):00009                 layer_map_width     equ   8  ; b - width (byte) nb of tiles in this layer map rows
     0009             (./Engine/Graphics):00010                 layer_map_height    equ   9  ; b - height (byte) nb of tiles in this layer map columns
     000A             (./Engine/Graphics):00011                 layer_map           equ   10 ; w->[b] map made of 64x128 tiles (1 byte index)
     000C             (./Engine/Graphics):00012                 layer_chunk0        equ   12 ; w->[w] index to chunk definition (subset of 8x8 tiles, 2 bytes index to tile) chunk id 0-127
     000E             (./Engine/Graphics):00013                 layer_chunk1        equ   14 ; w->[w] index to chunk definition (subset of 8x8 tiles, 2 bytes index to tile) chunk id 128-255
     0010             (./Engine/Graphics):00014                 layer_tiles         equ   16 ; w->[bw] index to tile index (page and adress for each tiles, 3 bytes index)
     0012             (./Engine/Graphics):00015                 layer_mul_ref       equ   18 ; [w] - table of precalculated values for y position in map
     9F               (./Engine/Graphics):00006                         SETDP $9F
                      (./Engine/Graphics):00007                 
                      (./Engine/Graphics):00008                 ; data structure for current loaded map
                      (./Engine/Graphics):00009                 ; -------------------------------------
833F 00               (./Engine/Graphics):00010                 glb_map_pge           fcb   0
8340 0000             (./Engine/Graphics):00011                 glb_map_adr           fdb   0
8342 00               (./Engine/Graphics):00012                 glb_map_chunk_pge     fcb   0 ; map data to chunk tiles (8x8 tiles group)
8343 0000             (./Engine/Graphics):00013                 glb_map_chunk_adr     fdb   0 ; map data to chunk tiles (8x8 tiles group)
8345 00               (./Engine/Graphics):00014                 glb_map_defchunk0_pge fcb   0 ; chunk data to tiles (8x16 px)
8346 0000             (./Engine/Graphics):00015                 glb_map_defchunk0_adr fdb   0 ; chunk data to tiles (8x16 px)
8348 00               (./Engine/Graphics):00016                 glb_map_defchunk1_pge fcb   0 ; chunk data to tiles (8x16 px)
8349 0000             (./Engine/Graphics):00017                 glb_map_defchunk1_adr fdb   0 ; chunk data to tiles (8x16 px)
834B 00               (./Engine/Graphics):00018                 glb_map_tiles_pge     fcb   0 ; tile index
834C 0000             (./Engine/Graphics):00019                 glb_map_tiles_adr     fdb   0 ; tile index
834E 00               (./Engine/Graphics):00020                 glb_map_width         fcb   0
                      (./Engine/Graphics):00021                 
                      (./Engine/Graphics):00022                 ; tmp variables
     9F00             (./Engine/Graphics):00023                 h_tl                  equ   glb_tmp_var    ; nb of full sized (middle) horizontal chunks
     9F01             (./Engine/Graphics):00024                 h_tl_bck              equ   glb_tmp_var+1
     9F02             (./Engine/Graphics):00025                 v_tl                  equ   glb_tmp_var+2  ; nb of full sized (middle) vertical chunks
     9F03             (./Engine/Graphics):00026                 c_h_tl                equ   glb_tmp_var+3  ; variable that stores current left, middle or right width of chunks
     9F04             (./Engine/Graphics):00027                 l_h_tl                equ   glb_tmp_var+4 
     9F05             (./Engine/Graphics):00028                 r_h_tl                equ   glb_tmp_var+5 
     9F06             (./Engine/Graphics):00029                 r_h_tl_bck            equ   glb_tmp_var+6 
     9F07             (./Engine/Graphics):00030                 c_v_tl                equ   glb_tmp_var+7  ; variable that stores current up, middle or bottom height of chunks
     9F08             (./Engine/Graphics):00031                 u_v_tl                equ   glb_tmp_var+8 
     9F09             (./Engine/Graphics):00032                 b_v_tl                equ   glb_tmp_var+9 
     9F0A             (./Engine/Graphics):00033                 c_h_tl_bck            equ   glb_tmp_var+10 ; backup value of horizontal width of chunks
     9F0B             (./Engine/Graphics):00034                 c_v_tl_bck            equ   glb_tmp_var+11 ; backup value of vertical height of chunks
     9F0C             (./Engine/Graphics):00035                 cur_c                 equ   glb_tmp_var+12 ; current chunk id
     9F0D             (./Engine/Graphics):00036                 x_off                 equ   glb_tmp_var+13 ; x start position in top left chunk
     9F0F             (./Engine/Graphics):00037                 y_off                 equ   glb_tmp_var+15 ; y start position in top left chunk
     9F11             (./Engine/Graphics):00038                 b_loc                 equ   glb_tmp_var+17 ; location in buffer
     9F13             (./Engine/Graphics):00039                 tmb_x                 equ   glb_tmp_var+19
     9F15             (./Engine/Graphics):00040                 tmb_y                 equ   glb_tmp_var+21
     9F17             (./Engine/Graphics):00041                 DBT_lcpt              equ   glb_tmp_var+23
     9F18             (./Engine/Graphics):00042                 DBT_ccpt              equ   glb_tmp_var+24
                      (./Engine/Graphics):00043                 
                      (./Engine/Graphics):00044                 ; persistant variables
834F 0000             (./Engine/Graphics):00045                 tmb_old_camera_x      fdb   0 ; last camera position (x axis)
8351 0000             (./Engine/Graphics):00046                 tmb_old_camera_y      fdb   0 ; last camera position (y axis)
                      (./Engine/Graphics):00047                 
     0012             (./Engine/Graphics):00048                 tmb_vp_h_tiles        equ   18 ; viewport tiles on x axis
     000B             (./Engine/Graphics):00049                 tmb_vp_v_tiles        equ   11 ; viewport tiles on y axis
     0090             (./Engine/Graphics):00050                 tmb_vp_h_px           equ   tmb_vp_h_tiles*8
     00B0             (./Engine/Graphics):00051                 tmb_vp_v_px           equ   tmb_vp_v_tiles*16
                      (./Engine/Graphics):00052                 
8353                  (./Engine/Graphics):00053                 InitTileBuffer
8353 DCF3             (./Engine/Graphics):00054 [5]     8097            ldd   <glb_camera_x_pos
8355 C30090           (./Engine/Graphics):00055 [4]     8101            addd  #tmb_vp_h_px
8358 FD834F           (./Engine/Graphics):00056 [6]     8107            std   tmb_old_camera_x
835B DCF1             (./Engine/Graphics):00057 [5]     8112            ldd   <glb_camera_y_pos
835D C300B0           (./Engine/Graphics):00058 [4]     8116            addd  #tmb_vp_v_px
8360 FD8351           (./Engine/Graphics):00059 [6]     8122            std   tmb_old_camera_y
8363 39               (./Engine/Graphics):00060 [5]     8127            rts
                      (./Engine/Graphics):00061                 
8364                  (./Engine/Graphics):00062                 ComputeTileBuffer
                      (./Engine/Graphics):00063                 
                      (./Engine/Graphics):00064                         ; check if a map was registred
                      (./Engine/Graphics):00065                         ; ---------------------------------------------------------------------
                      (./Engine/Graphics):00066                 
8364 B6833F           (./Engine/Graphics):00067 [5]     8132            lda   glb_map_pge
8367 2601             (./Engine/Graphics):00068 [3]     8135            bne   @a
8369 39               (./Engine/Graphics):00069 [5]     8140            rts
836A                  (./Engine/Graphics):00070                 @a
                      (./Engine/Graphics):00071                 
                      (./Engine/Graphics):00072                         ; compute tiles that needs to be added to buffer
                      (./Engine/Graphics):00073                         ; ---------------------------------------------------------------------
                      (./Engine/Graphics):00074                 
                      (./Engine/Graphics):00075                         ; compute y location
836A DEF1             (./Engine/Graphics):00076 [5]     8145            ldu   <glb_camera_y_pos
836C FC8351           (./Engine/Graphics):00077 [6]     8151            ldd   tmb_old_camera_y
836F 93F1             (./Engine/Graphics):00078 [6]     8157            subd  <glb_camera_y_pos
8371 2744             (./Engine/Graphics):00079 [3]     8160            beq   @next
8373 2A06             (./Engine/Graphics):00080 [3]     8163            bpl   @a
8375 33C900B0         (./Engine/Graphics):00081 [8]     8171            leau  tmb_vp_v_px,u
8379 33CB             (./Engine/Graphics):00082 [8]     8179            leau  d,u
837B DF15             (./Engine/Graphics):00083 [5]     8184    @a      stu   tmb_y
                      (./Engine/Graphics):00084                         ; compute height in tiles
837D DCF1             (./Engine/Graphics):00085 [5]     8189            ldd   <glb_camera_y_pos
                      (./Engine/Graphics):00086                         _asrd
837F 47               (            _asrd):00001 [2]     8191            asra
8380 56               (            _asrd):00002 [2]     8193            rorb
                      (./Engine/Graphics):00087                         _asrd
8381 47               (            _asrd):00001 [2]     8195            asra
8382 56               (            _asrd):00002 [2]     8197            rorb
                      (./Engine/Graphics):00088                         _asrd
8383 47               (            _asrd):00001 [2]     8199            asra
8384 56               (            _asrd):00002 [2]     8201            rorb
                      (./Engine/Graphics):00089                         _asrd
8385 47               (            _asrd):00001 [2]     8203            asra
8386 56               (            _asrd):00002 [2]     8205            rorb
8387 FD8396           (./Engine/Graphics):00090 [6]     8211            std   @dyn
838A FC8351           (./Engine/Graphics):00091 [6]     8217            ldd   tmb_old_camera_y
                      (./Engine/Graphics):00092                         _asrd
838D 47               (            _asrd):00001 [2]     8219            asra
838E 56               (            _asrd):00002 [2]     8221            rorb
                      (./Engine/Graphics):00093                         _asrd
838F 47               (            _asrd):00001 [2]     8223            asra
8390 56               (            _asrd):00002 [2]     8225            rorb
                      (./Engine/Graphics):00094                         _asrd
8391 47               (            _asrd):00001 [2]     8227            asra
8392 56               (            _asrd):00002 [2]     8229            rorb
                      (./Engine/Graphics):00095                         _asrd
8393 47               (            _asrd):00001 [2]     8231            asra
8394 56               (            _asrd):00002 [2]     8233            rorb
8395 830000           (./Engine/Graphics):00096 [4]     8237            subd   #0
     8396             (./Engine/Graphics):00097                 @dyn    equ   *-2
8398 271D             (./Engine/Graphics):00098 [3]     8240            beq   @next
839A 2A04             (./Engine/Graphics):00099 [3]     8243            bpl   @b
                      (./Engine/Graphics):00100                         _negd
839C 40               (            _negd):00001 [2]     8245            nega
839D 50               (            _negd):00002 [2]     8247            negb
839E 8200             (            _negd):00003 [2]     8249            sbca  #0
83A0 1083000B         (./Engine/Graphics):00101 [5]     8254    @b      cmpd  #tmb_vp_v_tiles
83A4 2F02             (./Engine/Graphics):00102 [3]     8257            ble   @c
83A6 C60B             (./Engine/Graphics):00103 [2]     8259            ldb   #tmb_vp_v_tiles
83A8 F78492           (./Engine/Graphics):00104 [5]     8264    @c      stb   glb_tmb_height
83AB DCF3             (./Engine/Graphics):00105 [5]     8269            ldd   <glb_camera_x_pos
83AD DD13             (./Engine/Graphics):00106 [5]     8274            std   tmb_x
83AF 8612             (./Engine/Graphics):00107 [2]     8276            lda   #tmb_vp_h_tiles
83B1 B7846A           (./Engine/Graphics):00108 [5]     8281            sta   glb_tmb_width
83B4 BD840B           (./Engine/Graphics):00109 [8]     8289            jsr   FeedTileBuffer
83B7                  (./Engine/Graphics):00110                 @next
                      (./Engine/Graphics):00111                 
                      (./Engine/Graphics):00112                         ; compute x location
83B7 DEF3             (./Engine/Graphics):00113 [5]     8294            ldu   <glb_camera_x_pos
83B9 FC834F           (./Engine/Graphics):00114 [6]     8300            ldd   tmb_old_camera_x
83BC 93F3             (./Engine/Graphics):00115 [6]     8306            subd  <glb_camera_x_pos
83BE 2740             (./Engine/Graphics):00116 [3]     8309            beq   @exit
83C0 2A06             (./Engine/Graphics):00117 [3]     8312            bpl   @a
83C2 33C90090         (./Engine/Graphics):00118 [8]     8320            leau  tmb_vp_h_px,u
83C6 33CB             (./Engine/Graphics):00119 [8]     8328            leau  d,u
83C8 DF13             (./Engine/Graphics):00120 [5]     8333    @a      stu   tmb_x
                      (./Engine/Graphics):00121                         ; compute width in tiles
83CA DCF3             (./Engine/Graphics):00122 [5]     8338            ldd   <glb_camera_x_pos
                      (./Engine/Graphics):00123                         _asrd
83CC 47               (            _asrd):00001 [2]     8340            asra
83CD 56               (            _asrd):00002 [2]     8342            rorb
                      (./Engine/Graphics):00124                         _asrd
83CE 47               (            _asrd):00001 [2]     8344            asra
83CF 56               (            _asrd):00002 [2]     8346            rorb
                      (./Engine/Graphics):00125                         _asrd
83D0 47               (            _asrd):00001 [2]     8348            asra
83D1 56               (            _asrd):00002 [2]     8350            rorb
83D2 FD83DF           (./Engine/Graphics):00126 [6]     8356            std   @dyn
83D5 FC834F           (./Engine/Graphics):00127 [6]     8362            ldd   tmb_old_camera_x
                      (./Engine/Graphics):00128                         _asrd
83D8 47               (            _asrd):00001 [2]     8364            asra
83D9 56               (            _asrd):00002 [2]     8366            rorb
                      (./Engine/Graphics):00129                         _asrd
83DA 47               (            _asrd):00001 [2]     8368            asra
83DB 56               (            _asrd):00002 [2]     8370            rorb
                      (./Engine/Graphics):00130                         _asrd
83DC 47               (            _asrd):00001 [2]     8372            asra
83DD 56               (            _asrd):00002 [2]     8374            rorb
83DE 830000           (./Engine/Graphics):00131 [4]     8378            subd   #0
     83DF             (./Engine/Graphics):00132                 @dyn    equ   *-2
83E1 271D             (./Engine/Graphics):00133 [3]     8381            beq   @exit
83E3 2A04             (./Engine/Graphics):00134 [3]     8384            bpl   @b
                      (./Engine/Graphics):00135                         _negd
83E5 40               (            _negd):00001 [2]     8386            nega
83E6 50               (            _negd):00002 [2]     8388            negb
83E7 8200             (            _negd):00003 [2]     8390            sbca  #0
83E9 10830012         (./Engine/Graphics):00136 [5]     8395    @b      cmpd  #tmb_vp_h_tiles
83ED 2F02             (./Engine/Graphics):00137 [3]     8398            ble   @c
83EF C612             (./Engine/Graphics):00138 [2]     8400            ldb   #tmb_vp_h_tiles
83F1 F7846A           (./Engine/Graphics):00139 [5]     8405    @c      stb   glb_tmb_width
83F4 DCF1             (./Engine/Graphics):00140 [5]     8410            ldd   <glb_camera_y_pos
83F6 DD15             (./Engine/Graphics):00141 [5]     8415            std   tmb_y
83F8 860B             (./Engine/Graphics):00142 [2]     8417            lda   #tmb_vp_v_tiles
83FA B78492           (./Engine/Graphics):00143 [5]     8422            sta   glb_tmb_height
83FD BD840B           (./Engine/Graphics):00144 [8]     8430            jsr   FeedTileBuffer
8400                  (./Engine/Graphics):00145                 @exit
8400 DCF3             (./Engine/Graphics):00146 [5]     8435            ldd   <glb_camera_x_pos
8402 FD834F           (./Engine/Graphics):00147 [6]     8441            std   tmb_old_camera_x
8405 DCF1             (./Engine/Graphics):00148 [5]     8446            ldd   <glb_camera_y_pos
8407 FD8351           (./Engine/Graphics):00149 [6]     8452            std   tmb_old_camera_y
840A 39               (./Engine/Graphics):00150 [5]     8457            rts
                      (./Engine/Graphics):00151                 
                      (./Engine/Graphics):00152                 ; ****************************************************************************************************************************
                      (./Engine/Graphics):00153                 ; * FeedTileBuffer
                      (./Engine/Graphics):00154                 ; * Feed the tile buffer, based on camera x and y and a number of tiles in width and height
                      (./Engine/Graphics):00155                 ; * 
                      (./Engine/Graphics):00156                 ; * tmb_x      (0-32767)                  
                      (./Engine/Graphics):00157                 ; * tmb_y      (0-32767)          
                      (./Engine/Graphics):00158                 ; * glb_tmb_width  (1-20)       
                      (./Engine/Graphics):00159                 ; * glb_tmb_height (1-13)        
                      (./Engine/Graphics):00160                 ; *
                      (./Engine/Graphics):00161                 ; ****************************************************************************************************************************
                      (./Engine/Graphics):00162                 
840B                  (./Engine/Graphics):00163                 FeedTileBuffer
                      (./Engine/Graphics):00164                 
                      (./Engine/Graphics):00165                         ; mount the map
                      (./Engine/Graphics):00166                         ; ---------------------------------------------------------------------
                      (./Engine/Graphics):00167                 
840B B6833F           (./Engine/Graphics):00168 [5]     8462            lda   glb_map_pge
                      (./Engine/Graphics):00169                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
840E B7E7E6           (    _SetCartPageA):00004 [5]     8467            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8411 FE8340           (./Engine/Graphics):00170 [6]     8473            ldu   glb_map_adr
                      (./Engine/Graphics):00171                 
                      (./Engine/Graphics):00172                         ; compute position in cycling buffer
                      (./Engine/Graphics):00173                         ; ---------------------------------------------------------------------
                      (./Engine/Graphics):00174                  
8414 D614             (./Engine/Graphics):00175 [4]     8477            ldb   tmb_x+1                       ; col mask (0-32)
8416 C4F8             (./Engine/Graphics):00176 [2]     8479            andb  #%11111000                    ; tile width 8px (>>3) 
8418 54               (./Engine/Graphics):00177 [2]     8481            lsrb                                ; col size 4 bytes (<<2)
8419 F7842A           (./Engine/Graphics):00178 [5]     8486            stb   @dyn
841C D616             (./Engine/Graphics):00179 [4]     8490            ldb   tmb_y+1                       
841E 8400             (./Engine/Graphics):00180 [2]     8492            anda  #%00000000
8420 C4F0             (./Engine/Graphics):00181 [2]     8494            andb  #%11110000                    ; line mask (0-16)
                      (./Engine/Graphics):00182                         _lsld                               ; tile height 16px (>>4) 
8422 58               (            _lsld):00001 [2]     8496            lslb
8423 49               (            _lsld):00002 [2]     8498            rola
                      (./Engine/Graphics):00183                         _lsld                               ; line skip 128 bytes (<<7)
8424 58               (            _lsld):00001 [2]     8500            lslb
8425 49               (            _lsld):00002 [2]     8502            rola
                      (./Engine/Graphics):00184                         _lsld
8426 58               (            _lsld):00001 [2]     8504            lslb
8427 49               (            _lsld):00002 [2]     8506            rola
8428 C30000           (./Engine/Graphics):00185 [4]     8510            addd  #0                            ; (dynamic) add x position to index 
     842A             (./Engine/Graphics):00186                 @dyn    equ   *-1
842B 8B90             (./Engine/Graphics):00187 [2]     8512            adda  #tile_buffer/256
842D DD11             (./Engine/Graphics):00188 [5]     8517            std   b_loc
                      (./Engine/Graphics):00189                 
                      (./Engine/Graphics):00190                         ; transform a camera position into an index to map (64x128px chunks)
                      (./Engine/Graphics):00191                         ; ---------------------------------------------------------------------
842F DC13             (./Engine/Graphics):00192 [5]     8522            ldd   tmb_x
                      (./Engine/Graphics):00193                         _lsrd
8431 44               (            _lsrd):00001 [2]     8524            lsra
8432 56               (            _lsrd):00002 [2]     8526            rorb
                      (./Engine/Graphics):00194                         _lsrd
8433 44               (            _lsrd):00001 [2]     8528            lsra
8434 56               (            _lsrd):00002 [2]     8530            rorb
                      (./Engine/Graphics):00195                         _lsrd
8435 44               (            _lsrd):00001 [2]     8532            lsra
8436 56               (            _lsrd):00002 [2]     8534            rorb
                      (./Engine/Graphics):00196                         _lsrd 
8437 44               (            _lsrd):00001 [2]     8536            lsra
8438 56               (            _lsrd):00002 [2]     8538            rorb
                      (./Engine/Graphics):00197                         _lsrd
8439 44               (            _lsrd):00001 [2]     8540            lsra
843A 56               (            _lsrd):00002 [2]     8542            rorb
                      (./Engine/Graphics):00198                         _lsrd                                                 
843B 44               (            _lsrd):00001 [2]     8544            lsra
843C 56               (            _lsrd):00002 [2]     8546            rorb
843D FD8456           (./Engine/Graphics):00199 [6]     8552            std   @dyn1
8440 DC15             (./Engine/Graphics):00200 [5]     8557            ldd   tmb_y
                      (./Engine/Graphics):00201                         _lsrd
8442 44               (            _lsrd):00001 [2]     8559            lsra
8443 56               (            _lsrd):00002 [2]     8561            rorb
                      (./Engine/Graphics):00202                         _lsrd
8444 44               (            _lsrd):00001 [2]     8563            lsra
8445 56               (            _lsrd):00002 [2]     8565            rorb
                      (./Engine/Graphics):00203                         _lsrd
8446 44               (            _lsrd):00001 [2]     8567            lsra
8447 56               (            _lsrd):00002 [2]     8569            rorb
                      (./Engine/Graphics):00204                         _lsrd 
8448 44               (            _lsrd):00001 [2]     8571            lsra
8449 56               (            _lsrd):00002 [2]     8573            rorb
                      (./Engine/Graphics):00205                         _lsrd
844A 44               (            _lsrd):00001 [2]     8575            lsra
844B 56               (            _lsrd):00002 [2]     8577            rorb
                      (./Engine/Graphics):00206                         _lsrd
844C 44               (            _lsrd):00001 [2]     8579            lsra
844D 56               (            _lsrd):00002 [2]     8581            rorb
844E C4FE             (./Engine/Graphics):00207 [2]     8583            andb  #%11111110                              ; faster than _lsrd (last shift for 128px map) and lsld (2 bytes index in mul ref)
8450 30C812           (./Engine/Graphics):00208 [5]     8588            leax  layer_mul_ref,u
8453 EC8B             (./Engine/Graphics):00209 [9]     8597            ldd   d,x                                     ; use precalculated values to get y in map (16 bits mul)
8455 C30000           (./Engine/Graphics):00210 [4]     8601            addd  #0                                      ; (dynamic) add x position to index 
     8456             (./Engine/Graphics):00211                 @dyn1   equ   *-2
8458 F38343           (./Engine/Graphics):00212 [7]     8608            addd  glb_map_chunk_adr                       ; (dynamic) add map data address to index
845B 1F01             (./Engine/Graphics):00213 [6]     8614            tfr   d,x
                      (./Engine/Graphics):00214                         
                      (./Engine/Graphics):00215                         ; compute tile offset in chunks
                      (./Engine/Graphics):00216                         ; ---------------------------------------------------------------------
                      (./Engine/Graphics):00217                 
845D 9614             (./Engine/Graphics):00218 [4]     8618            lda   tmb_x+1
845F 8438             (./Engine/Graphics):00219 [2]     8620            anda  #%00111000
8461 47               (./Engine/Graphics):00220 [2]     8622            asra
8462 47               (./Engine/Graphics):00221 [2]     8624            asra
8463 970E             (./Engine/Graphics):00222 [4]     8628            sta   x_off+1                                 ; horizontal offset to first tile in top left chunk
8465 47               (./Engine/Graphics):00223 [2]     8630            asra  
8466 8008             (./Engine/Graphics):00224 [2]     8632            suba  #8                                      ; chunk hold 8 tiles in a row
8468 40               (./Engine/Graphics):00225 [2]     8634            nega
8469 8100             (./Engine/Graphics):00226 [2]     8636            cmpa  #0
     846A             (./Engine/Graphics):00227                 glb_tmb_width equ *-1                                 ; (dynamic) nb of tile in screen width 
846B 2D03             (./Engine/Graphics):00228 [3]     8639            blt   @a                                      ; branch if requested tiles in width are covered by more chunks than the first one 
846D B6846A           (./Engine/Graphics):00229 [5]     8644            lda   glb_tmb_width                           ; if not cap to the requested width
8470 9704             (./Engine/Graphics):00230 [4]     8648    @a      sta   l_h_tl                                  ; save nb of tiles in left chunks
8472 B6846A           (./Engine/Graphics):00231 [5]     8653            lda   glb_tmb_width
8475 9004             (./Engine/Graphics):00232 [4]     8657            suba  l_h_tl
8477 1F89             (./Engine/Graphics):00233 [6]     8663            tfr   a,b
8479 57               (./Engine/Graphics):00234 [2]     8665            asrb
847A 57               (./Engine/Graphics):00235 [2]     8667            asrb
847B 57               (./Engine/Graphics):00236 [2]     8669            asrb
847C D701             (./Engine/Graphics):00237 [4]     8673            stb   h_tl_bck                                ; nb of full sized (middle) horizontal chunks
847E 8407             (./Engine/Graphics):00238 [2]     8675            anda  #%00000111                              ; skip middle chunks that are 8 tiles wide
8480 9705             (./Engine/Graphics):00239 [4]     8679            sta   r_h_tl                                  ; save nb of horizontal tiles in right chunks
8482 9706             (./Engine/Graphics):00240 [4]     8683            sta   r_h_tl_bck
                      (./Engine/Graphics):00241                 
8484 9616             (./Engine/Graphics):00242 [4]     8687            lda   tmb_y+1
8486 8470             (./Engine/Graphics):00243 [2]     8689            anda  #%01110000                              ; get tile position in chunk
8488 9710             (./Engine/Graphics):00244 [4]     8693            sta   y_off+1                                 ; vertical offset to first tile in top left chunk
848A 47               (./Engine/Graphics):00245 [2]     8695            asra  
848B 47               (./Engine/Graphics):00246 [2]     8697            asra  
848C 47               (./Engine/Graphics):00247 [2]     8699            asra  
848D 47               (./Engine/Graphics):00248 [2]     8701            asra  
848E 8008             (./Engine/Graphics):00249 [2]     8703            suba  #8                                      ; chunk hold 8 tiles in a col
8490 40               (./Engine/Graphics):00250 [2]     8705            nega
8491 8100             (./Engine/Graphics):00251 [2]     8707            cmpa  #0
     8492             (./Engine/Graphics):00252                 glb_tmb_height equ *-1                                ; (dynamic) nb of tile in screen width 
8493 2D03             (./Engine/Graphics):00253 [3]     8710            blt   @a                                      ; branch if requested tiles in width are covered by the first chunk 
8495 B68492           (./Engine/Graphics):00254 [5]     8715            lda   glb_tmb_height
8498 9708             (./Engine/Graphics):00255 [4]     8719    @a      sta   u_v_tl                                  ; save nb of vertical tiles in top chunks
849A B68492           (./Engine/Graphics):00256 [5]     8724            lda   glb_tmb_height                          ; (dynamic) nb of tile in screen height
849D 9008             (./Engine/Graphics):00257 [4]     8728            suba  u_v_tl
849F 1F89             (./Engine/Graphics):00258 [6]     8734            tfr   a,b
84A1 57               (./Engine/Graphics):00259 [2]     8736            asrb
84A2 57               (./Engine/Graphics):00260 [2]     8738            asrb
84A3 57               (./Engine/Graphics):00261 [2]     8740            asrb
84A4 D702             (./Engine/Graphics):00262 [4]     8744            stb   v_tl                                    ; nb of full sized (middle) vertical chunks
84A6 8407             (./Engine/Graphics):00263 [2]     8746            anda  #%00000111                              ; skip middle chunks that are 8 tiles high
84A8 9709             (./Engine/Graphics):00264 [4]     8750            sta   b_v_tl                                  ; save nb of vertical tiles in bottom chunks
                      (./Engine/Graphics):00265                 
                      (./Engine/Graphics):00266                         ; load chunks
                      (./Engine/Graphics):00267                         ; --------------------
84AA B68342           (./Engine/Graphics):00268 [5]     8755            lda   glb_map_chunk_pge
                      (./Engine/Graphics):00269                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
84AD B7E7E6           (    _SetCartPageA):00004 [5]     8760            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00270                 
84B0 D608             (./Engine/Graphics):00271 [4]     8764            ldb   u_v_tl                   ; first line begin with upper vertical chunk height
84B2 D70B             (./Engine/Graphics):00272 [4]     8768            stb   c_v_tl_bck
                      (./Engine/Graphics):00273                 
84B4 DC0F             (./Engine/Graphics):00274 [5]     8773            ldd   y_off                    ; offset in top left chunk is horizontal and vertical
84B6 FD84E5           (./Engine/Graphics):00275 [6]     8779            std   c_y_off
84B9 D30D             (./Engine/Graphics):00276 [6]     8785            addd  x_off
84BB FD857B           (./Engine/Graphics):00277 [6]     8791            std   chunk_offset
84BE                  (./Engine/Graphics):00278                 @vloop
84BE BF851E           (./Engine/Graphics):00279 [6]     8797            stx   @start_pos_bck           ; position in chunk map
84C1 BF855A           (./Engine/Graphics):00280 [6]     8803            stx   start_pos
84C4 D601             (./Engine/Graphics):00281 [4]     8807            ldb   h_tl_bck                 ; restore nb of middle chunks (8 tiles width) on x axis for one row
84C6 D700             (./Engine/Graphics):00282 [4]     8811            stb   h_tl
84C8 DC11             (./Engine/Graphics):00283 [5]     8816            ldd   b_loc                    ; load location in cycling buffer
84CA C480             (./Engine/Graphics):00284 [2]     8818            andb  #%10000000               ; compute line start
84CC FD84F4           (./Engine/Graphics):00285 [6]     8824            std   cl_pos_bck
84CF D604             (./Engine/Graphics):00286 [4]     8828            ldb   l_h_tl                   ; nb of tiles on left chunk
84D1 D703             (./Engine/Graphics):00287 [4]     8832            stb   c_h_tl                   ; store in current nb of tiles               
84D3 960B             (./Engine/Graphics):00288 [4]     8836            lda   c_v_tl_bck               ; compute location for next row
84D5 C680             (./Engine/Graphics):00289 [2]     8838            ldb   #128                     ; ...
84D7 3D               (./Engine/Graphics):00290 [11]    8849            mul                            ; ...
84D8 D311             (./Engine/Graphics):00291 [6]     8855            addd  b_loc                    ; ...
84DA 8407             (./Engine/Graphics):00292 [2]     8857            anda  #%00000111
84DC 8B90             (./Engine/Graphics):00293 [2]     8859            adda  #tile_buffer/256 ; add base address
84DE FD8516           (./Engine/Graphics):00294 [6]     8865            std   @l1_bck                  ; save location for next row
84E1                  (./Engine/Graphics):00295                 @hloop
84E1 BD8545           (./Engine/Graphics):00296 [8]     8873            jsr   LoadChunk
84E4 CC0000           (./Engine/Graphics):00297 [3]     8876            ldd   #0
     84E5             (./Engine/Graphics):00298                 c_y_off equ   *-2
84E7 FD857B           (./Engine/Graphics):00299 [6]     8882            std   chunk_offset
84EA DC11             (./Engine/Graphics):00300 [5]     8887            ldd   b_loc                    ; compute location for next col
84EC C30004           (./Engine/Graphics):00301 [4]     8891            addd  #4
84EF 8400             (./Engine/Graphics):00302 [2]     8893            anda  #%00000000
84F1 C47C             (./Engine/Graphics):00303 [2]     8895            andb  #%01111100 ; cycle thru this line (0-127) by 4 bytes
84F3 C30000           (./Engine/Graphics):00304 [4]     8899            addd  #0
     84F4             (./Engine/Graphics):00305                 cl_pos_bck equ *-2
84F6 DD11             (./Engine/Graphics):00306 [5]     8904            std   b_loc                    ; set location for next col
84F8 9600             (./Engine/Graphics):00307 [4]     8908            lda   h_tl                     ; check number of middle chunks
84FA 2709             (./Engine/Graphics):00308 [3]     8911            beq   @rc
84FC C608             (./Engine/Graphics):00309 [2]     8913            ldb   #8                       ; middle chunks are 8 tiles width
84FE D703             (./Engine/Graphics):00310 [4]     8917            stb   c_h_tl
8500 4A               (./Engine/Graphics):00311 [2]     8919            deca
8501 9700             (./Engine/Graphics):00312 [4]     8923            sta   h_tl
8503 20DC             (./Engine/Graphics):00313 [3]     8926            bra   @hloop
8505 D605             (./Engine/Graphics):00314 [4]     8930    @rc     ldb   r_h_tl                   ; check right chunk
8507 2708             (./Engine/Graphics):00315 [3]     8933            beq   @hexit
8509 D703             (./Engine/Graphics):00316 [4]     8937            stb   c_h_tl
850B D706             (./Engine/Graphics):00317 [4]     8941            stb   r_h_tl_bck
850D 0F05             (./Engine/Graphics):00318 [6]     8947            clr   r_h_tl
850F 20D0             (./Engine/Graphics):00319 [3]     8950            bra   @hloop
8511 9606             (./Engine/Graphics):00320 [4]     8954    @hexit  lda   r_h_tl_bck
8513 9705             (./Engine/Graphics):00321 [4]     8958            sta   r_h_tl
8515 CC0000           (./Engine/Graphics):00322 [3]     8961            ldd   #0
     8516             (./Engine/Graphics):00323                 @l1_bck equ   *-2
8518 DD11             (./Engine/Graphics):00324 [5]     8966            std   b_loc                    ; set location for next row
851A F6834E           (./Engine/Graphics):00325 [5]     8971            ldb   glb_map_width
851D 8E0000           (./Engine/Graphics):00326 [3]     8974            ldx   #0
     851E             (./Engine/Graphics):00327                 @start_pos_bck equ *-2
8520 3A               (./Engine/Graphics):00328 [3]     8977            abx
8521 D602             (./Engine/Graphics):00329 [4]     8981            ldb   v_tl                     ; are we in middle or bottom chunk ?
8523 2708             (./Engine/Graphics):00330 [3]     8984            beq   @a
8525 2B1D             (./Engine/Graphics):00331 [3]     8987            bmi   @end
8527 8608             (./Engine/Graphics):00332 [2]     8989            lda   #8                       ; middle
8529 970B             (./Engine/Graphics):00333 [4]     8993            sta   c_v_tl_bck
852B 2006             (./Engine/Graphics):00334 [3]     8996            bra   @b
852D 9609             (./Engine/Graphics):00335 [4]     9000    @a      lda   b_v_tl                   ; bottom
852F 2713             (./Engine/Graphics):00336 [3]     9003            beq   @end
8531 970B             (./Engine/Graphics):00337 [4]     9007            sta   c_v_tl_bck
8533 5A               (./Engine/Graphics):00338 [2]     9009    @b      decb
8534 D702             (./Engine/Graphics):00339 [4]     9013            stb   v_tl
8536 CC0000           (./Engine/Graphics):00340 [3]     9016            ldd   #0
8539 FD84E5           (./Engine/Graphics):00341 [6]     9022            std   c_y_off
853C DC0D             (./Engine/Graphics):00342 [5]     9027            ldd   x_off
853E FD857B           (./Engine/Graphics):00343 [6]     9033            std   chunk_offset             ; offset in next row of chunk is only horizontal
8541 7E84BE           (./Engine/Graphics):00344 [4]     9037            jmp   @vloop
8544 39               (./Engine/Graphics):00345 [5]     9042    @end    rts
                      (./Engine/Graphics):00346                 
8545                  (./Engine/Graphics):00347                 LoadChunk
8545 DC11             (./Engine/Graphics):00348 [5]     9047            ldd   b_loc
8547 C480             (./Engine/Graphics):00349 [2]     9049            andb  #%10000000
8549 FD85DD           (./Engine/Graphics):00350 [6]     9055            std   cl_pos                                  ; save line start for cycling buffer
854C D603             (./Engine/Graphics):00351 [4]     9059            ldb   c_h_tl                                  ; preprocess line return
854E 58               (./Engine/Graphics):00352 [2]     9061            lslb                                          ; buffer : 4 bytes per tile in width
854F 58               (./Engine/Graphics):00353 [2]     9063            lslb
8550 86FF             (./Engine/Graphics):00354 [2]     9065            lda   #%11111111
8552 50               (./Engine/Graphics):00355 [2]     9067            negb
8553 C30084           (./Engine/Graphics):00356 [4]     9071            addd  #128+4                                  ; one line in buffer and one tile width
8556 FD85FC           (./Engine/Graphics):00357 [6]     9077            std   r_stp_1
                      (./Engine/Graphics):00358                 
8559 8E0000           (./Engine/Graphics):00359 [3]     9080            ldx   #0
     855A             (./Engine/Graphics):00360                 start_pos equ *-2
855C A680             (./Engine/Graphics):00361 [6]     9086            lda   ,x+
855E 2A0A             (./Engine/Graphics):00362 [3]     9089            bpl   @a
8560 FE8349           (./Engine/Graphics):00363 [6]     9095            ldu   glb_map_defchunk1_adr
8563 847F             (./Engine/Graphics):00364 [2]     9097            anda  #%01111111
8565 F68348           (./Engine/Graphics):00365 [5]     9102            ldb   glb_map_defchunk1_pge
8568 2006             (./Engine/Graphics):00366 [3]     9105            bra   @b
856A FE8346           (./Engine/Graphics):00367 [6]     9111    @a      ldu   glb_map_defchunk0_adr
856D F68345           (./Engine/Graphics):00368 [5]     9116            ldb   glb_map_defchunk0_pge
8570 F785C8           (./Engine/Graphics):00369 [5]     9121    @b      stb   chk_idx_pge
                      (./Engine/Graphics):00370                         _SetCartPageB                                 ; set chunk definition page
                      (    _SetCartPageB):00001                  IFDEF T2
                      (    _SetCartPageB):00002                         jsr   SetCartPageB
                      (    _SetCartPageB):00003                  ELSE
8573 F7E7E6           (    _SetCartPageB):00004 [5]     9126            stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageB):00005                  ENDC
8576 C600             (./Engine/Graphics):00371 [2]     9128            ldb   #0
                      (./Engine/Graphics):00372                         _asrd
8578 47               (            _asrd):00001 [2]     9130            asra
8579 56               (            _asrd):00002 [2]     9132            rorb
857A C30000           (./Engine/Graphics):00373 [4]     9136            addd  #0                                      ; (dynamic) ajust position of first tile in chunk
     857B             (./Engine/Graphics):00374                 chunk_offset  equ   *-2
857D 33CB             (./Engine/Graphics):00375 [8]     9144            leau  d,u
                      (./Engine/Graphics):00376                 
857F BF855A           (./Engine/Graphics):00377 [6]     9150            stx   start_pos
8582 FF85F3           (./Engine/Graphics):00378 [6]     9156            stu   start_x                                 ; start position in chunk
                      (./Engine/Graphics):00379                 
8585                  (./Engine/Graphics):00380                 DrawChunk
8585 9603             (./Engine/Graphics):00381 [4]     9160            lda   c_h_tl
                      (./Engine/Graphics):00382                  IFDEF T2
                      (./Engine/Graphics):00383                         lbeq  EndOfChunk
                      (./Engine/Graphics):00384                  ELSE
8587 275E             (./Engine/Graphics):00385 [3]     9163            beq   EndOfChunk
                      (./Engine/Graphics):00386                  ENDC
8589 970A             (./Engine/Graphics):00387 [4]     9167            sta   c_h_tl_bck
858B 960B             (./Engine/Graphics):00388 [4]     9171            lda   c_v_tl_bck
                      (./Engine/Graphics):00389                  IFDEF T2
                      (./Engine/Graphics):00390                         lbeq  EndOfChunk
                      (./Engine/Graphics):00391                  ELSE
858D 2758             (./Engine/Graphics):00392 [3]     9174            beq   EndOfChunk
                      (./Engine/Graphics):00393                  ENDC
858F 9707             (./Engine/Graphics):00394 [4]     9178            sta   c_v_tl
                      (./Engine/Graphics):00395                 
8591                  (./Engine/Graphics):00396                 DrawTile
8591 109E11           (./Engine/Graphics):00397 [6]     9184            ldy   b_loc
8594 ECC1             (./Engine/Graphics):00398 [8]     9192            ldd   ,u++                                    ; load tile index in d (16 bits)
8596 2608             (./Engine/Graphics):00399 [3]     9195            bne   @a
8598 CC0000           (./Engine/Graphics):00400 [3]     9198            ldd   #0
859B EDA4             (./Engine/Graphics):00401 [5]     9203            std   ,y
859D 7E85CF           (./Engine/Graphics):00402 [4]     9207            jmp   NextCol
85A0 FF85CD           (./Engine/Graphics):00403 [6]     9213    @a      stu   @dyn2
85A3 B785AB           (./Engine/Graphics):00404 [5]     9218            sta   @dyn0
85A6 8480             (./Engine/Graphics):00405 [2]     9220            anda  #%10000000
85A8 A7A4             (./Engine/Graphics):00406 [4]     9224            sta   ,y
85AA 8600             (./Engine/Graphics):00407 [2]     9226            lda   #0
     85AB             (./Engine/Graphics):00408                 @dyn0   equ   *-1
85AC 847F             (./Engine/Graphics):00409 [2]     9228            anda  #%01111111
85AE FD85B4           (./Engine/Graphics):00410 [6]     9234            std   @dyn1                                   ; multiply tile index by 3 to load tile page and addr
                      (./Engine/Graphics):00411                         _lsld
85B1 58               (            _lsld):00001 [2]     9236            lslb
85B2 49               (            _lsld):00002 [2]     9238            rola
85B3 C30000           (./Engine/Graphics):00412 [4]     9242            addd  #0                                      ; (dynamic)
     85B4             (./Engine/Graphics):00413                 @dyn1   equ   *-2
85B6 FE834C           (./Engine/Graphics):00414 [6]     9248            ldu   glb_map_tiles_adr
85B9 33CB             (./Engine/Graphics):00415 [8]     9256            leau  d,u
85BB B6834B           (./Engine/Graphics):00416 [5]     9261            lda   glb_map_tiles_pge
                      (./Engine/Graphics):00417                         _SetCartPageA                                 ; set tile index page
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
85BE B7E7E6           (    _SetCartPageA):00004 [5]     9266            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
85C1 3712             (./Engine/Graphics):00418 [8]     9274            pulu  a,x                                     ; a: tile routine page, x: tile routine address
85C3 A721             (./Engine/Graphics):00419 [5]     9279            sta   1,y
85C5 AF22             (./Engine/Graphics):00420 [6]     9285            stx   2,y
85C7 8600             (./Engine/Graphics):00421 [2]     9287            lda   #0
     85C8             (./Engine/Graphics):00422                 chk_idx_pge equ *-1
                      (./Engine/Graphics):00423                         _SetCartPageA                                 ; restore chunk definition page
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
85C9 B7E7E6           (    _SetCartPageA):00004 [5]     9292            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
85CC CE0000           (./Engine/Graphics):00424 [3]     9295            ldu   #0
     85CD             (./Engine/Graphics):00425                 @dyn2   equ *-2
                      (./Engine/Graphics):00426                 
85CF                  (./Engine/Graphics):00427                 NextCol
85CF 0A03             (./Engine/Graphics):00428 [6]     9301            dec   c_h_tl                                  ; check remaining tiles in this row
85D1 2710             (./Engine/Graphics):00429 [3]     9304            beq   EndOfRow
                      (./Engine/Graphics):00430                 
                      (./Engine/Graphics):00431                         ; Move tile position on screen to next column
                      (./Engine/Graphics):00432                         ; -------------------------------------------
85D3 CC0004           (./Engine/Graphics):00433 [3]     9307            ldd   #4                                    ; nb of linear memory bytes between two tiles in a column
85D6 D311             (./Engine/Graphics):00434 [6]     9313            addd  b_loc
85D8 8400             (./Engine/Graphics):00435 [2]     9315            anda  #%00000000
85DA C47C             (./Engine/Graphics):00436 [2]     9317            andb  #%01111100 ; cycle thru this line (0-127) by 4 bytes
85DC C30000           (./Engine/Graphics):00437 [4]     9321            addd  #0
     85DD             (./Engine/Graphics):00438                 cl_pos  equ   *-2
85DF DD11             (./Engine/Graphics):00439 [5]     9326            std   b_loc
                      (./Engine/Graphics):00440                  IFDEF T2
                      (./Engine/Graphics):00441                         jmp   DrawTile
                      (./Engine/Graphics):00442                  ELSE
85E1 20AE             (./Engine/Graphics):00443 [3]     9329            bra   DrawTile
                      (./Engine/Graphics):00444                  ENDC
                      (./Engine/Graphics):00445                 
                      (./Engine/Graphics):00446                         ; Check end of line of current Chunk
                      (./Engine/Graphics):00447                         ; ----------------------------------
85E3                  (./Engine/Graphics):00448                 EndOfRow                                              ; end of line on right chunk, do we need to go to bottom chunk or exit ?
85E3 0A07             (./Engine/Graphics):00449 [6]     9335            dec   c_v_tl
85E5 2607             (./Engine/Graphics):00450 [3]     9338            bne   DrawNextRow
                      (./Engine/Graphics):00451                 
                      (./Engine/Graphics):00452                         ; End of DrawChunk, restore map of chunks page
                      (./Engine/Graphics):00453                         ; ------------------------------------------------------------------
85E7                  (./Engine/Graphics):00454                 EndOfChunk
85E7 B68342           (./Engine/Graphics):00455 [5]     9343            lda   glb_map_chunk_pge
                      (./Engine/Graphics):00456                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
85EA B7E7E6           (    _SetCartPageA):00004 [5]     9348            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
85ED 39               (./Engine/Graphics):00457 [5]     9353            rts
                      (./Engine/Graphics):00458                 
85EE                  (./Engine/Graphics):00459                 DrawNextRow
85EE 960A             (./Engine/Graphics):00460 [4]     9357            lda   c_h_tl_bck
85F0 9703             (./Engine/Graphics):00461 [4]     9361            sta   c_h_tl
                      (./Engine/Graphics):00462                 
85F2 CE0000           (./Engine/Graphics):00463 [3]     9364            ldu   #0                                      ; (dynamic)
     85F3             (./Engine/Graphics):00464                 start_x equ   *-2
85F5 33C810           (./Engine/Graphics):00465 [5]     9369            leau  16,u                                    ; a chunk is made of 8 tiles in width
85F8 FF85F3           (./Engine/Graphics):00466 [6]     9375            stu   start_x
                      (./Engine/Graphics):00467                         ; Move tile position on screen to next row
                      (./Engine/Graphics):00468                         ; -----------------------------------------
85FB CC0000           (./Engine/Graphics):00469 [3]     9378            ldd   #0                                      ; (dynamic) nb of linear memory bytes to go from the last tile of a row to the first tile of the next row
     85FC             (./Engine/Graphics):00470                 r_stp_1 equ   *-2
85FE D311             (./Engine/Graphics):00471 [6]     9384            addd  b_loc
8600 8407             (./Engine/Graphics):00472 [2]     9386            anda  #%00000111
8602 8B90             (./Engine/Graphics):00473 [2]     9388            adda  #tile_buffer/256 ; add base address
8604 DD11             (./Engine/Graphics):00474 [5]     9393            std   b_loc
8606 C480             (./Engine/Graphics):00475 [2]     9395            andb  #%10000000
8608 FD85DD           (./Engine/Graphics):00476 [6]     9401            std   cl_pos                                  ; save start of line for cycling buffer
860B 7E8591           (./Engine/Graphics):00477 [4]     9405            jmp   DrawTile
                      (./Engine/Graphics):00478                 
860E 00               (./Engine/Graphics):00479                 cpt_x fcb 0
                      (./Engine/Graphics):00480                 
                      (./Engine/Graphics):00481                 ; ****************************************************************************************************************************
                      (./Engine/Graphics):00482                 ; *
                      (./Engine/Graphics):00483                 ; *
                      (./Engine/Graphics):00484                 ; *
                      (./Engine/Graphics):00485                 ; *
                      (./Engine/Graphics):00486                 ; *
                      (./Engine/Graphics):00487                 ; *
                      (./Engine/Graphics):00488                 ; *
                      (./Engine/Graphics):00489                 ; *
                      (./Engine/Graphics):00490                 ; *
                      (./Engine/Graphics):00491                 ; *
                      (./Engine/Graphics):00492                 ; *
                      (./Engine/Graphics):00493                 ; ****************************************************************************************************************************
                      (./Engine/Graphics):00494                 
860F                  (./Engine/Graphics):00495                 DrawBufferedTile
                      (./Engine/Graphics):00496                 
860F 96E7             (./Engine/Graphics):00497 [4]     9409            lda   glb_camera_move
8611 2601             (./Engine/Graphics):00498 [3]     9412            bne   @a
8613 39               (./Engine/Graphics):00499 [5]     9417            rts
8614                  (./Engine/Graphics):00500                 @a
                      (./Engine/Graphics):00501                 
                      (./Engine/Graphics):00502                         ; compute number of tiles to render
                      (./Engine/Graphics):00503                         ; saves one tile row or col when camera pos is a multiple of tile size
                      (./Engine/Graphics):00504                         ; ---------------------------------------------------------------------
8614 C611             (./Engine/Graphics):00505 [2]     9419            ldb   #tmb_vp_h_tiles-1               ; nb of tile in screen width 
8616 96F4             (./Engine/Graphics):00506 [4]     9423            lda   <glb_camera_x_pos+1
8618 8407             (./Engine/Graphics):00507 [2]     9425            anda  #%00000111
861A 2601             (./Engine/Graphics):00508 [3]     9428            bne   @skip
861C 5A               (./Engine/Graphics):00509 [2]     9430            decb
861D D718             (./Engine/Graphics):00510 [4]     9434    @skip   stb   DBT_ccpt
861F F786D3           (./Engine/Graphics):00511 [5]     9439            stb   DBT_ccpt_bck
                      (./Engine/Graphics):00512                 
8622 C60B             (./Engine/Graphics):00513 [2]     9441            ldb   #tmb_vp_v_tiles               ; nb of tile in screen height
8624 96F2             (./Engine/Graphics):00514 [4]     9445            lda   <glb_camera_y_pos+1
8626 840F             (./Engine/Graphics):00515 [2]     9447            anda  #%00001111
8628 2601             (./Engine/Graphics):00516 [3]     9450            bne   @skip
862A 5A               (./Engine/Graphics):00517 [2]     9452            decb
862B D717             (./Engine/Graphics):00518 [4]     9456    @skip   stb   DBT_lcpt
                      (./Engine/Graphics):00519                 
                      (./Engine/Graphics):00520                         ; compute top left tile position on screen
                      (./Engine/Graphics):00521                         ; position is rounder to 2 px horizontally beacuse of 2px per byte
                      (./Engine/Graphics):00522                         ; and vertically beacuse of interlacing
                      (./Engine/Graphics):00523                         ; ---------------------------------------------------------------------
862D 96F4             (./Engine/Graphics):00524 [4]     9460            lda   <glb_camera_x_pos+1
862F 8406             (./Engine/Graphics):00525 [2]     9462            anda  #%00000110                    ; mask for 8px tile in width
8631 40               (./Engine/Graphics):00526 [2]     9464            nega
8632 8B0C             (./Engine/Graphics):00527 [2]     9466            adda  #12                           ; on screen position of camera
                      (./Engine/Graphics):00528                 
8634 D6F2             (./Engine/Graphics):00529 [4]     9470            ldb   <glb_camera_y_pos+1
8636 C40E             (./Engine/Graphics):00530 [2]     9472            andb  #%00001110                    ; mask for 16px tile in height
8638 50               (./Engine/Graphics):00531 [2]     9474            negb
8639 CB14             (./Engine/Graphics):00532 [2]     9476            addb  #20                           ; on screen position of camera
                      (./Engine/Graphics):00533                 
863B 44               (./Engine/Graphics):00534 [2]     9478            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
863C 44               (./Engine/Graphics):00535 [2]     9480            lsra                                ; x=x/2, RAMA RAMB interlace  
863D 2516             (./Engine/Graphics):00536 [3]     9483            bcs   @RAM2First                    ; Branch if write must begin in RAM2 first
863F                  (./Engine/Graphics):00537                 @RAM1First
863F B78647           (./Engine/Graphics):00538 [5]     9488            sta   @dyn1
8642 8628             (./Engine/Graphics):00539 [2]     9490            lda   #40                           ; 40 bytes per line in RAMA or RAMB
8644 3D               (./Engine/Graphics):00540 [11]    9501            mul
8645 C3C000           (./Engine/Graphics):00541 [4]     9505            addd  #$C000                        ; (dynamic)
     8647             (./Engine/Graphics):00542                 @dyn1   equ   *-1        
8648 DDFA             (./Engine/Graphics):00543 [5]     9510            std   <glb_screen_location_2
864A 3406             (./Engine/Graphics):00544 [7]     9517            pshs  d
864C FD86EA           (./Engine/Graphics):00545 [6]     9523            std   s_loc2
864F 8020             (./Engine/Graphics):00546 [2]     9525            suba  #$20
8651 DDFC             (./Engine/Graphics):00547 [5]     9530            std   <glb_screen_location_1     
8653 2015             (./Engine/Graphics):00548 [3]     9533            bra   @end
8655                  (./Engine/Graphics):00549                 @RAM2First
8655 B7865D           (./Engine/Graphics):00550 [5]     9538            sta   @dyn2
8658 8628             (./Engine/Graphics):00551 [2]     9540            lda   #40                           ; 40 bytes per line in RAMA or RAMB
865A 3D               (./Engine/Graphics):00552 [11]    9551            mul
865B C3A000           (./Engine/Graphics):00553 [4]     9555            addd  #$A000                        ; (dynamic)
     865D             (./Engine/Graphics):00554                 @dyn2   equ   *-1        
865E DDFA             (./Engine/Graphics):00555 [5]     9560            std   <glb_screen_location_2
8660 3406             (./Engine/Graphics):00556 [7]     9567            pshs  d
8662 FD86EA           (./Engine/Graphics):00557 [6]     9573            std   s_loc2
8665 C32001           (./Engine/Graphics):00558 [4]     9577            addd  #$2001
8668 DDFC             (./Engine/Graphics):00559 [5]     9582            std   <glb_screen_location_1
866A                  (./Engine/Graphics):00560                 @end
866A 3406             (./Engine/Graphics):00561 [7]     9589            pshs  d
866C FD86F6           (./Engine/Graphics):00562 [6]     9595            std   s_loc1
                      (./Engine/Graphics):00563                 
                      (./Engine/Graphics):00564                         ; compute position in cycling buffer
                      (./Engine/Graphics):00565                         ; ---------------------------------------------------------------------
866F D6F4             (./Engine/Graphics):00566 [4]     9599            ldb   <glb_camera_x_pos+1           ; col mask (0-32)
8671 C4F8             (./Engine/Graphics):00567 [2]     9601            andb  #%11111000                    ; tile width 8px (>>3) 
8673 54               (./Engine/Graphics):00568 [2]     9603            lsrb                                ; col size 4 bytes (<<2)
8674 F78685           (./Engine/Graphics):00569 [5]     9608            stb   @dyn2
8677 D6F2             (./Engine/Graphics):00570 [4]     9612            ldb   <glb_camera_y_pos+1
8679 8400             (./Engine/Graphics):00571 [2]     9614            anda  #%00000000
867B C4F0             (./Engine/Graphics):00572 [2]     9616            andb  #%11110000                    ; line mask (0-16)
                      (./Engine/Graphics):00573                         _lsld                               ; tile height 16px (>>4) 
867D 58               (            _lsld):00001 [2]     9618            lslb
867E 49               (            _lsld):00002 [2]     9620            rola
                      (./Engine/Graphics):00574                         _lsld                               ; line skip 128 bytes (<<7)
867F 58               (            _lsld):00001 [2]     9622            lslb
8680 49               (            _lsld):00002 [2]     9624            rola
                      (./Engine/Graphics):00575                         _lsld
8681 58               (            _lsld):00001 [2]     9626            lslb
8682 49               (            _lsld):00002 [2]     9628            rola
8683 C30000           (./Engine/Graphics):00576 [4]     9632            addd  #0                            ; (dynamic) add x position to index 
     8685             (./Engine/Graphics):00577                 @dyn2   equ   *-1
8686 C39000           (./Engine/Graphics):00578 [4]     9636            addd  #tile_buffer
                      (./Engine/Graphics):00579                 
8689 108E8733         (./Engine/Graphics):00580 [4]     9640            ldy   #tmb_hprio_tiles              ; high priority tiles queue
                      (./Engine/Graphics):00581                 
                      (./Engine/Graphics):00582                 ; **************************************
                      (./Engine/Graphics):00583                 ; * Tile rendering Loop
                      (./Engine/Graphics):00584                 ; **************************************
                      (./Engine/Graphics):00585                 
868D                  (./Engine/Graphics):00586                 DBT_lloop
868D 1F03             (./Engine/Graphics):00587 [6]     9646            tfr   d,u
868F FD8704           (./Engine/Graphics):00588 [6]     9652            std   ls_pos
8692 C480             (./Engine/Graphics):00589 [2]     9654            andb  #%10000000
8694 FD86CA           (./Engine/Graphics):00590 [6]     9660            std   l_pos
                      (./Engine/Graphics):00591                 
                      (./Engine/Graphics):00592                         ; tiles in col
                      (./Engine/Graphics):00593                         ; ****************
8697                  (./Engine/Graphics):00594                 DBT_cloop
8697 3716             (./Engine/Graphics):00595 [9]     9669            pulu  d,x
8699 3440             (./Engine/Graphics):00596 [7]     9676            pshs  u
869B F7E7E6           (./Engine/Graphics):00597 [5]     9681            stb   $E7E6
869E 2604             (./Engine/Graphics):00598 [3]     9684            bne   @a
86A0 0CE6             (./Engine/Graphics):00599 [6]     9690            inc   glb_alphaTiles           ; if a tile contains transparency, set the tag
86A2 2015             (./Engine/Graphics):00600 [3]     9693            bra   @skip
86A4 4D               (./Engine/Graphics):00601 [2]     9695    @a      tsta
86A5 2A0E             (./Engine/Graphics):00602 [3]     9698            bpl   @low
86A7 E7A0             (./Engine/Graphics):00603 [6]     9704            stb   ,y+
86A9 AFA1             (./Engine/Graphics):00604 [8]     9712            stx   ,y++
86AB 9EFC             (./Engine/Graphics):00605 [5]     9717            ldx   <glb_screen_location_1
86AD AFA1             (./Engine/Graphics):00606 [8]     9725            stx   ,y++
86AF 9EFA             (./Engine/Graphics):00607 [5]     9730            ldx   <glb_screen_location_2
86B1 AFA1             (./Engine/Graphics):00608 [8]     9738            stx   ,y++
86B3 2004             (./Engine/Graphics):00609 [3]     9741            bra   @skip
86B5 DEFA             (./Engine/Graphics):00610 [5]     9746    @low    ldu   <glb_screen_location_2
86B7 AD84             (./Engine/Graphics):00611 [7]     9753            jsr   ,x
86B9 3556             (./Engine/Graphics):00612 [11]    9764    @skip   puls  d,x,u
86BB 3342             (./Engine/Graphics):00613 [5]     9769            leau  2,u
86BD DFFA             (./Engine/Graphics):00614 [5]     9774            stu   <glb_screen_location_2
86BF 3002             (./Engine/Graphics):00615 [5]     9779            leax  2,x
86C1 9FFC             (./Engine/Graphics):00616 [5]     9784            stx   <glb_screen_location_1
86C3 3450             (./Engine/Graphics):00617 [9]     9793            pshs  x,u
86C5 8400             (./Engine/Graphics):00618 [2]     9795            anda  #%00000000
86C7 C47C             (./Engine/Graphics):00619 [2]     9797            andb  #%01111100 ; cycle thru this line (0-127) by 4 bytes
86C9 C30000           (./Engine/Graphics):00620 [4]     9801            addd  #0
     86CA             (./Engine/Graphics):00621                 l_pos   equ   *-2
86CC 1F03             (./Engine/Graphics):00622 [6]     9807            tfr   d,u
                      (./Engine/Graphics):00623                 
86CE 0A18             (./Engine/Graphics):00624 [6]     9813            dec   DBT_ccpt
86D0 26C5             (./Engine/Graphics):00625 [3]     9816            bne   DBT_cloop
                      (./Engine/Graphics):00626                 
86D2 8600             (./Engine/Graphics):00627 [2]     9818            lda   #0
     86D3             (./Engine/Graphics):00628                 DBT_ccpt_bck equ   *-1
86D4 9718             (./Engine/Graphics):00629 [4]     9822            sta   DBT_ccpt
                      (./Engine/Graphics):00630                  
                      (./Engine/Graphics):00631                         ; last tile in col
                      (./Engine/Graphics):00632                         ; ****************
                      (./Engine/Graphics):00633                 
86D6 3716             (./Engine/Graphics):00634 [9]     9831            pulu  d,x
86D8 3440             (./Engine/Graphics):00635 [7]     9838            pshs  u
86DA F7E7E6           (./Engine/Graphics):00636 [5]     9843            stb   $E7E6
86DD 2604             (./Engine/Graphics):00637 [3]     9846            bne   @a
86DF 0CE6             (./Engine/Graphics):00638 [6]     9852            inc   glb_alphaTiles           ; if a tile contains transparency, set the tag
86E1 2004             (./Engine/Graphics):00639 [3]     9855            bra   @skip
86E3 DEFA             (./Engine/Graphics):00640 [5]     9860    @a      ldu   <glb_screen_location_2
86E5 AD84             (./Engine/Graphics):00641 [7]     9867            jsr   ,x
86E7 3556             (./Engine/Graphics):00642 [11]    9878    @skip   puls  d,x,u
                      (./Engine/Graphics):00643                 
                      (./Engine/Graphics):00644                  
                      (./Engine/Graphics):00645                         ; next line
                      (./Engine/Graphics):00646                         ; ****************
                      (./Engine/Graphics):00647                 
86E9 CE0000           (./Engine/Graphics):00648 [3]     9881            ldu   #0
     86EA             (./Engine/Graphics):00649                 s_loc2  equ   *-2
86EC 33C90280         (./Engine/Graphics):00650 [8]     9889            leau  40*16,u
86F0 DFFA             (./Engine/Graphics):00651 [5]     9894            stu   <glb_screen_location_2
86F2 FF86EA           (./Engine/Graphics):00652 [6]     9900            stu   s_loc2
86F5 8E0000           (./Engine/Graphics):00653 [3]     9903            ldx   #0
     86F6             (./Engine/Graphics):00654                 s_loc1  equ   *-2
86F8 30890280         (./Engine/Graphics):00655 [8]     9911            leax  40*16,x
86FC 9FFC             (./Engine/Graphics):00656 [5]     9916            stx   <glb_screen_location_1
86FE BF86F6           (./Engine/Graphics):00657 [6]     9922            stx   s_loc1
8701 3450             (./Engine/Graphics):00658 [9]     9931            pshs  x,u
                      (./Engine/Graphics):00659                         
8703 CC0000           (./Engine/Graphics):00660 [3]     9934            ldd   #0
     8704             (./Engine/Graphics):00661                 ls_pos  equ   *-2              ; line start pos
8706 C30080           (./Engine/Graphics):00662 [4]     9938            addd  #128
8709 8407             (./Engine/Graphics):00663 [2]     9940            anda  #%00000111
870B 8B90             (./Engine/Graphics):00664 [2]     9942            adda  #tile_buffer/256 ; add base address
                      (./Engine/Graphics):00665                 
870D 0A17             (./Engine/Graphics):00666 [6]     9948            dec   DBT_lcpt
870F 1026FF7A         (./Engine/Graphics):00667 [5+?]   9953            lbne  DBT_lloop
8713 3264             (./Engine/Graphics):00668 [5]     9958    @rts    leas  4,s               ; empty the stack
8715 8600             (./Engine/Graphics):00669 [2]     9960            lda   #0
8717 A7A4             (./Engine/Graphics):00670 [4]     9964            sta   ,y                ; end marker for high priority tiles
8719 39               (./Engine/Graphics):00671 [5]     9969            rts
                      (./Engine/Graphics):00672                 
                      (./Engine/Graphics):00673                 ; ****************************************************************************************************************************
                      (./Engine/Graphics):00674                 ; *
                      (./Engine/Graphics):00675                 ; *
                      (./Engine/Graphics):00676                 ; *
                      (./Engine/Graphics):00677                 ; *
                      (./Engine/Graphics):00678                 ; *
                      (./Engine/Graphics):00679                 ; *
                      (./Engine/Graphics):00680                 ; *
                      (./Engine/Graphics):00681                 ; *
                      (./Engine/Graphics):00682                 ; *
                      (./Engine/Graphics):00683                 ; *
                      (./Engine/Graphics):00684                 ; *
                      (./Engine/Graphics):00685                 ; ****************************************************************************************************************************
                      (./Engine/Graphics):00686                 
871A                  (./Engine/Graphics):00687                 DrawHighPriorityBufferedTile
871A 108E8733         (./Engine/Graphics):00688 [4]     9973            ldy   #tmb_hprio_tiles
871E 200B             (./Engine/Graphics):00689 [3]     9976            bra   @entry
8720                  (./Engine/Graphics):00690                 @loop
8720 EE23             (./Engine/Graphics):00691 [6]     9982            ldu   3,y
8722 DFFC             (./Engine/Graphics):00692 [5]     9987            stu   <glb_screen_location_1
8724 EE25             (./Engine/Graphics):00693 [6]     9993            ldu   5,y
8726 3127             (./Engine/Graphics):00694 [5]     9998            leay  7,y
8728 ADB8FA           (./Engine/Graphics):00695 [11]    10009           jsr   [-6,y]  ; y register should be saved and restored (it works without, only for small tiles)
872B                  (./Engine/Graphics):00696                 @entry
872B E6A4             (./Engine/Graphics):00697 [4]     10013           ldb   ,y
872D F7E7E6           (./Engine/Graphics):00698 [5]     10018           stb   $E7E6
8730 26EE             (./Engine/Graphics):00699 [3]     10021           bne   @loop
8732 39               (./Engine/Graphics):00700 [5]     10026           rts
                      (./Engine/Graphics):00701                 
8733                  (./Engine/Graphics):00702                 tmb_hprio_tiles
8733 0000000000000000 (./Engine/Graphics):00703                         fill  0,tmb_vp_h_tiles*tmb_vp_v_tiles*7 ; all tiles in high priority ... that's crazy
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000
8C9D 00               (./Engine/Graphics):00704                         fcb   0 ; end marker
                      (./Engine/Graphics):00705                 
8C9E 0000000000000000 (./Engine/Graphics):00706                         align 2048
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000
9000                  (./Engine/Graphics):00707                 tile_buffer
9000 0000000000000000 (./Engine/Graphics):00708                         fill  0,16*128
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (C:\Users\bhrou\gi):00275                         INCLUDE "./generated-code/EHZ/BuilderMainGenCode.asm"
                      (./generated-code/):00001                 * Generated Code
                      (./generated-code/):00002                 
9800                  (./generated-code/):00003                 Pal_EHZ
9800 3206             (./generated-code/):00004                         fdb   $3206
9802 630E             (./generated-code/):00005                         fdb   $630e
9804 A60E             (./generated-code/):00006                         fdb   $a60e
9806 0100             (./generated-code/):00007                         fdb   $0100
9808 1400             (./generated-code/):00008                         fdb   $1400
980A 3B00             (./generated-code/):00009                         fdb   $3b00
980C 1000             (./generated-code/):00010                         fdb   $1000
980E 6000             (./generated-code/):00011                         fdb   $6000
9810 9200             (./generated-code/):00012                         fdb   $9200
9812 0009             (./generated-code/):00013                         fdb   $0009
9814 100B             (./generated-code/):00014                         fdb   $100b
9816 1B01             (./generated-code/):00015                         fdb   $1b01
9818 5C03             (./generated-code/):00016                         fdb   $5c03
981A 0000             (./generated-code/):00017                         fdb   $0000
981C 3303             (./generated-code/):00018                         fdb   $3303
981E CA0D             (./generated-code/):00019                         fdb   $ca0d
                      (./generated-code/):00020                 
9820                  (./generated-code/):00021                 Obj_Index_Page
9820 00               (./generated-code/):00022                         fcb   $00
9821 64               (./generated-code/):00023                         fcb   $64
9822 74               (./generated-code/):00024                         fcb   $74
9823 67               (./generated-code/):00025                         fcb   $67
9824 79               (./generated-code/):00026                         fcb   $79
9825 79               (./generated-code/):00027                         fcb   $79
9826 64               (./generated-code/):00028                         fcb   $64
9827                  (./generated-code/):00029                 Obj_Index_Address
9827 0000             (./generated-code/):00030                         fcb   $00,$00
9829 3FDB             (./generated-code/):00031                         fcb   $3F,$DB
982B 3A86             (./generated-code/):00032                         fcb   $3A,$86
982D 3A18             (./generated-code/):00033                         fcb   $3A,$18
982F 26E3             (./generated-code/):00034                         fcb   $26,$E3
9831 0000             (./generated-code/):00035                         fcb   $00,$00
9833 039E             (./generated-code/):00036                         fcb   $03,$9E
9835                  (./generated-code/):00037                 Map_EHZ 
9835 6B3BDF3FDF       (./generated-code/):00038                         fcb   $6B,$3B,$DF,$3F,$DF
983A 00               (./generated-code/):00039                         fcb   $00
983B                  (./generated-code/):00040                 Chunk_EHZ_0 
983B 7A00003980       (./generated-code/):00041                         fcb   $7A,$00,$00,$39,$80
9840 00               (./generated-code/):00042                         fcb   $00
9841                  (./generated-code/):00043                 Img_Page_Index
9841 00               (./generated-code/):00044                         fcb   $00
9842 64               (./generated-code/):00045                         fcb   $64
9843 60               (./generated-code/):00046                         fcb   $60
9844 60               (./generated-code/):00047                         fcb   $60
9845 79               (./generated-code/):00048                         fcb   $79
9846 60               (./generated-code/):00049                         fcb   $60
9847 64               (./generated-code/):00050                         fcb   $64
9848                  (./generated-code/):00051                 Ani_Page_Index
9848 00               (./generated-code/):00052                         fcb   $00
9849 60               (./generated-code/):00053                         fcb   $60
984A 60               (./generated-code/):00054                         fcb   $60
984B 60               (./generated-code/):00055                         fcb   $60
984C 6F               (./generated-code/):00056                         fcb   $6F
984D 60               (./generated-code/):00057                         fcb   $60
984E 60               (./generated-code/):00058                         fcb   $60
984F                  (./generated-code/):00059                 Ani_Asd_Index
984F 0000             (./generated-code/):00060                         fdb   $0000
9851 0000             (./generated-code/):00061                         fdb   $0000
9853 0000             (./generated-code/):00062                         fdb   $0000
9855 0000             (./generated-code/):00063                         fdb   $0000
9857 0000             (./generated-code/):00064                         fdb   $0000
9859 0000             (./generated-code/):00065                         fdb   $0000
985B 0000             (./generated-code/):00066                         fdb   $0000
985D                  (./generated-code/):00067                 LoadAct
985D C602             (./generated-code/):00068 [2]     10028           ldb   #$02                     * load page 2
985F F7E7E5           (./generated-code/):00069 [5]     10033           stb   $E7E5                    * in data space ($A000-$DFFF)
9862 8EDDDD           (./generated-code/):00070 [3]     10036           ldx   #$DDDD                   * set Background solid color
9865 BD819F           (./generated-code/):00071 [8]     10044           jsr   ClearDataMem
9868 B6E7DD           (./generated-code/):00072 [5]     10049           lda   $E7DD                    * set border color
986B 84F0             (./generated-code/):00073 [2]     10051           anda  #$F0
986D 8B0D             (./generated-code/):00074 [2]     10053           adda  #$0D                     * color ref
986F B7E7DD           (./generated-code/):00075 [5]     10058           sta   $E7DD
9872 840F             (./generated-code/):00076 [2]     10060           anda  #$0F
9874 8B80             (./generated-code/):00077 [2]     10062           adda  #$80
9876 B76FFC           (./generated-code/):00078 [5]     10067           sta   glb_screen_border_color+1    * maj WaitVBL
9879 BD6FE2           (./generated-code/):00079 [8]     10075           jsr   WaitVBL
987C C603             (./generated-code/):00080 [2]     10077           ldb   #$03                     * load page 3
987E F7E7E5           (./generated-code/):00081 [5]     10082           stb   $E7E5                    * data space ($A000-$DFFF)
9881 8EDDDD           (./generated-code/):00082 [3]     10085           ldx   #$DDDD                   * set Background solid color
9884 BD819F           (./generated-code/):00083 [8]     10093           jsr   ClearDataMem
9887 CC9800           (./generated-code/):00084 [3]     10096           ldd   #Pal_EHZ
988A FD82B1           (./generated-code/):00085 [6]     10102           std   Cur_palette
988D 7F82B0           (./generated-code/):00086 [7]     10109           clr   Refresh_palette
9890 39               (./generated-code/):00087 [5]     10114           rts
