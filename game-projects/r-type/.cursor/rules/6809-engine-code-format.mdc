---
description: 
globs: 
alwaysApply: true
---
# 6809 Assembly Code Formatting Rules

These rules apply specifically to 6809 assembly code formatting and should be followed when reformatting ASM source code.

## 1. Routine Naming Convention
- All routines must be in camelCase
- Each routine name must be prefixed with the ASM file name followed by a dot
- Example: For `tlsf.asm`, a routine that finds a suitable block should be named `tlsf.findSuitableBlock`

## 2. Local Label Rules
- Local labels must be in camelCase without any prefix
- Label visibility is terminated by empty lines
- When a local label's visibility needs to be broken, replace empty lines with a single semicolon (;)
- Exception: Do not join code with semicolons when local labels are reused across the file

## 3. Macro Naming Convention
- All macros must be in camelCase
- Each macro name must be prefixed with:
  1. An underscore (_)
  2. The ASM file name
  3. A dot
- Example: For `tlsf.asm`, a macro that finds a suitable block should be named `_tlsf.findSuitableBlock MACRO`

## 4. Code Indentation
- All instructions must be indented with exactly 8 spaces from the left margin
- Instruction parameters must be aligned with the following spacing rules:
  - 3 spaces after 3-character instructions (e.g., "ldd")
  - 2 spaces after 4-character instructions (e.g., "leax")
  - 1 space after all other instructions
- Use spaces only - no tabulations allowed
- Maintain consistent indentation throughout the code

## 5. Instruction Case Formatting
- All assembly instructions must be written in lowercase
- Example: Use `leax` instead of `LEAX`, `ldd` instead of `LDD`
- This applies to all 6809 assembly instructions, including pseudo-instructions