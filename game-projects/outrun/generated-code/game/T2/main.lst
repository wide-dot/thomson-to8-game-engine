                      (C:\Users\bhrou\gi):00001                 INCLUDE "./generated-code/game/ObjectId.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0001             (./generated-code/):00003         ObjID_player equ 1
     0002             (./generated-code/):00004         ObjID_text equ 2
                      (C:\Users\bhrou\gi):00002                 INCLUDE "./generated-code/Game.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0112             (./generated-code/):00003         Build_RAMLoaderManager equ $0112
     0000             (./generated-code/):00004         GmID_game equ 0
     0000             (./generated-code/):00005         gmboot equ 0
                      (C:\Users\bhrou\gi):00003         
                      (C:\Users\bhrou\gi):00004                 opt   c,ct
                      (C:\Users\bhrou\gi):00005                 
                      (C:\Users\bhrou\gi):00006                 ********************************************************************************
                      (C:\Users\bhrou\gi):00007                 * Game Engine (TO8 Thomson) - Benoit Rousseau 2020-2021
                      (C:\Users\bhrou\gi):00008                 * ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00009                 *
                      (C:\Users\bhrou\gi):00010                 *
                      (C:\Users\bhrou\gi):00011                 ********************************************************************************
                      (C:\Users\bhrou\gi):00012                 
     0001             (C:\Users\bhrou\gi):00013                 OverlayMode equ 1
     0001             (C:\Users\bhrou\gi):00014                 SOUND_CARD_PROTOTYPE equ 1
                      (C:\Users\bhrou\gi):00015                         INCLUDE "./engine/system/to8/memory-map.equ"
                      (./engine/system/t):00001                 ; Thomson TO8 - Memory map
                      (./engine/system/t):00002                 
                      (./engine/system/t):00003                 ; mc6846
     E7C0             (./engine/system/t):00004                 MC6846.CSR      equ $E7C0
     E7C1             (./engine/system/t):00005                 MC6846.CRC      equ $E7C1
     E7C2             (./engine/system/t):00006                 MC6846.DDRC     equ $E7C2
     E7C3             (./engine/system/t):00007                 MC6846.PRC      equ $E7C3
     E7C4             (./engine/system/t):00008                 MC6846.CSR2     equ $E7C4
     E7C5             (./engine/system/t):00009                 MC6846.TCR      equ $E7C5 ; irq timer ctrl
     E7C6             (./engine/system/t):00010                 MC6846.TMSB     equ $E7C6 ; irq timer MSB
     E7C7             (./engine/system/t):00011                 MC6846.TLSB     equ $E7C7 ; irq timer LSB
                      (./engine/system/t):00012                 
                      (./engine/system/t):00013                 ; mc6821 system
     E7C8             (./engine/system/t):00014                 MC6821.PRA      equ $E7C8
     E7C9             (./engine/system/t):00015                 MC6821.PRB      equ $E7C9
     E7CA             (./engine/system/t):00016                 MC6821.CRA      equ $E7CA
     E7CB             (./engine/system/t):00017                 MC6821.CRB      equ $E7CB
                      (./engine/system/t):00018                 
                      (./engine/system/t):00019                 ; mc6821 music and game
     E7CC             (./engine/system/t):00020                 MC6821.PRA1     equ $E7CC
     E7CD             (./engine/system/t):00021                 MC6821.PRA2     equ $E7CD
     E7CE             (./engine/system/t):00022                 MC6821.CRA1     equ $E7CE
     E7CF             (./engine/system/t):00023                 MC6821.CRA2     equ $E7CF
                      (./engine/system/t):00024                 
                      (./engine/system/t):00025                 ; thmfc01 gate controler floppy disk
     E7D0             (./engine/system/t):00026                 THMFC01.STAT0   equ $E7D0
     E7D0             (./engine/system/t):00027                 THMFC01.CMD0    equ $E7D0
     E7D1             (./engine/system/t):00028                 THMFC01.STAT1   equ $E7D1
     E7D1             (./engine/system/t):00029                 THMFC01.CMD1    equ $E7D1
     E7D2             (./engine/system/t):00030                 THMFC01.CMD2    equ $E7D2
     E7D3             (./engine/system/t):00031                 THMFC01.WDATA   equ $E7D3
     E7D3             (./engine/system/t):00032                 THMFC01.RDATA   equ $E7D3
     E7D4             (./engine/system/t):00033                 THMFC01.WCLK    equ $E7D4
     E7D5             (./engine/system/t):00034                 THMFC01.WSECT   equ $E7D5
     E7D6             (./engine/system/t):00035                 THMFC01.TRCK    equ $E7D6
     E7D7             (./engine/system/t):00036                 THMFC01.CELL    equ $E7D7
                      (./engine/system/t):00037                 
                      (./engine/system/t):00038                 ; ef9369 palette
     E7DA             (./engine/system/t):00039                 EF9369.D        equ $E7DA
     E7DB             (./engine/system/t):00040                 EF9369.A        equ $E7DB
                      (./engine/system/t):00041                 
                      (./engine/system/t):00042                 ; cf74021 gate array page mode - (TO8D: EFG2021FN)
     E7DC             (./engine/system/t):00043                 CF74021.LGAMOD  equ $E7DC
     E7DD             (./engine/system/t):00044                 CF74021.SYS2    equ $E7DD
     E7E4             (./engine/system/t):00045                 CF74021.COM     equ $E7E4
     E7E5             (./engine/system/t):00046                 CF74021.DATA    equ $E7E5
     E7E6             (./engine/system/t):00047                 CF74021.CART    equ $E7E6
     E7E7             (./engine/system/t):00048                 CF74021.SYS1    equ $E7E7
                      (./engine/system/t):00049                 
                      (./engine/system/t):00050                 ; extension port
     00E7             (./engine/system/t):00051                 EXTPORT         equ $E7
     E7F0             (./engine/system/t):00052                 IEEE488         equ $E7F0 ; to E7F7
     E7F2             (./engine/system/t):00053                 EF5860.CTRL     equ $E7F2 ; MIDI
     E7F3             (./engine/system/t):00054                 EF5860.TX       equ $E7F3 ; MIDI
                      (./engine/system/t):00055                  ifndef SOUND_CARD_PROTOTYPE
0000                  (./engine/system/t):00056                 YM2413.A        equ $E7F4
0000                  (./engine/system/t):00057                 YM2413.D        equ $E7F5
0000                  (./engine/system/t):00058                 SN76489.D       equ $E7F7
                      (./engine/system/t):00059                  else
     E7FC             (./engine/system/t):00060                 YM2413.A        equ $E7FC
     E7FD             (./engine/system/t):00061                 YM2413.D        equ $E7FD
     E7FF             (./engine/system/t):00062                 SN76489.D       equ $E7FF
                      (./engine/system/t):00063                  endc
     E7FE             (./engine/system/t):00064                 MEA8000.D       equ $E7FE
     E7FF             (./engine/system/t):00065                 MEA8000.A       equ $E7FF
                      (./engine/system/t):00066                 
                      (./engine/system/t):00067                 ; ROM routines
     E82A             (./engine/system/t):00068                 DKCO            equ $E82A ; read or write floppy disk routine
     E830             (./engine/system/t):00069                 IRQ.EXIT        equ $E830 ; to exit an irq
                      (./engine/system/t):00070                 
                      (./engine/system/t):00071                 ; system variables
     6019             (./engine/system/t):00072                 STATUS          equ $6019 ; status bitfield
     6048             (./engine/system/t):00073                 DK.OPC          equ $6048 ; operation
     6049             (./engine/system/t):00074                 DK.DRV          equ $6049 ; drive
     604C             (./engine/system/t):00075                 DK.SEC          equ $604C ; sector
     604A             (./engine/system/t):00076                 DK.TRK          equ $604A ; $604B ; track
     604E             (./engine/system/t):00077                 DK.STA          equ $604E ; return status
     604F             (./engine/system/t):00078                 DK.BUF          equ $604F ; $6050 ; data write location
     6023             (./engine/system/t):00079                 FIRQPT          equ $6023 ; routine firq
     6027             (./engine/system/t):00080                 TIMERPT         equ $6027 ; routine irq timer
     6081             (./engine/system/t):00081                 CF74021.SYS1.R  equ $6081 ; reading value for CF74021.SYS1
                      (./engine/system/t):00082                 
                      (./engine/system/t):00083                 ; constants
     0035             (./engine/system/t):00084                 EF5860.TXIRQON  equ %00110101 ; 8bits, no parity check, stop 1, tx interrupt
     0015             (./engine/system/t):00085                 EF5860.TXIRQOFF equ %00010101 ; 8bits, no parity check, stop 1, no interrupt
     4DFF             (./engine/system/t):00086                 IRQ.ONEFRAME    equ 312*64-1  ; one frame timer (lines*cycles_per_lines-1), timer launch at -1
                      (./engine/system/t):00087                 
                      (./engine/system/t):00088                 ; -----------------------------------------------------------------------------
                      (./engine/system/t):00089                 
                      (./engine/system/t):00090                 ; mapping to core routines
                      (./engine/system/t):00091                 
     E7CD             (./engine/system/t):00092                 CORE.DAC        equ MC6821.PRA2
     E7E6             (./engine/system/t):00093                 CORE.RND        equ CF74021.CART
                      (C:\Users\bhrou\gi):00016                         INCLUDE "./engine/constants.asm"
                      (./engine/constant):00001                 * ---------------------------------------------------------------------------
                      (./engine/constant):00002                 * Constants
                      (./engine/constant):00003                 *
                      (./engine/constant):00004                 * Naming convention
                      (./engine/constant):00005                 * -----------------
                      (./engine/constant):00006                 * - lower case
                      (./engine/constant):00007                 * - underscore-separated names
                      (./engine/constant):00008                 *
                      (./engine/constant):00009                 * ---------------------------------------------------------------------------
                      (./engine/constant):00010                 
                      (./engine/constant):00011                  ifndef CONSTANTS_ASM
     0001             (./engine/constant):00012                 CONSTANTS_ASM equ 1
                      (./engine/constant):00013                 
                      (./engine/constant):00014                 * ===========================================================================
                      (./engine/constant):00015                 * TO8 Registers
                      (./engine/constant):00016                 * ===========================================================================
                      (./engine/constant):00017                 
                      (./engine/constant):00018                 ; Disk routine registers (ROM)
                      (./engine/constant):00019                 
     6049             (./engine/constant):00020                 dk_drive                      equ $6049
     604A             (./engine/constant):00021                 dk_track                      equ $604A
     604B             (./engine/constant):00022                 dk_track_lsb                  equ $604B
     604C             (./engine/constant):00023                 dk_sector                     equ $604C
     604F             (./engine/constant):00024                 dk_write_location             equ $604F
                      (./engine/constant):00025                 
                      (./engine/constant):00026                 * ===========================================================================
                      (./engine/constant):00027                 * Globals
                      (./engine/constant):00028                 * ===========================================================================
                      (./engine/constant):00029                 
                      (./engine/constant):00030                 ; WARNING - BuildSprite allow to cross $A000 limit by glb_camera_x_offset/4
                      (./engine/constant):00031                 ; Graphics routines using S to write may cross by 12 bytes
                      (./engine/constant):00032                 ; be sure to compile with enough margin here
     9FF4             (./engine/constant):00033                 glb_ram_end                   equ $A000-12
                      (./engine/constant):00034                 
                      (./engine/constant):00035                 ; compilated sprite
     9FF2             (./engine/constant):00036                 glb_register_s                equ glb_ram_end-2             ; reverved space to store S from ROM routines
                      (./engine/constant):00037                 
                      (./engine/constant):00038                 ; DrawSprites
     9FF0             (./engine/constant):00039                 glb_screen_location_1         equ glb_register_s-2          ; start address for rendering of current sprite Part1     
     9FEE             (./engine/constant):00040                 glb_screen_location_2         equ glb_screen_location_1-2   ; start address for rendering of current sprite Part2 (DEPENDENCY Must follow Part1)
                      (./engine/constant):00041                 
     9FEC             (./engine/constant):00042                 glb_camera_height             equ glb_screen_location_2-2
     9FEA             (./engine/constant):00043                 glb_camera_width              equ glb_camera_height-2
     9FE8             (./engine/constant):00044                 glb_camera_x_pos_coarse       equ glb_camera_width-2        ; ((glb_camera_x_pos - 64) / 64) * 64
     9FE6             (./engine/constant):00045                 glb_camera_x_pos              equ glb_camera_x_pos_coarse-2 ; camera x position in palyfield coordinates
     9FE4             (./engine/constant):00046                 glb_camera_y_pos              equ glb_camera_x_pos-2        ; camera y position in palyfield coordinates
     9FE2             (./engine/constant):00047                 glb_camera_x_min_pos          equ glb_camera_y_pos-2
     9FE0             (./engine/constant):00048                 glb_camera_y_min_pos          equ glb_camera_x_min_pos-2
     9FDE             (./engine/constant):00049                 glb_camera_x_max_pos          equ glb_camera_y_min_pos-2
     9FDC             (./engine/constant):00050                 glb_camera_y_max_pos          equ glb_camera_x_max_pos-2
     9FDA             (./engine/constant):00051                 glb_camera_x_offset           equ glb_camera_y_max_pos-2
     9FD8             (./engine/constant):00052                 glb_camera_y_offset           equ glb_camera_x_offset-2
     9FD7             (./engine/constant):00053                 glb_force_sprite_refresh      equ glb_camera_y_offset-1
     9FD6             (./engine/constant):00054                 glb_camera_move               equ glb_force_sprite_refresh-1
     9FD5             (./engine/constant):00055                 glb_alphaTiles                equ glb_camera_move-1
     9FD4             (./engine/constant):00056                 glb_timer_second              equ glb_alphaTiles-1
     9FD3             (./engine/constant):00057                 glb_timer_minute              equ glb_timer_second-1
     9FD3             (./engine/constant):00058                 glb_timer                     equ glb_timer_minute
     9FD2             (./engine/constant):00059                 glb_timer_frame               equ glb_timer-1
                      (./engine/constant):00060                 
                      (./engine/constant):00061                 ; BankSwitch
     9FD1             (./engine/constant):00062                 glb_Page                      equ glb_timer_frame-1
     9FB1             (./engine/constant):00063                 dp_engine                     equ glb_Page-32  ; engine routines tmp var space
     9F95             (./engine/constant):00064                 dp_extreg                     equ dp_engine-28 ; extra register space (user and engine common)
     9F00             (./engine/constant):00065                 dp                            equ $9F00        ; user space (149 bytes max)
     9F00             (./engine/constant):00066                 glb_system_stack              equ dp
                      (./engine/constant):00067                 
                      (./engine/constant):00068                 ; generic direct page extra registers
                      (./engine/constant):00069                 ; -----------------------------------
     9F95             (./engine/constant):00070                 glb_d0   equ   dp_extreg
     9F96             (./engine/constant):00071                 glb_d0_b equ   dp_extreg+1
                      (./engine/constant):00072                 ; must be a free byte here for 24bits computation
     9F98             (./engine/constant):00073                 glb_d1   equ   dp_extreg+3
     9F99             (./engine/constant):00074                 glb_d1_b equ   dp_extreg+4
                      (./engine/constant):00075                 ; must be a free byte here for 24bits computation
     9F9B             (./engine/constant):00076                 glb_d2   equ   dp_extreg+6
     9F9C             (./engine/constant):00077                 glb_d2_b equ   dp_extreg+7
                      (./engine/constant):00078                 ; must be a free byte here for 24bits computation
     9F9E             (./engine/constant):00079                 glb_d3   equ   dp_extreg+9
     9F9F             (./engine/constant):00080                 glb_d3_b equ   dp_extreg+10
                      (./engine/constant):00081                 ; must be a free byte here for 24bits computation
     9FA1             (./engine/constant):00082                 glb_d4   equ   dp_extreg+12
     9FA2             (./engine/constant):00083                 glb_d4_b equ   dp_extreg+13
     9FA3             (./engine/constant):00084                 glb_d5   equ   dp_extreg+14
     9FA4             (./engine/constant):00085                 glb_d5_b equ   dp_extreg+15
     9FA5             (./engine/constant):00086                 glb_d6   equ   dp_extreg+16
     9FA6             (./engine/constant):00087                 glb_d6_b equ   dp_extreg+17
     9FA7             (./engine/constant):00088                 glb_a0   equ   dp_extreg+18
     9FA8             (./engine/constant):00089                 glb_a0_b equ   dp_extreg+19
     9FA9             (./engine/constant):00090                 glb_a1   equ   dp_extreg+20
     9FAA             (./engine/constant):00091                 glb_a1_b equ   dp_extreg+21
     9FAB             (./engine/constant):00092                 glb_a2   equ   dp_extreg+22
     9FAC             (./engine/constant):00093                 glb_a2_b equ   dp_extreg+23
     9FAD             (./engine/constant):00094                 glb_a3   equ   dp_extreg+24
     9FAE             (./engine/constant):00095                 glb_a3_b equ   dp_extreg+25
     9FAF             (./engine/constant):00096                 glb_a4   equ   dp_extreg+26
     9FB0             (./engine/constant):00097                 glb_a4_b equ   dp_extreg+27
                      (./engine/constant):00098                 
                      (./engine/constant):00099                 * ===========================================================================
                      (./engine/constant):00100                 * Display Constants
                      (./engine/constant):00101                 * ===========================================================================
                      (./engine/constant):00102                 
     00A0             (./engine/constant):00103                 screen_width                  equ 160             ; in pixel
     00C8             (./engine/constant):00104                 screen_height                 equ 200             ; in pixel
     001C             (./engine/constant):00105                 screen_top                    equ (256-200)/2     ; in pixel
     00E3             (./engine/constant):00106                 screen_bottom                 equ screen_top+199  ; in pixel
     0030             (./engine/constant):00107                 screen_left                   equ (256-160)/2     ; in pixel
     00CF             (./engine/constant):00108                 screen_right                  equ screen_left+159 ; in pixel
     0008             (./engine/constant):00109                 nb_priority_levels            equ 8               ; number of priority levels (need code change if modified)
                      (./engine/constant):00110                 
                      (./engine/constant):00111                 * ===========================================================================
                      (./engine/constant):00112                 * Images Constants
                      (./engine/constant):00113                 * ===========================================================================
                      (./engine/constant):00114                 
     0004             (./engine/constant):00115                 image_x_size                  equ 4
     0005             (./engine/constant):00116                 image_y_size                  equ 5
     0006             (./engine/constant):00117                 image_center_offset           equ 6
                      (./engine/constant):00118                 
     0004             (./engine/constant):00119                 image_subset_x1_offset        equ 4
     0005             (./engine/constant):00120                 image_subset_y1_offset        equ 5
                      (./engine/constant):00121                 
     0000             (./engine/constant):00122                 page_draw_routine             equ 0
     0001             (./engine/constant):00123                 draw_routine                  equ 1
     0003             (./engine/constant):00124                 page_erase_routine            equ 3
     0004             (./engine/constant):00125                 erase_routine                 equ 4
     0006             (./engine/constant):00126                 erase_nb_cell                 equ 6
                      (./engine/constant):00127                 
                      (./engine/constant):00128                 * ===========================================================================
                      (./engine/constant):00129                 * Sound Constants
                      (./engine/constant):00130                 * ===========================================================================
                      (./engine/constant):00131                 
     0000             (./engine/constant):00132                 sound_page        equ 0
     0001             (./engine/constant):00133                 sound_start_addr  equ 1
     0003             (./engine/constant):00134                 sound_end_addr    equ 3
     0005             (./engine/constant):00135                 sound_meta_size   equ 5
                      (./engine/constant):00136                 
                      (./engine/constant):00137                 * ===========================================================================
                      (./engine/constant):00138                 * Object Constants
                      (./engine/constant):00139                 * ===========================================================================
                      (./engine/constant):00140                 
                      (./engine/constant):00141                 ; ext_variables_size should be declared in game source code
                      (./engine/constant):00142                 
     0026             (./engine/constant):00143                 object_base_size              equ 38  ; the size of an object without rsvd and ext_vars
                      (./engine/constant):00144                  ifndef OverlayMode
0000                  (./engine/constant):00145                 object_rsvd_size              equ 59
                      (./engine/constant):00146                  else
     0005             (./engine/constant):00147                 object_rsvd_size              equ 5
                      (./engine/constant):00148                  endc
                      (./engine/constant):00149                 
     0034             (./engine/constant):00150                 object_rsvd                   equ object_base_size+ext_variables_size
     0039             (./engine/constant):00151                 object_size                   equ object_base_size+ext_variables_size+object_rsvd_size ; the size of a dynamic object
     0039             (./engine/constant):00152                 next_object                   equ object_size
     0026             (./engine/constant):00153                 ext_variables                 equ object_base_size ; start of reserved space for additionnal variables
                      (./engine/constant):00154                 
     0000             (./engine/constant):00155                 id                            equ 0   ; reference to object model id (ObjID_) (0: free slot)
     0001             (./engine/constant):00156                 subtype                       equ 1   ; reference to object subtype (Sub_) DEPENDENCY subtype must follow id
     0002             (./engine/constant):00157                 render_flags                  equ 2
     0003             (./engine/constant):00158                 run_object_prev               equ 3   ; previous object to update when deleting current object
     0005             (./engine/constant):00159                 run_object_next               equ 5   ; next object to run by RunObjects
                      (./engine/constant):00160                 
                      (./engine/constant):00161                  ifndef OverlayMode
                      (./engine/constant):00162                 * --- render_flags bitfield variables --- background erase pack
0000                  (./engine/constant):00163                 render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
0000                  (./engine/constant):00164                 render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
0000                  (./engine/constant):00165                 render_overlay_mask           equ $04 ; (bit 2) DEPENDENCY should be bit 2 - compilated sprite with no background save
0000                  (./engine/constant):00166                 render_playfieldcoord_mask    equ $08 ; (bit 3) tell display engine to use playfield (1) or screen (0) coordinates
0000                  (./engine/constant):00167                 render_xloop_mask             equ $10 ; (bit 4) (in screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
0000                  (./engine/constant):00168                 render_todelete_mask          equ $20 ; (bit 5) tell display engine to delete sprite and clear OST for this object
0000                  (./engine/constant):00169                 render_subobjects_mask        equ $40 ; (bit 6) tell display engine to render subobjects for this object
0000                  (./engine/constant):00170                 render_hide_mask              equ $80 ; (bit 7) tell display engine to hide sprite (keep priority and mapping_frame)
                      (./engine/constant):00171                  else
                      (./engine/constant):00172                 ; --- render_flags bitfield variables --- overlay pack
     0001             (./engine/constant):00173                 render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
     0002             (./engine/constant):00174                 render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
                      (./engine/constant):00175                 
     0008             (./engine/constant):00176                 render_playfieldcoord_mask    equ $08 ; (bit 3) tell display engine to use playfield (1) or screen (0) coordinates
     0010             (./engine/constant):00177                 render_xloop_mask             equ $10 ; (bit 4) (in screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
     0020             (./engine/constant):00178                 render_no_range_ctrl_mask     equ $20 ; (bit 5) tell display engine to skip out of range controls (this may lead to memory corruption BEWARE)
     0040             (./engine/constant):00179                 render_subobjects_mask        equ $40 ; (bit 6) tell display engine to render subobjects for this object
     0080             (./engine/constant):00180                 render_hide_mask              equ $80 ; (bit 7) tell display engine to hide sprite (keep priority and mapping_frame)
                      (./engine/constant):00181                  endc
                      (./engine/constant):00182                 
     0007             (./engine/constant):00183                 priority                      equ 7           ; display priority (0: nothing to display, 1:front, ..., 8:back)
     0008             (./engine/constant):00184                 anim                          equ 8  ; and 9  ; reference to current animation (Ani_)
     000A             (./engine/constant):00185                 prev_anim                     equ 10 ; and 11  ; reference to previous animation (Ani_)
     000C             (./engine/constant):00186                 anim_frame                    equ 12          ; index of current frame in animation
     000D             (./engine/constant):00187                 anim_frame_duration           equ 13          ; number of frames for each image in animation, range: 00-7F (0-127), 0 means display only during one frame
     000E             (./engine/constant):00188                 anim_flags                    equ 14          ; byte offset to reference an anim_flags LUT (adv) / store a link flag (non adv)
                      (./engine/constant):00189                 
                      (./engine/constant):00190                 * --- anim_flags bitfield variables ---
     0001             (./engine/constant):00191                 anim_link_mask                equ $01 ; (bit 0) if set, allow the load of a new animation without reseting anim_frame and anim_frame_duration
                      (./engine/constant):00192                 
     000E             (./engine/constant):00193                 status_flags                  equ 14          ; orientation of sprite, is applied to animation xmirror flag during AnimateSprite
                      (./engine/constant):00194                 
                      (./engine/constant):00195                 * --- status_flags bitfield variables ---
     0001             (./engine/constant):00196                 status_xflip_mask             equ $01 ; (bit 0) X Flip
     0002             (./engine/constant):00197                 status_yflip_mask             equ $02 ; (bit 1) Y Flip
                      (./engine/constant):00198                 
     0010             (./engine/constant):00199                 image_set                     equ 16 ; and 17 ; reference to current image (Img_) (0000 if no image)
     0012             (./engine/constant):00200                 x_pos                         equ 18 ; and 19 ; x playfield coordinate
     0014             (./engine/constant):00201                 x_sub                         equ 20          ; x subpixel (1/256 of a pixel), must follow x_pos in data structure
     0015             (./engine/constant):00202                 y_pos                         equ 21 ; and 22 ; y playfield coordinate
     0017             (./engine/constant):00203                 y_sub                         equ 23          ; y subpixel (1/256 of a pixel), must follow y_pos in data structure
     0018             (./engine/constant):00204                 xy_pixel                      equ 24          ; x and y screen coordinate
     0018             (./engine/constant):00205                 x_pixel                       equ 24          ; x screen coordinate
     0019             (./engine/constant):00206                 y_pixel                       equ 25          ; y screen coordinate, must follow x_pixel
     001A             (./engine/constant):00207                 x_vel                         equ 26 ; and 27 ; horizontal velocity
     001C             (./engine/constant):00208                 y_vel                         equ 28 ; and 29 ; vertical velocity
     001E             (./engine/constant):00209                 x_acl                         equ 30 ; and 31 ; horizontal gravity
     0020             (./engine/constant):00210                 y_acl                         equ 32 ; and 33 ; vertical gravity
     0022             (./engine/constant):00211                 routine                       equ 34          ; index of current object routine
     0023             (./engine/constant):00212                 routine_secondary             equ 35          ; index of current secondary routine
     0024             (./engine/constant):00213                 routine_tertiary              equ 36          ; index of current tertiary routine
     0025             (./engine/constant):00214                 routine_quaternary            equ 37          ; index of current quaternary routine
                      (./engine/constant):00215                 
                      (./engine/constant):00216                  ifndef OverlayMode
                      (./engine/constant):00217                 * ---------------------------------------------------------------------------
                      (./engine/constant):00218                 * reserved variables (read/write by engine)
                      (./engine/constant):00219                 
0000                  (./engine/constant):00220                 rsv_render_flags              equ object_rsvd
                      (./engine/constant):00221                 
                      (./engine/constant):00222                 * --- rsv_render_flags bitfield variables ---
0000                  (./engine/constant):00223                 rsv_render_checkrefresh_mask  equ $01 ; (bit 0) if erasesprite and display sprite flag are processed for this frame
0000                  (./engine/constant):00224                 rsv_render_erasesprite_mask   equ $02 ; (bit 1) if a sprite need to be cleared on screen
0000                  (./engine/constant):00225                 rsv_render_displaysprite_mask equ $04 ; (bit 2) if a sprite need to be rendered on screen
0000                  (./engine/constant):00226                 rsv_render_outofrange_mask    equ $08 ; (bit 3) if a sprite is out of range for full rendering in screen
0000                  (./engine/constant):00227                 rsv_render_onscreen_mask      equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on last screen buffer (may be 0 or 1)
                      (./engine/constant):00228                 
0000                  (./engine/constant):00229                 rsv_prev_anim                 equ object_rsvd+1 ; and +2 ; reference to previous animation (Ani_) w * UTILE ?
0000                  (./engine/constant):00230                 rsv_image_center_offset       equ object_rsvd+3 ; 0 or 1 offset that indicate if image center is even or odd (DRS_XYToAddress)
0000                  (./engine/constant):00231                 rsv_image_subset              equ object_rsvd+4 ; and +5 ; reference to current image regarding mirror flags w
0000                  (./engine/constant):00232                 rsv_mapping_frame             equ object_rsvd+6 ; and +7 ; reference to current image regarding mirror flags, overlay flag and x precision w
0000                  (./engine/constant):00233                 rsv_erase_nb_cell             equ object_rsvd+8 ; b 
0000                  (./engine/constant):00234                 rsv_page_draw_routine         equ object_rsvd+9 ; b
0000                  (./engine/constant):00235                 rsv_draw_routine              equ object_rsvd+10 ; and +11 ; w
0000                  (./engine/constant):00236                 rsv_page_erase_routine        equ object_rsvd+12 ; b
0000                  (./engine/constant):00237                 rsv_erase_routine             equ object_rsvd+13 ; and +14 ; w 
0000                  (./engine/constant):00238                 rsv_xy1_pixel                 equ object_rsvd+15 ;
0000                  (./engine/constant):00239                 rsv_x1_pixel                  equ object_rsvd+15 ; x+x_offset-(x_size/2) screen coordinate
0000                  (./engine/constant):00240                 rsv_y1_pixel                  equ object_rsvd+16 ; y+y_offset-(y_size/2) screen coordinate, must follow rsv_x1_pixel
0000                  (./engine/constant):00241                 rsv_xy2_pixel                 equ object_rsvd+17 ;
0000                  (./engine/constant):00242                 rsv_x2_pixel                  equ object_rsvd+17 ; x+x_offset+(x_size/2) screen coordinate
0000                  (./engine/constant):00243                 rsv_y2_pixel                  equ object_rsvd+18 ; y+y_offset+(y_size/2) screen coordinate, must follow rsv_x2_pixel
                      (./engine/constant):00244                 
                      (./engine/constant):00245                 * ---------------------------------------------------------------------------
                      (./engine/constant):00246                 * reserved variables (engine) - buffer specific
                      (./engine/constant):00247                 
0000                  (./engine/constant):00248                 rsv_buffer_0                  equ object_rsvd+19 ; Start index of buffer 0 variables
0000                  (./engine/constant):00249                 rsv_priority_0                equ object_rsvd+19 ; internal value that hold priority in video buffer 0
0000                  (./engine/constant):00250                 rsv_priority_prev_obj_0       equ object_rsvd+20 ; and +21 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
0000                  (./engine/constant):00251                 rsv_priority_next_obj_0       equ object_rsvd+22 ; and +23 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
0000                  (./engine/constant):00252                 rsv_prev_mapping_frame_0      equ object_rsvd+24 ; and +25 ; reference to previous image in video buffer 0 w
0000                  (./engine/constant):00253                 rsv_prev_erase_nb_cell_0      equ object_rsvd+26 : b
0000                  (./engine/constant):00254                 rsv_prev_page_erase_routine_0 equ object_rsvd+27 ; b
0000                  (./engine/constant):00255                 rsv_prev_erase_routine_0      equ object_rsvd+28 ; and +29 ; w
0000                  (./engine/constant):00256                 rsv_bgdata_0                  equ object_rsvd+30 ; and +31 ; address of background data in screen 0 w
0000                  (./engine/constant):00257                 rsv_prev_xy_pixel_0           equ object_rsvd+32 ;
0000                  (./engine/constant):00258                 rsv_prev_x_pixel_0            equ object_rsvd+32 ; previous x screen coordinate b
0000                  (./engine/constant):00259                 rsv_prev_y_pixel_0            equ object_rsvd+33 ; previous y screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00260                 rsv_prev_xy1_pixel_0          equ object_rsvd+34 ;
0000                  (./engine/constant):00261                 rsv_prev_x1_pixel_0           equ object_rsvd+34 ; previous x+x_offset-(x_size/2) screen coordinate b
0000                  (./engine/constant):00262                 rsv_prev_y1_pixel_0           equ object_rsvd+35 ; previous y+y_offset-(y_size/2) screen coordinate b, must follow x1_pixel
0000                  (./engine/constant):00263                 rsv_prev_xy2_pixel_0          equ object_rsvd+36 ;
0000                  (./engine/constant):00264                 rsv_prev_x2_pixel_0           equ object_rsvd+36 ; previous x+x_offset+(x_size/2) screen coordinate b
0000                  (./engine/constant):00265                 rsv_prev_y2_pixel_0           equ object_rsvd+37 ; previous y+y_offset+(y_size/2) screen coordinate b, must follow x2_pixel
0000                  (./engine/constant):00266                 rsv_prev_render_flags_0       equ object_rsvd+38 ;
                      (./engine/constant):00267                 * --- rsv_prev_render_flags_0 bitfield variables ---
0000                  (./engine/constant):00268                 rsv_prev_render_overlay_mask  equ $01 ; (bit 0) if a sprite has been rendered with compilated sprite and no background save on screen buffer 0/1
0000                  (./engine/constant):00269                 rsv_prev_render_onscreen_mask equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on screen buffer 0/1
                      (./engine/constant):00270                 
0000                  (./engine/constant):00271                 rsv_buffer_1                  equ object_rsvd+39 ; Start index of buffer 1 variables
0000                  (./engine/constant):00272                 rsv_priority_1                equ object_rsvd+39 ; internal value that hold priority in video buffer 1
0000                  (./engine/constant):00273                 rsv_priority_prev_obj_1       equ object_rsvd+40 ; and +41 ; previous object (OST address) in display priority list for video buffer 1 (0000 if none) w
0000                  (./engine/constant):00274                 rsv_priority_next_obj_1       equ object_rsvd+42 ; and +43 ; next object (OST address) in display priority list for video buffer 1 (0000 if none) w
0000                  (./engine/constant):00275                 rsv_prev_mapping_frame_1      equ object_rsvd+44 ; and +45 ; reference to previous image in video buffer 1 w
0000                  (./engine/constant):00276                 rsv_prev_erase_nb_cell_1      equ object_rsvd+46 ; b
0000                  (./engine/constant):00277                 rsv_prev_page_erase_routine_1 equ object_rsvd+47 ; b
0000                  (./engine/constant):00278                 rsv_prev_erase_routine_1      equ object_rsvd+48 ; and +49 ; w
0000                  (./engine/constant):00279                 rsv_bgdata_1                  equ object_rsvd+50 ; and +51 ; address of background data in screen 1 w
0000                  (./engine/constant):00280                 rsv_prev_xy_pixel_1           equ object_rsvd+52 ;
0000                  (./engine/constant):00281                 rsv_prev_x_pixel_1            equ object_rsvd+52 ; previous x screen coordinate b
0000                  (./engine/constant):00282                 rsv_prev_y_pixel_1            equ object_rsvd+53 ; previous y screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00283                 rsv_prev_xy1_pixel_1          equ object_rsvd+54 ;
0000                  (./engine/constant):00284                 rsv_prev_x1_pixel_1           equ object_rsvd+54 ; previous x+x_size screen coordinate b
0000                  (./engine/constant):00285                 rsv_prev_y1_pixel_1           equ object_rsvd+55 ; previous y+y_size screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00286                 rsv_prev_xy2_pixel_1          equ object_rsvd+56 ;
0000                  (./engine/constant):00287                 rsv_prev_x2_pixel_1           equ object_rsvd+56 ; previous x+x_size screen coordinate b
0000                  (./engine/constant):00288                 rsv_prev_y2_pixel_1           equ object_rsvd+57 ; previous y+y_size screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00289                 rsv_prev_render_flags_1       equ object_rsvd+58 ;
                      (./engine/constant):00290                 
0000                  (./engine/constant):00291                 buf_priority                  equ 0  ; offset for each rsv_buffer variables
0000                  (./engine/constant):00292                 buf_priority_prev_obj         equ 1  ;
0000                  (./engine/constant):00293                 buf_priority_next_obj         equ 3  ;
0000                  (./engine/constant):00294                 buf_prev_mapping_frame        equ 5  ;
0000                  (./engine/constant):00295                 buf_erase_nb_cell             equ 7  ;
0000                  (./engine/constant):00296                 buf_page_erase_routine        equ 8 ;
0000                  (./engine/constant):00297                 buf_erase_routine             equ 9 ;
0000                  (./engine/constant):00298                 buf_bgdata                    equ 11 ;
0000                  (./engine/constant):00299                 buf_prev_xy_pixel             equ 13 ;
0000                  (./engine/constant):00300                 buf_prev_x_pixel              equ 13 ;
0000                  (./engine/constant):00301                 buf_prev_y_pixel              equ 14 ;
0000                  (./engine/constant):00302                 buf_prev_xy1_pixel            equ 15 ;
0000                  (./engine/constant):00303                 buf_prev_x1_pixel             equ 15 ;
0000                  (./engine/constant):00304                 buf_prev_y1_pixel             equ 16 ;
0000                  (./engine/constant):00305                 buf_prev_xy2_pixel            equ 17 ;
0000                  (./engine/constant):00306                 buf_prev_x2_pixel             equ 17 ;
0000                  (./engine/constant):00307                 buf_prev_y2_pixel             equ 18 ;
0000                  (./engine/constant):00308                 buf_prev_render_flags         equ 19 ;
                      (./engine/constant):00309                  else
                      (./engine/constant):00310                 * ---------------------------------------------------------------------------
                      (./engine/constant):00311                 * reserved variables (engine) - buffer specific - overlay pack
                      (./engine/constant):00312                 
     0034             (./engine/constant):00313                 rsv_priority                  equ object_rsvd   ; internal value that hold priority in video buffer 0
     0035             (./engine/constant):00314                 rsv_priority_prev_obj         equ object_rsvd+1 ; and +2 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
     0037             (./engine/constant):00315                 rsv_priority_next_obj         equ object_rsvd+3 ; and +4 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
                      (./engine/constant):00316                 
                      (./engine/constant):00317                 ; ---------------------------------------------------------------------------
                      (./engine/constant):00318                 ; when childsprites are activated (i.e. bit #6 of render_flags set)
                      (./engine/constant):00319                 ; object_base_size+ext_variables_size should cover at least 7+56 bytes 
                      (./engine/constant):00320                 ; subtype is recovered
     0001             (./engine/constant):00321                 mainspr_childsprites    equ   subtype         ; amount of child sprites
     0007             (./engine/constant):00322                 mainspr_width           equ   run_object_next+2
     0008             (./engine/constant):00323                 mainspr_height          equ   run_object_next+3
     0009             (./engine/constant):00324                 mainspr_x_pos           equ   mainspr_height+1
     000B             (./engine/constant):00325                 mainspr_y_pos           equ   mainspr_height+3
     000D             (./engine/constant):00326                 mainspr_mapframe        equ   mainspr_height+5
     000F             (./engine/constant):00327                 sub2_x_pos              equ   mainspr_x_pos+6
     0011             (./engine/constant):00328                 sub2_y_pos              equ   mainspr_y_pos+6
     0013             (./engine/constant):00329                 sub2_mapframe           equ   mainspr_mapframe+6
     0015             (./engine/constant):00330                 sub3_x_pos              equ   sub2_x_pos+6
     0017             (./engine/constant):00331                 sub3_y_pos              equ   sub2_y_pos+6
     0019             (./engine/constant):00332                 sub3_mapframe           equ   sub2_mapframe+6
     001B             (./engine/constant):00333                 sub4_x_pos              equ   sub3_x_pos+6
     001D             (./engine/constant):00334                 sub4_y_pos              equ   sub3_y_pos+6
     001F             (./engine/constant):00335                 sub4_mapframe           equ   sub3_mapframe+6
     0021             (./engine/constant):00336                 sub5_x_pos              equ   sub4_x_pos+6
     0023             (./engine/constant):00337                 sub5_y_pos              equ   sub4_y_pos+6
     0025             (./engine/constant):00338                 sub5_mapframe           equ   sub4_mapframe+6
     0027             (./engine/constant):00339                 sub6_x_pos              equ   sub5_x_pos+6
     0029             (./engine/constant):00340                 sub6_y_pos              equ   sub5_y_pos+6
     002B             (./engine/constant):00341                 sub6_mapframe           equ   sub5_mapframe+6
     002D             (./engine/constant):00342                 sub7_x_pos              equ   sub6_x_pos+6
     002F             (./engine/constant):00343                 sub7_y_pos              equ   sub6_y_pos+6
     0031             (./engine/constant):00344                 sub7_mapframe           equ   sub6_mapframe+6
     0033             (./engine/constant):00345                 sub8_x_pos              equ   sub7_x_pos+6
     0035             (./engine/constant):00346                 sub8_y_pos              equ   sub7_y_pos+6
     0037             (./engine/constant):00347                 sub8_mapframe           equ   sub7_mapframe+6
     0039             (./engine/constant):00348                 sub9_x_pos              equ   sub8_x_pos+6
     003B             (./engine/constant):00349                 sub9_y_pos              equ   sub8_y_pos+6
     003D             (./engine/constant):00350                 sub9_mapframe           equ   sub8_mapframe+6
     0006             (./engine/constant):00351                 next_subspr             equ   6 ; size of a subsprite data
                      (./engine/constant):00352                  endc
                      (./engine/constant):00353                  endc
                      (C:\Users\bhrou\gi):00017                         INCLUDE "./engine/macros.asm"
0000                  (./engine/macros.a):00001                 _ldd MACRO
                      (./engine/macros.a):00002                         ldd   #((\1)*256)+\2
                      (./engine/macros.a):00003                  ENDM
                      (./engine/macros.a):00004                  
0000                  (./engine/macros.a):00005                 _ldx MACRO
                      (./engine/macros.a):00006                         ldx   #((\1)*256)+\2
                      (./engine/macros.a):00007                  ENDM
                      (./engine/macros.a):00008                  
0000                  (./engine/macros.a):00009                 _ldy MACRO
                      (./engine/macros.a):00010                         ldy   #((\1)*256)+\2
                      (./engine/macros.a):00011                  ENDM
                      (./engine/macros.a):00012                  
0000                  (./engine/macros.a):00013                 _ldu MACRO
                      (./engine/macros.a):00014                         ldu   #((\1)*256)+\2
                      (./engine/macros.a):00015                  ENDM  
                      (./engine/macros.a):00016                  
0000                  (./engine/macros.a):00017                 _lds MACRO
                      (./engine/macros.a):00018                         lds   #((\1)*256)+\2
                      (./engine/macros.a):00019                  ENDM   
                      (./engine/macros.a):00020                  
0000                  (./engine/macros.a):00021                 _SetCartPageA MACRO
                      (./engine/macros.a):00022                  IFDEF T2
                      (./engine/macros.a):00023                         jsr   SetCartPageA
                      (./engine/macros.a):00024                  ELSE
                      (./engine/macros.a):00025                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00026                  ENDC
                      (./engine/macros.a):00027                  ENDM      
                      (./engine/macros.a):00028                  
0000                  (./engine/macros.a):00029                 _GetCartPageA MACRO
                      (./engine/macros.a):00030                  IFDEF T2
                      (./engine/macros.a):00031                         jsr   GetCartPageA
                      (./engine/macros.a):00032                  ELSE
                      (./engine/macros.a):00033                         lda   $E7E6
                      (./engine/macros.a):00034                  ENDC
                      (./engine/macros.a):00035                  ENDM
                      (./engine/macros.a):00036                 
0000                  (./engine/macros.a):00037                 _SetCartPageB MACRO
                      (./engine/macros.a):00038                  IFDEF T2
                      (./engine/macros.a):00039                         jsr   SetCartPageB
                      (./engine/macros.a):00040                  ELSE
                      (./engine/macros.a):00041                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00042                  ENDC
                      (./engine/macros.a):00043                  ENDM      
                      (./engine/macros.a):00044                  
0000                  (./engine/macros.a):00045                 _GetCartPageB MACRO
                      (./engine/macros.a):00046                  IFDEF T2
                      (./engine/macros.a):00047                         jsr   GetCartPageB
                      (./engine/macros.a):00048                  ELSE
                      (./engine/macros.a):00049                         ldb   $E7E6
                      (./engine/macros.a):00050                  ENDC
                      (./engine/macros.a):00051                  ENDM     
                      (./engine/macros.a):00052                 
0000                  (./engine/macros.a):00053                 _RunObjectSwap MACRO
                      (./engine/macros.a):00054                         ; param 1 : ObjID_
                      (./engine/macros.a):00055                         ; param 2 : Object data RAM address
                      (./engine/macros.a):00056                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00057                         lda   Obj_Index_Page+\1
                      (./engine/macros.a):00058                         sta   PSR_Page   
                      (./engine/macros.a):00059                         ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00060                         std   PSR_Address       
                      (./engine/macros.a):00061                         ldu   \2             
                      (./engine/macros.a):00062                         jsr   RunPgSubRoutine
                      (./engine/macros.a):00063                  ENDM    
                      (./engine/macros.a):00064                 
0000                  (./engine/macros.a):00065                 _RunObjectSwapRoutine MACRO
                      (./engine/macros.a):00066                         ; param 1 : ObjID_
                      (./engine/macros.a):00067                         ; param 2 : Object routine
                      (./engine/macros.a):00068                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00069                         lda   Obj_Index_Page+\1   
                      (./engine/macros.a):00070                         sta   PSR_Page   
                      (./engine/macros.a):00071                         ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00072                         std   PSR_Address       
                      (./engine/macros.a):00073                         ldb   \2        
                      (./engine/macros.a):00074                         jsr   RunPgSubRoutine
                      (./engine/macros.a):00075                  ENDM 
                      (./engine/macros.a):00076                  
0000                  (./engine/macros.a):00077                 _MountObject MACRO 
                      (./engine/macros.a):00078                         ; param 1 : ObjID_
                      (./engine/macros.a):00079                         ; manual mount of an object from the resident page 1
                      (./engine/macros.a):00080                         lda   Obj_Index_Page+\1
                      (./engine/macros.a):00081                         _SetCartPageA
                      (./engine/macros.a):00082                         ldx   Obj_Index_Address+2*\1
                      (./engine/macros.a):00083                  ENDM
                      (./engine/macros.a):00084                 
0000                  (./engine/macros.a):00085                 _RunObject MACRO 
                      (./engine/macros.a):00086                         ; param 1 : ObjID_
                      (./engine/macros.a):00087                         ; param 2 : Object data RAM address
                      (./engine/macros.a):00088                         ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00089                         _MountObject \1
                      (./engine/macros.a):00090                         ldu   \2        
                      (./engine/macros.a):00091                         jsr   ,x
                      (./engine/macros.a):00092                  ENDM
                      (./engine/macros.a):00093                 
0000                  (./engine/macros.a):00094                 _RunObjectRoutineA MACRO 
                      (./engine/macros.a):00095                         ; param 1 : ObjID_
                      (./engine/macros.a):00096                         ; param 2 : Object routine
                      (./engine/macros.a):00097                         ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00098                         ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00099                         _MountObject \1
                      (./engine/macros.a):00100                         lda   \2        
                      (./engine/macros.a):00101                         jsr   ,x
                      (./engine/macros.a):00102                  ENDM
                      (./engine/macros.a):00103                 
0000                  (./engine/macros.a):00104                 _RunObjectRoutineB MACRO 
                      (./engine/macros.a):00105                         ; param 1 : ObjID_
                      (./engine/macros.a):00106                         ; param 2 : Object routine
                      (./engine/macros.a):00107                         ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00108                         ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00109                         _MountObject \1
                      (./engine/macros.a):00110                         ldb   \2        
                      (./engine/macros.a):00111                         jsr   ,x
                      (./engine/macros.a):00112                  ENDM
                      (./engine/macros.a):00113                 
0000                  (./engine/macros.a):00114                 _asld MACRO
                      (./engine/macros.a):00115                         aslb
                      (./engine/macros.a):00116                         rola
                      (./engine/macros.a):00117                  ENDM        
                      (./engine/macros.a):00118                  
0000                  (./engine/macros.a):00119                 _asrd MACRO
                      (./engine/macros.a):00120                         asra
                      (./engine/macros.a):00121                         rorb
                      (./engine/macros.a):00122                  ENDM      
                      (./engine/macros.a):00123                  
0000                  (./engine/macros.a):00124                 _lsld MACRO
                      (./engine/macros.a):00125                         lslb
                      (./engine/macros.a):00126                         rola
                      (./engine/macros.a):00127                  ENDM        
                      (./engine/macros.a):00128                  
0000                  (./engine/macros.a):00129                 _lsrd MACRO
                      (./engine/macros.a):00130                         lsra
                      (./engine/macros.a):00131                         rorb
                      (./engine/macros.a):00132                  ENDM
                      (./engine/macros.a):00133                  
0000                  (./engine/macros.a):00134                 _rold MACRO
                      (./engine/macros.a):00135                         rolb
                      (./engine/macros.a):00136                         rola
                      (./engine/macros.a):00137                  ENDM    
                      (./engine/macros.a):00138                  
0000                  (./engine/macros.a):00139                 _rord MACRO
                      (./engine/macros.a):00140                         rora
                      (./engine/macros.a):00141                         rorb
                      (./engine/macros.a):00142                  ENDM
                      (./engine/macros.a):00143                 
0000                  (./engine/macros.a):00144                 _negd MACRO
                      (./engine/macros.a):00145                         nega
                      (./engine/macros.a):00146                         negb
                      (./engine/macros.a):00147                         sbca  #0
                      (./engine/macros.a):00148                  ENDM
                      (./engine/macros.a):00149                 
0000                  (./engine/macros.a):00150                 _cba MACRO
                      (./engine/macros.a):00151                         pshs  b
                      (./engine/macros.a):00152                         cmpa  ,s+
                      (./engine/macros.a):00153                  ENDM
                      (./engine/macros.a):00154                 
0000                  (./engine/macros.a):00155                 _aba MACRO
                      (./engine/macros.a):00156                         pshs  b
                      (./engine/macros.a):00157                         adda  ,s+
                      (./engine/macros.a):00158                  ENDM
                      (./engine/macros.a):00159                 
0000                  (./engine/macros.a):00160                 _sba MACRO
                      (./engine/macros.a):00161                         pshs  b
                      (./engine/macros.a):00162                         suba  ,s+
                      (./engine/macros.a):00163                  ENDM
                      (./engine/macros.a):00164                 
0000                  (./engine/macros.a):00165                 _cab MACRO
                      (./engine/macros.a):00166                         pshs  a
                      (./engine/macros.a):00167                         cmpb  ,s+
                      (./engine/macros.a):00168                  ENDM
                      (./engine/macros.a):00169                 
0000                  (./engine/macros.a):00170                 _aab MACRO
                      (./engine/macros.a):00171                         pshs  a
                      (./engine/macros.a):00172                         addb  ,s+
                      (./engine/macros.a):00173                  ENDM
                      (./engine/macros.a):00174                 
0000                  (./engine/macros.a):00175                 _sab MACRO
                      (./engine/macros.a):00176                         pshs  a
                      (./engine/macros.a):00177                         subb  ,s+
                      (./engine/macros.a):00178                  ENDM
                      (C:\Users\bhrou\gi):00018                 
                      (C:\Users\bhrou\gi):00019                         org   $6100
6100 BD6AB6           (C:\Users\bhrou\gi):00020 [8]     8               jsr   InitGlobals
6103 BD794D           (C:\Users\bhrou\gi):00021 [8]     16              jsr   LoadAct
6106 BD6BDB           (C:\Users\bhrou\gi):00022 [8]     24              jsr   InitJoypads
                      (C:\Users\bhrou\gi):00023                 
                      (C:\Users\bhrou\gi):00024                 * load object
6109 BD69D4           (C:\Users\bhrou\gi):00025 [8]     32              jsr   LoadObject_u
610C 8601             (C:\Users\bhrou\gi):00026 [2]     34              lda   #ObjID_player
610E A7C4             (C:\Users\bhrou\gi):00027 [4]     38              sta   id,u    
                      (C:\Users\bhrou\gi):00028                 
6110 BD69D4           (C:\Users\bhrou\gi):00029 [8]     46              jsr   LoadObject_u
6113 8602             (C:\Users\bhrou\gi):00030 [2]     48              lda   #ObjID_text
6115 A7C4             (C:\Users\bhrou\gi):00031 [4]     52              sta   id,u   
                      (C:\Users\bhrou\gi):00032                 
6117 CC7900           (C:\Users\bhrou\gi):00033 [3]     55              ldd   #Pal_default
611A FD6DE3           (C:\Users\bhrou\gi):00034 [6]     61              std   Pal_current
611D 7F6DE2           (C:\Users\bhrou\gi):00035 [7]     68              clr   PalRefresh
6120 BD6E05           (C:\Users\bhrou\gi):00036 [8]     76              jsr   PalUpdateNow
                      (C:\Users\bhrou\gi):00037                 
                      (C:\Users\bhrou\gi):00038                 * init sound player
6123 CC7100           (C:\Users\bhrou\gi):00039 [3]     79              ldd   #vgc_stream_buffers
6126 8E7929           (C:\Users\bhrou\gi):00040 [3]     82              ldx   #Snd_01
                      (C:\Users\bhrou\gi):00041                         * andcc #$fe ; clear carry (no loop)
6129 1A01             (C:\Users\bhrou\gi):00042 [3]     85              orcc  #1 ; set carry (loop)
612B BD6EA8           (C:\Users\bhrou\gi):00043 [8]     93              jsr   vgc_init
                      (C:\Users\bhrou\gi):00044                 
                      (C:\Users\bhrou\gi):00045                 * user irq
612E BD6D37           (C:\Users\bhrou\gi):00046 [8]     101             jsr   IrqInit
6131 CC6157           (C:\Users\bhrou\gi):00047 [3]     104             ldd   #UserIRQ
6134 FD6D35           (C:\Users\bhrou\gi):00048 [6]     110             std   Irq_user_routine
6137 86FF             (C:\Users\bhrou\gi):00049 [2]     112             lda   #255                     ; set sync out of display (VBL)
6139 8E4DFF           (C:\Users\bhrou\gi):00050 [3]     115             ldx   #Irq_one_frame
613C BD6D63           (C:\Users\bhrou\gi):00051 [8]     123             jsr   IrqSync
613F BD6D4D           (C:\Users\bhrou\gi):00052 [8]     131             jsr   IrqOn 
                      (C:\Users\bhrou\gi):00053                 
                      (C:\Users\bhrou\gi):00054                 * ==============================================================================
                      (C:\Users\bhrou\gi):00055                 * Main Loop
                      (C:\Users\bhrou\gi):00056                 * ==============================================================================
6142                  (C:\Users\bhrou\gi):00057                 LevelMainLoop
6142 BD6B04           (C:\Users\bhrou\gi):00058 [8]     139             jsr   WaitVBL    
6145 BD6C06           (C:\Users\bhrou\gi):00059 [8]     147             jsr   ReadJoypads  
6148 8E0000           (C:\Users\bhrou\gi):00060 [3]     150             ldx   #0
614B BD6ACA           (C:\Users\bhrou\gi):00061 [8]     158             jsr   ClearDataMem
614E BD69AB           (C:\Users\bhrou\gi):00062 [8]     166             jsr   RunObjects
6151 BD6693           (C:\Users\bhrou\gi):00063 [8]     174             jsr   BuildSprites
6154 7E6142           (C:\Users\bhrou\gi):00064 [4]     178             jmp   LevelMainLoop
                      (C:\Users\bhrou\gi):00065                 
                      (C:\Users\bhrou\gi):00066                 * ==============================================================================
                      (C:\Users\bhrou\gi):00067                 * Irq user routines
                      (C:\Users\bhrou\gi):00068                 * ==============================================================================
                      (C:\Users\bhrou\gi):00069                 
6157                  (C:\Users\bhrou\gi):00070                 UserIRQ
6157 BD6E05           (C:\Users\bhrou\gi):00071 [8]     186             jsr   PalUpdateNow
615A 7E6ECD           (C:\Users\bhrou\gi):00072 [4]     190             jmp   vgc_update
                      (C:\Users\bhrou\gi):00073                 
                      (C:\Users\bhrou\gi):00074                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00075                 * Game Mode RAM variables
                      (C:\Users\bhrou\gi):00076                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00077                         
615D 05               (C:\Users\bhrou\gi):00078                 init_frames fcb 5
                      (C:\Users\bhrou\gi):00079                 
                      (C:\Users\bhrou\gi):00080                         INCLUDE "./game-mode/soundtest/ram-data.asm"       
                      (./game-mode/sound):00001                 ; RAM variables - Level Select
                      (./game-mode/sound):00002                 
                      (./game-mode/sound):00003                 ; ext_variables_size is for dynamic objects
     000E             (./game-mode/sound):00004                 ext_variables_size                equ 14
                      (./game-mode/sound):00005                 
                      (./game-mode/sound):00006                 * ===========================================================================
                      (./game-mode/sound):00007                 * Object Constants
                      (./game-mode/sound):00008                 * ===========================================================================
     0014             (./game-mode/sound):00009                 nb_dynamic_objects                equ 20
     0014             (./game-mode/sound):00010                 nb_graphical_objects              equ 20 * max 64 total
                      (./game-mode/sound):00011                 
                      (./game-mode/sound):00012                 * ---------------------------------------------------------------------------
                      (./game-mode/sound):00013                 * Object Status Table - OST
                      (./game-mode/sound):00014                 * ---------------------------------------------------------------------------
                      (./game-mode/sound):00015                         
615E 0000000000000000 (./game-mode/sound):00016                 Dynamic_Object_RAM            fill  0,nb_dynamic_objects*object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
65D2                  (./game-mode/sound):00017                 Dynamic_Object_RAM_End
                      (./game-mode/sound):00018                 
65D2 00               (./game-mode/sound):00019                 Sound_test_sound fcb 0
65D3 00               (./game-mode/sound):00020                 Current_Selection fcb 0
                      (C:\Users\bhrou\gi):00081                         
                      (C:\Users\bhrou\gi):00082                 * ==============================================================================
                      (C:\Users\bhrou\gi):00083                 * Routines
                      (C:\Users\bhrou\gi):00084                 * ==============================================================================
                      (C:\Users\bhrou\gi):00085                 
                      (C:\Users\bhrou\gi):00086                         ; gfx rendering
                      (C:\Users\bhrou\gi):00087                         INCLUDE "./engine/graphics/sprite/sprite-overlay-pack.asm"
                      (./engine/graphics):00001                         INCLUDE "./engine/graphics/sprite/overlay-mode/DisplaySprite.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * DisplaySprite
                      (./engine/graphics):00003                 * -------------
                      (./engine/graphics):00004                 * Subroutine to manage sprite priority.
                      (./engine/graphics):00005                 * Object's priority is read and object is (un)registred in display engine.
                      (./engine/graphics):00006                 * priority: 0 - unregister
                      (./engine/graphics):00007                 * priority: 1-8 - register sprite (2:front, ..., 8:back)  
                      (./engine/graphics):00008                 *
                      (./engine/graphics):00009                 * Sprite priority is stored in an open doubly linked list
                      (./engine/graphics):00010                 * it allows to keep an exact sprite order for each screen buffer 
                      (./engine/graphics):00011                 *
                      (./engine/graphics):00012                 * DisplaySprite
                      (./engine/graphics):00013                 * input REG : [u] object pointer (OST)
                      (./engine/graphics):00014                 *
                      (./engine/graphics):00015                 * DisplaySprite_x / DisplaySprite2
                      (./engine/graphics):00016                 * input REG : [x] object pointer (OST)
                      (./engine/graphics):00017                 *
                      (./engine/graphics):00018                 * DisplaySprite_priority / DisplaySprite3
                      (./engine/graphics):00019                 * input REG : [u] object pointer (OST)
                      (./engine/graphics):00020                 * input REG : [a] priority
                      (./engine/graphics):00021                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00022                 
                      (./engine/graphics):00023                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00024                 * Display Priority Structure - DPS
                      (./engine/graphics):00025                 * ---------------------------------------------------------------------------
65D4 0000000000000000 (./engine/graphics):00026                 Tbl_Priority_First_Entry      fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index index 0 unused
     0000000000000000
     0000
65E6 0000000000000000 (./engine/graphics):00027                 Tbl_Priority_Last_Entry       fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index index 0 unused
     0000000000000000
     0000
                      (./engine/graphics):00028                 
65F8                  (./engine/graphics):00029                 DisplaySprite_priority
65F8                  (./engine/graphics):00030                 DisplaySprite3                              ; u : ptr object RAM, a : priority
65F8 3456             (./engine/graphics):00031 [11]    201             pshs  d,x,u
65FA B7668E           (./engine/graphics):00032 [5]     206             sta   @prio
65FD 200D             (./engine/graphics):00033 [3]     209             bra   @Start
65FF                  (./engine/graphics):00034                 DisplaySprite_x                             ; x : ptr object RAM
65FF                  (./engine/graphics):00035                 DisplaySprite2
65FF 3456             (./engine/graphics):00036 [11]    220             pshs  d,x,u
6601 1F13             (./engine/graphics):00037 [6]     226             tfr   x,u
6603 2002             (./engine/graphics):00038 [3]     229             bra   >
6605                  (./engine/graphics):00039                 DisplaySprite                               ; u : ptr object RAM
6605 3456             (./engine/graphics):00040 [11]    240             pshs  d,x,u
6607 A647             (./engine/graphics):00041 [5]     245     !       lda   priority,u                    ; read priority set for this object
6609 B7668E           (./engine/graphics):00042 [5]     250             sta   @prio
660C                  (./engine/graphics):00043                 @Start
660C E642             (./engine/graphics):00044 [5]     255             ldb   render_flags,u
660E C47F             (./engine/graphics):00045 [2]     257             andb  #^render_hide_mask            ; unset hide flag
6610 E742             (./engine/graphics):00046 [5]     262             stb   render_flags,u
6612 A1C834           (./engine/graphics):00047 [5]     267             cmpa  rsv_priority,u
6615 2722             (./engine/graphics):00048 [3]     270             beq   @rts                          ; priority and current priority are the same: nothing to do
6617 E6C834           (./engine/graphics):00049 [5]     275             ldb   rsv_priority,u   
661A 2631             (./engine/graphics):00050 [3]     278             bne   @ChangePriority
661C                  (./engine/graphics):00051                 @InitPriority
661C A7C834           (./engine/graphics):00052 [5]     283             sta   rsv_priority,u                ; init priority for this screen buffer with priority from object
661F                  (./engine/graphics):00053                 @CheckLastEntry
661F 108E65E6         (./engine/graphics):00054 [4]     287             ldy   #Tbl_Priority_Last_Entry
6623 48               (./engine/graphics):00055 [2]     289             asla                                ; change priority number to priority index (value x2)        
6624 6DA6             (./engine/graphics):00056 [7]     296             tst   a,y                           ; test left byte only is ok, no object will be stored at $00__ address
6626 2613             (./engine/graphics):00057 [3]     299             bne   @addToExistingNode            ; not the first object at this priority level, branch
6628                  (./engine/graphics):00058                 @addFirstNode        
6628 EFA6             (./engine/graphics):00059 [6]     305             stu   a,y                           ; save object as last entry in linked list
662A 108E65D4         (./engine/graphics):00060 [4]     309             ldy   #Tbl_Priority_First_Entry
662E EFA6             (./engine/graphics):00061 [6]     315             stu   a,y                           ; save object as first entry in linked list
6630 CC0000           (./engine/graphics):00062 [3]     318             ldd   #0
6633 EDC835           (./engine/graphics):00063 [6]     324             std   rsv_priority_prev_obj,u       ; clear object prev and next link, it's the only object at this priority level
6636 EDC837           (./engine/graphics):00064 [6]     330             std   rsv_priority_next_obj,u
6639                  (./engine/graphics):00065                 @rts
6639 35D6             (./engine/graphics):00066 [13]    343             puls  d,x,u,pc                      ; rts        
663B                  (./engine/graphics):00067                 @addToExistingNode
663B AEA6             (./engine/graphics):00068 [6]     349             ldx   a,y                           ; x register now store last object at the priority level of current object
663D EF8837           (./engine/graphics):00069 [6]     355             stu   rsv_priority_next_obj,x       ; link last object with current object
6640 AFC835           (./engine/graphics):00070 [6]     361             stx   rsv_priority_prev_obj,u       ; link current object with previous object
6643 8E0000           (./engine/graphics):00071 [3]     364             ldx   #0
6646 AFC837           (./engine/graphics):00072 [6]     370             stx   rsv_priority_next_obj,u       ; clear object next link        
6649                  (./engine/graphics):00073                 @LinkCurWithPrev        
6649 EFA6             (./engine/graphics):00074 [6]     376             stu   a,y                           ; update last object in index
664B 35D6             (./engine/graphics):00075 [13]    389             puls  d,x,u,pc                      ; rts
664D                  (./engine/graphics):00076                 @ChangePriority
664D ECC835           (./engine/graphics):00077 [6]     395             ldd   rsv_priority_prev_obj,u       ; unregister current priority
6650 2611             (./engine/graphics):00078 [3]     398             bne   @chainPrev
6652 A6C834           (./engine/graphics):00079 [5]     403             lda   rsv_priority,u
6655 48               (./engine/graphics):00080 [2]     405             lsla
6656 108E65D4         (./engine/graphics):00081 [4]     409             ldy   #Tbl_Priority_First_Entry
665A 31A6             (./engine/graphics):00082 [5]     414             leay  a,y
665C ECC837           (./engine/graphics):00083 [6]     420             ldd   rsv_priority_next_obj,u
665F EDA4             (./engine/graphics):00084 [5]     425             std   ,y
6661 200A             (./engine/graphics):00085 [3]     428             bra   @checkPrioNext
6663                  (./engine/graphics):00086                 @chainPrev
6663 ECC837           (./engine/graphics):00087 [6]     434             ldd   rsv_priority_next_obj,u
6666 10AEC835         (./engine/graphics):00088 [7]     441             ldy   rsv_priority_prev_obj,u        
666A EDA837           (./engine/graphics):00089 [6]     447             std   rsv_priority_next_obj,y        
666D                  (./engine/graphics):00090                 @checkPrioNext       
666D ECC837           (./engine/graphics):00091 [6]     453             ldd   rsv_priority_next_obj,u
6670 2611             (./engine/graphics):00092 [3]     456             bne   @chainNext
6672 A6C834           (./engine/graphics):00093 [5]     461             lda   rsv_priority,u
6675 48               (./engine/graphics):00094 [2]     463             lsla
6676 108E65E6         (./engine/graphics):00095 [4]     467             ldy   #Tbl_Priority_Last_Entry
667A 31A6             (./engine/graphics):00096 [5]     472             leay  a,y
667C ECC835           (./engine/graphics):00097 [6]     478             ldd   rsv_priority_prev_obj,u
667F EDA4             (./engine/graphics):00098 [5]     483             std   ,y
6681 200A             (./engine/graphics):00099 [3]     486             bra   >
6683                  (./engine/graphics):00100                 @chainNext
6683 ECC835           (./engine/graphics):00101 [6]     492             ldd   rsv_priority_prev_obj,u
6686 10AEC837         (./engine/graphics):00102 [7]     499             ldy   rsv_priority_next_obj,u        
668A EDA835           (./engine/graphics):00103 [6]     505             std   rsv_priority_prev_obj,y
                      (./engine/graphics):00104                 !
668D 8600             (./engine/graphics):00105 [2]     507             lda   #0
     668E             (./engine/graphics):00106                 @prio   equ   *-1
668F 268B             (./engine/graphics):00107 [3]     510             bne   @InitPriority                 ; priority is != 0, branch to add object to display priority list
6691 35D6             (./engine/graphics):00108 [13]    523             puls  d,x,u,pc                      ; else new priority is 0, return
                      (./engine/graphics):00109                 
                      (./engine/graphics):00110                         
                      (./engine/graphics):00111                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00112                                                                       *; Subroutine to display a sprite/object, when a0 is the object RAM
                      (./engine/graphics):00113                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00114                                                                       *
                      (./engine/graphics):00115                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00116                                                                       *
                      (./engine/graphics):00117                                                                       *; sub_164F4:
                      (./engine/graphics):00118                                                                       *DisplaySprite:
                      (./engine/graphics):00119                                                                       *        lea     (Sprite_Table_Input).w,a1
                      (./engine/graphics):00120                                                                       *        move.w  priority(a0),d0
                      (./engine/graphics):00121                                                                       *        lsr.w   #1,d0
                      (./engine/graphics):00122                                                                       *        andi.w  #$380,d0
                      (./engine/graphics):00123                                                                       *        adda.w  d0,a1
                      (./engine/graphics):00124                                                                       *        cmpi.w  #$7E,(a1)
                      (./engine/graphics):00125                                                                       *        bhs.s   return_16510
                      (./engine/graphics):00126                                                                       *        addq.w  #2,(a1)
                      (./engine/graphics):00127                                                                       *        adda.w  (a1),a1
                      (./engine/graphics):00128                                                                       *        move.w  a0,(a1)
                      (./engine/graphics):00129                                                                       *
                      (./engine/graphics):00130                                                                       *return_16510:
                      (./engine/graphics):00131                                                                       *        rts
                      (./engine/graphics):00132                                                                       *; End of function DisplaySprite
                      (./engine/graphics):00133                                                                       *
                      (./engine/graphics):00134                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00135                                                                       *; Subroutine to display a sprite/object, when a1 is the object RAM
                      (./engine/graphics):00136                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00137                                                                       *
                      (./engine/graphics):00138                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00139                                                                       *
                      (./engine/graphics):00140                                                                       *; sub_16512:
                      (./engine/graphics):00141                                                                       *DisplaySprite2:
                      (./engine/graphics):00142                                                                       *        lea     (Sprite_Table_Input).w,a2
                      (./engine/graphics):00143                                                                       *        move.w  priority(a1),d0
                      (./engine/graphics):00144                                                                       *        lsr.w   #1,d0
                      (./engine/graphics):00145                                                                       *        andi.w  #$380,d0
                      (./engine/graphics):00146                                                                       *        adda.w  d0,a2
                      (./engine/graphics):00147                                                                       *        cmpi.w  #$7E,(a2)
                      (./engine/graphics):00148                                                                       *        bhs.s   return_1652E
                      (./engine/graphics):00149                                                                       *        addq.w  #2,(a2)
                      (./engine/graphics):00150                                                                       *        adda.w  (a2),a2
                      (./engine/graphics):00151                                                                       *        move.w  a1,(a2)
                      (./engine/graphics):00152                                                                       *
                      (./engine/graphics):00153                                                                       *return_1652E:
                      (./engine/graphics):00154                                                                       *        rts
                      (./engine/graphics):00155                                                                       *; End of function DisplaySprite2
                      (./engine/graphics):00156                                                                       *
                      (./engine/graphics):00157                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00158                                                                       *; Subroutine to display a sprite/object, when a0 is the object RAM
                      (./engine/graphics):00159                                                                       *; and d0 is already (priority/2)&$380
                      (./engine/graphics):00160                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00161                                                                       *
                      (./engine/graphics):00162                                                                       *; loc_16530:
                      (./engine/graphics):00163                                                                       *DisplaySprite3:
                      (./engine/graphics):00164                                                                       *        lea     (Sprite_Table_Input).w,a1
                      (./engine/graphics):00165                                                                       *        adda.w  d0,a1
                      (./engine/graphics):00166                                                                       *        cmpi.w  #$7E,(a1)
                      (./engine/graphics):00167                                                                       *        bhs.s   return_16542
                      (./engine/graphics):00168                                                                       *        addq.w  #2,(a1)
                      (./engine/graphics):00169                                                                       *        adda.w  (a1),a1
                      (./engine/graphics):00170                                                                       *        move.w  a0,(a1)
                      (./engine/graphics):00171                                                                       *
                      (./engine/graphics):00172                                                                       *return_16542:
                      (./engine/graphics):00173                                                                       *        rts   
                      (./engine/graphics):00174                 
                      (./engine/graphics):00002                         INCLUDE "./engine/graphics/sprite/overlay-mode/BuildSprites.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * CheckSpritesRefresh
                      (./engine/graphics):00003                 * -------------------
                      (./engine/graphics):00004                 * Subroutine to determine if sprites are gonna be erased and/or drawn
                      (./engine/graphics):00005                 * Read Display Priority Structure (back to front)
                      (./engine/graphics):00006                 * priority: 0 - unregistred
                      (./engine/graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./engine/graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./engine/graphics):00009                 *
                      (./engine/graphics):00010                 ********************************************************************************
                      (./engine/graphics):00011                 * x_pixel and y_pixel coordinate system
                      (./engine/graphics):00012                 * x coordinates:
                      (./engine/graphics):00013                 *    - off-screen left 00-2F (0-47)
                      (./engine/graphics):00014                 *    - on screen 30-CF (48-207)
                      (./engine/graphics):00015                 *    - off-screen right D0-FF (208-255)
                      (./engine/graphics):00016                 *
                      (./engine/graphics):00017                 * y coordinates:
                      (./engine/graphics):00018                 *    - off-screen top 00-1B (0-27)
                      (./engine/graphics):00019                 *    - on screen 1C-E3 (28-227)
                      (./engine/graphics):00020                 *    - off-screen bottom E4-FF (228-255)
                      (./engine/graphics):00021                 ********************************************************************************
                      (./engine/graphics):00022                 * input REG : none
                      (./engine/graphics):00023                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00024                 
     9FB1             (./engine/graphics):00025                 _image_center_parity     equ dp_engine    ; word - a byte with left zero pad byte
     9FB3             (./engine/graphics):00026                 _image_subset            equ dp_engine+2  ; word 
     9FB5             (./engine/graphics):00027                 _mapping_frame           equ dp_engine+4  ; word - ptr to page and routine address
     9FB7             (./engine/graphics):00028                 _page_draw_routine       equ dp_engine+6  ; byte - compilated sprite page
     9FB8             (./engine/graphics):00029                 _draw_routine            equ dp_engine+7  ; word - compilated sprite routine address
     9FBA             (./engine/graphics):00030                 _x1_pixel                equ dp_engine+9  ; word
     9FBC             (./engine/graphics):00031                 _y1_pixel                equ dp_engine+11 ; word
     9FBE             (./engine/graphics):00032                 _x_size                  equ dp_engine+13 ; word - a byte with left zero pad byte
     9FC0             (./engine/graphics):00033                 _y_size                  equ dp_engine+15 ; word - a byte with left zero pad byte
     9FC2             (./engine/graphics):00034                 _x_pos                   equ dp_engine+17 ; word
     9FC4             (./engine/graphics):00035                 _y_pos                   equ dp_engine+19 ; word
     9FC6             (./engine/graphics):00036                 _image_set               equ dp_engine+21 ; word
     9FC8             (./engine/graphics):00037                 _nbchild                 equ dp_engine+23 ; byte
     9FC9             (./engine/graphics):00038                 _render_flags            equ dp_engine+24 ; byte
                      (./engine/graphics):00039                 
     9F               (./engine/graphics):00040                         setdp dp/256
                      (./engine/graphics):00041                 
6693                  (./engine/graphics):00042                 BuildSprites
6693 8400             (./engine/graphics):00043 [2]     525             anda  #0         ; init tmp variables
6695 97BE             (./engine/graphics):00044 [4]     529             sta   _x_size
6697 97C0             (./engine/graphics):00045 [4]     533             sta   _y_size
6699 97B1             (./engine/graphics):00046 [4]     537             sta   _image_center_parity
                      (./engine/graphics):00047                 
669B FE65F6           (./engine/graphics):00048 [6]     543             ldu   Tbl_Priority_Last_Entry+16
669E 2703             (./engine/graphics):00049 [3]     546             beq   >
66A0 BD66E2           (./engine/graphics):00050 [8]     554             jsr   @process   
66A3 FE65F4           (./engine/graphics):00051 [6]     560     !       ldu   Tbl_Priority_Last_Entry+14
66A6 2703             (./engine/graphics):00052 [3]     563             beq   >
66A8 BD66E2           (./engine/graphics):00053 [8]     571             jsr   @process   
66AB FE65F2           (./engine/graphics):00054 [6]     577     !       ldu   Tbl_Priority_Last_Entry+12
66AE 2703             (./engine/graphics):00055 [3]     580             beq   >
66B0 BD66E2           (./engine/graphics):00056 [8]     588             jsr   @process   
66B3 FE65F0           (./engine/graphics):00057 [6]     594     !       ldu   Tbl_Priority_Last_Entry+10
66B6 2703             (./engine/graphics):00058 [3]     597             beq   >
66B8 BD66E2           (./engine/graphics):00059 [8]     605             jsr   @process   
66BB FE65EE           (./engine/graphics):00060 [6]     611     !       ldu   Tbl_Priority_Last_Entry+8
66BE 2703             (./engine/graphics):00061 [3]     614             beq   >
66C0 BD66E2           (./engine/graphics):00062 [8]     622             jsr   @process               
66C3 FE65EC           (./engine/graphics):00063 [6]     628     !       ldu   Tbl_Priority_Last_Entry+6
66C6 2703             (./engine/graphics):00064 [3]     631             beq   >
66C8 BD66E2           (./engine/graphics):00065 [8]     639             jsr   @process      
66CB FE65EA           (./engine/graphics):00066 [6]     645     !       ldu   Tbl_Priority_Last_Entry+4
66CE 2703             (./engine/graphics):00067 [3]     648             beq   >
66D0 BD66E2           (./engine/graphics):00068 [8]     656             jsr   @process  
66D3 FE65E8           (./engine/graphics):00069 [6]     662     !       ldu   Tbl_Priority_Last_Entry+2
66D6 2703             (./engine/graphics):00070 [3]     665             beq   >
66D8 7E66E2           (./engine/graphics):00071 [4]     669             jmp   @process
66DB 39               (./engine/graphics):00072 [5]     674     !       rts
66DC                  (./engine/graphics):00073                 @nextobject1
66DC EEC835           (./engine/graphics):00074 [6]     680             ldu   rsv_priority_prev_obj,u
66DF 2601             (./engine/graphics):00075 [3]     683             bne   @process   
66E1 39               (./engine/graphics):00076 [5]     688             rts
66E2                  (./engine/graphics):00077                 @process
66E2 A642             (./engine/graphics):00078 [5]     693             lda   render_flags,u
66E4 8580             (./engine/graphics):00079 [2]     695             bita  #render_hide_mask             ; skip hidden sprites
66E6 26F4             (./engine/graphics):00080 [3]     698             bne   @nextobject1 
66E8 8540             (./engine/graphics):00081 [2]     700             bita  #render_subobjects_mask       ; is this a child multisprite sprite object?
66EA 1026016D         (./engine/graphics):00082 [5+?]   705             lbne  @multisprite
66EE 97C9             (./engine/graphics):00083 [4]     709             sta   _render_flags     
                      (./engine/graphics):00084                 ;
                      (./engine/graphics):00085                 ; ****************************************************
                      (./engine/graphics):00086                 ; SingleSprite rendering
                      (./engine/graphics):00087                 ; ----------------------
                      (./engine/graphics):00088                 ; ****************************************************
                      (./engine/graphics):00089                 ;
                      (./engine/graphics):00090                         ; compute imageset
                      (./engine/graphics):00091                         ; ----------------
                      (./engine/graphics):00092                 ;
                      (./engine/graphics):00093                 ;       load image index for this object       
66F0 8E7941           (./engine/graphics):00094 [3]     712             ldx   #Img_Page_Index
66F3 8400             (./engine/graphics):00095 [2]     714             anda  #0           
66F5 E6C4             (./engine/graphics):00096 [4]     718             ldb   id,u                          ; get object id
66F7 A68B             (./engine/graphics):00097 [8]     726             lda   d,x                           ; retrieve page that store imagesets for this object id
                      (./engine/graphics):00098                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
66F9 BD6B59           (    _SetCartPageA):00002 [8]     734             jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
66FC AEC810           (./engine/graphics):00099 [6]     740             ldx   image_set,u                   ; get current imageset associated with this object
                      (./engine/graphics):00100                 ;
                      (./engine/graphics):00101                 ;       store image properties in dp
66FF EC04             (./engine/graphics):00102 [6]     746             ldd   image_x_size,x                
6701 97BF             (./engine/graphics):00103 [4]     750             sta   _x_size+1
6703 D7C1             (./engine/graphics):00104 [4]     754             stb   _y_size+1
6705 E606             (./engine/graphics):00105 [5]     759             ldb   image_center_offset,x
6707 D7B2             (./engine/graphics):00106 [4]     763             stb   _image_center_parity+1        ; store image center parity
                      (./engine/graphics):00107                 ;
                      (./engine/graphics):00108                 ;       set the active image subset based on mirror flags
6709 96C9             (./engine/graphics):00109 [4]     767             lda   _render_flags
670B 8403             (./engine/graphics):00110 [2]     769             anda  #render_xmirror_mask|render_ymirror_mask
670D E686             (./engine/graphics):00111 [5]     774             ldb   a,x
670F 27CB             (./engine/graphics):00112 [3]     777             beq   @nextobject1                  ; no defined subset images
6711 3085             (./engine/graphics):00113 [5]     782             leax  b,x                           ; read imageset index that match image mirror
6713 9FB3             (./engine/graphics):00114 [5]     787             stx   _image_subset
                      (./engine/graphics):00115                 ;
                      (./engine/graphics):00116                         ; compute mapping frame
                      (./engine/graphics):00117                         ; ---------------------
                      (./engine/graphics):00118                         ; The image subset reference up to 4 version of an image
                      (./engine/graphics):00119                         ; Draw/Erase, Draw routines and shifted version by 1 pixel of these two routines
                      (./engine/graphics):00120                         ; The following code set the appropriate routine that will draw the image
                      (./engine/graphics):00121                         ; First thing is to check if the image position is odd or even
                      (./engine/graphics):00122                         ; and select the appropriate routine. If no routine is found, it will select the avaible routine.
                      (./engine/graphics):00123                         ; -- only use the Draw routine here --
                      (./engine/graphics):00124                 ;
6715 96C9             (./engine/graphics):00125 [4]     791             lda   _render_flags
6717 8408             (./engine/graphics):00126 [2]     793             anda  #render_playfieldcoord_mask
6719 2709             (./engine/graphics):00127 [3]     796             beq   @a                            ; branch if position is already expressed in screen coordinate
671B ECC812           (./engine/graphics):00128 [6]     802             ldd   x_pos,u 
671E DDC2             (./engine/graphics):00129 [5]     807             std   _x_pos
6720 93E6             (./engine/graphics):00130 [6]     813             subd  glb_camera_x_pos
6722 2003             (./engine/graphics):00131 [3]     816             bra   @b
6724 E6C818           (./engine/graphics):00132 [5]     821     @a      ldb   x_pixel,u                     ; compute mapping_frame 
6727 D8B2             (./engine/graphics):00133 [4]     825     @b      eorb  _image_center_parity+1        ; case of odd image center switch shifted image with normal
6729 C401             (./engine/graphics):00134 [2]     827             andb  #1                            ; index of sub image is encoded in two bits: 00|B0, 01|D0, 10|B1, 11|D1         
672B 58               (./engine/graphics):00135 [2]     829             aslb                                ; set bit1 for 1px shifted image  
672C CA01             (./engine/graphics):00136 [2]     831             orb   #1                            ; set bit0 for overlay sprite
672E A685             (./engine/graphics):00137 [5]     836     @c      lda   b,x
6730 2706             (./engine/graphics):00138 [3]     839             beq   @nodefinedframe
6732 3086             (./engine/graphics):00139 [5]     844             leax  a,x                           ; read image subset index
6734 9FB5             (./engine/graphics):00140 [5]     849             stx   _mapping_frame
6736 2012             (./engine/graphics):00141 [3]     852             bra   >
6738                  (./engine/graphics):00142                 @nodefinedframe
6738 C802             (./engine/graphics):00143 [2]     854             eorb  #%00000010                    ; check if there is an alternate shifted image available
673A 2704             (./engine/graphics):00144 [3]     857             beq   @d
673C 0CB2             (./engine/graphics):00145 [6]     863             inc   _image_center_parity+1        ; ajust offset for alternate
673E 2002             (./engine/graphics):00146 [3]     866             bra   @e
6740 0AB2             (./engine/graphics):00147 [6]     872     @d      dec   _image_center_parity+1
6742 A685             (./engine/graphics):00148 [5]     877     @e      lda   b,x
6744 2796             (./engine/graphics):00149 [3]     880             beq   @nextobject1                  ; no defined frame, nothing will be displayed
6746 3086             (./engine/graphics):00150 [5]     885             leax  a,x                           ; read image subset index
6748 9FB5             (./engine/graphics):00151 [5]     890             stx   _mapping_frame
                      (./engine/graphics):00152                 !
674A A684             (./engine/graphics):00153 [4]     894             lda   page_draw_routine,x           ; save compiled sprite routine
674C 97B7             (./engine/graphics):00154 [4]     898             sta   _page_draw_routine
674E EC01             (./engine/graphics):00155 [6]     904             ldd   draw_routine,x
6750 DDB8             (./engine/graphics):00156 [5]     909             std   _draw_routine
                      (./engine/graphics):00157                 ;
                      (./engine/graphics):00158                         ; check out of range position 
                      (./engine/graphics):00159                         ; ---------------------------       
6752 96C9             (./engine/graphics):00160 [4]     913             lda   _render_flags
6754 8520             (./engine/graphics):00161 [2]     915             bita  #render_no_range_ctrl_mask
6756 102600BD         (./engine/graphics):00162 [5+?]   920             lbne  @computescreenaddress         ; skip out of range control if option is set
675A 8408             (./engine/graphics):00163 [2]     922             anda  #render_playfieldcoord_mask
675C 2767             (./engine/graphics):00164 [3]     925             beq   @screencoordinates            ; branch if position is already expressed in screen coordinate
                      (./engine/graphics):00165                 ;
                      (./engine/graphics):00166                         ; playfield coordinates
675E ECC815           (./engine/graphics):00167 [6]     931             ldd   y_pos,u
6761 DDC4             (./engine/graphics):00168 [5]     936             std   _y_pos
6763                  (./engine/graphics):00169                 @processPlayfieldCoordinates
6763 9EB3             (./engine/graphics):00170 [5]     941             ldx   _image_subset
6765 E604             (./engine/graphics):00171 [5]     946             ldb   image_subset_x1_offset,x
6767 1D               (./engine/graphics):00172 [2]     948             sex
6768 DDBA             (./engine/graphics):00173 [5]     953             std   _x1_pixel
676A E605             (./engine/graphics):00174 [5]     958             ldb   image_subset_y1_offset,x
676C 1D               (./engine/graphics):00175 [2]     960             sex
676D DDBC             (./engine/graphics):00176 [5]     965             std   _y1_pixel
                      (./engine/graphics):00177                 ;
676F DCC2             (./engine/graphics):00178 [5]     970             ldd   _x_pos 
6771 D3BA             (./engine/graphics):00179 [6]     976             addd  _x1_pixel
6773 D3DA             (./engine/graphics):00180 [6]     982             addd  glb_camera_x_offset 
6775 D3DA             (./engine/graphics):00181 [6]     988             addd  glb_camera_x_offset ; use border from other side of the screen 
6777 1093E6           (./engine/graphics):00182 [7]     995             cmpd  glb_camera_x_pos
677A 2D41             (./engine/graphics):00183 [3]     998             blt   @nextobject
                      (./engine/graphics):00184                 ;
677C D3BE             (./engine/graphics):00185 [6]     1004            addd  _x_size
677E 8300A0           (./engine/graphics):00186 [4]     1008            subd  #160 ; screen width
6781 93DA             (./engine/graphics):00187 [6]     1014            subd  glb_camera_x_offset ; use border from other side of the screen 
6783 93DA             (./engine/graphics):00188 [6]     1020            subd  glb_camera_x_offset ; use border from other side of the screen 
6785 1093E6           (./engine/graphics):00189 [7]     1027            cmpd  glb_camera_x_pos
6788 2C33             (./engine/graphics):00190 [3]     1030            bge   @nextobject
                      (./engine/graphics):00191                 ;
678A DCC4             (./engine/graphics):00192 [5]     1035            ldd   _y_pos 
678C D3BC             (./engine/graphics):00193 [6]     1041            addd  _y1_pixel
678E D3D8             (./engine/graphics):00194 [6]     1047            addd  glb_camera_y_offset 
6790 1093E4           (./engine/graphics):00195 [7]     1054            cmpd  glb_camera_y_pos
6793 2D28             (./engine/graphics):00196 [3]     1057            blt   @nextobject
                      (./engine/graphics):00197                 ;
6795 D3C0             (./engine/graphics):00198 [6]     1063            addd  _y_size
6797 8300C8           (./engine/graphics):00199 [4]     1067            subd  #200 ; screen height
679A 1093E4           (./engine/graphics):00200 [7]     1074            cmpd  glb_camera_y_pos
679D 2C1E             (./engine/graphics):00201 [3]     1077            bge   @nextobject
                      (./engine/graphics):00202                 ;
                      (./engine/graphics):00203                 ;       convert playfield position to screen position
                      (./engine/graphics):00204                 ;       ---------------------------------------------
679F DCC4             (./engine/graphics):00205 [5]     1082            ldd   _y_pos 
67A1 D3D8             (./engine/graphics):00206 [6]     1088            addd  glb_camera_y_offset
67A3 93E4             (./engine/graphics):00207 [6]     1094            subd  glb_camera_y_pos        
67A5 F767BA           (./engine/graphics):00208 [5]     1099            stb   @ypx
67A8 DCC2             (./engine/graphics):00209 [5]     1104            ldd   _x_pos                        ; convert playfield position to screen position
67AA D3DA             (./engine/graphics):00210 [6]     1110            addd  glb_camera_x_offset
67AC 93B1             (./engine/graphics):00211 [6]     1116            subd  _image_center_parity
67AE 93E6             (./engine/graphics):00212 [6]     1122            subd  glb_camera_x_pos
67B0 2405             (./engine/graphics):00213 [3]     1125            bcc   >                             ; no carry, continue
67B2 C060             (./engine/graphics):00214 [2]     1127            subb  #$60                          ; skip x position (ignore 160-255 values )
67B4 7A67BA           (./engine/graphics):00215 [7]     1134            dec   @ypx                          ; move y position one line up
67B7 1F98             (./engine/graphics):00216 [6]     1140    !       tfr   b,a
67B9 C600             (./engine/graphics):00217 [2]     1142            ldb   #0 ; d is loaded with xy_pixel
     67BA             (./engine/graphics):00218                 @ypx    equ   *-1         
67BB 205A             (./engine/graphics):00219 [3]     1145            bra   @computescreenaddress
67BD                  (./engine/graphics):00220                 @nextobject
67BD EEC835           (./engine/graphics):00221 [6]     1151            ldu   rsv_priority_prev_obj,u
67C0 1026FF1E         (./engine/graphics):00222 [5+?]   1156            lbne  @process   
67C4 39               (./engine/graphics):00223 [5]     1161            rts
67C5                  (./engine/graphics):00224                 @screencoordinates
                      (./engine/graphics):00225                         ; screen coordinates
67C5 E6C819           (./engine/graphics):00226 [5]     1166            ldb   y_pixel,u                     ; check if sprite is fully in screen vertical range
67C8 9EB3             (./engine/graphics):00227 [5]     1171            ldx   _image_subset
67CA EB05             (./engine/graphics):00228 [5]     1176            addb  image_subset_y1_offset,x
67CC C1E3             (./engine/graphics):00229 [2]     1178            cmpb  #screen_bottom
67CE 22ED             (./engine/graphics):00230 [3]     1181            bhi   @nextobject
67D0 C11C             (./engine/graphics):00231 [2]     1183            cmpb  #screen_top
67D2 25E9             (./engine/graphics):00232 [3]     1186            blo   @nextobject        
67D4 D7BD             (./engine/graphics):00233 [4]     1190            stb   _y1_pixel+1
67D6 DBC1             (./engine/graphics):00234 [4]     1194            addb  _y_size+1
67D8 C1E3             (./engine/graphics):00235 [2]     1196            cmpb  #screen_bottom
67DA 22E1             (./engine/graphics):00236 [3]     1199            bhi   @nextobject
67DC C11C             (./engine/graphics):00237 [2]     1201            cmpb  #screen_top
67DE 25DD             (./engine/graphics):00238 [3]     1204            blo   @nextobject        
67E0 D1BD             (./engine/graphics):00239 [4]     1208            cmpb  _y1_pixel+1                    ; check wrapping
67E2 25D9             (./engine/graphics):00240 [3]     1211            blo   @nextobject
                      (./engine/graphics):00241                 ;               
67E4 96C9             (./engine/graphics):00242 [4]     1215            lda   _render_flags                 ; check if sprite is fully in screen horizontal range
67E6 8510             (./engine/graphics):00243 [2]     1217            bita  #render_xloop_mask
67E8 261F             (./engine/graphics):00244 [3]     1220            bne   @setposition
                      (./engine/graphics):00245                 ;
67EA E6C818           (./engine/graphics):00246 [5]     1225            ldb   x_pixel,u
67ED 9EB3             (./engine/graphics):00247 [5]     1230            ldx   _image_subset
67EF EB04             (./engine/graphics):00248 [5]     1235            addb  image_subset_x1_offset,x
67F1 C1CF             (./engine/graphics):00249 [2]     1237            cmpb  #screen_right
67F3 22C8             (./engine/graphics):00250 [3]     1240            bhi   @nextobject
67F5 C130             (./engine/graphics):00251 [2]     1242            cmpb  #screen_left
67F7 25C4             (./engine/graphics):00252 [3]     1245            blo   @nextobject
67F9 D7BB             (./engine/graphics):00253 [4]     1249            stb   _x1_pixel+1
67FB DBBF             (./engine/graphics):00254 [4]     1253            addb  _x_size+1
67FD C1CF             (./engine/graphics):00255 [2]     1255            cmpb  #screen_right
67FF 22BC             (./engine/graphics):00256 [3]     1258            bhi   @nextobject
6801 C130             (./engine/graphics):00257 [2]     1260            cmpb  #screen_left
6803 25B8             (./engine/graphics):00258 [3]     1263            blo   @nextobject
6805 D1BB             (./engine/graphics):00259 [4]     1267            cmpb  _x1_pixel+1                   ; check wrapping
6807 25B4             (./engine/graphics):00260 [3]     1270            blo   @nextobject 
6809                  (./engine/graphics):00261                 @setposition
6809 ECC818           (./engine/graphics):00262 [6]     1276            ldd   xy_pixel,u                    ; load x position (48-207) and y position (28-227) in one operation
680C 90B2             (./engine/graphics):00263 [4]     1280            suba  _image_center_parity+1
680E 8030             (./engine/graphics):00264 [2]     1282            suba  #48                           ; move x ref. to 0
6810 2403             (./engine/graphics):00265 [3]     1285            bcc   >                             ; no carry, continue
6812 8060             (./engine/graphics):00266 [2]     1287            suba  #$60                          ; x-loop, skip x_pixel (160-255)
6814 5A               (./engine/graphics):00267 [2]     1289            decb                                ; get x position one line up
6815 C01C             (./engine/graphics):00268 [2]     1291    !       subb  #28                           ; move y ref. to 0
6817                  (./engine/graphics):00269                 @computescreenaddress
6817 44               (./engine/graphics):00270 [2]     1293            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
6818 44               (./engine/graphics):00271 [2]     1295            lsra                                ; x=x/2, RAMA RAMB enterlace  
6819 2511             (./engine/graphics):00272 [3]     1298            bcs   @ram2                         ; Branch if write must begin in RAM2 first
681B                  (./engine/graphics):00273                 @ram1
681B B76823           (./engine/graphics):00274 [5]     1303            sta   @lbyte1
681E 8628             (./engine/graphics):00275 [2]     1305            lda   #40                           ; 40 bytes per line in RAMA or RAMB
6820 3D               (./engine/graphics):00276 [11]    1316            mul
6821 C3C000           (./engine/graphics):00277 [4]     1320            addd  #$C000                        ; (dynamic)
     6823             (./engine/graphics):00278                 @lbyte1 equ   *-1
6824 DDEE             (./engine/graphics):00279 [5]     1325            std   glb_screen_location_2
6826 8020             (./engine/graphics):00280 [2]     1327            suba  #$20
6828 DDF0             (./engine/graphics):00281 [5]     1332            std   glb_screen_location_1     
682A 2010             (./engine/graphics):00282 [3]     1335            bra   >
682C                  (./engine/graphics):00283                 @ram2
682C B76834           (./engine/graphics):00284 [5]     1340            sta   @lbyte2
682F 8628             (./engine/graphics):00285 [2]     1342            lda   #40                           ; 40 bytes per line in RAMA or RAMB
6831 3D               (./engine/graphics):00286 [11]    1353            mul
6832 C3A000           (./engine/graphics):00287 [4]     1357            addd  #$A000                        ; (dynamic)
     6834             (./engine/graphics):00288                 @lbyte2 equ   *-1      
6835 DDEE             (./engine/graphics):00289 [5]     1362            std   glb_screen_location_2
6837 C32001           (./engine/graphics):00290 [4]     1366            addd  #$2001
683A DDF0             (./engine/graphics):00291 [5]     1371            std   glb_screen_location_1
                      (./engine/graphics):00292                 !
683C 96B7             (./engine/graphics):00293 [4]     1375            lda   _page_draw_routine
                      (./engine/graphics):00294                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
683E BD6B59           (    _SetCartPageA):00002 [8]     1383            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6841 FF684B           (./engine/graphics):00295 [6]     1389            stu   @u                 
6844 DEEE             (./engine/graphics):00296 [5]     1394            ldu   glb_screen_location_2
6846 AD9F9FB8         (./engine/graphics):00297 [12]    1406            jsr   [_draw_routine]               ; draw compilated sprite on screen
684A CE0000           (./engine/graphics):00298 [3]     1409            ldu   #0                 
     684B             (./engine/graphics):00299                 @u      equ   *-2
                      (./engine/graphics):00300                 ;
684D 96C9             (./engine/graphics):00301 [4]     1413            lda   _render_flags
684F 8A80             (./engine/graphics):00302 [2]     1415            ora   #render_hide_mask             ; set hide flag
6851 A742             (./engine/graphics):00303 [5]     1420            sta   render_flags,u        
6853                  (./engine/graphics):00304                 @nextobject2
6853 EEC835           (./engine/graphics):00305 [6]     1426            ldu   rsv_priority_prev_obj,u
6856 1026FE88         (./engine/graphics):00306 [5+?]   1431            lbne  @process   
685A 39               (./engine/graphics):00307 [5]     1436    @rts    rts
                      (./engine/graphics):00308                 ;
                      (./engine/graphics):00309                 ; ****************************************************
                      (./engine/graphics):00310                 ; MultiSprite rendering
                      (./engine/graphics):00311                 ; ---------------------
                      (./engine/graphics):00312                 ; ****************************************************
                      (./engine/graphics):00313                 ;
685B                  (./engine/graphics):00314                 @multisprite
685B 8A80             (./engine/graphics):00315 [2]     1438            ora   #render_hide_mask             ; set hide flag
685D A742             (./engine/graphics):00316 [5]     1443            sta   render_flags,u  
685F A641             (./engine/graphics):00317 [5]     1448            lda   mainspr_childsprites,u
6861 97C8             (./engine/graphics):00318 [4]     1452            sta   _nbchild
6863 E6C4             (./engine/graphics):00319 [4]     1456            ldb   id,u                          ; get object id
6865 F76870           (./engine/graphics):00320 [5]     1461            stb   @id
6868 314F             (./engine/graphics):00321 [5]     1466            leay  sub2_x_pos,u
686A                  (./engine/graphics):00322                 @computeimageset
                      (./engine/graphics):00323                         ; compute imageset
                      (./engine/graphics):00324                         ; ----------------
686A 8E7941           (./engine/graphics):00325 [3]     1469            ldx   #Img_Page_Index               ; this code set the active image subset based on mirror flags
686D A6890080         (./engine/graphics):00326 [8]     1477            lda   128,x                         ; (dynamic) retrieve page that store imagesets for this object id
     6870             (./engine/graphics):00327                 @id     equ   *-1
                      (./engine/graphics):00328                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
6871 BD6B59           (    _SetCartPageA):00002 [8]     1485            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6874 AE24             (./engine/graphics):00329 [6]     1491            ldx   4,y ; get child imageset
6876 9FC6             (./engine/graphics):00330 [5]     1496            stx   _image_set
6878 E606             (./engine/graphics):00331 [5]     1501            ldb   image_center_offset,x
687A D7B2             (./engine/graphics):00332 [4]     1505            stb   _image_center_parity+1        ; store image center parity
687C E684             (./engine/graphics):00333 [4]     1509            ldb   ,x                            ; ND_ image
687E 3085             (./engine/graphics):00334 [5]     1514            leax  b,x                           ; read imageset index
6880 9FB3             (./engine/graphics):00335 [5]     1519            stx   _image_subset
6882 EC22             (./engine/graphics):00336 [6]     1525            ldd   2,y
6884 DDC4             (./engine/graphics):00337 [5]     1530            std   _y_pos
6886 ECA4             (./engine/graphics):00338 [5]     1535            ldd   ,y
6888 DDC2             (./engine/graphics):00339 [5]     1540            std   _x_pos
688A BD6895           (./engine/graphics):00340 [8]     1548            jsr   @processMulti
688D 0AC8             (./engine/graphics):00341 [6]     1554            dec   _nbchild
688F 27C2             (./engine/graphics):00342 [3]     1557            beq   @nextobject2
6891 3126             (./engine/graphics):00343 [5]     1562            leay  next_subspr,y
6893 20D5             (./engine/graphics):00344 [3]     1565            bra   @computeimageset
6895                  (./engine/graphics):00345                 @processMulti
                      (./engine/graphics):00346                 
                      (./engine/graphics):00347                         ; compute mapping frame
                      (./engine/graphics):00348                         ; ---------------------
                      (./engine/graphics):00349                         ; The image subset reference up to 4 version of an image
                      (./engine/graphics):00350                         ; Draw/Erase, Draw routines and shifted version by 1 pixel of these two routines
                      (./engine/graphics):00351                         ; The following code set the appropriate routine that will draw the image
                      (./engine/graphics):00352                         ; First thing is to check if the image position is odd or even
                      (./engine/graphics):00353                         ; and select the appropriate routine. If no routine is found, it will select the avaible routine.
                      (./engine/graphics):00354                 ;
6895 93E6             (./engine/graphics):00355 [6]     1571            subd  glb_camera_x_pos
6897 D8B2             (./engine/graphics):00356 [4]     1575            eorb  _image_center_parity+1        ; case of odd image center switch shifted image with normal
6899 C401             (./engine/graphics):00357 [2]     1577            andb  #1                            ; index of sub image is encoded in two bits: 00|B0, 01|D0, 10|B1, 11|D1         
689B 58               (./engine/graphics):00358 [2]     1579            aslb                                ; set bit1 for 1px shifted image  
689C CA01             (./engine/graphics):00359 [2]     1581            orb   #1                            ; set bit0 for overlay sprite
689E A685             (./engine/graphics):00360 [5]     1586    @c      lda   b,x
68A0 2707             (./engine/graphics):00361 [3]     1589            beq   @nodefinedframe
68A2 3086             (./engine/graphics):00362 [5]     1594            leax  a,x                           ; read image subset index
68A4 9FB5             (./engine/graphics):00363 [5]     1599            stx   _mapping_frame
68A6 2013             (./engine/graphics):00364 [3]     1602            bra   >
68A8 39               (./engine/graphics):00365 [5]     1607    @rts    rts
68A9                  (./engine/graphics):00366                 @nodefinedframe
68A9 C802             (./engine/graphics):00367 [2]     1609            eorb  #%00000010                    ; check if there is an alternate shifted image available
68AB 2704             (./engine/graphics):00368 [3]     1612            beq   @d
68AD 0CB2             (./engine/graphics):00369 [6]     1618            inc   _image_center_parity+1        ; ajust offset for alternate
68AF 2002             (./engine/graphics):00370 [3]     1621            bra   @e
68B1 0AB2             (./engine/graphics):00371 [6]     1627    @d      dec   _image_center_parity+1
68B3 A685             (./engine/graphics):00372 [5]     1632    @e      lda   b,x
68B5 27F1             (./engine/graphics):00373 [3]     1635            beq   @rts                          ; no defined frame, nothing will be displayed
68B7 3086             (./engine/graphics):00374 [5]     1640            leax  a,x                           ; read image subset index
68B9 9FB5             (./engine/graphics):00375 [5]     1645            stx   _mapping_frame
                      (./engine/graphics):00376                 !
68BB A684             (./engine/graphics):00377 [4]     1649            lda   page_draw_routine,x           ; save compiled sprite routine
68BD 97B7             (./engine/graphics):00378 [4]     1653            sta   _page_draw_routine
68BF EC01             (./engine/graphics):00379 [6]     1659            ldd   draw_routine,x
68C1 DDB8             (./engine/graphics):00380 [5]     1664            std   _draw_routine
                      (./engine/graphics):00381                 ;
68C3 9EB3             (./engine/graphics):00382 [5]     1669            ldx   _image_subset
68C5 E604             (./engine/graphics):00383 [5]     1674            ldb   image_subset_x1_offset,x
68C7 1D               (./engine/graphics):00384 [2]     1676            sex
68C8 DDBA             (./engine/graphics):00385 [5]     1681            std   _x1_pixel
68CA E605             (./engine/graphics):00386 [5]     1686            ldb   image_subset_y1_offset,x
68CC 1D               (./engine/graphics):00387 [2]     1688            sex
68CD DDBC             (./engine/graphics):00388 [5]     1693            std   _y1_pixel
68CF 9EC6             (./engine/graphics):00389 [5]     1698            ldx   _image_set
68D1 EC04             (./engine/graphics):00390 [6]     1704            ldd   image_x_size,x
68D3 97BF             (./engine/graphics):00391 [4]     1708            sta   _x_size+1
68D5 D7C1             (./engine/graphics):00392 [4]     1712            stb   _y_size+1
                      (./engine/graphics):00393                 ;
68D7 DCC2             (./engine/graphics):00394 [5]     1717            ldd   _x_pos 
68D9 D3BA             (./engine/graphics):00395 [6]     1723            addd  _x1_pixel
68DB D3DA             (./engine/graphics):00396 [6]     1729            addd  glb_camera_x_offset 
68DD D3DA             (./engine/graphics):00397 [6]     1735            addd  glb_camera_x_offset ; use border from other side of the screen 
68DF 1093E6           (./engine/graphics):00398 [7]     1742            cmpd  glb_camera_x_pos
68E2 2DC4             (./engine/graphics):00399 [3]     1745            blt   @rts
                      (./engine/graphics):00400                 ;
68E4 D3BE             (./engine/graphics):00401 [6]     1751            addd  _x_size
68E6 8300A0           (./engine/graphics):00402 [4]     1755            subd  #160 ; screen width
68E9 93DA             (./engine/graphics):00403 [6]     1761            subd  glb_camera_x_offset ; use border from other side of the screen 
68EB 93DA             (./engine/graphics):00404 [6]     1767            subd  glb_camera_x_offset ; use border from other side of the screen 
68ED 1093E6           (./engine/graphics):00405 [7]     1774            cmpd  glb_camera_x_pos
68F0 2CB6             (./engine/graphics):00406 [3]     1777            bge   @rts
                      (./engine/graphics):00407                 ;
68F2 DCC4             (./engine/graphics):00408 [5]     1782            ldd   _y_pos 
68F4 D3BC             (./engine/graphics):00409 [6]     1788            addd  _y1_pixel
68F6 D3D8             (./engine/graphics):00410 [6]     1794            addd  glb_camera_y_offset 
68F8 1093E4           (./engine/graphics):00411 [7]     1801            cmpd  glb_camera_y_pos
68FB 2DAB             (./engine/graphics):00412 [3]     1804            blt   @rts
                      (./engine/graphics):00413                 ;
68FD D3C0             (./engine/graphics):00414 [6]     1810            addd  _y_size
68FF 8300C8           (./engine/graphics):00415 [4]     1814            subd  #200 ; screen height
6902 1093E4           (./engine/graphics):00416 [7]     1821            cmpd  glb_camera_y_pos
6905 2CA1             (./engine/graphics):00417 [3]     1824            bge   @rts
                      (./engine/graphics):00418                 ;
6907 DCC4             (./engine/graphics):00419 [5]     1829            ldd   _y_pos 
6909 D3D8             (./engine/graphics):00420 [6]     1835            addd  glb_camera_y_offset
690B 93E4             (./engine/graphics):00421 [6]     1841            subd  glb_camera_y_pos        
690D F76922           (./engine/graphics):00422 [5]     1846            stb   @ypx
6910 DCC2             (./engine/graphics):00423 [5]     1851            ldd   _x_pos                        ; convert playfield position to screen position
6912 D3DA             (./engine/graphics):00424 [6]     1857            addd  glb_camera_x_offset
6914 93B1             (./engine/graphics):00425 [6]     1863            subd  _image_center_parity
6916 93E6             (./engine/graphics):00426 [6]     1869            subd  glb_camera_x_pos
6918 2405             (./engine/graphics):00427 [3]     1872            bcc   >                             ; no carry, continue
691A C060             (./engine/graphics):00428 [2]     1874            subb  #$60                          ; skip x position (ignore 160-255 values )
691C 7A6922           (./engine/graphics):00429 [7]     1881            dec   @ypx                          ; move y position one line up
691F 1F98             (./engine/graphics):00430 [6]     1887    !       tfr   b,a
6921 C600             (./engine/graphics):00431 [2]     1889            ldb   #0 ; d is loaded with xy_pixel
     6922             (./engine/graphics):00432                 @ypx    equ   *-1        
6923 44               (./engine/graphics):00433 [2]     1891            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
6924 44               (./engine/graphics):00434 [2]     1893            lsra                                ; x=x/2, RAMA RAMB enterlace  
6925 2511             (./engine/graphics):00435 [3]     1896            bcs   @ram2                         ; Branch if write must begin in RAM2 first
6927                  (./engine/graphics):00436                 @ram1
6927 B7692F           (./engine/graphics):00437 [5]     1901            sta   @lbyte1
692A 8628             (./engine/graphics):00438 [2]     1903            lda   #40                           ; 40 bytes per line in RAMA or RAMB
692C 3D               (./engine/graphics):00439 [11]    1914            mul
692D C3C000           (./engine/graphics):00440 [4]     1918            addd  #$C000                        ; (dynamic)
     692F             (./engine/graphics):00441                 @lbyte1 equ   *-1
6930 DDEE             (./engine/graphics):00442 [5]     1923            std   glb_screen_location_2
6932 8020             (./engine/graphics):00443 [2]     1925            suba  #$20
6934 DDF0             (./engine/graphics):00444 [5]     1930            std   glb_screen_location_1     
6936 2010             (./engine/graphics):00445 [3]     1933            bra   >
6938                  (./engine/graphics):00446                 @ram2
6938 B76940           (./engine/graphics):00447 [5]     1938            sta   @lbyte2
693B 8628             (./engine/graphics):00448 [2]     1940            lda   #40                           ; 40 bytes per line in RAMA or RAMB
693D 3D               (./engine/graphics):00449 [11]    1951            mul
693E C3A000           (./engine/graphics):00450 [4]     1955            addd  #$A000                        ; (dynamic)
     6940             (./engine/graphics):00451                 @lbyte2 equ   *-1      
6941 DDEE             (./engine/graphics):00452 [5]     1960            std   glb_screen_location_2
6943 C32001           (./engine/graphics):00453 [4]     1964            addd  #$2001
6946 DDF0             (./engine/graphics):00454 [5]     1969            std   glb_screen_location_1
                      (./engine/graphics):00455                 !
6948 96B7             (./engine/graphics):00456 [4]     1973            lda   _page_draw_routine
                      (./engine/graphics):00457                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
694A BD6B59           (    _SetCartPageA):00002 [8]     1981            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
694D 3460             (./engine/graphics):00458 [9]     1990            pshs  u,y                 
694F DEEE             (./engine/graphics):00459 [5]     1995            ldu   glb_screen_location_2
6951 AD9F9FB8         (./engine/graphics):00460 [12]    2007            jsr   [_draw_routine]               ; draw compilated sprite on screen
6955 35E0             (./engine/graphics):00461 [11]    2018            puls  u,y,pc   
                      (./engine/graphics):00003                         INCLUDE "./engine/graphics/sprite/overlay-mode/DeleteObject.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * DeleteObject
                      (./engine/graphics):00003                 * ------------
                      (./engine/graphics):00004                 * Subroutine to remove an object from display priority list
                      (./engine/graphics):00005                 * and to delete object data in OST
                      (./engine/graphics):00006                 *
                      (./engine/graphics):00007                 * DeleteObject
                      (./engine/graphics):00008                 * input REG : [u] object pointer (OST)
                      (./engine/graphics):00009                 *
                      (./engine/graphics):00010                 * DeleteObject_x
                      (./engine/graphics):00011                 * input REG : [x] object pointer (OST)
                      (./engine/graphics):00012                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00013                 
6957                  (./engine/graphics):00014                 DeleteObject_x
6957                  (./engine/graphics):00015                 DeleteObject2
6957 3456             (./engine/graphics):00016 [11]    2029            pshs  d,x,u
6959 3384             (./engine/graphics):00017 [4]     2033            leau  ,x   
695B 2002             (./engine/graphics):00018 [3]     2036            bra   @start
695D                  (./engine/graphics):00019                 DeleteObject
695D 3456             (./engine/graphics):00020 [11]    2047            pshs  d,x,u
695F                  (./engine/graphics):00021                 @start
695F ECC835           (./engine/graphics):00022 [6]     2053            ldd   rsv_priority_prev_obj,u
6962 2611             (./engine/graphics):00023 [3]     2056            bne   @chainPrev
6964 A6C834           (./engine/graphics):00024 [5]     2061            lda   rsv_priority,u
6967 48               (./engine/graphics):00025 [2]     2063            lsla
6968 108E65D4         (./engine/graphics):00026 [4]     2067            ldy   #Tbl_Priority_First_Entry
696C 31A6             (./engine/graphics):00027 [5]     2072            leay  a,y
696E ECC837           (./engine/graphics):00028 [6]     2078            ldd   rsv_priority_next_obj,u
6971 EDA4             (./engine/graphics):00029 [5]     2083            std   ,y
6973 200A             (./engine/graphics):00030 [3]     2086            bra   @checkPrioNext
6975                  (./engine/graphics):00031                 @chainPrev
6975 ECC837           (./engine/graphics):00032 [6]     2092            ldd   rsv_priority_next_obj,u
6978 10AEC835         (./engine/graphics):00033 [7]     2099            ldy   rsv_priority_prev_obj,u        
697C EDA837           (./engine/graphics):00034 [6]     2105            std   rsv_priority_next_obj,y        
697F                  (./engine/graphics):00035                 @checkPrioNext       
697F ECC837           (./engine/graphics):00036 [6]     2111            ldd   rsv_priority_next_obj,u
6982 2614             (./engine/graphics):00037 [3]     2114            bne   @chainNext
6984 A6C834           (./engine/graphics):00038 [5]     2119            lda   rsv_priority,u
6987 48               (./engine/graphics):00039 [2]     2121            lsla
6988 108E65E6         (./engine/graphics):00040 [4]     2125            ldy   #Tbl_Priority_Last_Entry
698C 31A6             (./engine/graphics):00041 [5]     2130            leay  a,y
698E ECC835           (./engine/graphics):00042 [6]     2136            ldd   rsv_priority_prev_obj,u
6991 EDA4             (./engine/graphics):00043 [5]     2141            std   ,y
6993 BD6A25           (./engine/graphics):00044 [8]     2149            jsr   UnloadObject_u
6996 35D6             (./engine/graphics):00045 [13]    2162            puls  d,x,u,pc
6998                  (./engine/graphics):00046                 @chainNext
6998 ECC835           (./engine/graphics):00047 [6]     2168            ldd   rsv_priority_prev_obj,u
699B 10AEC837         (./engine/graphics):00048 [7]     2175            ldy   rsv_priority_next_obj,u        
699F EDA835           (./engine/graphics):00049 [6]     2181            std   rsv_priority_prev_obj,y
69A2 BD6A25           (./engine/graphics):00050 [8]     2189            jsr   UnloadObject_u
69A5 35D6             (./engine/graphics):00051 [13]    2202            puls  d,x,u,pc        
                      (./engine/graphics):00052                 
                      (./engine/graphics):00053                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00054                                                                       *; Subroutine to delete an object
                      (./engine/graphics):00055                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00056                                                                       *
                      (./engine/graphics):00057                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00058                                                                       *
                      (./engine/graphics):00059                                                                       *; freeObject:
                      (./engine/graphics):00060                                                                       *DeleteObject:
                      (./engine/graphics):00061                                                                       *        movea.l a0,a1
                      (./engine/graphics):00062                                                                       *
                      (./engine/graphics):00063                                                                       *; sub_164E8:
                      (./engine/graphics):00064                                                                       *DeleteObject2:
                      (./engine/graphics):00065                                                                       *        moveq   #0,d1
                      (./engine/graphics):00066                                                                       *
                      (./engine/graphics):00067                                                                       *        moveq   #bytesToLcnt(next_object),d0 ; we want to clear up to the next object
                      (./engine/graphics):00068                                                                       *        ; delete the object by setting all of its bytes to 0
                      (./engine/graphics):00069                                                                       *-       move.l  d1,(a1)+
                      (./engine/graphics):00070                                                                       *        dbf     d0,-
                      (./engine/graphics):00071                                                                       *    if object_size&3
                      (./engine/graphics):00072                                                                       *        move.w  d1,(a1)+
                      (./engine/graphics):00073                                                                       *    endif
                      (./engine/graphics):00074                                                                       *
                      (./engine/graphics):00075                                                                       *        rts
                      (./engine/graphics):00076                                                                       *; End of function DeleteObject2                                         
                      (C:\Users\bhrou\gi):00088                         
                      (C:\Users\bhrou\gi):00089                         ; basic object management
                      (C:\Users\bhrou\gi):00090                         INCLUDE "./engine/object-management/RunObjects.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * RunObjects
                      (./engine/object-m):00003                 * ------------
                      (./engine/object-m):00004                 * Subroutines to run, load and unload objects
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * RunObjects
                      (./engine/object-m):00007                 * ----------
                      (./engine/object-m):00008                 * Run all object's code
                      (./engine/object-m):00009                 *
                      (./engine/object-m):00010                 * LoadObject_u, LoadObject_x
                      (./engine/object-m):00011                 * --------------------------
                      (./engine/object-m):00012                 * Find a empty object slot and link the new object in run list
                      (./engine/object-m):00013                 * return zero flag when no more memory avaible
                      (./engine/object-m):00014                 * return the allocated memory in u or x
                      (./engine/object-m):00015                 *
                      (./engine/object-m):00016                 * UnloadObject_u, UnloadObject_x
                      (./engine/object-m):00017                 * ------------------------------
                      (./engine/object-m):00018                 * Unlink object (u or x) from run list and clear object's data
                      (./engine/object-m):00019                 *
                      (./engine/object-m):00020                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00021                 
69A7 0000             (./engine/object-m):00022                 object_list_first fdb   0
69A9 0000             (./engine/object-m):00023                 object_list_last  fdb   0
                      (./engine/object-m):00024                 
69AB                  (./engine/object-m):00025                 RunObjects
69AB FE69A7           (./engine/object-m):00026 [6]     2208            ldu   object_list_first
69AE 271E             (./engine/object-m):00027 [3]     2211            beq   @rts
69B0 E6C4             (./engine/object-m):00028 [4]     2215    !       ldb   id,u                     ; Load an object with id=0 allows to book a empty slot
69B2 271B             (./engine/object-m):00029 [3]     2218            beq   @skip                    ; that will be usable later, we need to skip in this case (no object index)
69B4 8E7920           (./engine/object-m):00030 [3]     2221            ldx   #Obj_Index_Page
69B7 3A               (./engine/object-m):00031 [3]     2224            abx
69B8 A684             (./engine/object-m):00032 [4]     2228            lda   ,x              
                      (./engine/object-m):00033                         _SetCartPageA         
                      (    _SetCartPageA):00001                  IFDEF T2
69BA BD6B59           (    _SetCartPageA):00002 [8]     2236            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
69BD 58               (./engine/object-m):00034 [2]     2238            aslb                  
69BE 8E7923           (./engine/object-m):00035 [3]     2241            ldx   #Obj_Index_Address
69C1 3A               (./engine/object-m):00036 [3]     2244            abx
69C2 EC45             (./engine/object-m):00037 [6]     2250            ldd   run_object_next,u        ; in case of self-deletion by current object
69C4 FD69CA           (./engine/object-m):00038 [6]     2256            std   object_list_next         ; we need to save the next object in run list
69C7 AD94             (./engine/object-m):00039 [10]    2266            jsr   [,x]              
69C9 CE0000           (./engine/object-m):00040 [3]     2269            ldu   #0
     69CA             (./engine/object-m):00041                 object_list_next equ   *-2    
69CC 26E2             (./engine/object-m):00042 [3]     2272            bne   <         
69CE 39               (./engine/object-m):00043 [5]     2277    @rts    rts   
69CF EE45             (./engine/object-m):00044 [6]     2283    @skip   ldu   run_object_next,u
69D1 26DD             (./engine/object-m):00045 [3]     2286            bne   <
69D3 39               (./engine/object-m):00046 [5]     2291            rts
                      (./engine/object-m):00047                 
69D4                  (./engine/object-m):00048                 LoadObject_u
69D4 CE615E           (./engine/object-m):00049 [3]     2294            ldu   #Dynamic_Object_RAM
69D7                  (./engine/object-m):00050                 @loop
69D7 6DC4             (./engine/object-m):00051 [6]     2300            tst   ,u
69D9 270A             (./engine/object-m):00052 [3]     2303            beq   @link
69DB 33C839           (./engine/object-m):00053 [5]     2308            leau  next_object,u
69DE 118365D2         (./engine/object-m):00054 [5]     2313            cmpu  #Dynamic_Object_RAM_End
69E2 26F3             (./engine/object-m):00055 [3]     2316            bne   @loop
69E4 39               (./engine/object-m):00056 [5]     2321            rts                            ; return z=1 when not found
69E5                  (./engine/object-m):00057                 @link
69E5 3410             (./engine/object-m):00058 [7]     2328            pshs  x
69E7 BE69A9           (./engine/object-m):00059 [6]     2334            ldx   object_list_last
69EA 2709             (./engine/object-m):00060 [3]     2337            beq   >
69EC EF05             (./engine/object-m):00061 [6]     2343            stu   run_object_next,x
69EE FF69A9           (./engine/object-m):00062 [6]     2349            stu   object_list_last
69F1 AF43             (./engine/object-m):00063 [6]     2355            stx   run_object_prev,u
69F3 3590             (./engine/object-m):00064 [9]     2364            puls  x,pc                     ; return z=0 when found
69F5 FF69A9           (./engine/object-m):00065 [6]     2370    !       stu   object_list_last
69F8 FF69A7           (./engine/object-m):00066 [6]     2376            stu   object_list_first
69FB 3590             (./engine/object-m):00067 [9]     2385            puls  x,pc                     ; return z=0 when found
                      (./engine/object-m):00068                 
69FD                  (./engine/object-m):00069                 LoadObject_x
69FD 8E615E           (./engine/object-m):00070 [3]     2388            ldx   #Dynamic_Object_RAM
6A00                  (./engine/object-m):00071                 @loop
6A00 6D84             (./engine/object-m):00072 [6]     2394            tst   ,x
6A02 2709             (./engine/object-m):00073 [3]     2397            beq   @link
6A04 308839           (./engine/object-m):00074 [5]     2402            leax  next_object,x
6A07 8C65D2           (./engine/object-m):00075 [4]     2406            cmpx  #Dynamic_Object_RAM_End
6A0A 26F4             (./engine/object-m):00076 [3]     2409            bne   @loop
6A0C 39               (./engine/object-m):00077 [5]     2414            rts                            ; return z=1 when not found
6A0D                  (./engine/object-m):00078                 @link
6A0D 3440             (./engine/object-m):00079 [7]     2421            pshs  u
6A0F FE69A9           (./engine/object-m):00080 [6]     2427            ldu   object_list_last
6A12 2709             (./engine/object-m):00081 [3]     2430            beq   >
6A14 AF45             (./engine/object-m):00082 [6]     2436            stx   run_object_next,u
6A16 BF69A9           (./engine/object-m):00083 [6]     2442            stx   object_list_last
6A19 EF03             (./engine/object-m):00084 [6]     2448            stu   run_object_prev,x
6A1B 35C0             (./engine/object-m):00085 [9]     2457            puls  u,pc                     ; return z=0 when found
6A1D BF69A9           (./engine/object-m):00086 [6]     2463    !       stx   object_list_last
6A20 BF69A7           (./engine/object-m):00087 [6]     2469            stx   object_list_first
6A23 35C0             (./engine/object-m):00088 [9]     2478            puls  u,pc                     ; return z=0 when found
                      (./engine/object-m):00089                 
6A25                  (./engine/object-m):00090                 UnloadObject_u
6A25 3476             (./engine/object-m):00091 [13]    2491            pshs  d,x,y,u
6A27 11B369CA         (./engine/object-m):00092 [8]     2499            cmpu  object_list_next         ; if current object to delete
6A2B 2609             (./engine/object-m):00093 [3]     2502            bne   >                        ; is the following to execute
6A2D 10AE45           (./engine/object-m):00094 [7]     2509            ldy   run_object_next,u
6A30 10BF69CA         (./engine/object-m):00095 [7]     2516            sty   object_list_next         ; then update the next object in RunObjects routine
6A34 2716             (./engine/object-m):00096 [3]     2519            beq   @noNext
6A36 10AE45           (./engine/object-m):00097 [7]     2526    !       ldy   run_object_next,u
6A39 2711             (./engine/object-m):00098 [3]     2529            beq   @noNext
6A3B AE43             (./engine/object-m):00099 [6]     2535            ldx   run_object_prev,u
6A3D AF23             (./engine/object-m):00100 [6]     2541            stx   run_object_prev,y
6A3F 2705             (./engine/object-m):00101 [3]     2544            beq   @noPrev
6A41 10AF05           (./engine/object-m):00102 [7]     2551            sty   run_object_next,x
6A44 2015             (./engine/object-m):00103 [3]     2554            bra   @clearObj
6A46 10BF69A7         (./engine/object-m):00104 [7]     2561    @noPrev sty   object_list_first
6A4A 200F             (./engine/object-m):00105 [3]     2564            bra   @clearObj
6A4C AE43             (./engine/object-m):00106 [6]     2570    @noNext ldx   run_object_prev,u
6A4E 2703             (./engine/object-m):00107 [3]     2573            beq   >
6A50 10AF05           (./engine/object-m):00108 [7]     2580            sty   run_object_next,x
6A53 BF69A9           (./engine/object-m):00109 [6]     2586    !       stx   object_list_last
6A56 2603             (./engine/object-m):00110 [3]     2589            bne   @clearObj
6A58 BF69A7           (./engine/object-m):00111 [6]     2595            stx   object_list_first
6A5B                  (./engine/object-m):00112                 @clearObj
6A5B 33C839           (./engine/object-m):00113 [5]     2600            leau  object_size,u ; move to end of data object structure
6A5E                  (./engine/object-m):00114                 UnloadObject_clear
6A5E CC0000           (./engine/object-m):00115 [3]     2603            ldd   #$0000        ; init regs to zero
6A61 8E0000           (./engine/object-m):00116 [3]     2606            ldx   #$0000
6A64 3184             (./engine/object-m):00117 [4]     2610            leay  ,x
                      (./engine/object-m):00118                 
6A66 3636363636363636 (./engine/object-m):00119                         fill $36,(object_size/6)*2 ; generate object_size/6 assembly instructions $3636 (pshu  d,x,y) 
     3636363636363636
     3636
                      (./engine/object-m):00120                 
                      (./engine/object-m):00121                         IFEQ object_size%6-5
                      (./engine/object-m):00122                         pshu  a,x,y
                      (./engine/object-m):00123                         ENDC
                      (./engine/object-m):00124                 
                      (./engine/object-m):00125                         IFEQ object_size%6-4
                      (./engine/object-m):00126                         pshu  d,x
                      (./engine/object-m):00127                         ENDC
                      (./engine/object-m):00128                 
                      (./engine/object-m):00129                         IFEQ object_size%6-3
6A78 3612             (./engine/object-m):00130 [8]     2618            pshu  a,x
                      (./engine/object-m):00131                         ENDC
                      (./engine/object-m):00132                 
                      (./engine/object-m):00133                         IFEQ object_size%6-2
                      (./engine/object-m):00134                         pshu  d
                      (./engine/object-m):00135                         ENDC
                      (./engine/object-m):00136                 
                      (./engine/object-m):00137                         IFEQ object_size%6-1
                      (./engine/object-m):00138                         pshu  a
                      (./engine/object-m):00139                         ENDC
                      (./engine/object-m):00140                 
6A7A 35F6             (./engine/object-m):00141 [15]    2633            puls  d,x,y,u,pc
                      (./engine/object-m):00142                 
6A7C                  (./engine/object-m):00143                 UnloadObject_x
6A7C 3476             (./engine/object-m):00144 [13]    2646            pshs  d,x,y,u
6A7E BC69CA           (./engine/object-m):00145 [7]     2653            cmpx  object_list_next         ; if current object to delete
6A81 2626             (./engine/object-m):00146 [3]     2656            bne   >                        ; is the following to execute
6A83 10AE05           (./engine/object-m):00147 [7]     2663            ldy   run_object_next,x
6A86 10BF69CA         (./engine/object-m):00148 [7]     2670            sty   object_list_next         ; then update the next object in RunObjects routine
6A8A 2716             (./engine/object-m):00149 [3]     2673            beq   @noNext
6A8C 10AE05           (./engine/object-m):00150 [7]     2680            ldy   run_object_next,x 
6A8F 2711             (./engine/object-m):00151 [3]     2683            beq   @noNext
6A91 EE03             (./engine/object-m):00152 [6]     2689            ldu   run_object_prev,x
6A93 EF23             (./engine/object-m):00153 [6]     2695            stu   run_object_prev,y
6A95 2705             (./engine/object-m):00154 [3]     2698            beq   @noPrev
6A97 10AF45           (./engine/object-m):00155 [7]     2705            sty   run_object_next,u
6A9A 2015             (./engine/object-m):00156 [3]     2708            bra   @clearObj
6A9C 10BF69A7         (./engine/object-m):00157 [7]     2715    @noPrev sty   object_list_first
6AA0 200F             (./engine/object-m):00158 [3]     2718            bra   @clearObj
6AA2 EE03             (./engine/object-m):00159 [6]     2724    @noNext ldu   run_object_prev,x
6AA4 2703             (./engine/object-m):00160 [3]     2727            beq   >
6AA6 10AF45           (./engine/object-m):00161 [7]     2734            sty   run_object_next,u
6AA9 FF69A9           (./engine/object-m):00162 [6]     2740    !       stu   object_list_last
6AAC 2603             (./engine/object-m):00163 [3]     2743            bne   @clearObj
6AAE BF69A7           (./engine/object-m):00164 [6]     2749            stx   object_list_first
6AB1                  (./engine/object-m):00165                 @clearObj
6AB1 338839           (./engine/object-m):00166 [5]     2754            leau  object_size,x ; move to end of data object structure
6AB4 20A8             (./engine/object-m):00167 [3]     2757            bra   UnloadObject_clear
                      (C:\Users\bhrou\gi):00091                 
                      (C:\Users\bhrou\gi):00092                         ; utilities
                      (C:\Users\bhrou\gi):00093                         INCLUDE "./engine/InitGlobals.asm"
                      (./engine/InitGlob):00001                 
6AB6                  (./engine/InitGlob):00002                 InitGlobals
6AB6 CC0000           (./engine/InitGlob):00003 [3]     2760            ldd   #0
                      (./engine/InitGlob):00004                 
                      (./engine/InitGlob):00005                         ; clear direct_page data
6AB9 8E9F00           (./engine/InitGlob):00006 [3]     2763            ldx   #dp
6ABC 8600             (./engine/InitGlob):00007 [2]     2765            lda   #0
6ABE A780             (./engine/InitGlob):00008 [6]     2771    !       sta   ,x+
6AC0 8CA000           (./engine/InitGlob):00009 [4]     2775            cmpx  #dp+256
6AC3 26F9             (./engine/InitGlob):00010 [3]     2778            bne   <
                      (./engine/InitGlob):00011                 
                      (./engine/InitGlob):00012                  ifdef DrawSprites
                      (./engine/InitGlob):00013                         ldd   #screen_left
                      (./engine/InitGlob):00014                         std   glb_camera_x_offset
                      (./engine/InitGlob):00015                         ldd   #screen_top
                      (./engine/InitGlob):00016                         std   glb_camera_y_offset
                      (./engine/InitGlob):00017                  endc
                      (./engine/InitGlob):00018                 
6AC5 8601             (./engine/InitGlob):00019 [2]     2780            lda   #1
6AC7 97D5             (./engine/InitGlob):00020 [4]     2784            sta   glb_alphaTiles
6AC9 39               (./engine/InitGlob):00021 [5]     2789            rts
                      (C:\Users\bhrou\gi):00094                         INCLUDE "./engine/ram/ClearDataMemory.asm"
                      (./engine/ram/Clea):00001                 ********************************************************************************
                      (./engine/ram/Clea):00002                 * Clear memory in data area (16Ko)
                      (./engine/ram/Clea):00003                 * [X] : word that will be copied in the whole page
                      (./engine/ram/Clea):00004                 ********************************************************************************
                      (./engine/ram/Clea):00005                 
6ACA                  (./engine/ram/Clea):00006                 ClearDataMem 
6ACA 3448             (./engine/ram/Clea):00007 [8]     2797            pshs  u,dp
6ACC 10FF6AFA         (./engine/ram/Clea):00008 [7]     2804            sts   ClearDataMem_3+2
6AD0 10CEE000         (./engine/ram/Clea):00009 [4]     2808            lds   #$E000
6AD4 3384             (./engine/ram/Clea):00010 [4]     2812            leau  ,x
6AD6 3184             (./engine/ram/Clea):00011 [4]     2816            leay  ,x
6AD8 1F10             (./engine/ram/Clea):00012 [6]     2822            tfr   x,d
6ADA 1F8B             (./engine/ram/Clea):00013 [6]     2828            tfr   a,dp
6ADC                  (./engine/ram/Clea):00014                 ClearDataMem_2
6ADC 347E             (./engine/ram/Clea):00015 [14]    2842            pshs  u,y,x,dp,b,a
6ADE 347E             (./engine/ram/Clea):00016 [14]    2856            pshs  u,y,x,dp,b,a
6AE0 347E             (./engine/ram/Clea):00017 [14]    2870            pshs  u,y,x,dp,b,a
6AE2 347E             (./engine/ram/Clea):00018 [14]    2884            pshs  u,y,x,dp,b,a
6AE4 347E             (./engine/ram/Clea):00019 [14]    2898            pshs  u,y,x,dp,b,a
6AE6 347E             (./engine/ram/Clea):00020 [14]    2912            pshs  u,y,x,dp,b,a
6AE8 347E             (./engine/ram/Clea):00021 [14]    2926            pshs  u,y,x,dp,b,a
6AEA 347E             (./engine/ram/Clea):00022 [14]    2940            pshs  u,y,x,dp,b,a
6AEC 347E             (./engine/ram/Clea):00023 [14]    2954            pshs  u,y,x,dp,b,a
6AEE 3478             (./engine/ram/Clea):00024 [12]    2966            pshs  u,y,x,dp
6AF0 118CA010         (./engine/ram/Clea):00025 [5]     2971            cmps  #$A010                        
6AF4 26E6             (./engine/ram/Clea):00026 [3]     2974            bne   ClearDataMem_2
6AF6 33E4             (./engine/ram/Clea):00027 [4]     2978            leau  ,s        
6AF8                  (./engine/ram/Clea):00028                 ClearDataMem_3        
6AF8 10CE0000         (./engine/ram/Clea):00029 [4]     2982            lds   #$0000        ; start of memory should not be written with S as an index because of IRQ        
6AFC 3636             (./engine/ram/Clea):00030 [11]    2993            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
6AFE 3636             (./engine/ram/Clea):00031 [11]    3004            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine (here 16 bytes of margin)
6B00 3616             (./engine/ram/Clea):00032 [9]     3013            pshu  d,x
6B02 35C8             (./engine/ram/Clea):00033 [10]    3023            puls  dp,u,pc
                      (C:\Users\bhrou\gi):00095                         INCLUDE "./engine/graphics/vbl/WaitVBL.asm"
                      (./engine/graphics):00001                 ********************************************************************************
                      (./engine/graphics):00002                 * Attente VBL
                      (./engine/graphics):00003                 * Alternance de la page 2 et 3 entre affichage et espace cartouche
                      (./engine/graphics):00004                 * Alternance de la RAMA et RAM B dans l'espace ecran
                      (./engine/graphics):00005                 * ------------------------------------------------------------------------------
                      (./engine/graphics):00006                 *
                      (./engine/graphics):00007                 * Page Affichee par l'automate Video
                      (./engine/graphics):00008                 * ----------------------------------
                      (./engine/graphics):00009                 *   $E7DD determine la page affichee a l'ecran
                      (./engine/graphics):00010                 *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : page 0
                      (./engine/graphics):00011                 *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : page 1
                      (./engine/graphics):00012                 *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : page 2
                      (./engine/graphics):00013                 *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : page 3
                      (./engine/graphics):00014                 *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : couleur du cadre
                      (./engine/graphics):00015                 *   Remarque : bit5 et bit4 utilisable uniquement en mode MO
                      (./engine/graphics):00016                 *
                      (./engine/graphics):00017                 * Page en espace cartouche
                      (./engine/graphics):00018                 * ------------------------
                      (./engine/graphics):00019                 *   $E7E6 determine la page visible dans l'espace cartouche (0000 a 3FFF)
                      (./engine/graphics):00020                 *   bit7 toujours a 0
                      (./engine/graphics):00021                 *   bit6=1 : ecriture autorisee
                      (./engine/graphics):00022                 *   bit5=1 : espace cartouche recouvert par de la RAM
                      (./engine/graphics):00023                 *   bit4=0 : CAS1N valide : banques 0-15 / 1 = CAS2N valide : banques 16-31
                      (./engine/graphics):00024                 *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bit0=0 (#$60) : page 0
                      (./engine/graphics):00025                 *   ...
                      (./engine/graphics):00026                 *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bit0=1 (#$6F) : page 15
                      (./engine/graphics):00027                 *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bit0=0 (#$70) : page 16
                      (./engine/graphics):00028                 *   ...
                      (./engine/graphics):00029                 *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bit0=1 (#$7F) : page 31
                      (./engine/graphics):00030                 *
                      (./engine/graphics):00031                 * Demi-Page 0 en espace ecran (4000 a 5FFF)
                      (./engine/graphics):00032                 * -----------------------------------------
                      (./engine/graphics):00033                 *   $E7C3 determine la demi-page de la page 0 visible dans l'espace ecran
                      (./engine/graphics):00034                 *   bit0=0 : 8Ko RAMA
                      (./engine/graphics):00035                 *   bit0=1 : 8ko RAMB
                      (./engine/graphics):00036                 *
                      (./engine/graphics):00037                 * Page en espace donnees
                      (./engine/graphics):00038                 * ----------------------
                      (./engine/graphics):00039                 * lda   #$04
                      (./engine/graphics):00040                 * sta   $E7E5                    * selection de la page 04 en RAM Donnees (A000-DFFF)
                      (./engine/graphics):00041                 *
                      (./engine/graphics):00042                 ********************************************************************************
6B04                  (./engine/graphics):00043                 WaitVBL
                      (./engine/graphics):00044                  ifdef DO_NOT_WAIT_VBL
                      (./engine/graphics):00045                         ldd   Vint_runcount
                      (./engine/graphics):00046                         subd  Vint_Last_runcount
                      (./engine/graphics):00047                         cmpb  #2
                      (./engine/graphics):00048                         bhs   SwapVideoPage
                      (./engine/graphics):00049                  endc
6B04                  (./engine/graphics):00050                 @a
6B04 7DE7E7           (./engine/graphics):00051 [7]     3030            tst   $E7E7              * le faisceau n'est pas dans l'ecran
6B07 2AFB             (./engine/graphics):00052 [3]     3033            bpl   @a                 * tant que le bit est a 0 on boucle
6B09                  (./engine/graphics):00053                 @b
6B09 7DE7E7           (./engine/graphics):00054 [7]     3040            tst   $E7E7              * le faisceau est dans l'ecran
6B0C 2BFB             (./engine/graphics):00055 [3]     3043            bmi   @b                 * tant que le bit est a 1 on boucle
                      (./engine/graphics):00056                                         
6B0E                  (./engine/graphics):00057                 SwapVideoPage
6B0E F66B1C           (./engine/graphics):00058 [5]     3048            ldb   am_SwapVideoPage+1 * charge la valeur du ldb suivant am_SwapVideoPage
6B11 C440             (./engine/graphics):00059 [2]     3050            andb  #$40               * alterne bit6=0 et bit6=1 (suivant la valeur B $00 ou $FF)
6B13                  (./engine/graphics):00060                 glb_screen_border_color        
6B13 CA80             (./engine/graphics):00061 [2]     3052            orb   #$80               * bit7=1, bit3 a bit0=couleur de cadre (ici 0)
6B15 F7E7DD           (./engine/graphics):00062 [5]     3057            stb   $E7DD              * changement page (2 ou 3) affichee a l'ecran
6B18 736B1C           (./engine/graphics):00063 [7]     3064            com   am_SwapVideoPage+1 * alterne $00 et $FF sur le ldb suivant am_SwapVideoPage
6B1B                  (./engine/graphics):00064                 am_SwapVideoPage
6B1B C600             (./engine/graphics):00065 [2]     3066            ldb   #$00
6B1D C401             (./engine/graphics):00066 [2]     3068            andb  #$01               * alterne bit0=0 et bit0=1 (suivant la valeur B $00 ou $FF)
6B1F F76B58           (./engine/graphics):00067 [5]     3073            stb   glb_Cur_Wrk_Screen_Id
6B22 CA02             (./engine/graphics):00068 [2]     3075            orb   #$02               * bit1=1
6B24 F7E7E5           (./engine/graphics):00069 [5]     3080            stb   $E7E5              * changement page (2 ou 3) visible dans l'espace donnees
6B27 F6E7C3           (./engine/graphics):00070 [5]     3085            ldb   $E7C3              * charge l'identifiant de la demi-page 0 configuree en espace ecran
6B2A C801             (./engine/graphics):00071 [2]     3087            eorb  #$01               * alterne bit0 = 0 ou 1 changement demi-page de la page 0 visible dans l'espace ecran
6B2C F7E7C3           (./engine/graphics):00072 [5]     3092            stb   $E7C3
                      (./engine/graphics):00073                         
6B2F 7C6B50           (./engine/graphics):00074 [7]     3099            inc   glb_Main_runcount+1
6B32 2603             (./engine/graphics):00075 [3]     3102            bne   @a
6B34 7C6B4F           (./engine/graphics):00076 [7]     3109            inc   glb_Main_runcount  
6B37                  (./engine/graphics):00077                 @a
                      (./engine/graphics):00078                 
6B37 FC6B51           (./engine/graphics):00079 [6]     3115            ldd   Vint_runcount            ; store in Vint_Main_runcount the number of elapsed 50Hz frames
6B3A B36B53           (./engine/graphics):00080 [7]     3122            subd  Vint_Last_runcount       ; used in AnimateSpriteSync
6B3D F16B57           (./engine/graphics):00081 [5]     3127            cmpb  Vint_Main_runcount_cap   ; allow to cap Animation and Mvt Sync
6B40 2303             (./engine/graphics):00082 [3]     3130            bls   @a
6B42 F66B57           (./engine/graphics):00083 [5]     3135            ldb   Vint_Main_runcount_cap
6B45 F76B56           (./engine/graphics):00084 [5]     3140    @a      stb   Vint_Main_runcount
                      (./engine/graphics):00085                 
6B48 FC6B51           (./engine/graphics):00086 [6]     3146            ldd   Vint_runcount
6B4B FD6B53           (./engine/graphics):00087 [6]     3152            std   Vint_Last_runcount
                      (./engine/graphics):00088                 
6B4E 39               (./engine/graphics):00089 [5]     3157            rts
                      (./engine/graphics):00090                         
6B4F 0000             (./engine/graphics):00091                 glb_Main_runcount      fdb   0 ; page swap counter
6B51 0000             (./engine/graphics):00092                 Vint_runcount          fdb   0 ; incremented in 50Hz IRQ
6B53 0000             (./engine/graphics):00093                 Vint_Last_runcount     fdb   0
6B55 00               (./engine/graphics):00094                 Vint_Main_runcount_w   fcb   0 ; pad to be able to load Vint_Main_runcount as a word
6B56 00               (./engine/graphics):00095                 Vint_Main_runcount     fcb   0
6B57 FF               (./engine/graphics):00096                 Vint_Main_runcount_cap fcb   -1
6B58 00               (./engine/graphics):00097                 glb_Cur_Wrk_Screen_Id  fcb   0 ; screen buffer set to write operations (0 or 1)
                      (C:\Users\bhrou\gi):00096                         INCLUDE "./engine/ram/BankSwitch.asm"
                      (./engine/ram/Bank):00001                 ; WARNING those are subroutines, so no dp should be used
                      (./engine/ram/Bank):00002                 ; because dp will be specific to caller
                      (./engine/ram/Bank):00003                 
6B59                  (./engine/ram/Bank):00004                 SetCartPageA
6B59 B79FD1           (./engine/ram/Bank):00005 [5]     3162            sta   >glb_Page
6B5C 2A25             (./engine/ram/Bank):00006 [3]     3165            bpl   @RAMPg
6B5E B6E7E6           (./engine/ram/Bank):00007 [5]     3170            lda   >$E7E6
6B61 84DF             (./engine/ram/Bank):00008 [2]     3172            anda  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
6B63 B7E7E6           (./engine/ram/Bank):00009 [5]     3177            sta   >$E7E6
6B66 86F0             (./engine/ram/Bank):00010 [2]     3179            lda   #$F0                     ; sortie du mode commande T.2
6B68 B70555           (./engine/ram/Bank):00011 [5]     3184            sta   >$0555                   ; dans le cas ou l'irq intervient en cours de changement de page
6B6B 86AA             (./engine/ram/Bank):00012 [2]     3186            lda   #$AA                     ; sequence pour commutation de page T.2
6B6D B70555           (./engine/ram/Bank):00013 [5]     3191            sta   >$0555
6B70 44               (./engine/ram/Bank):00014 [2]     3193            lsra                           ; lda   #$55
6B71 B702AA           (./engine/ram/Bank):00015 [5]     3198            sta   >$02AA
6B74 86C0             (./engine/ram/Bank):00016 [2]     3200            lda   #$C0
6B76 B70555           (./engine/ram/Bank):00017 [5]     3205            sta   >$0555
6B79 B69FD1           (./engine/ram/Bank):00018 [5]     3210            lda   >glb_Page
6B7C 847F             (./engine/ram/Bank):00019 [2]     3212            anda  #$7F                     ; le bit 7 doit etre a 0        
6B7E B70555           (./engine/ram/Bank):00020 [5]     3217            sta   >$0555                   ; selection de la page T.2 en zone cartouche
6B81 2003             (./engine/ram/Bank):00021 [3]     3220            bra   @rts
6B83 B7E7E6           (./engine/ram/Bank):00022 [5]     3225    @RAMPg  sta   >$E7E6                   ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
6B86 39               (./engine/ram/Bank):00023 [5]     3230    @rts    rts
                      (./engine/ram/Bank):00024                 
6B87                  (./engine/ram/Bank):00025                 SetCartPageB
6B87 F79FD1           (./engine/ram/Bank):00026 [5]     3235            stb   >glb_Page
6B8A 2A25             (./engine/ram/Bank):00027 [3]     3238            bpl   @RAMPg
6B8C F6E7E6           (./engine/ram/Bank):00028 [5]     3243            ldb   >$E7E6
6B8F C4DF             (./engine/ram/Bank):00029 [2]     3245            andb  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
6B91 F7E7E6           (./engine/ram/Bank):00030 [5]     3250            stb   >$E7E6
6B94 C6F0             (./engine/ram/Bank):00031 [2]     3252            ldb   #$F0                     ; sortie du mode commande T.2
6B96 F70555           (./engine/ram/Bank):00032 [5]     3257            stb   >$0555                   ; dans le cas ou l'irq intervient en cours de changement de page
6B99 C6AA             (./engine/ram/Bank):00033 [2]     3259            ldb   #$AA                     ; sequence pour commutation de page T.2
6B9B F70555           (./engine/ram/Bank):00034 [5]     3264            stb   >$0555
6B9E 54               (./engine/ram/Bank):00035 [2]     3266            lsrb                           ; lda   #$55
6B9F F702AA           (./engine/ram/Bank):00036 [5]     3271            stb   >$02AA
6BA2 C6C0             (./engine/ram/Bank):00037 [2]     3273            ldb   #$C0
6BA4 F70555           (./engine/ram/Bank):00038 [5]     3278            stb   >$0555
6BA7 F69FD1           (./engine/ram/Bank):00039 [5]     3283            ldb   >glb_Page
6BAA C47F             (./engine/ram/Bank):00040 [2]     3285            andb  #$7F                     ; le bit 7 doit etre a 0        
6BAC F70555           (./engine/ram/Bank):00041 [5]     3290            stb   >$0555                   ; selection de la page T.2 en zone cartouche
6BAF 2003             (./engine/ram/Bank):00042 [3]     3293            bra   @rts
6BB1 F7E7E6           (./engine/ram/Bank):00043 [5]     3298    @RAMPg  stb   >$E7E6                   ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
6BB4 39               (./engine/ram/Bank):00044 [5]     3303    @rts    rts
                      (./engine/ram/Bank):00045                 
6BB5                  (./engine/ram/Bank):00046                 GetCartPageA
6BB5 B69FD1           (./engine/ram/Bank):00047 [5]     3308            lda   >glb_Page                ; glb_page at 0 means that glb_page variable is not in use
6BB8 2603             (./engine/ram/Bank):00048 [3]     3311            bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
6BBA B6E7E6           (./engine/ram/Bank):00049 [5]     3316            lda   >$E7E6
6BBD 39               (./engine/ram/Bank):00050 [5]     3321    @rts    rts
                      (./engine/ram/Bank):00051                 
6BBE                  (./engine/ram/Bank):00052                 GetCartPageB
6BBE F69FD1           (./engine/ram/Bank):00053 [5]     3326            ldb   >glb_Page                ; glb_page at 0 means that glb_page variable is not in use
6BC1 2603             (./engine/ram/Bank):00054 [3]     3329            bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
6BC3 F6E7E6           (./engine/ram/Bank):00055 [5]     3334            ldb   >$E7E6
6BC6 39               (./engine/ram/Bank):00056 [5]     3339    @rts   rts
                      (./engine/ram/Bank):00057                 
                      (C:\Users\bhrou\gi):00097                         INCLUDE "./engine/object-management/RunPgSubRoutine.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * RunPgSubRoutine
                      (./engine/object-m):00003                 * ------------
                      (./engine/object-m):00004                 * Subroutine to run a another Sub Routine in a different Memory Page
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * input : PSR_Page and PSR_Address
                      (./engine/object-m):00007                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00008                 
6BC7                  (./engine/object-m):00009                 RunPgSubRoutine 
                      (./engine/object-m):00010                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
6BC7 BD6BB5           (    _GetCartPageA):00002 [8]     3347            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
6BCA B76BD6           (./engine/object-m):00011 [5]     3352            sta   PSR_RetPage
                      (./engine/object-m):00012                         
6BCD 8600             (./engine/object-m):00013 [2]     3354            lda   #0
     6BCE             (./engine/object-m):00014                 PSR_Page equ *-1
                      (./engine/object-m):00015                         _SetCartPageA                  ; set data page for sub routine to call
                      (    _SetCartPageA):00001                  IFDEF T2
6BCF BD6B59           (    _SetCartPageA):00002 [8]     3362            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6BD2 BD0000           (./engine/object-m):00016 [8]     3370            jsr   >0
     6BD3             (./engine/object-m):00017                 PSR_Address equ *-2
                      (./engine/object-m):00018                 
6BD5                  (./engine/object-m):00019                 RunPgSubRoutine_return        
6BD5 8600             (./engine/object-m):00020 [2]     3372            lda   #0
     6BD6             (./engine/object-m):00021                 PSR_RetPage equ *-1
                      (./engine/object-m):00022                         _SetCartPageA                  ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
6BD7 BD6B59           (    _SetCartPageA):00002 [8]     3380            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6BDA 39               (./engine/object-m):00023 [5]     3385            rts
                      (C:\Users\bhrou\gi):00098                         INCLUDE "./engine/joypad/InitJoypads.asm"
                      (./engine/joypad/I):00001                 
                      (./engine/joypad/I):00002                 ; $E7CE/$E7CF (bit 2) allow selection of a register in $E7CC/$E7CD:
                      (./engine/joypad/I):00003                 ; (bit2) 0: Data Direction Register A (DDRA)
                      (./engine/joypad/I):00004                 ; (bit2) 1: Peripherial Interface A (PIA) Register
                      (./engine/joypad/I):00005                 
6BDB                  (./engine/joypad/I):00006                 InitJoypads
                      (./engine/joypad/I):00007                         ; configure MC6821 to be able to read joypads (1&2) direction
6BDB B6E7CE           (./engine/joypad/I):00008 [5]     3390            lda   $E7CE  ; read Control Register A (CRA)
6BDE 84FB             (./engine/joypad/I):00009 [2]     3392            anda  #$FB   ; unset bit 2 
6BE0 B7E7CE           (./engine/joypad/I):00010 [5]     3397            sta   $E7CE  ; select Data Direction Register A (DDRA)
6BE3 C400             (./engine/joypad/I):00011 [2]     3399            andb  #0     ; unset all bits
6BE5 F7E7CC           (./engine/joypad/I):00012 [5]     3404            stb   $E7CC  ; Peripherial Interface A (PIA) lines set as input
6BE8 8A04             (./engine/joypad/I):00013 [2]     3406            ora   #$04   ; set b2
6BEA B7E7CE           (./engine/joypad/I):00014 [5]     3411            sta   $E7CE  ; select Peripherial Interface A (PIA) Register
                      (./engine/joypad/I):00015                 
                      (./engine/joypad/I):00016                         ; configure MC6821 to be able to read joypads (1&2) buttons
6BED B6E7CF           (./engine/joypad/I):00017 [5]     3416            lda   $E7CF  ; read Control Register B (CRB)
6BF0 84FB             (./engine/joypad/I):00018 [2]     3418            anda  #$FB   ; unset bit 2 
6BF2 B7E7CF           (./engine/joypad/I):00019 [5]     3423            sta   $E7CF  ; select Data Direction Register B (DDRB)
                      (./engine/joypad/I):00020                         ;ldb   #$3F  ; set DAC bits (0-5)
                      (./engine/joypad/I):00021                         ;stb   $E7CD ; DAC bits set as output
6BF5 C400             (./engine/joypad/I):00022 [2]     3425            andb  #0     ; unset all bits
6BF7 F7E7CD           (./engine/joypad/I):00023 [5]     3430            stb   $E7CD  ; Peripherial Interface B (PIB) lines set as input
6BFA 8A04             (./engine/joypad/I):00024 [2]     3432            ora   #$04   ; set b2
6BFC B7E7CF           (./engine/joypad/I):00025 [5]     3437            sta   $E7CF  ; select Peripherial Interface B (PIB) Register
6BFF 39               (./engine/joypad/I):00026 [5]     3442            rts
                      (C:\Users\bhrou\gi):00099                         INCLUDE "./engine/joypad/ReadJoypads2.asm"
                      (./engine/joypad/R):00001                 ********************************************************************************
                      (./engine/joypad/R):00002                 * Get joystick parameters (Version 2)
                      (./engine/joypad/R):00003                 *
                      (./engine/joypad/R):00004                 * Read Joypads and store result as Press and Help values :
                      (./engine/joypad/R):00005                 * One byte with direction and button for player 1
                      (./engine/joypad/R):00006                 * One byte with direction and button for player 2
                      (./engine/joypad/R):00007                 *
                      (./engine/joypad/R):00008                 * Note : to have one byte for direction and another for button, use V1
                      (./engine/joypad/R):00009                 * ------------------------------------------------------------------------------
                      (./engine/joypad/R):00010                 *
                      (./engine/joypad/R):00011                 * Joypads Direction
                      (./engine/joypad/R):00012                 * -----------------
                      (./engine/joypad/R):00013                 * Register: $E7CC (8bits)
                      (./engine/joypad/R):00014                 *
                      (./engine/joypad/R):00015                 * Joypad2     Joypad1
                      (./engine/joypad/R):00016                 * 1111        1111 (0: press | 1: release)  
                      (./engine/joypad/R):00017                 * ||||_Up     ||||_Up
                      (./engine/joypad/R):00018                 * |||__Down   |||__Down
                      (./engine/joypad/R):00019                 * ||___Left   ||___Left
                      (./engine/joypad/R):00020                 * |____Right  |____Right
                      (./engine/joypad/R):00021                 *
                      (./engine/joypad/R):00022                 * Joypads Bouttons
                      (./engine/joypad/R):00023                 * ----------------
                      (./engine/joypad/R):00024                 * Register: $E7CD (8bits)
                      (./engine/joypad/R):00025                 *
                      (./engine/joypad/R):00026                 *   [------] 6 bits DAC
                      (./engine/joypad/R):00027                 * 11 001100 (0: press | 1: release) 
                      (./engine/joypad/R):00028                 * ||   ||
                      (./engine/joypad/R):00029                 * ||   ||_ Btn B Joypad1
                      (./engine/joypad/R):00030                 * ||   |__ Btn B Joypad2
                      (./engine/joypad/R):00031                 * ||
                      (./engine/joypad/R):00032                 * ||______ Btn A Joypad1
                      (./engine/joypad/R):00033                 * |_______ Btn A Joypad2
                      (./engine/joypad/R):00034                 *
                      (./engine/joypad/R):00035                 * Result values: Joypads_Held, Joypads_Press
                      (./engine/joypad/R):00036                 * -----------------------------------------------
                      (./engine/joypad/R):00037                 * (16 bits)
                      (./engine/joypad/R):00038                 * Joypad1
                      (./engine/joypad/R):00039                 * 0000        0000 (0: release | 1: press)
                      (./engine/joypad/R):00040                 * ||||_Up     ||
                      (./engine/joypad/R):00041                 * |||__Down   ||
                      (./engine/joypad/R):00042                 * ||___Left   ||___Btn B
                      (./engine/joypad/R):00043                 * |____Right  |____Btn A
                      (./engine/joypad/R):00044                 *
                      (./engine/joypad/R):00045                 * Joypad2
                      (./engine/joypad/R):00046                 * 0000        0000 (0: release | 1: press)
                      (./engine/joypad/R):00047                 * ||||_Up     ||
                      (./engine/joypad/R):00048                 * |||__Down   ||
                      (./engine/joypad/R):00049                 * ||___Left   ||___Btn B
                      (./engine/joypad/R):00050                 * |____Right  |____Btn A
                      (./engine/joypad/R):00051                 *
                      (./engine/joypad/R):00052                 ********************************************************************************
                      (./engine/joypad/R):00053                 
                      (./engine/joypad/R):00054                 ; ---------------------------------------------------------------------------
                      (./engine/joypad/R):00055                 ; Controller Buttons
                      (./engine/joypad/R):00056                 ;
                      (./engine/joypad/R):00057                 ; Buttons bit numbers
     0004             (./engine/joypad/R):00058                 button_up                       equ   4
     0005             (./engine/joypad/R):00059                 button_down                     equ   5
     0006             (./engine/joypad/R):00060                 button_left                     equ   6
     0007             (./engine/joypad/R):00061                 button_right                    equ   7
     0002             (./engine/joypad/R):00062                 button_B                        equ   2
     0003             (./engine/joypad/R):00063                 button_C                        equ   3
     0003             (./engine/joypad/R):00064                 button_A                        equ   3
     0003             (./engine/joypad/R):00065                 button_start                    equ   3
                      (./engine/joypad/R):00066                 ; Buttons masks
     0010             (./engine/joypad/R):00067                 button_up_mask                  equ   %00010000
     0020             (./engine/joypad/R):00068                 button_down_mask                equ   %00100000
     0040             (./engine/joypad/R):00069                 button_left_mask                equ   %01000000
     0080             (./engine/joypad/R):00070                 button_right_mask               equ   %10000000
     0004             (./engine/joypad/R):00071                 button_B_mask                   equ   %00000100
     0008             (./engine/joypad/R):00072                 button_C_mask                   equ   %00001000
     0008             (./engine/joypad/R):00073                 button_A_mask                   equ   %00001000
     0008             (./engine/joypad/R):00074                 button_start_mask               equ   %00001000
                      (./engine/joypad/R):00075                 
6C00                  (./engine/joypad/R):00076                 Ctrl_1_Logical
6C00 00               (./engine/joypad/R):00077                 Ctrl_1_Held_Logical             fcb   0
6C01 00               (./engine/joypad/R):00078                 Ctrl_1_Press_Logical            fcb   0
6C02                  (./engine/joypad/R):00079                 Ctrl_1
6C02 00               (./engine/joypad/R):00080                 Ctrl_1_Held                     fcb   0
6C03 00               (./engine/joypad/R):00081                 Ctrl_1_Press                    fcb   0
6C04                  (./engine/joypad/R):00082                 Ctrl_2
6C04 00               (./engine/joypad/R):00083                 Ctrl_2_Held                     fcb   0
6C05 00               (./engine/joypad/R):00084                 Ctrl_2_Press                    fcb   0
                      (./engine/joypad/R):00085                 
6C06                  (./engine/joypad/R):00086                 ReadJoypads
6C06 FCE7CC           (./engine/joypad/R):00087 [6]     3448            ldd   $E7CC
                      (./engine/joypad/R):00088                         ; Ctrl 1
6C09 F76C1B           (./engine/joypad/R):00089 [5]     3453            stb   @a
6C0C 840F             (./engine/joypad/R):00090 [2]     3455            anda  #%00001111
6C0E 48               (./engine/joypad/R):00091 [2]     3457            lsla
6C0F 48               (./engine/joypad/R):00092 [2]     3459            lsla
6C10 48               (./engine/joypad/R):00093 [2]     3461            lsla
6C11 48               (./engine/joypad/R):00094 [2]     3463            lsla
6C12 C440             (./engine/joypad/R):00095 [2]     3465            andb  #%01000000
6C14 54               (./engine/joypad/R):00096 [2]     3467            lsrb
6C15 54               (./engine/joypad/R):00097 [2]     3469            lsrb
6C16 54               (./engine/joypad/R):00098 [2]     3471            lsrb
6C17 F76C1F           (./engine/joypad/R):00099 [5]     3476            stb   @b
6C1A C600             (./engine/joypad/R):00100 [2]     3478            ldb   #0
     6C1B             (./engine/joypad/R):00101                 @a      equ   *-1
6C1C C404             (./engine/joypad/R):00102 [2]     3480            andb  #%00000100
6C1E CA00             (./engine/joypad/R):00103 [2]     3482            orb   #0
     6C1F             (./engine/joypad/R):00104                 @b      equ   *-1
6C20 F76C24           (./engine/joypad/R):00105 [5]     3487            stb   @c
6C23 8A00             (./engine/joypad/R):00106 [2]     3489            ora   #0
     6C24             (./engine/joypad/R):00107                 @c      equ   *-1
6C25 43               (./engine/joypad/R):00108 [2]     3491            coma
6C26 B76C36           (./engine/joypad/R):00109 [5]     3496            sta   @d
6C29 B66C02           (./engine/joypad/R):00110 [5]     3501            lda   Ctrl_1_Held
6C2C B86C36           (./engine/joypad/R):00111 [5]     3506            eora  @d
6C2F B46C36           (./engine/joypad/R):00112 [5]     3511            anda  @d
6C32 B76C03           (./engine/joypad/R):00113 [5]     3516            sta   Ctrl_1_Press
6C35 8600             (./engine/joypad/R):00114 [2]     3518            lda   #0
     6C36             (./engine/joypad/R):00115                 @d      equ   *-1
6C37 B76C02           (./engine/joypad/R):00116 [5]     3523            sta   Ctrl_1_Held
                      (./engine/joypad/R):00117                 
6C3A FCE7CC           (./engine/joypad/R):00118 [6]     3529            ldd   $E7CC
                      (./engine/joypad/R):00119                         ; Ctrl 2
6C3D F76C4C           (./engine/joypad/R):00120 [5]     3534            stb   @a
6C40 84F0             (./engine/joypad/R):00121 [2]     3536            anda  #%11110000
6C42 C480             (./engine/joypad/R):00122 [2]     3538            andb  #%10000000
6C44 54               (./engine/joypad/R):00123 [2]     3540            lsrb
6C45 54               (./engine/joypad/R):00124 [2]     3542            lsrb
6C46 54               (./engine/joypad/R):00125 [2]     3544            lsrb
6C47 54               (./engine/joypad/R):00126 [2]     3546            lsrb
6C48 F76C51           (./engine/joypad/R):00127 [5]     3551            stb   @b
6C4B C600             (./engine/joypad/R):00128 [2]     3553            ldb   #0
     6C4C             (./engine/joypad/R):00129                 @a      equ   *-1
6C4D C408             (./engine/joypad/R):00130 [2]     3555            andb  #%00001000
6C4F 54               (./engine/joypad/R):00131 [2]     3557            lsrb
6C50 CA00             (./engine/joypad/R):00132 [2]     3559            orb   #0
     6C51             (./engine/joypad/R):00133                 @b      equ   *-1
6C52 F76C56           (./engine/joypad/R):00134 [5]     3564            stb   @c
6C55 8A00             (./engine/joypad/R):00135 [2]     3566            ora   #0
     6C56             (./engine/joypad/R):00136                 @c      equ   *-1
6C57 43               (./engine/joypad/R):00137 [2]     3568            coma
6C58 B76C68           (./engine/joypad/R):00138 [5]     3573            sta   @d
6C5B B66C04           (./engine/joypad/R):00139 [5]     3578            lda   Ctrl_2_Held
6C5E B86C68           (./engine/joypad/R):00140 [5]     3583            eora  @d
6C61 B46C68           (./engine/joypad/R):00141 [5]     3588            anda  @d
6C64 B76C05           (./engine/joypad/R):00142 [5]     3593            sta   Ctrl_2_Press
6C67 8600             (./engine/joypad/R):00143 [2]     3595            lda   #0
     6C68             (./engine/joypad/R):00144                 @d      equ   *-1
6C69 B76C04           (./engine/joypad/R):00145 [5]     3600            sta   Ctrl_2_Held
6C6C 39               (./engine/joypad/R):00146 [5]     3605            rts
                      (./engine/joypad/R):00147                 
                      (C:\Users\bhrou\gi):00100                 
                      (C:\Users\bhrou\gi):00101                         ; animation
                      (C:\Users\bhrou\gi):00102                         INCLUDE "./engine/graphics/animation/AnimateSprite.asm" 
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * Subroutine to animate a sprite using an animation script
                      (./engine/graphics):00003                 *
                      (./engine/graphics):00004                 * input REG : [u] pointeur sur l'objet
                      (./engine/graphics):00005                 *
                      (./engine/graphics):00006                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00007                 
                      (./engine/graphics):00008                                                             *; ---------------------------------------------------------------------------
                      (./engine/graphics):00009                                                             *; Subroutine to animate a sprite using an animation script
                      (./engine/graphics):00010                                                             *; ---------------------------------------------------------------------------
                      (./engine/graphics):00011                                                             *
                      (./engine/graphics):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00013                                                             *
                      (./engine/graphics):00014                                                             *; sub_16544:
6C6D                  (./engine/graphics):00015                 AnimateSprite                               *AnimateSprite:
                      (./engine/graphics):00016                                                             *    moveq   #0,d0
                      (./engine/graphics):00017                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
6C6D BD6BB5           (    _GetCartPageA):00002 [8]     3613            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
6C70 B76CCB           (./engine/graphics):00018 [5]     3618            sta   Anim_Rts+1                    ; backup cart page     
6C73 8E7944           (./engine/graphics):00019 [3]     3621            ldx   #Ani_Page_Index
6C76 E6C4             (./engine/graphics):00020 [4]     3625            ldb   id,u
6C78 3A               (./engine/graphics):00021 [3]     3628            abx
6C79 A684             (./engine/graphics):00022 [4]     3632            lda   ,x
                      (./engine/graphics):00023                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
6C7B BD6B59           (    _SetCartPageA):00002 [8]     3640            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/graphics):00024                 ;
6C7E AE48             (./engine/graphics):00025 [6]     3646            ldx   anim,u                        *    move.b  anim(a0),d0      ; move animation number to d0
6C80 2A0C             (./engine/graphics):00026 [3]     3649            bpl   @a                       ; branch if anim is an address of anim
6C82 8E7947           (./engine/graphics):00027 [3]     3652            ldx   #Ani_Asd_Index           ; negative means anim,u is a signed 8 bit offset for a LUT
                      (./engine/graphics):00028                         ; ldb   id,u                   ; already loaded
6C85 58               (./engine/graphics):00029 [2]     3654            aslb
6C86 3A               (./engine/graphics):00030 [3]     3657            abx
6C87 AE94             (./engine/graphics):00031 [8]     3665            ldx   [,x]                     ; load Anim LUT (first entry in Asd LUT)
6C89 E649             (./engine/graphics):00032 [5]     3670            ldb   anim+1,u                 ; load offset
6C8B 3A               (./engine/graphics):00033 [3]     3673            abx                            ; apply offset
6C8C AE84             (./engine/graphics):00034 [5]     3678            ldx   ,x                       ; load target anim address
6C8E AC4A             (./engine/graphics):00035 [7]     3685    @a      cmpx  prev_anim,u                   *    cmp.b   prev_anim(a0),d0 ; is animation set to change?
6C90 270E             (./engine/graphics):00036 [3]     3688            beq   Anim_Run                      *    beq.s   Anim_Run         ; if not, branch
6C92 AF4A             (./engine/graphics):00037 [6]     3694            stx   prev_anim,u                   *    move.b  d0,prev_anim(a0) ; set prev anim to current animation
                      (./engine/graphics):00038                         
6C94 A64E             (./engine/graphics):00039 [5]     3699            lda   anim_flags,u
6C96 8401             (./engine/graphics):00040 [2]     3701            anda  #anim_link_mask               ; if animation link, when changing animation
6C98 260E             (./engine/graphics):00041 [3]     3704            bne   Anim_Reload                   ; will skip frame and duration reinit
                      (./engine/graphics):00042                         
6C9A C600             (./engine/graphics):00043 [2]     3706            ldb   #0                            
6C9C E74C             (./engine/graphics):00044 [5]     3711            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0)          ; reset animation
6C9E 2004             (./engine/graphics):00045 [3]     3714            bra   @b                            *    move.b  #0,anim_frame_duration(a0) ; reset frame duration
                      (./engine/graphics):00046                                                             *; loc_16560:
6CA0                  (./engine/graphics):00047                 Anim_Run                                    *Anim_Run:
6CA0 6A4D             (./engine/graphics):00048 [7]     3721            dec   anim_frame_duration,u         *    subq.b  #1,anim_frame_duration(a0)   ; subtract 1 from frame duration
6CA2 2A26             (./engine/graphics):00049 [3]     3724            bpl   Anim_Rts                      *    bpl.s   Anim_Wait                    ; if time remains, branch
                      (./engine/graphics):00050                         * no offset table                   *    add.w   d0,d0
                      (./engine/graphics):00051                         * anim is the address of anim       *    adda.w  (a1,d0.w),a1                 ; calculate address of appropriate animation script
6CA4 E61F             (./engine/graphics):00052 [5]     3729    @b      ldb   -1,x                            
6CA6 E74D             (./engine/graphics):00053 [5]     3734            stb   anim_frame_duration,u         *    move.b  (a1),anim_frame_duration(a0) ; load frame duration
6CA8                  (./engine/graphics):00054                 Anim_Reload                                 *    moveq   #0,d1
6CA8 E64C             (./engine/graphics):00055 [5]     3739            ldb   anim_frame,u                  *    move.b  anim_frame(a0),d1 ; load current frame number
6CAA 8600             (./engine/graphics):00056 [2]     3741            lda   #0
                      (./engine/graphics):00057                         _asld
6CAC 58               (            _asld):00001 [2]     3743            aslb
6CAD 49               (            _asld):00002 [2]     3745            rola
6CAE 318B             (./engine/graphics):00058 [8]     3753            leay  d,x
6CB0 ECA4             (./engine/graphics):00059 [5]     3758            ldd   ,y                            *    move.b  1(a1,d1.w),d0 ; read sprite number from script
                      (./engine/graphics):00060                         * bmi   Anim_End_FF                 *    bmi.s   Anim_End_FF   ; if animation is complete, branch MJ: Delete this line
6CB2 81FA             (./engine/graphics):00061 [2]     3760            cmpa  #$FA                          *    cmp.b   #$FA,d0       ; MJ: is it a flag from FA to FF?
6CB4 241A             (./engine/graphics):00062 [3]     3763            bhs   Anim_End_FF                   *    bhs     Anim_End_FF   ; MJ: if so, branch to flag routines
                      (./engine/graphics):00063                                                             *; loc_1657C:
6CB6                  (./engine/graphics):00064                 Anim_Next                                   *Anim_Next:
                      (./engine/graphics):00065                                                                 *    andi.b  #$7F,d0               ; clear sign bit
6CB6 EDC810           (./engine/graphics):00066 [6]     3769            std   image_set,u                   *    move.b  d0,mapping_frame(a0)  ; load sprite number
6CB9 A64E             (./engine/graphics):00067 [5]     3774            lda   status_flags,u
6CBB 8403             (./engine/graphics):00068 [2]     3776            anda  #status_xflip_mask|status_yflip_mask
6CBD B76CC5           (./engine/graphics):00069 [5]     3781            sta   @dyn+1
6CC0 A642             (./engine/graphics):00070 [5]     3786            lda   render_flags,u
6CC2 84FC             (./engine/graphics):00071 [2]     3788            anda  #^(render_xmirror_mask|render_ymirror_mask)
6CC4 8A00             (./engine/graphics):00072 [2]     3790    @dyn    ora   #0
6CC6 A742             (./engine/graphics):00073 [5]     3795            sta   render_flags,u
                      (./engine/graphics):00074                                                             *    move.b  status(a0),d1         ; match the orientaion dictated by the object
                      (./engine/graphics):00075                                                             *    andi.b  #3,d1                 ; with the orientation used by the object engine
                      (./engine/graphics):00076                                                             *    andi.b  #$FC,render_flags(a0)
                      (./engine/graphics):00077                                                             *    or.b    d1,render_flags(a0)
6CC8 6C4C             (./engine/graphics):00078 [7]     3802            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)     ; next frame number
                      (./engine/graphics):00079                                                             *; return_1659A:
6CCA                  (./engine/graphics):00080                 Anim_Rts                                    *Anim_Wait:
6CCA 8600             (./engine/graphics):00081 [2]     3804            lda   #$00                          ; (dynamic)
                      (./engine/graphics):00082                         _SetCartPageA                       ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
6CCC BD6B59           (    _SetCartPageA):00002 [8]     3812            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6CCF 39               (./engine/graphics):00083 [5]     3817            rts                                 *    rts 
                      (./engine/graphics):00084                                                             *; ===========================================================================
                      (./engine/graphics):00085                                                             *; loc_1659C:
6CD0                  (./engine/graphics):00086                 Anim_End_FF                                 *Anim_End_FF:
6CD0 4C               (./engine/graphics):00087 [2]     3819            inca                                *    addq.b  #1,d0       ; is the end flag = $FF ?
6CD1 2608             (./engine/graphics):00088 [3]     3822            bne   Anim_End_FE                   *    bne.s   Anim_End_FE ; if not, branch
6CD3 C600             (./engine/graphics):00089 [2]     3824            ldb   #0                            
6CD5 E74C             (./engine/graphics):00090 [5]     3829            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0) ; restart the animation
6CD7 EC84             (./engine/graphics):00091 [5]     3834            ldd   ,x                            *    move.b  1(a1),d0          ; read sprite number
6CD9 20DB             (./engine/graphics):00092 [3]     3837            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./engine/graphics):00093                                                             *; ===========================================================================
                      (./engine/graphics):00094                                                             *; loc_165AC:
6CDB                  (./engine/graphics):00095                 Anim_End_FE                                 *Anim_End_FE:
6CDB 4C               (./engine/graphics):00096 [2]     3839            inca                                *    addq.b  #1,d0             ; is the end flag = $FE ?
6CDC 2610             (./engine/graphics):00097 [3]     3842            bne   Anim_End_FD                   *    bne.s   Anim_End_FD       ; if not, branch
6CDE A64C             (./engine/graphics):00098 [5]     3847            lda   anim_frame,u                  
6CE0 F76CE4           (./engine/graphics):00099 [5]     3852            stb   Anim_End_FE_dyn+1             *    move.b  2(a1,d1.w),d0     ; read the next byte in the script
6CE3                  (./engine/graphics):00100                 Anim_End_FE_dyn
6CE3 8000             (./engine/graphics):00101 [2]     3854            suba  #$00                          ; (dynamic)                          
6CE5 A74C             (./engine/graphics):00102 [5]     3859            sta   anim_frame,u                  *    sub.b   d0,anim_frame(a0) ; jump back d0 bytes in the script
                      (./engine/graphics):00103                                                             *    sub.b   d0,d1
6CE7 C602             (./engine/graphics):00104 [2]     3861            ldb   #2
6CE9 3D               (./engine/graphics):00105 [11]    3872            mul                                            
6CEA EC8B             (./engine/graphics):00106 [9]     3881            ldd   d,x                           *    move.b  1(a1,d1.w),d0     ; read sprite number
6CEC 20C8             (./engine/graphics):00107 [3]     3884            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./engine/graphics):00108                                                             *; ===========================================================================
                      (./engine/graphics):00109                                                             *; loc_165C0:
6CEE                  (./engine/graphics):00110                 Anim_End_FD                                 *Anim_End_FD:
6CEE 4C               (./engine/graphics):00111 [2]     3886            inca                                *    addq.b  #1,d0               ; is the end flag = $FD ?
6CEF 2606             (./engine/graphics):00112 [3]     3889            bne   Anim_End_FC                   *    bne.s   Anim_End_FC         ; if not, branch
6CF1 EC21             (./engine/graphics):00113 [6]     3895            ldd   1,y                           ; read word after FD
6CF3 ED48             (./engine/graphics):00114 [6]     3901            std   anim,u                        *    move.b  2(a1,d1.w),anim(a0) ; read next byte, run that animation
6CF5 20D3             (./engine/graphics):00115 [3]     3904            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00116                                                             *; ===========================================================================
                      (./engine/graphics):00117                                                             *; loc_165CC:
6CF7                  (./engine/graphics):00118                 Anim_End_FC                                 *Anim_End_FC:
6CF7 4C               (./engine/graphics):00119 [2]     3906            inca                                *    addq.b  #1,d0          ; is the end flag = $FC ?
6CF8 260B             (./engine/graphics):00120 [3]     3909            bne   Anim_End_FB                   *    bne.s   Anim_End_FB    ; if not, branch
6CFA 6CC822           (./engine/graphics):00121 [7]     3916            inc   routine,u                     *    addq.b  #2,routine(a0) ; jump to next routine
6CFD 8600             (./engine/graphics):00122 [2]     3918            lda   #0                            
6CFF A74D             (./engine/graphics):00123 [5]     3923            sta   anim_frame_duration,u         *    move.b  #0,anim_frame_duration(a0)
6D01 6C4C             (./engine/graphics):00124 [7]     3930            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)
6D03 20C5             (./engine/graphics):00125 [3]     3933            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00126                                                             *; ===========================================================================
                      (./engine/graphics):00127                                                             *; loc_165E0:
6D05                  (./engine/graphics):00128                 Anim_End_FB                                 *Anim_End_FB:
6D05 4C               (./engine/graphics):00129 [2]     3935            inca                                *    addq.b  #1,d0                 ; is the end flag = $FB ?
6D06 2609             (./engine/graphics):00130 [3]     3938            bne   Anim_End_FA                   *    bne.s   Anim_End_FA           ; if not, branch
6D08 8600             (./engine/graphics):00131 [2]     3940            lda   #0                            
6D0A A74C             (./engine/graphics):00132 [5]     3945            sta   anim_frame,u                  *    move.b  #0,anim_frame(a0)     ; reset animation
6D0C A7C823           (./engine/graphics):00133 [5]     3950            sta   routine_secondary,u           *    clr.b   routine_secondary(a0) ; reset 2nd routine counter
6D0F 20B9             (./engine/graphics):00134 [3]     3953            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00135                                                             *; ===========================================================================
                      (./engine/graphics):00136                                                             *; loc_165F0:
6D11                  (./engine/graphics):00137                 Anim_End_FA                                 *Anim_End_FA:
6D11 4C               (./engine/graphics):00138 [2]     3955            inca                                *    addq.b  #1,d0                    ; is the end flag = $FA ?
6D12 2603             (./engine/graphics):00139 [3]     3958            bne   Anim_End                      *    bne.s   Anim_End_F9              ; if not, branch
6D14 6CC823           (./engine/graphics):00140 [7]     3965            inc   routine_secondary,u           *    addq.b  #2,routine_secondary(a0) ; jump to next routine    
6D17                  (./engine/graphics):00141                 Anim_End               
6D17 20B1             (./engine/graphics):00142 [3]     3968            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00143                                                             *; ===========================================================================
                      (./engine/graphics):00144                                                             *; loc_165FA:
                      (./engine/graphics):00145                                                             *Anim_End_F9:
                      (./engine/graphics):00146                                                             *    addq.b  #1,d0            ; is the end flag = $F9 ?
                      (./engine/graphics):00147                                                             *    bne.s   Anim_End         ; if not, branch
                      (./engine/graphics):00148                                                             *    addq.b  #2,objoff_2A(a0) ; Actually obj89_arrow_routine
                      (./engine/graphics):00149                                                             *; return_16602:
                      (./engine/graphics):00150                                                             *Anim_End:
                      (./engine/graphics):00151                                                             *    rts
                      (./engine/graphics):00152                                                             *; End of function AnimateSprite
                      (C:\Users\bhrou\gi):00103                         INCLUDE "./engine/graphics/image/GetImgIdA.asm"
6D19                  (./engine/graphics):00001                 GetImgIdA
                      (./engine/graphics):00002                 
                      (./engine/graphics):00003                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
6D19 BD6BB5           (    _GetCartPageA):00002 [8]     3976            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
6D1C B76D30           (./engine/graphics):00004 [5]     3981            sta   GetImgId_Rts+1                ; backup cart page     
6D1F 8E7941           (./engine/graphics):00005 [3]     3984            ldx   #Img_Page_Index               ; call page that store imageset for this object
6D22 E6C4             (./engine/graphics):00006 [4]     3988            ldb   id,u
6D24 3A               (./engine/graphics):00007 [3]     3991            abx
6D25 A684             (./engine/graphics):00008 [4]     3995            lda   ,x
                      (./engine/graphics):00009                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
6D27 BD6B59           (    _SetCartPageA):00002 [8]     4003            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/graphics):00010                                 
6D2A AEC810           (./engine/graphics):00011 [6]     4009            ldx   image_set,u
6D2D A61F             (./engine/graphics):00012 [5]     4014            lda   -1,x
                      (./engine/graphics):00013                 
6D2F                  (./engine/graphics):00014                 GetImgId_Rts
6D2F C600             (./engine/graphics):00015 [2]     4016            ldb   #$00                          ; (dynamic)
                      (./engine/graphics):00016                         _SetCartPageB                       ; restore data page
                      (    _SetCartPageB):00001                  IFDEF T2
6D31 BD6B87           (    _SetCartPageB):00002 [8]     4024            jsr   SetCartPageB
                      (    _SetCartPageB):00003                  ELSE
                      (    _SetCartPageB):00004                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageB):00005                  ENDC
6D34 39               (./engine/graphics):00017 [5]     4029            rts
                      (C:\Users\bhrou\gi):00104                 
                      (C:\Users\bhrou\gi):00105                         ; music and palette
                      (C:\Users\bhrou\gi):00106                         ; irq
                      (C:\Users\bhrou\gi):00107                         INCLUDE "./engine/irq/Irq.asm"
                      (./engine/irq/Irq.):00001                 
                      (./engine/irq/Irq.):00002                 * ---------------------------------------------------------------------------
                      (./engine/irq/Irq.):00003                 * IRQ Manager
                      (./engine/irq/Irq.):00004                 * ---------------------------------------------------------------------------
                      (./engine/irq/Irq.):00005                 *
                      (./engine/irq/Irq.):00006                 * IrqSet50Hz
                      (./engine/irq/Irq.):00007                 * -----------------------------------
                      (./engine/irq/Irq.):00008                 * input REG : [none]
                      (./engine/irq/Irq.):00009                 * reset REG : [d]
                      (./engine/irq/Irq.):00010                 *
                      (./engine/irq/Irq.):00011                 * IrqOn
                      (./engine/irq/Irq.):00012                 * -----------------------------------
                      (./engine/irq/Irq.):00013                 * reset REG : [a]
                      (./engine/irq/Irq.):00014                 *
                      (./engine/irq/Irq.):00015                 * IrqOff
                      (./engine/irq/Irq.):00016                 * -----------------------------------
                      (./engine/irq/Irq.):00017                 * reset REG : [a]
                      (./engine/irq/Irq.):00018                 *
                      (./engine/irq/Irq.):00019                 * IrqSync
                      (./engine/irq/Irq.):00020                 * -----------------------------------
                      (./engine/irq/Irq.):00021                 * This routine sync irq timer with a desired screen line refresh
                      (./engine/irq/Irq.):00022                 * The timer (irq duration) is an input parameter (usually Irq_one_frame)
                      (./engine/irq/Irq.):00023                 * input REG : [a] screen line (0-255)
                      (./engine/irq/Irq.):00024                 *             [x] timer value
                      (./engine/irq/Irq.):00025                 * reset REG : [d]
                      (./engine/irq/Irq.):00026                 * feature request - implement a screen line range of 0-311
                      (./engine/irq/Irq.):00027                 *
                      (./engine/irq/Irq.):00028                 * IrqManager (irq call)
                      (./engine/irq/Irq.):00029                 * -----------------------------------
                      (./engine/irq/Irq.):00030                 * This routine run all requested engine code before and after the user irq
                      (./engine/irq/Irq.):00031                 * routine (in Irq_user_routine)
                      (./engine/irq/Irq.):00032                 * input REG : [dp] $E7 (set by the monitor)
                      (./engine/irq/Irq.):00033                 * reset REG : [none]
                      (./engine/irq/Irq.):00034                 *
                      (./engine/irq/Irq.):00035                 * Special mode (glb_Page==0) is when page switching does not need to test
                      (./engine/irq/Irq.):00036                 * if RAM or ROM is in use. In this case RAM is always expected as page type.
                      (./engine/irq/Irq.):00037                 * This allows the use of <$E6 register without calling engine macro for
                      (./engine/irq/Irq.):00038                 * page switch, thus it reduces the cycles cost. Used in tile rendering.
                      (./engine/irq/Irq.):00039                 *
                      (./engine/irq/Irq.):00040                 * Example of user routines (may be grouped in a subroutine) :
                      (./engine/irq/Irq.):00041                 * - PalUpdateNow
                      (./engine/irq/Irq.):00042                 * - PalCycling
                      (./engine/irq/Irq.):00043                 * - PalRaster_1c
                      (./engine/irq/Irq.):00044                 * - MusicFrame
                      (./engine/irq/Irq.):00045                 * - PSGFrame
                      (./engine/irq/Irq.):00046                 * - IrqObjSmps
                      (./engine/irq/Irq.):00047                 * - IrqTimer
                      (./engine/irq/Irq.):00048                 *
                      (./engine/irq/Irq.):00049                 * ---------------------------------------------------------------------------
                      (./engine/irq/Irq.):00050                 
6D35 0000             (./engine/irq/Irq.):00051                 Irq_user_routine fdb 0                 ; user irq routine called by IrqManager 
     4DFF             (./engine/irq/Irq.):00052                 Irq_one_frame    equ 312*64-1          ; one frame timer (lines*cycles_per_lines-1), timer launch at -1
     0040             (./engine/irq/Irq.):00053                 Irq_one_line     equ 64
                      (./engine/irq/Irq.):00054                        
6D37                  (./engine/irq/Irq.):00055                 IrqInit
6D37 CC6D82           (./engine/irq/Irq.):00056 [3]     4032            ldd   #IrqManager
6D3A FD6027           (./engine/irq/Irq.):00057 [6]     4038            std   TIMERPT
6D3D 39               (./engine/irq/Irq.):00058 [5]     4043            rts
                      (./engine/irq/Irq.):00059                 
6D3E                  (./engine/irq/Irq.):00060                 IrqSet50Hz
6D3E C642             (./engine/irq/Irq.):00061 [2]     4045            ldb   #$42
6D40 F7E7C5           (./engine/irq/Irq.):00062 [5]     4050            stb   MC6846.TCR               ; timer precision x8
6D43 CC4DFF           (./engine/irq/Irq.):00063 [3]     4053            ldd   #Irq_one_frame           ; on every frame
6D46 FDE7C6           (./engine/irq/Irq.):00064 [6]     4059            std   MC6846.TMSB
6D49 BD6D4D           (./engine/irq/Irq.):00065 [8]     4067            jsr   IrqOn   
6D4C 39               (./engine/irq/Irq.):00066 [5]     4072            rts
                      (./engine/irq/Irq.):00067                        
6D4D                  (./engine/irq/Irq.):00068                 IrqOn         
6D4D B66019           (./engine/irq/Irq.):00069 [5]     4077            lda   $6019                           
6D50 8A20             (./engine/irq/Irq.):00070 [2]     4079            ora   #$20
6D52 B76019           (./engine/irq/Irq.):00071 [5]     4084            sta   $6019                    ; STATUS register
6D55 1CEF             (./engine/irq/Irq.):00072 [3]     4087            andcc #$EF                     ; tell 6809 to activate irq
6D57 39               (./engine/irq/Irq.):00073 [5]     4092            rts
                      (./engine/irq/Irq.):00074                         
6D58                  (./engine/irq/Irq.):00075                 IrqOff 
6D58 B66019           (./engine/irq/Irq.):00076 [5]     4097            lda   $6019                           
6D5B 84DF             (./engine/irq/Irq.):00077 [2]     4099            anda  #$DF
6D5D B76019           (./engine/irq/Irq.):00078 [5]     4104            sta   $6019                    ; STATUS register
6D60 1A10             (./engine/irq/Irq.):00079 [3]     4107            orcc  #$10                     ; tell 6809 to inactivate irq
6D62 39               (./engine/irq/Irq.):00080 [5]     4112            rts
                      (./engine/irq/Irq.):00081                 
6D63                  (./engine/irq/Irq.):00082                 IrqSync 
6D63 C642             (./engine/irq/Irq.):00083 [2]     4114            ldb   #$42
6D65 F7E7C5           (./engine/irq/Irq.):00084 [5]     4119            stb   MC6846.TCR
                      (./engine/irq/Irq.):00085                         
6D68 C608             (./engine/irq/Irq.):00086 [2]     4121            ldb   #8                       ; ligne * 64 (cycles per line) / 8 (nb tempo loop cycles)
6D6A 3D               (./engine/irq/Irq.):00087 [11]    4132            mul
6D6B 1F02             (./engine/irq/Irq.):00088 [6]     4138            tfr   d,y
6D6D 31A8E0           (./engine/irq/Irq.):00089 [5]     4143            leay  -32,y                    ; manual adjustment
                      (./engine/irq/Irq.):00090                 !
6D70 7DE7E7           (./engine/irq/Irq.):00091 [7]     4150            tst   $E7E7                    ;
6D73 2BFB             (./engine/irq/Irq.):00092 [3]     4153            bmi   <                        ; while spot is in a visible screen line        
6D75 7DE7E7           (./engine/irq/Irq.):00093 [7]     4160    !       tst   $E7E7                    ;
6D78 2AFB             (./engine/irq/Irq.):00094 [3]     4163            bpl   <                        ; while spot is not in a visible screen line
6D7A 313F             (./engine/irq/Irq.):00095 [5]     4168    !       leay  -1,y                     ;
6D7C 26FC             (./engine/irq/Irq.):00096 [3]     4171            bne   <                        ; wait until desired line
                      (./engine/irq/Irq.):00097                        
6D7E BFE7C6           (./engine/irq/Irq.):00098 [6]     4177            stx   MC6846.TMSB              ; spot is at the end of desired line
6D81 39               (./engine/irq/Irq.):00099 [5]     4182            rts  
                      (./engine/irq/Irq.):00100                 
     E7               (./engine/irq/Irq.):00101                         setdp $E7
6D82                  (./engine/irq/Irq.):00102                 IrqManager
6D82 10FF6DA9         (./engine/irq/Irq.):00103 [7]     4189            sts   @stack                   ; backup system stack
6D86 10CE6DE2         (./engine/irq/Irq.):00104 [4]     4193            lds   #Irq_sys_stack           ; set tmp system stack for IRQ 
6D8A FC6B51           (./engine/irq/Irq.):00105 [6]     4199            ldd   Vint_runcount
6D8D C30001           (./engine/irq/Irq.):00106 [4]     4203            addd  #1
6D90 FD6B51           (./engine/irq/Irq.):00107 [6]     4209            std   Vint_runcount
6D93 7D9FD1           (./engine/irq/Irq.):00108 [7]     4216            tst   glb_Page                 ; test special mode (glb_Page==0)
6D96 2716             (./engine/irq/Irq.):00109 [3]     4219            beq   @smode                   ; branch if rendering tiles - force RAM use instead of testing ROM or RAM
                      (./engine/irq/Irq.):00110                         _GetCartPageB
                      (    _GetCartPageB):00001                  IFDEF T2
6D98 BD6BBE           (    _GetCartPageB):00002 [8]     4227            jsr   GetCartPageB
                      (    _GetCartPageB):00003                  ELSE
                      (    _GetCartPageB):00004                         ldb   $E7E6
                      (    _GetCartPageB):00005                  ENDC
6D9B F76DA3           (./engine/irq/Irq.):00111 [5]     4232            stb   @page                    ; backup data page normally
6D9E AD9F6D35         (./engine/irq/Irq.):00112 [12]    4244            jsr   [Irq_user_routine]
6DA2 8600             (./engine/irq/Irq.):00113 [2]     4246            lda   #0                       ; (dynamic)
     6DA3             (./engine/irq/Irq.):00114                 @page   equ   *-1
                      (./engine/irq/Irq.):00115                         _SetCartPageA                  ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
6DA4 BD6B59           (    _SetCartPageA):00002 [8]     4254            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6DA7 10CE0000         (./engine/irq/Irq.):00116 [4]     4258    @end    lds   #0                       ; (dynamic) restore system stack   
     6DA9             (./engine/irq/Irq.):00117                 @stack  equ   *-2
6DAB 7EE830           (./engine/irq/Irq.):00118 [4]     4262            jmp   $E830                    ; return to caller
6DAE                  (./engine/irq/Irq.):00119                 @smode
6DAE D6E6             (./engine/irq/Irq.):00120 [4]     4266            ldb   <$E6
6DB0 F76DBD           (./engine/irq/Irq.):00121 [5]     4271            stb   @page2                   ; backup data page
6DB3 AD9F6D35         (./engine/irq/Irq.):00122 [12]    4283            jsr   [Irq_user_routine]
6DB7 8400             (./engine/irq/Irq.):00123 [2]     4285            anda  #0
6DB9 B79FD1           (./engine/irq/Irq.):00124 [5]     4290            sta   glb_Page                 ; restore special page mode
6DBC 8600             (./engine/irq/Irq.):00125 [2]     4292            lda   #0                       ; (dynamic)
     6DBD             (./engine/irq/Irq.):00126                 @page2  equ   *-1
6DBE 97E6             (./engine/irq/Irq.):00127 [4]     4296            sta   <$E6                     ; restore data page
6DC0 20E5             (./engine/irq/Irq.):00128 [3]     4299            bra   @end
                      (./engine/irq/Irq.):00129                 
                      (./engine/irq/Irq.):00130                 ; This space allow the use of system stack inside IRQ calls
                      (./engine/irq/Irq.):00131                 ; otherwise the writes in sys stack will erase data when S is in use
                      (./engine/irq/Irq.):00132                 ; (outside of IRQ) for another task than sys stack, ex: stack blast copy 
6DC2 0000000000000000 (./engine/irq/Irq.):00133                         fill  0,32
     0000000000000000
     0000000000000000
     0000000000000000
6DE2                  (./engine/irq/Irq.):00134                 Irq_sys_stack
                      (./engine/irq/Irq.):00135                 
     9F               (./engine/irq/Irq.):00136                         setdp dp/256
                      (C:\Users\bhrou\gi):00108                         INCLUDE "./engine/palette/PalUpdateNow.asm"
                      (./engine/palette/):00001                 * ---------------------------------------------------------------------------
                      (./engine/palette/):00002                 * PalUpdateNow
                      (./engine/palette/):00003                 * ----------------
                      (./engine/palette/):00004                 * Subroutine to update palette right now
                      (./engine/palette/):00005                 *
                      (./engine/palette/):00006                 * input REG : none
                      (./engine/palette/):00007                 * reset REG : [d] [x] [y]
                      (./engine/palette/):00008                 * ---------------------------------------------------------------------------
                      (./engine/palette/):00009                 
6DE2 FF               (./engine/palette/):00010                 PalRefresh      fcb   $FF
6DE3 6DE5             (./engine/palette/):00011                 Pal_current     fdb   Pal_buffer
6DE5 0000000000000000 (./engine/palette/):00012                 Pal_buffer      fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
                      (./engine/palette/):00013                 
     E7               (./engine/palette/):00014                         setdp $E7
6E05                  (./engine/palette/):00015                 PalUpdateNow 
6E05 7D6DE2           (./engine/palette/):00016 [7]     4306            tst   PalRefresh
6E08 2679             (./engine/palette/):00017 [3]     4309            bne   @rts
6E0A 3408             (./engine/palette/):00018 [6]     4315            pshs  dp
6E0C CC00E7           (./engine/palette/):00019 [3]     4318            ldd   #$E7
6E0F 1F9B             (./engine/palette/):00020 [6]     4324            tfr   b,dp  
6E11 BE6DE3           (./engine/palette/):00021 [6]     4330            ldx   Pal_current
6E14 97DB             (./engine/palette/):00022 [4]     4334            sta   <$DB                     * color index 0
6E16 EC84             (./engine/palette/):00023 [5]     4339    !       ldd   ,x                       * load color
6E18 97DA             (./engine/palette/):00024 [4]     4343            sta   <$DA                     * set green and red
6E1A D7DA             (./engine/palette/):00025 [4]     4347            stb   <$DA                     * set blue
6E1C EC02             (./engine/palette/):00026 [6]     4353            ldd   2,x
6E1E 97DA             (./engine/palette/):00027 [4]     4357            sta   <$DA
6E20 D7DA             (./engine/palette/):00028 [4]     4361            stb   <$DA
6E22 EC04             (./engine/palette/):00029 [6]     4367            ldd   4,x
6E24 97DA             (./engine/palette/):00030 [4]     4371            sta   <$DA
6E26 D7DA             (./engine/palette/):00031 [4]     4375            stb   <$DA
6E28 EC06             (./engine/palette/):00032 [6]     4381            ldd   6,x
6E2A 97DA             (./engine/palette/):00033 [4]     4385            sta   <$DA
6E2C D7DA             (./engine/palette/):00034 [4]     4389            stb   <$DA
6E2E EC08             (./engine/palette/):00035 [6]     4395            ldd   8,x
6E30 97DA             (./engine/palette/):00036 [4]     4399            sta   <$DA
6E32 D7DA             (./engine/palette/):00037 [4]     4403            stb   <$DA
6E34 EC0A             (./engine/palette/):00038 [6]     4409            ldd   10,x
6E36 97DA             (./engine/palette/):00039 [4]     4413            sta   <$DA
6E38 D7DA             (./engine/palette/):00040 [4]     4417            stb   <$DA
6E3A EC0C             (./engine/palette/):00041 [6]     4423            ldd   12,x
6E3C 97DA             (./engine/palette/):00042 [4]     4427            sta   <$DA
6E3E D7DA             (./engine/palette/):00043 [4]     4431            stb   <$DA
6E40 EC0E             (./engine/palette/):00044 [6]     4437            ldd   14,x
6E42 97DA             (./engine/palette/):00045 [4]     4441            sta   <$DA
6E44 D7DA             (./engine/palette/):00046 [4]     4445            stb   <$DA
6E46 EC8810           (./engine/palette/):00047 [6]     4451            ldd   16,x
6E49 97DA             (./engine/palette/):00048 [4]     4455            sta   <$DA
6E4B D7DA             (./engine/palette/):00049 [4]     4459            stb   <$DA
6E4D EC8812           (./engine/palette/):00050 [6]     4465            ldd   18,x
6E50 97DA             (./engine/palette/):00051 [4]     4469            sta   <$DA
6E52 D7DA             (./engine/palette/):00052 [4]     4473            stb   <$DA
6E54 EC8814           (./engine/palette/):00053 [6]     4479            ldd   20,x
6E57 97DA             (./engine/palette/):00054 [4]     4483            sta   <$DA
6E59 D7DA             (./engine/palette/):00055 [4]     4487            stb   <$DA
6E5B EC8816           (./engine/palette/):00056 [6]     4493            ldd   22,x
6E5E 97DA             (./engine/palette/):00057 [4]     4497            sta   <$DA
6E60 D7DA             (./engine/palette/):00058 [4]     4501            stb   <$DA
6E62 EC8818           (./engine/palette/):00059 [6]     4507            ldd   24,x
6E65 97DA             (./engine/palette/):00060 [4]     4511            sta   <$DA
6E67 D7DA             (./engine/palette/):00061 [4]     4515            stb   <$DA
6E69 EC881A           (./engine/palette/):00062 [6]     4521            ldd   26,x
6E6C 97DA             (./engine/palette/):00063 [4]     4525            sta   <$DA
6E6E D7DA             (./engine/palette/):00064 [4]     4529            stb   <$DA
6E70 EC881C           (./engine/palette/):00065 [6]     4535            ldd   28,x
6E73 97DA             (./engine/palette/):00066 [4]     4539            sta   <$DA
6E75 D7DA             (./engine/palette/):00067 [4]     4543            stb   <$DA
6E77 EC881E           (./engine/palette/):00068 [6]     4549            ldd   30,x
6E7A 97DA             (./engine/palette/):00069 [4]     4553            sta   <$DA
6E7C D7DA             (./engine/palette/):00070 [4]     4557            stb   <$DA
6E7E 736DE2           (./engine/palette/):00071 [7]     4564            com   PalRefresh               * update flag, next run this routine will be ignored if no pal update is requested
6E81 3588             (./engine/palette/):00072 [8]     4572            puls dp,pc
6E83 39               (./engine/palette/):00073 [5]     4577    @rts    rts
                      (./engine/palette/):00074                 
     9F               (./engine/palette/):00075                         setdp dp/256
                      (C:\Users\bhrou\gi):00109                         INCLUDE "./engine/palette/color/Pal_white.asm"
6E84                  (./engine/palette/):00001                 Pal_white
6E84 FF0F             (./engine/palette/):00002                         fdb   $ff0f
6E86 FF0F             (./engine/palette/):00003                         fdb   $ff0f
6E88 FF0F             (./engine/palette/):00004                         fdb   $ff0f
6E8A FF0F             (./engine/palette/):00005                         fdb   $ff0f
6E8C FF0F             (./engine/palette/):00006                         fdb   $ff0f
6E8E FF0F             (./engine/palette/):00007                         fdb   $ff0f
6E90 FF0F             (./engine/palette/):00008                         fdb   $ff0f
6E92 FF0F             (./engine/palette/):00009                         fdb   $ff0f
6E94 FF0F             (./engine/palette/):00010                         fdb   $ff0f
6E96 FF0F             (./engine/palette/):00011                         fdb   $ff0f
6E98 FF0F             (./engine/palette/):00012                         fdb   $ff0f
6E9A FF0F             (./engine/palette/):00013                         fdb   $ff0f
6E9C FF0F             (./engine/palette/):00014                         fdb   $ff0f
6E9E FF0F             (./engine/palette/):00015                         fdb   $ff0f
6EA0 FF0F             (./engine/palette/):00016                         fdb   $ff0f
6EA2 FF0F             (./engine/palette/):00017                         fdb   $ff0f
                      (C:\Users\bhrou\gi):00110                 
                      (C:\Users\bhrou\gi):00111                         ; vgc player
                      (C:\Users\bhrou\gi):00112                         INCLUDE "./engine/sound/vgc/lib/vgcplayer.h.asm"
                      (./engine/sound/vg):00001                 ;******************************************************************
                      (./engine/sound/vg):00002                 ; 6502 BBC Micro Compressed VGM (VGC) Music Player
                      (./engine/sound/vg):00003                 ; By Simon Morris
                      (./engine/sound/vg):00004                 ; https://github.com/simondotm/vgm-player-bbc
                      (./engine/sound/vg):00005                 ; https://github.com/simondotm/vgm-packer
                      (./engine/sound/vg):00006                 ;******************************************************************
                      (./engine/sound/vg):00007                 
                      (./engine/sound/vg):00008                 ;  vars without huffman
6EA4 00000000         (./engine/sound/vg):00009                 VGM_VARS fill 0,4
                      (./engine/sound/vg):00010                 
                      (./engine/sound/vg):00011                 ; registers used for each compressed stream (they are context switched)
     6EA4             (./engine/sound/vg):00012                 lz_vars equ VGM_VARS+0
     6EA4             (./engine/sound/vg):00013                 vgc_literal_cnt  equ lz_vars+0
     6EA6             (./engine/sound/vg):00014                 vgc_match_cnt    equ lz_vars+2
                      (./engine/sound/vg):00015                 
     007D             (./engine/sound/vg):00016                 VGM_MUSIC_BPM equ 125
     0008             (./engine/sound/vg):00017                 VGM_BEATS_PER_PATTERN equ 8
                      (./engine/sound/vg):00018                 
     0018             (./engine/sound/vg):00019                 VGM_FRAMES_PER_BEAT equ (50*60)/VGM_MUSIC_BPM
     00C0             (./engine/sound/vg):00020                 VGM_FRAMES_PER_PATTERN equ VGM_FRAMES_PER_BEAT*VGM_BEATS_PER_PATTERN
                      (C:\Users\bhrou\gi):00113                         INCLUDE "./engine/sound/vgc/lib/vgcplayer.asm"
                      (./engine/sound/vg):00001                 ;******************************************************************
                      (./engine/sound/vg):00002                 ; 6502 BBC Micro Compressed VGM (VGC) Music Player
                      (./engine/sound/vg):00003                 ; By Simon Morris
                      (./engine/sound/vg):00004                 ; https://github.com/simondotm/vgm-player-bbc
                      (./engine/sound/vg):00005                 ; https://github.com/simondotm/vgm-packer
                      (./engine/sound/vg):00006                 ;
                      (./engine/sound/vg):00007                 ; 6809 version
                      (./engine/sound/vg):00008                 ; By Benoit Rousseau
                      (./engine/sound/vg):00009                 ;******************************************************************
                      (./engine/sound/vg):00010                 
                      (./engine/sound/vg):00011                 ;---------------------------------------------------------------
                      (./engine/sound/vg):00012                 ; VGM Player Library code
                      (./engine/sound/vg):00013                 ;---------------------------------------------------------------
                      (./engine/sound/vg):00014                 
                      (./engine/sound/vg):00015                 ;--------------------------------------------------
                      (./engine/sound/vg):00016                 ; user callable routines:
                      (./engine/sound/vg):00017                 ;  vgc_init
                      (./engine/sound/vg):00018                 ;  vgc_update
                      (./engine/sound/vg):00019                 ;  sn_reset
                      (./engine/sound/vg):00020                 ;  sn_write
                      (./engine/sound/vg):00021                 ;--------------------------------------------------
                      (./engine/sound/vg):00022                 
                      (./engine/sound/vg):00023                 ;-------------------------------------------
                      (./engine/sound/vg):00024                 ; vgc_play
                      (./engine/sound/vg):00025                 ;-------------------------------------------
                      (./engine/sound/vg):00026                 ; Initialise playback routine
                      (./engine/sound/vg):00027                 ;  A points to HI byte of a page aligned 2Kb RAM buffer address
                      (./engine/sound/vg):00028                 ;  X point to the VGC data stream to be played
                      (./engine/sound/vg):00029                 ;  C=1 for looped playback
                      (./engine/sound/vg):00030                 ;-------------------------------------------
6EA8                  (./engine/sound/vg):00031                 vgc_init
6EA8 B76F7D           (./engine/sound/vg):00032 [5]     4582            sta   vgc_buffers              ; stash the 2kb buffer address
6EAB 8600             (./engine/sound/vg):00033 [2]     4584            lda   #0
6EAD 46               (./engine/sound/vg):00034 [2]     4586            rora                           ; move carry into A
6EAE B76F7F           (./engine/sound/vg):00035 [5]     4591            sta   vgc_loop
6EB1 A684             (./engine/sound/vg):00036 [4]     4595            lda   ,x                       ; get memory page that contains track data
6EB3 B76F82           (./engine/sound/vg):00037 [5]     4600            sta   vgc_source_page
                      (./engine/sound/vg):00038                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
6EB6 BD6B59           (    _SetCartPageA):00002 [8]     4608            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6EB9 F76EC8           (./engine/sound/vg):00039 [5]     4613            stb   @LoadA
6EBC                  (./engine/sound/vg):00040                 @a      _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
6EBC BD6B59           (    _SetCartPageA):00002 [8]     4621            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6EBF AE01             (./engine/sound/vg):00041 [6]     4627            ldx   1,x                      ; get ptr to track data
6EC1 BF6F80           (./engine/sound/vg):00042 [6]     4633            stx   vgc_source               ; stash the data source addr for looping
6EC4 BD6F94           (./engine/sound/vg):00043 [8]     4641            jsr   vgc_stream_mount         ; Prepare the data for streaming (passed in X)
6EC7 8600             (./engine/sound/vg):00044 [2]     4643            lda   #0
     6EC8             (./engine/sound/vg):00045                 @LoadA  equ   *-1
                      (./engine/sound/vg):00046                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
6EC9 BD6B59           (    _SetCartPageA):00002 [8]     4651            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6ECC 39               (./engine/sound/vg):00047 [5]     4656            rts
                      (./engine/sound/vg):00048                 
                      (./engine/sound/vg):00049                 ;-------------------------------------------
                      (./engine/sound/vg):00050                 ; vgc_update
                      (./engine/sound/vg):00051                 ;-------------------------------------------
                      (./engine/sound/vg):00052                 ;  call every 50Hz to play music
                      (./engine/sound/vg):00053                 ;  vgc_init must be called prior to this
                      (./engine/sound/vg):00054                 ; On entry A is non-zero if the music should be looped
                      (./engine/sound/vg):00055                 ;  returns non-zero when VGC is finished.
                      (./engine/sound/vg):00056                 ;-------------------------------------------
6ECD                  (./engine/sound/vg):00057                 vgc_update
6ECD B66F7E           (./engine/sound/vg):00058 [5]     4661            lda   vgc_finished
6ED0 263A             (./engine/sound/vg):00059 [3]     4664            bne   @exit        
6ED2 B66F82           (./engine/sound/vg):00060 [5]     4669            lda   vgc_source_page
6ED5 2601             (./engine/sound/vg):00061 [3]     4672            bne   @a
6ED7 39               (./engine/sound/vg):00062 [5]     4677            rts                            ; no music to play
6ED8                  (./engine/sound/vg):00063                 @a      _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
6ED8 BD6B59           (    _SetCartPageA):00002 [8]     4685            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/sound/vg):00064                         ; SN76489 data register format is %1cctdddd where cc=channel, t=0=tone, t=1=volume, dddd=data
                      (./engine/sound/vg):00065                         ; The data is run length encoded.
                      (./engine/sound/vg):00066                         ; Get Channel 3 tone first because that contains the EOF marker        
                      (./engine/sound/vg):00067                         ; Update Tone3
6EDB 8603             (./engine/sound/vg):00068 [2]     4687            lda   #3
6EDD BD701D           (./engine/sound/vg):00069 [8]     4695            jsr   vgc_update_register1  ; on exit C set if data changed, B is last value
6EE0 2407             (./engine/sound/vg):00070 [3]     4698            bcc   @more_updates
                      (./engine/sound/vg):00071                         ;
6EE2 F6703F           (./engine/sound/vg):00072 [5]     4703            ldb   skip_tone3+1
6EE5 C108             (./engine/sound/vg):00073 [2]     4705            cmpb  #$08     ; EOF marker? (0x08 is an invalid tone 3 value)
6EE7 2724             (./engine/sound/vg):00074 [3]     4708            beq   @finished
                      (./engine/sound/vg):00075                         ; 
6EE9                  (./engine/sound/vg):00076                 @more_updates
6EE9 8607             (./engine/sound/vg):00077 [2]     4710            lda   #7
6EEB BD701D           (./engine/sound/vg):00078 [8]     4718            jsr   vgc_update_register1  ; Volume3
6EEE 8600             (./engine/sound/vg):00079 [2]     4720            lda   #0
6EF0 BD704D           (./engine/sound/vg):00080 [8]     4728            jsr   vgc_update_register2  ; Tone0
6EF3 8604             (./engine/sound/vg):00081 [2]     4730            lda   #4
6EF5 BD701D           (./engine/sound/vg):00082 [8]     4738            jsr   vgc_update_register1  ; Volume0
6EF8 8601             (./engine/sound/vg):00083 [2]     4740            lda   #1
6EFA BD704D           (./engine/sound/vg):00084 [8]     4748            jsr   vgc_update_register2  ; Tone1
6EFD 8605             (./engine/sound/vg):00085 [2]     4750            lda   #5
6EFF BD701D           (./engine/sound/vg):00086 [8]     4758            jsr   vgc_update_register1  ; Volume1
6F02 8602             (./engine/sound/vg):00087 [2]     4760            lda   #2
6F04 BD704D           (./engine/sound/vg):00088 [8]     4768            jsr   vgc_update_register2  ; Tone2
6F07 8606             (./engine/sound/vg):00089 [2]     4770            lda   #6
6F09 BD701D           (./engine/sound/vg):00090 [8]     4778            jsr   vgc_update_register1  ; Volume2
6F0C                  (./engine/sound/vg):00091                 @exit
6F0C 39               (./engine/sound/vg):00092 [5]     4783            rts
                      (./engine/sound/vg):00093                         ;
6F0D                  (./engine/sound/vg):00094                 @finished
                      (./engine/sound/vg):00095                         ; end of tune reached
6F0D B66F7F           (./engine/sound/vg):00096 [5]     4788            lda   vgc_loop
6F10 2710             (./engine/sound/vg):00097 [3]     4791            beq   @no_looping
                      (./engine/sound/vg):00098                         ; restart if looping
6F12 BE6F80           (./engine/sound/vg):00099 [6]     4797            ldx   vgc_source
6F15 B66F7F           (./engine/sound/vg):00100 [5]     4802            lda   vgc_loop
6F18 48               (./engine/sound/vg):00101 [2]     4804            asla ; -> C
6F19 B66F7D           (./engine/sound/vg):00102 [5]     4809            lda   vgc_buffers
6F1C BD6F94           (./engine/sound/vg):00103 [8]     4817            jsr   vgc_stream_mount
6F1F 7E6ECD           (./engine/sound/vg):00104 [4]     4821            jmp   vgc_update
6F22                  (./engine/sound/vg):00105                 @no_looping 
                      (./engine/sound/vg):00106                         ; no looping so set flag $ stop PSG
6F22 F76F7E           (./engine/sound/vg):00107 [5]     4826            stb   vgc_finished    ; any NZ value is fine, in this case 0x08
6F25 7E6F28           (./engine/sound/vg):00108 [4]     4830            jmp   sn_reset ; also returns non-zero in A
                      (./engine/sound/vg):00109                 
                      (./engine/sound/vg):00110                 ;-------------------------------------------
                      (./engine/sound/vg):00111                 ; Sound chip routines
                      (./engine/sound/vg):00112                 ;-------------------------------------------
                      (./engine/sound/vg):00113                 
                      (./engine/sound/vg):00114                 ; Reset SN76489 sound chip to a default (silent) state
6F28                  (./engine/sound/vg):00115                 sn_reset
6F28 869F             (./engine/sound/vg):00116 [2]     4832            lda   #$9F
6F2A B7E7FF           (./engine/sound/vg):00117 [5]     4837            sta   SN76489.D
6F2D 86BF             (./engine/sound/vg):00118 [2]     4839            lda   #$BF
6F2F B7E7FF           (./engine/sound/vg):00119 [5]     4844            sta   SN76489.D       
6F32 86DF             (./engine/sound/vg):00120 [2]     4846            lda   #$DF
6F34 B7E7FF           (./engine/sound/vg):00121 [5]     4851            sta   SN76489.D
6F37 86FF             (./engine/sound/vg):00122 [2]     4853            lda   #$FF
6F39 B7E7FF           (./engine/sound/vg):00123 [5]     4858            sta   SN76489.D  
6F3C 39               (./engine/sound/vg):00124 [5]     4863            rts
                      (./engine/sound/vg):00125                 
                      (./engine/sound/vg):00126                 ;-------------------------------------------
                      (./engine/sound/vg):00127                 ; VGC internal routines
                      (./engine/sound/vg):00128                 ; Not user callable.
                      (./engine/sound/vg):00129                 ;-------------------------------------------
                      (./engine/sound/vg):00130                 
                      (./engine/sound/vg):00131                 ;-------------------------------------------
                      (./engine/sound/vg):00132                 ; local vgc workspace
                      (./engine/sound/vg):00133                 ;-------------------------------------------
                      (./engine/sound/vg):00134                 
     0008             (./engine/sound/vg):00135                 VGC_STREAM_CONTEXT_SIZE equ 8 ; number of bytes total workspace for a stream
     0008             (./engine/sound/vg):00136                 VGC_STREAMS equ 8
                      (./engine/sound/vg):00137                 
6F3D                  (./engine/sound/vg):00138                 vgc_streams ; decoder contexts - 8 bytes per stream, 8 streams (64 bytes)
6F3D 0000000000000000 (./engine/sound/vg):00139                         fill 0,VGC_STREAMS*VGC_STREAM_CONTEXT_SIZE
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (./engine/sound/vg):00140                         ; 0 zp_stream_src     ; stream data ptr HI/LO
                      (./engine/sound/vg):00141                         ; 2 vgc_literal_cnt    ; literal count HI/LO
                      (./engine/sound/vg):00142                         ; 4 vgc_match_cnt      ; match count HI/LO
                      (./engine/sound/vg):00143                         ; 6 lz_window_src     ; window read ptr - index LO
                      (./engine/sound/vg):00144                         ; 7 lz_window_dst     ; window write ptr - index LO
                      (./engine/sound/vg):00145                 
6F7D 00               (./engine/sound/vg):00146                 vgc_buffers     fcb 0    ; the HI byte of the address where the buffers are stored
6F7E 00               (./engine/sound/vg):00147                 vgc_finished    fcb 0    ; a flag to indicate player has reached the end of the vgc stream
6F7F 00               (./engine/sound/vg):00148                 vgc_loop        fcb 0    ; non zero if tune is to be looped
6F80 0000             (./engine/sound/vg):00149                 vgc_source      fdb 0    ; vgc data address
6F82 0000             (./engine/sound/vg):00150                 vgc_source_page fdb 0    ; vgc data address
                      (./engine/sound/vg):00151                 
                      (./engine/sound/vg):00152                 ; 8 counters for VGC register update counters (RLE)
6F84                  (./engine/sound/vg):00153                 vgc_register_counts
6F84 0000000000000000 (./engine/sound/vg):00154                         fill 0,8
                      (./engine/sound/vg):00155                 
                      (./engine/sound/vg):00156                 ; Table of SN76489 flags for the 8 LATCH/DATA registers
                      (./engine/sound/vg):00157                 ; %1cctdddd 
6F8C                  (./engine/sound/vg):00158                 vgc_register_headers
6F8C 80               (./engine/sound/vg):00159                         fcb $80+%00000000   ; Tone 0
6F8D A0               (./engine/sound/vg):00160                         fcb $80+%00100000   ; Tone 1
6F8E C0               (./engine/sound/vg):00161                         fcb $80+%01000000   ; Tone 2
6F8F E0               (./engine/sound/vg):00162                         fcb $80+%01100000   ; Tone 3
6F90 90               (./engine/sound/vg):00163                         fcb $90+%00000000   ; Volume 0
6F91 B0               (./engine/sound/vg):00164                         fcb $90+%00100000   ; Volume 1
6F92 D0               (./engine/sound/vg):00165                         fcb $90+%01000000   ; Volume 2
6F93 F0               (./engine/sound/vg):00166                         fcb $90+%01100000   ; Volume 3
                      (./engine/sound/vg):00167                 
                      (./engine/sound/vg):00168                 ; VGC file parsing - Initialise the system for the provided in-memory VGC data stream.
                      (./engine/sound/vg):00169                 ; On entry X point to address of the vgc data
6F94                  (./engine/sound/vg):00170                 vgc_stream_mount
                      (./engine/sound/vg):00171                         ; parse data stream
                      (./engine/sound/vg):00172                         ; VGC broadly uses LZ4 frame $ block formats for convenience
                      (./engine/sound/vg):00173                         ; however there are assumptions for format:
                      (./engine/sound/vg):00174                         ;  Magic number[4], Flags[1], MaxBlockSize[1], Header checksum[1]
                      (./engine/sound/vg):00175                         ;  Contains 8 blocks
                      (./engine/sound/vg):00176                         ; Obviously since this is an 8-bit CPU no files or blocks can be > 64Kb in size        
                      (./engine/sound/vg):00177                         ; VGC streams have a different magic number to LZ4
                      (./engine/sound/vg):00178                         ; [56 47 43 XX]
                      (./engine/sound/vg):00179                         ; where XX:
                      (./engine/sound/vg):00180                         ; bit 6 - LZ 8 bit (0) or 16 bit (1)
                      (./engine/sound/vg):00181                         ; bit 7 - Huffman (1) or no huffman (0)
                      (./engine/sound/vg):00182                         ; -- 6809 version -- only support : 8 bit / no huffman
6F94 3307             (./engine/sound/vg):00183 [5]     4868            leau  7,x ; Skip frame header, and move to first block
                      (./engine/sound/vg):00184                         ; init first block position
6F96 8E0000           (./engine/sound/vg):00185 [3]     4871            ldx   #0
6F99 108E6F84         (./engine/sound/vg):00186 [4]     4875            ldy   #vgc_register_counts
                      (./engine/sound/vg):00187                         ; clear vgc finished flag
6F9D 7F6F7E           (./engine/sound/vg):00188 [7]     4882            clr   vgc_finished
6FA0                  (./engine/sound/vg):00189                 @block_loop
                      (./engine/sound/vg):00190                         ; get start address of encoded data for vgc_stream[x] (block ptr+4)
6FA0 3344             (./engine/sound/vg):00191 [5]     4887            leau  4,u  ; skip block header
6FA2 EF896F3D         (./engine/sound/vg):00192 [9]     4896            stu   vgc_streams+VGC_STREAMS*0,x  ; zp_stream_src
6FA6 CC0000           (./engine/sound/vg):00193 [3]     4899            ldd   #0
6FA9 ED896F4D         (./engine/sound/vg):00194 [9]     4908            std   vgc_streams+VGC_STREAMS*2,x  ; literal cnt 
6FAD ED896F5D         (./engine/sound/vg):00195 [9]     4917            std   vgc_streams+VGC_STREAMS*4,x  ; match cnt 
6FB1 ED896F6D         (./engine/sound/vg):00196 [9]     4926            std   vgc_streams+VGC_STREAMS*6,x  ; window src dst ptr 
                      (./engine/sound/vg):00197                         ; setup RLE tables
6FB5 4C               (./engine/sound/vg):00198 [2]     4928            inca
6FB6 A7A0             (./engine/sound/vg):00199 [6]     4934            sta   ,y+
                      (./engine/sound/vg):00200                         ;
6FB8 E65C             (./engine/sound/vg):00201 [5]     4939            ldb   -4,u                     ; read 16-bit block size
6FBA A65D             (./engine/sound/vg):00202 [5]     4944            lda   -3,u                     ; read 16-bit block size
6FBC 33CB             (./engine/sound/vg):00203 [8]     4952            leau  d,u                      ; move to next block
                      (./engine/sound/vg):00204                         ;
                      (./engine/sound/vg):00205                         ; for all 8 blocks
6FBE 3002             (./engine/sound/vg):00206 [5]     4957            leax  2,x
6FC0 8C0010           (./engine/sound/vg):00207 [4]     4961            cmpx  #16
6FC3 26DB             (./engine/sound/vg):00208 [3]     4964            bne   @block_loop
6FC5 39               (./engine/sound/vg):00209 [5]     4969            rts
                      (./engine/sound/vg):00210                 
                      (./engine/sound/vg):00211                 ;----------------------------------------------------------------------
                      (./engine/sound/vg):00212                 ; fetch register data byte from register stream selected in A
                      (./engine/sound/vg):00213                 ; This byte will be LZ4 encoded
                      (./engine/sound/vg):00214                 ;  A is register id (0-7)
                      (./engine/sound/vg):00215                 ;  clobbers X,U
6FC6                  (./engine/sound/vg):00216                 vgc_get_register_data
                      (./engine/sound/vg):00217                         ; set the LZ4 decoder stream workspace buffer (initialised by vgc_stream_mount)
6FC6 8E0000           (./engine/sound/vg):00218 [3]     4972            ldx   #0
6FC9 3086             (./engine/sound/vg):00219 [5]     4977            leax  a,x
6FCB 3086             (./engine/sound/vg):00220 [5]     4982            leax  a,x
6FCD BB6F7D           (./engine/sound/vg):00221 [5]     4987            adda  vgc_buffers ; hi byte of the base address of the 2Kb (8x256) vgc stream buffers
                      (./engine/sound/vg):00222                         ; store hi byte of where the 256 byte vgc stream buffer for this stream is located
6FD0 B770B6           (./engine/sound/vg):00223 [5]     4992            sta   lz_window_src ; **SELFMOD** HI
6FD3 B7705E           (./engine/sound/vg):00224 [5]     4997            sta   lz_window_dst ; **SELFMOD** HI
                      (./engine/sound/vg):00225                         ; calculate the stream buffer context
6FD6 BF6FFC           (./engine/sound/vg):00226 [6]     5003            stx   @loadX ; Stash X for later *** SELF MODIFYING SEE BELOW ***
                      (./engine/sound/vg):00227                         ;
                      (./engine/sound/vg):00228                         ; since we have 8 separately compressed register streams
                      (./engine/sound/vg):00229                         ; we have to load the required decoder context to ZP
6FD9 EE896F3D         (./engine/sound/vg):00230 [9]     5012            ldu   vgc_streams+VGC_STREAMS*0,x
6FDD EC896F4D         (./engine/sound/vg):00231 [9]     5021            ldd   vgc_streams+VGC_STREAMS*2,x
6FE1 FD6EA4           (./engine/sound/vg):00232 [6]     5027            std   vgc_literal_cnt
6FE4 EC896F5D         (./engine/sound/vg):00233 [9]     5036            ldd   vgc_streams+VGC_STREAMS*4,x
6FE8 FD6EA6           (./engine/sound/vg):00234 [6]     5042            std   vgc_match_cnt
6FEB EC896F6D         (./engine/sound/vg):00235 [9]     5051            ldd   vgc_streams+VGC_STREAMS*6,x
6FEF B770B7           (./engine/sound/vg):00236 [5]     5056            sta   lz_window_src+1   ; **SELF MODIFY** LO
6FF2 F7705F           (./engine/sound/vg):00237 [5]     5061            stb   lz_window_dst+1   ; **SELF MODIFY** LO
                      (./engine/sound/vg):00238                         ; then fetch a decompressed byte
6FF5 BD7074           (./engine/sound/vg):00239 [8]     5069            jsr   lz_decode_byte
6FF8 F7701B           (./engine/sound/vg):00240 [5]     5074            stb   @loadB ; Stash B for later - ** SMOD ** [4](2) faster than pha/pla 
                      (./engine/sound/vg):00241                         ; then we save the decoder context from ZP back to main ram
6FFB 8E0000           (./engine/sound/vg):00242 [3]     5077            ldx   #0  ; *** SELF MODIFIED - See above ***
     6FFC             (./engine/sound/vg):00243                 @loadX  equ *-2
6FFE EF896F3D         (./engine/sound/vg):00244 [9]     5086            stu   vgc_streams+VGC_STREAMS*0,x
7002 FC6EA4           (./engine/sound/vg):00245 [6]     5092            ldd   vgc_literal_cnt
7005 ED896F4D         (./engine/sound/vg):00246 [9]     5101            std   vgc_streams+VGC_STREAMS*2,x
7009 FC6EA6           (./engine/sound/vg):00247 [6]     5107            ldd   vgc_match_cnt
700C ED896F5D         (./engine/sound/vg):00248 [9]     5116            std   vgc_streams+VGC_STREAMS*4,x
7010 B670B7           (./engine/sound/vg):00249 [5]     5121            lda   lz_window_src+1 ; LO
7013 F6705F           (./engine/sound/vg):00250 [5]     5126            ldb   lz_window_dst+1 ; LO
7016 ED896F6D         (./engine/sound/vg):00251 [9]     5135            std   vgc_streams+VGC_STREAMS*6,x
701A C600             (./engine/sound/vg):00252 [2]     5137            ldb   #0 ;[2](2) - ***SELF MODIFIED - See above ***
     701B             (./engine/sound/vg):00253                 @loadB  equ *-1
701C 39               (./engine/sound/vg):00254 [5]     5142            rts
                      (./engine/sound/vg):00255                 
                      (./engine/sound/vg):00256                 ; Fetch 1 register data byte from the encoded stream and send to sound chip (volumes $ tone3)
                      (./engine/sound/vg):00257                 ; A is register to update
                      (./engine/sound/vg):00258                 ; on exit:
                      (./engine/sound/vg):00259                 ;    C is set if an update happened and B contains last register value
                      (./engine/sound/vg):00260                 ;    C is clear if no updated happened and B is preserved
                      (./engine/sound/vg):00261                 
701D                  (./engine/sound/vg):00262                 vgc_update_register1
701D 8E6F84           (./engine/sound/vg):00263 [3]     5145            ldx   #vgc_register_counts
7020 1CFE             (./engine/sound/vg):00264 [3]     5148            andcc #$fe ; clear cc
7022 6A86             (./engine/sound/vg):00265 [7]     5155            dec   a,x ; no effect on C
7024 2626             (./engine/sound/vg):00266 [3]     5158            bne   skip_register_update
                      (./engine/sound/vg):00267                 
                      (./engine/sound/vg):00268                         ; decode a byte $ send to psg
7026 B77035           (./engine/sound/vg):00269 [5]     5163            sta   @LoadA
7029 BD6FC6           (./engine/sound/vg):00270 [8]     5171            jsr   vgc_get_register_data
702C F7703F           (./engine/sound/vg):00271 [5]     5176            stb   @LoadB
702F C40F             (./engine/sound/vg):00272 [2]     5178            andb  #$0f
7031 8E6F8C           (./engine/sound/vg):00273 [3]     5181            ldx   #vgc_register_headers
7034 8600             (./engine/sound/vg):00274 [2]     5183            lda   #0
     7035             (./engine/sound/vg):00275                 @LoadA  equ   *-1
7036 EA86             (./engine/sound/vg):00276 [5]     5188            orb   a,x
                      (./engine/sound/vg):00277                         ; check if it's a tone3 skip command ($ef) before we play it
                      (./engine/sound/vg):00278                         ; - this prevents the LFSR being reset unnecessarily
7038 C1EF             (./engine/sound/vg):00279 [2]     5190            cmpb  #$ef
703A 2702             (./engine/sound/vg):00280 [3]     5193            beq   skip_tone3
703C D7FF             (./engine/sound/vg):00281 [4]     5197            stb   <SN76489.D
703E                  (./engine/sound/vg):00282                 skip_tone3
                      (./engine/sound/vg):00283                         ; get run length (top 4-bits+1)
703E C600             (./engine/sound/vg):00284 [2]     5199            ldb   #0
     703F             (./engine/sound/vg):00285                 @LoadB  equ *-1
7040 54               (./engine/sound/vg):00286 [2]     5201            lsrb
7041 54               (./engine/sound/vg):00287 [2]     5203            lsrb
7042 54               (./engine/sound/vg):00288 [2]     5205            lsrb
7043 54               (./engine/sound/vg):00289 [2]     5207            lsrb
7044 5C               (./engine/sound/vg):00290 [2]     5209            incb
7045 8E6F84           (./engine/sound/vg):00291 [3]     5212            ldx   #vgc_register_counts
7048 E786             (./engine/sound/vg):00292 [5]     5217            stb   a,x
704A 1A01             (./engine/sound/vg):00293 [3]     5220            orcc  #1 ; set cc
704C                  (./engine/sound/vg):00294                 skip_register_update
704C 39               (./engine/sound/vg):00295 [5]     5225            rts
                      (./engine/sound/vg):00296                 
                      (./engine/sound/vg):00297                 ; Fetch 2 register bytes (LATCH+DATA) from the encoded stream and send to sound chip (tone0, tone1, tone2)
                      (./engine/sound/vg):00298                 ; Same parameters as vgc_update_register1
704D                  (./engine/sound/vg):00299                 vgc_update_register2
704D B77056           (./engine/sound/vg):00300 [5]     5230            sta   @LoadA                  ; saves stream id
7050 BD701D           (./engine/sound/vg):00301 [8]     5238            jsr   vgc_update_register1    ; returns stream in X if updated, and C=0 if no update needed
7053 24F7             (./engine/sound/vg):00302 [3]     5241            bcc   skip_register_update
                      (./engine/sound/vg):00303                         ;
                      (./engine/sound/vg):00304                         ; decode 2nd byte and send to psg as (DATA)
7055 8600             (./engine/sound/vg):00305 [2]     5243            lda   #0                      ; load stream id
     7056             (./engine/sound/vg):00306                 @LoadA  equ   *-1
7057 BD6FC6           (./engine/sound/vg):00307 [8]     5251            jsr   vgc_get_register_data 
705A D7FF             (./engine/sound/vg):00308 [4]     5255            stb   <SN76489.D
705C 39               (./engine/sound/vg):00309 [5]     5260            rts
                      (./engine/sound/vg):00310                 
                      (./engine/sound/vg):00311                 ;-------------------------------
                      (./engine/sound/vg):00312                 ; lz4 decoder
                      (./engine/sound/vg):00313                 ;-------------------------------
                      (./engine/sound/vg):00314                 
                      (./engine/sound/vg):00315                 ; push byte into decode buffer
                      (./engine/sound/vg):00316                 ; clobbers Y, preserves A
705D                  (./engine/sound/vg):00317                 lz_store_buffer    ; called twice - 4 byte overhead, 6 byte function. Cheaper to inline.
705D F7FFFF           (./engine/sound/vg):00318 [5]     5265            stb   $ffff   ; *** SELF MODIFIED ***
7060 7C705F           (./engine/sound/vg):00319 [7]     5272            inc   lz_store_buffer+2
7063 39               (./engine/sound/vg):00320 [5]     5277            rts                 ; [6] (1)
                      (./engine/sound/vg):00321                 
                      (./engine/sound/vg):00322                 ; provide these vars as cleaner addresses for the code address to be self modified
     70B6             (./engine/sound/vg):00323                 lz_window_src equ lz_fetch_buffer+1 ; window read ptr HI (2 bytes) - index, 3 references
     705E             (./engine/sound/vg):00324                 lz_window_dst equ lz_store_buffer+1 ; window write ptr HI (2 bytes) - index, 3 references
                      (./engine/sound/vg):00325                 
                      (./engine/sound/vg):00326                 ; Calculate a multi-byte lz4 style length into zp_temp
                      (./engine/sound/vg):00327                 ; On entry A contains the initial counter value (LO)
                      (./engine/sound/vg):00328                 ; Returns 16-bit length in X
7064                  (./engine/sound/vg):00329                 lz_fetch_count
7064 8600             (./engine/sound/vg):00330 [2]     5279            lda   #0
7066 1F01             (./engine/sound/vg):00331 [6]     5285            tfr   d,x
7068 C10F             (./engine/sound/vg):00332 [2]     5287            cmpb  #15                      ; >=15 signals byte extend
706A 2607             (./engine/sound/vg):00333 [3]     5290            bne   lz_fetch_count_done
706C                  (./engine/sound/vg):00334                 fetch
706C                  (./engine/sound/vg):00335                 fetchByte1
706C E6C0             (./engine/sound/vg):00336 [6]     5296            ldb   ,u+
706E 3A               (./engine/sound/vg):00337 [3]     5299            abx
706F C1FF             (./engine/sound/vg):00338 [2]     5301            cmpb  #255                     ; 255 signals byte extend       
7071 27F9             (./engine/sound/vg):00339 [3]     5304            beq   fetch
7073                  (./engine/sound/vg):00340                 lz_fetch_count_done
7073 39               (./engine/sound/vg):00341 [5]     5309            rts
                      (./engine/sound/vg):00342                 
                      (./engine/sound/vg):00343                 ; decode a byte from the currently selected register stream
                      (./engine/sound/vg):00344                 ; unlike typical lz style unpackers we are using a state machine
                      (./engine/sound/vg):00345                 ; because it is necessary for us to be able to decode a byte at a time from 8 separate streams
7074                  (./engine/sound/vg):00346                 lz_decode_byte
                      (./engine/sound/vg):00347                     ; decoder state is:
                      (./engine/sound/vg):00348                     ;  empty - fetch new token $ prepare
                      (./engine/sound/vg):00349                     ;  literal - decode new literal
                      (./engine/sound/vg):00350                     ;  match - decode new match
                      (./engine/sound/vg):00351                 
                      (./engine/sound/vg):00352                     ; lz4 block format:
                      (./engine/sound/vg):00353                     ;  [TOKEN][LITERAL LENGTH][LITERALS][...][MATCH OFFSET][MATCH LENGTH]
                      (./engine/sound/vg):00354                 
                      (./engine/sound/vg):00355                 ; try fetching a literal byte from the stream
7074                  (./engine/sound/vg):00356                 try_literal
7074 B66EA5           (./engine/sound/vg):00357 [5]     5314            lda   vgc_literal_cnt+1
7077 2605             (./engine/sound/vg):00358 [3]     5317            bne   is_literal
7079 B66EA4           (./engine/sound/vg):00359 [5]     5322            lda   vgc_literal_cnt
707C 272D             (./engine/sound/vg):00360 [3]     5325            beq   try_match
                      (./engine/sound/vg):00361                 
707E                  (./engine/sound/vg):00362                 is_literal
707E                  (./engine/sound/vg):00363                 fetchByte2
                      (./engine/sound/vg):00364                         ; fetch a literal $ stash in decode buffer
                      (./engine/sound/vg):00365                         ; plain LZ4 byte fetch
707E E6C0             (./engine/sound/vg):00366 [6]     5331            ldb   ,u+
7080 BD705D           (./engine/sound/vg):00367 [8]     5339            jsr   lz_store_buffer
7083 F770A9           (./engine/sound/vg):00368 [5]     5344            stb   stashB+1                 ; **SELF MODIFICATION**
                      (./engine/sound/vg):00369                 
                      (./engine/sound/vg):00370                         ; using inverted counter
7086 7C6EA5           (./engine/sound/vg):00371 [7]     5351            inc vgc_literal_cnt+1
7089 2603             (./engine/sound/vg):00372 [3]     5354            bne >
708B 7C6EA4           (./engine/sound/vg):00373 [7]     5361            inc vgc_literal_cnt
708E 2618             (./engine/sound/vg):00374 [3]     5364    !       bne end_literal
                      (./engine/sound/vg):00375                 
7090                  (./engine/sound/vg):00376                 begin_matches
                      (./engine/sound/vg):00377                         ; literals run completed
                      (./engine/sound/vg):00378                         ; now fetch match offset $ length
                      (./engine/sound/vg):00379                 
7090                  (./engine/sound/vg):00380                 fetchByte3
                      (./engine/sound/vg):00381                         ; get match offset LO
                      (./engine/sound/vg):00382                         ; plain LZ4 byte fetch
7090 E6C0             (./engine/sound/vg):00383 [6]     5370            ldb   ,u+
                      (./engine/sound/vg):00384                 
                      (./engine/sound/vg):00385                         ; set buffer read ptr
7092 F77099           (./engine/sound/vg):00386 [5]     5375            stb   stashS+1 ; **SELF MODIFICATION**
7095 B6705F           (./engine/sound/vg):00387 [5]     5380            lda   lz_window_dst+1 ; *** SELF MODIFYING CODE ***
                      (./engine/sound/vg):00388                         ;orcc  #1
7098                  (./engine/sound/vg):00389                 stashS
7098 8000             (./engine/sound/vg):00390 [2]     5382            suba  #0 ; **SELFMODIFIED**
                      (./engine/sound/vg):00391                         ;inca
709A B770B7           (./engine/sound/vg):00392 [5]     5387            sta   lz_window_src+1 ; *** SELF MODIFYING CODE ***
                      (./engine/sound/vg):00393                 
                      (./engine/sound/vg):00394                         ; fetch match length
709D F66EA7           (./engine/sound/vg):00395 [5]     5392            ldb   vgc_match_cnt+1
70A0 BD7064           (./engine/sound/vg):00396 [8]     5400            jsr   lz_fetch_count
                      (./engine/sound/vg):00397                         ; match length is always+4 (0=4)
                      (./engine/sound/vg):00398                         ; cant do this before because we need to detect 15
70A3 3004             (./engine/sound/vg):00399 [5]     5405            leax  4,x
70A5 BF6EA6           (./engine/sound/vg):00400 [6]     5411            stx   vgc_match_cnt
                      (./engine/sound/vg):00401                 
70A8                  (./engine/sound/vg):00402                 end_literal
70A8                  (./engine/sound/vg):00403                 stashB
70A8 C600             (./engine/sound/vg):00404 [2]     5413            ldb   #0 ;**SELFMODIFIED - See above**
70AA 39               (./engine/sound/vg):00405 [5]     5418            rts
                      (./engine/sound/vg):00406                 
                      (./engine/sound/vg):00407                 ; try fetching a matched byte from the stream
70AB                  (./engine/sound/vg):00408                 try_match
70AB B66EA6           (./engine/sound/vg):00409 [5]     5423            lda   vgc_match_cnt
70AE 2605             (./engine/sound/vg):00410 [3]     5426            bne   is_match
70B0 B66EA7           (./engine/sound/vg):00411 [5]     5431            lda   vgc_match_cnt+1
                      (./engine/sound/vg):00412                         ; all matches done, so get a new token.
70B3 2715             (./engine/sound/vg):00413 [3]     5434            beq   try_token
                      (./engine/sound/vg):00414                 
70B5                  (./engine/sound/vg):00415                 is_match
                      (./engine/sound/vg):00416                 ; fetch a byte from the current decode buffer at the current read ptr offset
                      (./engine/sound/vg):00417                 ; returns byte in B
70B5                  (./engine/sound/vg):00418                 lz_fetch_buffer
70B5 F6FFFF           (./engine/sound/vg):00419 [5]     5439            ldb   $ffff ; *** SELF MODIFIED ***
70B8 7C70B7           (./engine/sound/vg):00420 [7]     5446            inc   lz_fetch_buffer+2
70BB BD705D           (./engine/sound/vg):00421 [8]     5454            jsr   lz_store_buffer    ; stash in decode buffer
                      (./engine/sound/vg):00422                 
                      (./engine/sound/vg):00423                         ; for all matches
                      (./engine/sound/vg):00424                         ; we know match cnt is at least 1
70BE B66EA7           (./engine/sound/vg):00425 [5]     5459            lda   vgc_match_cnt+1
70C1 2603             (./engine/sound/vg):00426 [3]     5462            bne   skiphi
70C3 7A6EA6           (./engine/sound/vg):00427 [7]     5469            dec   vgc_match_cnt
70C6                  (./engine/sound/vg):00428                 skiphi
70C6 7A6EA7           (./engine/sound/vg):00429 [7]     5476            dec   vgc_match_cnt+1
                      (./engine/sound/vg):00430                 
70C9                  (./engine/sound/vg):00431                 end_match
70C9 39               (./engine/sound/vg):00432 [5]     5481            rts
                      (./engine/sound/vg):00433                 
                      (./engine/sound/vg):00434                 ; then token parser
70CA                  (./engine/sound/vg):00435                 try_token
70CA                  (./engine/sound/vg):00436                 fetchByte5
                      (./engine/sound/vg):00437                         ; fetch a token
                      (./engine/sound/vg):00438                         ; plain LZ4 byte fetch 
70CA E6C0             (./engine/sound/vg):00439 [6]     5487            ldb   ,u+
                      (./engine/sound/vg):00440                 
                      (./engine/sound/vg):00441                         ; unpack match length from token (bottom 4 bits)
70CC 8600             (./engine/sound/vg):00442 [2]     5489            lda   #0
70CE C40F             (./engine/sound/vg):00443 [2]     5491            andb  #$0f
70D0 FD6EA6           (./engine/sound/vg):00444 [6]     5497            std   vgc_match_cnt
                      (./engine/sound/vg):00445                 
                      (./engine/sound/vg):00446                         ; unpack literal length from token (top 4 bits)
70D3 E65F             (./engine/sound/vg):00447 [5]     5502            ldb   -1,u
70D5 54               (./engine/sound/vg):00448 [2]     5504            lsrb
70D6 54               (./engine/sound/vg):00449 [2]     5506            lsrb
70D7 54               (./engine/sound/vg):00450 [2]     5508            lsrb
70D8 54               (./engine/sound/vg):00451 [2]     5510            lsrb
                      (./engine/sound/vg):00452                 
                      (./engine/sound/vg):00453                         ; fetch literal extended length, passing in B
70D9 BD7064           (./engine/sound/vg):00454 [8]     5518            jsr   lz_fetch_count
70DC BF6EA4           (./engine/sound/vg):00455 [6]     5524            stx   vgc_literal_cnt
                      (./engine/sound/vg):00456                         
                      (./engine/sound/vg):00457                         ; if no literals, begin the match sequence
                      (./engine/sound/vg):00458                         ; and fetch one match byte
                      (./engine/sound/vg):00459                         ; literal count can be 2 bytes, check both for zero
70DF 2606             (./engine/sound/vg):00460 [3]     5527            bne   has_literals
                      (./engine/sound/vg):00461                 
70E1 BD7090           (./engine/sound/vg):00462 [8]     5535            jsr   begin_matches
70E4 7E70AB           (./engine/sound/vg):00463 [4]     5539            jmp   try_match
                      (./engine/sound/vg):00464                 
70E7                  (./engine/sound/vg):00465                 has_literals
                      (./engine/sound/vg):00466                         ; negate the literals counter so we can increment it rather than decrement it
70E7 FC6EA4           (./engine/sound/vg):00467 [6]     5545            ldd   vgc_literal_cnt
70EA 40               (./engine/sound/vg):00468 [2]     5547            nega
70EB 50               (./engine/sound/vg):00469 [2]     5549            negb
70EC 8200             (./engine/sound/vg):00470 [2]     5551            sbca  #0
70EE FD6EA4           (./engine/sound/vg):00471 [6]     5557            std   vgc_literal_cnt
                      (./engine/sound/vg):00472                 
                      (./engine/sound/vg):00473                         ; ok now go back to literal parser so we can return a byte
                      (./engine/sound/vg):00474                         ; if no literals, logic will fall through to matches
70F1 7E7074           (./engine/sound/vg):00475 [4]     5561            jmp   try_literal
                      (C:\Users\bhrou\gi):00114                 
                      (C:\Users\bhrou\gi):00115                 * reserve space for the vgm decode buffers (8x256 = 2Kb)
70F4 0000000000000000 (C:\Users\bhrou\gi):00116                         ALIGN 256
     00000000
7100                  (C:\Users\bhrou\gi):00117                 vgc_stream_buffers
7100 0000000000000000 (C:\Users\bhrou\gi):00118                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7200 0000000000000000 (C:\Users\bhrou\gi):00119                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7300 0000000000000000 (C:\Users\bhrou\gi):00120                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7400 0000000000000000 (C:\Users\bhrou\gi):00121                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7500 0000000000000000 (C:\Users\bhrou\gi):00122                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7600 0000000000000000 (C:\Users\bhrou\gi):00123                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7700 0000000000000000 (C:\Users\bhrou\gi):00124                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7800 0000000000000000 (C:\Users\bhrou\gi):00125                         fill 0,256
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (C:\Users\bhrou\gi):00126                         INCLUDE "./generated-code/game/BuilderMainGenCode.asm"
                      (./generated-code/):00001                 * Generated Code
                      (./generated-code/):00002                 
7900                  (./generated-code/):00003                 Pal_default
7900 0000             (./generated-code/):00004                         fdb   $0000
7902 1101             (./generated-code/):00005                         fdb   $1101
7904 4404             (./generated-code/):00006                         fdb   $4404
7906 BB0B             (./generated-code/):00007                         fdb   $bb0b
7908 0005             (./generated-code/):00008                         fdb   $0005
790A 000A             (./generated-code/):00009                         fdb   $000a
790C 100B             (./generated-code/):00010                         fdb   $100b
790E 200E             (./generated-code/):00011                         fdb   $200e
7910 3000             (./generated-code/):00012                         fdb   $3000
7912 9001             (./generated-code/):00013                         fdb   $9001
7914 0B00             (./generated-code/):00014                         fdb   $0b00
7916 1B00             (./generated-code/):00015                         fdb   $1b00
7918 0200             (./generated-code/):00016                         fdb   $0200
791A 1400             (./generated-code/):00017                         fdb   $1400
791C 3800             (./generated-code/):00018                         fdb   $3800
791E BB00             (./generated-code/):00019                         fdb   $bb00
                      (./generated-code/):00020                 
7920                  (./generated-code/):00021                 Obj_Index_Page
7920 00               (./generated-code/):00022                         fcb   $00
7921 64               (./generated-code/):00023                         fcb   $64
7922 64               (./generated-code/):00024                         fcb   $64
7923                  (./generated-code/):00025                 Obj_Index_Address
7923 0000             (./generated-code/):00026                         fcb   $00,$00
7925 16C8             (./generated-code/):00027                         fcb   $16,$C8
7927 016D             (./generated-code/):00028                         fcb   $01,$6D
7929                  (./generated-code/):00029                 Snd_01 
7929 802ABF3C96       (./generated-code/):00030                         fcb   $80,$2A,$BF,$3C,$96
792E 00               (./generated-code/):00031                         fcb   $00
792F                  (./generated-code/):00032                 Snd_02 
792F 800C5E2ABF       (./generated-code/):00033                         fcb   $80,$0C,$5E,$2A,$BF
7934 00               (./generated-code/):00034                         fcb   $00
7935                  (./generated-code/):00035                 Snd_03 
7935 8100002215       (./generated-code/):00036                         fcb   $81,$00,$00,$22,$15
793A 00               (./generated-code/):00037                         fcb   $00
793B                  (./generated-code/):00038                 Snd_04 
793B 80027F0C5E       (./generated-code/):00039                         fcb   $80,$02,$7F,$0C,$5E
7940 00               (./generated-code/):00040                         fcb   $00
7941                  (./generated-code/):00041                 Img_Page_Index
7941 00               (./generated-code/):00042                         fcb   $00
7942 80               (./generated-code/):00043                         fcb   $80
7943 80               (./generated-code/):00044                         fcb   $80
7944                  (./generated-code/):00045                 Ani_Page_Index
7944 00               (./generated-code/):00046                         fcb   $00
7945 80               (./generated-code/):00047                         fcb   $80
7946 80               (./generated-code/):00048                         fcb   $80
7947                  (./generated-code/):00049                 Ani_Asd_Index
7947 0000             (./generated-code/):00050                         fdb   $0000
7949 0000             (./generated-code/):00051                         fdb   $0000
794B 0000             (./generated-code/):00052                         fdb   $0000
794D                  (./generated-code/):00053                 LoadAct
794D C602             (./generated-code/):00054 [2]     5563            ldb   #$02                     * load page 2
794F F7E7E5           (./generated-code/):00055 [5]     5568            stb   $E7E5                    * in data space ($A000-$DFFF)
7952 8E0000           (./generated-code/):00056 [3]     5571            ldx   #$0000                   * set Background solid color
7955 BD6ACA           (./generated-code/):00057 [8]     5579            jsr   ClearDataMem
7958 B6E7DD           (./generated-code/):00058 [5]     5584            lda   $E7DD                    * set border color
795B 84F0             (./generated-code/):00059 [2]     5586            anda  #$F0
795D 8B00             (./generated-code/):00060 [2]     5588            adda  #$00                     * color ref
795F B7E7DD           (./generated-code/):00061 [5]     5593            sta   $E7DD
7962 840F             (./generated-code/):00062 [2]     5595            anda  #$0F
7964 8B80             (./generated-code/):00063 [2]     5597            adda  #$80
7966 B76B14           (./generated-code/):00064 [5]     5602            sta   glb_screen_border_color+1    * maj WaitVBL
7969 BD6B04           (./generated-code/):00065 [8]     5610            jsr   WaitVBL
796C C603             (./generated-code/):00066 [2]     5612            ldb   #$03                     * load page 3
796E F7E7E5           (./generated-code/):00067 [5]     5617            stb   $E7E5                    * data space ($A000-$DFFF)
7971 8E0000           (./generated-code/):00068 [3]     5620            ldx   #$0000                   * set Background solid color
7974 BD6ACA           (./generated-code/):00069 [8]     5628            jsr   ClearDataMem
7977 CC7900           (./generated-code/):00070 [3]     5631            ldd   #Pal_default
797A FD6DE3           (./generated-code/):00071 [6]     5637            std   Pal_current
797D 7F6DE2           (./generated-code/):00072 [7]     5644            clr   PalRefresh
7980 39               (./generated-code/):00073 [5]     5649            rts
