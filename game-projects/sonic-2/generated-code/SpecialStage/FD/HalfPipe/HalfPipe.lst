                      (C:\Users\bhrou\gi):00001                 opt   c,ct
                      (C:\Users\bhrou\gi):00002                         INCLUDE "./generated-code/SpecialStage/FD/main-engine.glb"
     864A             (./generated-code/):00001                 am_RunNextObject EQU $864A
     75C8             (./generated-code/):00002                 am_SwapVideoPage EQU $75C8
     985B             (./generated-code/):00003                 Ani_Asd_Index EQU $985B
     9858             (./generated-code/):00004                 Ani_Page_Index EQU $9858
     0004             (./generated-code/):00005                 anim EQU $0004
     7729             (./generated-code/):00006                 Anim_End EQU $7729
     7723             (./generated-code/):00007                 Anim_End_FA EQU $7723
     7717             (./generated-code/):00008                 Anim_End_FB EQU $7717
     7709             (./generated-code/):00009                 Anim_End_FC EQU $7709
     7700             (./generated-code/):00010                 Anim_End_FD EQU $7700
     76ED             (./generated-code/):00011                 Anim_End_FE EQU $76ED
     76F5             (./generated-code/):00012                 Anim_End_FE_dyn EQU $76F5
     76E2             (./generated-code/):00013                 Anim_End_FF EQU $76E2
     000A             (./generated-code/):00014                 anim_flags EQU $000A
     0008             (./generated-code/):00015                 anim_frame EQU $0008
     0009             (./generated-code/):00016                 anim_frame_duration EQU $0009
     0001             (./generated-code/):00017                 anim_link_mask EQU $0001
     76C9             (./generated-code/):00018                 Anim_Next EQU $76C9
     76BB             (./generated-code/):00019                 Anim_Reload EQU $76BB
     76DC             (./generated-code/):00020                 Anim_Rts EQU $76DC
     76B3             (./generated-code/):00021                 Anim_Run EQU $76B3
     7680             (./generated-code/):00022                 AnimateSprite EQU $7680
     85B3             (./generated-code/):00023                 BBA0 EQU $85B3
     85BC             (./generated-code/):00024                 BBA1 EQU $85BC
     85E8             (./generated-code/):00025                 BBA_DivideCell EQU $85E8
     85ED             (./generated-code/):00026                 BBA_dyn EQU $85ED
     85D2             (./generated-code/):00027                 BBA_FitCell EQU $85D2
     85C3             (./generated-code/):00028                 BBA_Next EQU $85C3
     8605             (./generated-code/):00029                 BBA_rts EQU $8605
     82CB             (./generated-code/):00030                 BBF_AddLastEntry EQU $82CB
     82D1             (./generated-code/):00031                 BBF_AddNewEntry EQU $82D1
     8261             (./generated-code/):00032                 BBF_cell_end EQU $8261
     825F             (./generated-code/):00033                 BBF_cell_start EQU $825F
     827E             (./generated-code/):00034                 BBF_CombineNext EQU $827E
     8294             (./generated-code/):00035                 BBF_CombineNextAndPrev EQU $8294
     82B6             (./generated-code/):00036                 BBF_CombinePrev EQU $82B6
     82B0             (./generated-code/):00037                 BBF_CombinePrevNoNext EQU $82B0
     82D4             (./generated-code/):00038                 BBF_FindFreeSlot EQU $82D4
     825E             (./generated-code/):00039                 BBF_nb_cells EQU $825E
     8263             (./generated-code/):00040                 BBF_prev EQU $8263
     82F3             (./generated-code/):00041                 BBF_rts EQU $82F3
     8267             (./generated-code/):00042                 BBF_SearchPos EQU $8267
     82DC             (./generated-code/):00043                 BBF_SetNewEntry EQU $82DC
     82EB             (./generated-code/):00044                 BBF_SetNewEntryNextentry EQU $82EB
     82F0             (./generated-code/):00045                 BBF_SetNewEntryPrevLink EQU $82F0
     85AC             (./generated-code/):00046                 BgBufferAlloc EQU $85AC
     8265             (./generated-code/):00047                 BgBufferFree EQU $8265
     9861             (./generated-code/):00048                 Bgi_specialStage EQU $9861
     8C39             (./generated-code/):00049                 BGMLoad EQU $8C39
     8CAB             (./generated-code/):00050                 BGMLoad_end EQU $8CAB
     880E             (./generated-code/):00051                 Black_palette EQU $880E
     000B             (./generated-code/):00052                 buf_bgdata EQU $000B
     0007             (./generated-code/):00053                 buf_erase_nb_cell EQU $0007
     0009             (./generated-code/):00054                 buf_erase_routine EQU $0009
     0024             (./generated-code/):00055                 buf_Lst_Priority_Unset EQU $0024
     0008             (./generated-code/):00056                 buf_page_erase_routine EQU $0008
     0005             (./generated-code/):00057                 buf_prev_mapping_frame EQU $0005
     0013             (./generated-code/):00058                 buf_prev_render_flags EQU $0013
     000F             (./generated-code/):00059                 buf_prev_x1_pixel EQU $000F
     0011             (./generated-code/):00060                 buf_prev_x2_pixel EQU $0011
     000D             (./generated-code/):00061                 buf_prev_x_pixel EQU $000D
     000F             (./generated-code/):00062                 buf_prev_xy1_pixel EQU $000F
     0011             (./generated-code/):00063                 buf_prev_xy2_pixel EQU $0011
     000D             (./generated-code/):00064                 buf_prev_xy_pixel EQU $000D
     0010             (./generated-code/):00065                 buf_prev_y1_pixel EQU $0010
     0012             (./generated-code/):00066                 buf_prev_y2_pixel EQU $0012
     000E             (./generated-code/):00067                 buf_prev_y_pixel EQU $000E
     0000             (./generated-code/):00068                 buf_priority EQU $0000
     0003             (./generated-code/):00069                 buf_priority_next_obj EQU $0003
     0001             (./generated-code/):00070                 buf_priority_prev_obj EQU $0001
     0000             (./generated-code/):00071                 buf_Tbl_Priority_First_Entry EQU $0000
     0012             (./generated-code/):00072                 buf_Tbl_Priority_Last_Entry EQU $0012
     010E             (./generated-code/):00073                 Build_RAMLoaderManager EQU $010E
     0044             (./generated-code/):00074                 c1_butn EQU $0044
     0040             (./generated-code/):00075                 c1_button_A_mask EQU $0040
     0004             (./generated-code/):00076                 c1_button_B_mask EQU $0004
     0002             (./generated-code/):00077                 c1_button_down_mask EQU $0002
     0004             (./generated-code/):00078                 c1_button_left_mask EQU $0004
     0008             (./generated-code/):00079                 c1_button_right_mask EQU $0008
     0001             (./generated-code/):00080                 c1_button_up_mask EQU $0001
     000F             (./generated-code/):00081                 c1_dpad EQU $000F
     0088             (./generated-code/):00082                 c2_butn EQU $0088
     0080             (./generated-code/):00083                 c2_button_A_mask EQU $0080
     0008             (./generated-code/):00084                 c2_button_B_mask EQU $0008
     0020             (./generated-code/):00085                 c2_button_down_mask EQU $0020
     0040             (./generated-code/):00086                 c2_button_left_mask EQU $0040
     0080             (./generated-code/):00087                 c2_button_right_mask EQU $0080
     0010             (./generated-code/):00088                 c2_button_up_mask EQU $0010
     00F0             (./generated-code/):00089                 c2_dpad EQU $00F0
     00C0             (./generated-code/):00090                 c_button_A_mask EQU $00C0
     000C             (./generated-code/):00091                 c_button_B_mask EQU $000C
     0022             (./generated-code/):00092                 c_button_down_mask EQU $0022
     0044             (./generated-code/):00093                 c_button_left_mask EQU $0044
     0088             (./generated-code/):00094                 c_button_right_mask EQU $0088
     0011             (./generated-code/):00095                 c_button_up_mask EQU $0011
     0003             (./generated-code/):00096                 cell_end EQU $0003
     8601             (./generated-code/):00097                 cell_end_return EQU $8601
     0040             (./generated-code/):00098                 cell_size EQU $0040
     0001             (./generated-code/):00099                 cell_start EQU $0001
     6000             (./generated-code/):00100                 cell_start_adr EQU $6000
     95E8             (./generated-code/):00101                 cfChangeFMVolume EQU $95E8
     964F             (./generated-code/):00102                 cfChangePSGVolume EQU $964F
     9624             (./generated-code/):00103                 cfChangeTransposition EQU $9624
     95C3             (./generated-code/):00104                 cfDetune EQU $95C3
     977A             (./generated-code/):00105                 cfDisableModulation EQU $977A
     96C0             (./generated-code/):00106                 cfEnableModulation EQU $96C0
     95E2             (./generated-code/):00107                 cfFadeInToPrevious EQU $95E2
     95D9             (./generated-code/):00108                 cfJumpReturn EQU $95D9
     9786             (./generated-code/):00109                 cfJumpTo EQU $9786
     97A3             (./generated-code/):00110                 cfJumpToGosub EQU $97A3
     969C             (./generated-code/):00111                 cfModulation EQU $969C
     97B4             (./generated-code/):00112                 cfNop EQU $97B4
     961C             (./generated-code/):00113                 cfNoteFill EQU $961C
     9615             (./generated-code/):00114                 cfPreventAttack EQU $9615
     978B             (./generated-code/):00115                 cfRepeatAtPos EQU $978B
     9768             (./generated-code/):00116                 cfSetPSGNoise EQU $9768
     9781             (./generated-code/):00117                 cfSetPSGTone EQU $9781
     962B             (./generated-code/):00118                 cfSetTempo EQU $962B
     95E3             (./generated-code/):00119                 cfSetTempoDivider EQU $95E3
     9631             (./generated-code/):00120                 cfSetTempoMod EQU $9631
     9656             (./generated-code/):00121                 cfSetVoice EQU $9656
     97B2             (./generated-code/):00122                 cfSkip1 EQU $97B2
     96C7             (./generated-code/):00123                 cfStopTrack EQU $96C7
     8770             (./generated-code/):00124                 ChangeGameMode EQU $8770
     7987             (./generated-code/):00125                 CheckSpritesRefresh EQU $7987
     87BB             (./generated-code/):00126                 CIDM_a EQU $87BB
     87C5             (./generated-code/):00127                 CIDM_a_end EQU $87C5
     87AF             (./generated-code/):00128                 CIDM_a_start EQU $87AF
     87D2             (./generated-code/):00129                 CIDM_b EQU $87D2
     87DC             (./generated-code/):00130                 CIDM_b_end EQU $87DC
     87CE             (./generated-code/):00131                 CIDM_b_start EQU $87CE
     87E5             (./generated-code/):00132                 CIDM_end EQU $87E5
     87A9             (./generated-code/):00133                 ClearInterlacedDataMemory EQU $87A9
     8787             (./generated-code/):00134                 ClearInterlacedEvenDataMemory EQU $8787
     8799             (./generated-code/):00135                 ClearInterlacedOddDataMemory EQU $8799
     8721             (./generated-code/):00136                 ClearObj EQU $8721
     874E             (./generated-code/):00137                 CLO_1 EQU $874E
     8758             (./generated-code/):00138                 CLO_2 EQU $8758
     957B             (./generated-code/):00139                 CoordFlag EQU $957B
     9583             (./generated-code/):00140                 CoordFlagLookup EQU $9583
     7A65             (./generated-code/):00141                 CSR_CheckDelHide EQU $7A65
     7C9E             (./generated-code/):00142                 CSR_CheckDraw EQU $7C9E
     7BC5             (./generated-code/):00143                 CSR_CheckErase EQU $7BC5
     7BE3             (./generated-code/):00144                 CSR_CheckErase_InRange EQU $7BE3
     7A9F             (./generated-code/):00145                 CSR_CheckPlayFieldCoord EQU $7A9F
     7B45             (./generated-code/):00146                 CSR_CheckPosition EQU $7B45
     7A6D             (./generated-code/):00147                 CSR_CheckRefresh EQU $7A6D
     7AEF             (./generated-code/):00148                 CSR_ComputeMappingFrame EQU $7AEF
     7AC8             (./generated-code/):00149                 CSR_DoNotDisplaySprite EQU $7AC8
     7B9F             (./generated-code/):00150                 CSR_DontCheckXFrontier EQU $7B9F
     7BB3             (./generated-code/):00151                 CSR_DontCheckXFrontier_end EQU $7BB3
     7AE8             (./generated-code/):00152                 CSR_NextObject EQU $7AE8
     7B0B             (./generated-code/):00153                 CSR_NoDefinedFrame EQU $7B0B
     79EF             (./generated-code/):00154                 CSR_P1B0 EQU $79EF
     7A55             (./generated-code/):00155                 CSR_P1B1 EQU $7A55
     79E3             (./generated-code/):00156                 CSR_P2B0 EQU $79E3
     7A49             (./generated-code/):00157                 CSR_P2B1 EQU $7A49
     79D7             (./generated-code/):00158                 CSR_P3B0 EQU $79D7
     7A3D             (./generated-code/):00159                 CSR_P3B1 EQU $7A3D
     79CB             (./generated-code/):00160                 CSR_P4B0 EQU $79CB
     7A31             (./generated-code/):00161                 CSR_P4B1 EQU $7A31
     79BF             (./generated-code/):00162                 CSR_P5B0 EQU $79BF
     7A25             (./generated-code/):00163                 CSR_P5B1 EQU $7A25
     79B3             (./generated-code/):00164                 CSR_P6B0 EQU $79B3
     7A19             (./generated-code/):00165                 CSR_P6B1 EQU $7A19
     79A7             (./generated-code/):00166                 CSR_P7B0 EQU $79A7
     7A0D             (./generated-code/):00167                 CSR_P7B1 EQU $7A0D
     799B             (./generated-code/):00168                 CSR_P8B0 EQU $799B
     7A01             (./generated-code/):00169                 CSR_P8B1 EQU $7A01
     7A62             (./generated-code/):00170                 CSR_ProcessEachPriorityLevel EQU $7A62
     79FB             (./generated-code/):00171                 CSR_rtsB0 EQU $79FB
     7A61             (./generated-code/):00172                 CSR_rtsB1 EQU $7A61
     7CCC             (./generated-code/):00173                 CSR_SDT1 EQU $7CCC
     7CD3             (./generated-code/):00174                 CSR_SDT2 EQU $7CD3
     7CD8             (./generated-code/):00175                 CSR_SDT3 EQU $7CD8
     7996             (./generated-code/):00176                 CSR_SetBuffer0 EQU $7996
     79FC             (./generated-code/):00177                 CSR_SetBuffer1 EQU $79FC
     7CF2             (./generated-code/):00178                 CSR_SetDrawFalse EQU $7CF2
     7CBE             (./generated-code/):00179                 CSR_SetDrawTrue EQU $7CBE
     7CEA             (./generated-code/):00180                 CSR_SetEraseDrawFalse EQU $7CEA
     7C96             (./generated-code/):00181                 CSR_SetEraseFalse EQU $7C96
     7C07             (./generated-code/):00182                 CSR_SetEraseTrue EQU $7C07
     7CDD             (./generated-code/):00183                 CSR_SetHide EQU $7CDD
     7BBD             (./generated-code/):00184                 CSR_SetOutOfRange EQU $7BBD
     7987             (./generated-code/):00185                 CSR_Start EQU $7987
     7C76             (./generated-code/):00186                 CSR_SubDrawCheckCollision EQU $7C76
     7C6E             (./generated-code/):00187                 CSR_SubDrawSearch EQU $7C6E
     7C6C             (./generated-code/):00188                 CSR_SubDrawSpriteSearchInit EQU $7C6C
     7C26             (./generated-code/):00189                 CSR_SubEraseCheckCollisionB0 EQU $7C26
     7C4D             (./generated-code/):00190                 CSR_SubEraseCheckCollisionB1 EQU $7C4D
     7C1E             (./generated-code/):00191                 CSR_SubEraseSearchB0 EQU $7C1E
     7C45             (./generated-code/):00192                 CSR_SubEraseSearchB1 EQU $7C45
     7C17             (./generated-code/):00193                 CSR_SubEraseSpriteSearchInit EQU $7C17
     7B2C             (./generated-code/):00194                 CSR_UpdateMetadata EQU $7B2C
     7A76             (./generated-code/):00195                 CSR_UpdSpriteImageBasedOnMirror EQU $7A76
     87EC             (./generated-code/):00196                 Cur_palette EQU $87EC
     7478             (./generated-code/):00197                 Current_Special_Stage EQU $7478
     8E2B             (./generated-code/):00198                 DACAfterDur EQU $8E2B
     8DF9             (./generated-code/):00199                 DACUpdateTrack EQU $8DF9
     0004             (./generated-code/):00200                 DataPointer EQU $0004
     8659             (./generated-code/):00201                 DeleteObject EQU $8659
     8657             (./generated-code/):00202                 DeleteObject_return EQU $8657
     8651             (./generated-code/):00203                 DeleteObject_x EQU $8651
     0019             (./generated-code/):00204                 Detune EQU $0019
     761D             (./generated-code/):00205                 DFI_a EQU $761D
     7675             (./generated-code/):00206                 DFI_a_rts EQU $7675
     764B             (./generated-code/):00207                 DFI_b EQU $764B
     7679             (./generated-code/):00208                 DFI_rts EQU $7679
     774C             (./generated-code/):00209                 DisplaySprite EQU $774C
     7746             (./generated-code/):00210                 DisplaySprite_x EQU $7746
     6049             (./generated-code/):00211                 dk_drive EQU $6049
     604C             (./generated-code/):00212                 dk_sector EQU $604C
     604A             (./generated-code/):00213                 dk_track EQU $604A
     604B             (./generated-code/):00214                 dk_track_lsb EQU $604B
     604F             (./generated-code/):00215                 dk_write_location EQU $604F
     86C3             (./generated-code/):00216                 DOB_ChainNextB0 EQU $86C3
     870D             (./generated-code/):00217                 DOB_ChainNextB1 EQU $870D
     86A3             (./generated-code/):00218                 DOB_ChainPrevB0 EQU $86A3
     86E5             (./generated-code/):00219                 DOB_ChainPrevB1 EQU $86E5
     86AD             (./generated-code/):00220                 DOB_CheckPrioNextB0 EQU $86AD
     86EF             (./generated-code/):00221                 DOB_CheckPrioNextB1 EQU $86EF
     868D             (./generated-code/):00222                 DOB_RemoveFromDPSB0 EQU $868D
     86CF             (./generated-code/):00223                 DOB_RemoveFromDPSB1 EQU $86CF
     870B             (./generated-code/):00224                 DOB_rts EQU $870B
     8661             (./generated-code/):00225                 DOB_Start EQU $8661
     8676             (./generated-code/):00226                 DOB_TestOnscreen1 EQU $8676
     8666             (./generated-code/):00227                 DOB_ToDeleteFlag0 EQU $8666
     867B             (./generated-code/):00228                 DOB_ToDeleteFlag1 EQU $867B
     866C             (./generated-code/):00229                 DOB_Unset0 EQU $866C
     8681             (./generated-code/):00230                 DOB_Unset1 EQU $8681
     8F37             (./generated-code/):00231                 DoModulation EQU $8F37
     8BAF             (./generated-code/):00232                 DoSFXFlag EQU $8BAF
     8609             (./generated-code/):00233                 Dpad_Held EQU $8609
     860B             (./generated-code/):00234                 Dpad_Press EQU $860B
     8607             (./generated-code/):00235                 Dpad_Read EQU $8607
     77CB             (./generated-code/):00236                 DPS_buffer_0 EQU $77CB
     784D             (./generated-code/):00237                 DPS_buffer_1 EQU $784D
     78CF             (./generated-code/):00238                 DPS_buffer_end EQU $78CF
     0001             (./generated-code/):00239                 draw_routine EQU $0001
     7606             (./generated-code/):00240                 DrawFullscreenImage EQU $7606
     83D6             (./generated-code/):00241                 DrawSprites EQU $83D6
     8481             (./generated-code/):00242                 DRS_DrawWithoutBackupB0 EQU $8481
     8540             (./generated-code/):00243                 DRS_DrawWithoutBackupB1 EQU $8540
     8500             (./generated-code/):00244                 DRS_dyn1 EQU $8500
     8511             (./generated-code/):00245                 DRS_dyn2 EQU $8511
     849E             (./generated-code/):00246                 DRS_dyn3B0 EQU $849E
     855D             (./generated-code/):00247                 DRS_dyn3B1 EQU $855D
     84E5             (./generated-code/):00248                 DRS_NextObjectB0 EQU $84E5
     85A4             (./generated-code/):00249                 DRS_NextObjectB1 EQU $85A4
     84D8             (./generated-code/):00250                 DRS_NoOverlayB0 EQU $84D8
     8597             (./generated-code/):00251                 DRS_NoOverlayB1 EQU $8597
     8413             (./generated-code/):00252                 DRS_P1B0 EQU $8413
     8454             (./generated-code/):00253                 DRS_P1B1 EQU $8454
     840B             (./generated-code/):00254                 DRS_P2B0 EQU $840B
     844C             (./generated-code/):00255                 DRS_P2B1 EQU $844C
     8403             (./generated-code/):00256                 DRS_P3B0 EQU $8403
     8444             (./generated-code/):00257                 DRS_P3B1 EQU $8444
     83FB             (./generated-code/):00258                 DRS_P4B0 EQU $83FB
     843C             (./generated-code/):00259                 DRS_P4B1 EQU $843C
     83F3             (./generated-code/):00260                 DRS_P5B0 EQU $83F3
     8434             (./generated-code/):00261                 DRS_P5B1 EQU $8434
     83EB             (./generated-code/):00262                 DRS_P6B0 EQU $83EB
     842C             (./generated-code/):00263                 DRS_P6B1 EQU $842C
     83E3             (./generated-code/):00264                 DRS_P7B0 EQU $83E3
     8424             (./generated-code/):00265                 DRS_P7B1 EQU $8424
     83DB             (./generated-code/):00266                 DRS_P8B0 EQU $83DB
     841C             (./generated-code/):00267                 DRS_P8B1 EQU $841C
     845D             (./generated-code/):00268                 DRS_ProcessEachPriorityLevelB0 EQU $845D
     851C             (./generated-code/):00269                 DRS_ProcessEachPriorityLevelB1 EQU $851C
     841B             (./generated-code/):00270                 DRS_rtsB0 EQU $841B
     845C             (./generated-code/):00271                 DRS_rtsB1 EQU $845C
     83D6             (./generated-code/):00272                 DRS_Start EQU $83D6
     84DA             (./generated-code/):00273                 DRS_UpdateRenderFlagB0 EQU $84DA
     8599             (./generated-code/):00274                 DRS_UpdateRenderFlagB1 EQU $8599
     84ED             (./generated-code/):00275                 DRS_XYToAddress EQU $84ED
     84F4             (./generated-code/):00276                 DRS_XYToAddressPositive EQU $84F4
     84FA             (./generated-code/):00277                 DRS_XYToAddressRAM1First EQU $84FA
     850B             (./generated-code/):00278                 DRS_XYToAddressRAM2First EQU $850B
     777E             (./generated-code/):00279                 DSP_addFirstNode EQU $777E
     778F             (./generated-code/):00280                 DSP_addToExistingNode EQU $778F
     7769             (./generated-code/):00281                 DSP_BufferPositionned EQU $7769
     77B4             (./generated-code/):00282                 DSP_ChangePriority EQU $77B4
     7775             (./generated-code/):00283                 DSP_CheckLastEntry EQU $7775
     7773             (./generated-code/):00284                 DSP_InitPriority EQU $7773
     77A4             (./generated-code/):00285                 DSP_LinkBuffer1 EQU $77A4
     77B0             (./generated-code/):00286                 DSP_LinkCurWithPrev EQU $77B0
     778D             (./generated-code/):00287                 DSP_rts EQU $778D
     7759             (./generated-code/):00288                 DSP_SetBuffer0 EQU $7759
     7762             (./generated-code/):00289                 DSP_SetBuffer1 EQU $7762
     774E             (./generated-code/):00290                 DSP_Start EQU $774E
     000B             (./generated-code/):00291                 DurationTimeout EQU $000B
     87EE             (./generated-code/):00292                 Dyn_palette EQU $87EE
     6355             (./generated-code/):00293                 Dynamic_Object_RAM EQU $6355
     740D             (./generated-code/):00294                 Dynamic_Object_RAM_End EQU $740D
     91BA             (./generated-code/):00295                 DynVol EQU $91BA
     0007             (./generated-code/):00296                 entry_size EQU $0007
     0006             (./generated-code/):00297                 erase_nb_cell EQU $0006
     0004             (./generated-code/):00298                 erase_routine EQU $0004
     8091             (./generated-code/):00299                 EraseSprites EQU $8091
     8190             (./generated-code/):00300                 ESP_CallEraseRoutineB0 EQU $8190
     81A4             (./generated-code/):00301                 ESP_CallEraseRoutineB0_00 EQU $81A4
     8209             (./generated-code/):00302                 ESP_CallEraseRoutineB1 EQU $8209
     821D             (./generated-code/):00303                 ESP_CallEraseRoutineB1_00 EQU $821D
     8183             (./generated-code/):00304                 ESP_CheckEraseB0 EQU $8183
     81FC             (./generated-code/):00305                 ESP_CheckEraseB1 EQU $81FC
     816F             (./generated-code/):00306                 ESP_CheckPriorityB0 EQU $816F
     81E8             (./generated-code/):00307                 ESP_CheckPriorityB1 EQU $81E8
     81B2             (./generated-code/):00308                 ESP_FreeEraseBufferB0 EQU $81B2
     822B             (./generated-code/):00309                 ESP_FreeEraseBufferB1 EQU $822B
     81DD             (./generated-code/):00310                 ESP_NextObjectB0 EQU $81DD
     8256             (./generated-code/):00311                 ESP_NextObjectB1 EQU $8256
     809A             (./generated-code/):00312                 ESP_P1B0 EQU $809A
     8103             (./generated-code/):00313                 ESP_P1B1 EQU $8103
     80A7             (./generated-code/):00314                 ESP_P2B0 EQU $80A7
     8110             (./generated-code/):00315                 ESP_P2B1 EQU $8110
     80B4             (./generated-code/):00316                 ESP_P3B0 EQU $80B4
     811D             (./generated-code/):00317                 ESP_P3B1 EQU $811D
     80C1             (./generated-code/):00318                 ESP_P4B0 EQU $80C1
     812A             (./generated-code/):00319                 ESP_P4B1 EQU $812A
     80CE             (./generated-code/):00320                 ESP_P5B0 EQU $80CE
     8137             (./generated-code/):00321                 ESP_P5B1 EQU $8137
     80DB             (./generated-code/):00322                 ESP_P6B0 EQU $80DB
     8144             (./generated-code/):00323                 ESP_P6B1 EQU $8144
     80E8             (./generated-code/):00324                 ESP_P7B0 EQU $80E8
     8151             (./generated-code/):00325                 ESP_P7B1 EQU $8151
     80F5             (./generated-code/):00326                 ESP_P8B0 EQU $80F5
     815E             (./generated-code/):00327                 ESP_P8B1 EQU $815E
     816C             (./generated-code/):00328                 ESP_ProcessEachPriorityLevelB0 EQU $816C
     81E5             (./generated-code/):00329                 ESP_ProcessEachPriorityLevelB1 EQU $81E5
     8102             (./generated-code/):00330                 ESP_rtsB0 EQU $8102
     816B             (./generated-code/):00331                 ESP_rtsB1 EQU $816B
     8095             (./generated-code/):00332                 ESP_Start EQU $8095
     8175             (./generated-code/):00333                 ESP_UnsetCheckRefreshB0 EQU $8175
     81EE             (./generated-code/):00334                 ESP_UnsetCheckRefreshB1 EQU $81EE
     81CD             (./generated-code/):00335                 ESP_UnsetOnScreenFlagB0 EQU $81CD
     8246             (./generated-code/):00336                 ESP_UnsetOnScreenFlagB1 EQU $8246
     005D             (./generated-code/):00337                 ext_variables EQU $005D
     000E             (./generated-code/):00338                 ext_variables_size EQU $000E
     8EE9             (./generated-code/):00339                 FinishTrackUpdate EQU $8EE9
     860A             (./generated-code/):00340                 Fire_Held EQU $860A
     860C             (./generated-code/):00341                 Fire_Press EQU $860C
     8608             (./generated-code/):00342                 Fire_Read EQU $8608
     92E9             (./generated-code/):00343                 Flutter1 EQU $92E9
     93B1             (./generated-code/):00344                 Flutter10 EQU $93B1
     93EF             (./generated-code/):00345                 Flutter11 EQU $93EF
     940B             (./generated-code/):00346                 Flutter12 EQU $940B
     948B             (./generated-code/):00347                 Flutter13 EQU $948B
     9300             (./generated-code/):00348                 Flutter2 EQU $9300
     9307             (./generated-code/):00349                 Flutter3 EQU $9307
     9318             (./generated-code/):00350                 Flutter4 EQU $9318
     9323             (./generated-code/):00351                 Flutter5 EQU $9323
     9332             (./generated-code/):00352                 Flutter6 EQU $9332
     935C             (./generated-code/):00353                 Flutter7 EQU $935C
     9378             (./generated-code/):00354                 Flutter8 EQU $9378
     93A0             (./generated-code/):00355                 Flutter9 EQU $93A0
     8E62             (./generated-code/):00356                 FMDoNext EQU $8E62
     8FB9             (./generated-code/):00357                 FMFrequencies EQU $8FB9
     8E78             (./generated-code/):00358                 FMNoteOff EQU $8E78
     8F06             (./generated-code/):00359                 FMPrepareNote EQU $8F06
     8E6A             (./generated-code/):00360                 FMReadCoordFlag EQU $8E6A
     8EE4             (./generated-code/):00361                 FMSetDuration EQU $8EE4
     8EE2             (./generated-code/):00362                 FMSetDurationAndForward EQU $8EE2
     8E94             (./generated-code/):00363                 FMSetFreq EQU $8E94
     8BFB             (./generated-code/):00364                 FMSilenceAll EQU $8BFB
     8F75             (./generated-code/):00365                 FMUpdateFreq EQU $8F75
     8F11             (./generated-code/):00366                 FMUpdateFreqAndNoteOn EQU $8F11
     8E58             (./generated-code/):00367                 FMUpdateTrack EQU $8E58
     876F             (./generated-code/):00368                 GameMode EQU $876F
     7595             (./generated-code/):00369                 GetCartPageA EQU $7595
     759E             (./generated-code/):00370                 GetCartPageB EQU $759E
     7740             (./generated-code/):00371                 GetImgId_Rts EQU $7740
     772B             (./generated-code/):00372                 GetImgIdA EQU $772B
     876D             (./generated-code/):00373                 glb_Address EQU $876D
     9FE6             (./generated-code/):00374                 glb_alphaTiles EQU $9FE6
     9FE7             (./generated-code/):00375                 glb_camera_move EQU $9FE7
     9FEB             (./generated-code/):00376                 glb_camera_x_max_pos EQU $9FEB
     9FEF             (./generated-code/):00377                 glb_camera_x_min_pos EQU $9FEF
     9FF3             (./generated-code/):00378                 glb_camera_x_pos EQU $9FF3
     9FE9             (./generated-code/):00379                 glb_camera_y_max_pos EQU $9FE9
     9FED             (./generated-code/):00380                 glb_camera_y_min_pos EQU $9FED
     9FF1             (./generated-code/):00381                 glb_camera_y_pos EQU $9FF1
     8771             (./generated-code/):00382                 glb_Cur_Game_Mode EQU $8771
     9FF9             (./generated-code/):00383                 glb_cur_priority EQU $9FF9
     9FF5             (./generated-code/):00384                 glb_cur_ptr_sub_obj_draw EQU $9FF5
     9FF7             (./generated-code/):00385                 glb_cur_ptr_sub_obj_erase EQU $9FF7
     7605             (./generated-code/):00386                 glb_Cur_Wrk_Screen_Id EQU $7605
     009F             (./generated-code/):00387                 glb_direct_page EQU $009F
     9FE8             (./generated-code/):00388                 glb_force_sprite_refresh EQU $9FE8
     75FC             (./generated-code/):00389                 glb_Main_runcount EQU $75FC
     8772             (./generated-code/):00390                 glb_Next_Game_Mode EQU $8772
     7538             (./generated-code/):00391                 glb_Page EQU $7538
     9FFE             (./generated-code/):00392                 glb_register_s EQU $9FFE
     75C0             (./generated-code/):00393                 glb_screen_border_color EQU $75C0
     9FFC             (./generated-code/):00394                 glb_screen_location_1 EQU $9FFC
     9FFA             (./generated-code/):00395                 glb_screen_location_2 EQU $9FFA
     9F00             (./generated-code/):00396                 glb_system_stack EQU $9F00
     9F00             (./generated-code/):00397                 glb_tmp_var EQU $9F00
     0000             (./generated-code/):00398                 gmboot EQU $0000
     0000             (./generated-code/):00399                 GmID_SpecialStage EQU $0000
     002A             (./generated-code/):00400                 GoSubStack EQU $002A
     7535             (./generated-code/):00401                 HalfPipe_Nb_Elapsed_Frames EQU $7535
     752C             (./generated-code/):00402                 HalfPipe_Seq EQU $752C
     752D             (./generated-code/):00403                 HalfPipe_Seq_UpdFlip EQU $752D
     7536             (./generated-code/):00404                 HalfPipe_Vint_Main_Loop EQU $7536
     752F             (./generated-code/):00405                 HalfPipe_Vint_Track_Image EQU $752F
     7533             (./generated-code/):00406                 HalfPipe_z_step EQU $7533
     61A9             (./generated-code/):00407                 HalfPipeEven EQU $61A9
     6214             (./generated-code/):00408                 HalfPipeOdd EQU $6214
     0000             (./generated-code/):00409                 id EQU $0000
     0006             (./generated-code/):00410                 image_center_offset EQU $0006
     000C             (./generated-code/):00411                 image_set EQU $000C
     0004             (./generated-code/):00412                 image_subset_x1_offset EQU $0004
     0005             (./generated-code/):00413                 image_subset_y1_offset EQU $0005
     0004             (./generated-code/):00414                 image_x_size EQU $0004
     0005             (./generated-code/):00415                 image_y_size EQU $0005
     9855             (./generated-code/):00416                 Img_Page_Index EQU $9855
     8BF4             (./generated-code/):00417                 InitMusicPlayback EQU $8BF4
     8CB2             (./generated-code/):00418                 InitTrackFM EQU $8CB2
     8CD3             (./generated-code/):00419                 InitTrackPSG EQU $8CD3
     001F             (./generated-code/):00420                 InstrAndVolume EQU $001F
     001E             (./generated-code/):00421                 InstrTranspose EQU $001E
     4DFF             (./generated-code/):00422                 irq_one_frame EQU $4DFF
     6027             (./generated-code/):00423                 irq_routine EQU $6027
     E7C6             (./generated-code/):00424                 irq_timer EQU $E7C6
     E7C5             (./generated-code/):00425                 irq_timer_ctrl EQU $E7C5
     97D5             (./generated-code/):00426                 IrqOff EQU $97D5
     97CA             (./generated-code/):00427                 IrqOn EQU $97CA
     97B5             (./generated-code/):00428                 IrqSet50Hz EQU $97B5
     97E0             (./generated-code/):00429                 IrqSmps EQU $97E0
     97FE             (./generated-code/):00430                 IrqSmps_end EQU $97FE
     9826             (./generated-code/):00431                 IRQSysStack EQU $9826
     8609             (./generated-code/):00432                 Joypads EQU $8609
     8609             (./generated-code/):00433                 Joypads_Held EQU $8609
     860B             (./generated-code/):00434                 Joypads_Press EQU $860B
     8607             (./generated-code/):00435                 Joypads_Read EQU $8607
     6116             (./generated-code/):00436                 LevelMainLoop EQU $6116
     9864             (./generated-code/):00437                 LoadAct EQU $9864
     8773             (./generated-code/):00438                 LoadGameMode EQU $8773
     8779             (./generated-code/):00439                 LoadGameModeNow EQU $8779
     0020             (./generated-code/):00440                 LoopCounters EQU $0020
     7D03             (./generated-code/):00441                 Lst_FreeCell_0 EQU $7D03
     7ECB             (./generated-code/):00442                 Lst_FreeCell_1 EQU $7ECB
     7D01             (./generated-code/):00443                 Lst_FreeCellFirstEntry_0 EQU $7D01
     7EC9             (./generated-code/):00444                 Lst_FreeCellFirstEntry_1 EQU $7EC9
     77EF             (./generated-code/):00445                 Lst_Priority_Unset_0 EQU $77EF
     7871             (./generated-code/):00446                 Lst_Priority_Unset_1 EQU $7871
     627F             (./generated-code/):00447                 MainCharacter EQU $627F
     0015             (./generated-code/):00448                 ModulationDelta EQU $0015
     0011             (./generated-code/):00449                 ModulationPtr EQU $0011
     0014             (./generated-code/):00450                 ModulationSpeed EQU $0014
     0016             (./generated-code/):00451                 ModulationSteps EQU $0016
     0017             (./generated-code/):00452                 ModulationVal EQU $0017
     0013             (./generated-code/):00453                 ModulationWait EQU $0013
     000A             (./generated-code/):00454                 MUSIC_DAC_FM_TRACK_COUNT EQU $000A
     0009             (./generated-code/):00455                 MUSIC_FM_TRACK_COUNT EQU $0009
     0003             (./generated-code/):00456                 MUSIC_PSG_TRACK_COUNT EQU $0003
     000D             (./generated-code/):00457                 MUSIC_TRACK_COUNT EQU $000D
     8BB4             (./generated-code/):00458                 MusicData EQU $8BB4
     8CF8             (./generated-code/):00459                 MusicFrame EQU $8CF8
     8BB2             (./generated-code/):00460                 MusicPage EQU $8BB2
     94AB             (./generated-code/):00461                 MusicTrackOffs EQU $94AB
     0000             (./generated-code/):00462                 nb_cells EQU $0000
     0028             (./generated-code/):00463                 nb_dynamic_objects EQU $0028
     0080             (./generated-code/):00464                 nb_free_cells EQU $0080
     002E             (./generated-code/):00465                 nb_graphical_objects EQU $002E
     0003             (./generated-code/):00466                 nb_level_objects EQU $0003
     0008             (./generated-code/):00467                 nb_priority_levels EQU $0008
     0002             (./generated-code/):00468                 nb_reserved_objects EQU $0002
     0005             (./generated-code/):00469                 next_entry EQU $0005
     006B             (./generated-code/):00470                 next_object EQU $006B
     000D             (./generated-code/):00471                 NextData EQU $000D
     0002             (./generated-code/):00472                 NoteControl EQU $0002
     8E90             (./generated-code/):00473                 NoteDyn EQU $8E90
     0010             (./generated-code/):00474                 NoteFillMaster EQU $0010
     000F             (./generated-code/):00475                 NoteFillTimeout EQU $000F
     8EBF             (./generated-code/):00476                 NoteFillUpdate EQU $8EBF
     9849             (./generated-code/):00477                 Obj_Index_Address EQU $9849
     9846             (./generated-code/):00478                 Obj_Index_Page EQU $9846
     005D             (./generated-code/):00479                 object_core_size EQU $005D
     627F             (./generated-code/):00480                 Object_RAM EQU $627F
     7478             (./generated-code/):00481                 Object_RAM_End EQU $7478
     006B             (./generated-code/):00482                 object_size EQU $006B
     0002             (./generated-code/):00483                 ObjID_HalfPipe EQU $0002
     0001             (./generated-code/):00484                 ObjID_SSBomb EQU $0001
     0000             (./generated-code/):00485                 page_draw_routine EQU $0000
     0003             (./generated-code/):00486                 page_erase_routine EQU $0003
     9826             (./generated-code/):00487                 Pal_HalfPipe EQU $9826
     8BAE             (./generated-code/):00488                 PALUpdTick EQU $8BAE
     8BB0             (./generated-code/):00489                 Paused EQU $8BB0
     0000             (./generated-code/):00490                 PlaybackControl EQU $0000
     8C39             (./generated-code/):00491                 PlayMusic EQU $8C39
     94BB             (./generated-code/):00492                 PlaySound EQU $94BB
     9573             (./generated-code/):00493                 PlaySound_end EQU $9573
     0006             (./generated-code/):00494                 prev_anim EQU $0006
     0003             (./generated-code/):00495                 priority EQU $0003
     957A             (./generated-code/):00496                 PS_cnt EQU $957A
     E7FF             (./generated-code/):00497                 PSG EQU $E7FF
     92CD             (./generated-code/):00498                 PSG_FlutterTbl EQU $92CD
     91D3             (./generated-code/):00499                 PSGDoModulation EQU $91D3
     90E0             (./generated-code/):00500                 PSGDoNext EQU $90E0
     914D             (./generated-code/):00501                 PSGDoNoteOn EQU $914D
     918D             (./generated-code/):00502                 PSGDoVolFX EQU $918D
     912E             (./generated-code/):00503                 PSGFinishTrackUpdate EQU $912E
     9196             (./generated-code/):00504                 PSGFlutter EQU $9196
     923B             (./generated-code/):00505                 PSGFrequencies EQU $923B
     001B             (./generated-code/):00506                 PSGNoise EQU $001B
     90B9             (./generated-code/):00507                 PSGNoteFillUpdate EQU $90B9
     90E8             (./generated-code/):00508                 PSGReadCoordFlag EQU $90E8
     9129             (./generated-code/):00509                 PSGSetDuration EQU $9129
     9127             (./generated-code/):00510                 PSGSetDurationAndForward EQU $9127
     90F5             (./generated-code/):00511                 PSGSetFreq EQU $90F5
     8C24             (./generated-code/):00512                 PSGSilenceAll EQU $8C24
     9154             (./generated-code/):00513                 PSGUpdateFreq EQU $9154
     9211             (./generated-code/):00514                 PSGUpdateFreq2 EQU $9211
     90D6             (./generated-code/):00515                 PSGUpdateTrack EQU $90D6
     91B0             (./generated-code/):00516                 PSGUpdateVol EQU $91B0
     917C             (./generated-code/):00517                 PSGUpdateVolFX EQU $917C
     860D             (./generated-code/):00518                 ReadJoypads EQU $860D
     87EB             (./generated-code/):00519                 Refresh_palette EQU $87EB
     0002             (./generated-code/):00520                 render_flags EQU $0002
     0020             (./generated-code/):00521                 render_hide_mask EQU $0020
     0008             (./generated-code/):00522                 render_motionless_mask EQU $0008
     0004             (./generated-code/):00523                 render_overlay_mask EQU $0004
     0010             (./generated-code/):00524                 render_playfieldcoord_mask EQU $0010
     0040             (./generated-code/):00525                 render_todelete_mask EQU $0040
     0080             (./generated-code/):00526                 render_xloop_mask EQU $0080
     0001             (./generated-code/):00527                 render_xmirror_mask EQU $0001
     0002             (./generated-code/):00528                 render_ymirror_mask EQU $0002
     7479             (./generated-code/):00529                 Ring_count EQU $7479
     001E             (./generated-code/):00530                 routine EQU $001E
     0021             (./generated-code/):00531                 routine_quaternary EQU $0021
     001F             (./generated-code/):00532                 routine_secondary EQU $001F
     0020             (./generated-code/):00533                 routine_tertiary EQU $0020
     0040             (./generated-code/):00534                 rsv_bgdata_0 EQU $0040
     0054             (./generated-code/):00535                 rsv_bgdata_1 EQU $0054
     0035             (./generated-code/):00536                 rsv_buffer_0 EQU $0035
     0049             (./generated-code/):00537                 rsv_buffer_1 EQU $0049
     002C             (./generated-code/):00538                 rsv_draw_routine EQU $002C
     002A             (./generated-code/):00539                 rsv_erase_nb_cell EQU $002A
     002F             (./generated-code/):00540                 rsv_erase_routine EQU $002F
     0025             (./generated-code/):00541                 rsv_image_center_offset EQU $0025
     0026             (./generated-code/):00542                 rsv_image_subset EQU $0026
     0028             (./generated-code/):00543                 rsv_mapping_frame EQU $0028
     002B             (./generated-code/):00544                 rsv_page_draw_routine EQU $002B
     002E             (./generated-code/):00545                 rsv_page_erase_routine EQU $002E
     0023             (./generated-code/):00546                 rsv_prev_anim EQU $0023
     003C             (./generated-code/):00547                 rsv_prev_erase_nb_cell_0 EQU $003C
     0050             (./generated-code/):00548                 rsv_prev_erase_nb_cell_1 EQU $0050
     003E             (./generated-code/):00549                 rsv_prev_erase_routine_0 EQU $003E
     0052             (./generated-code/):00550                 rsv_prev_erase_routine_1 EQU $0052
     003A             (./generated-code/):00551                 rsv_prev_mapping_frame_0 EQU $003A
     004E             (./generated-code/):00552                 rsv_prev_mapping_frame_1 EQU $004E
     003D             (./generated-code/):00553                 rsv_prev_page_erase_routine_0 EQU $003D
     0051             (./generated-code/):00554                 rsv_prev_page_erase_routine_1 EQU $0051
     0048             (./generated-code/):00555                 rsv_prev_render_flags_0 EQU $0048
     005C             (./generated-code/):00556                 rsv_prev_render_flags_1 EQU $005C
     0080             (./generated-code/):00557                 rsv_prev_render_onscreen_mask EQU $0080
     0001             (./generated-code/):00558                 rsv_prev_render_overlay_mask EQU $0001
     0044             (./generated-code/):00559                 rsv_prev_x1_pixel_0 EQU $0044
     0058             (./generated-code/):00560                 rsv_prev_x1_pixel_1 EQU $0058
     0046             (./generated-code/):00561                 rsv_prev_x2_pixel_0 EQU $0046
     005A             (./generated-code/):00562                 rsv_prev_x2_pixel_1 EQU $005A
     0042             (./generated-code/):00563                 rsv_prev_x_pixel_0 EQU $0042
     0056             (./generated-code/):00564                 rsv_prev_x_pixel_1 EQU $0056
     0044             (./generated-code/):00565                 rsv_prev_xy1_pixel_0 EQU $0044
     0058             (./generated-code/):00566                 rsv_prev_xy1_pixel_1 EQU $0058
     0046             (./generated-code/):00567                 rsv_prev_xy2_pixel_0 EQU $0046
     005A             (./generated-code/):00568                 rsv_prev_xy2_pixel_1 EQU $005A
     0042             (./generated-code/):00569                 rsv_prev_xy_pixel_0 EQU $0042
     0056             (./generated-code/):00570                 rsv_prev_xy_pixel_1 EQU $0056
     0045             (./generated-code/):00571                 rsv_prev_y1_pixel_0 EQU $0045
     0059             (./generated-code/):00572                 rsv_prev_y1_pixel_1 EQU $0059
     0047             (./generated-code/):00573                 rsv_prev_y2_pixel_0 EQU $0047
     005B             (./generated-code/):00574                 rsv_prev_y2_pixel_1 EQU $005B
     0043             (./generated-code/):00575                 rsv_prev_y_pixel_0 EQU $0043
     0057             (./generated-code/):00576                 rsv_prev_y_pixel_1 EQU $0057
     0035             (./generated-code/):00577                 rsv_priority_0 EQU $0035
     0049             (./generated-code/):00578                 rsv_priority_1 EQU $0049
     0038             (./generated-code/):00579                 rsv_priority_next_obj_0 EQU $0038
     004C             (./generated-code/):00580                 rsv_priority_next_obj_1 EQU $004C
     0036             (./generated-code/):00581                 rsv_priority_prev_obj_0 EQU $0036
     004A             (./generated-code/):00582                 rsv_priority_prev_obj_1 EQU $004A
     0001             (./generated-code/):00583                 rsv_render_checkrefresh_mask EQU $0001
     0004             (./generated-code/):00584                 rsv_render_displaysprite_mask EQU $0004
     0002             (./generated-code/):00585                 rsv_render_erasesprite_mask EQU $0002
     0022             (./generated-code/):00586                 rsv_render_flags EQU $0022
     0080             (./generated-code/):00587                 rsv_render_onscreen_mask EQU $0080
     0008             (./generated-code/):00588                 rsv_render_outofrange_mask EQU $0008
     0031             (./generated-code/):00589                 rsv_x1_pixel EQU $0031
     0033             (./generated-code/):00590                 rsv_x2_pixel EQU $0033
     0031             (./generated-code/):00591                 rsv_xy1_pixel EQU $0031
     0033             (./generated-code/):00592                 rsv_xy2_pixel EQU $0033
     0032             (./generated-code/):00593                 rsv_y1_pixel EQU $0032
     0034             (./generated-code/):00594                 rsv_y2_pixel EQU $0034
     8647             (./generated-code/):00595                 RunNextObject EQU $8647
     8633             (./generated-code/):00596                 RunObject EQU $8633
     862E             (./generated-code/):00597                 RunObjects EQU $862E
     8633             (./generated-code/):00598                 RunObjects_01 EQU $8633
     8650             (./generated-code/):00599                 RunObjects_End EQU $8650
     8651             (./generated-code/):00600                 RunObjectsWhenPlayerIsDead EQU $8651
     875A             (./generated-code/):00601                 RunPgSubRoutine EQU $875A
     8767             (./generated-code/):00602                 RunPgSubRoutine_return EQU $8767
     000C             (./generated-code/):00603                 SavedDuration EQU $000C
     00E3             (./generated-code/):00604                 screen_bottom EQU $00E3
     0030             (./generated-code/):00605                 screen_left EQU $0030
     00CF             (./generated-code/):00606                 screen_right EQU $00CF
     001C             (./generated-code/):00607                 screen_top EQU $001C
     00A0             (./generated-code/):00608                 screen_width EQU $00A0
     7539             (./generated-code/):00609                 SetCartPageA EQU $7539
     7567             (./generated-code/):00610                 SetCartPageB EQU $7567
     8E24             (./generated-code/):00611                 SetDuration EQU $8E24
     8E22             (./generated-code/):00612                 SetDurationAndForward EQU $8E22
     96A5             (./generated-code/):00613                 SetModulation EQU $96A5
     0006             (./generated-code/):00614                 SFX_TRACK_COUNT EQU $0006
     8AB2             (./generated-code/):00615                 SFXFM3 EQU $8AB2
     8AB6             (./generated-code/):00616                 SFXFM3.DataPointer EQU $8AB6
     8ACB             (./generated-code/):00617                 SFXFM3.Detune EQU $8ACB
     8ABD             (./generated-code/):00618                 SFXFM3.DurationTimeout EQU $8ABD
     8AD1             (./generated-code/):00619                 SFXFM3.InstrAndVolume EQU $8AD1
     8AD0             (./generated-code/):00620                 SFXFM3.InstrTranspose EQU $8AD0
     8AD2             (./generated-code/):00621                 SFXFM3.LoopCounters EQU $8AD2
     8AC7             (./generated-code/):00622                 SFXFM3.ModulationDelta EQU $8AC7
     8AC3             (./generated-code/):00623                 SFXFM3.ModulationPtr EQU $8AC3
     8AC6             (./generated-code/):00624                 SFXFM3.ModulationSpeed EQU $8AC6
     8AC8             (./generated-code/):00625                 SFXFM3.ModulationSteps EQU $8AC8
     8AC9             (./generated-code/):00626                 SFXFM3.ModulationVal EQU $8AC9
     8AC5             (./generated-code/):00627                 SFXFM3.ModulationWait EQU $8AC5
     8ABF             (./generated-code/):00628                 SFXFM3.NextData EQU $8ABF
     8AB4             (./generated-code/):00629                 SFXFM3.NoteControl EQU $8AB4
     8AC2             (./generated-code/):00630                 SFXFM3.NoteFillMaster EQU $8AC2
     8AC1             (./generated-code/):00631                 SFXFM3.NoteFillTimeout EQU $8AC1
     8AB2             (./generated-code/):00632                 SFXFM3.PlaybackControl EQU $8AB2
     8ACD             (./generated-code/):00633                 SFXFM3.PSGNoise EQU $8ACD
     8ABE             (./generated-code/):00634                 SFXFM3.SavedDuration EQU $8ABE
     8ABC             (./generated-code/):00635                 SFXFM3.StackPointer EQU $8ABC
     8AB5             (./generated-code/):00636                 SFXFM3.TempoDivider EQU $8AB5
     8ACE             (./generated-code/):00637                 SFXFM3.TLPtr EQU $8ACE
     8AB8             (./generated-code/):00638                 SFXFM3.Transpose EQU $8AB8
     8AB3             (./generated-code/):00639                 SFXFM3.VoiceControl EQU $8AB3
     8ABA             (./generated-code/):00640                 SFXFM3.VoiceIndex EQU $8ABA
     8ABB             (./generated-code/):00641                 SFXFM3.VolFlutter EQU $8ABB
     8ACC             (./generated-code/):00642                 SFXFM3.VolTLMask EQU $8ACC
     8AB9             (./generated-code/):00643                 SFXFM3.Volume EQU $8AB9
     8ADC             (./generated-code/):00644                 SFXFM4 EQU $8ADC
     8AE0             (./generated-code/):00645                 SFXFM4.DataPointer EQU $8AE0
     8AF5             (./generated-code/):00646                 SFXFM4.Detune EQU $8AF5
     8AE7             (./generated-code/):00647                 SFXFM4.DurationTimeout EQU $8AE7
     8AFB             (./generated-code/):00648                 SFXFM4.InstrAndVolume EQU $8AFB
     8AFA             (./generated-code/):00649                 SFXFM4.InstrTranspose EQU $8AFA
     8AFC             (./generated-code/):00650                 SFXFM4.LoopCounters EQU $8AFC
     8AF1             (./generated-code/):00651                 SFXFM4.ModulationDelta EQU $8AF1
     8AED             (./generated-code/):00652                 SFXFM4.ModulationPtr EQU $8AED
     8AF0             (./generated-code/):00653                 SFXFM4.ModulationSpeed EQU $8AF0
     8AF2             (./generated-code/):00654                 SFXFM4.ModulationSteps EQU $8AF2
     8AF3             (./generated-code/):00655                 SFXFM4.ModulationVal EQU $8AF3
     8AEF             (./generated-code/):00656                 SFXFM4.ModulationWait EQU $8AEF
     8AE9             (./generated-code/):00657                 SFXFM4.NextData EQU $8AE9
     8ADE             (./generated-code/):00658                 SFXFM4.NoteControl EQU $8ADE
     8AEC             (./generated-code/):00659                 SFXFM4.NoteFillMaster EQU $8AEC
     8AEB             (./generated-code/):00660                 SFXFM4.NoteFillTimeout EQU $8AEB
     8ADC             (./generated-code/):00661                 SFXFM4.PlaybackControl EQU $8ADC
     8AF7             (./generated-code/):00662                 SFXFM4.PSGNoise EQU $8AF7
     8AE8             (./generated-code/):00663                 SFXFM4.SavedDuration EQU $8AE8
     8AE6             (./generated-code/):00664                 SFXFM4.StackPointer EQU $8AE6
     8ADF             (./generated-code/):00665                 SFXFM4.TempoDivider EQU $8ADF
     8AF8             (./generated-code/):00666                 SFXFM4.TLPtr EQU $8AF8
     8AE2             (./generated-code/):00667                 SFXFM4.Transpose EQU $8AE2
     8ADD             (./generated-code/):00668                 SFXFM4.VoiceControl EQU $8ADD
     8AE4             (./generated-code/):00669                 SFXFM4.VoiceIndex EQU $8AE4
     8AE5             (./generated-code/):00670                 SFXFM4.VolFlutter EQU $8AE5
     8AF6             (./generated-code/):00671                 SFXFM4.VolTLMask EQU $8AF6
     8AE3             (./generated-code/):00672                 SFXFM4.Volume EQU $8AE3
     8B06             (./generated-code/):00673                 SFXFM5 EQU $8B06
     8B0A             (./generated-code/):00674                 SFXFM5.DataPointer EQU $8B0A
     8B1F             (./generated-code/):00675                 SFXFM5.Detune EQU $8B1F
     8B11             (./generated-code/):00676                 SFXFM5.DurationTimeout EQU $8B11
     8B25             (./generated-code/):00677                 SFXFM5.InstrAndVolume EQU $8B25
     8B24             (./generated-code/):00678                 SFXFM5.InstrTranspose EQU $8B24
     8B26             (./generated-code/):00679                 SFXFM5.LoopCounters EQU $8B26
     8B1B             (./generated-code/):00680                 SFXFM5.ModulationDelta EQU $8B1B
     8B17             (./generated-code/):00681                 SFXFM5.ModulationPtr EQU $8B17
     8B1A             (./generated-code/):00682                 SFXFM5.ModulationSpeed EQU $8B1A
     8B1C             (./generated-code/):00683                 SFXFM5.ModulationSteps EQU $8B1C
     8B1D             (./generated-code/):00684                 SFXFM5.ModulationVal EQU $8B1D
     8B19             (./generated-code/):00685                 SFXFM5.ModulationWait EQU $8B19
     8B13             (./generated-code/):00686                 SFXFM5.NextData EQU $8B13
     8B08             (./generated-code/):00687                 SFXFM5.NoteControl EQU $8B08
     8B16             (./generated-code/):00688                 SFXFM5.NoteFillMaster EQU $8B16
     8B15             (./generated-code/):00689                 SFXFM5.NoteFillTimeout EQU $8B15
     8B06             (./generated-code/):00690                 SFXFM5.PlaybackControl EQU $8B06
     8B21             (./generated-code/):00691                 SFXFM5.PSGNoise EQU $8B21
     8B12             (./generated-code/):00692                 SFXFM5.SavedDuration EQU $8B12
     8B10             (./generated-code/):00693                 SFXFM5.StackPointer EQU $8B10
     8B09             (./generated-code/):00694                 SFXFM5.TempoDivider EQU $8B09
     8B22             (./generated-code/):00695                 SFXFM5.TLPtr EQU $8B22
     8B0C             (./generated-code/):00696                 SFXFM5.Transpose EQU $8B0C
     8B07             (./generated-code/):00697                 SFXFM5.VoiceControl EQU $8B07
     8B0E             (./generated-code/):00698                 SFXFM5.VoiceIndex EQU $8B0E
     8B0F             (./generated-code/):00699                 SFXFM5.VolFlutter EQU $8B0F
     8B20             (./generated-code/):00700                 SFXFM5.VolTLMask EQU $8B20
     8B0D             (./generated-code/):00701                 SFXFM5.Volume EQU $8B0D
     0003             (./generated-code/):00702                 SFXFM_TRACK_COUNT EQU $0003
     8B30             (./generated-code/):00703                 SFXFMEnd EQU $8B30
     8AB2             (./generated-code/):00704                 SFXFMStart EQU $8AB2
     8B30             (./generated-code/):00705                 SFXPSG1 EQU $8B30
     8B34             (./generated-code/):00706                 SFXPSG1.DataPointer EQU $8B34
     8B49             (./generated-code/):00707                 SFXPSG1.Detune EQU $8B49
     8B3B             (./generated-code/):00708                 SFXPSG1.DurationTimeout EQU $8B3B
     8B4F             (./generated-code/):00709                 SFXPSG1.InstrAndVolume EQU $8B4F
     8B4E             (./generated-code/):00710                 SFXPSG1.InstrTranspose EQU $8B4E
     8B50             (./generated-code/):00711                 SFXPSG1.LoopCounters EQU $8B50
     8B45             (./generated-code/):00712                 SFXPSG1.ModulationDelta EQU $8B45
     8B41             (./generated-code/):00713                 SFXPSG1.ModulationPtr EQU $8B41
     8B44             (./generated-code/):00714                 SFXPSG1.ModulationSpeed EQU $8B44
     8B46             (./generated-code/):00715                 SFXPSG1.ModulationSteps EQU $8B46
     8B47             (./generated-code/):00716                 SFXPSG1.ModulationVal EQU $8B47
     8B43             (./generated-code/):00717                 SFXPSG1.ModulationWait EQU $8B43
     8B3D             (./generated-code/):00718                 SFXPSG1.NextData EQU $8B3D
     8B32             (./generated-code/):00719                 SFXPSG1.NoteControl EQU $8B32
     8B40             (./generated-code/):00720                 SFXPSG1.NoteFillMaster EQU $8B40
     8B3F             (./generated-code/):00721                 SFXPSG1.NoteFillTimeout EQU $8B3F
     8B30             (./generated-code/):00722                 SFXPSG1.PlaybackControl EQU $8B30
     8B4B             (./generated-code/):00723                 SFXPSG1.PSGNoise EQU $8B4B
     8B3C             (./generated-code/):00724                 SFXPSG1.SavedDuration EQU $8B3C
     8B3A             (./generated-code/):00725                 SFXPSG1.StackPointer EQU $8B3A
     8B33             (./generated-code/):00726                 SFXPSG1.TempoDivider EQU $8B33
     8B4C             (./generated-code/):00727                 SFXPSG1.TLPtr EQU $8B4C
     8B36             (./generated-code/):00728                 SFXPSG1.Transpose EQU $8B36
     8B31             (./generated-code/):00729                 SFXPSG1.VoiceControl EQU $8B31
     8B38             (./generated-code/):00730                 SFXPSG1.VoiceIndex EQU $8B38
     8B39             (./generated-code/):00731                 SFXPSG1.VolFlutter EQU $8B39
     8B4A             (./generated-code/):00732                 SFXPSG1.VolTLMask EQU $8B4A
     8B37             (./generated-code/):00733                 SFXPSG1.Volume EQU $8B37
     8B5A             (./generated-code/):00734                 SFXPSG2 EQU $8B5A
     8B5E             (./generated-code/):00735                 SFXPSG2.DataPointer EQU $8B5E
     8B73             (./generated-code/):00736                 SFXPSG2.Detune EQU $8B73
     8B65             (./generated-code/):00737                 SFXPSG2.DurationTimeout EQU $8B65
     8B79             (./generated-code/):00738                 SFXPSG2.InstrAndVolume EQU $8B79
     8B78             (./generated-code/):00739                 SFXPSG2.InstrTranspose EQU $8B78
     8B7A             (./generated-code/):00740                 SFXPSG2.LoopCounters EQU $8B7A
     8B6F             (./generated-code/):00741                 SFXPSG2.ModulationDelta EQU $8B6F
     8B6B             (./generated-code/):00742                 SFXPSG2.ModulationPtr EQU $8B6B
     8B6E             (./generated-code/):00743                 SFXPSG2.ModulationSpeed EQU $8B6E
     8B70             (./generated-code/):00744                 SFXPSG2.ModulationSteps EQU $8B70
     8B71             (./generated-code/):00745                 SFXPSG2.ModulationVal EQU $8B71
     8B6D             (./generated-code/):00746                 SFXPSG2.ModulationWait EQU $8B6D
     8B67             (./generated-code/):00747                 SFXPSG2.NextData EQU $8B67
     8B5C             (./generated-code/):00748                 SFXPSG2.NoteControl EQU $8B5C
     8B6A             (./generated-code/):00749                 SFXPSG2.NoteFillMaster EQU $8B6A
     8B69             (./generated-code/):00750                 SFXPSG2.NoteFillTimeout EQU $8B69
     8B5A             (./generated-code/):00751                 SFXPSG2.PlaybackControl EQU $8B5A
     8B75             (./generated-code/):00752                 SFXPSG2.PSGNoise EQU $8B75
     8B66             (./generated-code/):00753                 SFXPSG2.SavedDuration EQU $8B66
     8B64             (./generated-code/):00754                 SFXPSG2.StackPointer EQU $8B64
     8B5D             (./generated-code/):00755                 SFXPSG2.TempoDivider EQU $8B5D
     8B76             (./generated-code/):00756                 SFXPSG2.TLPtr EQU $8B76
     8B60             (./generated-code/):00757                 SFXPSG2.Transpose EQU $8B60
     8B5B             (./generated-code/):00758                 SFXPSG2.VoiceControl EQU $8B5B
     8B62             (./generated-code/):00759                 SFXPSG2.VoiceIndex EQU $8B62
     8B63             (./generated-code/):00760                 SFXPSG2.VolFlutter EQU $8B63
     8B74             (./generated-code/):00761                 SFXPSG2.VolTLMask EQU $8B74
     8B61             (./generated-code/):00762                 SFXPSG2.Volume EQU $8B61
     8B84             (./generated-code/):00763                 SFXPSG3 EQU $8B84
     8B88             (./generated-code/):00764                 SFXPSG3.DataPointer EQU $8B88
     8B9D             (./generated-code/):00765                 SFXPSG3.Detune EQU $8B9D
     8B8F             (./generated-code/):00766                 SFXPSG3.DurationTimeout EQU $8B8F
     8BA3             (./generated-code/):00767                 SFXPSG3.InstrAndVolume EQU $8BA3
     8BA2             (./generated-code/):00768                 SFXPSG3.InstrTranspose EQU $8BA2
     8BA4             (./generated-code/):00769                 SFXPSG3.LoopCounters EQU $8BA4
     8B99             (./generated-code/):00770                 SFXPSG3.ModulationDelta EQU $8B99
     8B95             (./generated-code/):00771                 SFXPSG3.ModulationPtr EQU $8B95
     8B98             (./generated-code/):00772                 SFXPSG3.ModulationSpeed EQU $8B98
     8B9A             (./generated-code/):00773                 SFXPSG3.ModulationSteps EQU $8B9A
     8B9B             (./generated-code/):00774                 SFXPSG3.ModulationVal EQU $8B9B
     8B97             (./generated-code/):00775                 SFXPSG3.ModulationWait EQU $8B97
     8B91             (./generated-code/):00776                 SFXPSG3.NextData EQU $8B91
     8B86             (./generated-code/):00777                 SFXPSG3.NoteControl EQU $8B86
     8B94             (./generated-code/):00778                 SFXPSG3.NoteFillMaster EQU $8B94
     8B93             (./generated-code/):00779                 SFXPSG3.NoteFillTimeout EQU $8B93
     8B84             (./generated-code/):00780                 SFXPSG3.PlaybackControl EQU $8B84
     8B9F             (./generated-code/):00781                 SFXPSG3.PSGNoise EQU $8B9F
     8B90             (./generated-code/):00782                 SFXPSG3.SavedDuration EQU $8B90
     8B8E             (./generated-code/):00783                 SFXPSG3.StackPointer EQU $8B8E
     8B87             (./generated-code/):00784                 SFXPSG3.TempoDivider EQU $8B87
     8BA0             (./generated-code/):00785                 SFXPSG3.TLPtr EQU $8BA0
     8B8A             (./generated-code/):00786                 SFXPSG3.Transpose EQU $8B8A
     8B85             (./generated-code/):00787                 SFXPSG3.VoiceControl EQU $8B85
     8B8C             (./generated-code/):00788                 SFXPSG3.VoiceIndex EQU $8B8C
     8B8D             (./generated-code/):00789                 SFXPSG3.VolFlutter EQU $8B8D
     8B9E             (./generated-code/):00790                 SFXPSG3.VolTLMask EQU $8B9E
     8B8B             (./generated-code/):00791                 SFXPSG3.Volume EQU $8B8B
     0003             (./generated-code/):00792                 SFXPSG_TRACK_COUNT EQU $0003
     8BAE             (./generated-code/):00793                 SFXPSGEnd EQU $8BAE
     8B30             (./generated-code/):00794                 SFXPSGStart EQU $8B30
     949B             (./generated-code/):00795                 SFXTrackOffs EQU $949B
     887A             (./generated-code/):00796                 Smps EQU $887A
     888A             (./generated-code/):00797                 Smps.1upPlaying EQU $888A
     888F             (./generated-code/):00798                 Smps.60HzData EQU $888F
     887C             (./generated-code/):00799                 Smps.CurrentTempo EQU $887C
     888E             (./generated-code/):00800                 Smps.DACEnabled EQU $888E
     8889             (./generated-code/):00801                 Smps.FadeInCounter EQU $8889
     8888             (./generated-code/):00802                 Smps.FadeInDelay EQU $8888
     8887             (./generated-code/):00803                 Smps.FadeInFlag EQU $8887
     887E             (./generated-code/):00804                 Smps.FadeOutCounter EQU $887E
     887F             (./generated-code/):00805                 Smps.FadeOutDelay EQU $887F
     8880             (./generated-code/):00806                 Smps.QueueToPlay EQU $8880
     887A             (./generated-code/):00807                 Smps.SFXPriorityVal EQU $887A
     8881             (./generated-code/):00808                 Smps.SFXToPlay EQU $8881
     8885             (./generated-code/):00809                 Smps.SFXVoiceTblPtr EQU $8885
     888D             (./generated-code/):00810                 Smps.SpeedUpFlag EQU $888D
     887D             (./generated-code/):00811                 Smps.StopMusic EQU $887D
     888B             (./generated-code/):00812                 Smps.TempoMod EQU $888B
     887B             (./generated-code/):00813                 Smps.TempoTimeout EQU $887B
     888C             (./generated-code/):00814                 Smps.TempoTurbo EQU $888C
     8883             (./generated-code/):00815                 Smps.VoiceTblPtr EQU $8883
     0008             (./generated-code/):00816                 SMPS_DAC_FLAG EQU $0008
     0005             (./generated-code/):00817                 SMPS_DELAY EQU $0005
     0002             (./generated-code/):00818                 SMPS_NB_FM EQU $0002
     0003             (./generated-code/):00819                 SMPS_NB_PSG EQU $0003
     0004             (./generated-code/):00820                 SMPS_SFX_HDR_LEN EQU $0004
     0003             (./generated-code/):00821                 SMPS_SFX_NB_CH EQU $0003
     0002             (./generated-code/):00822                 SMPS_SFX_TEMPO EQU $0002
     0002             (./generated-code/):00823                 SMPS_SFX_TEMPO_NB_CH EQU $0002
     0000             (./generated-code/):00824                 SMPS_SFX_TRK_CH EQU $0000
     0002             (./generated-code/):00825                 SMPS_SFX_TRK_DATA_PTR EQU $0002
     0006             (./generated-code/):00826                 SMPS_SFX_TRK_HDR_LEN EQU $0006
     0004             (./generated-code/):00827                 SMPS_SFX_TRK_TR_VOL_PTR EQU $0004
     0000             (./generated-code/):00828                 SMPS_SFX_VOICE EQU $0000
     984F             (./generated-code/):00829                 Smps_SpecialStage EQU $984F
     0004             (./generated-code/):00830                 SMPS_TEMPO EQU $0004
     0004             (./generated-code/):00831                 SMPS_TEMPO_DELAY EQU $0004
     0000             (./generated-code/):00832                 SMPS_TRK_DATA_PTR EQU $0000
     0005             (./generated-code/):00833                 SMPS_TRK_ENV_PTR EQU $0005
     0004             (./generated-code/):00834                 SMPS_TRK_FM_HDR_LEN EQU $0004
     0006             (./generated-code/):00835                 SMPS_TRK_HEADER EQU $0006
     0006             (./generated-code/):00836                 SMPS_TRK_PSG_HDR_LEN EQU $0006
     0002             (./generated-code/):00837                 SMPS_TRK_TR_VOL_PTR EQU $0002
     0000             (./generated-code/):00838                 SMPS_VOICE EQU $0000
     0010             (./generated-code/):00839                 SmpsVar.1upPlaying EQU $0010
     0015             (./generated-code/):00840                 SmpsVar.60HzData EQU $0015
     0002             (./generated-code/):00841                 SmpsVar.CurrentTempo EQU $0002
     0014             (./generated-code/):00842                 SmpsVar.DACEnabled EQU $0014
     000F             (./generated-code/):00843                 SmpsVar.FadeInCounter EQU $000F
     000E             (./generated-code/):00844                 SmpsVar.FadeInDelay EQU $000E
     000D             (./generated-code/):00845                 SmpsVar.FadeInFlag EQU $000D
     0004             (./generated-code/):00846                 SmpsVar.FadeOutCounter EQU $0004
     0005             (./generated-code/):00847                 SmpsVar.FadeOutDelay EQU $0005
     0006             (./generated-code/):00848                 SmpsVar.QueueToPlay EQU $0006
     0000             (./generated-code/):00849                 SmpsVar.SFXPriorityVal EQU $0000
     0007             (./generated-code/):00850                 SmpsVar.SFXToPlay EQU $0007
     000B             (./generated-code/):00851                 SmpsVar.SFXVoiceTblPtr EQU $000B
     0013             (./generated-code/):00852                 SmpsVar.SpeedUpFlag EQU $0013
     0003             (./generated-code/):00853                 SmpsVar.StopMusic EQU $0003
     0011             (./generated-code/):00854                 SmpsVar.TempoMod EQU $0011
     0001             (./generated-code/):00855                 SmpsVar.TempoTimeout EQU $0001
     0012             (./generated-code/):00856                 SmpsVar.TempoTurbo EQU $0012
     0009             (./generated-code/):00857                 SmpsVar.VoiceTblPtr EQU $0009
     8890             (./generated-code/):00858                 SongDAC EQU $8890
     8894             (./generated-code/):00859                 SongDAC.DataPointer EQU $8894
     88A9             (./generated-code/):00860                 SongDAC.Detune EQU $88A9
     889B             (./generated-code/):00861                 SongDAC.DurationTimeout EQU $889B
     88AF             (./generated-code/):00862                 SongDAC.InstrAndVolume EQU $88AF
     88AE             (./generated-code/):00863                 SongDAC.InstrTranspose EQU $88AE
     88B0             (./generated-code/):00864                 SongDAC.LoopCounters EQU $88B0
     88A5             (./generated-code/):00865                 SongDAC.ModulationDelta EQU $88A5
     88A1             (./generated-code/):00866                 SongDAC.ModulationPtr EQU $88A1
     88A4             (./generated-code/):00867                 SongDAC.ModulationSpeed EQU $88A4
     88A6             (./generated-code/):00868                 SongDAC.ModulationSteps EQU $88A6
     88A7             (./generated-code/):00869                 SongDAC.ModulationVal EQU $88A7
     88A3             (./generated-code/):00870                 SongDAC.ModulationWait EQU $88A3
     889D             (./generated-code/):00871                 SongDAC.NextData EQU $889D
     8892             (./generated-code/):00872                 SongDAC.NoteControl EQU $8892
     88A0             (./generated-code/):00873                 SongDAC.NoteFillMaster EQU $88A0
     889F             (./generated-code/):00874                 SongDAC.NoteFillTimeout EQU $889F
     8890             (./generated-code/):00875                 SongDAC.PlaybackControl EQU $8890
     88AB             (./generated-code/):00876                 SongDAC.PSGNoise EQU $88AB
     889C             (./generated-code/):00877                 SongDAC.SavedDuration EQU $889C
     889A             (./generated-code/):00878                 SongDAC.StackPointer EQU $889A
     8893             (./generated-code/):00879                 SongDAC.TempoDivider EQU $8893
     88AC             (./generated-code/):00880                 SongDAC.TLPtr EQU $88AC
     8896             (./generated-code/):00881                 SongDAC.Transpose EQU $8896
     8891             (./generated-code/):00882                 SongDAC.VoiceControl EQU $8891
     8898             (./generated-code/):00883                 SongDAC.VoiceIndex EQU $8898
     8899             (./generated-code/):00884                 SongDAC.VolFlutter EQU $8899
     88AA             (./generated-code/):00885                 SongDAC.VolTLMask EQU $88AA
     8897             (./generated-code/):00886                 SongDAC.Volume EQU $8897
     8A34             (./generated-code/):00887                 SongDACFMEnd EQU $8A34
     8890             (./generated-code/):00888                 SongDACFMStart EQU $8890
     8BB1             (./generated-code/):00889                 SongDelay EQU $8BB1
     88BA             (./generated-code/):00890                 SongFM1 EQU $88BA
     88BE             (./generated-code/):00891                 SongFM1.DataPointer EQU $88BE
     88D3             (./generated-code/):00892                 SongFM1.Detune EQU $88D3
     88C5             (./generated-code/):00893                 SongFM1.DurationTimeout EQU $88C5
     88D9             (./generated-code/):00894                 SongFM1.InstrAndVolume EQU $88D9
     88D8             (./generated-code/):00895                 SongFM1.InstrTranspose EQU $88D8
     88DA             (./generated-code/):00896                 SongFM1.LoopCounters EQU $88DA
     88CF             (./generated-code/):00897                 SongFM1.ModulationDelta EQU $88CF
     88CB             (./generated-code/):00898                 SongFM1.ModulationPtr EQU $88CB
     88CE             (./generated-code/):00899                 SongFM1.ModulationSpeed EQU $88CE
     88D0             (./generated-code/):00900                 SongFM1.ModulationSteps EQU $88D0
     88D1             (./generated-code/):00901                 SongFM1.ModulationVal EQU $88D1
     88CD             (./generated-code/):00902                 SongFM1.ModulationWait EQU $88CD
     88C7             (./generated-code/):00903                 SongFM1.NextData EQU $88C7
     88BC             (./generated-code/):00904                 SongFM1.NoteControl EQU $88BC
     88CA             (./generated-code/):00905                 SongFM1.NoteFillMaster EQU $88CA
     88C9             (./generated-code/):00906                 SongFM1.NoteFillTimeout EQU $88C9
     88BA             (./generated-code/):00907                 SongFM1.PlaybackControl EQU $88BA
     88D5             (./generated-code/):00908                 SongFM1.PSGNoise EQU $88D5
     88C6             (./generated-code/):00909                 SongFM1.SavedDuration EQU $88C6
     88C4             (./generated-code/):00910                 SongFM1.StackPointer EQU $88C4
     88BD             (./generated-code/):00911                 SongFM1.TempoDivider EQU $88BD
     88D6             (./generated-code/):00912                 SongFM1.TLPtr EQU $88D6
     88C0             (./generated-code/):00913                 SongFM1.Transpose EQU $88C0
     88BB             (./generated-code/):00914                 SongFM1.VoiceControl EQU $88BB
     88C2             (./generated-code/):00915                 SongFM1.VoiceIndex EQU $88C2
     88C3             (./generated-code/):00916                 SongFM1.VolFlutter EQU $88C3
     88D4             (./generated-code/):00917                 SongFM1.VolTLMask EQU $88D4
     88C1             (./generated-code/):00918                 SongFM1.Volume EQU $88C1
     88E4             (./generated-code/):00919                 SongFM2 EQU $88E4
     88E8             (./generated-code/):00920                 SongFM2.DataPointer EQU $88E8
     88FD             (./generated-code/):00921                 SongFM2.Detune EQU $88FD
     88EF             (./generated-code/):00922                 SongFM2.DurationTimeout EQU $88EF
     8903             (./generated-code/):00923                 SongFM2.InstrAndVolume EQU $8903
     8902             (./generated-code/):00924                 SongFM2.InstrTranspose EQU $8902
     8904             (./generated-code/):00925                 SongFM2.LoopCounters EQU $8904
     88F9             (./generated-code/):00926                 SongFM2.ModulationDelta EQU $88F9
     88F5             (./generated-code/):00927                 SongFM2.ModulationPtr EQU $88F5
     88F8             (./generated-code/):00928                 SongFM2.ModulationSpeed EQU $88F8
     88FA             (./generated-code/):00929                 SongFM2.ModulationSteps EQU $88FA
     88FB             (./generated-code/):00930                 SongFM2.ModulationVal EQU $88FB
     88F7             (./generated-code/):00931                 SongFM2.ModulationWait EQU $88F7
     88F1             (./generated-code/):00932                 SongFM2.NextData EQU $88F1
     88E6             (./generated-code/):00933                 SongFM2.NoteControl EQU $88E6
     88F4             (./generated-code/):00934                 SongFM2.NoteFillMaster EQU $88F4
     88F3             (./generated-code/):00935                 SongFM2.NoteFillTimeout EQU $88F3
     88E4             (./generated-code/):00936                 SongFM2.PlaybackControl EQU $88E4
     88FF             (./generated-code/):00937                 SongFM2.PSGNoise EQU $88FF
     88F0             (./generated-code/):00938                 SongFM2.SavedDuration EQU $88F0
     88EE             (./generated-code/):00939                 SongFM2.StackPointer EQU $88EE
     88E7             (./generated-code/):00940                 SongFM2.TempoDivider EQU $88E7
     8900             (./generated-code/):00941                 SongFM2.TLPtr EQU $8900
     88EA             (./generated-code/):00942                 SongFM2.Transpose EQU $88EA
     88E5             (./generated-code/):00943                 SongFM2.VoiceControl EQU $88E5
     88EC             (./generated-code/):00944                 SongFM2.VoiceIndex EQU $88EC
     88ED             (./generated-code/):00945                 SongFM2.VolFlutter EQU $88ED
     88FE             (./generated-code/):00946                 SongFM2.VolTLMask EQU $88FE
     88EB             (./generated-code/):00947                 SongFM2.Volume EQU $88EB
     890E             (./generated-code/):00948                 SongFM3 EQU $890E
     8912             (./generated-code/):00949                 SongFM3.DataPointer EQU $8912
     8927             (./generated-code/):00950                 SongFM3.Detune EQU $8927
     8919             (./generated-code/):00951                 SongFM3.DurationTimeout EQU $8919
     892D             (./generated-code/):00952                 SongFM3.InstrAndVolume EQU $892D
     892C             (./generated-code/):00953                 SongFM3.InstrTranspose EQU $892C
     892E             (./generated-code/):00954                 SongFM3.LoopCounters EQU $892E
     8923             (./generated-code/):00955                 SongFM3.ModulationDelta EQU $8923
     891F             (./generated-code/):00956                 SongFM3.ModulationPtr EQU $891F
     8922             (./generated-code/):00957                 SongFM3.ModulationSpeed EQU $8922
     8924             (./generated-code/):00958                 SongFM3.ModulationSteps EQU $8924
     8925             (./generated-code/):00959                 SongFM3.ModulationVal EQU $8925
     8921             (./generated-code/):00960                 SongFM3.ModulationWait EQU $8921
     891B             (./generated-code/):00961                 SongFM3.NextData EQU $891B
     8910             (./generated-code/):00962                 SongFM3.NoteControl EQU $8910
     891E             (./generated-code/):00963                 SongFM3.NoteFillMaster EQU $891E
     891D             (./generated-code/):00964                 SongFM3.NoteFillTimeout EQU $891D
     890E             (./generated-code/):00965                 SongFM3.PlaybackControl EQU $890E
     8929             (./generated-code/):00966                 SongFM3.PSGNoise EQU $8929
     891A             (./generated-code/):00967                 SongFM3.SavedDuration EQU $891A
     8918             (./generated-code/):00968                 SongFM3.StackPointer EQU $8918
     8911             (./generated-code/):00969                 SongFM3.TempoDivider EQU $8911
     892A             (./generated-code/):00970                 SongFM3.TLPtr EQU $892A
     8914             (./generated-code/):00971                 SongFM3.Transpose EQU $8914
     890F             (./generated-code/):00972                 SongFM3.VoiceControl EQU $890F
     8916             (./generated-code/):00973                 SongFM3.VoiceIndex EQU $8916
     8917             (./generated-code/):00974                 SongFM3.VolFlutter EQU $8917
     8928             (./generated-code/):00975                 SongFM3.VolTLMask EQU $8928
     8915             (./generated-code/):00976                 SongFM3.Volume EQU $8915
     8938             (./generated-code/):00977                 SongFM4 EQU $8938
     893C             (./generated-code/):00978                 SongFM4.DataPointer EQU $893C
     8951             (./generated-code/):00979                 SongFM4.Detune EQU $8951
     8943             (./generated-code/):00980                 SongFM4.DurationTimeout EQU $8943
     8957             (./generated-code/):00981                 SongFM4.InstrAndVolume EQU $8957
     8956             (./generated-code/):00982                 SongFM4.InstrTranspose EQU $8956
     8958             (./generated-code/):00983                 SongFM4.LoopCounters EQU $8958
     894D             (./generated-code/):00984                 SongFM4.ModulationDelta EQU $894D
     8949             (./generated-code/):00985                 SongFM4.ModulationPtr EQU $8949
     894C             (./generated-code/):00986                 SongFM4.ModulationSpeed EQU $894C
     894E             (./generated-code/):00987                 SongFM4.ModulationSteps EQU $894E
     894F             (./generated-code/):00988                 SongFM4.ModulationVal EQU $894F
     894B             (./generated-code/):00989                 SongFM4.ModulationWait EQU $894B
     8945             (./generated-code/):00990                 SongFM4.NextData EQU $8945
     893A             (./generated-code/):00991                 SongFM4.NoteControl EQU $893A
     8948             (./generated-code/):00992                 SongFM4.NoteFillMaster EQU $8948
     8947             (./generated-code/):00993                 SongFM4.NoteFillTimeout EQU $8947
     8938             (./generated-code/):00994                 SongFM4.PlaybackControl EQU $8938
     8953             (./generated-code/):00995                 SongFM4.PSGNoise EQU $8953
     8944             (./generated-code/):00996                 SongFM4.SavedDuration EQU $8944
     8942             (./generated-code/):00997                 SongFM4.StackPointer EQU $8942
     893B             (./generated-code/):00998                 SongFM4.TempoDivider EQU $893B
     8954             (./generated-code/):00999                 SongFM4.TLPtr EQU $8954
     893E             (./generated-code/):01000                 SongFM4.Transpose EQU $893E
     8939             (./generated-code/):01001                 SongFM4.VoiceControl EQU $8939
     8940             (./generated-code/):01002                 SongFM4.VoiceIndex EQU $8940
     8941             (./generated-code/):01003                 SongFM4.VolFlutter EQU $8941
     8952             (./generated-code/):01004                 SongFM4.VolTLMask EQU $8952
     893F             (./generated-code/):01005                 SongFM4.Volume EQU $893F
     8962             (./generated-code/):01006                 SongFM5 EQU $8962
     8966             (./generated-code/):01007                 SongFM5.DataPointer EQU $8966
     897B             (./generated-code/):01008                 SongFM5.Detune EQU $897B
     896D             (./generated-code/):01009                 SongFM5.DurationTimeout EQU $896D
     8981             (./generated-code/):01010                 SongFM5.InstrAndVolume EQU $8981
     8980             (./generated-code/):01011                 SongFM5.InstrTranspose EQU $8980
     8982             (./generated-code/):01012                 SongFM5.LoopCounters EQU $8982
     8977             (./generated-code/):01013                 SongFM5.ModulationDelta EQU $8977
     8973             (./generated-code/):01014                 SongFM5.ModulationPtr EQU $8973
     8976             (./generated-code/):01015                 SongFM5.ModulationSpeed EQU $8976
     8978             (./generated-code/):01016                 SongFM5.ModulationSteps EQU $8978
     8979             (./generated-code/):01017                 SongFM5.ModulationVal EQU $8979
     8975             (./generated-code/):01018                 SongFM5.ModulationWait EQU $8975
     896F             (./generated-code/):01019                 SongFM5.NextData EQU $896F
     8964             (./generated-code/):01020                 SongFM5.NoteControl EQU $8964
     8972             (./generated-code/):01021                 SongFM5.NoteFillMaster EQU $8972
     8971             (./generated-code/):01022                 SongFM5.NoteFillTimeout EQU $8971
     8962             (./generated-code/):01023                 SongFM5.PlaybackControl EQU $8962
     897D             (./generated-code/):01024                 SongFM5.PSGNoise EQU $897D
     896E             (./generated-code/):01025                 SongFM5.SavedDuration EQU $896E
     896C             (./generated-code/):01026                 SongFM5.StackPointer EQU $896C
     8965             (./generated-code/):01027                 SongFM5.TempoDivider EQU $8965
     897E             (./generated-code/):01028                 SongFM5.TLPtr EQU $897E
     8968             (./generated-code/):01029                 SongFM5.Transpose EQU $8968
     8963             (./generated-code/):01030                 SongFM5.VoiceControl EQU $8963
     896A             (./generated-code/):01031                 SongFM5.VoiceIndex EQU $896A
     896B             (./generated-code/):01032                 SongFM5.VolFlutter EQU $896B
     897C             (./generated-code/):01033                 SongFM5.VolTLMask EQU $897C
     8969             (./generated-code/):01034                 SongFM5.Volume EQU $8969
     898C             (./generated-code/):01035                 SongFM6 EQU $898C
     8990             (./generated-code/):01036                 SongFM6.DataPointer EQU $8990
     89A5             (./generated-code/):01037                 SongFM6.Detune EQU $89A5
     8997             (./generated-code/):01038                 SongFM6.DurationTimeout EQU $8997
     89AB             (./generated-code/):01039                 SongFM6.InstrAndVolume EQU $89AB
     89AA             (./generated-code/):01040                 SongFM6.InstrTranspose EQU $89AA
     89AC             (./generated-code/):01041                 SongFM6.LoopCounters EQU $89AC
     89A1             (./generated-code/):01042                 SongFM6.ModulationDelta EQU $89A1
     899D             (./generated-code/):01043                 SongFM6.ModulationPtr EQU $899D
     89A0             (./generated-code/):01044                 SongFM6.ModulationSpeed EQU $89A0
     89A2             (./generated-code/):01045                 SongFM6.ModulationSteps EQU $89A2
     89A3             (./generated-code/):01046                 SongFM6.ModulationVal EQU $89A3
     899F             (./generated-code/):01047                 SongFM6.ModulationWait EQU $899F
     8999             (./generated-code/):01048                 SongFM6.NextData EQU $8999
     898E             (./generated-code/):01049                 SongFM6.NoteControl EQU $898E
     899C             (./generated-code/):01050                 SongFM6.NoteFillMaster EQU $899C
     899B             (./generated-code/):01051                 SongFM6.NoteFillTimeout EQU $899B
     898C             (./generated-code/):01052                 SongFM6.PlaybackControl EQU $898C
     89A7             (./generated-code/):01053                 SongFM6.PSGNoise EQU $89A7
     8998             (./generated-code/):01054                 SongFM6.SavedDuration EQU $8998
     8996             (./generated-code/):01055                 SongFM6.StackPointer EQU $8996
     898F             (./generated-code/):01056                 SongFM6.TempoDivider EQU $898F
     89A8             (./generated-code/):01057                 SongFM6.TLPtr EQU $89A8
     8992             (./generated-code/):01058                 SongFM6.Transpose EQU $8992
     898D             (./generated-code/):01059                 SongFM6.VoiceControl EQU $898D
     8994             (./generated-code/):01060                 SongFM6.VoiceIndex EQU $8994
     8995             (./generated-code/):01061                 SongFM6.VolFlutter EQU $8995
     89A6             (./generated-code/):01062                 SongFM6.VolTLMask EQU $89A6
     8993             (./generated-code/):01063                 SongFM6.Volume EQU $8993
     89B6             (./generated-code/):01064                 SongFM7 EQU $89B6
     89BA             (./generated-code/):01065                 SongFM7.DataPointer EQU $89BA
     89CF             (./generated-code/):01066                 SongFM7.Detune EQU $89CF
     89C1             (./generated-code/):01067                 SongFM7.DurationTimeout EQU $89C1
     89D5             (./generated-code/):01068                 SongFM7.InstrAndVolume EQU $89D5
     89D4             (./generated-code/):01069                 SongFM7.InstrTranspose EQU $89D4
     89D6             (./generated-code/):01070                 SongFM7.LoopCounters EQU $89D6
     89CB             (./generated-code/):01071                 SongFM7.ModulationDelta EQU $89CB
     89C7             (./generated-code/):01072                 SongFM7.ModulationPtr EQU $89C7
     89CA             (./generated-code/):01073                 SongFM7.ModulationSpeed EQU $89CA
     89CC             (./generated-code/):01074                 SongFM7.ModulationSteps EQU $89CC
     89CD             (./generated-code/):01075                 SongFM7.ModulationVal EQU $89CD
     89C9             (./generated-code/):01076                 SongFM7.ModulationWait EQU $89C9
     89C3             (./generated-code/):01077                 SongFM7.NextData EQU $89C3
     89B8             (./generated-code/):01078                 SongFM7.NoteControl EQU $89B8
     89C6             (./generated-code/):01079                 SongFM7.NoteFillMaster EQU $89C6
     89C5             (./generated-code/):01080                 SongFM7.NoteFillTimeout EQU $89C5
     89B6             (./generated-code/):01081                 SongFM7.PlaybackControl EQU $89B6
     89D1             (./generated-code/):01082                 SongFM7.PSGNoise EQU $89D1
     89C2             (./generated-code/):01083                 SongFM7.SavedDuration EQU $89C2
     89C0             (./generated-code/):01084                 SongFM7.StackPointer EQU $89C0
     89B9             (./generated-code/):01085                 SongFM7.TempoDivider EQU $89B9
     89D2             (./generated-code/):01086                 SongFM7.TLPtr EQU $89D2
     89BC             (./generated-code/):01087                 SongFM7.Transpose EQU $89BC
     89B7             (./generated-code/):01088                 SongFM7.VoiceControl EQU $89B7
     89BE             (./generated-code/):01089                 SongFM7.VoiceIndex EQU $89BE
     89BF             (./generated-code/):01090                 SongFM7.VolFlutter EQU $89BF
     89D0             (./generated-code/):01091                 SongFM7.VolTLMask EQU $89D0
     89BD             (./generated-code/):01092                 SongFM7.Volume EQU $89BD
     89E0             (./generated-code/):01093                 SongFM8 EQU $89E0
     89E4             (./generated-code/):01094                 SongFM8.DataPointer EQU $89E4
     89F9             (./generated-code/):01095                 SongFM8.Detune EQU $89F9
     89EB             (./generated-code/):01096                 SongFM8.DurationTimeout EQU $89EB
     89FF             (./generated-code/):01097                 SongFM8.InstrAndVolume EQU $89FF
     89FE             (./generated-code/):01098                 SongFM8.InstrTranspose EQU $89FE
     8A00             (./generated-code/):01099                 SongFM8.LoopCounters EQU $8A00
     89F5             (./generated-code/):01100                 SongFM8.ModulationDelta EQU $89F5
     89F1             (./generated-code/):01101                 SongFM8.ModulationPtr EQU $89F1
     89F4             (./generated-code/):01102                 SongFM8.ModulationSpeed EQU $89F4
     89F6             (./generated-code/):01103                 SongFM8.ModulationSteps EQU $89F6
     89F7             (./generated-code/):01104                 SongFM8.ModulationVal EQU $89F7
     89F3             (./generated-code/):01105                 SongFM8.ModulationWait EQU $89F3
     89ED             (./generated-code/):01106                 SongFM8.NextData EQU $89ED
     89E2             (./generated-code/):01107                 SongFM8.NoteControl EQU $89E2
     89F0             (./generated-code/):01108                 SongFM8.NoteFillMaster EQU $89F0
     89EF             (./generated-code/):01109                 SongFM8.NoteFillTimeout EQU $89EF
     89E0             (./generated-code/):01110                 SongFM8.PlaybackControl EQU $89E0
     89FB             (./generated-code/):01111                 SongFM8.PSGNoise EQU $89FB
     89EC             (./generated-code/):01112                 SongFM8.SavedDuration EQU $89EC
     89EA             (./generated-code/):01113                 SongFM8.StackPointer EQU $89EA
     89E3             (./generated-code/):01114                 SongFM8.TempoDivider EQU $89E3
     89FC             (./generated-code/):01115                 SongFM8.TLPtr EQU $89FC
     89E6             (./generated-code/):01116                 SongFM8.Transpose EQU $89E6
     89E1             (./generated-code/):01117                 SongFM8.VoiceControl EQU $89E1
     89E8             (./generated-code/):01118                 SongFM8.VoiceIndex EQU $89E8
     89E9             (./generated-code/):01119                 SongFM8.VolFlutter EQU $89E9
     89FA             (./generated-code/):01120                 SongFM8.VolTLMask EQU $89FA
     89E7             (./generated-code/):01121                 SongFM8.Volume EQU $89E7
     8A0A             (./generated-code/):01122                 SongFM9 EQU $8A0A
     8A0E             (./generated-code/):01123                 SongFM9.DataPointer EQU $8A0E
     8A23             (./generated-code/):01124                 SongFM9.Detune EQU $8A23
     8A15             (./generated-code/):01125                 SongFM9.DurationTimeout EQU $8A15
     8A29             (./generated-code/):01126                 SongFM9.InstrAndVolume EQU $8A29
     8A28             (./generated-code/):01127                 SongFM9.InstrTranspose EQU $8A28
     8A2A             (./generated-code/):01128                 SongFM9.LoopCounters EQU $8A2A
     8A1F             (./generated-code/):01129                 SongFM9.ModulationDelta EQU $8A1F
     8A1B             (./generated-code/):01130                 SongFM9.ModulationPtr EQU $8A1B
     8A1E             (./generated-code/):01131                 SongFM9.ModulationSpeed EQU $8A1E
     8A20             (./generated-code/):01132                 SongFM9.ModulationSteps EQU $8A20
     8A21             (./generated-code/):01133                 SongFM9.ModulationVal EQU $8A21
     8A1D             (./generated-code/):01134                 SongFM9.ModulationWait EQU $8A1D
     8A17             (./generated-code/):01135                 SongFM9.NextData EQU $8A17
     8A0C             (./generated-code/):01136                 SongFM9.NoteControl EQU $8A0C
     8A1A             (./generated-code/):01137                 SongFM9.NoteFillMaster EQU $8A1A
     8A19             (./generated-code/):01138                 SongFM9.NoteFillTimeout EQU $8A19
     8A0A             (./generated-code/):01139                 SongFM9.PlaybackControl EQU $8A0A
     8A25             (./generated-code/):01140                 SongFM9.PSGNoise EQU $8A25
     8A16             (./generated-code/):01141                 SongFM9.SavedDuration EQU $8A16
     8A14             (./generated-code/):01142                 SongFM9.StackPointer EQU $8A14
     8A0D             (./generated-code/):01143                 SongFM9.TempoDivider EQU $8A0D
     8A26             (./generated-code/):01144                 SongFM9.TLPtr EQU $8A26
     8A10             (./generated-code/):01145                 SongFM9.Transpose EQU $8A10
     8A0B             (./generated-code/):01146                 SongFM9.VoiceControl EQU $8A0B
     8A12             (./generated-code/):01147                 SongFM9.VoiceIndex EQU $8A12
     8A13             (./generated-code/):01148                 SongFM9.VolFlutter EQU $8A13
     8A24             (./generated-code/):01149                 SongFM9.VolTLMask EQU $8A24
     8A11             (./generated-code/):01150                 SongFM9.Volume EQU $8A11
     8A34             (./generated-code/):01151                 SongFMEnd EQU $8A34
     88BA             (./generated-code/):01152                 SongFMStart EQU $88BA
     8A34             (./generated-code/):01153                 SongPSG1 EQU $8A34
     8A38             (./generated-code/):01154                 SongPSG1.DataPointer EQU $8A38
     8A4D             (./generated-code/):01155                 SongPSG1.Detune EQU $8A4D
     8A3F             (./generated-code/):01156                 SongPSG1.DurationTimeout EQU $8A3F
     8A53             (./generated-code/):01157                 SongPSG1.InstrAndVolume EQU $8A53
     8A52             (./generated-code/):01158                 SongPSG1.InstrTranspose EQU $8A52
     8A54             (./generated-code/):01159                 SongPSG1.LoopCounters EQU $8A54
     8A49             (./generated-code/):01160                 SongPSG1.ModulationDelta EQU $8A49
     8A45             (./generated-code/):01161                 SongPSG1.ModulationPtr EQU $8A45
     8A48             (./generated-code/):01162                 SongPSG1.ModulationSpeed EQU $8A48
     8A4A             (./generated-code/):01163                 SongPSG1.ModulationSteps EQU $8A4A
     8A4B             (./generated-code/):01164                 SongPSG1.ModulationVal EQU $8A4B
     8A47             (./generated-code/):01165                 SongPSG1.ModulationWait EQU $8A47
     8A41             (./generated-code/):01166                 SongPSG1.NextData EQU $8A41
     8A36             (./generated-code/):01167                 SongPSG1.NoteControl EQU $8A36
     8A44             (./generated-code/):01168                 SongPSG1.NoteFillMaster EQU $8A44
     8A43             (./generated-code/):01169                 SongPSG1.NoteFillTimeout EQU $8A43
     8A34             (./generated-code/):01170                 SongPSG1.PlaybackControl EQU $8A34
     8A4F             (./generated-code/):01171                 SongPSG1.PSGNoise EQU $8A4F
     8A40             (./generated-code/):01172                 SongPSG1.SavedDuration EQU $8A40
     8A3E             (./generated-code/):01173                 SongPSG1.StackPointer EQU $8A3E
     8A37             (./generated-code/):01174                 SongPSG1.TempoDivider EQU $8A37
     8A50             (./generated-code/):01175                 SongPSG1.TLPtr EQU $8A50
     8A3A             (./generated-code/):01176                 SongPSG1.Transpose EQU $8A3A
     8A35             (./generated-code/):01177                 SongPSG1.VoiceControl EQU $8A35
     8A3C             (./generated-code/):01178                 SongPSG1.VoiceIndex EQU $8A3C
     8A3D             (./generated-code/):01179                 SongPSG1.VolFlutter EQU $8A3D
     8A4E             (./generated-code/):01180                 SongPSG1.VolTLMask EQU $8A4E
     8A3B             (./generated-code/):01181                 SongPSG1.Volume EQU $8A3B
     8A5E             (./generated-code/):01182                 SongPSG2 EQU $8A5E
     8A62             (./generated-code/):01183                 SongPSG2.DataPointer EQU $8A62
     8A77             (./generated-code/):01184                 SongPSG2.Detune EQU $8A77
     8A69             (./generated-code/):01185                 SongPSG2.DurationTimeout EQU $8A69
     8A7D             (./generated-code/):01186                 SongPSG2.InstrAndVolume EQU $8A7D
     8A7C             (./generated-code/):01187                 SongPSG2.InstrTranspose EQU $8A7C
     8A7E             (./generated-code/):01188                 SongPSG2.LoopCounters EQU $8A7E
     8A73             (./generated-code/):01189                 SongPSG2.ModulationDelta EQU $8A73
     8A6F             (./generated-code/):01190                 SongPSG2.ModulationPtr EQU $8A6F
     8A72             (./generated-code/):01191                 SongPSG2.ModulationSpeed EQU $8A72
     8A74             (./generated-code/):01192                 SongPSG2.ModulationSteps EQU $8A74
     8A75             (./generated-code/):01193                 SongPSG2.ModulationVal EQU $8A75
     8A71             (./generated-code/):01194                 SongPSG2.ModulationWait EQU $8A71
     8A6B             (./generated-code/):01195                 SongPSG2.NextData EQU $8A6B
     8A60             (./generated-code/):01196                 SongPSG2.NoteControl EQU $8A60
     8A6E             (./generated-code/):01197                 SongPSG2.NoteFillMaster EQU $8A6E
     8A6D             (./generated-code/):01198                 SongPSG2.NoteFillTimeout EQU $8A6D
     8A5E             (./generated-code/):01199                 SongPSG2.PlaybackControl EQU $8A5E
     8A79             (./generated-code/):01200                 SongPSG2.PSGNoise EQU $8A79
     8A6A             (./generated-code/):01201                 SongPSG2.SavedDuration EQU $8A6A
     8A68             (./generated-code/):01202                 SongPSG2.StackPointer EQU $8A68
     8A61             (./generated-code/):01203                 SongPSG2.TempoDivider EQU $8A61
     8A7A             (./generated-code/):01204                 SongPSG2.TLPtr EQU $8A7A
     8A64             (./generated-code/):01205                 SongPSG2.Transpose EQU $8A64
     8A5F             (./generated-code/):01206                 SongPSG2.VoiceControl EQU $8A5F
     8A66             (./generated-code/):01207                 SongPSG2.VoiceIndex EQU $8A66
     8A67             (./generated-code/):01208                 SongPSG2.VolFlutter EQU $8A67
     8A78             (./generated-code/):01209                 SongPSG2.VolTLMask EQU $8A78
     8A65             (./generated-code/):01210                 SongPSG2.Volume EQU $8A65
     8A88             (./generated-code/):01211                 SongPSG3 EQU $8A88
     8A8C             (./generated-code/):01212                 SongPSG3.DataPointer EQU $8A8C
     8AA1             (./generated-code/):01213                 SongPSG3.Detune EQU $8AA1
     8A93             (./generated-code/):01214                 SongPSG3.DurationTimeout EQU $8A93
     8AA7             (./generated-code/):01215                 SongPSG3.InstrAndVolume EQU $8AA7
     8AA6             (./generated-code/):01216                 SongPSG3.InstrTranspose EQU $8AA6
     8AA8             (./generated-code/):01217                 SongPSG3.LoopCounters EQU $8AA8
     8A9D             (./generated-code/):01218                 SongPSG3.ModulationDelta EQU $8A9D
     8A99             (./generated-code/):01219                 SongPSG3.ModulationPtr EQU $8A99
     8A9C             (./generated-code/):01220                 SongPSG3.ModulationSpeed EQU $8A9C
     8A9E             (./generated-code/):01221                 SongPSG3.ModulationSteps EQU $8A9E
     8A9F             (./generated-code/):01222                 SongPSG3.ModulationVal EQU $8A9F
     8A9B             (./generated-code/):01223                 SongPSG3.ModulationWait EQU $8A9B
     8A95             (./generated-code/):01224                 SongPSG3.NextData EQU $8A95
     8A8A             (./generated-code/):01225                 SongPSG3.NoteControl EQU $8A8A
     8A98             (./generated-code/):01226                 SongPSG3.NoteFillMaster EQU $8A98
     8A97             (./generated-code/):01227                 SongPSG3.NoteFillTimeout EQU $8A97
     8A88             (./generated-code/):01228                 SongPSG3.PlaybackControl EQU $8A88
     8AA3             (./generated-code/):01229                 SongPSG3.PSGNoise EQU $8AA3
     8A94             (./generated-code/):01230                 SongPSG3.SavedDuration EQU $8A94
     8A92             (./generated-code/):01231                 SongPSG3.StackPointer EQU $8A92
     8A8B             (./generated-code/):01232                 SongPSG3.TempoDivider EQU $8A8B
     8AA4             (./generated-code/):01233                 SongPSG3.TLPtr EQU $8AA4
     8A8E             (./generated-code/):01234                 SongPSG3.Transpose EQU $8A8E
     8A89             (./generated-code/):01235                 SongPSG3.VoiceControl EQU $8A89
     8A90             (./generated-code/):01236                 SongPSG3.VoiceIndex EQU $8A90
     8A91             (./generated-code/):01237                 SongPSG3.VolFlutter EQU $8A91
     8AA2             (./generated-code/):01238                 SongPSG3.VolTLMask EQU $8AA2
     8A8F             (./generated-code/):01239                 SongPSG3.Volume EQU $8A8F
     8AB2             (./generated-code/):01240                 SongPSGEnd EQU $8AB2
     8A34             (./generated-code/):01241                 SongPSGStart EQU $8A34
     0003             (./generated-code/):01242                 sound_end_addr EQU $0003
     0005             (./generated-code/):01243                 sound_meta_size EQU $0005
     0000             (./generated-code/):01244                 sound_page EQU $0000
     0001             (./generated-code/):01245                 sound_start_addr EQU $0001
     8BB6             (./generated-code/):01246                 SoundData EQU $8BB6
     8BB3             (./generated-code/):01247                 SoundPage EQU $8BB3
     7491             (./generated-code/):01248                 SpecialStage_CurrentSegment EQU $7491
     74D3             (./generated-code/):01249                 SpecialStage_LastSegment2 EQU $74D3
     74AA             (./generated-code/):01250                 SpecialStage_Started EQU $74AA
     613E             (./generated-code/):01251                 SpecialStageHalfPipe EQU $613E
     62EA             (./generated-code/):01252                 SpecialStageShadow_Sonic EQU $62EA
     747B             (./generated-code/):01253                 SS2p_RingBuffer EQU $747B
     7517             (./generated-code/):01254                 SS_2P_BCD_Score EQU $7517
     7497             (./generated-code/):01255                 SS_Alternate_HorizScroll_Buf EQU $7497
     7494             (./generated-code/):01256                 SS_Alternate_PNT EQU $7494
     750A             (./generated-code/):01257                 SS_Check_Rings_flag EQU $750A
     751A             (./generated-code/):01258                 SS_Checkpoint_Rainbow_flag EQU $751A
     74EA             (./generated-code/):01259                 SS_Ctrl_Record_Buf EQU $74EA
     750A             (./generated-code/):01260                 SS_Ctrl_Record_Buf_End EQU $750A
     749E             (./generated-code/):01261                 SS_Cur_Speed_Factor EQU $749E
     7512             (./generated-code/):01262                 SS_CurrentLevelLayout EQU $7512
     750C             (./generated-code/):01263                 SS_CurrentLevelObjectLocations EQU $750C
     7527             (./generated-code/):01264                 SS_HideRingsToGo EQU $7527
     7499             (./generated-code/):01265                 SS_Last_Alternate_HorizScroll_Buf EQU $7499
     7508             (./generated-code/):01266                 SS_Last_Ctrl_Record EQU $7508
     7487             (./generated-code/):01267                 SS_Misc_Variables EQU $7487
     7529             (./generated-code/):01268                 SS_Misc_Variables_End EQU $7529
     749A             (./generated-code/):01269                 SS_New_Speed_Factor EQU $749A
     7519             (./generated-code/):01270                 SS_NoCheckpoint_flag EQU $7519
     7522             (./generated-code/):01271                 SS_NoCheckpointMsg_flag EQU $7522
     7523             (./generated-code/):01272                 SS_NoRingsTogoLifetime EQU $7523
     627F             (./generated-code/):01273                 SS_Object_RAM EQU $627F
     7478             (./generated-code/):01274                 SS_Object_RAM_End EQU $7478
     7529             (./generated-code/):01275                 SS_Offset_X EQU $7529
     752A             (./generated-code/):01276                 SS_Offset_Y EQU $752A
     750B             (./generated-code/):01277                 SS_Pause_Only_flag EQU $750B
     751C             (./generated-code/):01278                 SS_Perfect_rings_left EQU $751C
     74A9             (./generated-code/):01279                 SS_player_anim_frame_timer EQU $74A9
     751B             (./generated-code/):01280                 SS_Rainbow_palette EQU $751B
     7510             (./generated-code/):01281                 SS_Ring_Requirement EQU $7510
     7525             (./generated-code/):01282                 SS_RingsToGoBCD EQU $7525
     7531             (./generated-code/):01283                 SS_Seg_Len_x4 EQU $7531
     7520             (./generated-code/):01284                 SS_Star_color_1 EQU $7520
     7521             (./generated-code/):01285                 SS_Star_color_2 EQU $7521
     752B             (./generated-code/):01286                 SS_Swap_Positions_Flag EQU $752B
     7528             (./generated-code/):01287                 SS_TriggerRingsToGo EQU $7528
     74D5             (./generated-code/):01288                 SS_unk_DB4D EQU $74D5
     74C5             (./generated-code/):01289                 SSDrawRegBuffer EQU $74C5
     74D1             (./generated-code/):01290                 SSDrawRegBuffer_End EQU $74D1
     748F             (./generated-code/):01291                 SSTrack_anim EQU $748F
     7493             (./generated-code/):01292                 SSTrack_anim_frame EQU $7493
     7495             (./generated-code/):01293                 SSTrack_drawing_index EQU $7495
     74A7             (./generated-code/):01294                 SSTrack_duration_timer EQU $74A7
     7490             (./generated-code/):01295                 SSTrack_last_anim_frame EQU $7490
     74C0             (./generated-code/):01296                 SSTrack_last_mapping_frame EQU $74C0
     74B3             (./generated-code/):01297                 SSTrack_last_mappings EQU $74B3
     74AF             (./generated-code/):01298                 SSTrack_last_mappings_copy EQU $74AF
     74BB             (./generated-code/):01299                 SSTrack_LastVScroll EQU $74BB
     7498             (./generated-code/):01300                 SSTrack_mapping_frame EQU $7498
     7487             (./generated-code/):01301                 SSTrack_mappings_bitflags EQU $7487
     74C1             (./generated-code/):01302                 SSTrack_mappings_RLE EQU $74C1
     748B             (./generated-code/):01303                 SSTrack_mappings_uncompressed EQU $748B
     7496             (./generated-code/):01304                 SSTrack_Orientation EQU $7496
     000A             (./generated-code/):01305                 StackPointer EQU $000A
     000B             (./generated-code/):01306                 status_flags EQU $000B
     0001             (./generated-code/):01307                 status_xflip_mask EQU $0001
     0002             (./generated-code/):01308                 status_yflip_mask EQU $0002
     8BAE             (./generated-code/):01309                 StructEnd EQU $8BAE
     887A             (./generated-code/):01310                 StructStart EQU $887A
     0000             (./generated-code/):01311                 Sub_SpecialStage_Init EQU $0000
     0001             (./generated-code/):01312                 Sub_SpecialStage_Main EQU $0001
     0001             (./generated-code/):01313                 subtype EQU $0001
     75BB             (./generated-code/):01314                 SwapVideoPage EQU $75BB
     77CB             (./generated-code/):01315                 Tbl_Priority_First_Entry_0 EQU $77CB
     784D             (./generated-code/):01316                 Tbl_Priority_First_Entry_1 EQU $784D
     77DD             (./generated-code/):01317                 Tbl_Priority_Last_Entry_0 EQU $77DD
     785F             (./generated-code/):01318                 Tbl_Priority_Last_Entry_1 EQU $785F
     792B             (./generated-code/):01319                 Tbl_Sub_Object_Draw EQU $792B
     78CF             (./generated-code/):01320                 Tbl_Sub_Object_Erase EQU $78CF
     0003             (./generated-code/):01321                 TempoDivider EQU $0003
     001C             (./generated-code/):01322                 TLPtr EQU $001C
     0004             (./generated-code/):01323                 Track.DataPointer EQU $0004
     0019             (./generated-code/):01324                 Track.Detune EQU $0019
     000B             (./generated-code/):01325                 Track.DurationTimeout EQU $000B
     001F             (./generated-code/):01326                 Track.InstrAndVolume EQU $001F
     001E             (./generated-code/):01327                 Track.InstrTranspose EQU $001E
     0020             (./generated-code/):01328                 Track.LoopCounters EQU $0020
     0015             (./generated-code/):01329                 Track.ModulationDelta EQU $0015
     0011             (./generated-code/):01330                 Track.ModulationPtr EQU $0011
     0014             (./generated-code/):01331                 Track.ModulationSpeed EQU $0014
     0016             (./generated-code/):01332                 Track.ModulationSteps EQU $0016
     0017             (./generated-code/):01333                 Track.ModulationVal EQU $0017
     0013             (./generated-code/):01334                 Track.ModulationWait EQU $0013
     000D             (./generated-code/):01335                 Track.NextData EQU $000D
     0002             (./generated-code/):01336                 Track.NoteControl EQU $0002
     0010             (./generated-code/):01337                 Track.NoteFillMaster EQU $0010
     000F             (./generated-code/):01338                 Track.NoteFillTimeout EQU $000F
     0000             (./generated-code/):01339                 Track.PlaybackControl EQU $0000
     001B             (./generated-code/):01340                 Track.PSGNoise EQU $001B
     000C             (./generated-code/):01341                 Track.SavedDuration EQU $000C
     000A             (./generated-code/):01342                 Track.StackPointer EQU $000A
     0003             (./generated-code/):01343                 Track.TempoDivider EQU $0003
     001C             (./generated-code/):01344                 Track.TLPtr EQU $001C
     0006             (./generated-code/):01345                 Track.Transpose EQU $0006
     0001             (./generated-code/):01346                 Track.VoiceControl EQU $0001
     0008             (./generated-code/):01347                 Track.VoiceIndex EQU $0008
     0009             (./generated-code/):01348                 Track.VolFlutter EQU $0009
     001A             (./generated-code/):01349                 Track.VolTLMask EQU $001A
     0007             (./generated-code/):01350                 Track.Volume EQU $0007
     8AB2             (./generated-code/):01351                 tracksEnd EQU $8AB2
     8BAE             (./generated-code/):01352                 tracksSFXEnd EQU $8BAE
     8AB2             (./generated-code/):01353                 tracksSFXStart EQU $8AB2
     8890             (./generated-code/):01354                 tracksStart EQU $8890
     0006             (./generated-code/):01355                 TranspAndVolume EQU $0006
     0006             (./generated-code/):01356                 Transpose EQU $0006
     82FC             (./generated-code/):01357                 UDP_B0 EQU $82FC
     8369             (./generated-code/):01358                 UDP_B1 EQU $8369
     8343             (./generated-code/):01359                 UDP_ChainNextB0 EQU $8343
     83B0             (./generated-code/):01360                 UDP_ChainNextB1 EQU $83B0
     8323             (./generated-code/):01361                 UDP_ChainPrevB0 EQU $8323
     8390             (./generated-code/):01362                 UDP_ChainPrevB1 EQU $8390
     834D             (./generated-code/):01363                 UDP_CheckDeleteB0 EQU $834D
     83BA             (./generated-code/):01364                 UDP_CheckDeleteB1 EQU $83BA
     82FF             (./generated-code/):01365                 UDP_CheckEndB0 EQU $82FF
     836C             (./generated-code/):01366                 UDP_CheckEndB1 EQU $836C
     832D             (./generated-code/):01367                 UDP_CheckPrioNextB0 EQU $832D
     839A             (./generated-code/):01368                 UDP_CheckPrioNextB1 EQU $839A
     830B             (./generated-code/):01369                 UDP_CheckPrioPrevB0 EQU $830B
     8378             (./generated-code/):01370                 UDP_CheckPrioPrevB1 EQU $8378
     8304             (./generated-code/):01371                 UDP_InitListB0 EQU $8304
     8371             (./generated-code/):01372                 UDP_InitListB1 EQU $8371
     8362             (./generated-code/):01373                 UDP_SetNewPrioB0 EQU $8362
     83CF             (./generated-code/):01374                 UDP_SetNewPrioB1 EQU $83CF
     82F7             (./generated-code/):01375                 UDP_Start EQU $82F7
     82F7             (./generated-code/):01376                 UnsetDisplayPriority EQU $82F7
     8D13             (./generated-code/):01377                 UpdateEverything EQU $8D13
     8D2A             (./generated-code/):01378                 UpdateMusic EQU $8D2A
     884E             (./generated-code/):01379                 UpdatePalette EQU $884E
     8DA2             (./generated-code/):01380                 UpdateSound EQU $8DA2
     8878             (./generated-code/):01381                 UPP_return EQU $8878
     886B             (./generated-code/):01382                 UPP_SetColor EQU $886B
     885A             (./generated-code/):01383                 UPP_Tempo EQU $885A
     7600             (./generated-code/):01384                 Vint_Last_runcount EQU $7600
     7603             (./generated-code/):01385                 Vint_Main_runcount EQU $7603
     7604             (./generated-code/):01386                 Vint_Main_runcount_cap EQU $7604
     7602             (./generated-code/):01387                 Vint_Main_runcount_w EQU $7602
     75FE             (./generated-code/):01388                 Vint_runcount EQU $75FE
     0001             (./generated-code/):01389                 VoiceControl EQU $0001
     0008             (./generated-code/):01390                 VoiceIndex EQU $0008
     9187             (./generated-code/):01391                 VolEnvHold EQU $9187
     0009             (./generated-code/):01392                 VolFlutter EQU $0009
     001A             (./generated-code/):01393                 VolTLMask EQU $001A
     0007             (./generated-code/):01394                 Volume EQU $0007
     75A7             (./generated-code/):01395                 WaitVBL EQU $75A7
     882E             (./generated-code/):01396                 White_palette EQU $882E
     001A             (./generated-code/):01397                 x_acl EQU $001A
     0014             (./generated-code/):01398                 x_pixel EQU $0014
     000E             (./generated-code/):01399                 x_pos EQU $000E
     0010             (./generated-code/):01400                 x_sub EQU $0010
     0016             (./generated-code/):01401                 x_vel EQU $0016
     0014             (./generated-code/):01402                 xy_pixel EQU $0014
     001C             (./generated-code/):01403                 y_acl EQU $001C
     0015             (./generated-code/):01404                 y_pixel EQU $0015
     0011             (./generated-code/):01405                 y_pos EQU $0011
     0013             (./generated-code/):01406                 y_sub EQU $0013
     0018             (./generated-code/):01407                 y_vel EQU $0018
     E7FC             (./generated-code/):01408                 YM2413_A0 EQU $E7FC
     E7FD             (./generated-code/):01409                 YM2413_D0 EQU $E7FD
     8BB8             (./generated-code/):01410                 YM2413_DrumModeOn EQU $8BB8
                      (C:\Users\bhrou\gi):00003                         INCLUDE "./generated-code/SpecialStage/FD/HalfPipe/HalfPipe_Animation.glb"
     00FE             (./generated-code/):00001                 _goBackNFrames EQU $00FE
     00FD             (./generated-code/):00002                 _goToAnimation EQU $00FD
     00FC             (./generated-code/):00003                 _nextRoutine EQU $00FC
     00FA             (./generated-code/):00004                 _nextSubRoutine EQU $00FA
     00FF             (./generated-code/):00005                 _resetAnim EQU $00FF
     00FB             (./generated-code/):00006                 _resetAnimAndSubRoutine EQU $00FB
     A001             (./generated-code/):00007                 Ani_Straight EQU $A001
     A055             (./generated-code/):00008                 Ani_Straight_From_TurnThenStraight EQU $A055
     A023             (./generated-code/):00009                 Ani_StraightThenTurn EQU $A023
     A0C3             (./generated-code/):00010                 Ani_TurnThenDrop EQU $A0C3
     A077             (./generated-code/):00011                 Ani_TurnThenRise EQU $A077
     A03B             (./generated-code/):00012                 Ani_TurnThenStraight EQU $A03B
     A0F5             (./generated-code/):00013                 Ani_TurnThenStraight_From_Drop EQU $A0F5
     A0A9             (./generated-code/):00014                 Ani_TurnThenStraight_From_Rise EQU $A0A9
     0012             (./generated-code/):00015                 IdImg_tk_002 EQU $0012
     0013             (./generated-code/):00016                 IdImg_tk_003 EQU $0013
     0014             (./generated-code/):00017                 IdImg_tk_004 EQU $0014
     0031             (./generated-code/):00018                 IdImg_tk_005 EQU $0031
     0032             (./generated-code/):00019                 IdImg_tk_006 EQU $0032
     0033             (./generated-code/):00020                 IdImg_tk_007 EQU $0033
     0034             (./generated-code/):00021                 IdImg_tk_008 EQU $0034
     0035             (./generated-code/):00022                 IdImg_tk_009 EQU $0035
     0036             (./generated-code/):00023                 IdImg_tk_010 EQU $0036
     0037             (./generated-code/):00024                 IdImg_tk_011 EQU $0037
     0026             (./generated-code/):00025                 IdImg_tk_012 EQU $0026
     0026             (./generated-code/):00026                 IdImg_tk_012_017 EQU $0026
     0026             (./generated-code/):00027                 IdImg_tk_012_038b EQU $0026
     0026             (./generated-code/):00028                 IdImg_tk_012_055 EQU $0026
     0027             (./generated-code/):00029                 IdImg_tk_013 EQU $0027
     0028             (./generated-code/):00030                 IdImg_tk_014 EQU $0028
     0029             (./generated-code/):00031                 IdImg_tk_015 EQU $0029
     002A             (./generated-code/):00032                 IdImg_tk_016 EQU $002A
     002B             (./generated-code/):00033                 IdImg_tk_017 EQU $002B
     002C             (./generated-code/):00034                 IdImg_tk_018 EQU $002C
     002D             (./generated-code/):00035                 IdImg_tk_019 EQU $002D
     002E             (./generated-code/):00036                 IdImg_tk_020 EQU $002E
     002F             (./generated-code/):00037                 IdImg_tk_021 EQU $002F
     0030             (./generated-code/):00038                 IdImg_tk_022 EQU $0030
     0000             (./generated-code/):00039                 IdImg_tk_023 EQU $0000
     0001             (./generated-code/):00040                 IdImg_tk_024 EQU $0001
     0002             (./generated-code/):00041                 IdImg_tk_025 EQU $0002
     0003             (./generated-code/):00042                 IdImg_tk_026 EQU $0003
     0004             (./generated-code/):00043                 IdImg_tk_027 EQU $0004
     0005             (./generated-code/):00044                 IdImg_tk_028 EQU $0005
     0006             (./generated-code/):00045                 IdImg_tk_029 EQU $0006
     0007             (./generated-code/):00046                 IdImg_tk_030 EQU $0007
     0008             (./generated-code/):00047                 IdImg_tk_031 EQU $0008
     0009             (./generated-code/):00048                 IdImg_tk_032 EQU $0009
     000A             (./generated-code/):00049                 IdImg_tk_033 EQU $000A
     000B             (./generated-code/):00050                 IdImg_tk_034 EQU $000B
     000C             (./generated-code/):00051                 IdImg_tk_035 EQU $000C
     000D             (./generated-code/):00052                 IdImg_tk_036 EQU $000D
     000E             (./generated-code/):00053                 IdImg_tk_037 EQU $000E
     000F             (./generated-code/):00054                 IdImg_tk_038 EQU $000F
     0010             (./generated-code/):00055                 IdImg_tk_038b EQU $0010
     0015             (./generated-code/):00056                 IdImg_tk_039 EQU $0015
     0016             (./generated-code/):00057                 IdImg_tk_040 EQU $0016
     0017             (./generated-code/):00058                 IdImg_tk_041 EQU $0017
     0018             (./generated-code/):00059                 IdImg_tk_042 EQU $0018
     0019             (./generated-code/):00060                 IdImg_tk_043 EQU $0019
     001A             (./generated-code/):00061                 IdImg_tk_044 EQU $001A
     001B             (./generated-code/):00062                 IdImg_tk_045 EQU $001B
     001C             (./generated-code/):00063                 IdImg_tk_046 EQU $001C
     001D             (./generated-code/):00064                 IdImg_tk_047 EQU $001D
     001E             (./generated-code/):00065                 IdImg_tk_048 EQU $001E
     001F             (./generated-code/):00066                 IdImg_tk_049 EQU $001F
     0020             (./generated-code/):00067                 IdImg_tk_050 EQU $0020
     0021             (./generated-code/):00068                 IdImg_tk_051 EQU $0021
     0022             (./generated-code/):00069                 IdImg_tk_052 EQU $0022
     0023             (./generated-code/):00070                 IdImg_tk_053 EQU $0023
     0024             (./generated-code/):00071                 IdImg_tk_054 EQU $0024
     0025             (./generated-code/):00072                 IdImg_tk_055 EQU $0025
     0011             (./generated-code/):00073                 IdImg_tk_key_004 EQU $0011
     0011             (./generated-code/):00074                 IdImg_tk_key_022 EQU $0011
     A012             (./generated-code/):00075                 Img_tk_002 EQU $A012
     A023             (./generated-code/):00076                 Img_tk_003 EQU $A023
     A034             (./generated-code/):00077                 Img_tk_004 EQU $A034
     A045             (./generated-code/):00078                 Img_tk_005 EQU $A045
     A05F             (./generated-code/):00079                 Img_tk_006 EQU $A05F
     A079             (./generated-code/):00080                 Img_tk_007 EQU $A079
     A093             (./generated-code/):00081                 Img_tk_008 EQU $A093
     A0AD             (./generated-code/):00082                 Img_tk_009 EQU $A0AD
     A0C7             (./generated-code/):00083                 Img_tk_010 EQU $A0C7
     A0E1             (./generated-code/):00084                 Img_tk_011 EQU $A0E1
     A0FB             (./generated-code/):00085                 Img_tk_012 EQU $A0FB
     A197             (./generated-code/):00086                 Img_tk_012_017 EQU $A197
     A3BF             (./generated-code/):00087                 Img_tk_012_038b EQU $A3BF
     A581             (./generated-code/):00088                 Img_tk_012_055 EQU $A581
     A115             (./generated-code/):00089                 Img_tk_013 EQU $A115
     A12F             (./generated-code/):00090                 Img_tk_014 EQU $A12F
     A149             (./generated-code/):00091                 Img_tk_015 EQU $A149
     A163             (./generated-code/):00092                 Img_tk_016 EQU $A163
     A17D             (./generated-code/):00093                 Img_tk_017 EQU $A17D
     A1B1             (./generated-code/):00094                 Img_tk_018 EQU $A1B1
     A1CB             (./generated-code/):00095                 Img_tk_019 EQU $A1CB
     A1E5             (./generated-code/):00096                 Img_tk_020 EQU $A1E5
     A1FF             (./generated-code/):00097                 Img_tk_021 EQU $A1FF
     A219             (./generated-code/):00098                 Img_tk_022 EQU $A219
     A24D             (./generated-code/):00099                 Img_tk_023 EQU $A24D
     A267             (./generated-code/):00100                 Img_tk_024 EQU $A267
     A281             (./generated-code/):00101                 Img_tk_025 EQU $A281
     A29B             (./generated-code/):00102                 Img_tk_026 EQU $A29B
     A2B5             (./generated-code/):00103                 Img_tk_027 EQU $A2B5
     A2CF             (./generated-code/):00104                 Img_tk_028 EQU $A2CF
     A2E9             (./generated-code/):00105                 Img_tk_029 EQU $A2E9
     A2FA             (./generated-code/):00106                 Img_tk_030 EQU $A2FA
     A30B             (./generated-code/):00107                 Img_tk_031 EQU $A30B
     A31C             (./generated-code/):00108                 Img_tk_032 EQU $A31C
     A32D             (./generated-code/):00109                 Img_tk_033 EQU $A32D
     A33E             (./generated-code/):00110                 Img_tk_034 EQU $A33E
     A34F             (./generated-code/):00111                 Img_tk_035 EQU $A34F
     A360             (./generated-code/):00112                 Img_tk_036 EQU $A360
     A371             (./generated-code/):00113                 Img_tk_037 EQU $A371
     A38B             (./generated-code/):00114                 Img_tk_038 EQU $A38B
     A3A5             (./generated-code/):00115                 Img_tk_038b EQU $A3A5
     A3D9             (./generated-code/):00116                 Img_tk_039 EQU $A3D9
     A3F3             (./generated-code/):00117                 Img_tk_040 EQU $A3F3
     A40D             (./generated-code/):00118                 Img_tk_041 EQU $A40D
     A427             (./generated-code/):00119                 Img_tk_042 EQU $A427
     A441             (./generated-code/):00120                 Img_tk_043 EQU $A441
     A45B             (./generated-code/):00121                 Img_tk_044 EQU $A45B
     A475             (./generated-code/):00122                 Img_tk_045 EQU $A475
     A48F             (./generated-code/):00123                 Img_tk_046 EQU $A48F
     A4A9             (./generated-code/):00124                 Img_tk_047 EQU $A4A9
     A4C3             (./generated-code/):00125                 Img_tk_048 EQU $A4C3
     A4DD             (./generated-code/):00126                 Img_tk_049 EQU $A4DD
     A4F7             (./generated-code/):00127                 Img_tk_050 EQU $A4F7
     A508             (./generated-code/):00128                 Img_tk_051 EQU $A508
     A519             (./generated-code/):00129                 Img_tk_052 EQU $A519
     A533             (./generated-code/):00130                 Img_tk_053 EQU $A533
     A54D             (./generated-code/):00131                 Img_tk_054 EQU $A54D
     A567             (./generated-code/):00132                 Img_tk_055 EQU $A567
     A001             (./generated-code/):00133                 Img_tk_key_004 EQU $A001
     A233             (./generated-code/):00134                 Img_tk_key_022 EQU $A233
                      (C:\Users\bhrou\gi):00004                         org   $0000
     FF               (C:\Users\bhrou\gi):00005                         setdp $FF
                      (C:\Users\bhrou\gi):00006                 
                      (C:\Users\bhrou\gi):00007                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00008                 ; Object - Special Stage
                      (C:\Users\bhrou\gi):00009                 ;
                      (C:\Users\bhrou\gi):00010                 ; input REG : [u] pointer to Object Status Table (OST)
                      (C:\Users\bhrou\gi):00011                 ; ---------
                      (C:\Users\bhrou\gi):00012                 ;
                      (C:\Users\bhrou\gi):00013                 ; Two objects in one to reduce the call of page swap routine
                      (C:\Users\bhrou\gi):00014                 ;
                      (C:\Users\bhrou\gi):00015                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00016                 
                      (C:\Users\bhrou\gi):00017                         INCLUDE "./objects/levels/special-stage/SSBomb/Constants.asm"
                      (./objects/levels/):00001                 * ---------------------------------------------------------------------------
                      (./objects/levels/):00002                 * Constants
                      (./objects/levels/):00003                 *
                      (./objects/levels/):00004                 * Naming convention
                      (./objects/levels/):00005                 * -----------------
                      (./objects/levels/):00006                 * - lower case
                      (./objects/levels/):00007                 * - underscore-separated names
                      (./objects/levels/):00008                 *
                      (./objects/levels/):00009                 * ---------------------------------------------------------------------------
                      (./objects/levels/):00010                 
     0004             (./objects/levels/):00011                 HalfPipe_Img_z_depth  equ 4 ; number of z pos increment into a single image 
                      (./objects/levels/):00012                 
                      (./objects/levels/):00013                 * ===========================================================================
                      (./objects/levels/):00014                 * Physics Constants
                      (./objects/levels/):00015                 * ===========================================================================
                      (./objects/levels/):00016                 
     0038             (./objects/levels/):00017                 gravity                       equ $38 ; in 8bit decimal, sub-pixel value
                      (./objects/levels/):00018                 
                      (./objects/levels/):00019                 * ===========================================================================
                      (./objects/levels/):00020                 * Object Constants
                      (./objects/levels/):00021                 * ===========================================================================
                      (./objects/levels/):00022                 
     005D             (./objects/levels/):00023                 ss_z_pos                      equ ext_variables    ; and ext_variables+1 ; and ext_variables+2 ; first byte is always 0, distance from camera to half-pipe segment end (0: front)
     0060             (./objects/levels/):00024                 ss_parent                     equ ext_variables+3  ; and ext_variables+4  ; object ptr to child or parent (0: front)
     0062             (./objects/levels/):00025                 ss_shadow_tilt                equ ext_variables+5  ; 0:flat 1:diagonal 2:side
     0063             (./objects/levels/):00026                 ss_self_delete                equ ext_variables+6  ; flag usually set by parent to tell to child to self delete
     0064             (./objects/levels/):00027                 collision_property            equ ext_variables+7
     0065             (./objects/levels/):00028                 mapping_frame                 equ ext_variables+8
     0066             (./objects/levels/):00029                 ss_z_pos_img_start            equ ext_variables+9  ; and ext_variables+10  ; distance from camera to half-pipe segment end (0: front) at start of last image
     0068             (./objects/levels/):00030                 angle                         equ ext_variables+11 ; angle (z axis) 360 degrees = 256, from camera view: $00 right, $40 bottom, $80 left, $c0 top
     0069             (./objects/levels/):00031                 collision_flags               equ ext_variables+12 ; Collision response bitfield, tells what the object will do if hit by the character
                      (./objects/levels/):00032                 * --- collision bitfield variables for objects ---
                      (./objects/levels/):00033                 ; format TTSS SSSS
                      (./objects/levels/):00034                 ; TT is the type of collision - 00 is enemy, 01 sets the routine counter to $4, 10 is harm, and 11 seems to be a special thing for the starpole.
                      (./objects/levels/):00035                 ; SSSSSS is the size, lifted from a lookup table in the collision response routine.
                      (./objects/levels/):00036                 
                      (./objects/levels/):00037                 ;ss_dplc_timer = $23
                      (./objects/levels/):00038                 ;ss_x_pos = objoff_2A
                      (./objects/levels/):00039                 ;ss_x_sub = objoff_2C
                      (./objects/levels/):00040                 ;ss_y_pos = objoff_2E
                      (./objects/levels/):00041                 ;ss_y_sub = objoff_30
                      (./objects/levels/):00042                 ;ss_init_flip_timer = objoff_32
                      (./objects/levels/):00043                 ;ss_flip_timer = objoff_33
                      (./objects/levels/):00044                 ;ss_z_pos = objoff_34
                      (./objects/levels/):00045                 ;ss_hurt_timer = objoff_36
                      (./objects/levels/):00046                 ;ss_slide_timer = objoff_37
                      (./objects/levels/):00047                 ;ss_parent = objoff_38
                      (./objects/levels/):00048                 ;ss_rings_base = objoff_3C      ; word
                      (./objects/levels/):00049                 ;ss_rings_hundreds = objoff_3C
                      (./objects/levels/):00050                 ;ss_rings_tens = objoff_3D
                      (./objects/levels/):00051                 ;ss_rings_units = objoff_3E
                      (./objects/levels/):00052                 ;ss_last_angle_index = objoff_3F
                      (C:\Users\bhrou\gi):00018                         INCLUDE "./Engine/Macros.asm"   
0000                  (./Engine/Macros.a):00001                 _ldd MACRO
                      (./Engine/Macros.a):00002                         ldd   #((\1)*256)+\2
                      (./Engine/Macros.a):00003                  ENDM
                      (./Engine/Macros.a):00004                  
0000                  (./Engine/Macros.a):00005                 _ldx MACRO
                      (./Engine/Macros.a):00006                         ldx   #((\1)*256)+\2
                      (./Engine/Macros.a):00007                  ENDM
                      (./Engine/Macros.a):00008                  
0000                  (./Engine/Macros.a):00009                 _ldy MACRO
                      (./Engine/Macros.a):00010                         ldy   #((\1)*256)+\2
                      (./Engine/Macros.a):00011                  ENDM
                      (./Engine/Macros.a):00012                  
0000                  (./Engine/Macros.a):00013                 _ldu MACRO
                      (./Engine/Macros.a):00014                         ldu   #((\1)*256)+\2
                      (./Engine/Macros.a):00015                  ENDM  
                      (./Engine/Macros.a):00016                  
0000                  (./Engine/Macros.a):00017                 _lds MACRO
                      (./Engine/Macros.a):00018                         lds   #((\1)*256)+\2
                      (./Engine/Macros.a):00019                  ENDM   
                      (./Engine/Macros.a):00020                  
0000                  (./Engine/Macros.a):00021                 _SetCartPageA MACRO
                      (./Engine/Macros.a):00022                  IFDEF T2
                      (./Engine/Macros.a):00023                         jsr   SetCartPageA
                      (./Engine/Macros.a):00024                  ELSE
                      (./Engine/Macros.a):00025                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00026                  ENDC
                      (./Engine/Macros.a):00027                  ENDM      
                      (./Engine/Macros.a):00028                  
0000                  (./Engine/Macros.a):00029                 _GetCartPageA MACRO
                      (./Engine/Macros.a):00030                  IFDEF T2
                      (./Engine/Macros.a):00031                         jsr   GetCartPageA
                      (./Engine/Macros.a):00032                  ELSE
                      (./Engine/Macros.a):00033                         lda   $E7E6
                      (./Engine/Macros.a):00034                  ENDC
                      (./Engine/Macros.a):00035                  ENDM
                      (./Engine/Macros.a):00036                 
0000                  (./Engine/Macros.a):00037                 _SetCartPageB MACRO
                      (./Engine/Macros.a):00038                  IFDEF T2
                      (./Engine/Macros.a):00039                         jsr   SetCartPageB
                      (./Engine/Macros.a):00040                  ELSE
                      (./Engine/Macros.a):00041                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00042                  ENDC
                      (./Engine/Macros.a):00043                  ENDM      
                      (./Engine/Macros.a):00044                  
0000                  (./Engine/Macros.a):00045                 _GetCartPageB MACRO
                      (./Engine/Macros.a):00046                  IFDEF T2
                      (./Engine/Macros.a):00047                         jsr   GetCartPageB
                      (./Engine/Macros.a):00048                  ELSE
                      (./Engine/Macros.a):00049                         ldb   $E7E6
                      (./Engine/Macros.a):00050                  ENDC
                      (./Engine/Macros.a):00051                  ENDM     
                      (./Engine/Macros.a):00052                 
0000                  (./Engine/Macros.a):00053                 _RunObjectSwap MACRO
                      (./Engine/Macros.a):00054                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00055                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00056                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00057                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00058                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00059                         stu   glb_Address       
                      (./Engine/Macros.a):00060                         ldu   \2             
                      (./Engine/Macros.a):00061                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00062                  ENDM    
                      (./Engine/Macros.a):00063                 
0000                  (./Engine/Macros.a):00064                 _RunObjectSwapRoutine MACRO
                      (./Engine/Macros.a):00065                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00066                         ; param 2 : Object routine
                      (./Engine/Macros.a):00067                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00068                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00069                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00070                         stu   glb_Address       
                      (./Engine/Macros.a):00071                         lda   \2        
                      (./Engine/Macros.a):00072                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00073                  ENDM 
                      (./Engine/Macros.a):00074                  
0000                  (./Engine/Macros.a):00075                 _MountObject MACRO 
                      (./Engine/Macros.a):00076                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00077                         ; manual mount of an object from the resident page 1
                      (./Engine/Macros.a):00078                         lda   Obj_Index_Page+\1
                      (./Engine/Macros.a):00079                         _SetCartPageA
                      (./Engine/Macros.a):00080                         ldx   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00081                  ENDM
                      (./Engine/Macros.a):00082                 
0000                  (./Engine/Macros.a):00083                 _RunObject MACRO 
                      (./Engine/Macros.a):00084                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00085                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00086                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00087                         _MountObject \1
                      (./Engine/Macros.a):00088                         ldu   \2        
                      (./Engine/Macros.a):00089                         jsr   ,x
                      (./Engine/Macros.a):00090                  ENDM
                      (./Engine/Macros.a):00091                 
0000                  (./Engine/Macros.a):00092                 _RunObjectRoutine MACRO 
                      (./Engine/Macros.a):00093                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00094                         ; param 2 : Object routine
                      (./Engine/Macros.a):00095                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00096                         ; this object does not need or have a data structure for this routine
                      (./Engine/Macros.a):00097                         _MountObject \1
                      (./Engine/Macros.a):00098                         lda   \2        
                      (./Engine/Macros.a):00099                         jsr   ,x
                      (./Engine/Macros.a):00100                  ENDM
                      (./Engine/Macros.a):00101                 
0000                  (./Engine/Macros.a):00102                 _asld MACRO
                      (./Engine/Macros.a):00103                         aslb
                      (./Engine/Macros.a):00104                         rola
                      (./Engine/Macros.a):00105                  ENDM        
                      (./Engine/Macros.a):00106                  
0000                  (./Engine/Macros.a):00107                 _asrd MACRO
                      (./Engine/Macros.a):00108                         asra
                      (./Engine/Macros.a):00109                         rorb
                      (./Engine/Macros.a):00110                  ENDM      
                      (./Engine/Macros.a):00111                  
0000                  (./Engine/Macros.a):00112                 _lsld MACRO
                      (./Engine/Macros.a):00113                         lslb
                      (./Engine/Macros.a):00114                         rola
                      (./Engine/Macros.a):00115                  ENDM        
                      (./Engine/Macros.a):00116                  
0000                  (./Engine/Macros.a):00117                 _lsrd MACRO
                      (./Engine/Macros.a):00118                         lsra
                      (./Engine/Macros.a):00119                         rorb
                      (./Engine/Macros.a):00120                  ENDM
                      (./Engine/Macros.a):00121                  
0000                  (./Engine/Macros.a):00122                 _rold MACRO
                      (./Engine/Macros.a):00123                         rolb
                      (./Engine/Macros.a):00124                         rola
                      (./Engine/Macros.a):00125                  ENDM    
                      (./Engine/Macros.a):00126                  
0000                  (./Engine/Macros.a):00127                 _rord MACRO
                      (./Engine/Macros.a):00128                         rora
                      (./Engine/Macros.a):00129                         rorb
                      (./Engine/Macros.a):00130                  ENDM
                      (./Engine/Macros.a):00131                 
0000                  (./Engine/Macros.a):00132                 _negd MACRO
                      (./Engine/Macros.a):00133                         nega
                      (./Engine/Macros.a):00134                         negb
                      (./Engine/Macros.a):00135                         sbca  #0
                      (./Engine/Macros.a):00136                  ENDM
                      (./Engine/Macros.a):00137                 
0000                  (./Engine/Macros.a):00138                 _cba MACRO
                      (./Engine/Macros.a):00139                         pshs  b
                      (./Engine/Macros.a):00140                         cmpa  ,s+
                      (./Engine/Macros.a):00141                  ENDM
                      (./Engine/Macros.a):00142                 
0000                  (./Engine/Macros.a):00143                 _aba MACRO
                      (./Engine/Macros.a):00144                         pshs  b
                      (./Engine/Macros.a):00145                         adda  ,s+
                      (./Engine/Macros.a):00146                  ENDM
                      (./Engine/Macros.a):00147                 
0000                  (./Engine/Macros.a):00148                 _sba MACRO
                      (./Engine/Macros.a):00149                         pshs  b
                      (./Engine/Macros.a):00150                         suba  ,s+
                      (./Engine/Macros.a):00151                  ENDM
                      (./Engine/Macros.a):00152                 
0000                  (./Engine/Macros.a):00153                 _cab MACRO
                      (./Engine/Macros.a):00154                         pshs  a
                      (./Engine/Macros.a):00155                         cmpb  ,s+
                      (./Engine/Macros.a):00156                  ENDM
                      (./Engine/Macros.a):00157                 
0000                  (./Engine/Macros.a):00158                 _aab MACRO
                      (./Engine/Macros.a):00159                         pshs  a
                      (./Engine/Macros.a):00160                         addb  ,s+
                      (./Engine/Macros.a):00161                  ENDM
                      (./Engine/Macros.a):00162                 
0000                  (./Engine/Macros.a):00163                 _sab MACRO
                      (./Engine/Macros.a):00164                         pshs  a
                      (./Engine/Macros.a):00165                         subb  ,s+
                      (./Engine/Macros.a):00166                  ENDM
                      (C:\Users\bhrou\gi):00019                         
     0005             (C:\Users\bhrou\gi):00020                 HalfPipe_Img_Duration equ 5 ; (min value = 5) track maximum refresh rate: 50Hz/HalfPipe_Img_Duration= x fps
     00CC             (C:\Users\bhrou\gi):00021                 HalfPipe_one_z_step   equ (HalfPipe_Img_z_depth*256)/HalfPipe_Img_Duration
                      (C:\Users\bhrou\gi):00022                 
0000                  (C:\Users\bhrou\gi):00023                 SpecialStage
0000 A6C81E           (C:\Users\bhrou\gi):00024 [5]     5               lda   routine,u
0003 48               (C:\Users\bhrou\gi):00025 [2]     7               asla
0004 8E0009           (C:\Users\bhrou\gi):00026 [3]     10              ldx   #SpecialStage_Routines
0007 6E96             (C:\Users\bhrou\gi):00027 [7]     17              jmp   [a,x]
                      (C:\Users\bhrou\gi):00028                 
0009                  (C:\Users\bhrou\gi):00029                 SpecialStage_Routines
0009 000D             (C:\Users\bhrou\gi):00030                         fdb   SpecialStage_Init
000B 0089             (C:\Users\bhrou\gi):00031                         fdb   SpecialStage_Main
                      (C:\Users\bhrou\gi):00032                         
                      (C:\Users\bhrou\gi):00033                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00034                                                                       *; loc_4F64:
000D                  (C:\Users\bhrou\gi):00035                 SpecialStage_Init                                     *SpecialStage:
000D 6CC81E           (C:\Users\bhrou\gi):00036 [7]     24              inc   routine,u
0010 B67478           (C:\Users\bhrou\gi):00037 [5]     29              lda   Current_Special_Stage                                              
0013 8107             (C:\Users\bhrou\gi):00038 [2]     31              cmpa  #7                                      *    cmpi.b  #7,(Current_Special_Stage).w
0015 2503             (C:\Users\bhrou\gi):00039 [3]     34              blo   @a                                      *    blo.s   +
0017 7F7478           (C:\Users\bhrou\gi):00040 [7]     41              clr   Current_Special_Stage                   *    move.b  #0,(Current_Special_Stage).w
001A                  (C:\Users\bhrou\gi):00041                 @a                                                    *+
                      (C:\Users\bhrou\gi):00042                                                                       *    move.w  #SndID_SpecStageEntry,d0 ; play that funky special stage entry sound
                      (C:\Users\bhrou\gi):00043                                                                       *    bsr.w   PlaySound
                      (C:\Users\bhrou\gi):00044                                                                       *    move.b  #MusID_FadeOut,d0 ; fade out the music
                      (C:\Users\bhrou\gi):00045                                                                       *    bsr.w   PlayMusic
                      (C:\Users\bhrou\gi):00046                                                                       *    bsr.w   Pal_FadeToWhite
                      (C:\Users\bhrou\gi):00047                                                                       *    tst.w   (Two_player_mode).w
                      (C:\Users\bhrou\gi):00048                                                                       *    beq.s   +
                      (C:\Users\bhrou\gi):00049                                                                       *    move.w  #0,(Two_player_mode).w
                      (C:\Users\bhrou\gi):00050                                                                       *    st.b    (SS_2p_Flag).w ; set to -1
                      (C:\Users\bhrou\gi):00051                                                                       *    bra.s   ++
                      (C:\Users\bhrou\gi):00052                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00053                                                                       *+
                      (C:\Users\bhrou\gi):00054                                                                       *    sf.b    (SS_2p_Flag).w ; set to 0
                      (C:\Users\bhrou\gi):00055                                                                       *; (!)
                      (C:\Users\bhrou\gi):00056                                                                       *+
                      (C:\Users\bhrou\gi):00057                                                                       *    move    #$2700,sr       ; Mask all interrupts
                      (C:\Users\bhrou\gi):00058                                                                       *    lea (VDP_control_port).l,a6
                      (C:\Users\bhrou\gi):00059                                                                       *    move.w  #$8B03,(a6)     ; EXT-INT disabled, V scroll by screen, H scroll by line
                      (C:\Users\bhrou\gi):00060                                                                       *    move.w  #$8004,(a6)     ; H-INT disabled
                      (C:\Users\bhrou\gi):00061                                                                       *    move.w  #$8ADF,(Hint_counter_reserve).w ; H-INT every 224th scanline
                      (C:\Users\bhrou\gi):00062                                                                       *    move.w  #$8200|(VRAM_SS_Plane_A_Name_Table1/$400),(a6)  ; PNT A base: $C000
                      (C:\Users\bhrou\gi):00063                                                                       *    move.w  #$8400|(VRAM_SS_Plane_B_Name_Table/$2000),(a6)  ; PNT B base: $A000
                      (C:\Users\bhrou\gi):00064                                                                       *    move.w  #$8C08,(a6)     ; H res 32 cells, no interlace, S/H enabled
                      (C:\Users\bhrou\gi):00065                                                                       *    move.w  #$9003,(a6)     ; Scroll table size: 128x32
                      (C:\Users\bhrou\gi):00066                                                                       *    move.w  #$8700,(a6)     ; Background palette/color: 0/0
                      (C:\Users\bhrou\gi):00067                                                                       *    move.w  #$8D00|(VRAM_SS_Horiz_Scroll_Table/$400),(a6)       ; H scroll table base: $FC00
                      (C:\Users\bhrou\gi):00068                                                                       *    move.w  #$8500|(VRAM_SS_Sprite_Attribute_Table/$200),(a6)   ; Sprite attribute table base: $F800
                      (C:\Users\bhrou\gi):00069                                                                       *    move.w  (VDP_Reg1_val).w,d0
                      (C:\Users\bhrou\gi):00070                                                                       *    andi.b  #$BF,d0
                      (C:\Users\bhrou\gi):00071                                                                       *    move.w  d0,(VDP_control_port).l
                      (C:\Users\bhrou\gi):00072                                                                       *
                      (C:\Users\bhrou\gi):00073                                                                       *; /------------------------------------------------------------------------\
                      (C:\Users\bhrou\gi):00074                                                                       *; | We're gonna zero-fill a bunch of VRAM regions. This was done by macro, |
                      (C:\Users\bhrou\gi):00075                                                                       *; | so there's gonna be a lot of wasted cycles.                            |
                      (C:\Users\bhrou\gi):00076                                                                       *; \------------------------------------------------------------------------/
                      (C:\Users\bhrou\gi):00077                                                                       *
                      (C:\Users\bhrou\gi):00078                                                                       *    dmaFillVRAM 0,VRAM_SS_Plane_A_Name_Table2,VRAM_SS_Plane_Table_Size ; clear Plane A pattern name table 1
                      (C:\Users\bhrou\gi):00079                                                                       *    dmaFillVRAM 0,VRAM_SS_Plane_A_Name_Table1,VRAM_SS_Plane_Table_Size ; clear Plane A pattern name table 2
                      (C:\Users\bhrou\gi):00080                                                                       *    dmaFillVRAM 0,VRAM_SS_Plane_B_Name_Table,VRAM_SS_Plane_Table_Size ; clear Plane B pattern name table
                      (C:\Users\bhrou\gi):00081                                                                       *    dmaFillVRAM 0,VRAM_SS_Horiz_Scroll_Table,VRAM_SS_Horiz_Scroll_Table_Size  ; clear Horizontal scroll table
                      (C:\Users\bhrou\gi):00082                                                                       *
                      (C:\Users\bhrou\gi):00083                                                                       *    clr.l   (Vscroll_Factor).w
                      (C:\Users\bhrou\gi):00084                                                                       *    clr.l   (unk_F61A).w
                      (C:\Users\bhrou\gi):00085                                                                       *    clr.b   (SpecialStage_Started).w
                      (C:\Users\bhrou\gi):00086                                                                       *
                      (C:\Users\bhrou\gi):00087                                                                       *; /------------------------------------------------------------------------\
                      (C:\Users\bhrou\gi):00088                                                                       *; | Now we clear out some regions in main RAM where we want to store some  |
                      (C:\Users\bhrou\gi):00089                                                                       *; | of our data structures.                                                |
                      (C:\Users\bhrou\gi):00090                                                                       *; \------------------------------------------------------------------------/
                      (C:\Users\bhrou\gi):00091                                                                       *    ; Bug: These '+4's shouldn't be here; clearRAM accidentally clears an additional 4 bytes
                      (C:\Users\bhrou\gi):00092                                                                       *    clearRAM SS_Sprite_Table,SS_Sprite_Table_End+4
                      (C:\Users\bhrou\gi):00093                                                                       *    clearRAM SS_Horiz_Scroll_Buf_1,SS_Horiz_Scroll_Buf_1_End+4
                      (C:\Users\bhrou\gi):00094                                                                       *    clearRAM SS_Misc_Variables,SS_Misc_Variables_End+4
                      (C:\Users\bhrou\gi):00095                                                                       *    clearRAM SS_Sprite_Table_Input,SS_Sprite_Table_Input_End
                      (C:\Users\bhrou\gi):00096                                                                       *    clearRAM SS_Object_RAM,SS_Object_RAM_End
                      (C:\Users\bhrou\gi):00097                                                                       *
                      (C:\Users\bhrou\gi):00098                                                                       *    ; However, the '+4' after SS_Misc_Variables_End is very useful. It resets the
                      (C:\Users\bhrou\gi):00099                                                                       *    ; VDP_Command_Buffer queue, avoiding graphical glitches in the Special Stage.
                      (C:\Users\bhrou\gi):00100                                                                       *    ; In fact, without reset of the VDP_Command_Buffer queue, Tails sprite DPLCs and other
                      (C:\Users\bhrou\gi):00101                                                                       *    ; level DPLCs that are still in the queue erase the Special Stage graphics the next
                      (C:\Users\bhrou\gi):00102                                                                       *    ; time ProcessDMAQueue is called.
                      (C:\Users\bhrou\gi):00103                                                                       *    ; This '+4' doesn't seem to be intentional, because of the other useless '+4' above,
                      (C:\Users\bhrou\gi):00104                                                                       *    ; and because a '+2' is enough to reset the VDP_Command_Buffer queue and fix this bug.
                      (C:\Users\bhrou\gi):00105                                                                       *    ; This is a fortunate accident!
                      (C:\Users\bhrou\gi):00106                                                                       *    ; Note that this is not a clean way to reset the VDP_Command_Buffer queue because the
                      (C:\Users\bhrou\gi):00107                                                                       *    ; VDP_Command_Buffer_Slot address shall be updated as well. They tried to do that in a
                      (C:\Users\bhrou\gi):00108                                                                       *    ; clean way after branching to ClearScreen (see below). But they messed up by doing it
                      (C:\Users\bhrou\gi):00109                                                                       *    ; after several WaitForVint calls.
                      (C:\Users\bhrou\gi):00110                                                                       *    ; You can uncomment the two lines below to clear the VDP_Command_Buffer queue intentionally.
                      (C:\Users\bhrou\gi):00111                                                                       *    ;clr.w  (VDP_Command_Buffer).w
                      (C:\Users\bhrou\gi):00112                                                                       *    ;move.l #VDP_Command_Buffer,(VDP_Command_Buffer_Slot).w
                      (C:\Users\bhrou\gi):00113                                                                       *
                      (C:\Users\bhrou\gi):00114                                                                       *    move    #$2300,sr
                      (C:\Users\bhrou\gi):00115                                                                       *    lea (VDP_control_port).l,a6
                      (C:\Users\bhrou\gi):00116                                                                       *    move.w  #$8F02,(a6)     ; VRAM pointer increment: $0002
                      (C:\Users\bhrou\gi):00117                                                                       *    bsr.w   ssInitTableBuffers
                      (C:\Users\bhrou\gi):00118                                                                       *    bsr.w   ssLdComprsdData
                      (C:\Users\bhrou\gi):00119                         ; moved to HalfPipe_Init                      *    move.w  #0,(SpecialStage_CurrentSegment).w
                      (C:\Users\bhrou\gi):00120                                                                       *    moveq   #PLCID_SpecialStage,d0
                      (C:\Users\bhrou\gi):00121                                                                       *    bsr.w   RunPLC_ROM
                      (C:\Users\bhrou\gi):00122                                                                       *    clr.b   (Level_started_flag).w
                      (C:\Users\bhrou\gi):00123                                                                       *    move.l  #0,(Camera_X_pos).w ; probably means something else in this context
                      (C:\Users\bhrou\gi):00124                                                                       *    move.l  #0,(Camera_Y_pos).w
                      (C:\Users\bhrou\gi):00125                                                                       *    move.l  #0,(Camera_X_pos_copy).w
                      (C:\Users\bhrou\gi):00126                                                                       *    move.l  #0,(Camera_Y_pos_copy).w
                      (C:\Users\bhrou\gi):00127                                                                       *    cmpi.w  #1,(Player_mode).w  ; is this a Tails alone game?
                      (C:\Users\bhrou\gi):00128                                                                       *    bgt.s   +           ; if yes, branch
001A CE627F           (C:\Users\bhrou\gi):00129 [3]     44              ldu   #MainCharacter
                      (C:\Users\bhrou\gi):00130                         ;lda   #ObjID_SSSonic
                      (C:\Users\bhrou\gi):00131                         ;sta   id,u                                    *    move.b  #ObjID_SonicSS,(MainCharacter+id).w ; load Obj09 (special stage Sonic)
                      (C:\Users\bhrou\gi):00132                                                                       *    tst.w   (Player_mode).w     ; is this a Sonic and Tails game?
                      (C:\Users\bhrou\gi):00133                                                                       *    bne.s   ++          ; if not, branch
                      (C:\Users\bhrou\gi):00134                                                                       *+   move.b  #ObjID_TailsSS,(Sidekick+id).w ; load Obj10 (special stage Tails)
                      (C:\Users\bhrou\gi):00135                         ;ldu   #SpecialStageHUD
                      (C:\Users\bhrou\gi):00136                         ;lda   #ObjID_SSHUD
                      (C:\Users\bhrou\gi):00137                         ;sta   id,u                                    *+   move.b  #ObjID_SSHUD,(SpecialStageHUD+id).w ; load Obj5E (special stage HUD)
                      (C:\Users\bhrou\gi):00138                         ;ldu   #SpecialStageStartBanner
                      (C:\Users\bhrou\gi):00139                         ;lda   #ObjID_StartBanner
                      (C:\Users\bhrou\gi):00140                         ;sta   id,u                                    *    move.b  #ObjID_StartBanner,(SpecialStageStartBanner+id).w ; load Obj5F (special stage banner)
                      (C:\Users\bhrou\gi):00141                         ;ldu   #SpecialStageNumberOfRings
                      (C:\Users\bhrou\gi):00142                         ;lda   #ObjID_SSNumberOfRings
                      (C:\Users\bhrou\gi):00143                         ;sta   id,u                                    *    move.b  #ObjID_SSNumberOfRings,(SpecialStageNumberOfRings+id).w ; load Obj87 (special stage ring count)
001D 8600             (C:\Users\bhrou\gi):00144 [2]     46              lda   #$00
001F B77529           (C:\Users\bhrou\gi):00145 [5]     51              sta   SS_Offset_X                             *    move.w  #$80,(SS_Offset_X).w
0022 B7752A           (C:\Users\bhrou\gi):00146 [5]     56              sta   SS_Offset_Y                             *    move.w  #$36,(SS_Offset_Y).w
                      (C:\Users\bhrou\gi):00147                                                                       *    bsr.w   SSPlaneB_Background
                      (C:\Users\bhrou\gi):00148                                                                       *    bsr.w   SSDecompressPlayerArt
0025 BD01AE           (C:\Users\bhrou\gi):00149 [8]     64              jsr   SSInitPalAndData                        *    bsr.w   SSInitPalAndData
                      (C:\Users\bhrou\gi):00150                         
                      (C:\Users\bhrou\gi):00151                         ; Set Key Frame
                      (C:\Users\bhrou\gi):00152                         ; --------------------------------------------
                      (C:\Users\bhrou\gi):00153                         
0028 C602             (C:\Users\bhrou\gi):00154 [2]     66              ldb   #$02                     ; load page 2
002A F7E7E5           (C:\Users\bhrou\gi):00155 [5]     71              stb   $E7E5                    ; in data space ($A000-$DFFF)
002D 8E9861           (C:\Users\bhrou\gi):00156 [3]     74              ldx   #Bgi_specialStage
0030 BD7606           (C:\Users\bhrou\gi):00157 [8]     82              jsr   DrawFullscreenImage
                      (C:\Users\bhrou\gi):00158                         
                      (C:\Users\bhrou\gi):00159                  IFDEF TRACK_INTERLACED        
                      (C:\Users\bhrou\gi):00160                         ldx   #$3333
                      (C:\Users\bhrou\gi):00161                         jsr   ClearInterlacedEvenDataMemory
                      (C:\Users\bhrou\gi):00162                  ENDC
                      (C:\Users\bhrou\gi):00163                  
                      (C:\Users\bhrou\gi):00164                  IFDEF TRACK_HALFLINES        
                      (C:\Users\bhrou\gi):00165                         ldx   #$3333
                      (C:\Users\bhrou\gi):00166                         jsr   ClearInterlacedOddDataMemory
                      (C:\Users\bhrou\gi):00167                  ENDC
                      (C:\Users\bhrou\gi):00168                                     
0033 B6E7DD           (C:\Users\bhrou\gi):00169 [5]     87              lda   $E7DD                    ; set border color
0036 84F0             (C:\Users\bhrou\gi):00170 [2]     89              anda  #$F0
0038 8B03             (C:\Users\bhrou\gi):00171 [2]     91              adda  #$03                     ; color ref
003A B7E7DD           (C:\Users\bhrou\gi):00172 [5]     96              sta   $E7DD
003D 840F             (C:\Users\bhrou\gi):00173 [2]     98              anda  #$0F
003F 8B80             (C:\Users\bhrou\gi):00174 [2]     100             adda  #$80
0041 B775C1           (C:\Users\bhrou\gi):00175 [5]     105             sta   glb_screen_border_color+1    ; maj WaitVBL
0044 BD75A7           (C:\Users\bhrou\gi):00176 [8]     113             jsr   WaitVBL
0047 C603             (C:\Users\bhrou\gi):00177 [2]     115             ldb   #$03                     ; load page 3
0049 F7E7E5           (C:\Users\bhrou\gi):00178 [5]     120             stb   $E7E5                    ; data space ($A000-$DFFF)
004C 8E9861           (C:\Users\bhrou\gi):00179 [3]     123             ldx   #Bgi_specialStage
004F BD7606           (C:\Users\bhrou\gi):00180 [8]     131             jsr   DrawFullscreenImage
                      (C:\Users\bhrou\gi):00181                         
                      (C:\Users\bhrou\gi):00182                  IFDEF TRACK_INTERLACED        
                      (C:\Users\bhrou\gi):00183                         ldx   #$3333
                      (C:\Users\bhrou\gi):00184                         jsr   ClearInterlacedOddDataMemory
                      (C:\Users\bhrou\gi):00185                  ENDC
                      (C:\Users\bhrou\gi):00186                  
                      (C:\Users\bhrou\gi):00187                  IFDEF TRACK_HALFLINES        
                      (C:\Users\bhrou\gi):00188                         ldx   #$3333
                      (C:\Users\bhrou\gi):00189                         jsr   ClearInterlacedOddDataMemory
                      (C:\Users\bhrou\gi):00190                  ENDC    
                      (C:\Users\bhrou\gi):00191                                         
0052 8611             (C:\Users\bhrou\gi):00192 [2]     133             lda   #IdImg_tk_key_004        ; store original image id for access
0054 B77498           (C:\Users\bhrou\gi):00193 [5]     138             sta   SSTrack_mapping_frame    ; of perspective data
                      (C:\Users\bhrou\gi):00194                         
0057 CC9826           (C:\Users\bhrou\gi):00195 [3]     141             ldd   #Pal_HalfPipe
005A FD87EC           (C:\Users\bhrou\gi):00196 [6]     147             std   Cur_palette
005D 7F87EB           (C:\Users\bhrou\gi):00197 [7]     154             clr   Refresh_palette        
                      (C:\Users\bhrou\gi):00198                         
                      (C:\Users\bhrou\gi):00199                                                                       *    move.l  #$C0000,(SS_New_Speed_Factor).w
                      (C:\Users\bhrou\gi):00200                                                                       *    clr.w   (Ctrl_1_Logical).w
                      (C:\Users\bhrou\gi):00201                                                                       *    clr.w   (Ctrl_2_Logical).w
                      (C:\Users\bhrou\gi):00202                                                                       *
                      (C:\Users\bhrou\gi):00203                                                                       *-   move.b  #VintID_S2SS,(Vint_routine).w
0060 BD75A7           (C:\Users\bhrou\gi):00204 [8]     162             jsr   WaitVBL                                 *    bsr.w   WaitForVint
                      (C:\Users\bhrou\gi):00205                                                                       *    move.b  (SSTrack_drawing_index).w,d0
                      (C:\Users\bhrou\gi):00206                                                                       *    bne.s   -
                      (C:\Users\bhrou\gi):00207                                                                       *
                      (C:\Users\bhrou\gi):00208                         ; Init Track_Draw
                      (C:\Users\bhrou\gi):00209                         ; --------------------------------------------
0063 CE61A9           (C:\Users\bhrou\gi):00210 [3]     165             ldu   #HalfPipeEven
0066 8602             (C:\Users\bhrou\gi):00211 [2]     167             lda   #ObjID_HalfPipe                                                      
0068 A7C4             (C:\Users\bhrou\gi):00212 [4]     171             sta   id,u                              
006A BD393B           (C:\Users\bhrou\gi):00213 [8]     179             jsr   HalfPipe_Init
006D CE6214           (C:\Users\bhrou\gi):00214 [3]     182             ldu   #HalfPipeOdd
0070 8602             (C:\Users\bhrou\gi):00215 [2]     184             lda   #ObjID_HalfPipe                                                      
0072 A7C4             (C:\Users\bhrou\gi):00216 [4]     188             sta   id,u                              
0074 BD393B           (C:\Users\bhrou\gi):00217 [8]     196             jsr   HalfPipe_Init                           *    bsr.w   SSTrack_Draw           
                      (C:\Users\bhrou\gi):00218                                                                       *
                      (C:\Users\bhrou\gi):00219                                                                       *-   move.b  #VintID_S2SS,(Vint_routine).w
                      (C:\Users\bhrou\gi):00220                                                                       *    bsr.w   WaitForVint
                      (C:\Users\bhrou\gi):00221                                                                       *    bsr.w   SSTrack_Draw
                      (C:\Users\bhrou\gi):00222                                                                       *    bsr.w   SSLoadCurrentPerspective
                      (C:\Users\bhrou\gi):00223                                                                       *    bsr.w   SSObjectsManager
                      (C:\Users\bhrou\gi):00224                                                                       *    move.b  (SSTrack_duration_timer).w,d0
                      (C:\Users\bhrou\gi):00225                                                                       *    subq.w  #1,d0
                      (C:\Users\bhrou\gi):00226                                                                       *    bne.s   -
                      (C:\Users\bhrou\gi):00227                                                                       *
                      (C:\Users\bhrou\gi):00228                                                                       *    jsr (Obj5A_CreateRingsToGoText).l
                      (C:\Users\bhrou\gi):00229                                                                       *    bsr.w   SS_ScrollBG
                      (C:\Users\bhrou\gi):00230                                                                       *    jsr (RunObjects).l
                      (C:\Users\bhrou\gi):00231                                                                       *    jsr (BuildSprites).l
                      (C:\Users\bhrou\gi):00232                                                                       *    bsr.w   RunPLC_RAM
                      (C:\Users\bhrou\gi):00233                                                                       *    move.b  #VintID_CtrlDMA,(Vint_routine).w
                      (C:\Users\bhrou\gi):00234                                                                       *    bsr.w   WaitForVint
0077 8601             (C:\Users\bhrou\gi):00235 [2]     198             lda   #$01                     ; 1: play 60hz track at 50hz, 0: do not skip frames
0079 B7888F           (C:\Users\bhrou\gi):00236 [5]     203             sta   Smps.60HzData 
007C BD97B5           (C:\Users\bhrou\gi):00237 [8]     211             jsr   IrqSet50Hz
                      (C:\Users\bhrou\gi):00238                         
007F BD8BB8           (C:\Users\bhrou\gi):00239 [8]     219             jsr   YM2413_DrumModeOn
0082 8E984F           (C:\Users\bhrou\gi):00240 [3]     222             ldx   #Smps_SpecialStage                      *    move.w  #MusID_SpecStage,d0
0085 7E8C39           (C:\Users\bhrou\gi):00241 [4]     226             jmp   PlayMusic                               *    bsr.w   PlayMusic
                      (C:\Users\bhrou\gi):00242                                                                       *    move.w  (VDP_Reg1_val).w,d0
                      (C:\Users\bhrou\gi):00243                                                                       *    ori.b   #$40,d0
                      (C:\Users\bhrou\gi):00244                                                                       *    move.w  d0,(VDP_control_port).l
                      (C:\Users\bhrou\gi):00245                         ; Pal fade in                                 *    bsr.w   Pal_FadeFromWhite
                      (C:\Users\bhrou\gi):00246                                                                       *
                      (C:\Users\bhrou\gi):00247                                                                       *-   bsr.w   PauseGame
                      (C:\Users\bhrou\gi):00248                                                                       *    move.w  (Ctrl_1).w,(Ctrl_1_Logical).w
                      (C:\Users\bhrou\gi):00249                                                                       *    move.w  (Ctrl_2).w,(Ctrl_2_Logical).w
                      (C:\Users\bhrou\gi):00250                                                                       *    cmpi.b  #GameModeID_SpecialStage,(Game_Mode).w ; special stage mode?
                      (C:\Users\bhrou\gi):00251                                                                       *    bne.w   SpecialStage_Unpause        ; if not, branch
                      (C:\Users\bhrou\gi):00252                                                                       *    move.b  #VintID_S2SS,(Vint_routine).w
                      (C:\Users\bhrou\gi):00253                                                                       *    bsr.w   WaitForVint
                      (C:\Users\bhrou\gi):00254                                                                       *    bsr.w   SSTrack_Draw
                      (C:\Users\bhrou\gi):00255                                                                       *    bsr.w   SSSetGeometryOffsets
                      (C:\Users\bhrou\gi):00256                                                                       *    bsr.w   SSLoadCurrentPerspective
                      (C:\Users\bhrou\gi):00257                                                                       *    bsr.w   SSObjectsManager
                      (C:\Users\bhrou\gi):00258                                                                       *    bsr.w   SS_ScrollBG
                      (C:\Users\bhrou\gi):00259                                                                       *    jsr (RunObjects).l
                      (C:\Users\bhrou\gi):00260                                                                       *    jsr (BuildSprites).l
                      (C:\Users\bhrou\gi):00261                                                                       *    bsr.w   RunPLC_RAM
                      (C:\Users\bhrou\gi):00262                                                                       *    tst.b   (SpecialStage_Started).w
                      (C:\Users\bhrou\gi):00263                                                                       *    beq.s   -
                      (C:\Users\bhrou\gi):00264                                                                       *
                      (C:\Users\bhrou\gi):00265                                                                       *    moveq   #PLCID_SpecStageBombs,d0
                      (C:\Users\bhrou\gi):00266                                                                       *    bsr.w   LoadPLC
0088 39               (C:\Users\bhrou\gi):00267 [5]     231             rts                                           *
0089                  (C:\Users\bhrou\gi):00268                 SpecialStage_Main                                     *-   bsr.w   PauseGame
                      (C:\Users\bhrou\gi):00269                                                                       *    cmpi.b  #GameModeID_SpecialStage,(Game_Mode).w ; special stage mode?
                      (C:\Users\bhrou\gi):00270                                                                       *    bne.w   SpecialStage_Unpause        ; if not, branch
                      (C:\Users\bhrou\gi):00271                                                                       *    move.b  #VintID_S2SS,(Vint_routine).w
                      (C:\Users\bhrou\gi):00272                                                                       *    bsr.w   WaitForVint
                      (C:\Users\bhrou\gi):00273                                                                       
                      (C:\Users\bhrou\gi):00274                                                                       
                      (C:\Users\bhrou\gi):00275                                                                       
                      (C:\Users\bhrou\gi):00276                  IFDEF TRACK_INTERLACED                                                      
                      (C:\Users\bhrou\gi):00277                         lda   $E7E5
                      (C:\Users\bhrou\gi):00278                         cmpa  #$02
                      (C:\Users\bhrou\gi):00279                         beq   SSM_Odd
                      (C:\Users\bhrou\gi):00280                  ENDC
                      (C:\Users\bhrou\gi):00281                                     
0089 CE61A9           (C:\Users\bhrou\gi):00282 [3]     234             ldu   #HalfPipeEven              
008C BD397D           (C:\Users\bhrou\gi):00283 [8]     242             jsr   HalfPipe_Display
                      (C:\Users\bhrou\gi):00284                  
                      (C:\Users\bhrou\gi):00285                  IFDEF TRACK_INTERLACED        
                      (C:\Users\bhrou\gi):00286                         bra   SSM_Skip
008F                  (C:\Users\bhrou\gi):00287                 SSM_Odd
                      (C:\Users\bhrou\gi):00288                  ENDC
                      (C:\Users\bhrou\gi):00289                  
                      (C:\Users\bhrou\gi):00290                  IFDEF TRACK_HALFLINES  
                      (C:\Users\bhrou\gi):00291                  ELSE                     
008F CE6214           (C:\Users\bhrou\gi):00292 [3]     245             ldu   #HalfPipeOdd
0092 BD397D           (C:\Users\bhrou\gi):00293 [8]     253             jsr   HalfPipe_Display                        *    bsr.w   SSTrack_Draw
                      (C:\Users\bhrou\gi):00294                  ENDC   
0095                  (C:\Users\bhrou\gi):00295                 SSM_Skip              
0095 BD010B           (C:\Users\bhrou\gi):00296 [8]     261             jsr   SSSetGeometryOffsets                    *    bsr.w   SSSetGeometryOffsets
                      (C:\Users\bhrou\gi):00297                         ; moved to SSBomb                             *    bsr.w   SSLoadCurrentPerspective
0098 BD009C           (C:\Users\bhrou\gi):00298 [8]     269             jsr   SSObjectsManager                        *    bsr.w   SSObjectsManager
                      (C:\Users\bhrou\gi):00299                                                                       *    bsr.w   SS_ScrollBG
                      (C:\Users\bhrou\gi):00300                                                                       *    bsr.w   PalCycle_SS
                      (C:\Users\bhrou\gi):00301                                                                       *    tst.b   (SS_Pause_Only_flag).w
                      (C:\Users\bhrou\gi):00302                                                                       *    beq.s   +
                      (C:\Users\bhrou\gi):00303                                                                       *    move.w  (Ctrl_1).w,d0
                      (C:\Users\bhrou\gi):00304                                                                       *    andi.w  #(button_start_mask<<8)|button_start_mask,d0
                      (C:\Users\bhrou\gi):00305                                                                       *    move.w  d0,(Ctrl_1_Logical).w
                      (C:\Users\bhrou\gi):00306                                                                       *    move.w  (Ctrl_2).w,d0
                      (C:\Users\bhrou\gi):00307                                                                       *    andi.w  #(button_start_mask<<8)|button_start_mask,d0
                      (C:\Users\bhrou\gi):00308                                                                       *    move.w  d0,(Ctrl_2_Logical).w
                      (C:\Users\bhrou\gi):00309                                                                       *    bra.s   ++
                      (C:\Users\bhrou\gi):00310                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00311                                                                       *+
                      (C:\Users\bhrou\gi):00312                                                                       *    move.w  (Ctrl_1).w,(Ctrl_1_Logical).w
                      (C:\Users\bhrou\gi):00313                                                                       *    move.w  (Ctrl_2).w,(Ctrl_2_Logical).w
                      (C:\Users\bhrou\gi):00314                                                                       *+
                      (C:\Users\bhrou\gi):00315                                                                       *    jsr (RunObjects).l
                      (C:\Users\bhrou\gi):00316                                                                       *    tst.b   (SS_Check_Rings_flag).w
                      (C:\Users\bhrou\gi):00317                                                                       *    bne.s   +
                      (C:\Users\bhrou\gi):00318                                                                       *    jsr (BuildSprites).l
                      (C:\Users\bhrou\gi):00319                                                                       *    bsr.w   RunPLC_RAM
009B 39               (C:\Users\bhrou\gi):00320 [5]     274             rts                                           *    bra.s   -
                      (C:\Users\bhrou\gi):00321                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00322                                                                       *+
                      (C:\Users\bhrou\gi):00323                                                                       *    andi.b  #7,(Emerald_count).w
                      (C:\Users\bhrou\gi):00324                                                                       *    tst.b   (SS_2p_Flag).w
                      (C:\Users\bhrou\gi):00325                                                                       *    beq.s   +
                      (C:\Users\bhrou\gi):00326                                                                       *    lea (SS2p_RingBuffer).w,a0
                      (C:\Users\bhrou\gi):00327                                                                       *    move.w  (a0)+,d0
                      (C:\Users\bhrou\gi):00328                                                                       *    add.w   (a0)+,d0
                      (C:\Users\bhrou\gi):00329                                                                       *    add.w   (a0)+,d0
                      (C:\Users\bhrou\gi):00330                                                                       *    add.w   (a0)+,d0
                      (C:\Users\bhrou\gi):00331                                                                       *    add.w   (a0)+,d0
                      (C:\Users\bhrou\gi):00332                                                                       *    add.w   (a0)+,d0
                      (C:\Users\bhrou\gi):00333                                                                       *    bra.s   ++
                      (C:\Users\bhrou\gi):00334                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00335                                                                       *+
                      (C:\Users\bhrou\gi):00336                                                                       *    move.w  (Ring_count).w,d0
                      (C:\Users\bhrou\gi):00337                                                                       *    add.w   (Ring_count_2P).w,d0
                      (C:\Users\bhrou\gi):00338                                                                       *+
                      (C:\Users\bhrou\gi):00339                                                                       *    cmp.w   (SS_Perfect_rings_left).w,d0
                      (C:\Users\bhrou\gi):00340                                                                       *    bne.s   +
                      (C:\Users\bhrou\gi):00341                                                                       *    st.b    (Perfect_rings_flag).w
                      (C:\Users\bhrou\gi):00342                                                                       *+
                      (C:\Users\bhrou\gi):00343                                                                       *    bsr.w   Pal_FadeToWhite
                      (C:\Users\bhrou\gi):00344                                                                       *    tst.w   (Two_player_mode_copy).w
                      (C:\Users\bhrou\gi):00345                                                                       *    bne.w   loc_540C
                      (C:\Users\bhrou\gi):00346                                                                       *    move    #$2700,sr
                      (C:\Users\bhrou\gi):00347                                                                       *    lea (VDP_control_port).l,a6
                      (C:\Users\bhrou\gi):00348                                                                       *    move.w  #$8200|(VRAM_Menu_Plane_A_Name_Table/$400),(a6)     ; PNT A base: $C000
                      (C:\Users\bhrou\gi):00349                                                                       *    move.w  #$8400|(VRAM_Menu_Plane_B_Name_Table/$2000),(a6)    ; PNT B base: $E000
                      (C:\Users\bhrou\gi):00350                                                                       *    move.w  #$9001,(a6)     ; Scroll table size: 64x32
                      (C:\Users\bhrou\gi):00351                                                                       *    move.w  #$8C81,(a6)     ; H res 40 cells, no interlace, S/H disabled
                      (C:\Users\bhrou\gi):00352                                                                       *    bsr.w   ClearScreen
                      (C:\Users\bhrou\gi):00353                                                                       *    jsrto   (Hud_Base).l, JmpTo_Hud_Base
                      (C:\Users\bhrou\gi):00354                                                                       *    clr.w   (VDP_Command_Buffer).w
                      (C:\Users\bhrou\gi):00355                                                                       *    move.l  #VDP_Command_Buffer,(VDP_Command_Buffer_Slot).w
                      (C:\Users\bhrou\gi):00356                                                                       *    move    #$2300,sr
                      (C:\Users\bhrou\gi):00357                                                                       *    moveq   #PalID_Result,d0
                      (C:\Users\bhrou\gi):00358                                                                       *    bsr.w   PalLoad_Now
                      (C:\Users\bhrou\gi):00359                                                                       *    moveq   #PLCID_Std1,d0
                      (C:\Users\bhrou\gi):00360                                                                       *    bsr.w   LoadPLC2
                      (C:\Users\bhrou\gi):00361                                                                       *    move.l  #vdpComm(tiles_to_bytes(ArtTile_VRAM_Start+2),VRAM,WRITE),d0
                      (C:\Users\bhrou\gi):00362                                                                       *    lea SpecialStage_ResultsLetters(pc),a0
                      (C:\Users\bhrou\gi):00363                                                                       *    jsrto   (LoadTitleCardSS).l, JmpTo_LoadTitleCardSS
                      (C:\Users\bhrou\gi):00364                                                                       *    move.l  #vdpComm(tiles_to_bytes(ArtTile_ArtNem_SpecialStageResults),VRAM,WRITE),(VDP_control_port).l
                      (C:\Users\bhrou\gi):00365                                                                       *    lea (ArtNem_SpecialStageResults).l,a0
                      (C:\Users\bhrou\gi):00366                                                                       *    bsr.w   NemDec
                      (C:\Users\bhrou\gi):00367                                                                       *    move.w  (Player_mode).w,d0
                      (C:\Users\bhrou\gi):00368                                                                       *    beq.s   ++
                      (C:\Users\bhrou\gi):00369                                                                       *    subq.w  #1,d0
                      (C:\Users\bhrou\gi):00370                                                                       *    beq.s   +
                      (C:\Users\bhrou\gi):00371                                                                       *    clr.w   (Ring_count).w
                      (C:\Users\bhrou\gi):00372                                                                       *    bra.s   ++
                      (C:\Users\bhrou\gi):00373                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00374                                                                       *+
                      (C:\Users\bhrou\gi):00375                                                                       *    clr.w   (Ring_count_2P).w
                      (C:\Users\bhrou\gi):00376                                                                       *+
                      (C:\Users\bhrou\gi):00377                                                                       *    move.w  (Ring_count).w,(Bonus_Countdown_1).w
                      (C:\Users\bhrou\gi):00378                                                                       *    move.w  (Ring_count_2P).w,(Bonus_Countdown_2).w
                      (C:\Users\bhrou\gi):00379                                                                       *    clr.w   (Total_Bonus_Countdown).w
                      (C:\Users\bhrou\gi):00380                                                                       *    tst.b   (Got_Emerald).w
                      (C:\Users\bhrou\gi):00381                                                                       *    beq.s   +
                      (C:\Users\bhrou\gi):00382                                                                       *    move.w  #1000,(Total_Bonus_Countdown).w
                      (C:\Users\bhrou\gi):00383                                                                       *+
                      (C:\Users\bhrou\gi):00384                                                                       *    move.b  #1,(Update_HUD_score).w
                      (C:\Users\bhrou\gi):00385                                                                       *    move.b  #1,(Update_Bonus_score).w
                      (C:\Users\bhrou\gi):00386                                                                       *    move.w  #MusID_EndLevel,d0
                      (C:\Users\bhrou\gi):00387                                                                       *    jsr (PlaySound).l
                      (C:\Users\bhrou\gi):00388                                                                       *
                      (C:\Users\bhrou\gi):00389                                                                       *    clearRAM SS_Sprite_Table_Input,SS_Sprite_Table_Input_End
                      (C:\Users\bhrou\gi):00390                                                                       *    clearRAM SS_Object_RAM,SS_Object_RAM_End
                      (C:\Users\bhrou\gi):00391                                                                       *
                      (C:\Users\bhrou\gi):00392                                                                       *    move.b  #ObjID_SSResults,(SpecialStageResults+id).w ; load Obj6F (special stage results) at $FFFFB800
                      (C:\Users\bhrou\gi):00393                                                                       *-
                      (C:\Users\bhrou\gi):00394                                                                       *    move.b  #VintID_Level,(Vint_routine).w
                      (C:\Users\bhrou\gi):00395                                                                       *    bsr.w   WaitForVint
                      (C:\Users\bhrou\gi):00396                                                                       *    jsr (RunObjects).l
                      (C:\Users\bhrou\gi):00397                                                                       *    jsr (BuildSprites).l
                      (C:\Users\bhrou\gi):00398                                                                       *    bsr.w   RunPLC_RAM
                      (C:\Users\bhrou\gi):00399                                                                       *    tst.w   (Level_Inactive_flag).w
                      (C:\Users\bhrou\gi):00400                                                                       *    beq.s   -
                      (C:\Users\bhrou\gi):00401                                                                       *    tst.l   (Plc_Buffer).w
                      (C:\Users\bhrou\gi):00402                                                                       *    bne.s   -
                      (C:\Users\bhrou\gi):00403                                                                       *    move.w  #SndID_SpecStageEntry,d0
                      (C:\Users\bhrou\gi):00404                                                                       *    bsr.w   PlaySound
                      (C:\Users\bhrou\gi):00405                                                                       *    bsr.w   Pal_FadeToWhite
                      (C:\Users\bhrou\gi):00406                                                                       *    tst.w   (Two_player_mode_copy).w
                      (C:\Users\bhrou\gi):00407                                                                       *    bne.s   loc_540C
                      (C:\Users\bhrou\gi):00408                                                                       *    move.b  #GameModeID_Level,(Game_Mode).w ; => Level (Zone play mode)
                      (C:\Users\bhrou\gi):00409                                                                       *    rts
                      (C:\Users\bhrou\gi):00410                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00411                                                                       *
                      (C:\Users\bhrou\gi):00412                                                                       *loc_540C:
                      (C:\Users\bhrou\gi):00413                                                                       *    move.w  #VsRSID_SS,(Results_Screen_2P).w
                      (C:\Users\bhrou\gi):00414                                                                       *    move.b  #GameModeID_2PResults,(Game_Mode).w ; => TwoPlayerResults
                      (C:\Users\bhrou\gi):00415                                                                       *    rts
                      (C:\Users\bhrou\gi):00416                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00417                                                                       *
                      (C:\Users\bhrou\gi):00418                                                                       *; loc_541A:
                      (C:\Users\bhrou\gi):00419                                                                       *SpecialStage_Unpause:
                      (C:\Users\bhrou\gi):00420                                                                       *    move.b  #MusID_Unpause,(Music_to_play).w
                      (C:\Users\bhrou\gi):00421                                                                       *    move.b  #VintID_Level,(Vint_routine).w
                      (C:\Users\bhrou\gi):00422                                                                       *    bra.w   WaitForVint
                      (C:\Users\bhrou\gi):00423                 
                      (C:\Users\bhrou\gi):00424                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00425                                                                       *
                      (C:\Users\bhrou\gi):00426                                                                       *
                      (C:\Users\bhrou\gi):00427                                                                       *;sub_5534
009C                  (C:\Users\bhrou\gi):00428                 SSObjectsManager                                      *SSObjectsManager:
                      (C:\Users\bhrou\gi):00429                 
                      (C:\Users\bhrou\gi):00430                         ; Frame should be fully rendered
                      (C:\Users\bhrou\gi):00431                 
009C B67495           (C:\Users\bhrou\gi):00432 [5]     279             lda   SSTrack_drawing_index                   *    cmpi.b  #4,(SSTrack_drawing_index).w
009F 2669             (C:\Users\bhrou\gi):00433 [3]     282             bne   SSObjectsManager_return                 *    bne.w   return_55DC
                      (C:\Users\bhrou\gi):00434                 
                      (C:\Users\bhrou\gi):00435                         ; Run only each time a new segment is loaded
                      (C:\Users\bhrou\gi):00436                         ; testing LSB only is ok 
                      (C:\Users\bhrou\gi):00437                                                                       *    moveq   #0,d0
00A1 F67492           (C:\Users\bhrou\gi):00438 [5]     287             ldb   SpecialStage_CurrentSegment+1           *    move.b  (SpecialStage_CurrentSegment).w,d0
00A4 F174D4           (C:\Users\bhrou\gi):00439 [5]     292             cmpb  SpecialStage_LastSegment2+1             *    cmp.b   (SpecialStage_LastSegment2).w,d0
00A7 2761             (C:\Users\bhrou\gi):00440 [3]     295             beq   SSObjectsManager_return                 *    beq.w   return_55DC
00A9 F774D4           (C:\Users\bhrou\gi):00441 [5]     300             stb   SpecialStage_LastSegment2+1             *    move.b  d0,(SpecialStage_LastSegment2).w
                      (C:\Users\bhrou\gi):00442                         
                      (C:\Users\bhrou\gi):00443                         ; Get current segment length
                      (C:\Users\bhrou\gi):00444                                                                       *    movea.l (SS_CurrentLevelLayout).w,a1
00AC B6752C           (C:\Users\bhrou\gi):00445 [5]     305             lda   HalfPipe_Seq                            *    move.b  (a1,d0.w),d3
00AF 847F             (C:\Users\bhrou\gi):00446 [2]     307             anda  #$7F              ; ignore orientation  *    andi.w  #$7F,d3
00B1 48               (C:\Users\bhrou\gi):00447 [2]     309             asla
00B2 8E01D3           (C:\Users\bhrou\gi):00448 [3]     312             ldx   #Ani_SSTrack_Len                        *    lea (Ani_SSTrack_Len).l,a0
00B5 EC86             (C:\Users\bhrou\gi):00449 [6]     318             ldd   a,x                                     *    move.b  (a0,d3.w),d3
                      (C:\Users\bhrou\gi):00450                                                                       *    add.w   d3,d3
                      (C:\Users\bhrou\gi):00451                                                                       *    add.w   d3,d3
00B7 FD7531           (C:\Users\bhrou\gi):00452 [6]     324             std   SS_Seg_Len_x4
                      (C:\Users\bhrou\gi):00453                 
                      (C:\Users\bhrou\gi):00454                         ; Read object locations
                      (C:\Users\bhrou\gi):00455                         
00BA BE750C           (C:\Users\bhrou\gi):00456 [6]     330             ldx   SS_CurrentLevelObjectLocations          *    movea.l (SS_CurrentLevelObjectLocations).w,a0
00BD                  (C:\Users\bhrou\gi):00457                 SSObjectsManager_LoadObject                           *-
00BD BD019B           (C:\Users\bhrou\gi):00458 [8]     338             jsr   SSSingleObjLoad                         *    bsr.w   SSSingleObjLoad
00C0 2648             (C:\Users\bhrou\gi):00459 [3]     341             bne   SSObjectsManager_return                 *    bne.s   return_55DC
                      (C:\Users\bhrou\gi):00460                                                                       *    moveq   #0,d0
00C2 E680             (C:\Users\bhrou\gi):00461 [6]     347             ldb   ,x+                                     *    move.b  (a0)+,d0
00C4 2B2A             (C:\Users\bhrou\gi):00462 [3]     350             bmi   SSObjectsManager_LoadSegmentType        *    bmi.s   ++
00C6 1F98             (C:\Users\bhrou\gi):00463 [6]     356             tfr   b,a                                     *    move.b  d0,d1
00C8 8440             (C:\Users\bhrou\gi):00464 [2]     358             anda  #$40                                    *    andi.b  #$40,d1
00CA 261E             (C:\Users\bhrou\gi):00465 [3]     361             bne   SSObjectsManager_Bomb                   *    bne.s   +
                      (C:\Users\bhrou\gi):00466                                                                       *    addq.w  #1,(SS_Perfect_rings_left).w
00CC 8601             (C:\Users\bhrou\gi):00467 [2]     363             lda   #$01
00CE A741             (C:\Users\bhrou\gi):00468 [5]     368     @a      sta   subtype,u                                
00D0 8601             (C:\Users\bhrou\gi):00469 [2]     370             lda   #ObjID_SSBomb
00D2 A7C4             (C:\Users\bhrou\gi):00470 [4]     374             sta   id,u                                    *    move.b  #ObjID_SSRing,id(a1)
00D4 8600             (C:\Users\bhrou\gi):00471 [2]     376             lda   #$00        
00D6 58               (C:\Users\bhrou\gi):00472 [2]     378             aslb                                          *    add.w   d0,d0
00D7 49               (C:\Users\bhrou\gi):00473 [2]     380             rola
00D8 58               (C:\Users\bhrou\gi):00474 [2]     382             aslb                                          *    add.w   d0,d0
00D9 49               (C:\Users\bhrou\gi):00475 [2]     384             rola
00DA F37531           (C:\Users\bhrou\gi):00476 [7]     391             addd  SS_Seg_Len_x4                           *    add.w   d3,d0
00DD EDC85D           (C:\Users\bhrou\gi):00477 [6]     397             std   ss_z_pos,u                              *    move.w  d0,objoff_30(a1)
00E0 EDC866           (C:\Users\bhrou\gi):00478 [6]     403             std   ss_z_pos_img_start,u
00E3 A680             (C:\Users\bhrou\gi):00479 [6]     409             lda   ,x+
00E5 A7C868           (C:\Users\bhrou\gi):00480 [5]     414             sta   angle,u                                 *    move.b  (a0)+,angle(a1)
00E8 20D3             (C:\Users\bhrou\gi):00481 [3]     417             bra   SSObjectsManager_LoadObject             *    bra.s   -
                      (C:\Users\bhrou\gi):00482                                                                       *; ===========================================================================
00EA                  (C:\Users\bhrou\gi):00483                 SSObjectsManager_Bomb                                 *+
00EA C43F             (C:\Users\bhrou\gi):00484 [2]     419             andb  #$3F                                    *    andi.w  #$3F,d0
00EC 8600             (C:\Users\bhrou\gi):00485 [2]     421             lda   #$00
00EE 20DE             (C:\Users\bhrou\gi):00486 [3]     424             bra   @a                                                     
                      (C:\Users\bhrou\gi):00487                                                                       *    move.b  #ObjID_SSBomb,id(a1)
                      (C:\Users\bhrou\gi):00488                                                                       *    add.w   d0,d0
                      (C:\Users\bhrou\gi):00489                                                                       *    add.w   d0,d0
                      (C:\Users\bhrou\gi):00490                                                                       *    add.w   d3,d0
                      (C:\Users\bhrou\gi):00491                                                                       *    move.w  d0,objoff_30(a1)
                      (C:\Users\bhrou\gi):00492                                                                       *    move.b  (a0)+,angle(a1)
                      (C:\Users\bhrou\gi):00493                                                                       *    bra.s   -
                      (C:\Users\bhrou\gi):00494                                                                       *; ===========================================================================
00F0                  (C:\Users\bhrou\gi):00495                 SSObjectsManager_LoadSegmentType                      *+
00F0 BF750C           (C:\Users\bhrou\gi):00496 [6]     430             stx   SS_CurrentLevelObjectLocations          *    move.l  a0,(SS_CurrentLevelObjectLocations).w
00F3 5C               (C:\Users\bhrou\gi):00497 [2]     432             incb                                          *    addq.b  #1,d0
00F4 2714             (C:\Users\bhrou\gi):00498 [3]     435             beq   SSObjectsManager_return ;$FF            *    beq.s   return_55DC
00F6 5C               (C:\Users\bhrou\gi):00499 [2]     437             incb                                          *    addq.b  #1,d0
00F7 2711             (C:\Users\bhrou\gi):00500 [3]     440             beq   SSObjectsManager_LoadCheckpoint ;$FE    *    beq.s   ++
00F9 5C               (C:\Users\bhrou\gi):00501 [2]     442             incb                                          *    addq.b  #1,d0
00FA 270B             (C:\Users\bhrou\gi):00502 [3]     445             beq   SSObjectsManager_Emerald                *    beq.s   +
00FC CCFF00           (C:\Users\bhrou\gi):00503 [3]     448             ldd   #$FF00
00FF B77519           (C:\Users\bhrou\gi):00504 [5]     453             sta   SS_NoCheckpoint_flag                    *    st.b    (SS_NoCheckpoint_flag).w
0102 F77522           (C:\Users\bhrou\gi):00505 [5]     458             stb   SS_NoCheckpointMsg_flag                 *    sf.b    (SS_NoCheckpointMsg_flag).w
0105 2003             (C:\Users\bhrou\gi):00506 [3]     461             bra   SSObjectsManager_LoadCheckpoint         *    bra.s   ++
                      (C:\Users\bhrou\gi):00507                                                                       *; ===========================================================================
0107                  (C:\Users\bhrou\gi):00508                 SSObjectsManager_Emerald                              *+
                      (C:\Users\bhrou\gi):00509                                                                       *    tst.b   (SS_2p_Flag).w
                      (C:\Users\bhrou\gi):00510                                                                       *    bne.s   +
                      (C:\Users\bhrou\gi):00511                         ;lda   #ObjID_SSEmerald                        *    move.b  #ObjID_SSEmerald,id(a1)
                      (C:\Users\bhrou\gi):00512                         ;sta   id,u
0107 20FE             (C:\Users\bhrou\gi):00513 [3]     464             bra   *
0109 39               (C:\Users\bhrou\gi):00514 [5]     469             rts                                           *    rts
                      (C:\Users\bhrou\gi):00515                                                                       *; ===========================================================================
010A                  (C:\Users\bhrou\gi):00516                 SSObjectsManager_LoadCheckpoint                       *+
                      (C:\Users\bhrou\gi):00517                         ;lda   #ObjID_SSMessage                        *    move.b  #ObjID_SSMessage,id(a1)
                      (C:\Users\bhrou\gi):00518                         ;sta   id,u                                                      
                      (C:\Users\bhrou\gi):00519                                                                       *
010A                  (C:\Users\bhrou\gi):00520                 SSObjectsManager_return                               *return_55DC:
010A 39               (C:\Users\bhrou\gi):00521 [5]     474             rts                                           *    rts
                      (C:\Users\bhrou\gi):00522                                                                       *; End of function SSObjectsManager
                      (C:\Users\bhrou\gi):00523                                                                       
                      (C:\Users\bhrou\gi):00524                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00525                                                                       *
                      (C:\Users\bhrou\gi):00526                                                                       *;sub_7650
010B                  (C:\Users\bhrou\gi):00527                 SSSetGeometryOffsets                                  *SSSetGeometryOffsets:
010B B67495           (C:\Users\bhrou\gi):00528 [5]     479             lda   SSTrack_drawing_index                   *    move.b  (SSTrack_drawing_index).w,d0                    ; Get drawing position
                      (C:\Users\bhrou\gi):00529                         ;cmpa  SS_player_anim_frame_timer              *    cmp.b   (SS_player_anim_frame_timer).w,d0               ; Compare to player frame duration
010E 2701             (C:\Users\bhrou\gi):00530 [3]     482             beq   @a                                      *    beq.s   +                                               ; If both are equal, branch
0110 39               (C:\Users\bhrou\gi):00531 [5]     487             rts                                           *    rts
                      (C:\Users\bhrou\gi):00532                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00533                                                                       *+
                      (C:\Users\bhrou\gi):00534                                                                       *    moveq   #0,d0
0111 B67498           (C:\Users\bhrou\gi):00535 [5]     492     @a      lda   SSTrack_mapping_frame                   *    move.b  (SSTrack_mapping_frame).w,d0                    ; Get current track mapping frame
0114 48               (C:\Users\bhrou\gi):00536 [2]     494             asla                                          *    add.w   d0,d0                                           ; Convert to index
0115 8E012B           (C:\Users\bhrou\gi):00537 [3]     497             ldx   #SSCurveOffsets
0118 3086             (C:\Users\bhrou\gi):00538 [5]     502             leax  a,x                                     *    lea SSCurveOffsets(pc,d0.w),a2                          ; Load current curve offsets into a2
011A A680             (C:\Users\bhrou\gi):00539 [6]     508             lda   ,x+                                     *    move.b  (a2)+,d0                                        ; Get x offset
011C 7D7496           (C:\Users\bhrou\gi):00540 [7]     515             tst   SSTrack_Orientation                     *    tst.b   (SSTrack_Orientation).w                         ; Is track flipped?
011F 2701             (C:\Users\bhrou\gi):00541 [3]     518             beq   @b                                      *    beq.s   +                                               ; Branch if not
0121 40               (C:\Users\bhrou\gi):00542 [2]     520             nega                                          *    neg.b   d0                                              ; Change sign of offset
0122                  (C:\Users\bhrou\gi):00543                 @b                                                    *+
                      (C:\Users\bhrou\gi):00544                                                                       *    ext.w   d0                                              ; Extend to word
                      (C:\Users\bhrou\gi):00545                                                                       *    addi.w  #$80,d0                                         ; Add 128 (why?)
0122 B77529           (C:\Users\bhrou\gi):00546 [5]     525             sta   SS_Offset_X                             *    move.w  d0,(SS_Offset_X).w                              ; Set X geometry offset
0125 A684             (C:\Users\bhrou\gi):00547 [4]     529             lda   ,x                                      *    move.b  (a2),d0                                         ; Get y offset
                      (C:\Users\bhrou\gi):00548                                                                       *    ext.w   d0                                              ; Extend to word
                      (C:\Users\bhrou\gi):00549                                                                       *    addi.w  #$36,d0                                         ; Add $36 (why?)
0127 B7752A           (C:\Users\bhrou\gi):00550 [5]     534             sta   SS_Offset_Y                             *    move.w  d0,(SS_Offset_Y).w                              ; Set Y geometry offset
012A 39               (C:\Users\bhrou\gi):00551 [5]     539             rts                                           *    rts
                      (C:\Users\bhrou\gi):00552                                                                       *; End of function SSSetGeometryOffsets
                      (C:\Users\bhrou\gi):00553                                                                       *
                      (C:\Users\bhrou\gi):00554                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00555                                                                       *; Position offsets to sort-of rotate the plane sonic/tails are in
                      (C:\Users\bhrou\gi):00556                                                                       *; when the special stage track is curving, so they follow it better.
                      (C:\Users\bhrou\gi):00557                                                                       *; Each word seems to be (x_offset, y_offset)
                      (C:\Users\bhrou\gi):00558                                                                       *; See also Ani_SpecialStageTrack.
012B                  (C:\Users\bhrou\gi):00559                 SSCurveOffsets                                        *SSCurveOffsets: ; word_768A:
012B 1300130013001300 (C:\Users\bhrou\gi):00560                         fcb   $13,0,$13,0,$13,0,$13,0                 *    dc.b $13,   0,   $13,   0,   $13,   0,   $13,   0   ; $00
0133 09F600E400E400E0 (C:\Users\bhrou\gi):00561                         fcb   9,-$A,0,-$1C,0,-$1C,0,-$20              *    dc.b   9, -$A,     0,-$1C,     0,-$1C,     0,-$20   ; $04
013B 00DC00D600F00006 (C:\Users\bhrou\gi):00562                         fcb   0,-$24,0,-$2A,0,-$10,0,6                *    dc.b   0,-$24,     0,-$2A,     0,-$10,     0,   6   ; $08
0143 000E001000120012 (C:\Users\bhrou\gi):00563                         fcb   0,$E,0,$10,0,$12,0,$12                  *    dc.b   0,  $E,     0, $10,     0, $12,     0, $12   ; $0C
014B 0912             (C:\Users\bhrou\gi):00564                         fcb   9,$12                                   *    dc.b   9, $12                                       ; $10; upward curve
014D 0000000000000000 (C:\Users\bhrou\gi):00565                         fcb   0,0,0,0,0,0,0,0                         *    dc.b   0,   0,     0,   0,     0,   0,     0,   0   ; $11; straight
0155 1300130013001300 (C:\Users\bhrou\gi):00566                         fcb   $13,0,$13,0,$13,0,$13,0                 *    dc.b $13,   0,   $13,   0,   $13,   0,   $13,   0   ; $15
015D 0B0C000C0012000A (C:\Users\bhrou\gi):00567                         fcb   $B,$C,0,$C,0,$12,0,$A                   *    dc.b  $B,  $C,     0,  $C,     0, $12,     0,  $A   ; $19
0165 00080002001000E0 (C:\Users\bhrou\gi):00568                         fcb   0,8,0,2,0,$10,0,-$20                    *    dc.b   0,   8,     0,   2,     0, $10,     0,-$20   ; $1D
016D 00E100E200E500E8 (C:\Users\bhrou\gi):00569                         fcb   0,-$1F,0,-$1E,0,-$1B,0,-$18             *    dc.b   0,-$1F,     0,-$1E,     0,-$1B,     0,-$18   ; $21
0175 00F2             (C:\Users\bhrou\gi):00570                         fcb   0,-$E                                   *    dc.b   0, -$E                                       ; $25; downward curve
0177 1300130013001300 (C:\Users\bhrou\gi):00571                         fcb   $13,0,$13,0,$13,0,$13,0                 *    dc.b $13,   0,   $13,   0,   $13,   0,   $13,   0   ; $26
017F 13001300         (C:\Users\bhrou\gi):00572                         fcb   $13,0,$13,0                             *    dc.b $13,   0,   $13,   0                           ; $2B; turning
0183 1300130013001300 (C:\Users\bhrou\gi):00573                         fcb   $13,0,$13,0,$13,0,$13,0                 *    dc.b $13,   0,   $13,   0,   $13,   0,   $13,   0   ; $2C
018B 0B00             (C:\Users\bhrou\gi):00574                         fcb   $B,0                                    *    dc.b  $B,   0                                       ; $30; exit turn
018D 0000000000000000 (C:\Users\bhrou\gi):00575                         fcb   0,0,0,0,0,0,0,0                         *    dc.b   0,   0,     0,   0,     0,   0,     0,   0   ; $31
0195 000000000300     (C:\Users\bhrou\gi):00576                         fcb   0,0,0,0,3,0                             *    dc.b   0,   0,     0,   0,     3,   0               ; $35; straight                                                                    
                      (C:\Users\bhrou\gi):00577                                                                       
                      (C:\Users\bhrou\gi):00578                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00579                          
                      (C:\Users\bhrou\gi):00580                 ; search for a free object slot
                      (C:\Users\bhrou\gi):00581                 ; OUT
                      (C:\Users\bhrou\gi):00582                 ; [u]: object slot
                      (C:\Users\bhrou\gi):00583                 ; [cc|z]: 1=found 0=not found                                                       
                      (C:\Users\bhrou\gi):00584                                                                       *; sub_6F8E:
019B                  (C:\Users\bhrou\gi):00585                 SSSingleObjLoad                                       *SSSingleObjLoad:
019B CE6355           (C:\Users\bhrou\gi):00586 [3]     542             ldu   #Dynamic_Object_RAM                     *    lea (SS_Dynamic_Object_RAM).w,a1
                      (C:\Users\bhrou\gi):00587                                                                       *    move.w  #(SS_Dynamic_Object_RAM_End-SS_Dynamic_Object_RAM)/object_size-1,d5
                      (C:\Users\bhrou\gi):00588                                                                       *
019E 6DC4             (C:\Users\bhrou\gi):00589 [6]     548     @b      tst   id,u                                    *-   tst.b   id(a1)
01A0 270B             (C:\Users\bhrou\gi):00590 [3]     551             beq   @a                                      *    beq.s   +   ; rts
01A2 33C86B           (C:\Users\bhrou\gi):00591 [5]     556             leau  next_object,u                           *    lea next_object(a1),a1 ; a1=object
01A5 1183740D         (C:\Users\bhrou\gi):00592 [5]     561             cmpu  #Dynamic_Object_RAM_End                 *    dbf d5,-
01A9 26F3             (C:\Users\bhrou\gi):00593 [3]     564             bne   @b                                      *+
01AB 86FF             (C:\Users\bhrou\gi):00594 [2]     566             lda   #$FF
01AD 39               (C:\Users\bhrou\gi):00595 [5]     571     @a      rts                                           *    rts
                      (C:\Users\bhrou\gi):00596                                                                       *; End of function sub_6F8E                                                                                                            
                      (C:\Users\bhrou\gi):00597                 
                      (C:\Users\bhrou\gi):00598                                                                       *;sub_77A2
01AE                  (C:\Users\bhrou\gi):00599                 SSInitPalAndData                                      *SSInitPalAndData:
                      (C:\Users\bhrou\gi):00600                                                                       *    clr.b   (Current_Special_Act).w
                      (C:\Users\bhrou\gi):00601                         ; moved to HalfPipe_Init                      *    move.b  #-1,(SpecialStage_LastSegment2).w
01AE CC0000           (C:\Users\bhrou\gi):00602 [3]     574             ldd   #0
01B1 FD7479           (C:\Users\bhrou\gi):00603 [6]     580             std   Ring_count                              *    move.w  #0,(Ring_count).w
                      (C:\Users\bhrou\gi):00604                                                                       *    move.w  #0,(Ring_count_2P).w
                      (C:\Users\bhrou\gi):00605                                                                       *    move.b  #0,(Perfect_rings_flag).w
                      (C:\Users\bhrou\gi):00606                                                                       *    move.b  #0,(Got_Emerald).w
                      (C:\Users\bhrou\gi):00607                                                                       *    move.b  #4,(SS_Star_color_2).w
                      (C:\Users\bhrou\gi):00608                                                                       *    lea (SS2p_RingBuffer).w,a2
                      (C:\Users\bhrou\gi):00609                                                                       *    moveq   #0,d0
                      (C:\Users\bhrou\gi):00610                                                                       *    move.w  d0,(a2)+
                      (C:\Users\bhrou\gi):00611                                                                       *    move.w  d0,(a2)+
                      (C:\Users\bhrou\gi):00612                                                                       *    move.w  d0,(a2)+
                      (C:\Users\bhrou\gi):00613                                                                       *    move.w  d0,(a2)+
                      (C:\Users\bhrou\gi):00614                                                                       *    move.w  d0,(a2)+
                      (C:\Users\bhrou\gi):00615                                                                       *    move.w  d0,(a2)+
                      (C:\Users\bhrou\gi):00616                                                                       *    moveq   #PalID_SS,d0
                      (C:\Users\bhrou\gi):00617                                                                       *    bsr.w   PalLoad_ForFade
                      (C:\Users\bhrou\gi):00618                                                                       *    lea_    SpecialStage_Palettes,a1
                      (C:\Users\bhrou\gi):00619                                                                       *    moveq   #0,d0
01B4 F67478           (C:\Users\bhrou\gi):00620 [5]     585             ldb   Current_Special_Stage                   *    move.b  (Current_Special_Stage).w,d0
01B7 58               (C:\Users\bhrou\gi):00621 [2]     587             aslb                                          *    add.w   d0,d0
                      (C:\Users\bhrou\gi):00622                                                                       *    move.w  d0,d1
                      (C:\Users\bhrou\gi):00623                                                                       *    tst.b   (SS_2p_Flag).w
                      (C:\Users\bhrou\gi):00624                                                                       *    beq.s   +
                      (C:\Users\bhrou\gi):00625                                                                       *    cmpi.b  #4,d0
                      (C:\Users\bhrou\gi):00626                                                                       *    blo.s   +
                      (C:\Users\bhrou\gi):00627                                                                       *    addi_.w #6,d0
                      (C:\Users\bhrou\gi):00628                                                                       *+
                      (C:\Users\bhrou\gi):00629                                                                       *    move.w  (a1,d0.w),d0
                      (C:\Users\bhrou\gi):00630                                                                       *    bsr.w   PalLoad_ForFade
01B8 8E035F           (C:\Users\bhrou\gi):00631 [3]     590             ldx   #SpecialObjectLocations                 *    lea (SSRAM_MiscKoz_SpecialObjectLocations).w,a0
01BB 3A               (C:\Users\bhrou\gi):00632 [3]     593             abx                                           *    adda.w  (a0,d1.w),a0
01BC EC84             (C:\Users\bhrou\gi):00633 [5]     598             ldd   ,x
01BE 308B             (C:\Users\bhrou\gi):00634 [8]     606             leax  d,x
01C0 BF750C           (C:\Users\bhrou\gi):00635 [6]     612             stx   SS_CurrentLevelObjectLocations          *    move.l  a0,(SS_CurrentLevelObjectLocations).w
                      (C:\Users\bhrou\gi):00636                         
01C3 F67478           (C:\Users\bhrou\gi):00637 [5]     617             ldb   Current_Special_Stage
01C6 58               (C:\Users\bhrou\gi):00638 [2]     619             aslb        
01C7 8E01DF           (C:\Users\bhrou\gi):00639 [3]     622             ldx   #SpecialLevelLayout                     *    lea (SSRAM_MiscNem_SpecialLevelLayout).w,a0
01CA 3A               (C:\Users\bhrou\gi):00640 [3]     625             abx                                           *    adda.w  (a0,d1.w),a0
01CB EC84             (C:\Users\bhrou\gi):00641 [5]     630             ldd   ,x
01CD 308B             (C:\Users\bhrou\gi):00642 [8]     638             leax  d,x        
01CF BF7512           (C:\Users\bhrou\gi):00643 [6]     644             stx   SS_CurrentLevelLayout                   *    move.l  a0,(SS_CurrentLevelLayout).w
01D2 39               (C:\Users\bhrou\gi):00644 [5]     649             rts                                           *    rts
                      (C:\Users\bhrou\gi):00645                                                                       *; End of function SSInitPalAndData     
                      (C:\Users\bhrou\gi):00646                 
01D3                  (C:\Users\bhrou\gi):00647                 Ani_SSTrack_Len
                      (C:\Users\bhrou\gi):00648                 ;        fdb (24*4)+HalfPipe_Img_z_depth ; 0
                      (C:\Users\bhrou\gi):00649                 ;        fdb (24*4)+HalfPipe_Img_z_depth ; 1
                      (C:\Users\bhrou\gi):00650                 ;        fdb (12*4)+HalfPipe_Img_z_depth ; 2
                      (C:\Users\bhrou\gi):00651                 ;        fdb (16*4)+HalfPipe_Img_z_depth ; 3
                      (C:\Users\bhrou\gi):00652                 ;        fdb (11*4)+HalfPipe_Img_z_depth ; 4
                      (C:\Users\bhrou\gi):00653                 ;        fdb 0    ; 5
01D3 0060             (C:\Users\bhrou\gi):00654                          fdb (24*4) ; 0
01D5 0060             (C:\Users\bhrou\gi):00655                          fdb (24*4) ; 1
01D7 0030             (C:\Users\bhrou\gi):00656                          fdb (12*4) ; 2
01D9 0040             (C:\Users\bhrou\gi):00657                          fdb (16*4) ; 3
01DB 002C             (C:\Users\bhrou\gi):00658                          fdb (11*4) ; 4
01DD 0000             (C:\Users\bhrou\gi):00659                          fdb 0    ; 5
                      (C:\Users\bhrou\gi):00660                 
01DF                  (C:\Users\bhrou\gi):00661                 SpecialLevelLayout
01DF 000E003C00680094 (C:\Users\bhrou\gi):00662                         INCLUDEBIN "./game-mode/special-stage/Special stage level layouts.bin"
     00CC00F801360303
     0304020303030303
     0304020303030304
     0002030304810203
     0304020304020384
     0203040283840203
     0303030003030304
     0203030400800000
     0203030303030303
     0304010203830303
     0304020304010080
     8102030303030303
     0383838402030303
     0303030303048180
     8102030303048000
     0180008102030303
     0384808101800002
     0303030303030303
     0304800203040102
     0304020303030303
     0401028384020304
     0283840102030303
     0304028384800283
     8401028384020303
     0303030303038384
     0203030303030401
     8081020303030303
     0303048001020303
     0383840081018002
     0303030303030303
     0303030402030303
     0304818181020303
     0304020303030384
     0000020303030304
     0081020303030402
     0304020304020304
     0283840203040283
     8402030303030303
     0304020303030481
     0080000203838400
     0203030383848102
     0303030480020303
     0303030401010101
     0101018080800203
     0303030303000000
     0303030480020303
     0303030401010101
                      (C:\Users\bhrou\gi):00663                         
                      (C:\Users\bhrou\gi):00664                         ; -------------------------------------------------------------------------------------------------------------        
                      (C:\Users\bhrou\gi):00665                         ; Level Layout
                      (C:\Users\bhrou\gi):00666                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00667                         ;
                      (C:\Users\bhrou\gi):00668                         ; Index (words)
                      (C:\Users\bhrou\gi):00669                         ; -----
                      (C:\Users\bhrou\gi):00670                         ; Offset to each level data (7 word offsets for the 7 levels)
                      (C:\Users\bhrou\gi):00671                         ;
                      (C:\Users\bhrou\gi):00672                         ; Orientation/Track (bytes)
                      (C:\Users\bhrou\gi):00673                         ; -----------------
                      (C:\Users\bhrou\gi):00674                         ; $0x Towards right
                      (C:\Users\bhrou\gi):00675                         ; $8x Towards left
                      (C:\Users\bhrou\gi):00676                         ; $x0 Turn the rise
                      (C:\Users\bhrou\gi):00677                         ; $x1 Turn then drop
                      (C:\Users\bhrou\gi):00678                         ; $x2 Turn then straight
                      (C:\Users\bhrou\gi):00679                         ; $x3 straight
                      (C:\Users\bhrou\gi):00680                         ; $x4 Straight then turn       
                      (C:\Users\bhrou\gi):00681                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00682                         
035F                  (C:\Users\bhrou\gi):00683                 SpecialObjectLocations
035F 000E01F704CA08CE (C:\Users\bhrou\gi):00684                         INCLUDEBIN "./game-mode/special-stage/Special stage object location lists.bin"
     0C190FC4150DFFFF
     FFFFFF0040014802
     4803480440013802
     380338FF00100118
     0210031804100518
     06100718FF007001
     6802700368047005
     6806700768FF0010
     0118021003180410
     051806100718FF00
     4001480248034804
     4805480648074001
     3802380338043805
     380638FFFC006001
     6802600368046005
     6806600768FFFEFF
     FF084009480A480B
     480C4009380A380B
     38FFFF0060016802
     6003680460056806
     600768FF00600168
     0260036804600568
     06600768FF044005
     4806480748084005
     3806380738FF4010
     4108411842104070
     416841784270FF00
     5000400030014801
     380240FF00600050
     0040015801480250
     0870086008500968
     09580A6010601050
     1040115811481250
     FF00400030002001
     3801280230083008
     200810092809180A
     20FC005000400030
     014801380240FF00
     5000400030014801
     380240FFFEFFFF07
     60086809680A680B
     60085809580A58FF
     FF00600168026803
     6804600158025803
     58440045F8450846
     0044804578458846
     80084009380A380B
     380C4009480A480B
     48FF072008180918
     0A180B2008280928
     0A28FFFF08400938
     0A380B380C400948
     0A480B48FF077008
     7809780A780B7008
     6809680A68FFFF00
     7001780278037804
     7001680268036808
     4009380A380B380C
     4009480A480B48FC
     FF00400138023803
     3804400148024803
     48FFFFFDFFFFFFFF
     FFFFFFFF00400138
     0238033804380538
     0638073801480248
     0348044805480648
     07480840FF034004
     4804380540FF0040
     0138023803380438
     0540014802480348
     0448086009580A58
     0B580C580D600968
     0A680B680C68FF08
     6009580A580B580C
     580D6009680A680B
     680C68FF08100908
     0A080B080C080D10
     09180A180B180C18
     FC087009680A680B
     680C680D7009780A
     780B780C78FF0870
     09680A680B680C68
     0D7009780A780B78
     0C78FFFFFEFFFF40
     4041384148424004
     4005380548064008
     10090809180A1008
     70096809780A700C
     A00D980DA80EA00C
     E00DD80DE80EE0FF
     0440053805480640
     0810090809180A10
     0870096809780A70
     0CA00D980DA80EA0
     0CE00DD80DE80EE0
     FF04400538054806
     400810090809180A
     100870096809780A
     700CA00D980DA80E
     A00CE00DD80DE80E
     E0FF004001380148
     0240481049084918
     4A10487049684978
     4A70FF4040413841
     484240FF00700168
     0178027004700568
     0578067008600958
     09680A600C500D48
     0D580E5010401138
     1148124014301528
     15381630FF002001
     1801280220043005
     2805380630084009
     3809480A404A104B
     084B184C104A704B
     684B784C70FF4810
     490849184A104870
     496849784A700C70
     0D680D780E70FC40
     4041384148424004
     4005380548064048
     10490849184A1048
     70496849784A700C
     100D080D180E10FF
     4040413841484240
     FFFEFFFF00480038
     0140044804380540
     084808380940FF00
     4800380140044804
     3805400848083809
     4042104308431844
     1042704368437844
     70FF404041384148
     4240FF0048003801
     4004580448055008
     68085809600C780C
     680D701068105811
     68145814481550FF
     4040413A41464240
     4840493A49464A40
     5040513A51465240
     FF4040413A414642
     400C880C780C680C
     580D800D700D600E
     780E680F70FC4040
     413A414642400C08
     0C180C280C380D10
     0D200D300E180E28
     0F20FFFF00400138
     0148023802480338
     0348043804480538
     05480640FFFFFDFF
     FFFFFFFFFFFF0040
     0138014802400840
     0A380A480B40FF00
     4001380148024048
     3048504840FF0040
     0138014802404830
     48504840FF004001
     3801480240483048
     504840FF00400138
     01480240FF002001
     1801280210022002
     3003180328042048
     1048204830FF0060
     0158016802500260
     0270035803680460
     487048604850FF40
     5041484158045405
     58065C0760086409
     68FF403041384128
     042C052806240720
     081C0918FF405041
     4841580558065C07
     60086409680A6C0B
     700C700D700E700F
     6C10681164126013
     5C1458FF40304128
     4138052806240720
     081C09180A140B10
     0C100D100E100F14
     1018111C12201324
     1428FCFF40C041D0
     42E043F044004510
     4620473048404950
     4A604B704C804D90
     4EA04FB0FFFFFEFF
     FF084009400A400B
     400C40488049784A
     704B684C604D584E
     504F485040513852
     3053285420551856
     105708FF0B400C40
     0D400E400F401040
     1140124013401440
     400041F842F043E8
     44E045D846D047C8
     48C049B84AB04BA8
     4CA04D984E904F88
     5080517852705368
     5460555856505748
     FF40404138423043
     2844204518461047
     08480049F84AF04B
     E84CE04DD84ED04F
     C850C051B852B053
     A854A05598569057
     88154016401740FF
     0040014002400340
     0440054006404188
     4280437844704568
     4660475848504948
     4A404B384C304D28
     4E204F1850105108
     520053F854F055E8
     56E057D8FC481049
     0849184A10487049
     6849784A70501051
     0851185210507051
     6851785270144015
     3815481638164817
     40FF401041084118
     4210407041684178
     4270481049084918
     4A10487049684978
     4A70501051085118
     5210507051685178
     5270044005380548
     0638064807380748
     0838084809380948
     0A40FF0040013801
     480240FF44404450
     4460447044804490
     44A044B044C044D0
     44E044F044004410
     442044300C400D38
     0D480E380E480F38
     0F481040FFFFFEFF
     0428043804480458
     0530054005500638
     06480740FF500050
     1050205030504050
     5050605070508050
     9050A050B050C050
     D050E050F0FF003C
     013802340330042C
     052806240720081C
     09180A140B100C10
     0D100E1056005610
     5620563056405650
     5660567056805690
     56A056B056C056D0
     56E056F0FF033004
     2C05280624072008
     1C09180A140B100C
     100D100E100F1456
     0056105620563056
     4056505660567056
     80569056A056B056
     C056D056E056F0FF
     035004540558065C
     0760086409680A6C
     0B700C700D700E70
     0F6C500050105020
     5030504050505060
     50705080509050A0
     50B050C050D050E0
     50F0FC0330042C05
     2806240720081C09
     180A140B100C100D
     100E100F14500050
     1050205030504050
     5050605070508050
     9050A050B050C050
     D050E050F0FFFF40
     1041144218431C44
     2045244628472C48
     3049344070416C42
     6843644460455C46
     5847544850494CFF
     FFFDFFFFFFFFFFFF
     FF00400240044006
     4008400A400C400E
     400A480A380C480C
     38FF066806580760
     0868085809600A68
     0A580B60FF082808
     3808480858093009
     4009500A380A480B
     40FF060806180710
     0808081809100A08
     0A180B10FF484049
     3849484A40FF0328
     0338034803580430
     0440045005380548
     0640FF0678066807
     700878086809700A
     780A680B70FC4400
     4410442044304470
     4480449044A044B0
     44C044D044E044F0
     FF40404138414842
     40FFFF4000401040
     6040704080409040
     A040B040C040D040
     E040F00648065806
     6806780750076007
     70085808680960FF
     FFFEFFFF40004010
     4060407040804090
     40A040B040C040D0
     40E040F006180628
     0720081808280920
     0A180A280B20FF40
     0040104020403040
     80409040A040B040
     C040D040E040F0FF
     0678066807700878
     086809700A780A68
     0B70FF4000401040
     2040304080409040
     A040B040C040D040
     E040F04040FF0068
     0058016002680258
     0360046804580560
     066806580760FF40
     404440FF00180028
     0120021802280320
     0418042805200618
     0628072040404440
     4840FF0068005801
     6002680258036004
     6804580560066806
     5807604040444048
     404C40FF40404440
     FF00180028012002
     1802280320041804
     2805200618062807
     20404044404840FF
     0068005801600268
     0258036004680458
     0560066806580760
     4040444048404C40
     FF40304020401040
     0040404440FF0018
     0028012002180228
     0320041804280520
     0618062807204040
     444048404C405040
     5440FF0468045805
     6006680658076008
     68085809600A680A
     580B604050406040
     7040804040444048
     40FC081808280920
     0A180A280B200C18
     0C280D200E180E28
     0F20404044404840
     FFFFFEFFFFFF4840
     493849484A40FF00
     4001380148023002
     4002500338034804
     40FF404041384148
     424009200A180A28
     0B100B200B300C18
     0C280D20FFFF4040
     4138414842400920
     0A180A280B100B20
     0B300C180C280D20
     FFFF404041384148
     424009200A180A28
     0B100B200B300C18
     0C280D20FF004001
     3801480230024002
     50023802480240FF
     4040413841484240
     09500A480A580B40
     0B500B600C480C58
     0D50FFFC40004010
     4060407040804090
     40A040B040C040D0
     40E040F0FF042004
     3004400450046005
     2805380548055806
     3006400650073807
     480840FFFFFDFFFF
     FFFFFFFFFF082808
     3808480858093009
     4009500A380A480B
     40FF08E808F80808
     081809F009000910
     0AF80A080B000868
     0878088808980970
     098009900A780A88
     0B80FF08A808B808
     C808D809B009C009
     D00AB80AC80BC0FF
     0028003800480058
     0130014001500238
     0248034044104508
     4518461044704568
     457846704C104D08
     4D184E104C704D68
     4D784E70FF002800
     3800480058013001
     4001500238024803
     404840493849484A
     400C100D080D180E
     100C700D680D780E
     70FF404041384148
     4240FF0068007800
     8800980170018001
     9002780288038008
     2808380848085809
     30094009500A380A
     480B40FF00280038
     0048005801300140
     0150023802480340
     4D404E384E484F40
     FF05080518052805
     3806100620063007
     18072808200B280B
     380B480B580C300C
     400C500D380D480E
     40FC050805180528
     0538061006200630
     071807280820FFFF
     FEFFFF0028003800
     4800580130014001
     5002380248034008
     4009400A400B400C
     400D400E400F40FF
     0050016002700380
     0480057006600750
     0840003001200210
     0300040005100620
     073009500A600B70
     0C800D900EA00FB0
     09300A200B100C00
     0DF00EE00FD0FF00
     C001D002E003F004
     0005100620073008
     4001B002A0039004
     800570066007504D
     404E384E484F40FF
     FF05880578056805
     5806800670066007
     78076808704D404E
     384E484F40FF0508
     0518052805380610
     0620063007180728
     08204D404E384E48
     4F40FC0588057805
     6805580680067006
     60077807680870FF
     FEFFFF0040013801
     4802404840493849
     484A40FF00400138
     01480240FF050805
     1805280538061006
     2006300718072808
     2010281038104810
     5811301140115012
     3812481340FF0588
     0578056805580680
     0670066007780768
     0870102810381048
     1058113011401150
     123812481340FF05
     D805E805F8050806
     E006F0060007E807
     F808F01028103810
     4810581130114011
     50123812481340FF
     05780588059805A8
     0680069006A00788
     0798089010281038
     1048105811301140
     1150123812481340
     FF05D805E805F805
     0806E006F0060007
     E807F808F0FF08A8
     08B808C808D809B0
     09C009D00AB80AC8
     0BC0FF08A808B808
     C808D809B009C009
     D00AB80AC80BC0FF
     0040015002600370
     0480059006A007B0
     08C009D00AE00BF0
     0C000D100E200F30
     0130022003100400
     05F006E007D008C0
     09B00AA00B900C80
     0D700E600F50FC00
     4001500260037004
     80059006A007B008
     C009D00AE00BF00C
     000D100E200F3001
     3002200310040005
     F006E007D008C009
     B00AA00B900C800D
     700E600F50FFFFFD
     FFFFFFFFFFFFFFFF
     0040013802380338
     0438054001480248
     03480448FF402041
     1841284220406041
     5841684260FF0040
     0138023803380438
     0540014802480348
     0448FF4018411041
     2042184868496049
     704A680068016002
     6003600468017002
     700370081809100A
     100B100C1809200A
     200B20FF00400138
     0238033804380540
     0148024803480448
     FF4818491049204A
     1800680160026003
     6004680170027003
     70FF001801100210
     0310041801200220
     0320486849604970
     4A68FF0018011001
     2002184868496049
     704A68FF40184110
     41204218FF406841
     6041704268FF0040
     0148025003580460
     4340443844484340
     0560065807500848
     09400A380B300C28
     0D204C404D384D48
     4E400E280F30FF00
     3801400248035004
     5805600660444045
     3845484640075808
     5009480A400B380C
     300D280E204D404E
     384E484F40FCFF40
     0040104020403040
     4040504060407040
     80409040A040B040
     C040D040E040F0FF
     0040064001380338
     0538014803480548
     FFFEFFFF40404138
     4148423042504338
     43484440FF001801
     1002100310041801
     20022003204A404B
     384B484C304C504D
     384D484E40FF0068
     0170027003700468
     0160026003604A40
     4B384B484C304C50
     4D384D484E40FF00
     6801700270037004
     68016002600360FF
     0040015002600370
     0480059006A007B0
     08C009D00AE00BF0
     0C000D100E200F30
     0130022003100400
     05F006E007D008C0
     09B00AA00B900C80
     0D700E600F50FF00
     4001500260037004
     80059006A007B008
     C009D00AE00BF00C
     000D100E200F3001
     3002200310040005
     F006E007D008C009
     B00AA00B900C800D
     700E600F50FF0040
     0150026003700480
     059006A007B008C0
     09D00AE00BF00C00
     0D100E200F300130
     02200310040005F0
     06E007D008C009B0
     0AA00B900C800D70
     0E600F50FF440044
     1044204430444044
     5044604470448044
     9044A044B044C044
     D044E044F0FF4040
     413841484240FF00
     7001680268036804
     7001780278037848
     18491049204A18FC
     0070016802680368
     0470017802780378
     4818491049204A18
     FF00100118021803
     1804100108020803
     08FFFFFEFFFF4068
     4160417042684018
     4110412042184840
     494849384A400040
     0148013802400818
     091009200A180868
     096009700A68FF40
     6841604170426840
     1841104120421848
     40494849384A4000
     4001480138024008
     18091009200A1808
     68096009700A68FF
     FF40004010402040
     3040404050406040
     704080409040A040
     B040C040D040E040
     F0FF004001380238
     0338044001480248
     0348FF4000401040
     2040304040405040
     6040704080409040
     A040B040C040D040
     E040F0FF00400138
     0238033804400148
     02480348FF400040
     1040204030404040
     5040604070408040
     9040A040B040C040
     D040E040F0024003
     3804380538064003
     4804480548FF4000
     4010402040304040
     4050406040704080
     409040A040B040C0
     40D040E040F0FF00
     6801700270037004
     6801600260036048
     0048104820483048
     4048504860487048
     80489048A048B048
     C048D048E048F0FF
     08180A100B100C10
     0D180A200B200C20
     FF40004010402040
     3040404050406040
     704080409040A040
     B040C040D040E040
     F0FF006801700270
     0370046801600260
     0360FF4000401040
     2040304040405040
     6040704080409040
     A040B040C040D040
     E040F008400A380B
     380C380D400A480B
     480C48FF40004010
     4020403040404050
     4060407040804090
     40A040B040C040D0
     40E040F0FF004001
     3802380338044001
     4802480348FC4000
     4010402040304040
     4050406040704080
     409040A040B040C0
     40D040E040F00840
     0A380B380C380D40
     0A480B480C48FF40
     0040104020403040
     4040504060407040
     80409040A040B040
     C040D040E040F0FF
     FFFFFDFFFFFFFFFF
     FF08400A380B380C
     380D380E380F400A
     480B480C480D480E
     48FF081809100A10
     0B100C1809200A20
     0B2048404C40FF00
     6801600260036004
     680170027003700C
     180D100E100F1010
     180D200E200F2040
     40444048404C40FF
     40404440FF006801
     6002600360046801
     70027003700C180D
     100E100F1010180D
     200E200F20404044
     4048404C40504054
     40FF0C680D600E60
     0F6010680D700E70
     0F70001801100210
     0310041801200220
     0320404044404840
     4C4050405440FF00
     6801600260036004
     680170027003700C
     180D100E100F1010
     180D200E200F2040
     40444048404C4050
     405440FF0C680D60
     0E600F6010680D70
     0E700F7000180110
     0210031004180120
     0220032040404440
     48404C4050405440
     FF00680160026003
     6004680170027003
     70404044404840FF
     086809600A600B60
     0C6809700A700B70
     0018011002100310
     0418012002200320
     4040444048404C40
     FF086809600A600B
     600C6809700A700B
     7000180110021003
     1004180120022003
     204040444048404C
     40FC40404440FF0C
     680D600E600F6010
     680D700E700F7000
     1801100210031004
     1801200220032040
     40444048404C4050
     405440FF40404440
     FFFFFEFFFFFF4018
     4110421043184120
     42204C684D604E60
     4F684D704E700C18
     0D100E100F180D20
     0E20006801600260
     036801700270FF40
     1841104210431841
     2042200068016002
     60036801700270FF
     4068416042604368
     4170427000180110
     0210031801200220
     481849104A104B18
     49204A2008680960
     0A600B6809700A70
     FF40684160426043
     6841704270001801
     1002100318012002
     20481849104A104B
     1849204A20086809
     600A600B6809700A
     70FF406841604260
     4368417042700018
     0110021003180120
     0220481849104A10
     4B1849204A200868
     09600A600B680970
     0A70FFFF00680160
     0260036801700270
     4018411042104318
     412042204C184D10
     4E104F184D204E20
     0C680D600E600F68
     0D700E70FF006801
     6002600368017002
     7040184110421043
     1841204220FF4868
     49604A604B684970
     4A70081809100A10
     0B1809200A204018
     4110421043184120
     4220006801600260
     036801700270FC48
     6849604A604B6849
     704A70081809100A
     100B1809200A2040
     1841104210431841
     2042200068016002
     60036801700270FF
     FFFEFFFF00050163
     024603D9047E0580
     060D07E508600928
     0A560BB00C450D90
     0E600F37106811C0
     123313A80A050B63
     0C160DD90E7E0F80
     100D11E512601328
     005601B002150390
     04600537066807C0
     083309A8FF000501
     63024603D9047E05
     80060D07E5086009
     280A560BB00C450D
     900E600F37106811
     C0123313A80A050B
     630C160DD90E7E0F
     80100D11E5126013
     28005601B0021503
     9004600537066807
     C0083309A8FF4068
     4160426841704818
     49104A1849205040
     513852485140FF40
     6841604268417040
     1841104218412048
     C049C84AC049B854
     0054105420543054
     4054505460547054
     80549054A054B054
     C054D054E054F0FF
     00050163024603D9
     047E0580060D07E5
     086009280A560BB0
     0C450D900E600F37
     106811C0123313A8
     0A050B630C160DD9
     0E7E0F80100D11E5
     12601328005601B0
     0215039004600537
     066807C0083309A8
     FF00050163024603
     D9047E0580060D07
     E5086009280A560B
     B00C450D900E600F
     37106811C0123313
     A80A050B630C160D
     D90E7E0F80100D11
     E512601328005601
     B002150390046005
     37066807C0083309
     A8FF460046104620
     4630464046504660
     46704680469046A0
     46B046C046D046E0
     46F0502051185128
     5220506051585168
     5260FF4068416042
     684170481849104A
     1849205040513851
     485240FF00050163
     024603D9047E0580
     060D07E508600928
     0A560BB00C450D90
     0E600F37106811C0
     123313A80A050B63
     0C160DD90E7E0F80
     100D11E512601328
     005601B002150390
     04600537066807C0
     083309A8FC000501
     63024603D9047E05
     80060D07E5086009
     280A560BB00C450D
     900E600F37106811
     C0123313A80A050B
     630C160DD90E7E0F
     80100D11E5126013
     28005601B0021503
     9004600537066807
     C0083309A8FFFFFF
     FDFFFFFFFF000000
                      (C:\Users\bhrou\gi):00685                         
                      (C:\Users\bhrou\gi):00686                         ; -------------------------------------------------------------------------------------------------------------             
                      (C:\Users\bhrou\gi):00687                         ; Object Locations
                      (C:\Users\bhrou\gi):00688                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00689                         ;        
                      (C:\Users\bhrou\gi):00690                         ; Index (words)
                      (C:\Users\bhrou\gi):00691                         ; -----
                      (C:\Users\bhrou\gi):00692                         ; Offset to each level data (7 word offsets for the 7 levels)
                      (C:\Users\bhrou\gi):00693                         ;
                      (C:\Users\bhrou\gi):00694                         ; Segment Objects (group of bytes)
                      (C:\Users\bhrou\gi):00695                         ; ---------------                               
                      (C:\Users\bhrou\gi):00696                         ; byte : bit6 (0:ring,1:bomb) bit5-0 ($00-$17 : 0-23 position in frame $00:near, $17 far, 24 frames is maximum for a segment in original game)
                      (C:\Users\bhrou\gi):00697                         ; byte : (angle : $00 right, $40 center, $80 left, $c0 top)
                      (C:\Users\bhrou\gi):00698                         ; byte : $ff (end of regular segment), $fe (end of checkpoint segment), $fd (end of choas emerald segment), $fc (end of rings message segment)
                      (C:\Users\bhrou\gi):00699                         ;
                      (C:\Users\bhrou\gi):00700                         ; -------------------------------------------------------------------------------------------------------------        
                      (C:\Users\bhrou\gi):00701                 
1E3F                  (C:\Users\bhrou\gi):00702                 SpecialPerspective
1E3F 007000EA01D002A4 (C:\Users\bhrou\gi):00703                         INCLUDEBIN "./game-mode/special-stage/Special stage object perspective data.bin" 
     035403EC046604E0
     055A05E6064806A4
     06FA074A079A0808
     088819B019B019B0
     19B00902097C09FC
     0A7C0AF00B4C0BA2
     0BF80C480D280E08
     0EAC0F2C0FA61032
     10D0115611BE11BE
     11BE11BE11BE11BE
     11BE123812BE13AA
     1484154615F616BE
     177A181E18B01936
     00147BDDB8E60000
     800289AC00008619
     6F8B00008C285C73
     000091324F630000
     983A455700009D40
     3E4E0000A4453846
     0000A949323F0040
     AF4C2E3A0040B54E
     2C370040BC512832
     0040C152252F0040
     C755242D0040CD56
     212A0043D3571D25
     0047D8571C23004A
     E05A1B22004EE55A
     1920004EEA5A1920
     005500267BDDB8E6
     0000800289AC0000
     8619708C00008C28
     5D75000091324F63
     0000983A45570000
     9D403E4E0000A445
     37450000A9493340
     0031B04C2E3A0031
     B54E2B360031BB51
     28320038C153252F
     003CC755242D0040
     CC55212A0040D155
     1F270040D5551E26
     0040D9531C240040
     DD521B220040E050
     1A210043E44D1A21
     0043E74A181F0047
     E846181E0047EC42
     181E0047EE3E171D
     004AF03A151B004A
     F235151B004EF330
     141A004EF42B1419
     0051F62514190055
     F82013180055F91B
     13180051FA151217
     004EFC1012170040
     FC0912170000FD02
     11160000FEFC0A0D
     0000FFF607090000
     00237BDDB8E60000
     800289AC00008619
     6F8B00008C285C74
     0000923250650000
     983A455700009E40
     3E4E0000A4453846
     0000A94933400000
     B04C303C0000B44E
     2C370000B84F2833
     0000BC4E26300000
     C04D242D0000C34B
     212A0000C6491F27
     0000C8461D250000
     CA421C240000CC3F
     1E260000CE3A1A21
     0000D037181F0000
     D131181E0000D32D
     161C0000D428151B
     0000D522141A0000
     D61C141A0000D817
     141A0000D8111419
     0000D90B14190000
     DA0513180000DBFF
     13180000DCF81318
     0000DCF213180000
     DCEB11160000DDE4
     11160000001D7BDD
     B8E60000800289AC
     000086186E8A0000
     8C285C7300009132
     4F630000983A4557
     00009C3E3E4E0000
     A04138460000A442
     323F0000A7422E3A
     0000A9412B360000
     AB3E28320000AC3B
     252F0000AE38232C
     0000B034212A0000
     B02F20280000B22B
     1F270000B3261C23
     0000B4211B220000
     B41B1A210000B515
     1A210000B50F1920
     0000B609181E0000
     B703171D0000B8FD
     161C0000B8F6151B
     0000B8F1151B0000
     B8E9141A0000B9E3
     1419000000197BDD
     B8E60000800289AC
     000080EC81A20000
     80FB698400008415
     6C88000088215D75
     00008A2750640000
     8C2A465800008E2A
     405000008F293846
     0000902834420000
     9024303C00009021
     2C380000901C2934
     0000911827310000
     9112242E0000920D
     232C00009208212A
     000092001F270000
     92FB1E26000092F5
     1C24000093EF1C23
     000093E81A210000
     93E11920000094DA
     19200000001480DD
     BEEE000080FD90B4
     0000800C74910000
     8014607900008018
     5469000080194A5D
     0000801842530000
     80163C4B00008013
     36440000800F323F
     0000800A2E3A0000
     80062B3600008000
     2833000080FA2630
     000080F6242D0000
     80EF222B000080E8
     212A000080E11F27
     000080DB1D250000
     80D41C2400000014
     80D2C8FB000080F6
     95BB000080077795
     00008010627B0000
     8015566C00008016
     4B5E000080164354
     000080143C4C0000
     801137450000800D
     323F000080092E3A
     000080042B360000
     80FE2833000080F9
     2630000080F3242D
     000080ED222B0000
     80E62029000080E0
     1F27000080D91E26
     000080D31C240000
     001480C4CCFF0000
     80ED9CC300008000
     7A990000800B647E
     00008010586E0000
     80124C6000008012
     4456000080113D4D
     0000800E38460000
     800B334000008007
     303C000080022C37
     000080FC29340000
     80F72630000080F1
     242E000080ED222B
     000080EA20290000
     80E91E26000080E9
     1C24000080E91B22
     0000001780BECCFF
     000080E0A1CA0000
     80F77D9D00008005
     67810000800B5A71
     0000800E4E620000
     800E45570000800D
     3E4E0000800A3847
     0000800734410000
     80042F3B00008002
     2B36000080022833
     00008003252F0000
     8005232C00008007
     20290000800A1E26
     0000800E1C240000
     80121C2318678016
     1A21116E801B181F
     0E718020181E0A75
     8026151B07780010
     80B8CCFF000080D2
     A4CE000080035C73
     000080074F630000
     800B45570000800F
     3D4D000080143745
     00008019313E0000
     801E2D3900008024
     28331C63802B2630
     18678031242D156A
     8037212A116E803E
     1F270E7180451D25
     0A75804C1C230778
     000F80B8CCFF0000
     80C0AAD5000080E6
     84A5000080016883
     00008015586E0000
     80264A5D00008033
     4152000080403A49
     2A55804B3442235C
     80552F3B20608060
     2B361C6380692833
     18678073252F116E
     807D232C0E718084
     20290778000E80B8
     CCFF000080C5A4CE
     000080F27E9E0000
     8014657F0000802C
     546900008040485A
     2A55804F3F4F2758
     805D3847235C806B
     3340AC6380782F3B
     156A80822B36116E
     808C28320E718098
     252F0A7580A2232C
     0778000D80B8CCFF
     000080D59CC30000
     8000799800008021
     6078000080365166
     0000804947590000
     80593E4E27588067
     3846235C8074323F
     206080802E3A1C63
     808A2A35156A8096
     28320E7180A0252F
     0778000D80B8CCFF
     000080E395BB0000
     8000799800008021
     6078000080365166
     0000804947590000
     80593E4E27588067
     3846235C8074323F
     206080802E3A1C63
     808A2A35156A8096
     28320E7180A0252F
     0778001280B8CCFF
     000080EC93B80000
     801073900000802A
     5D750000803F4F63
     0000805144560000
     805F3C4C2060806C
     37451C558078313E
     155C80842D391163
     808E2934006A8296
     26300071849D242D
     007186A3212A0071
     88A91F2700718CAE
     1C24007590B21C24
     007893B71A210078
     001580BCC2F30000
     80F58DB100008015
     708D0000802E5B72
     000080424D610000
     8053435400008060
     3C4B0000836B3543
     00008473303C0000
     887A2C3700008B7F
     2833000090852630
     00009389232C0040
     988C202900479C90
     1F27004AA0931C24
     004EA5961B220051
     AA981A210055B09A
     181F0058B49C181E
     005CBA9E161C0060
     001480D2B9E80000
     800688AB00008124
     6C88000084365970
     000088434D610000
     8C4E435400009057
     3C4B0000955D3543
     00009A62303D0000
     9F672C380000A46B
     29340000AA6E2630
     0031B071242D0035
     B573212A0038BB75
     2028003CC0771E26
     0040C5791C230043
     CC7A1A210047D17B
     181F004ED87C181E
     005500147BDDB8E6
     0000800289AC0000
     86196D8900008C28
     5B72000091324C60
     0000983943540000
     9C403C4B0000A444
     36440000A948313E
     0000AF4C2D390000
     B54E2A350000BB51
     2630002AC053242D
     0031C755212A0035
     CD5620280038D457
     1E260040D9591B22
     0043E05A1B220047
     E65B1A21004AEC5E
     181F004E00157BDD
     B8E60000800289AC
     000086196D890000
     8C28597000009232
     4C600000983A4354
     00009E403C4B0000
     A44536440000A948
     303D0000AF4C2C38
     0000B54E2A350000
     BC5126300031C153
     242D0035C855222B
     0038CD571F27003C
     D35A1E260040D85D
     1C240047DC601C24
     004EE0641B220055
     E369181F0058E66E
     181E005C00157BDD
     B8E60000800289AC
     000086196E8A0000
     8C285B7200009132
     4F630000983A4456
     00009E403D4D0000
     A44437450000A949
     323F0000B04C2E3A
     0000B54F2B360000
     BA5328320000BE58
     242D0000C25C242D
     0040C5621F270047
     C8681E26004ECB6E
     1C24005CCC731B22
     005CCF791A210063
     D180181F006AD387
     181E007100137BDD
     B8E60000800289AC
     000086196D890000
     8C285B7200009132
     4F630000983A4456
     00009D413D4D0000
     A24836440000A550
     303C0000A8562C38
     0000AA5E28330000
     AC66252F0055AE6D
     242D0060B074212A
     005CB17C1F270060
     B2831D250063B38A
     1C24006AB4921B22
     0071B59919200078
     000F7BDDB8E60000
     800289AC0000851C
     6D890000882E5B72
     00008B3E4C600000
     8C4A445500008E57
     3B4A00008F613442
     0000906C303C004E
     90752C370055907F
     283300639188252F
     00679291232C006E
     9299212A007192A2
     1F270078000E80D3
     B1DE000080FD85A7
     0000801969840000
     802E586E00008040
     4B5E0000804E4152
     0000805B3A490000
     80673442233C8072
     303C1C63807D2B36
     186780872833156A
     8092252F0E71809B
     232C0A7580A3212A
     0778000E80D7A9D4
     0000800081A20000
     8020688200008037
     566C00008048485B
     0000805740510000
     8065394800008071
     3340233C807D2F3B
     1C6380872B361867
     80912832156A809B
     242E0E7180A6232C
     0A7580AF20290778
     000D80E197BD0000
     8007759300008021
     5F77000080365064
     0000804745570000
     80553D4D00008062
     3745233C806E313E
     1C63807A2D391867
     80842934156A808E
     26300E718098242D
     0A7580A2212A0778
     002580D59DC50000
     80FD7A990000801A
     637C000080305267
     0000804247590000
     80513E4E0000805E
     3846235C806B323F
     206080772E3A1C63
     80812B36156A8089
     2832116E8090252F
     0E718094232C0E71
     8097212A0E718099
     2028116E809B1E26
     116E809B1C24116E
     809B1B22156A809A
     1A211C6380981920
     20608097181E2758
     8094171D00008092
     161C0000808F151B
     0000808C141A0000
     8088141900008084
     1318000080801318
     0000807C12170000
     8078111600008073
     10150000806E1015
     0000806910150000
     806510140000805F
     0F130000805A0E12
     000081550E120000
     002580D299C00000
     80FE789600008017
     60780000802F5065
     0000803F45570000
     804E3E4E00008059
     384700008061323F
     000080652D390000
     806A2C370000806D
     28330000806C2630
     0000806C242D0000
     806C222B0000806B
     2028000080681D25
     000080641C240000
     80611B220000805E
     1A210000805A1A21
     00008056181E0000
     8053151B0000804D
     151B000080481419
     0000804313180000
     803F131800008039
     1318000080341318
     0000802E13180000
     8028121700008022
     11160000801C1116
     0000831710150000
     841110150000840D
     0F13000086090F13
     000088050F130000
     001B80D994B90000
     8000749200008019
     6078000080275267
     00008031485A0000
     803640510000803B
     3A490000803B3442
     0000803A303C0000
     803A2C3800008039
     2934000080352630
     00008031242D0000
     802D212A00008029
     2028000080251E26
     0000801F1D250000
     801B1A2100008015
     1A21000080111A21
     0000800A181E0000
     8004181F000080FE
     181E000080F6181E
     000080F1171D0000
     80EB151B000080E4
     151B0000001580EC
     88AB000080006E8A
     0000800C5B720000
     80124E6200008015
     4658000080164050
     0000801539480000
     8014344200008011
     303C0000800E2D39
     0000800A2B360000
     8005273100008001
     242E00008000242D
     000080FB242D0000
     80F5212A000080EF
     2029000080E91F27
     000080E31D250000
     80DC1C24000080D5
     1C230000001480E5
     99C0000080FC7998
     0000800B817E0000
     8012576D00008016
     4C5F000080174354
     000080163C4C0000
     8014374500008011
     323F0000800E2F3B
     000080092C370000
     8005293400008001
     2630000080FB242D
     000080F5222B0000
     80EF2029000080E8
     1F27000080E21E26
     000080DB1C240000
     80D51A2100000017
     80E99FC700008000
     7C9C0000800E6781
     00008016586F0000
     80194D6100008019
     4456000080183D4D
     0000801638460000
     8013323F0000800F
     2E3A0000800B2B36
     0000800728330000
     80012630000080FC
     242D000080F6222B
     000080F220280000
     82EB1E26000084E8
     1D25000087E41B22
     00008AE11A210000
     8CDE1A21001891DB
     181F002094D8181E
     0023001A80EBA5CF
     0000800381A20000
     8011698400008016
     59700000801A4D61
     0000801B44560000
     801B3D4D00008018
     3847000080143340
     000080112E3A0000
     800C2B3600008008
     2833000080052630
     00008003242D0000
     8001202900008CFF
     2028000090FD1F27
     002094FB1D250023
     98F91C2300279CF8
     1B22002AA0F71920
     0031A5F6181E0035
     AAF5181E003CAFF4
     161C0040B3F3151B
     0043B8F2151B0047
     001680EAACD80000
     800484A500008011
     6C87000080185B72
     0000801A4F630000
     801C45570000801B
     3D4D0000841B3745
     0000861A323F0000
     8A1A2E3A00008A1A
     29340000901A2630
     0000951A242E0000
     9B1A222B00009D1A
     1F270000A21A1D25
     0000A61A1E26002E
     AC1A1C240035B01A
     1C230038B51A1A21
     0040BB1A19200043
     C01A181E00470011
     80C1B4E200008001
     89AC000080126F8B
     0000841E59700000
     88254D6100008C2B
     4354000091313C4B
     0000953335430000
     9A35313E0000A038
     2D390000A43B2833
     0000AA3C26300000
     B03E242D002AB53F
     232C0031BB402028
     0031C0421E260038
     C7431C2400400014
     7BDDB8E600008002
     89AC0000871A6E8A
     00008C285B720000
     91314F6300009839
     455700009D403D4D
     0000A44537450000
     A949323F0000B04D
     2E3A0000B54F2B36
     0000BB5128320000
     C153252F0000C755
     242D0000CD56212A
     0000D4571E260000
     D9591C240000E05A
     1B220047E65B1A21
     004EEC5C181F0055
     00167BDDB8E60000
     800289AC0000871A
     6E8A00008C285B72
     000091314F630000
     9839455700009D40
     3D4D0000A4453745
     0000A949323F0000
     B04D2E3A0000B54F
     2B360000BB512832
     0000C153252F0000
     C755242D0000CD56
     212A0000D4571E26
     0000D9591C240000
     E05A1B220040E35B
     1920004EE75C181F
     0051EA5D171D0058
     ED5E161C005C0027
     7BDDB8E600008002
     89AC0000871A6E8A
     00008C285B720000
     91314F6300009839
     455700009D403D4D
     0000A44537450000
     A949323F0000B04D
     2E3A0000B64E2934
     0000BC5126300000
     C053242D0000C455
     212A0000C8571F27
     0000CB581C240000
     CE5A1B220000D05B
     1A210035D25D181E
     0038D45E181E003C
     D55F161C0040D860
     151B0040D960141A
     0040DA6113180040
     DC6213180040DC62
     12170040DE621116
     0043DF6310150047
     E06310150047E065
     1014004AE1660F13
     004AE2660F13004A
     E3660E12004AE467
     0E12004EE5670E12
     0051E6670C100055
     E7670C0F0055E868
     0C0F0055E8680C0F
     005500247BDDB8E6
     0000800289AC0000
     871A6E8A00008C28
     5B72000091314F63
     0000983945570000
     9E3F3B4A0000A344
     34420000A64A2E3A
     0000AA4D2A350000
     AC5027310000AF53
     242D0000B0552029
     0000B2571F270000
     B3591C240000B45A
     1A210000B55B1920
     0000B65C181E0000
     B75E171D0000B85E
     151B0000B85F141A
     0000B96114190000
     BA6113180000BB61
     12170000BC621116
     0000BC6310150000
     BC6310150000BC64
     10140000BD650F13
     0000BE660D110000
     BF670C100000C068
     0C0F0000C0690A0D
     0000C16A080B0000
     C26B07090000C36C
     0608000000207BDD
     B8E60000800289AC
     000086196B860000
     8A2A566C00008C36
     465800008D3E3E4E
     00008F4435430000
     90492F3B0000904D
     2B36000091502731
     00009153242D0000
     9255212A00009357
     1F27000093581C24
     0000935A1A210000
     945C19200000945D
     181E0000945E171D
     0000945F151B0000
     9460141A00009461
     1419000095611217
     0000956211160000
     9563101500009564
     1015000095650F13
     000096660D110000
     96670B0E00009668
     090C00009669080A
     0000976A07090000
     976B06080000001D
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     000080581F270000
     805A1C240000805B
     1B220000805D1920
     0000805E181E0000
     805F161C00008060
     151B00008061141A
     0000806114190000
     8062131800008063
     1116000080631116
     0000806410150000
     8064101400008065
     0F13000080650F13
     000080660E120000
     80660E1200000021
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     000080581F270000
     805A1C240000805B
     1B220000805D1920
     0000805E181E0000
     805F161C00008060
     151B00008061141A
     0000806114190000
     8062131800008063
     1116000080631217
     0000816510150000
     8264101500408364
     1014004084640F13
     004086650F130040
     88650E1200408A66
     0E1200408C660D11
     00478F660D11004A
     91660C10004E001F
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     000080581F270000
     805A1C240000805B
     1B220000805D1920
     0000805E181E0000
     805F161C00008060
     151B00008060151B
     0000816114190000
     8261131800408462
     1318004085631217
     0040876311160040
     8963101500408C64
     101500408E641014
     004791640F13004A
     94650E12004E9765
     0E12004E9A650D11
     0055001B80F891B6
     000080156D890000
     80285B7200008035
     4B5E0000803E4050
     0000804537450000
     804A303D0000804E
     2C37000080522832
     00008054242D0000
     8056212A00008058
     1F270000805A1C24
     0000805B1B220000
     805C1A210000815D
     181F0000825D181E
     0040845E171D0040
     865F151B00408860
     141A00408B611318
     00408D6113180040
     9062121700409462
     1116004797631015
     004A9A631014004E
     9E640F13004E0018
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     0000815620280000
     83581E260000855A
     1C240040885B1A21
     00408A5C181F0040
     8D5D181E0040905E
     181E0040945E161C
     00409860151B0043
     9B60141900479F60
     13180047A3611217
     004EA86212170055
     001680F891B60000
     80156D8900008028
     5B72000080354B5E
     0000803E40500000
     8045374500008049
     313E0000824D2D39
     0000844F29340000
     8752263000008A54
     242D00408D56212A
     004091571F270040
     94591C240040995A
     1C2300409D5B1A21
     0040A15C19200043
     A65D181E0047AB5E
     161C004AB05F151B
     004EB45F141A0051
     BA5F141900550014
     80F891B600008019
     6E8A000081285B72
     000084334F630000
     873A455700008B40
     3D4D00008F453745
     00009449313E0000
     984C2D3900009D4F
     2A350000A2512832
     0040A854252F0040
     AC55232C0040B257
     20290040B7581F27
     0040BC5A1C240040
     C25A1A210047C85B
     1920004ACD5C181E
     0051D45D171D0055
     002080F891B60000
     80156D8900008028
     5B72000080354B5E
     0000803E40500000
     804537450000804A
     303D0000804E2C37
     0000805228320000
     8054242D00008056
     212A000080581F27
     0000805A1C240000
     805B1B220000805D
     19200000805E181E
     0000805F161C0000
     8060151B00008061
     141A000080611419
     0000806213180000
     8063111600008063
     1116000080641015
     0000806410140000
     80650F1300008065
     0F13000080660E12
     000080660E120000
     80660D1100008067
     0C10000080670C10
     000080670C0F0000
     80680C0F00008068
     0C0F000080680B0E
     000080680B0E0000
     80690A0D00008069
     0A0D00008069090C
     00008069090C0000
     8069090C0000806A
     090C0000806A090C
     0000806A080B0000
     806A080B0000806A
     080B0000806A080B
     0000806B080A0000
     806B080A0000806B
     080A0000806B080A
     0000806B07090000
     806B07090000806B
     07090000
                      (C:\Users\bhrou\gi):00704                 
                      (C:\Users\bhrou\gi):00705                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00706                         ; Perspective data
                      (C:\Users\bhrou\gi):00707                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00708                         ;        
                      (C:\Users\bhrou\gi):00709                         ; Index (words)
                      (C:\Users\bhrou\gi):00710                         ; -----
                      (C:\Users\bhrou\gi):00711                         ; Offset to each halfpipe image perspective data (56 word offsets for the 56 images)
                      (C:\Users\bhrou\gi):00712                         ;
                      (C:\Users\bhrou\gi):00713                         ; Image perspective data
                      (C:\Users\bhrou\gi):00714                         ; ----------------------      
                      (C:\Users\bhrou\gi):00715                         ;  1 word : n number of z_pos defined for this frame from 1 (camera front) to n (far away)
                      (C:\Users\bhrou\gi):00716                         ;  n groups of 6 bytes : 7b dd b8 e6 00 00   that defines an elipse arc
                      (C:\Users\bhrou\gi):00717                         ;                        |  |  |  |  |  |___ angle min (excl.) of visible area (0: no invisible area)
                      (C:\Users\bhrou\gi):00718                         ;                        |  |  |  |  |______ angle max (incl.) of visible area
                      (C:\Users\bhrou\gi):00719                         ;                        |  |  |  |_________ y radius
                      (C:\Users\bhrou\gi):00720                         ;                        |  |  |____________ x radius
                      (C:\Users\bhrou\gi):00721                         ;                        |  |_______________ y origin
                      (C:\Users\bhrou\gi):00722                         ;                        |__________________ x origin
                      (C:\Users\bhrou\gi):00723                         ;
                      (C:\Users\bhrou\gi):00724                         ; -------------------------------------------------------------------------------------------------------------  
                      (C:\Users\bhrou\gi):00725                         
                      (C:\Users\bhrou\gi):00726                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00727                 ; Object - Half Pipe for Special Stage
                      (C:\Users\bhrou\gi):00728                 ;
                      (C:\Users\bhrou\gi):00729                 ; input REG : [u] pointer to Object Status Table (OST)
                      (C:\Users\bhrou\gi):00730                 ; ---------
                      (C:\Users\bhrou\gi):00731                 ;
                      (C:\Users\bhrou\gi):00732                 ; Half pipe is rendered interlaced
                      (C:\Users\bhrou\gi):00733                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00734                 
393B                  (C:\Users\bhrou\gi):00735                 HalfPipe_Init
393B C605             (C:\Users\bhrou\gi):00736 [2]     651             ldb   #$05
393D E743             (C:\Users\bhrou\gi):00737 [5]     656             stb   priority,u
                      (C:\Users\bhrou\gi):00738                         
393F A642             (C:\Users\bhrou\gi):00739 [5]     661             lda   render_flags,u
3941 8A04             (C:\Users\bhrou\gi):00740 [2]     663             ora   #render_overlay_mask
3943 A742             (C:\Users\bhrou\gi):00741 [5]     668             sta   render_flags,u        
                      (C:\Users\bhrou\gi):00742                         
3945 CC807F           (C:\Users\bhrou\gi):00743 [3]     671             ldd   #$807F
3948 118361A9         (C:\Users\bhrou\gi):00744 [5]     676             cmpu  #HalfPipeEven
394C 2705             (C:\Users\bhrou\gi):00745 [3]     679             beq   @a        
394E 5C               (C:\Users\bhrou\gi):00746 [2]     681             incb                           ; +1 for odd line
394F EDC814           (C:\Users\bhrou\gi):00747 [6]     687             std   xy_pixel,u
3952 39               (C:\Users\bhrou\gi):00748 [5]     692             rts
3953 EDC814           (C:\Users\bhrou\gi):00749 [6]     698     @a      std   xy_pixel,u
                      (C:\Users\bhrou\gi):00750                 
3956 FC75FE           (C:\Users\bhrou\gi):00751 [6]     704             ldd   Vint_runcount
3959 FD752F           (C:\Users\bhrou\gi):00752 [6]     710             std   HalfPipe_Vint_Track_Image          ; store number of vint between two rendered images
395C FD7536           (C:\Users\bhrou\gi):00753 [6]     716             std   HalfPipe_Vint_Main_Loop            ; store number of vint between two main loops execution
                      (C:\Users\bhrou\gi):00754                         
                      (C:\Users\bhrou\gi):00755                         ; load start of sequences for this level
                      (C:\Users\bhrou\gi):00756                         ; ----------------------------------------------
                      (C:\Users\bhrou\gi):00757                         
395F BE7512           (C:\Users\bhrou\gi):00758 [6]     722             ldx   SS_CurrentLevelLayout
3962 BF7491           (C:\Users\bhrou\gi):00759 [6]     728             stx   SpecialStage_CurrentSegment
                      (C:\Users\bhrou\gi):00760                 
                      (C:\Users\bhrou\gi):00761                         ; load first animation id
                      (C:\Users\bhrou\gi):00762                         ; -----------------------
                      (C:\Users\bhrou\gi):00763                         
3965 E684             (C:\Users\bhrou\gi):00764 [4]     732             ldb   ,x                
3967 F7752C           (C:\Users\bhrou\gi):00765 [5]     737             stb   HalfPipe_Seq
396A C47F             (C:\Users\bhrou\gi):00766 [2]     739             andb  #$7F
396C 301F             (C:\Users\bhrou\gi):00767 [5]     744             leax  -1,x
396E BF74D3           (C:\Users\bhrou\gi):00768 [6]     750             stx   SpecialStage_LastSegment2          ; init last segment to another value to run ObjectManager
                      (C:\Users\bhrou\gi):00769                         
3971 8E3A87           (C:\Users\bhrou\gi):00770 [3]     753             ldx   #Ani_SpecialStageTrack
3974 58               (C:\Users\bhrou\gi):00771 [2]     755             aslb        
3975 3A               (C:\Users\bhrou\gi):00772 [3]     758             abx
3976 EC84             (C:\Users\bhrou\gi):00773 [5]     763             ldd   ,x
3978 ED44             (C:\Users\bhrou\gi):00774 [6]     769             std   anim,u
397A 7E7680           (C:\Users\bhrou\gi):00775 [4]     773             jmp   AnimateSprite
                      (C:\Users\bhrou\gi):00776                         
397D                  (C:\Users\bhrou\gi):00777                 HalfPipe_Display
397D 118361A9         (C:\Users\bhrou\gi):00778 [5]     778             cmpu  #HalfPipeEven
3981 270E             (C:\Users\bhrou\gi):00779 [3]     781             beq   @a
3983 8E61A9           (C:\Users\bhrou\gi):00780 [3]     784             ldx   #HalfPipeEven
3986 EC0C             (C:\Users\bhrou\gi):00781 [6]     790             ldd   image_set,x                        ; clone image_set when secondary HalfPipe sprite is running
3988 ED4C             (C:\Users\bhrou\gi):00782 [6]     796             std   image_set,u
398A A602             (C:\Users\bhrou\gi):00783 [5]     801             lda   render_flags,x
398C A742             (C:\Users\bhrou\gi):00784 [5]     806             sta   render_flags,u     
398E 7E774C           (C:\Users\bhrou\gi):00785 [4]     810             jmp   DisplaySprite                      ; return
3991                  (C:\Users\bhrou\gi):00786                 @a
                      (C:\Users\bhrou\gi):00787                         
3991 FC75FE           (C:\Users\bhrou\gi):00788 [6]     816             ldd   Vint_runcount
3994 B37536           (C:\Users\bhrou\gi):00789 [7]     823             subd  HalfPipe_Vint_Main_Loop
3997 F77535           (C:\Users\bhrou\gi):00790 [5]     828             stb   HalfPipe_Nb_Elapsed_Frames         ; ajust object z speed
                      (C:\Users\bhrou\gi):00791                 
399A FC75FE           (C:\Users\bhrou\gi):00792 [6]     834             ldd   Vint_runcount
399D FD7536           (C:\Users\bhrou\gi):00793 [6]     840             std   HalfPipe_Vint_Main_Loop
39A0 B3752F           (C:\Users\bhrou\gi):00794 [7]     847             subd  HalfPipe_Vint_Track_Image
39A3 F77495           (C:\Users\bhrou\gi):00795 [5]     852             stb   SSTrack_drawing_index
                      (C:\Users\bhrou\gi):00796                         
                      (C:\Users\bhrou\gi):00797                         ; if n-2 image is different from n-1 image
                      (C:\Users\bhrou\gi):00798                         ; we must call HalfPipe_KeepSameTrackImage
                      (C:\Users\bhrou\gi):00799                         ; otherwise it would drop an intermediate image
39A6 ECC83A           (C:\Users\bhrou\gi):00800 [6]     858             ldd   rsv_prev_mapping_frame_0,u
39A9 10A3C84E         (C:\Users\bhrou\gi):00801 [8]     866             cmpd  rsv_prev_mapping_frame_1,u
39AD 2607             (C:\Users\bhrou\gi):00802 [3]     869             bne   HalfPipe_KeepSameTrackImage
                      (C:\Users\bhrou\gi):00803                         
39AF F67495           (C:\Users\bhrou\gi):00804 [5]     874             ldb   SSTrack_drawing_index
39B2 C105             (C:\Users\bhrou\gi):00805 [2]     876             cmpb  #HalfPipe_Img_Duration             ; ensure track is not refreshed more than max fps 
39B4 2C15             (C:\Users\bhrou\gi):00806 [3]     879             bge   HalfPipe_LoadNewTrackImage
                      (C:\Users\bhrou\gi):00807                         
39B6                  (C:\Users\bhrou\gi):00808                 HalfPipe_KeepSameTrackImage
                      (C:\Users\bhrou\gi):00809                  IFGE (HalfPipe_one_z_step-255)
                      (C:\Users\bhrou\gi):00810                         ldb   HalfPipe_Nb_Elapsed_Frames         ; 8x16 bit mul (fix this code, remove stack usage) 
                      (C:\Users\bhrou\gi):00811                         ldy   #HalfPipe_one_z_step               ; TODO NEVER TESTED 
                      (C:\Users\bhrou\gi):00812                         pshs  y,d,cc                             ; USAGE WHEN track refresh rate >= 12fps (HalfPipe_Img_Duration <= 4)
                      (C:\Users\bhrou\gi):00813                         lda   4,s                                ; CAP to HalfPipe_Img_z_depth
                      (C:\Users\bhrou\gi):00814                         mul
                      (C:\Users\bhrou\gi):00815                         std   3,s
                      (C:\Users\bhrou\gi):00816                         tfr   y,d
                      (C:\Users\bhrou\gi):00817                         ldb   2,s
                      (C:\Users\bhrou\gi):00818                         clr   2,s
                      (C:\Users\bhrou\gi):00819                         mul
                      (C:\Users\bhrou\gi):00820                         addd  2,s
                      (C:\Users\bhrou\gi):00821                         std   2,s
                      (C:\Users\bhrou\gi):00822                         puls  pc,y,d,cc
                      (C:\Users\bhrou\gi):00823                         sty   HalfPipe_z_step
                      (C:\Users\bhrou\gi):00824                         jmp   DisplaySprite
                      (C:\Users\bhrou\gi):00825                  ELSE           
39B6 B67535           (C:\Users\bhrou\gi):00826 [5]     884             lda   HalfPipe_Nb_Elapsed_Frames         ; 8x8 bit mul is the way to go
39B9 C6CC             (C:\Users\bhrou\gi):00827 [2]     886             ldb   #HalfPipe_one_z_step               ; look for one main loop duration and adjust
39BB 3D               (C:\Users\bhrou\gi):00828 [11]    897             mul                                      ; object position to keep a constant speed
39BC 10830200         (C:\Users\bhrou\gi):00829 [5]     902             cmpd  #((HalfPipe_Img_z_depth*256)/2)
39C0 2303             (C:\Users\bhrou\gi):00830 [3]     905             bls   @a
39C2 CC0200           (C:\Users\bhrou\gi):00831 [3]     908             ldd   #((HalfPipe_Img_z_depth*256)/2)    ; one sub step can not be more than an img z depth
39C5 FD7533           (C:\Users\bhrou\gi):00832 [6]     914     @a      std   HalfPipe_z_step
39C8 7E774C           (C:\Users\bhrou\gi):00833 [4]     918             jmp   DisplaySprite                      ; return
                      (C:\Users\bhrou\gi):00834                  ENDC
                      (C:\Users\bhrou\gi):00835                         
39CB                  (C:\Users\bhrou\gi):00836                 HalfPipe_LoadNewTrackImage
39CB FC75FE           (C:\Users\bhrou\gi):00837 [6]     924             ldd   Vint_runcount
39CE FD752F           (C:\Users\bhrou\gi):00838 [6]     930             std   HalfPipe_Vint_Track_Image
39D1 7F7495           (C:\Users\bhrou\gi):00839 [7]     937             clr   SSTrack_drawing_index
39D4 BD7680           (C:\Users\bhrou\gi):00840 [8]     945             jsr   AnimateSprite
39D7 BD772B           (C:\Users\bhrou\gi):00841 [8]     953             jsr   GetImgIdA
39DA B77498           (C:\Users\bhrou\gi):00842 [5]     958             sta   SSTrack_mapping_frame
                      (C:\Users\bhrou\gi):00843                         
                      (C:\Users\bhrou\gi):00844                         ; chain animations (AnimateSprite will inc routine_secondary after each animation ends)
                      (C:\Users\bhrou\gi):00845                         ; -------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00846                         
39DD A6C81F           (C:\Users\bhrou\gi):00847 [5]     963             lda   routine_secondary,u
39E0 48               (C:\Users\bhrou\gi):00848 [2]     965             asla
39E1 8E39E6           (C:\Users\bhrou\gi):00849 [3]     968             ldx   #HalfPipe_SubRoutines
39E4 6E96             (C:\Users\bhrou\gi):00850 [7]     975             jmp   [a,x]
                      (C:\Users\bhrou\gi):00851                 
39E6                  (C:\Users\bhrou\gi):00852                 HalfPipe_SubRoutines
39E6 3A3F             (C:\Users\bhrou\gi):00853                         fdb   HalfPipe_Continue
39E8 39EA             (C:\Users\bhrou\gi):00854                         fdb   HalfPipe_LoadNewSequence
                      (C:\Users\bhrou\gi):00855                         
39EA                  (C:\Users\bhrou\gi):00856                 HalfPipe_LoadNewSequence
39EA BE7491           (C:\Users\bhrou\gi):00857 [6]     981             ldx   SpecialStage_CurrentSegment
39ED 3001             (C:\Users\bhrou\gi):00858 [5]     986             leax  1,x
39EF BF7491           (C:\Users\bhrou\gi):00859 [6]     992             stx   SpecialStage_CurrentSegment
                      (C:\Users\bhrou\gi):00860                 
39F2 B6752C           (C:\Users\bhrou\gi):00861 [5]     997             lda   HalfPipe_Seq
39F5 847F             (C:\Users\bhrou\gi):00862 [2]     999             anda  #$7F
39F7 E684             (C:\Users\bhrou\gi):00863 [4]     1003            ldb   ,x        
39F9 F7752C           (C:\Users\bhrou\gi):00864 [5]     1008            stb   HalfPipe_Seq
39FC C47F             (C:\Users\bhrou\gi):00865 [2]     1010            andb  #$7F
39FE 10830203         (C:\Users\bhrou\gi):00866 [5]     1015            cmpd  #$0203                        ; special case    
3A02 2607             (C:\Users\bhrou\gi):00867 [3]     1018            bne   @a
3A04 CCA055           (C:\Users\bhrou\gi):00868 [3]     1021            ldd   #Ani_Straight_From_TurnThenStraight
3A07 ED44             (C:\Users\bhrou\gi):00869 [6]     1027            std   anim,u
3A09 2023             (C:\Users\bhrou\gi):00870 [3]     1030            bra   @d
3A0B 10830002         (C:\Users\bhrou\gi):00871 [5]     1035    @a      cmpd  #$0002                        ; special case    
3A0F 2607             (C:\Users\bhrou\gi):00872 [3]     1038            bne   @b
3A11 CCA0A9           (C:\Users\bhrou\gi):00873 [3]     1041            ldd   #Ani_TurnThenStraight_From_Rise
3A14 ED44             (C:\Users\bhrou\gi):00874 [6]     1047            std   anim,u
3A16 2016             (C:\Users\bhrou\gi):00875 [3]     1050            bra   @d
3A18 10830102         (C:\Users\bhrou\gi):00876 [5]     1055    @b      cmpd  #$0102                        ; special case    
3A1C 2607             (C:\Users\bhrou\gi):00877 [3]     1058            bne   @c
3A1E CCA0F5           (C:\Users\bhrou\gi):00878 [3]     1061            ldd   #Ani_TurnThenStraight_From_Drop
3A21 ED44             (C:\Users\bhrou\gi):00879 [6]     1067            std   anim,u
3A23 2009             (C:\Users\bhrou\gi):00880 [3]     1070            bra   @d
3A25 8E3A87           (C:\Users\bhrou\gi):00881 [3]     1073    @c      ldx   #Ani_SpecialStageTrack        ; use lookup table
3A28 58               (C:\Users\bhrou\gi):00882 [2]     1075            aslb
3A29 3A               (C:\Users\bhrou\gi):00883 [3]     1078            abx
3A2A EC84             (C:\Users\bhrou\gi):00884 [5]     1083            ldd   ,x
3A2C ED44             (C:\Users\bhrou\gi):00885 [6]     1089            std   anim,u
3A2E CC0000           (C:\Users\bhrou\gi):00886 [3]     1092    @d      ldd   #0
3A31 A7C81F           (C:\Users\bhrou\gi):00887 [5]     1097            sta   routine_secondary,u
3A34 ED46             (C:\Users\bhrou\gi):00888 [6]     1103            std   prev_anim,u                   ; force loading of new animation
3A36 BD7680           (C:\Users\bhrou\gi):00889 [8]     1111            jsr   AnimateSprite
3A39 BD772B           (C:\Users\bhrou\gi):00890 [8]     1119            jsr   GetImgIdA
3A3C B77498           (C:\Users\bhrou\gi):00891 [5]     1124            sta   SSTrack_mapping_frame
                      (C:\Users\bhrou\gi):00892                 
3A3F                  (C:\Users\bhrou\gi):00893                 HalfPipe_Continue
                      (C:\Users\bhrou\gi):00894                 
                      (C:\Users\bhrou\gi):00895                         ; set orirentation of track
                      (C:\Users\bhrou\gi):00896                         ; -------------------------
                      (C:\Users\bhrou\gi):00897                         
3A3F B6752D           (C:\Users\bhrou\gi):00898 [5]     1129            lda   HalfPipe_Seq_UpdFlip
3A42 2720             (C:\Users\bhrou\gi):00899 [3]     1132            beq   @a
3A44 F6752E           (C:\Users\bhrou\gi):00900 [5]     1137            ldb   HalfPipe_Seq_UpdFlip+1
3A47 2A0D             (C:\Users\bhrou\gi):00901 [3]     1140            bpl   @b   
3A49 A642             (C:\Users\bhrou\gi):00902 [5]     1145            lda   render_flags,u
3A4B 8A01             (C:\Users\bhrou\gi):00903 [2]     1147            ora   #render_xmirror_mask          ; set flip - left orientation
3A4D A742             (C:\Users\bhrou\gi):00904 [5]     1152            sta   render_flags,u
3A4F 86FF             (C:\Users\bhrou\gi):00905 [2]     1154            lda   #$FF
3A51 B77496           (C:\Users\bhrou\gi):00906 [5]     1159            sta   SSTrack_Orientation
3A54 200B             (C:\Users\bhrou\gi):00907 [3]     1162            bra   @c
3A56 A642             (C:\Users\bhrou\gi):00908 [5]     1167    @b      lda   render_flags,u
3A58 84FE             (C:\Users\bhrou\gi):00909 [2]     1169            anda   #^render_xmirror_mask        ; unset flip - right orientation
3A5A A742             (C:\Users\bhrou\gi):00910 [5]     1174            sta   render_flags,u
3A5C 8600             (C:\Users\bhrou\gi):00911 [2]     1176            lda   #0
3A5E B77496           (C:\Users\bhrou\gi):00912 [5]     1181            sta   SSTrack_Orientation
3A61 73752D           (C:\Users\bhrou\gi):00913 [7]     1188    @c      com   HalfPipe_Seq_UpdFlip
3A64 EC4C             (C:\Users\bhrou\gi):00914 [6]     1194    @a      ldd   image_set,u                   ; orientation can only change on specific frames
3A66 1083A360         (C:\Users\bhrou\gi):00915 [5]     1199            cmpd  #Img_tk_036
3A6A 270F             (C:\Users\bhrou\gi):00916 [3]     1202            beq   @d
3A6C 1083A45B         (C:\Users\bhrou\gi):00917 [5]     1207            cmpd  #Img_tk_044
3A70 2709             (C:\Users\bhrou\gi):00918 [3]     1210            beq   @d       
3A72 1083A012         (C:\Users\bhrou\gi):00919 [5]     1215            cmpd  #Img_tk_002
3A76 2703             (C:\Users\bhrou\gi):00920 [3]     1218            beq   @d
3A78 7E774C           (C:\Users\bhrou\gi):00921 [4]     1222            jmp   DisplaySprite
3A7B 73752D           (C:\Users\bhrou\gi):00922 [7]     1229    @d      com   HalfPipe_Seq_UpdFlip
3A7E F6752C           (C:\Users\bhrou\gi):00923 [5]     1234            ldb   HalfPipe_Seq
3A81 F7752E           (C:\Users\bhrou\gi):00924 [5]     1239            stb   HalfPipe_Seq_UpdFlip+1
3A84 7E774C           (C:\Users\bhrou\gi):00925 [4]     1243            jmp   DisplaySprite
                      (C:\Users\bhrou\gi):00926                         
3A87                  (C:\Users\bhrou\gi):00927                 Ani_SpecialStageTrack
3A87 A077             (C:\Users\bhrou\gi):00928                         fdb   Ani_TurnThenRise
3A89 A0C3             (C:\Users\bhrou\gi):00929                         fdb   Ani_TurnThenDrop
3A8B A03B             (C:\Users\bhrou\gi):00930                         fdb   Ani_TurnThenStraight
3A8D A001             (C:\Users\bhrou\gi):00931                         fdb   Ani_Straight
3A8F A023             (C:\Users\bhrou\gi):00932                         fdb   Ani_StraightThenTurn        
                      (C:\Users\bhrou\gi):00933                                                                       
