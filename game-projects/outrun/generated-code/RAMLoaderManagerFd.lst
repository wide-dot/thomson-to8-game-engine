                      (C:\Users\bhrou\gi):00001         ********************************************************************************
                      (C:\Users\bhrou\gi):00002         * Gestionnaire de chargement du RAM Loader (TO8 Thomson) - Benoit Rousseau 07/11/2020
                      (C:\Users\bhrou\gi):00003         * ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00004         *
                      (C:\Users\bhrou\gi):00005         * Copie en page 0 le programme de chargement de RAM, ainsi que les index
                      (C:\Users\bhrou\gi):00006         * des donnees du niveau de jeu a charger
                      (C:\Users\bhrou\gi):00007         *
                      (C:\Users\bhrou\gi):00008         * input REG : [a] Game Mode to load
                      (C:\Users\bhrou\gi):00009         *             [b] Current Game Mode
                      (C:\Users\bhrou\gi):00010         *
                      (C:\Users\bhrou\gi):00011         ********************************************************************************
                      (C:\Users\bhrou\gi):00012         
                      (C:\Users\bhrou\gi):00013                 INCLUDE "RAMLoaderFd.glb"
     0008             (  RAMLoaderFd.glb):00001         anim EQU $0008
     000E             (  RAMLoaderFd.glb):00002         anim_flags EQU $000E
     000C             (  RAMLoaderFd.glb):00003         anim_frame EQU $000C
     000D             (  RAMLoaderFd.glb):00004         anim_frame_duration EQU $000D
     0001             (  RAMLoaderFd.glb):00005         anim_link_mask EQU $0001
     000B             (  RAMLoaderFd.glb):00006         buf_bgdata EQU $000B
     0007             (  RAMLoaderFd.glb):00007         buf_erase_nb_cell EQU $0007
     0009             (  RAMLoaderFd.glb):00008         buf_erase_routine EQU $0009
     0008             (  RAMLoaderFd.glb):00009         buf_page_erase_routine EQU $0008
     0005             (  RAMLoaderFd.glb):00010         buf_prev_mapping_frame EQU $0005
     0013             (  RAMLoaderFd.glb):00011         buf_prev_render_flags EQU $0013
     000F             (  RAMLoaderFd.glb):00012         buf_prev_x1_pixel EQU $000F
     0011             (  RAMLoaderFd.glb):00013         buf_prev_x2_pixel EQU $0011
     000D             (  RAMLoaderFd.glb):00014         buf_prev_x_pixel EQU $000D
     000F             (  RAMLoaderFd.glb):00015         buf_prev_xy1_pixel EQU $000F
     0011             (  RAMLoaderFd.glb):00016         buf_prev_xy2_pixel EQU $0011
     000D             (  RAMLoaderFd.glb):00017         buf_prev_xy_pixel EQU $000D
     0010             (  RAMLoaderFd.glb):00018         buf_prev_y1_pixel EQU $0010
     0012             (  RAMLoaderFd.glb):00019         buf_prev_y2_pixel EQU $0012
     000E             (  RAMLoaderFd.glb):00020         buf_prev_y_pixel EQU $000E
     0000             (  RAMLoaderFd.glb):00021         buf_priority EQU $0000
     0003             (  RAMLoaderFd.glb):00022         buf_priority_next_obj EQU $0003
     0001             (  RAMLoaderFd.glb):00023         buf_priority_prev_obj EQU $0001
     0001             (  RAMLoaderFd.glb):00024         CONSTANTS_ASM EQU $0001
     6049             (  RAMLoaderFd.glb):00025         dk_drive EQU $6049
     604C             (  RAMLoaderFd.glb):00026         dk_sector EQU $604C
     604A             (  RAMLoaderFd.glb):00027         dk_track EQU $604A
     604B             (  RAMLoaderFd.glb):00028         dk_track_lsb EQU $604B
     604F             (  RAMLoaderFd.glb):00029         dk_write_location EQU $604F
     9F00             (  RAMLoaderFd.glb):00030         dp EQU $9F00
     9FB1             (  RAMLoaderFd.glb):00031         dp_engine EQU $9FB1
     9F95             (  RAMLoaderFd.glb):00032         dp_extreg EQU $9F95
     0001             (  RAMLoaderFd.glb):00033         draw_routine EQU $0001
     0006             (  RAMLoaderFd.glb):00034         erase_nb_cell EQU $0006
     0004             (  RAMLoaderFd.glb):00035         erase_routine EQU $0004
     0026             (  RAMLoaderFd.glb):00036         ext_variables EQU $0026
     4145             (  RAMLoaderFd.glb):00037         fill EQU $4145
     9FA7             (  RAMLoaderFd.glb):00038         glb_a0 EQU $9FA7
     9FA8             (  RAMLoaderFd.glb):00039         glb_a0_b EQU $9FA8
     9FA9             (  RAMLoaderFd.glb):00040         glb_a1 EQU $9FA9
     9FAA             (  RAMLoaderFd.glb):00041         glb_a1_b EQU $9FAA
     9FAB             (  RAMLoaderFd.glb):00042         glb_a2 EQU $9FAB
     9FAC             (  RAMLoaderFd.glb):00043         glb_a2_b EQU $9FAC
     9FAD             (  RAMLoaderFd.glb):00044         glb_a3 EQU $9FAD
     9FAE             (  RAMLoaderFd.glb):00045         glb_a3_b EQU $9FAE
     9FAF             (  RAMLoaderFd.glb):00046         glb_a4 EQU $9FAF
     9FB0             (  RAMLoaderFd.glb):00047         glb_a4_b EQU $9FB0
     9FD5             (  RAMLoaderFd.glb):00048         glb_alphaTiles EQU $9FD5
     9FEC             (  RAMLoaderFd.glb):00049         glb_camera_height EQU $9FEC
     9FD6             (  RAMLoaderFd.glb):00050         glb_camera_move EQU $9FD6
     9FEA             (  RAMLoaderFd.glb):00051         glb_camera_width EQU $9FEA
     9FDE             (  RAMLoaderFd.glb):00052         glb_camera_x_max_pos EQU $9FDE
     9FE2             (  RAMLoaderFd.glb):00053         glb_camera_x_min_pos EQU $9FE2
     9FDA             (  RAMLoaderFd.glb):00054         glb_camera_x_offset EQU $9FDA
     9FE6             (  RAMLoaderFd.glb):00055         glb_camera_x_pos EQU $9FE6
     9FE8             (  RAMLoaderFd.glb):00056         glb_camera_x_pos_coarse EQU $9FE8
     9FDC             (  RAMLoaderFd.glb):00057         glb_camera_y_max_pos EQU $9FDC
     9FE0             (  RAMLoaderFd.glb):00058         glb_camera_y_min_pos EQU $9FE0
     9FD8             (  RAMLoaderFd.glb):00059         glb_camera_y_offset EQU $9FD8
     9FE4             (  RAMLoaderFd.glb):00060         glb_camera_y_pos EQU $9FE4
     9F95             (  RAMLoaderFd.glb):00061         glb_d0 EQU $9F95
     9F96             (  RAMLoaderFd.glb):00062         glb_d0_b EQU $9F96
     9F98             (  RAMLoaderFd.glb):00063         glb_d1 EQU $9F98
     9F99             (  RAMLoaderFd.glb):00064         glb_d1_b EQU $9F99
     9F9B             (  RAMLoaderFd.glb):00065         glb_d2 EQU $9F9B
     9F9C             (  RAMLoaderFd.glb):00066         glb_d2_b EQU $9F9C
     9F9E             (  RAMLoaderFd.glb):00067         glb_d3 EQU $9F9E
     9F9F             (  RAMLoaderFd.glb):00068         glb_d3_b EQU $9F9F
     9FA1             (  RAMLoaderFd.glb):00069         glb_d4 EQU $9FA1
     9FA2             (  RAMLoaderFd.glb):00070         glb_d4_b EQU $9FA2
     9FA3             (  RAMLoaderFd.glb):00071         glb_d5 EQU $9FA3
     9FA4             (  RAMLoaderFd.glb):00072         glb_d5_b EQU $9FA4
     9FA5             (  RAMLoaderFd.glb):00073         glb_d6 EQU $9FA5
     9FA6             (  RAMLoaderFd.glb):00074         glb_d6_b EQU $9FA6
     9FD7             (  RAMLoaderFd.glb):00075         glb_force_sprite_refresh EQU $9FD7
     9FD1             (  RAMLoaderFd.glb):00076         glb_Page EQU $9FD1
     9FF4             (  RAMLoaderFd.glb):00077         glb_ram_end EQU $9FF4
     9FF2             (  RAMLoaderFd.glb):00078         glb_register_s EQU $9FF2
     9FF0             (  RAMLoaderFd.glb):00079         glb_screen_location_1 EQU $9FF0
     9FEE             (  RAMLoaderFd.glb):00080         glb_screen_location_2 EQU $9FEE
     9F00             (  RAMLoaderFd.glb):00081         glb_system_stack EQU $9F00
     9FD3             (  RAMLoaderFd.glb):00082         glb_timer EQU $9FD3
     9FD2             (  RAMLoaderFd.glb):00083         glb_timer_frame EQU $9FD2
     9FD3             (  RAMLoaderFd.glb):00084         glb_timer_minute EQU $9FD3
     9FD4             (  RAMLoaderFd.glb):00085         glb_timer_second EQU $9FD4
     0000             (  RAMLoaderFd.glb):00086         id EQU $0000
     0006             (  RAMLoaderFd.glb):00087         image_center_offset EQU $0006
     0010             (  RAMLoaderFd.glb):00088         image_set EQU $0010
     0004             (  RAMLoaderFd.glb):00089         image_subset_x1_offset EQU $0004
     0005             (  RAMLoaderFd.glb):00090         image_subset_y1_offset EQU $0005
     0004             (  RAMLoaderFd.glb):00091         image_x_size EQU $0004
     0005             (  RAMLoaderFd.glb):00092         image_y_size EQU $0005
     0008             (  RAMLoaderFd.glb):00093         nb_priority_levels EQU $0008
     0000             (  RAMLoaderFd.glb):00094         next_object EQU 0 ; <<incomplete>>
     0026             (  RAMLoaderFd.glb):00095         object_base_size EQU $0026
     0000             (  RAMLoaderFd.glb):00096         object_rsvd EQU 0 ; <<incomplete>>
     003B             (  RAMLoaderFd.glb):00097         object_rsvd_size EQU $003B
     0000             (  RAMLoaderFd.glb):00098         object_size EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00099         page_draw_routine EQU $0000
     0003             (  RAMLoaderFd.glb):00100         page_erase_routine EQU $0003
     000A             (  RAMLoaderFd.glb):00101         prev_anim EQU $000A
     0007             (  RAMLoaderFd.glb):00102         priority EQU $0007
     40C1             (  RAMLoaderFd.glb):00103         RAMLoader EQU $40C1
     40D0             (  RAMLoaderFd.glb):00104         RAMLoader_continue EQU $40D0
     0002             (  RAMLoaderFd.glb):00105         render_flags EQU $0002
     0080             (  RAMLoaderFd.glb):00106         render_hide_mask EQU $0080
     0004             (  RAMLoaderFd.glb):00107         render_overlay_mask EQU $0004
     0008             (  RAMLoaderFd.glb):00108         render_playfieldcoord_mask EQU $0008
     0040             (  RAMLoaderFd.glb):00109         render_subobjects_mask EQU $0040
     0020             (  RAMLoaderFd.glb):00110         render_todelete_mask EQU $0020
     0010             (  RAMLoaderFd.glb):00111         render_xloop_mask EQU $0010
     0001             (  RAMLoaderFd.glb):00112         render_xmirror_mask EQU $0001
     0002             (  RAMLoaderFd.glb):00113         render_ymirror_mask EQU $0002
     40DF             (  RAMLoaderFd.glb):00114         RL_Continue EQU $40DF
     4103             (  RAMLoaderFd.glb):00115         RL_DKCO EQU $4103
     411E             (  RAMLoaderFd.glb):00116         RL_DKContinue EQU $411E
     4122             (  RAMLoaderFd.glb):00117         RL_DKDernierBloc EQU $4122
     4131             (  RAMLoaderFd.glb):00118         RL_NegOffset EQU $4131
     4135             (  RAMLoaderFd.glb):00119         RL_Page EQU $4135
     4149             (  RAMLoaderFd.glb):00120         RL_RAM_index EQU $4149
     0022             (  RAMLoaderFd.glb):00121         routine EQU $0022
     0025             (  RAMLoaderFd.glb):00122         routine_quaternary EQU $0025
     0023             (  RAMLoaderFd.glb):00123         routine_secondary EQU $0023
     0024             (  RAMLoaderFd.glb):00124         routine_tertiary EQU $0024
     0000             (  RAMLoaderFd.glb):00125         rsv_bgdata_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00126         rsv_bgdata_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00127         rsv_buffer_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00128         rsv_buffer_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00129         rsv_draw_routine EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00130         rsv_erase_nb_cell EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00131         rsv_erase_routine EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00132         rsv_image_center_offset EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00133         rsv_image_subset EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00134         rsv_mapping_frame EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00135         rsv_page_draw_routine EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00136         rsv_page_erase_routine EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00137         rsv_prev_anim EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00138         rsv_prev_erase_nb_cell_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00139         rsv_prev_erase_nb_cell_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00140         rsv_prev_erase_routine_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00141         rsv_prev_erase_routine_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00142         rsv_prev_mapping_frame_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00143         rsv_prev_mapping_frame_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00144         rsv_prev_page_erase_routine_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00145         rsv_prev_page_erase_routine_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00146         rsv_prev_render_flags_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00147         rsv_prev_render_flags_1 EQU 0 ; <<incomplete>>
     0080             (  RAMLoaderFd.glb):00148         rsv_prev_render_onscreen_mask EQU $0080
     0001             (  RAMLoaderFd.glb):00149         rsv_prev_render_overlay_mask EQU $0001
     0000             (  RAMLoaderFd.glb):00150         rsv_prev_x1_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00151         rsv_prev_x1_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00152         rsv_prev_x2_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00153         rsv_prev_x2_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00154         rsv_prev_x_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00155         rsv_prev_x_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00156         rsv_prev_xy1_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00157         rsv_prev_xy1_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00158         rsv_prev_xy2_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00159         rsv_prev_xy2_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00160         rsv_prev_xy_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00161         rsv_prev_xy_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00162         rsv_prev_y1_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00163         rsv_prev_y1_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00164         rsv_prev_y2_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00165         rsv_prev_y2_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00166         rsv_prev_y_pixel_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00167         rsv_prev_y_pixel_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00168         rsv_priority_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00169         rsv_priority_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00170         rsv_priority_next_obj_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00171         rsv_priority_next_obj_1 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00172         rsv_priority_prev_obj_0 EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00173         rsv_priority_prev_obj_1 EQU 0 ; <<incomplete>>
     0001             (  RAMLoaderFd.glb):00174         rsv_render_checkrefresh_mask EQU $0001
     0004             (  RAMLoaderFd.glb):00175         rsv_render_displaysprite_mask EQU $0004
     0002             (  RAMLoaderFd.glb):00176         rsv_render_erasesprite_mask EQU $0002
     0000             (  RAMLoaderFd.glb):00177         rsv_render_flags EQU 0 ; <<incomplete>>
     0080             (  RAMLoaderFd.glb):00178         rsv_render_onscreen_mask EQU $0080
     0008             (  RAMLoaderFd.glb):00179         rsv_render_outofrange_mask EQU $0008
     0000             (  RAMLoaderFd.glb):00180         rsv_x1_pixel EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00181         rsv_x2_pixel EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00182         rsv_xy1_pixel EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00183         rsv_xy2_pixel EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00184         rsv_y1_pixel EQU 0 ; <<incomplete>>
     0000             (  RAMLoaderFd.glb):00185         rsv_y2_pixel EQU 0 ; <<incomplete>>
     0005             (  RAMLoaderFd.glb):00186         run_object_next EQU $0005
     0003             (  RAMLoaderFd.glb):00187         run_object_prev EQU $0003
     00E3             (  RAMLoaderFd.glb):00188         screen_bottom EQU $00E3
     00C8             (  RAMLoaderFd.glb):00189         screen_height EQU $00C8
     0030             (  RAMLoaderFd.glb):00190         screen_left EQU $0030
     00CF             (  RAMLoaderFd.glb):00191         screen_right EQU $00CF
     001C             (  RAMLoaderFd.glb):00192         screen_top EQU $001C
     00A0             (  RAMLoaderFd.glb):00193         screen_width EQU $00A0
     0003             (  RAMLoaderFd.glb):00194         sound_end_addr EQU $0003
     0005             (  RAMLoaderFd.glb):00195         sound_meta_size EQU $0005
     0000             (  RAMLoaderFd.glb):00196         sound_page EQU $0000
     0001             (  RAMLoaderFd.glb):00197         sound_start_addr EQU $0001
     4000             (  RAMLoaderFd.glb):00198         start EQU $4000
     000E             (  RAMLoaderFd.glb):00199         status_flags EQU $000E
     0001             (  RAMLoaderFd.glb):00200         status_xflip_mask EQU $0001
     0002             (  RAMLoaderFd.glb):00201         status_yflip_mask EQU $0002
     0001             (  RAMLoaderFd.glb):00202         subtype EQU $0001
     001E             (  RAMLoaderFd.glb):00203         x_acl EQU $001E
     0018             (  RAMLoaderFd.glb):00204         x_pixel EQU $0018
     0012             (  RAMLoaderFd.glb):00205         x_pos EQU $0012
     0014             (  RAMLoaderFd.glb):00206         x_sub EQU $0014
     001A             (  RAMLoaderFd.glb):00207         x_vel EQU $001A
     0018             (  RAMLoaderFd.glb):00208         xy_pixel EQU $0018
     0020             (  RAMLoaderFd.glb):00209         y_acl EQU $0020
     0019             (  RAMLoaderFd.glb):00210         y_pixel EQU $0019
     0015             (  RAMLoaderFd.glb):00211         y_pos EQU $0015
     0017             (  RAMLoaderFd.glb):00212         y_sub EQU $0017
     001C             (  RAMLoaderFd.glb):00213         y_vel EQU $001C
     404D             (  RAMLoaderFd.glb):00214         zx0_code EQU $404D
     404B             (  RAMLoaderFd.glb):00215         zx0_copy EQU $404B
     4000             (  RAMLoaderFd.glb):00216         zx0_decompress EQU $4000
     0001             (  RAMLoaderFd.glb):00217         ZX0_DISABLE_DISABLING_INTERRUPTS EQU $0001
     0040             (  RAMLoaderFd.glb):00218         zx0_dp EQU $0040
     0040             (  RAMLoaderFd.glb):00219         zx0_dp_end EQU $0040
     400F             (  RAMLoaderFd.glb):00220         zx0_eof EQU $400F
     4062             (  RAMLoaderFd.glb):00221         zx0_literals EQU $4062
     4011             (  RAMLoaderFd.glb):00222         zx0_new_offset EQU $4011
     4050             (  RAMLoaderFd.glb):00223         zx0_offset EQU $4050
     40A0             (  RAMLoaderFd.glb):00224         zx0_reload EQU $40A0
     40C0             (  RAMLoaderFd.glb):00225         zx0_rts EQU $40C0
                      (C:\Users\bhrou\gi):00014                 
                      (C:\Users\bhrou\gi):00015                 org $0000
                      (C:\Users\bhrou\gi):00016         
0000                  (C:\Users\bhrou\gi):00017         RAMLoaderManager
                      (C:\Users\bhrou\gi):00018         
                      (C:\Users\bhrou\gi):00019         * Copie en page 0a des donnees du mode a charger
                      (C:\Users\bhrou\gi):00020         * les groupes de 7 octets sont recopiees a l'envers
                      (C:\Users\bhrou\gi):00021         * la fin des donnees est marquee par un octet negatif ($FF par exemple)
                      (C:\Users\bhrou\gi):00022         ************************************************************            
0000 10FF005A         (C:\Users\bhrou\gi):00023                 sts   RLM_CopyCode_restore_s+2 ; sauve s
0004 CE01CE           (C:\Users\bhrou\gi):00024                 ldu   #Gm_Index
0007 58               (C:\Users\bhrou\gi):00025                 aslb
0008 AEC5             (C:\Users\bhrou\gi):00026                 ldx   b,u                      ; load address of current game mode data        
000A 48               (C:\Users\bhrou\gi):00027                 asla
000B EEC6             (C:\Users\bhrou\gi):00028                 ldu   a,u                      ; load address of new game mode data
                      (C:\Users\bhrou\gi):00029                 
000D 10EE5E           (C:\Users\bhrou\gi):00030                 lds   -2,u                     ; load destination address
0010 5D               (C:\Users\bhrou\gi):00031                 tstb
0011 2B23             (C:\Users\bhrou\gi):00032                 bmi   RLM_SetPage              ; negative value means first load so nothing to compare
                      (C:\Users\bhrou\gi):00033                 
0013                  (C:\Users\bhrou\gi):00034         RLM_SkipCommon        
0013 ECC4             (C:\Users\bhrou\gi):00035                 ldd   ,u
0015 10A384           (C:\Users\bhrou\gi):00036                 cmpd  ,x   
0018 261C             (C:\Users\bhrou\gi):00037                 bne   RLM_SetPage
001A EC42             (C:\Users\bhrou\gi):00038                 ldd   2,u
001C 10A302           (C:\Users\bhrou\gi):00039                 cmpd  2,x   
001F 2615             (C:\Users\bhrou\gi):00040                 bne   RLM_SetPage
0021 EC44             (C:\Users\bhrou\gi):00041                 ldd   4,u
0023 10A304           (C:\Users\bhrou\gi):00042                 cmpd  4,x   
0026 260E             (C:\Users\bhrou\gi):00043                 bne   RLM_SetPage
0028 A646             (C:\Users\bhrou\gi):00044                 lda   6,u
002A A106             (C:\Users\bhrou\gi):00045                 cmpa  6,x   
002C 2608             (C:\Users\bhrou\gi):00046                 bne   RLM_SetPage                        
002E 3279             (C:\Users\bhrou\gi):00047                 leas  -7,s                     ; adjust destination address
0030 3347             (C:\Users\bhrou\gi):00048                 leau  7,u                      ; adjust new Game Mode source address
0032 3007             (C:\Users\bhrou\gi):00049                 leax  7,x                      ; adjust current Game Mode source address
0034 20DD             (C:\Users\bhrou\gi):00050                 bra   RLM_SkipCommon
                      (C:\Users\bhrou\gi):00051                 
                      (C:\Users\bhrou\gi):00052         * Positionnement de la page 0a en zone 4000-5FFF
                      (C:\Users\bhrou\gi):00053         ***********************************************************
0036                  (C:\Users\bhrou\gi):00054         RLM_SetPage
0036 F6E7C3           (C:\Users\bhrou\gi):00055                 ldb   $E7C3                    ; charge l'id de la demi-Page 0 en espace ecran
0039 C4FE             (C:\Users\bhrou\gi):00056                 andb  #$FE                     ; positionne bit0=0 pour page 0 RAMA
003B F7E7C3           (C:\Users\bhrou\gi):00057                 stb   $E7C3                    ; dans l'espace ecran        
                      (C:\Users\bhrou\gi):00058                 
003E 86FF             (C:\Users\bhrou\gi):00059                 lda   #$FF                     ; ecriture balise de fin
0040 3402             (C:\Users\bhrou\gi):00060                 pshs  a                        ; pour GameModeEngine
0042                  (C:\Users\bhrou\gi):00061         RLM_CopyData
0042 373E             (C:\Users\bhrou\gi):00062                 pulu  d,x,y,dp                 ; on lit 7 octets
0044 343E             (C:\Users\bhrou\gi):00063                 pshs  d,x,y,dp                 ; on ecrit 7 octets
0046 4D               (C:\Users\bhrou\gi):00064                 tsta                           ; balise de fin dans REG A
0047 2AF9             (C:\Users\bhrou\gi):00065                 bpl   RLM_CopyData             ; non => boucle
0049 3267             (C:\Users\bhrou\gi):00066                 leas  7,s                      ; on remote de 7 car le dernier bloc est une balise de fin
                      (C:\Users\bhrou\gi):00067         
                      (C:\Users\bhrou\gi):00068         * Copie en page 0a du code RAMLoader
                      (C:\Users\bhrou\gi):00069         * les groupes de 7 octets sont recopiees a l'envers, le builder va inverser
                      (C:\Users\bhrou\gi):00070         * les donnees a l'avance on gagne un leas dans la boucle.
                      (C:\Users\bhrou\gi):00071         ************************************************************    
004B CE005F           (C:\Users\bhrou\gi):00072                 ldu   #RAMLoaderBin            ; source
004E                  (C:\Users\bhrou\gi):00073         RLM_CopyCode
004E 373E             (C:\Users\bhrou\gi):00074                 pulu  d,x,y,dp                 ; on lit 7 octets
0050 343E             (C:\Users\bhrou\gi):00075                 pshs  d,x,y,dp                 ; on ecrit 7 octets
0052 118C4000         (C:\Users\bhrou\gi):00076                 cmps  #$4000                   ; fin ?
0056 26F6             (C:\Users\bhrou\gi):00077                 bne   RLM_CopyCode             ; non => boucle
0058                  (C:\Users\bhrou\gi):00078         RLM_CopyCode_restore_s
0058 10CE0000         (C:\Users\bhrou\gi):00079                 lds   #0                       ; restaure s
                      (C:\Users\bhrou\gi):00080                 
                      (C:\Users\bhrou\gi):00081         * Execution du RAMLoader en page 0a
                      (C:\Users\bhrou\gi):00082         ************************************************************         
005C 7E40C1           (C:\Users\bhrou\gi):00083                 jmp   RAMLoader     
                      (C:\Users\bhrou\gi):00084         
                      (C:\Users\bhrou\gi):00085         * ==============================================================================
                      (C:\Users\bhrou\gi):00086         * RAMLoader
                      (C:\Users\bhrou\gi):00087         * ==============================================================================
005F                  (C:\Users\bhrou\gi):00088         RAMLoaderBin
005F 40208B00000000C4 (C:\Users\bhrou\gi):00089                 INCLUDEBIN "RAMLoaderFd.bin"
     33A4BD4000350086
     00B7E7E53033C901
     0033C9FE23DBB641
     3427084FDE4F1183
     000023040F4B0C49
     0C4C0C4B964B814F
     81102310860197BD
     E82A0C4C964C3634
     40860297483726B7
     4134F74100DD4AC6
     00DD4F8401C47F97
     49864CF74124E6C0
     1D9F1F8B7E610097
     2A0B10CE9F008649
     86601F8BECC1CA60
     F7E7E6CE414925F4
     39F6E7E5094E4826
     03A682485948240C
     4859241648594824
     118249241B485948
     25F7D74F20ABA648
     594826028D062603
     A682492409258AC6
     010F4E48E7C2313F
     26F848D74F109E4E
     E6824826028D2B25
     F7A6824924094859
     C6010F4E482603F8
     8EFFFF4825AFE6A2
     E7C2301F268EFFFF
     31C9FFFF4F26020C
     4E9F5D028D5E25F7
     5CD7012409485948
     2626020C52D753C6
     56D752E682565CF7
     0F4E5D27E65A5948
     26028D7E2503A682
     492409485335AFC6
     01482652CC80401F
     9B20342FCC0001FD
     40
                      (C:\Users\bhrou\gi):00090                 INCLUDE "BuilderFileIndexFd.asm"
                      (BuilderFileIndexF):00001         * Generated Code
                      (BuilderFileIndexF):00002         
                      (BuilderFileIndexF):00003         * structure: sector, nb sector, drive (bit 7) track (bit 6-0), end offset, ram dest page, ram dest end addr. hb, ram dest end addr. lb
01A8 416D             (BuilderFileIndexF):00004                 fdb   RL_RAM_index+36
01AA                  (BuilderFileIndexF):00005         gm_game
01AA 031300A804E000   (BuilderFileIndexF):00006                 fcb   $03,$13,$00,$A8,$04,$E0,$00
01B1 061801B404BC35   (BuilderFileIndexF):00007                 fcb   $06,$18,$01,$B4,$04,$BC,$35
01B8 0E0C02AC05E000   (BuilderFileIndexF):00008                 fcb   $0E,$0C,$02,$AC,$05,$E0,$00
01BF 0A12037305B770   (BuilderFileIndexF):00009                 fcb   $0A,$12,$03,$73,$05,$B7,$70
01C6 0C08049301B981   (BuilderFileIndexF):00010                 fcb   $0C,$08,$04,$93,$01,$B9,$81
01CD FF               (BuilderFileIndexF):00011                 fcb   $FF
01CE                  (BuilderFileIndexF):00012         Gm_Index
01CE 01AA             (BuilderFileIndexF):00013                 fdb   gm_game
