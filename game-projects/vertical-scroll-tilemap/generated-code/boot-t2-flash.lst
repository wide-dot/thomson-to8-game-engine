                      (/home/robin/githu):00001         ********************************************************************************
                      (/home/robin/githu):00002         * Boot loader T2Loader - Benoit Rousseau 29/04/2021
                      (/home/robin/githu):00003         * ------------------------------------------------------------------------------
                      (/home/robin/githu):00004         * 
                      (/home/robin/githu):00005         * Description
                      (/home/robin/githu):00006         * -----------
                      (/home/robin/githu):00007         * Permet de programmer une MEGAROM T.2 depuis SDDRIVE avec un seul fichier SD
                      (/home/robin/githu):00008         *
                      (/home/robin/githu):00009         ********************************************************************************
                      (/home/robin/githu):00010                 INCLUDE "./engine/macros.asm"          
0000                  (./engine/macros.a):00001         _ldd MACRO
                      (./engine/macros.a):00002                 ldd   #((\1)*256)+\2
                      (./engine/macros.a):00003          ENDM
                      (./engine/macros.a):00004          
0000                  (./engine/macros.a):00005         _ldx MACRO
                      (./engine/macros.a):00006                 ldx   #((\1)*256)+\2
                      (./engine/macros.a):00007          ENDM
                      (./engine/macros.a):00008          
0000                  (./engine/macros.a):00009         _ldy MACRO
                      (./engine/macros.a):00010                 ldy   #((\1)*256)+\2
                      (./engine/macros.a):00011          ENDM
                      (./engine/macros.a):00012          
0000                  (./engine/macros.a):00013         _ldu MACRO
                      (./engine/macros.a):00014                 ldu   #((\1)*256)+\2
                      (./engine/macros.a):00015          ENDM  
                      (./engine/macros.a):00016          
0000                  (./engine/macros.a):00017         _lds MACRO
                      (./engine/macros.a):00018                 lds   #((\1)*256)+\2
                      (./engine/macros.a):00019          ENDM   
                      (./engine/macros.a):00020          
0000                  (./engine/macros.a):00021         _SetCartPageA MACRO
                      (./engine/macros.a):00022          IFDEF T2
                      (./engine/macros.a):00023                 jsr   SetCartPageA
                      (./engine/macros.a):00024          ELSE
                      (./engine/macros.a):00025                 sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00026          ENDC
                      (./engine/macros.a):00027          ENDM      
                      (./engine/macros.a):00028          
0000                  (./engine/macros.a):00029         _GetCartPageA MACRO
                      (./engine/macros.a):00030          IFDEF T2
                      (./engine/macros.a):00031                 jsr   GetCartPageA
                      (./engine/macros.a):00032          ELSE
                      (./engine/macros.a):00033                 lda   $E7E6
                      (./engine/macros.a):00034          ENDC
                      (./engine/macros.a):00035          ENDM
                      (./engine/macros.a):00036         
0000                  (./engine/macros.a):00037         _SetCartPageB MACRO
                      (./engine/macros.a):00038          IFDEF T2
                      (./engine/macros.a):00039                 jsr   SetCartPageB
                      (./engine/macros.a):00040          ELSE
                      (./engine/macros.a):00041                 stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00042          ENDC
                      (./engine/macros.a):00043          ENDM      
                      (./engine/macros.a):00044          
0000                  (./engine/macros.a):00045         _GetCartPageB MACRO
                      (./engine/macros.a):00046          IFDEF T2
                      (./engine/macros.a):00047                 jsr   GetCartPageB
                      (./engine/macros.a):00048          ELSE
                      (./engine/macros.a):00049                 ldb   $E7E6
                      (./engine/macros.a):00050          ENDC
                      (./engine/macros.a):00051          ENDM     
                      (./engine/macros.a):00052         
0000                  (./engine/macros.a):00053         _RunObjectSwap MACRO
                      (./engine/macros.a):00054                 ; param 1 : ObjID_
                      (./engine/macros.a):00055                 ; param 2 : Object data RAM address
                      (./engine/macros.a):00056                 ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00057                 lda   Obj_Index_Page+\1
                      (./engine/macros.a):00058                 sta   PSR_Page   
                      (./engine/macros.a):00059                 ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00060                 std   PSR_Address       
                      (./engine/macros.a):00061                 ldu   \2             
                      (./engine/macros.a):00062                 jsr   RunPgSubRoutine
                      (./engine/macros.a):00063          ENDM    
                      (./engine/macros.a):00064         
0000                  (./engine/macros.a):00065         _RunObjectSwapRoutine MACRO
                      (./engine/macros.a):00066                 ; param 1 : ObjID_
                      (./engine/macros.a):00067                 ; param 2 : Object routine
                      (./engine/macros.a):00068                 ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00069                 lda   Obj_Index_Page+\1   
                      (./engine/macros.a):00070                 sta   PSR_Page   
                      (./engine/macros.a):00071                 ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00072                 std   PSR_Address       
                      (./engine/macros.a):00073                 ldb   \2        
                      (./engine/macros.a):00074                 jsr   RunPgSubRoutine
                      (./engine/macros.a):00075          ENDM 
                      (./engine/macros.a):00076          
0000                  (./engine/macros.a):00077         _MountObject MACRO 
                      (./engine/macros.a):00078                 ; param 1 : ObjID_
                      (./engine/macros.a):00079                 ; manual mount of an object from the resident page 1
                      (./engine/macros.a):00080                 lda   Obj_Index_Page+\1
                      (./engine/macros.a):00081                 _SetCartPageA
                      (./engine/macros.a):00082                 ldx   Obj_Index_Address+2*\1
                      (./engine/macros.a):00083          ENDM
                      (./engine/macros.a):00084         
0000                  (./engine/macros.a):00085         _RunObject MACRO 
                      (./engine/macros.a):00086                 ; param 1 : ObjID_
                      (./engine/macros.a):00087                 ; param 2 : Object data RAM address
                      (./engine/macros.a):00088                 ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00089                 _MountObject \1
                      (./engine/macros.a):00090                 ldu   \2        
                      (./engine/macros.a):00091                 jsr   ,x
                      (./engine/macros.a):00092          ENDM
                      (./engine/macros.a):00093         
0000                  (./engine/macros.a):00094         _RunObjectRoutineA MACRO 
                      (./engine/macros.a):00095                 ; param 1 : ObjID_
                      (./engine/macros.a):00096                 ; param 2 : Object routine
                      (./engine/macros.a):00097                 ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00098                 ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00099                 _MountObject \1
                      (./engine/macros.a):00100                 lda   \2        
                      (./engine/macros.a):00101                 jsr   ,x
                      (./engine/macros.a):00102          ENDM
                      (./engine/macros.a):00103         
0000                  (./engine/macros.a):00104         _RunObjectRoutineB MACRO 
                      (./engine/macros.a):00105                 ; param 1 : ObjID_
                      (./engine/macros.a):00106                 ; param 2 : Object routine
                      (./engine/macros.a):00107                 ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00108                 ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00109                 _MountObject \1
                      (./engine/macros.a):00110                 ldb   \2        
                      (./engine/macros.a):00111                 jsr   ,x
                      (./engine/macros.a):00112          ENDM
                      (./engine/macros.a):00113         
0000                  (./engine/macros.a):00114         _SwitchScreenBuffer MACRO
                      (./engine/macros.a):00115                 ldb   $E7E5
                      (./engine/macros.a):00116                 eorb  #1                       ; switch btw page 2 and 3
                      (./engine/macros.a):00117                 orb   #$02
                      (./engine/macros.a):00118                 stb   $E7E5
                      (./engine/macros.a):00119          ENDM
                      (./engine/macros.a):00120         
0000                  (./engine/macros.a):00121         _asld MACRO
                      (./engine/macros.a):00122                 aslb
                      (./engine/macros.a):00123                 rola
                      (./engine/macros.a):00124          ENDM        
                      (./engine/macros.a):00125          
0000                  (./engine/macros.a):00126         _asrd MACRO
                      (./engine/macros.a):00127                 asra
                      (./engine/macros.a):00128                 rorb
                      (./engine/macros.a):00129          ENDM      
                      (./engine/macros.a):00130          
0000                  (./engine/macros.a):00131         _lsld MACRO
                      (./engine/macros.a):00132                 lslb
                      (./engine/macros.a):00133                 rola
                      (./engine/macros.a):00134          ENDM        
                      (./engine/macros.a):00135          
0000                  (./engine/macros.a):00136         _lsrd MACRO
                      (./engine/macros.a):00137                 lsra
                      (./engine/macros.a):00138                 rorb
                      (./engine/macros.a):00139          ENDM
                      (./engine/macros.a):00140          
0000                  (./engine/macros.a):00141         _rold MACRO
                      (./engine/macros.a):00142                 rolb
                      (./engine/macros.a):00143                 rola
                      (./engine/macros.a):00144          ENDM    
                      (./engine/macros.a):00145          
0000                  (./engine/macros.a):00146         _rord MACRO
                      (./engine/macros.a):00147                 rora
                      (./engine/macros.a):00148                 rorb
                      (./engine/macros.a):00149          ENDM
                      (./engine/macros.a):00150         
0000                  (./engine/macros.a):00151         _negd MACRO
                      (./engine/macros.a):00152                 nega
                      (./engine/macros.a):00153                 negb
                      (./engine/macros.a):00154                 sbca  #0
                      (./engine/macros.a):00155          ENDM
                      (./engine/macros.a):00156         
0000                  (./engine/macros.a):00157         _cba MACRO
                      (./engine/macros.a):00158                 pshs  b
                      (./engine/macros.a):00159                 cmpa  ,s+
                      (./engine/macros.a):00160          ENDM
                      (./engine/macros.a):00161         
0000                  (./engine/macros.a):00162         _aba MACRO
                      (./engine/macros.a):00163                 pshs  b
                      (./engine/macros.a):00164                 adda  ,s+
                      (./engine/macros.a):00165          ENDM
                      (./engine/macros.a):00166         
0000                  (./engine/macros.a):00167         _sba MACRO
                      (./engine/macros.a):00168                 pshs  b
                      (./engine/macros.a):00169                 suba  ,s+
                      (./engine/macros.a):00170          ENDM
                      (./engine/macros.a):00171         
0000                  (./engine/macros.a):00172         _cab MACRO
                      (./engine/macros.a):00173                 pshs  a
                      (./engine/macros.a):00174                 cmpb  ,s+
                      (./engine/macros.a):00175          ENDM
                      (./engine/macros.a):00176         
0000                  (./engine/macros.a):00177         _aab MACRO
                      (./engine/macros.a):00178                 pshs  a
                      (./engine/macros.a):00179                 addb  ,s+
                      (./engine/macros.a):00180          ENDM
                      (./engine/macros.a):00181         
0000                  (./engine/macros.a):00182         _sab MACRO
                      (./engine/macros.a):00183                 pshs  a
                      (./engine/macros.a):00184                 subb  ,s+
                      (./engine/macros.a):00185          ENDM
                      (./engine/macros.a):00186         
0000                  (./engine/macros.a):00187         _breakpoint MACRO
                      (./engine/macros.a):00188          IFDEF DEBUG
                      (./engine/macros.a):00189                 pshs  CC
                      (./engine/macros.a):00190                 sta   >$ffff
                      (./engine/macros.a):00191                 puls  CC
                      (./engine/macros.a):00192          ENDC
                      (./engine/macros.a):00193          ENDM
                      (/home/robin/githu):00011                 
                      (/home/robin/githu):00012                 org   $6200
                      (/home/robin/githu):00013         
6200                  (/home/robin/githu):00014         PalInit
     62               (/home/robin/githu):00015                 setdp $62
6200 8662             (/home/robin/githu):00016                 lda   #$62
6202 1F8B             (/home/robin/githu):00017                 tfr   a,dp                     * positionne la direct page a 62
                      (/home/robin/githu):00018                 
6204                  (/home/robin/githu):00019         PalFade        
6204 0F7E             (/home/robin/githu):00020                 clr   <pal_idx
6206 8E62EA           (/home/robin/githu):00021                 ldx   #pal_len                 * index limite de chargement pour couleur courante 
6209 CE62DE           (/home/robin/githu):00022                 ldu   #pal_from                * chargement pointeur valeur des couleurs actuelles
                      (/home/robin/githu):00023                 
620C                  (/home/robin/githu):00024         Vsync_1                                
620C 7DE7E7           (/home/robin/githu):00025                 tst   $E7E7                    * le faisceau n'est pas dans l'ecran utile
620F 2AFB             (/home/robin/githu):00026                 bpl   Vsync_1                  * tant que le bit est a 0 on boucle
6211                  (/home/robin/githu):00027         Vsync_2                                 
6211 7DE7E7           (/home/robin/githu):00028                 tst   $E7E7                    * le faisceau est dans l'ecran utile
6214 2BFB             (/home/robin/githu):00029                 bmi   Vsync_2                  * tant que le bit est a 1 on boucle
                      (/home/robin/githu):00030                 
6216 108E0140         (/home/robin/githu):00031                 ldy   #0320                    * 40 lignes * 8 cycles
621A                  (/home/robin/githu):00032         Tempo        
621A 313F             (/home/robin/githu):00033                 leay  -1,y
621C 26FC             (/home/robin/githu):00034                 bne   Tempo                    * tempo pour etre dans la bordure invisible   
                      (/home/robin/githu):00035                                                                                 
621E 0AF0             (/home/robin/githu):00036                 dec   <pal_cycles              * decremente le compteur du nombre de frame
6220 275E             (/home/robin/githu):00037                 beq   InitVideo                * si termine
                      (/home/robin/githu):00038                 
6222                  (/home/robin/githu):00039         PalRun
6222 A6C4             (/home/robin/githu):00040                 lda   ,u                                   * chargement de la composante verte et rouge
6224 94F1             (/home/robin/githu):00041                 anda  <pal_mask                * on efface la valeur vert ou rouge par masque
6226 C6FF             (/home/robin/githu):00042                 ldb   #$FF                     * composante verte et rouge couleur cible
6228 D4F1             (/home/robin/githu):00043                 andb  <pal_mask                * on efface la valeur vert ou rouge par masque
622A D778             (/home/robin/githu):00044                 stb   <pal_buffer              * on stocke la valeur cible pour comparaison
622C C611             (/home/robin/githu):00045                 ldb   #$11                     * preparation de la valeur d'increment de couleur
622E D4F1             (/home/robin/githu):00046                 andb  <pal_mask                * on efface la valeur non utile par masque
6230 D779             (/home/robin/githu):00047                 stb   <pal_buffer+1            * on stocke la valeur pour ADD ou SUB ulterieur
6232 9178             (/home/robin/githu):00048                 cmpa  <pal_buffer              * comparaison de la composante courante et cible
6234 270E             (/home/robin/githu):00049                 beq   PalVRSuivante            * si composante est egale a la cible on passe
6236 2206             (/home/robin/githu):00050                 bhi   PalVRDec                 * si la composante est superieure on branche
6238 A6C4             (/home/robin/githu):00051                 lda   ,u                       * on recharge la valeur avec vert et rouge
623A 9B79             (/home/robin/githu):00052                 adda  <pal_buffer+1            * on incremente la composante verte ou rouge
623C 2004             (/home/robin/githu):00053                 bra   PalVRSave                * on branche pour sauvegarder
623E                  (/home/robin/githu):00054         PalVRDec
623E A6C4             (/home/robin/githu):00055                 lda   ,u                       * on recharge la valeur avec vert et rouge
6240 9079             (/home/robin/githu):00056                 suba  <pal_buffer+1            * on decremente la composante verte ou rouge
6242                  (/home/robin/githu):00057         PalVRSave                             
6242 A7C4             (/home/robin/githu):00058                 sta   ,u                       * sauvegarde de la nouvelle valeur vert ou rouge
6244                  (/home/robin/githu):00059         PalVRSuivante                         
6244 03F1             (/home/robin/githu):00060                 com   <pal_mask                * inversion du masque pour traiter l'autre semioctet
6246 2BDA             (/home/robin/githu):00061                 bmi   PalRun                   * si on traite $F0 on branche sinon on continue
                      (/home/robin/githu):00062                     
6248                  (/home/robin/githu):00063         SetPalBleu
6248 E641             (/home/robin/githu):00064                 ldb   1,u                                   * chargement composante bleue courante
624A C10F             (/home/robin/githu):00065                 cmpb  #$0F                     * comparaison composante courante et cible
624C 2708             (/home/robin/githu):00066                 beq   SetPalNext               * si composante est egale a la cible on passe
624E 2203             (/home/robin/githu):00067                 bhi   SetPalBleudec            * si la composante est superieure on branche
6250 5C               (/home/robin/githu):00068                 incb                           * on incremente la composante bleue
6251 2001             (/home/robin/githu):00069                 bra   SetPalSaveBleu           * on branche pour sauvegarder
6253                  (/home/robin/githu):00070         SetPalBleudec                       
6253 5A               (/home/robin/githu):00071                 decb                           * on decremente la composante bleue
6254                  (/home/robin/githu):00072         SetPalSaveBleu                         
6254 E741             (/home/robin/githu):00073                 stb   1,u                      * sauvegarde de la nouvelle valeur bleue
                      (/home/robin/githu):00074                                                                                
6256                  (/home/robin/githu):00075         SetPalNext                             
6256 967E             (/home/robin/githu):00076                 lda   <pal_idx                 * Lecture index couleur
6258 B7E7DB           (/home/robin/githu):00077                 sta   $E7DB                    * selectionne l'indice de couleur a ecrire
625B 8B02             (/home/robin/githu):00078                 adda  #$02                     * increment de l'indice de couleur (x2)
625D 977E             (/home/robin/githu):00079                 sta   <pal_idx                 * stockage du nouvel index
625F A6C4             (/home/robin/githu):00080                 lda   ,u                       * chargement de la nouvelle couleur courante
6261 B7E7DA           (/home/robin/githu):00081                 sta   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
6264 F7E7DA           (/home/robin/githu):00082                 stb   $E7DA                    * positionne la nouvelle couleur (Bleu)
6267 967E             (/home/robin/githu):00083                 lda   <pal_idx                 * rechargement de l'index couleur
6269 A184             (/home/robin/githu):00084                 cmpa  ,x                       * comparaison avec l'index limite pour cette couleur
626B 26E9             (/home/robin/githu):00085                 bne   SetPalNext               * si inferieur on continue avec la meme couleur
626D 3342             (/home/robin/githu):00086                 leau  2,u                      * on avance le pointeur vers la nouvelle couleur
626F 3001             (/home/robin/githu):00087                 leax  1,x                      * on avance le pointeur vers la nouvelle limite
6271 8C62F0           (/home/robin/githu):00088                 cmpx  #end_pal_len             * test de fin de liste
6274 26AC             (/home/robin/githu):00089                 bne   PalRun                   * on reboucle si fin de liste pas atteinte
6276 208C             (/home/robin/githu):00090                 bra   PalFade
                      (/home/robin/githu):00091                 
6278                  (/home/robin/githu):00092         pal_buffer                             
6278 42               (/home/robin/githu):00093                 fcb   $42                      * B et buffer de comparaison
6279 41               (/home/robin/githu):00094                 fcb   $41                      * A et buffer de comparaison
627A 53               (/home/robin/githu):00095                 fcb   $53                      * S
627B 49               (/home/robin/githu):00096                 fcb   $49                      * I
627C 43               (/home/robin/githu):00097                 fcb   $43                      * C
627D 32               (/home/robin/githu):00098                 fcb   $32                      * 2
                      (/home/robin/githu):00099                                                                                
627E                  (/home/robin/githu):00100         pal_idx                                
627E 00               (/home/robin/githu):00101                 fcb   $00                      * index de la couleur courante dans le traitement
627F 00               (/home/robin/githu):00102                 fcb   $00                      * espace reserve pour somme de controle
                      (/home/robin/githu):00103            
                      (/home/robin/githu):00104         *-------------------------------------------------------------------------------
                      (/home/robin/githu):00105         * A partir de ce point le code doit commencer a l'adresse $6280
                      (/home/robin/githu):00106         *-------------------------------------------------------------------------------
                      (/home/robin/githu):00107         
                      (/home/robin/githu):00108         ********************************************************************************  
                      (/home/robin/githu):00109         * Initialisation du mode video
                      (/home/robin/githu):00110         ********************************************************************************
6280                  (/home/robin/githu):00111         InitVideo
6280 1A50             (/home/robin/githu):00112                 orcc  #$50                     * desactive les interruptions
6282 867B             (/home/robin/githu):00113                 lda   #$7B                     * passage en mode 160x200x16c
6284 B7E7DC           (/home/robin/githu):00114                 sta   $E7DC
                      (/home/robin/githu):00115           
                      (/home/robin/githu):00116         ********************************************************************************
                      (/home/robin/githu):00117         * Initialisation de la commutation de page pour l espace Donnees (Mode registre)
                      (/home/robin/githu):00118         ********************************************************************************
6287 F66081           (/home/robin/githu):00119                 ldb   $6081                    * $6081 est l'image "lisible" de $E7E7
628A CA10             (/home/robin/githu):00120                 orb   #$10                     * positionne le bit d4 a 1
628C F76081           (/home/robin/githu):00121                 stb   $6081                    * maintient une image coherente de $E7E7
628F F7E7E7           (/home/robin/githu):00122                 stb   $E7E7                    * bit d4 a 1 pour pages donnees en mode registre
                      (/home/robin/githu):00123          
                      (/home/robin/githu):00124         ********************************************************************************
                      (/home/robin/githu):00125         * Lecture des donnees depuis la disquette et decompression par exomizer
                      (/home/robin/githu):00126         ********************************************************************************
6292                  (/home/robin/githu):00127         DKLecture
     60               (/home/robin/githu):00128                 setdp $60
6292 8660             (/home/robin/githu):00129                 lda   #$60
6294 1F8B             (/home/robin/githu):00130                 tfr   a,dp                     * positionne la direct page a 60
                      (/home/robin/githu):00131                 
6296 CC6300           (/home/robin/githu):00132                 ldd   #$6300
6299 DD4F             (/home/robin/githu):00133                 std   <$604F                   * DK.BUF Destination des donnees lues
629B 8600             (/home/robin/githu):00134                 lda   #$00
629D 9749             (/home/robin/githu):00135                 sta   <$6049                   * DK.DRV Lecteur        
629F DD4A             (/home/robin/githu):00136                 std   <$604A                   * DK.TRK Piste
62A1 8602             (/home/robin/githu):00137                 lda   #$02
62A3 974C             (/home/robin/githu):00138                 sta   <$604C                   * DK.SEC $02 Secteur
62A5 9748             (/home/robin/githu):00139                 sta   <$6048                   * DK.OPC $02 Operation - lecture d'un secteur
62A7                  (/home/robin/githu):00140         DKCO
62A7 BDE82A           (/home/robin/githu):00141                 jsr   $E82A                    * DKCO Appel Moniteur - lecture d'un secteur
62AA 0C4C             (/home/robin/githu):00142                 inc   <$604C                   * increment du registre Moniteur DK.SEC
62AC 964C             (/home/robin/githu):00143                 lda   <$604C                   * chargement de DK.SEC
62AE 8110             (/home/robin/githu):00144                 cmpa  #$10                     * si DK.SEC est inferieur ou egal a 16
62B0 2310             (/home/robin/githu):00145                 bls   DKContinue               * on continue le traitement
62B2 8601             (/home/robin/githu):00146                 lda   #$01                     * sinon on a depasse le secteur 16
62B4 974C             (/home/robin/githu):00147                 sta   <$604C                   * positionnement du secteur a 1
62B6 0C4B             (/home/robin/githu):00148                 inc   <$604B                   * increment du registre Moniteur DK.TRK
62B8 964B             (/home/robin/githu):00149                 lda   <$604B
62BA 814F             (/home/robin/githu):00150                 cmpa  #$4F                     * si DK.SEC est inferieur ou egal a 79
62BC 2304             (/home/robin/githu):00151                 bls   DKContinue               * on continue le traitement
62BE 0F4B             (/home/robin/githu):00152                 clr   <$604B                   * positionnement de la piste a 0
62C0 0C49             (/home/robin/githu):00153                 inc   <$6049                   * increment du registre Moniteur DK.DRV
62C2                  (/home/robin/githu):00154         DKContinue                            
62C2 0C4F             (/home/robin/githu):00155                 inc   <$604F                   * increment de 256 octets de la zone a ecrire DK.BUF
62C4 DC4F             (/home/robin/githu):00156                 ldd   <$604F                   * chargement de la zone a ecrire DK.BUF
62C6                  (/home/robin/githu):00157         dk_dernier_bloc                        
62C6 10839E00         (/home/robin/githu):00158                 cmpd  #$9E00                   * test debut du dernier bloc de 256 octets a ecrire
62CA 23DB             (/home/robin/githu):00159                 bls   DKCO                     * si DK.BUF inferieur ou egal a la limite alors DKCO
                      (/home/robin/githu):00160         
62CC                  (/home/robin/githu):00161         BOO_WaitVBL
62CC 7DE7E7           (/home/robin/githu):00162                 tst   $E7E7                    ; le faisceau n'est pas dans l'ecran
62CF 2AFB             (/home/robin/githu):00163                 bpl   BOO_WaitVBL              ; tant que le bit est a 0 on boucle
62D1                  (/home/robin/githu):00164         BOO_WaitVBL1
62D1 7DE7E7           (/home/robin/githu):00165                 tst   $E7E7                    ; le faisceau est dans l'ecran
62D4 2BFB             (/home/robin/githu):00166                 bmi   BOO_WaitVBL1             ; tant que le bit est a 1 on boucle
                      (/home/robin/githu):00167         
                      (/home/robin/githu):00168         * Positionnement de la page 3 a l'ecran
                      (/home/robin/githu):00169         ***************************************
62D6 86C0             (/home/robin/githu):00170                 lda   #$C0
62D8 B7E7DD           (/home/robin/githu):00171                 sta   $E7DD                    ; affiche la page a l'ecran
                      (/home/robin/githu):00172                 
62DB 7E6300           (/home/robin/githu):00173                 jmp   $6300
                      (/home/robin/githu):00174         
                      (/home/robin/githu):00175         * donnees pour le fondu de palette
                      (/home/robin/githu):00176         ********************************************************************************
                      (/home/robin/githu):00177         
62DE                  (/home/robin/githu):00178         pal_from
62DE 0000             (/home/robin/githu):00179                 fdb   $0000                    * couleur $00 Noir (Thomson) => 06 change bordure
62E0 F00F             (/home/robin/githu):00180                 fdb   $F00F                    * couleur $0C Turquoise (Bordure ecran)
62E2 FF0F             (/home/robin/githu):00181                 fdb   $FF0F                    * couleur $0E Blanc (TO8)
62E4 7707             (/home/robin/githu):00182                 fdb   $7707                    * couleur $10 Gris (Fond Bas)
62E6 AA03             (/home/robin/githu):00183                 fdb   $AA03                    * couleur $16 Jaune (Interieur case)
62E8 330A             (/home/robin/githu):00184                 fdb   $330A                    * couleur $18 Mauve (Fond TO8)
                      (/home/robin/githu):00185                                                                                
62EA                  (/home/robin/githu):00186         pal_len                                
62EA 0C               (/home/robin/githu):00187                 fcb   $0C                      * pour chaque couleur on defini un index limite
62EB 0E               (/home/robin/githu):00188                 fcb   $0E                      * (exclu) de chargement. ex: 0C, 0E, ... 
62EC 10               (/home/robin/githu):00189                 fcb   $10                      * la premiere couleur de PAL_FROM est chargee
62ED 16               (/home/robin/githu):00190                 fcb   $16                      * pour les couleurs 0(00) a 5(0A)
62EE 18               (/home/robin/githu):00191                 fcb   $18                      * la seconde couleur de PAL_FORM  est chargee
62EF 20               (/home/robin/githu):00192                 fcb   $20                      * pour la couleur 6(0C)
62F0                  (/home/robin/githu):00193         end_pal_len
                      (/home/robin/githu):00194            
62F0                  (/home/robin/githu):00195         pal_cycles
62F0 10               (/home/robin/githu):00196                 fcb   $10                      * nombre de frames de la transition (VSYNC)
                      (/home/robin/githu):00197                                                                                
62F1                  (/home/robin/githu):00198         pal_mask                               
62F1 0F               (/home/robin/githu):00199                 fcb   $0F                      * masque pour l'aternance du traitemet vert/rouge
