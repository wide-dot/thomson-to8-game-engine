                      (C:\Users\bhrou\gi):00001                 opt   c,ct
                      (C:\Users\bhrou\gi):00002                         INCLUDE "./generated-code/EHZ/FD/main-engine.glb"
     0067             (./generated-code/):00001                 air_left EQU $0067
     808F             (./generated-code/):00002                 am_RunNextObject EQU $808F
     7003             (./generated-code/):00003                 am_SwapVideoPage EQU $7003
     0060             (./generated-code/):00004                 angle EQU $0060
     984F             (./generated-code/):00005                 Ani_Asd_Index EQU $984F
     9848             (./generated-code/):00006                 Ani_Page_Index EQU $9848
     0004             (./generated-code/):00007                 anim EQU $0004
     70EF             (./generated-code/):00008                 Anim_End EQU $70EF
     70E9             (./generated-code/):00009                 Anim_End_FA EQU $70E9
     70DD             (./generated-code/):00010                 Anim_End_FB EQU $70DD
     70CF             (./generated-code/):00011                 Anim_End_FC EQU $70CF
     70C6             (./generated-code/):00012                 Anim_End_FD EQU $70C6
     70B3             (./generated-code/):00013                 Anim_End_FE EQU $70B3
     70BB             (./generated-code/):00014                 Anim_End_FE_dyn EQU $70BB
     70A8             (./generated-code/):00015                 Anim_End_FF EQU $70A8
     000A             (./generated-code/):00016                 anim_flags EQU $000A
     0008             (./generated-code/):00017                 anim_frame EQU $0008
     0009             (./generated-code/):00018                 anim_frame_duration EQU $0009
     0001             (./generated-code/):00019                 anim_link_mask EQU $0001
     708F             (./generated-code/):00020                 Anim_Next EQU $708F
     7081             (./generated-code/):00021                 Anim_Reload EQU $7081
     70A2             (./generated-code/):00022                 Anim_Rts EQU $70A2
     7074             (./generated-code/):00023                 Anim_Run EQU $7074
     62DC             (./generated-code/):00024                 Animated_EHZ_1 EQU $62DC
     62EA             (./generated-code/):00025                 Animated_EHZ_2 EQU $62EA
     62FC             (./generated-code/):00026                 Animated_EHZ_3 EQU $62FC
     6300             (./generated-code/):00027                 Animated_EHZ_4 EQU $6300
     6312             (./generated-code/):00028                 Animated_EHZ_5 EQU $6312
     62D0             (./generated-code/):00029                 Animated_EHZ_script EQU $62D0
     7041             (./generated-code/):00030                 AnimateSpriteSync EQU $7041
     9F11             (./generated-code/):00031                 b_loc EQU $9F11
     9F09             (./generated-code/):00032                 b_v_tl EQU $9F09
     7FB2             (./generated-code/):00033                 BBA0 EQU $7FB2
     7FBB             (./generated-code/):00034                 BBA1 EQU $7FBB
     7FE7             (./generated-code/):00035                 BBA_DivideCell EQU $7FE7
     7FEC             (./generated-code/):00036                 BBA_dyn EQU $7FEC
     7FD1             (./generated-code/):00037                 BBA_FitCell EQU $7FD1
     7FC2             (./generated-code/):00038                 BBA_Next EQU $7FC2
     8004             (./generated-code/):00039                 BBA_rts EQU $8004
     7CCA             (./generated-code/):00040                 BBF_AddLastEntry EQU $7CCA
     7CD0             (./generated-code/):00041                 BBF_AddNewEntry EQU $7CD0
     7C60             (./generated-code/):00042                 BBF_cell_end EQU $7C60
     7C5E             (./generated-code/):00043                 BBF_cell_start EQU $7C5E
     7C7D             (./generated-code/):00044                 BBF_CombineNext EQU $7C7D
     7C93             (./generated-code/):00045                 BBF_CombineNextAndPrev EQU $7C93
     7CB5             (./generated-code/):00046                 BBF_CombinePrev EQU $7CB5
     7CAF             (./generated-code/):00047                 BBF_CombinePrevNoNext EQU $7CAF
     7CD3             (./generated-code/):00048                 BBF_FindFreeSlot EQU $7CD3
     7C5D             (./generated-code/):00049                 BBF_nb_cells EQU $7C5D
     7C62             (./generated-code/):00050                 BBF_prev EQU $7C62
     7CF2             (./generated-code/):00051                 BBF_rts EQU $7CF2
     7C66             (./generated-code/):00052                 BBF_SearchPos EQU $7C66
     7CDB             (./generated-code/):00053                 BBF_SetNewEntry EQU $7CDB
     7CEA             (./generated-code/):00054                 BBF_SetNewEntryNextentry EQU $7CEA
     7CEF             (./generated-code/):00055                 BBF_SetNewEntryPrevLink EQU $7CEF
     7FAB             (./generated-code/):00056                 BgBufferAlloc EQU $7FAB
     7C64             (./generated-code/):00057                 BgBufferFree EQU $7C64
     82D3             (./generated-code/):00058                 Black_palette EQU $82D3
     000B             (./generated-code/):00059                 buf_bgdata EQU $000B
     0007             (./generated-code/):00060                 buf_erase_nb_cell EQU $0007
     0009             (./generated-code/):00061                 buf_erase_routine EQU $0009
     0024             (./generated-code/):00062                 buf_Lst_Priority_Unset EQU $0024
     0008             (./generated-code/):00063                 buf_page_erase_routine EQU $0008
     0005             (./generated-code/):00064                 buf_prev_mapping_frame EQU $0005
     0013             (./generated-code/):00065                 buf_prev_render_flags EQU $0013
     000F             (./generated-code/):00066                 buf_prev_x1_pixel EQU $000F
     0011             (./generated-code/):00067                 buf_prev_x2_pixel EQU $0011
     000D             (./generated-code/):00068                 buf_prev_x_pixel EQU $000D
     000F             (./generated-code/):00069                 buf_prev_xy1_pixel EQU $000F
     0011             (./generated-code/):00070                 buf_prev_xy2_pixel EQU $0011
     000D             (./generated-code/):00071                 buf_prev_xy_pixel EQU $000D
     0010             (./generated-code/):00072                 buf_prev_y1_pixel EQU $0010
     0012             (./generated-code/):00073                 buf_prev_y2_pixel EQU $0012
     000E             (./generated-code/):00074                 buf_prev_y_pixel EQU $000E
     0000             (./generated-code/):00075                 buf_priority EQU $0000
     0003             (./generated-code/):00076                 buf_priority_next_obj EQU $0003
     0001             (./generated-code/):00077                 buf_priority_prev_obj EQU $0001
     0000             (./generated-code/):00078                 buf_Tbl_Priority_First_Entry EQU $0000
     0012             (./generated-code/):00079                 buf_Tbl_Priority_Last_Entry EQU $0012
     010E             (./generated-code/):00080                 Build_RAMLoaderManager EQU $010E
     0003             (./generated-code/):00081                 button_A EQU $0003
     0008             (./generated-code/):00082                 button_A_mask EQU $0008
     0002             (./generated-code/):00083                 button_B EQU $0002
     0004             (./generated-code/):00084                 button_B_mask EQU $0004
     0003             (./generated-code/):00085                 button_C EQU $0003
     0008             (./generated-code/):00086                 button_C_mask EQU $0008
     0005             (./generated-code/):00087                 button_down EQU $0005
     0020             (./generated-code/):00088                 button_down_mask EQU $0020
     0006             (./generated-code/):00089                 button_left EQU $0006
     0040             (./generated-code/):00090                 button_left_mask EQU $0040
     0007             (./generated-code/):00091                 button_right EQU $0007
     0080             (./generated-code/):00092                 button_right_mask EQU $0080
     0003             (./generated-code/):00093                 button_start EQU $0003
     0008             (./generated-code/):00094                 button_start_mask EQU $0008
     0004             (./generated-code/):00095                 button_up EQU $0004
     0010             (./generated-code/):00096                 button_up_mask EQU $0010
     9F03             (./generated-code/):00097                 c_h_tl EQU $9F03
     9F0A             (./generated-code/):00098                 c_h_tl_bck EQU $9F0A
     9F07             (./generated-code/):00099                 c_v_tl EQU $9F07
     9F0B             (./generated-code/):00100                 c_v_tl_bck EQU $9F0B
     84E5             (./generated-code/):00101                 c_y_off EQU $84E5
     7152             (./generated-code/):00102                 Call_SAnim_Do2 EQU $7152
     6F70             (./generated-code/):00103                 Camera_Max_Y_Pos_Changing EQU $6F70
     6F6E             (./generated-code/):00104                 Camera_Y_pos_bias EQU $6F6E
     0070             (./generated-code/):00105                 camera_Y_pos_bias_default EQU $0070
     0003             (./generated-code/):00106                 cell_end EQU $0003
     8000             (./generated-code/):00107                 cell_end_return EQU $8000
     0040             (./generated-code/):00108                 cell_size EQU $0040
     0001             (./generated-code/):00109                 cell_start EQU $0001
     6000             (./generated-code/):00110                 cell_start_adr EQU $6000
     7386             (./generated-code/):00111                 CheckSpritesRefresh EQU $7386
     85C8             (./generated-code/):00112                 chk_idx_pge EQU $85C8
     983B             (./generated-code/):00113                 Chunk_EHZ_0 EQU $983B
     857B             (./generated-code/):00114                 chunk_offset EQU $857B
     85DD             (./generated-code/):00115                 cl_pos EQU $85DD
     84F4             (./generated-code/):00116                 cl_pos_bck EQU $84F4
     819F             (./generated-code/):00117                 ClearDataMem EQU $819F
     81B1             (./generated-code/):00118                 ClearDataMem_2 EQU $81B1
     81CD             (./generated-code/):00119                 ClearDataMem_3 EQU $81CD
     8166             (./generated-code/):00120                 ClearObj EQU $8166
     8193             (./generated-code/):00121                 CLO_1 EQU $8193
     819D             (./generated-code/):00122                 CLO_2 EQU $819D
     0061             (./generated-code/):00123                 collision_flags EQU $0061
     0062             (./generated-code/):00124                 collision_property EQU $0062
     8364             (./generated-code/):00125                 ComputeTileBuffer EQU $8364
     860E             (./generated-code/):00126                 cpt_x EQU $860E
     7464             (./generated-code/):00127                 CSR_CheckDelHide EQU $7464
     769D             (./generated-code/):00128                 CSR_CheckDraw EQU $769D
     75C4             (./generated-code/):00129                 CSR_CheckErase EQU $75C4
     75E2             (./generated-code/):00130                 CSR_CheckErase_InRange EQU $75E2
     749E             (./generated-code/):00131                 CSR_CheckPlayFieldCoord EQU $749E
     7544             (./generated-code/):00132                 CSR_CheckPosition EQU $7544
     746C             (./generated-code/):00133                 CSR_CheckRefresh EQU $746C
     74EE             (./generated-code/):00134                 CSR_ComputeMappingFrame EQU $74EE
     74C7             (./generated-code/):00135                 CSR_DoNotDisplaySprite EQU $74C7
     759E             (./generated-code/):00136                 CSR_DontCheckXFrontier EQU $759E
     75B2             (./generated-code/):00137                 CSR_DontCheckXFrontier_end EQU $75B2
     74E7             (./generated-code/):00138                 CSR_NextObject EQU $74E7
     750A             (./generated-code/):00139                 CSR_NoDefinedFrame EQU $750A
     73EE             (./generated-code/):00140                 CSR_P1B0 EQU $73EE
     7454             (./generated-code/):00141                 CSR_P1B1 EQU $7454
     73E2             (./generated-code/):00142                 CSR_P2B0 EQU $73E2
     7448             (./generated-code/):00143                 CSR_P2B1 EQU $7448
     73D6             (./generated-code/):00144                 CSR_P3B0 EQU $73D6
     743C             (./generated-code/):00145                 CSR_P3B1 EQU $743C
     73CA             (./generated-code/):00146                 CSR_P4B0 EQU $73CA
     7430             (./generated-code/):00147                 CSR_P4B1 EQU $7430
     73BE             (./generated-code/):00148                 CSR_P5B0 EQU $73BE
     7424             (./generated-code/):00149                 CSR_P5B1 EQU $7424
     73B2             (./generated-code/):00150                 CSR_P6B0 EQU $73B2
     7418             (./generated-code/):00151                 CSR_P6B1 EQU $7418
     73A6             (./generated-code/):00152                 CSR_P7B0 EQU $73A6
     740C             (./generated-code/):00153                 CSR_P7B1 EQU $740C
     739A             (./generated-code/):00154                 CSR_P8B0 EQU $739A
     7400             (./generated-code/):00155                 CSR_P8B1 EQU $7400
     7461             (./generated-code/):00156                 CSR_ProcessEachPriorityLevel EQU $7461
     73FA             (./generated-code/):00157                 CSR_rtsB0 EQU $73FA
     7460             (./generated-code/):00158                 CSR_rtsB1 EQU $7460
     76CB             (./generated-code/):00159                 CSR_SDT1 EQU $76CB
     76D2             (./generated-code/):00160                 CSR_SDT2 EQU $76D2
     76D7             (./generated-code/):00161                 CSR_SDT3 EQU $76D7
     7395             (./generated-code/):00162                 CSR_SetBuffer0 EQU $7395
     73FB             (./generated-code/):00163                 CSR_SetBuffer1 EQU $73FB
     76F1             (./generated-code/):00164                 CSR_SetDrawFalse EQU $76F1
     76BD             (./generated-code/):00165                 CSR_SetDrawTrue EQU $76BD
     76E9             (./generated-code/):00166                 CSR_SetEraseDrawFalse EQU $76E9
     7695             (./generated-code/):00167                 CSR_SetEraseFalse EQU $7695
     7606             (./generated-code/):00168                 CSR_SetEraseTrue EQU $7606
     76DC             (./generated-code/):00169                 CSR_SetHide EQU $76DC
     75BC             (./generated-code/):00170                 CSR_SetOutOfRange EQU $75BC
     7386             (./generated-code/):00171                 CSR_Start EQU $7386
     7675             (./generated-code/):00172                 CSR_SubDrawCheckCollision EQU $7675
     766D             (./generated-code/):00173                 CSR_SubDrawSearch EQU $766D
     766B             (./generated-code/):00174                 CSR_SubDrawSpriteSearchInit EQU $766B
     7625             (./generated-code/):00175                 CSR_SubEraseCheckCollisionB0 EQU $7625
     764C             (./generated-code/):00176                 CSR_SubEraseCheckCollisionB1 EQU $764C
     761D             (./generated-code/):00177                 CSR_SubEraseSearchB0 EQU $761D
     7644             (./generated-code/):00178                 CSR_SubEraseSearchB1 EQU $7644
     7616             (./generated-code/):00179                 CSR_SubEraseSpriteSearchInit EQU $7616
     752B             (./generated-code/):00180                 CSR_UpdateMetadata EQU $752B
     7475             (./generated-code/):00181                 CSR_UpdSpriteImageBasedOnMirror EQU $7475
     8008             (./generated-code/):00182                 Ctrl_1 EQU $8008
     8008             (./generated-code/):00183                 Ctrl_1_Held EQU $8008
     8006             (./generated-code/):00184                 Ctrl_1_Held_Logical EQU $8006
     8006             (./generated-code/):00185                 Ctrl_1_Logical EQU $8006
     8009             (./generated-code/):00186                 Ctrl_1_Press EQU $8009
     8007             (./generated-code/):00187                 Ctrl_1_Press_Logical EQU $8007
     800A             (./generated-code/):00188                 Ctrl_2 EQU $800A
     800A             (./generated-code/):00189                 Ctrl_2_Held EQU $800A
     800B             (./generated-code/):00190                 Ctrl_2_Press EQU $800B
     9F0C             (./generated-code/):00191                 cur_c EQU $9F0C
     82B1             (./generated-code/):00192                 Cur_palette EQU $82B1
     9F18             (./generated-code/):00193                 DBT_ccpt EQU $9F18
     86D3             (./generated-code/):00194                 DBT_ccpt_bck EQU $86D3
     8697             (./generated-code/):00195                 DBT_cloop EQU $8697
     9F17             (./generated-code/):00196                 DBT_lcpt EQU $9F17
     868D             (./generated-code/):00197                 DBT_lloop EQU $868D
     809E             (./generated-code/):00198                 DeleteObject EQU $809E
     809C             (./generated-code/):00199                 DeleteObject_return EQU $809C
     8096             (./generated-code/):00200                 DeleteObject_x EQU $8096
     71CB             (./generated-code/):00201                 DisplaySprite EQU $71CB
     71C5             (./generated-code/):00202                 DisplaySprite_x EQU $71C5
     6049             (./generated-code/):00203                 dk_drive EQU $6049
     604C             (./generated-code/):00204                 dk_sector EQU $604C
     604A             (./generated-code/):00205                 dk_track EQU $604A
     604B             (./generated-code/):00206                 dk_track_lsb EQU $604B
     604F             (./generated-code/):00207                 dk_write_location EQU $604F
     8108             (./generated-code/):00208                 DOB_ChainNextB0 EQU $8108
     8152             (./generated-code/):00209                 DOB_ChainNextB1 EQU $8152
     80E8             (./generated-code/):00210                 DOB_ChainPrevB0 EQU $80E8
     812A             (./generated-code/):00211                 DOB_ChainPrevB1 EQU $812A
     80F2             (./generated-code/):00212                 DOB_CheckPrioNextB0 EQU $80F2
     8134             (./generated-code/):00213                 DOB_CheckPrioNextB1 EQU $8134
     80D2             (./generated-code/):00214                 DOB_RemoveFromDPSB0 EQU $80D2
     8114             (./generated-code/):00215                 DOB_RemoveFromDPSB1 EQU $8114
     8150             (./generated-code/):00216                 DOB_rts EQU $8150
     80A6             (./generated-code/):00217                 DOB_Start EQU $80A6
     80BB             (./generated-code/):00218                 DOB_TestOnscreen1 EQU $80BB
     80AB             (./generated-code/):00219                 DOB_ToDeleteFlag0 EQU $80AB
     80C0             (./generated-code/):00220                 DOB_ToDeleteFlag1 EQU $80C0
     80B1             (./generated-code/):00221                 DOB_Unset0 EQU $80B1
     80C6             (./generated-code/):00222                 DOB_Unset1 EQU $80C6
     724A             (./generated-code/):00223                 DPS_buffer_0 EQU $724A
     72AC             (./generated-code/):00224                 DPS_buffer_1 EQU $72AC
     730E             (./generated-code/):00225                 DPS_buffer_end EQU $730E
     0001             (./generated-code/):00226                 draw_routine EQU $0001
     860F             (./generated-code/):00227                 DrawBufferedTile EQU $860F
     8585             (./generated-code/):00228                 DrawChunk EQU $8585
     871A             (./generated-code/):00229                 DrawHighPriorityBufferedTile EQU $871A
     85EE             (./generated-code/):00230                 DrawNextRow EQU $85EE
     7DD5             (./generated-code/):00231                 DrawSprites EQU $7DD5
     8591             (./generated-code/):00232                 DrawTile EQU $8591
     7E80             (./generated-code/):00233                 DRS_DrawWithoutBackupB0 EQU $7E80
     7F3F             (./generated-code/):00234                 DRS_DrawWithoutBackupB1 EQU $7F3F
     7EFF             (./generated-code/):00235                 DRS_dyn1 EQU $7EFF
     7F10             (./generated-code/):00236                 DRS_dyn2 EQU $7F10
     7E9D             (./generated-code/):00237                 DRS_dyn3B0 EQU $7E9D
     7F5C             (./generated-code/):00238                 DRS_dyn3B1 EQU $7F5C
     7EE4             (./generated-code/):00239                 DRS_NextObjectB0 EQU $7EE4
     7FA3             (./generated-code/):00240                 DRS_NextObjectB1 EQU $7FA3
     7ED7             (./generated-code/):00241                 DRS_NoOverlayB0 EQU $7ED7
     7F96             (./generated-code/):00242                 DRS_NoOverlayB1 EQU $7F96
     7E12             (./generated-code/):00243                 DRS_P1B0 EQU $7E12
     7E53             (./generated-code/):00244                 DRS_P1B1 EQU $7E53
     7E0A             (./generated-code/):00245                 DRS_P2B0 EQU $7E0A
     7E4B             (./generated-code/):00246                 DRS_P2B1 EQU $7E4B
     7E02             (./generated-code/):00247                 DRS_P3B0 EQU $7E02
     7E43             (./generated-code/):00248                 DRS_P3B1 EQU $7E43
     7DFA             (./generated-code/):00249                 DRS_P4B0 EQU $7DFA
     7E3B             (./generated-code/):00250                 DRS_P4B1 EQU $7E3B
     7DF2             (./generated-code/):00251                 DRS_P5B0 EQU $7DF2
     7E33             (./generated-code/):00252                 DRS_P5B1 EQU $7E33
     7DEA             (./generated-code/):00253                 DRS_P6B0 EQU $7DEA
     7E2B             (./generated-code/):00254                 DRS_P6B1 EQU $7E2B
     7DE2             (./generated-code/):00255                 DRS_P7B0 EQU $7DE2
     7E23             (./generated-code/):00256                 DRS_P7B1 EQU $7E23
     7DDA             (./generated-code/):00257                 DRS_P8B0 EQU $7DDA
     7E1B             (./generated-code/):00258                 DRS_P8B1 EQU $7E1B
     7E5C             (./generated-code/):00259                 DRS_ProcessEachPriorityLevelB0 EQU $7E5C
     7F1B             (./generated-code/):00260                 DRS_ProcessEachPriorityLevelB1 EQU $7F1B
     7E1A             (./generated-code/):00261                 DRS_rtsB0 EQU $7E1A
     7E5B             (./generated-code/):00262                 DRS_rtsB1 EQU $7E5B
     7DD5             (./generated-code/):00263                 DRS_Start EQU $7DD5
     7ED9             (./generated-code/):00264                 DRS_UpdateRenderFlagB0 EQU $7ED9
     7F98             (./generated-code/):00265                 DRS_UpdateRenderFlagB1 EQU $7F98
     7EEC             (./generated-code/):00266                 DRS_XYToAddress EQU $7EEC
     7EF3             (./generated-code/):00267                 DRS_XYToAddressPositive EQU $7EF3
     7EF9             (./generated-code/):00268                 DRS_XYToAddressRAM1First EQU $7EF9
     7F0A             (./generated-code/):00269                 DRS_XYToAddressRAM2First EQU $7F0A
     71FD             (./generated-code/):00270                 DSP_addFirstNode EQU $71FD
     720E             (./generated-code/):00271                 DSP_addToExistingNode EQU $720E
     71E8             (./generated-code/):00272                 DSP_BufferPositionned EQU $71E8
     7233             (./generated-code/):00273                 DSP_ChangePriority EQU $7233
     71F4             (./generated-code/):00274                 DSP_CheckLastEntry EQU $71F4
     71F2             (./generated-code/):00275                 DSP_InitPriority EQU $71F2
     7223             (./generated-code/):00276                 DSP_LinkBuffer1 EQU $7223
     722F             (./generated-code/):00277                 DSP_LinkCurWithPrev EQU $722F
     720C             (./generated-code/):00278                 DSP_rts EQU $720C
     71D8             (./generated-code/):00279                 DSP_SetBuffer0 EQU $71D8
     71E1             (./generated-code/):00280                 DSP_SetBuffer1 EQU $71E1
     71CD             (./generated-code/):00281                 DSP_Start EQU $71CD
     82B3             (./generated-code/):00282                 Dyn_palette EQU $82B3
     641A             (./generated-code/):00283                 Dynamic_Object_RAM EQU $641A
     6F6E             (./generated-code/):00284                 Dynamic_Object_RAM_End EQU $6F6E
     61DA             (./generated-code/):00285                 EHZ_Back EQU $61DA
     6206             (./generated-code/):00286                 EHZ_Mask EQU $6206
     85E7             (./generated-code/):00287                 EndOfChunk EQU $85E7
     85E3             (./generated-code/):00288                 EndOfRow EQU $85E3
     0007             (./generated-code/):00289                 entry_size EQU $0007
     0006             (./generated-code/):00290                 erase_nb_cell EQU $0006
     0004             (./generated-code/):00291                 erase_routine EQU $0004
     7A90             (./generated-code/):00292                 EraseSprites EQU $7A90
     7B8F             (./generated-code/):00293                 ESP_CallEraseRoutineB0 EQU $7B8F
     7BA3             (./generated-code/):00294                 ESP_CallEraseRoutineB0_00 EQU $7BA3
     7C08             (./generated-code/):00295                 ESP_CallEraseRoutineB1 EQU $7C08
     7C1C             (./generated-code/):00296                 ESP_CallEraseRoutineB1_00 EQU $7C1C
     7B82             (./generated-code/):00297                 ESP_CheckEraseB0 EQU $7B82
     7BFB             (./generated-code/):00298                 ESP_CheckEraseB1 EQU $7BFB
     7B6E             (./generated-code/):00299                 ESP_CheckPriorityB0 EQU $7B6E
     7BE7             (./generated-code/):00300                 ESP_CheckPriorityB1 EQU $7BE7
     7BB1             (./generated-code/):00301                 ESP_FreeEraseBufferB0 EQU $7BB1
     7C2A             (./generated-code/):00302                 ESP_FreeEraseBufferB1 EQU $7C2A
     7BDC             (./generated-code/):00303                 ESP_NextObjectB0 EQU $7BDC
     7C55             (./generated-code/):00304                 ESP_NextObjectB1 EQU $7C55
     7A99             (./generated-code/):00305                 ESP_P1B0 EQU $7A99
     7B02             (./generated-code/):00306                 ESP_P1B1 EQU $7B02
     7AA6             (./generated-code/):00307                 ESP_P2B0 EQU $7AA6
     7B0F             (./generated-code/):00308                 ESP_P2B1 EQU $7B0F
     7AB3             (./generated-code/):00309                 ESP_P3B0 EQU $7AB3
     7B1C             (./generated-code/):00310                 ESP_P3B1 EQU $7B1C
     7AC0             (./generated-code/):00311                 ESP_P4B0 EQU $7AC0
     7B29             (./generated-code/):00312                 ESP_P4B1 EQU $7B29
     7ACD             (./generated-code/):00313                 ESP_P5B0 EQU $7ACD
     7B36             (./generated-code/):00314                 ESP_P5B1 EQU $7B36
     7ADA             (./generated-code/):00315                 ESP_P6B0 EQU $7ADA
     7B43             (./generated-code/):00316                 ESP_P6B1 EQU $7B43
     7AE7             (./generated-code/):00317                 ESP_P7B0 EQU $7AE7
     7B50             (./generated-code/):00318                 ESP_P7B1 EQU $7B50
     7AF4             (./generated-code/):00319                 ESP_P8B0 EQU $7AF4
     7B5D             (./generated-code/):00320                 ESP_P8B1 EQU $7B5D
     7B6B             (./generated-code/):00321                 ESP_ProcessEachPriorityLevelB0 EQU $7B6B
     7BE4             (./generated-code/):00322                 ESP_ProcessEachPriorityLevelB1 EQU $7BE4
     7B01             (./generated-code/):00323                 ESP_rtsB0 EQU $7B01
     7B6A             (./generated-code/):00324                 ESP_rtsB1 EQU $7B6A
     7A94             (./generated-code/):00325                 ESP_Start EQU $7A94
     7B74             (./generated-code/):00326                 ESP_UnsetCheckRefreshB0 EQU $7B74
     7BED             (./generated-code/):00327                 ESP_UnsetCheckRefreshB1 EQU $7BED
     7BCC             (./generated-code/):00328                 ESP_UnsetOnScreenFlagB0 EQU $7BCC
     7C45             (./generated-code/):00329                 ESP_UnsetOnScreenFlagB1 EQU $7C45
     005D             (./generated-code/):00330                 ext_variables EQU $005D
     0007             (./generated-code/):00331                 ext_variables_size EQU $0007
     840B             (./generated-code/):00332                 FeedTileBuffer EQU $840B
     0066             (./generated-code/):00333                 flip_angle EQU $0066
     006C             (./generated-code/):00334                 flip_speed EQU $006C
     0068             (./generated-code/):00335                 flip_turned EQU $0068
     006B             (./generated-code/):00336                 flips_remaining EQU $006B
     61D2             (./generated-code/):00337                 ForceRefresh EQU $61D2
     6329             (./generated-code/):00338                 gentag_0 EQU $6329
     6338             (./generated-code/):00339                 gentag_1 EQU $6338
     6347             (./generated-code/):00340                 gentag_2 EQU $6347
     6356             (./generated-code/):00341                 gentag_3 EQU $6356
     6365             (./generated-code/):00342                 gentag_4 EQU $6365
     637A             (./generated-code/):00343                 gentag_5 EQU $637A
     638F             (./generated-code/):00344                 gentag_6 EQU $638F
     6FD0             (./generated-code/):00345                 GetCartPageA EQU $6FD0
     6FD9             (./generated-code/):00346                 GetCartPageB EQU $6FD9
     9FE6             (./generated-code/):00347                 glb_alphaTiles EQU $9FE6
     9FE7             (./generated-code/):00348                 glb_camera_move EQU $9FE7
     9FEB             (./generated-code/):00349                 glb_camera_x_max_pos EQU $9FEB
     9FEF             (./generated-code/):00350                 glb_camera_x_min_pos EQU $9FEF
     9FF3             (./generated-code/):00351                 glb_camera_x_pos EQU $9FF3
     9FE9             (./generated-code/):00352                 glb_camera_y_max_pos EQU $9FE9
     9FED             (./generated-code/):00353                 glb_camera_y_min_pos EQU $9FED
     9FF1             (./generated-code/):00354                 glb_camera_y_pos EQU $9FF1
     9FF9             (./generated-code/):00355                 glb_cur_priority EQU $9FF9
     9FF5             (./generated-code/):00356                 glb_cur_ptr_sub_obj_draw EQU $9FF5
     9FF7             (./generated-code/):00357                 glb_cur_ptr_sub_obj_erase EQU $9FF7
     7040             (./generated-code/):00358                 glb_Cur_Wrk_Screen_Id EQU $7040
     009F             (./generated-code/):00359                 glb_direct_page EQU $009F
     9FE8             (./generated-code/):00360                 glb_force_sprite_refresh EQU $9FE8
     7037             (./generated-code/):00361                 glb_Main_runcount EQU $7037
     8340             (./generated-code/):00362                 glb_map_adr EQU $8340
     8343             (./generated-code/):00363                 glb_map_chunk_adr EQU $8343
     8342             (./generated-code/):00364                 glb_map_chunk_pge EQU $8342
     8346             (./generated-code/):00365                 glb_map_defchunk0_adr EQU $8346
     8345             (./generated-code/):00366                 glb_map_defchunk0_pge EQU $8345
     8349             (./generated-code/):00367                 glb_map_defchunk1_adr EQU $8349
     8348             (./generated-code/):00368                 glb_map_defchunk1_pge EQU $8348
     833F             (./generated-code/):00369                 glb_map_pge EQU $833F
     834C             (./generated-code/):00370                 glb_map_tiles_adr EQU $834C
     834B             (./generated-code/):00371                 glb_map_tiles_pge EQU $834B
     834E             (./generated-code/):00372                 glb_map_width EQU $834E
     6F73             (./generated-code/):00373                 glb_Page EQU $6F73
     82AF             (./generated-code/):00374                 glb_pal_elapsed_frames EQU $82AF
     9FFE             (./generated-code/):00375                 glb_register_s EQU $9FFE
     6FFB             (./generated-code/):00376                 glb_screen_border_color EQU $6FFB
     9FFC             (./generated-code/):00377                 glb_screen_location_1 EQU $9FFC
     9FFA             (./generated-code/):00378                 glb_screen_location_2 EQU $9FFA
     9F00             (./generated-code/):00379                 glb_system_stack EQU $9F00
     8492             (./generated-code/):00380                 glb_tmb_height EQU $8492
     846A             (./generated-code/):00381                 glb_tmb_width EQU $846A
     9F00             (./generated-code/):00382                 glb_tmp_var EQU $9F00
     0000             (./generated-code/):00383                 gmboot EQU $0000
     0000             (./generated-code/):00384                 GmID_EHZ EQU $0000
     7167             (./generated-code/):00385                 Go_SAnim_WalkRun EQU $7167
     0038             (./generated-code/):00386                 gravity EQU $0038
     9F00             (./generated-code/):00387                 h_tl EQU $9F00
     9F01             (./generated-code/):00388                 h_tl_bck EQU $9F01
     6F71             (./generated-code/):00389                 Horiz_scroll_delay_val EQU $6F71
     0000             (./generated-code/):00390                 id EQU $0000
     0006             (./generated-code/):00391                 image_center_offset EQU $0006
     000C             (./generated-code/):00392                 image_set EQU $000C
     0004             (./generated-code/):00393                 image_subset_x1_offset EQU $0004
     0005             (./generated-code/):00394                 image_subset_y1_offset EQU $0005
     0004             (./generated-code/):00395                 image_x_size EQU $0004
     0005             (./generated-code/):00396                 image_y_size EQU $0005
     9841             (./generated-code/):00397                 Img_Page_Index EQU $9841
     0064             (./generated-code/):00398                 inertia EQU $0064
     8353             (./generated-code/):00399                 InitTileBuffer EQU $8353
     007C             (./generated-code/):00400                 interact EQU $007C
     0071             (./generated-code/):00401                 invincibility_time EQU $0071
     006F             (./generated-code/):00402                 invulnerable_time EQU $006F
     4DFF             (./generated-code/):00403                 irq_one_frame EQU $4DFF
     6027             (./generated-code/):00404                 irq_routine EQU $6027
     E7C6             (./generated-code/):00405                 irq_timer EQU $E7C6
     E7C5             (./generated-code/):00406                 irq_timer_ctrl EQU $E7C5
     8210             (./generated-code/):00407                 IrqOff EQU $8210
     8205             (./generated-code/):00408                 IrqOn EQU $8205
     81EE             (./generated-code/):00409                 IrqSet50Hz EQU $81EE
     823A             (./generated-code/):00410                 IrqSmps EQU $823A
     8283             (./generated-code/):00411                 IrqSmps_end EQU $8283
     821B             (./generated-code/):00412                 IrqSync EQU $821B
     8228             (./generated-code/):00413                 IrqSync_1 EQU $8228
     822D             (./generated-code/):00414                 IrqSync_2 EQU $822D
     8232             (./generated-code/):00415                 IrqSync_3 EQU $8232
     82AF             (./generated-code/):00416                 IRQSysStack EQU $82AF
     007B             (./generated-code/):00417                 jumping EQU $007B
     9F04             (./generated-code/):00418                 l_h_tl EQU $9F04
     86CA             (./generated-code/):00419                 l_pos EQU $86CA
     000C             (./generated-code/):00420                 layer_chunk0 EQU $000C
     000E             (./generated-code/):00421                 layer_chunk1 EQU $000E
     000A             (./generated-code/):00422                 layer_map EQU $000A
     0009             (./generated-code/):00423                 layer_map_height EQU $0009
     0008             (./generated-code/):00424                 layer_map_width EQU $0008
     0012             (./generated-code/):00425                 layer_mul_ref EQU $0012
     0010             (./generated-code/):00426                 layer_tiles EQU $0010
     618A             (./generated-code/):00427                 LevelMainLoop EQU $618A
     6F6E             (./generated-code/):00428                 LevelOnly_Object_RAM EQU $6F6E
     6F6E             (./generated-code/):00429                 LevelOnly_Object_RAM_End EQU $6F6E
     612A             (./generated-code/):00430                 LevelSizeLoad EQU $612A
     985D             (./generated-code/):00431                 LoadAct EQU $985D
     8545             (./generated-code/):00432                 LoadChunk EQU $8545
     007E             (./generated-code/):00433                 lrb_solid_bit EQU $007E
     8704             (./generated-code/):00434                 ls_pos EQU $8704
     7702             (./generated-code/):00435                 Lst_FreeCell_0 EQU $7702
     78CA             (./generated-code/):00436                 Lst_FreeCell_1 EQU $78CA
     7700             (./generated-code/):00437                 Lst_FreeCellFirstEntry_0 EQU $7700
     78C8             (./generated-code/):00438                 Lst_FreeCellFirstEntry_1 EQU $78C8
     726E             (./generated-code/):00439                 Lst_Priority_Unset_0 EQU $726E
     72D0             (./generated-code/):00440                 Lst_Priority_Unset_1 EQU $72D0
     0022             (./generated-code/):00441                 main_ext_variables_size EQU $0022
     007F             (./generated-code/):00442                 main_object_size EQU $007F
     639B             (./generated-code/):00443                 MainCharacter EQU $639B
     9835             (./generated-code/):00444                 Map_EHZ EQU $9835
     006D             (./generated-code/):00445                 move_lock EQU $006D
     0000             (./generated-code/):00446                 nb_cells EQU $0000
     001D             (./generated-code/):00447                 nb_dynamic_objects EQU $001D
     0080             (./generated-code/):00448                 nb_free_cells EQU $0080
     001E             (./generated-code/):00449                 nb_graphical_objects EQU $001E
     0000             (./generated-code/):00450                 nb_level_objects EQU $0000
     0008             (./generated-code/):00451                 nb_priority_levels EQU $0008
     0001             (./generated-code/):00452                 nb_reserved_objects EQU $0001
     0005             (./generated-code/):00453                 next_entry EQU $0005
     007F             (./generated-code/):00454                 next_main_object EQU $007F
     0064             (./generated-code/):00455                 next_object EQU $0064
     0075             (./generated-code/):00456                 next_tilt EQU $0075
     85CF             (./generated-code/):00457                 NextCol EQU $85CF
     0069             (./generated-code/):00458                 obj_control EQU $0069
     9827             (./generated-code/):00459                 Obj_Index_Address EQU $9827
     9820             (./generated-code/):00460                 Obj_Index_Page EQU $9820
     005D             (./generated-code/):00461                 object_core_size EQU $005D
     641A             (./generated-code/):00462                 Object_RAM EQU $641A
     6F6E             (./generated-code/):00463                 Object_RAM_End EQU $6F6E
     0064             (./generated-code/):00464                 object_size EQU $0064
     0002             (./generated-code/):00465                 ObjID_EHZ EQU $0002
     0006             (./generated-code/):00466                 ObjID_EHZ_Back EQU $0006
     0001             (./generated-code/):00467                 ObjID_EHZ_Mask EQU $0001
     0003             (./generated-code/):00468                 ObjID_Scroll EQU $0003
     0005             (./generated-code/):00469                 ObjID_Smps EQU $0005
     0004             (./generated-code/):00470                 ObjID_Sonic EQU $0004
     0020             (./generated-code/):00471                 p1_pushing EQU $0020
     0005             (./generated-code/):00472                 p1_pushing_bit EQU $0005
     0008             (./generated-code/):00473                 p1_standing EQU $0008
     0003             (./generated-code/):00474                 p1_standing_bit EQU $0003
     0004             (./generated-code/):00475                 p1_touch_bottom EQU $0004
     0002             (./generated-code/):00476                 p1_touch_bottom_bit EQU $0002
     0001             (./generated-code/):00477                 p1_touch_side EQU $0001
     0000             (./generated-code/):00478                 p1_touch_side_bit EQU $0000
     0010             (./generated-code/):00479                 p1_touch_top EQU $0010
     0004             (./generated-code/):00480                 p1_touch_top_bit EQU $0004
     0040             (./generated-code/):00481                 p2_pushing EQU $0040
     0006             (./generated-code/):00482                 p2_pushing_bit EQU $0006
     0010             (./generated-code/):00483                 p2_standing EQU $0010
     0003             (./generated-code/):00484                 p2_standing_bit EQU $0003
     0008             (./generated-code/):00485                 p2_touch_bottom EQU $0008
     0003             (./generated-code/):00486                 p2_touch_bottom_bit EQU $0003
     0002             (./generated-code/):00487                 p2_touch_side EQU $0002
     0001             (./generated-code/):00488                 p2_touch_side_bit EQU $0001
     0020             (./generated-code/):00489                 p2_touch_top EQU $0020
     0005             (./generated-code/):00490                 p2_touch_top_bit EQU $0005
     0000             (./generated-code/):00491                 page_draw_routine EQU $0000
     0003             (./generated-code/):00492                 page_erase_routine EQU $0003
     9800             (./generated-code/):00493                 Pal_EHZ EQU $9800
     8251             (./generated-code/):00494                 PaletteCycling EQU $8251
     0078             (./generated-code/):00495                 pinball_mode EQU $0078
     0006             (./generated-code/):00496                 prev_anim EQU $0006
     0003             (./generated-code/):00497                 priority EQU $0003
     0002             (./generated-code/):00498                 pushing_bit_delta EQU $0002
     0060             (./generated-code/):00499                 pushing_mask EQU $0060
     9F05             (./generated-code/):00500                 r_h_tl EQU $9F05
     9F06             (./generated-code/):00501                 r_h_tl_bck EQU $9F06
     85FC             (./generated-code/):00502                 r_stp_1 EQU $85FC
     800C             (./generated-code/):00503                 ReadJoypads EQU $800C
     82B0             (./generated-code/):00504                 Refresh_palette EQU $82B0
     0002             (./generated-code/):00505                 render_flags EQU $0002
     0020             (./generated-code/):00506                 render_hide_mask EQU $0020
     0008             (./generated-code/):00507                 render_motionless_mask EQU $0008
     0004             (./generated-code/):00508                 render_overlay_mask EQU $0004
     0010             (./generated-code/):00509                 render_playfieldcoord_mask EQU $0010
     0040             (./generated-code/):00510                 render_todelete_mask EQU $0040
     0080             (./generated-code/):00511                 render_xloop_mask EQU $0080
     0001             (./generated-code/):00512                 render_xmirror_mask EQU $0001
     0002             (./generated-code/):00513                 render_ymirror_mask EQU $0002
     639B             (./generated-code/):00514                 Reserved_Object_RAM EQU $639B
     641A             (./generated-code/):00515                 Reserved_Object_RAM_End EQU $641A
     0063             (./generated-code/):00516                 respawn_index EQU $0063
     0079             (./generated-code/):00517                 restart_countdown EQU $0079
     001E             (./generated-code/):00518                 routine EQU $001E
     0021             (./generated-code/):00519                 routine_quaternary EQU $0021
     001F             (./generated-code/):00520                 routine_secondary EQU $001F
     0020             (./generated-code/):00521                 routine_tertiary EQU $0020
     0040             (./generated-code/):00522                 rsv_bgdata_0 EQU $0040
     0054             (./generated-code/):00523                 rsv_bgdata_1 EQU $0054
     0035             (./generated-code/):00524                 rsv_buffer_0 EQU $0035
     0049             (./generated-code/):00525                 rsv_buffer_1 EQU $0049
     002C             (./generated-code/):00526                 rsv_draw_routine EQU $002C
     002A             (./generated-code/):00527                 rsv_erase_nb_cell EQU $002A
     002F             (./generated-code/):00528                 rsv_erase_routine EQU $002F
     0025             (./generated-code/):00529                 rsv_image_center_offset EQU $0025
     0026             (./generated-code/):00530                 rsv_image_subset EQU $0026
     0028             (./generated-code/):00531                 rsv_mapping_frame EQU $0028
     002B             (./generated-code/):00532                 rsv_page_draw_routine EQU $002B
     002E             (./generated-code/):00533                 rsv_page_erase_routine EQU $002E
     0023             (./generated-code/):00534                 rsv_prev_anim EQU $0023
     003C             (./generated-code/):00535                 rsv_prev_erase_nb_cell_0 EQU $003C
     0050             (./generated-code/):00536                 rsv_prev_erase_nb_cell_1 EQU $0050
     003E             (./generated-code/):00537                 rsv_prev_erase_routine_0 EQU $003E
     0052             (./generated-code/):00538                 rsv_prev_erase_routine_1 EQU $0052
     003A             (./generated-code/):00539                 rsv_prev_mapping_frame_0 EQU $003A
     004E             (./generated-code/):00540                 rsv_prev_mapping_frame_1 EQU $004E
     003D             (./generated-code/):00541                 rsv_prev_page_erase_routine_0 EQU $003D
     0051             (./generated-code/):00542                 rsv_prev_page_erase_routine_1 EQU $0051
     0048             (./generated-code/):00543                 rsv_prev_render_flags_0 EQU $0048
     005C             (./generated-code/):00544                 rsv_prev_render_flags_1 EQU $005C
     0080             (./generated-code/):00545                 rsv_prev_render_onscreen_mask EQU $0080
     0001             (./generated-code/):00546                 rsv_prev_render_overlay_mask EQU $0001
     0044             (./generated-code/):00547                 rsv_prev_x1_pixel_0 EQU $0044
     0058             (./generated-code/):00548                 rsv_prev_x1_pixel_1 EQU $0058
     0046             (./generated-code/):00549                 rsv_prev_x2_pixel_0 EQU $0046
     005A             (./generated-code/):00550                 rsv_prev_x2_pixel_1 EQU $005A
     0042             (./generated-code/):00551                 rsv_prev_x_pixel_0 EQU $0042
     0056             (./generated-code/):00552                 rsv_prev_x_pixel_1 EQU $0056
     0044             (./generated-code/):00553                 rsv_prev_xy1_pixel_0 EQU $0044
     0058             (./generated-code/):00554                 rsv_prev_xy1_pixel_1 EQU $0058
     0046             (./generated-code/):00555                 rsv_prev_xy2_pixel_0 EQU $0046
     005A             (./generated-code/):00556                 rsv_prev_xy2_pixel_1 EQU $005A
     0042             (./generated-code/):00557                 rsv_prev_xy_pixel_0 EQU $0042
     0056             (./generated-code/):00558                 rsv_prev_xy_pixel_1 EQU $0056
     0045             (./generated-code/):00559                 rsv_prev_y1_pixel_0 EQU $0045
     0059             (./generated-code/):00560                 rsv_prev_y1_pixel_1 EQU $0059
     0047             (./generated-code/):00561                 rsv_prev_y2_pixel_0 EQU $0047
     005B             (./generated-code/):00562                 rsv_prev_y2_pixel_1 EQU $005B
     0043             (./generated-code/):00563                 rsv_prev_y_pixel_0 EQU $0043
     0057             (./generated-code/):00564                 rsv_prev_y_pixel_1 EQU $0057
     0035             (./generated-code/):00565                 rsv_priority_0 EQU $0035
     0049             (./generated-code/):00566                 rsv_priority_1 EQU $0049
     0038             (./generated-code/):00567                 rsv_priority_next_obj_0 EQU $0038
     004C             (./generated-code/):00568                 rsv_priority_next_obj_1 EQU $004C
     0036             (./generated-code/):00569                 rsv_priority_prev_obj_0 EQU $0036
     004A             (./generated-code/):00570                 rsv_priority_prev_obj_1 EQU $004A
     0001             (./generated-code/):00571                 rsv_render_checkrefresh_mask EQU $0001
     0004             (./generated-code/):00572                 rsv_render_displaysprite_mask EQU $0004
     0002             (./generated-code/):00573                 rsv_render_erasesprite_mask EQU $0002
     0022             (./generated-code/):00574                 rsv_render_flags EQU $0022
     0080             (./generated-code/):00575                 rsv_render_onscreen_mask EQU $0080
     0008             (./generated-code/):00576                 rsv_render_outofrange_mask EQU $0008
     0031             (./generated-code/):00577                 rsv_x1_pixel EQU $0031
     0033             (./generated-code/):00578                 rsv_x2_pixel EQU $0033
     0031             (./generated-code/):00579                 rsv_xy1_pixel EQU $0031
     0033             (./generated-code/):00580                 rsv_xy2_pixel EQU $0033
     0032             (./generated-code/):00581                 rsv_y1_pixel EQU $0032
     0034             (./generated-code/):00582                 rsv_y2_pixel EQU $0034
     808C             (./generated-code/):00583                 RunNextObject EQU $808C
     8078             (./generated-code/):00584                 RunObject EQU $8078
     8073             (./generated-code/):00585                 RunObjects EQU $8073
     8078             (./generated-code/):00586                 RunObjects_01 EQU $8078
     8095             (./generated-code/):00587                 RunObjects_End EQU $8095
     8096             (./generated-code/):00588                 RunObjectsWhenPlayerIsDead EQU $8096
     86F6             (./generated-code/):00589                 s_loc1 EQU $86F6
     86EA             (./generated-code/):00590                 s_loc2 EQU $86EA
     714B             (./generated-code/):00591                 SAnim_Delay EQU $714B
     7116             (./generated-code/):00592                 SAnim_Do EQU $7116
     7139             (./generated-code/):00593                 SAnim_Do2 EQU $7139
     7193             (./generated-code/):00594                 SAnim_End EQU $7193
     718C             (./generated-code/):00595                 SAnim_End_FD EQU $718C
     7179             (./generated-code/):00596                 SAnim_End_FE EQU $7179
     716E             (./generated-code/):00597                 SAnim_End_FF EQU $716E
     7147             (./generated-code/):00598                 SAnim_Next EQU $7147
     719A             (./generated-code/):00599                 SAnim_WalkRun_Sub EQU $719A
     00E3             (./generated-code/):00600                 screen_bottom EQU $00E3
     0030             (./generated-code/):00601                 screen_left EQU $0030
     00CF             (./generated-code/):00602                 screen_right EQU $00CF
     001C             (./generated-code/):00603                 screen_top EQU $001C
     00A0             (./generated-code/):00604                 screen_width EQU $00A0
     6F74             (./generated-code/):00605                 SetCartPageA EQU $6F74
     6FA2             (./generated-code/):00606                 SetCartPageB EQU $6FA2
     81D9             (./generated-code/):00607                 Smps EQU $81D9
     81E8             (./generated-code/):00608                 Smps.1upPlaying EQU $81E8
     81ED             (./generated-code/):00609                 Smps.60HzData EQU $81ED
     81DB             (./generated-code/):00610                 Smps.CurrentTempo EQU $81DB
     81EC             (./generated-code/):00611                 Smps.DACEnabled EQU $81EC
     81E7             (./generated-code/):00612                 Smps.FadeInCounter EQU $81E7
     81E6             (./generated-code/):00613                 Smps.FadeInDelay EQU $81E6
     81E5             (./generated-code/):00614                 Smps.FadeInFlag EQU $81E5
     81DD             (./generated-code/):00615                 Smps.FadeOutCounter EQU $81DD
     81DE             (./generated-code/):00616                 Smps.FadeOutDelay EQU $81DE
     81DF             (./generated-code/):00617                 Smps.QueueToPlay EQU $81DF
     81D9             (./generated-code/):00618                 Smps.SFXPriorityVal EQU $81D9
     81E0             (./generated-code/):00619                 Smps.SFXToPlay EQU $81E0
     81E3             (./generated-code/):00620                 Smps.SFXVoiceTblPtr EQU $81E3
     81EB             (./generated-code/):00621                 Smps.SpeedUpFlag EQU $81EB
     81DC             (./generated-code/):00622                 Smps.StopMusic EQU $81DC
     81E9             (./generated-code/):00623                 Smps.TempoMod EQU $81E9
     81DA             (./generated-code/):00624                 Smps.TempoTimeout EQU $81DA
     81EA             (./generated-code/):00625                 Smps.TempoTurbo EQU $81EA
     81E1             (./generated-code/):00626                 Smps.VoiceTblPtr EQU $81E1
     81D9             (./generated-code/):00627                 SmpsStructStart EQU $81D9
     000F             (./generated-code/):00628                 SmpsVar.1upPlaying EQU $000F
     0014             (./generated-code/):00629                 SmpsVar.60HzData EQU $0014
     0002             (./generated-code/):00630                 SmpsVar.CurrentTempo EQU $0002
     0013             (./generated-code/):00631                 SmpsVar.DACEnabled EQU $0013
     000E             (./generated-code/):00632                 SmpsVar.FadeInCounter EQU $000E
     000D             (./generated-code/):00633                 SmpsVar.FadeInDelay EQU $000D
     000C             (./generated-code/):00634                 SmpsVar.FadeInFlag EQU $000C
     0004             (./generated-code/):00635                 SmpsVar.FadeOutCounter EQU $0004
     0005             (./generated-code/):00636                 SmpsVar.FadeOutDelay EQU $0005
     0006             (./generated-code/):00637                 SmpsVar.QueueToPlay EQU $0006
     0000             (./generated-code/):00638                 SmpsVar.SFXPriorityVal EQU $0000
     0007             (./generated-code/):00639                 SmpsVar.SFXToPlay EQU $0007
     000A             (./generated-code/):00640                 SmpsVar.SFXVoiceTblPtr EQU $000A
     0012             (./generated-code/):00641                 SmpsVar.SpeedUpFlag EQU $0012
     0003             (./generated-code/):00642                 SmpsVar.StopMusic EQU $0003
     0010             (./generated-code/):00643                 SmpsVar.TempoMod EQU $0010
     0001             (./generated-code/):00644                 SmpsVar.TempoTimeout EQU $0001
     0011             (./generated-code/):00645                 SmpsVar.TempoTurbo EQU $0011
     0008             (./generated-code/):00646                 SmpsVar.VoiceTblPtr EQU $0008
     001E             (./generated-code/):00647                 SndID_ArrowFiring EQU $001E
     007C             (./generated-code/):00648                 SndID_ArrowStick EQU $007C
     0012             (./generated-code/):00649                 SndID_Beep EQU $0012
     005C             (./generated-code/):00650                 SndID_Blip EQU $005C
     000C             (./generated-code/):00651                 SndID_BlockPush EQU $000C
     0054             (./generated-code/):00652                 SndID_Bonus EQU $0054
     0072             (./generated-code/):00653                 SndID_BonusBumper EQU $0072
     004A             (./generated-code/):00654                 SndID_BossExplosion EQU $004A
     001A             (./generated-code/):00655                 SndID_BossHit EQU $001A
     002A             (./generated-code/):00656                 SndID_Bumper EQU $002A
     0014             (./generated-code/):00657                 SndID_Bwoop EQU $0014
     0042             (./generated-code/):00658                 SndID_CasinoBonus EQU $0042
     0004             (./generated-code/):00659                 SndID_Checkpoint EQU $0004
     0062             (./generated-code/):00660                 SndID_CNZBossZap EQU $0062
     006E             (./generated-code/):00661                 SndID_CNZElevator EQU $006E
     0086             (./generated-code/):00662                 SndID_CNZLaunch EQU $0086
     0040             (./generated-code/):00663                 SndID_ContinueJingle EQU $0040
     0038             (./generated-code/):00664                 SndID_DoorSlam EQU $0038
     0094             (./generated-code/):00665                 SndID_DrawbridgeDown EQU $0094
     0090             (./generated-code/):00666                 SndID_DrawbridgeMove EQU $0090
     0026             (./generated-code/):00667                 SndID_Drown EQU $0026
     0048             (./generated-code/):00668                 SndID_EnterGiantRing EQU $0048
     009C             (./generated-code/):00669                 SndID_Error EQU $009C
     0044             (./generated-code/):00670                 SndID_Explosion EQU $0044
     007A             (./generated-code/):00671                 SndID_Fire EQU $007A
     0028             (./generated-code/):00672                 SndID_FireBurn EQU $0028
     0052             (./generated-code/):00673                 SndID_Flamethrower EQU $0052
     0088             (./generated-code/):00674                 SndID_Flipper EQU $0088
     0076             (./generated-code/):00675                 SndID_Gloop EQU $0076
     003C             (./generated-code/):00676                 SndID_Hammer EQU $003C
     007E             (./generated-code/):00677                 SndID_Helicopter EQU $007E
     008A             (./generated-code/):00678                 SndID_HTZLiftClick EQU $008A
     0008             (./generated-code/):00679                 SndID_Hurt EQU $0008
     000E             (./generated-code/):00680                 SndID_HurtBySpikes EQU $000E
     001C             (./generated-code/):00681                 SndID_InhalingBubble EQU $001C
     0002             (./generated-code/):00682                 SndID_Jump EQU $0002
     0074             (./generated-code/):00683                 SndID_LargeBumper EQU $0074
     00A0             (./generated-code/):00684                 SndID_LargeLaser EQU $00A0
     0022             (./generated-code/):00685                 SndID_LaserBeam EQU $0022
     0096             (./generated-code/):00686                 SndID_LaserBurst EQU $0096
     0098             (./generated-code/):00687                 SndID_LaserFloor EQU $0098
     001E             (./generated-code/):00688                 SndID_LavaBall EQU $001E
     008C             (./generated-code/):00689                 SndID_Leaves EQU $008C
     009E             (./generated-code/):00690                 SndID_MechaSonicBuzz EQU $009E
     008E             (./generated-code/):00691                 SndID_MegaMackDrop EQU $008E
     00A2             (./generated-code/):00692                 SndID_OilSlide EQU $00A2
     006A             (./generated-code/):00693                 SndID_OOZLidPop EQU $006A
     0070             (./generated-code/):00694                 SndID_PlatformKnock EQU $0070
     0078             (./generated-code/):00695                 SndID_PreArrowFiring EQU $0078
     0092             (./generated-code/):00696                 SndID_QuickDoorSlam EQU $0092
     002C             (./generated-code/):00697                 SndID_Ring EQU $002C
     005E             (./generated-code/):00698                 SndID_RingLeft EQU $005E
     002C             (./generated-code/):00699                 SndID_RingRight EQU $002C
     004E             (./generated-code/):00700                 SndID_RingSpill EQU $004E
     003E             (./generated-code/):00701                 SndID_Roll EQU $003E
     0030             (./generated-code/):00702                 SndID_Rumbling EQU $0030
     0084             (./generated-code/):00703                 SndID_Rumbling2 EQU $0084
     0098             (./generated-code/):00704                 SndID_Scatter EQU $0098
     0020             (./generated-code/):00705                 SndID_Shield EQU $0020
     0060             (./generated-code/):00706                 SndID_Signpost EQU $0060
     0068             (./generated-code/):00707                 SndID_Signpost2P EQU $0068
     000A             (./generated-code/):00708                 SndID_Skidding EQU $000A
     006C             (./generated-code/):00709                 SndID_SlidingSpike EQU $006C
     0058             (./generated-code/):00710                 SndID_SlowSmash EQU $0058
     0034             (./generated-code/):00711                 SndID_Smash EQU $0034
     0010             (./generated-code/):00712                 SndID_Sparkle EQU $0010
     0056             (./generated-code/):00713                 SndID_SpecStageEntry EQU $0056
     002E             (./generated-code/):00714                 SndID_SpikesMove EQU $002E
     0006             (./generated-code/):00715                 SndID_SpikeSwitch EQU $0006
     003A             (./generated-code/):00716                 SndID_SpindashRelease EQU $003A
     0082             (./generated-code/):00717                 SndID_SpindashRev EQU $0082
     0016             (./generated-code/):00718                 SndID_Splash EQU $0016
     005A             (./generated-code/):00719                 SndID_Spring EQU $005A
     0080             (./generated-code/):00720                 SndID_SuperTransform EQU $0080
     0018             (./generated-code/):00721                 SndID_Swish EQU $0018
     004C             (./generated-code/):00722                 SndID_TallyEnd EQU $004C
     009A             (./generated-code/):00723                 SndID_Teleport EQU $009A
     0046             (./generated-code/):00724                 SndID_WaterWarning EQU $0046
     0024             (./generated-code/):00725                 SndID_Zap EQU $0024
     70F1             (./generated-code/):00726                 Sonic_Animate_Do EQU $70F1
     0003             (./generated-code/):00727                 sound_end_addr EQU $0003
     0005             (./generated-code/):00728                 sound_meta_size EQU $0005
     0000             (./generated-code/):00729                 sound_page EQU $0000
     0001             (./generated-code/):00730                 sound_start_addr EQU $0001
     0073             (./generated-code/):00731                 speedshoes_time EQU $0073
     0079             (./generated-code/):00732                 spindash_counter EQU $0079
     0078             (./generated-code/):00733                 spindash_flag EQU $0078
     0018             (./generated-code/):00734                 standing_mask EQU $0018
     855A             (./generated-code/):00735                 start_pos EQU $855A
     85F3             (./generated-code/):00736                 start_x EQU $85F3
     000B             (./generated-code/):00737                 status EQU $000B
     0004             (./generated-code/):00738                 status_bit2 EQU $0004
     0080             (./generated-code/):00739                 status_bit7 EQU $0080
     000B             (./generated-code/):00740                 status_flags EQU $000B
     0002             (./generated-code/):00741                 status_inair EQU $0002
     0010             (./generated-code/):00742                 status_jumpingafterrolling EQU $0010
     0004             (./generated-code/):00743                 status_jumporroll EQU $0004
     0020             (./generated-code/):00744                 status_mainchar_pushing EQU $0020
     0008             (./generated-code/):00745                 status_mainchar_standing EQU $0008
     0008             (./generated-code/):00746                 status_norgroundnorfall EQU $0008
     0020             (./generated-code/):00747                 status_pushing EQU $0020
     0000             (./generated-code/):00748                 status_sec_hasShield EQU $0000
     0001             (./generated-code/):00749                 status_sec_hasShield_mask EQU $0001
     0002             (./generated-code/):00750                 status_sec_hasSpeedShoes EQU $0002
     0004             (./generated-code/):00751                 status_sec_hasSpeedShoes_mask EQU $0004
     0001             (./generated-code/):00752                 status_sec_isInvincible EQU $0001
     0002             (./generated-code/):00753                 status_sec_isInvincible_mask EQU $0002
     0007             (./generated-code/):00754                 status_sec_isSliding EQU $0007
     0080             (./generated-code/):00755                 status_sec_isSliding_mask EQU $0080
     006A             (./generated-code/):00756                 status_secondary EQU $006A
     0040             (./generated-code/):00757                 status_sidekick_pushing EQU $0040
     0010             (./generated-code/):00758                 status_sidekick_standing EQU $0010
     0040             (./generated-code/):00759                 status_underwater EQU $0040
     0001             (./generated-code/):00760                 status_x_orientation EQU $0001
     0001             (./generated-code/):00761                 status_xflip_mask EQU $0001
     0002             (./generated-code/):00762                 status_y_orientation EQU $0002
     0002             (./generated-code/):00763                 status_yflip_mask EQU $0002
     0077             (./generated-code/):00764                 stick_to_convex EQU $0077
     0004             (./generated-code/):00765                 submap_camera_x_max EQU $0004
     0000             (./generated-code/):00766                 submap_camera_x_min EQU $0000
     0006             (./generated-code/):00767                 submap_camera_y_max EQU $0006
     0002             (./generated-code/):00768                 submap_camera_y_min EQU $0002
     0001             (./generated-code/):00769                 subtype EQU $0001
     6FF6             (./generated-code/):00770                 SwapVideoPage EQU $6FF6
     724A             (./generated-code/):00771                 Tbl_Priority_First_Entry_0 EQU $724A
     72AC             (./generated-code/):00772                 Tbl_Priority_First_Entry_1 EQU $72AC
     725C             (./generated-code/):00773                 Tbl_Priority_Last_Entry_0 EQU $725C
     72BE             (./generated-code/):00774                 Tbl_Priority_Last_Entry_1 EQU $72BE
     734A             (./generated-code/):00775                 Tbl_Sub_Object_Draw EQU $734A
     730E             (./generated-code/):00776                 Tbl_Sub_Object_Erase EQU $730E
     9000             (./generated-code/):00777                 tile_buffer EQU $9000
     62C8             (./generated-code/):00778                 TileAnimRun EQU $62C8
     6289             (./generated-code/):00779                 TileAnimScript EQU $6289
     6221             (./generated-code/):00780                 TileAnimScriptData EQU $6221
     6261             (./generated-code/):00781                 TileAnimScriptInit EQU $6261
     628A             (./generated-code/):00782                 TileAnimScriptList EQU $628A
     0076             (./generated-code/):00783                 tilt EQU $0076
     6320             (./generated-code/):00784                 TlsAni_EHZ_flower1 EQU $6320
     6329             (./generated-code/):00785                 TlsAni_EHZ_flower1_imgs EQU $6329
     632F             (./generated-code/):00786                 TlsAni_EHZ_flower2 EQU $632F
     6338             (./generated-code/):00787                 TlsAni_EHZ_flower2_imgs EQU $6338
     633E             (./generated-code/):00788                 TlsAni_EHZ_flower3 EQU $633E
     6347             (./generated-code/):00789                 TlsAni_EHZ_flower3_imgs EQU $6347
     634D             (./generated-code/):00790                 TlsAni_EHZ_flower4 EQU $634D
     6356             (./generated-code/):00791                 TlsAni_EHZ_flower4_imgs EQU $6356
     635C             (./generated-code/):00792                 TlsAni_EHZ_pulseball1 EQU $635C
     6365             (./generated-code/):00793                 TlsAni_EHZ_pulseball1_imgs EQU $6365
     6371             (./generated-code/):00794                 TlsAni_EHZ_pulseball2 EQU $6371
     637A             (./generated-code/):00795                 TlsAni_EHZ_pulseball2_imgs EQU $637A
     6386             (./generated-code/):00796                 TlsAni_EHZ_pulseball3 EQU $6386
     638F             (./generated-code/):00797                 TlsAni_EHZ_pulseball3_imgs EQU $638F
     8733             (./generated-code/):00798                 tmb_hprio_tiles EQU $8733
     834F             (./generated-code/):00799                 tmb_old_camera_x EQU $834F
     8351             (./generated-code/):00800                 tmb_old_camera_y EQU $8351
     0090             (./generated-code/):00801                 tmb_vp_h_px EQU $0090
     0012             (./generated-code/):00802                 tmb_vp_h_tiles EQU $0012
     00B0             (./generated-code/):00803                 tmb_vp_v_px EQU $00B0
     000B             (./generated-code/):00804                 tmb_vp_v_tiles EQU $000B
     9F13             (./generated-code/):00805                 tmb_x EQU $9F13
     9F15             (./generated-code/):00806                 tmb_y EQU $9F15
     007D             (./generated-code/):00807                 top_solid_bit EQU $007D
     000C             (./generated-code/):00808                 touch_bottom_mask EQU $000C
     0003             (./generated-code/):00809                 touch_side_mask EQU $0003
     0030             (./generated-code/):00810                 touch_top_mask EQU $0030
     9F08             (./generated-code/):00811                 u_v_tl EQU $9F08
     7CFB             (./generated-code/):00812                 UDP_B0 EQU $7CFB
     7D68             (./generated-code/):00813                 UDP_B1 EQU $7D68
     7D42             (./generated-code/):00814                 UDP_ChainNextB0 EQU $7D42
     7DAF             (./generated-code/):00815                 UDP_ChainNextB1 EQU $7DAF
     7D22             (./generated-code/):00816                 UDP_ChainPrevB0 EQU $7D22
     7D8F             (./generated-code/):00817                 UDP_ChainPrevB1 EQU $7D8F
     7D4C             (./generated-code/):00818                 UDP_CheckDeleteB0 EQU $7D4C
     7DB9             (./generated-code/):00819                 UDP_CheckDeleteB1 EQU $7DB9
     7CFE             (./generated-code/):00820                 UDP_CheckEndB0 EQU $7CFE
     7D6B             (./generated-code/):00821                 UDP_CheckEndB1 EQU $7D6B
     7D2C             (./generated-code/):00822                 UDP_CheckPrioNextB0 EQU $7D2C
     7D99             (./generated-code/):00823                 UDP_CheckPrioNextB1 EQU $7D99
     7D0A             (./generated-code/):00824                 UDP_CheckPrioPrevB0 EQU $7D0A
     7D77             (./generated-code/):00825                 UDP_CheckPrioPrevB1 EQU $7D77
     7D03             (./generated-code/):00826                 UDP_InitListB0 EQU $7D03
     7D70             (./generated-code/):00827                 UDP_InitListB1 EQU $7D70
     7D61             (./generated-code/):00828                 UDP_SetNewPrioB0 EQU $7D61
     7DCE             (./generated-code/):00829                 UDP_SetNewPrioB1 EQU $7DCE
     7CF6             (./generated-code/):00830                 UDP_Start EQU $7CF6
     7CF6             (./generated-code/):00831                 UnsetDisplayPriority EQU $7CF6
     8313             (./generated-code/):00832                 UpdatePalette EQU $8313
     833D             (./generated-code/):00833                 UPP_return EQU $833D
     8330             (./generated-code/):00834                 UPP_SetColor EQU $8330
     831F             (./generated-code/):00835                 UPP_Tempo EQU $831F
     9F02             (./generated-code/):00836                 v_tl EQU $9F02
     703B             (./generated-code/):00837                 Vint_Last_runcount EQU $703B
     703E             (./generated-code/):00838                 Vint_Main_runcount EQU $703E
     703F             (./generated-code/):00839                 Vint_Main_runcount_cap EQU $703F
     703D             (./generated-code/):00840                 Vint_Main_runcount_w EQU $703D
     7039             (./generated-code/):00841                 Vint_runcount EQU $7039
     6FE2             (./generated-code/):00842                 WaitVBL EQU $6FE2
     82F3             (./generated-code/):00843                 White_palette EQU $82F3
     005D             (./generated-code/):00844                 width_pixels EQU $005D
     001A             (./generated-code/):00845                 x_acl EQU $001A
     9F0D             (./generated-code/):00846                 x_off EQU $9F0D
     0014             (./generated-code/):00847                 x_pixel EQU $0014
     000E             (./generated-code/):00848                 x_pos EQU $000E
     005F             (./generated-code/):00849                 x_radius EQU $005F
     0010             (./generated-code/):00850                 x_sub EQU $0010
     0016             (./generated-code/):00851                 x_vel EQU $0016
     0014             (./generated-code/):00852                 xy_pixel EQU $0014
     001C             (./generated-code/):00853                 y_acl EQU $001C
     9F0F             (./generated-code/):00854                 y_off EQU $9F0F
     0015             (./generated-code/):00855                 y_pixel EQU $0015
     0011             (./generated-code/):00856                 y_pos EQU $0011
     005E             (./generated-code/):00857                 y_radius EQU $005E
     0013             (./generated-code/):00858                 y_sub EQU $0013
     0018             (./generated-code/):00859                 y_vel EQU $0018
     0001             (./generated-code/):00860                 ZACurFrame EQU $0001
     0000             (./generated-code/):00861                 ZACurIndex EQU $0000
     0002             (./generated-code/):00862                 ZADuration EQU $0002
     0003             (./generated-code/):00863                 ZAMaxFrame EQU $0003
     0004             (./generated-code/):00864                 ZASize EQU $0004
                      (C:\Users\bhrou\gi):00003                         INCLUDE "./generated-code/EHZ/FD/Sonic/Sonic_Animation.glb"
     00FE             (./generated-code/):00001                 _goBackNFrames EQU $00FE
     00FD             (./generated-code/):00002                 _goToAnimation EQU $00FD
     00FC             (./generated-code/):00003                 _nextRoutine EQU $00FC
     00FA             (./generated-code/):00004                 _nextSubRoutine EQU $00FA
     00FF             (./generated-code/):00005                 _resetAnim EQU $00FF
     00FB             (./generated-code/):00006                 _resetAnimAndSubRoutine EQU $00FB
     38E4             (./generated-code/):00007                 Img_sonic_000 EQU $38E4
     383F             (./generated-code/):00008                 Img_sonic_001 EQU $383F
     3881             (./generated-code/):00009                 Img_sonic_002 EQU $3881
     37BB             (./generated-code/):00010                 Img_sonic_003 EQU $37BB
     37FD             (./generated-code/):00011                 Img_sonic_004 EQU $37FD
     3737             (./generated-code/):00012                 Img_sonic_005 EQU $3737
     3779             (./generated-code/):00013                 Img_sonic_006 EQU $3779
     36B3             (./generated-code/):00014                 Img_sonic_007 EQU $36B3
     36F5             (./generated-code/):00015                 Img_sonic_008 EQU $36F5
     3692             (./generated-code/):00016                 Img_sonic_009 EQU $3692
     3BFC             (./generated-code/):00017                 Img_sonic_010 EQU $3BFC
     3C3E             (./generated-code/):00018                 Img_sonic_011 EQU $3C3E
     3B36             (./generated-code/):00019                 Img_sonic_012 EQU $3B36
     3B99             (./generated-code/):00020                 Img_sonic_013 EQU $3B99
     3A70             (./generated-code/):00021                 Img_sonic_014 EQU $3A70
     3AD3             (./generated-code/):00022                 Img_sonic_015 EQU $3AD3
     3A2E             (./generated-code/):00023                 Img_sonic_016 EQU $3A2E
     3A4F             (./generated-code/):00024                 Img_sonic_017 EQU $3A4F
     39EC             (./generated-code/):00025                 Img_sonic_018 EQU $39EC
     3A0D             (./generated-code/):00026                 Img_sonic_019 EQU $3A0D
     3947             (./generated-code/):00027                 Img_sonic_020 EQU $3947
     3352             (./generated-code/):00028                 Img_sonic_021 EQU $3352
     3394             (./generated-code/):00029                 Img_sonic_022 EQU $3394
     32CE             (./generated-code/):00030                 Img_sonic_023 EQU $32CE
     3310             (./generated-code/):00031                 Img_sonic_024 EQU $3310
     326B             (./generated-code/):00032                 Img_sonic_025 EQU $326B
     32AD             (./generated-code/):00033                 Img_sonic_026 EQU $32AD
     3229             (./generated-code/):00034                 Img_sonic_027 EQU $3229
     324A             (./generated-code/):00035                 Img_sonic_028 EQU $324A
     3208             (./generated-code/):00036                 Img_sonic_029 EQU $3208
     3100             (./generated-code/):00037                 Img_sonic_030 EQU $3100
     3142             (./generated-code/):00038                 Img_sonic_031 EQU $3142
     3541             (./generated-code/):00039                 Img_sonic_032 EQU $3541
     3583             (./generated-code/):00040                 Img_sonic_033 EQU $3583
     34BD             (./generated-code/):00041                 Img_sonic_034 EQU $34BD
     34FF             (./generated-code/):00042                 Img_sonic_035 EQU $34FF
     347B             (./generated-code/):00043                 Img_sonic_036 EQU $347B
     349C             (./generated-code/):00044                 Img_sonic_037 EQU $349C
     3439             (./generated-code/):00045                 Img_sonic_038 EQU $3439
     345A             (./generated-code/):00046                 Img_sonic_039 EQU $345A
     3418             (./generated-code/):00047                 Img_sonic_040 EQU $3418
     33D6             (./generated-code/):00048                 Img_sonic_041 EQU $33D6
     33F7             (./generated-code/):00049                 Img_sonic_042 EQU $33F7
     38C3             (./generated-code/):00050                 Img_sonic_043 EQU $38C3
     3905             (./generated-code/):00051                 Img_sonic_044 EQU $3905
     3860             (./generated-code/):00052                 Img_sonic_045 EQU $3860
     38A2             (./generated-code/):00053                 Img_sonic_046 EQU $38A2
     37DC             (./generated-code/):00054                 Img_sonic_047 EQU $37DC
     381E             (./generated-code/):00055                 Img_sonic_048 EQU $381E
     3758             (./generated-code/):00056                 Img_sonic_049 EQU $3758
     3607             (./generated-code/):00057                 Img_sonic_050 EQU $3607
     363C             (./generated-code/):00058                 Img_sonic_051 EQU $363C
     35C5             (./generated-code/):00059                 Img_sonic_052 EQU $35C5
     35E6             (./generated-code/):00060                 Img_sonic_053 EQU $35E6
     3C1D             (./generated-code/):00061                 Img_sonic_054 EQU $3C1D
     3C5F             (./generated-code/):00062                 Img_sonic_055 EQU $3C5F
     3B57             (./generated-code/):00063                 Img_sonic_056 EQU $3B57
     3BBA             (./generated-code/):00064                 Img_sonic_057 EQU $3BBA
     3A91             (./generated-code/):00065                 Img_sonic_058 EQU $3A91
     3AF4             (./generated-code/):00066                 Img_sonic_059 EQU $3AF4
     39CB             (./generated-code/):00067                 Img_sonic_060 EQU $39CB
     3989             (./generated-code/):00068                 Img_sonic_061 EQU $3989
     39AA             (./generated-code/):00069                 Img_sonic_062 EQU $39AA
     3926             (./generated-code/):00070                 Img_sonic_063 EQU $3926
     3968             (./generated-code/):00071                 Img_sonic_064 EQU $3968
     3373             (./generated-code/):00072                 Img_sonic_065 EQU $3373
     33B5             (./generated-code/):00073                 Img_sonic_066 EQU $33B5
     32EF             (./generated-code/):00074                 Img_sonic_067 EQU $32EF
     3331             (./generated-code/):00075                 Img_sonic_068 EQU $3331
     328C             (./generated-code/):00076                 Img_sonic_069 EQU $328C
     31C6             (./generated-code/):00077                 Img_sonic_070 EQU $31C6
     31E7             (./generated-code/):00078                 Img_sonic_071 EQU $31E7
     3184             (./generated-code/):00079                 Img_sonic_072 EQU $3184
     31A5             (./generated-code/):00080                 Img_sonic_073 EQU $31A5
     3121             (./generated-code/):00081                 Img_sonic_074 EQU $3121
     3163             (./generated-code/):00082                 Img_sonic_075 EQU $3163
     3562             (./generated-code/):00083                 Img_sonic_076 EQU $3562
     35A4             (./generated-code/):00084                 Img_sonic_077 EQU $35A4
     34DE             (./generated-code/):00085                 Img_sonic_078 EQU $34DE
     3520             (./generated-code/):00086                 Img_sonic_079 EQU $3520
     3671             (./generated-code/):00087                 Img_sonic_091 EQU $3671
     365D             (./generated-code/):00088                 Img_sonic_092 EQU $365D
     3628             (./generated-code/):00089                 Img_sonic_094 EQU $3628
     379A             (./generated-code/):00090                 Img_sonic_204 EQU $379A
     36D4             (./generated-code/):00091                 Img_sonic_205 EQU $36D4
     3716             (./generated-code/):00092                 Img_sonic_206 EQU $3716
     3B78             (./generated-code/):00093                 Img_sonic_210 EQU $3B78
     3BDB             (./generated-code/):00094                 Img_sonic_211 EQU $3BDB
     3AB2             (./generated-code/):00095                 Img_sonic_212 EQU $3AB2
     3B15             (./generated-code/):00096                 Img_sonic_213 EQU $3B15
     022E             (./generated-code/):00097                 SonAni_Balance EQU $022E
     029C             (./generated-code/):00098                 SonAni_Blank EQU $029C
     025C             (./generated-code/):00099                 SonAni_Blink EQU $025C
     027A             (./generated-code/):00100                 SonAni_Dash2 EQU $027A
     0283             (./generated-code/):00101                 SonAni_Dash3 EQU $0283
     028E             (./generated-code/):00102                 SonAni_Death EQU $028E
     028A             (./generated-code/):00103                 SonAni_DeathBW EQU $028A
     023F             (./generated-code/):00104                 SonAni_Duck EQU $023F
     0262             (./generated-code/):00105                 SonAni_GetUp EQU $0262
     0292             (./generated-code/):00106                 SonAni_Hurt EQU $0292
     02A8             (./generated-code/):00107                 SonAni_LieDown EQU $02A8
     0238             (./generated-code/):00108                 SonAni_LookUp EQU $0238
     02A2             (./generated-code/):00109                 SonAni_Lying EQU $02A2
     00B7             (./generated-code/):00110                 SonAni_Push EQU $00B7
     0093             (./generated-code/):00111                 SonAni_Roll EQU $0093
     00A5             (./generated-code/):00112                 SonAni_Roll2 EQU $00A5
     0049             (./generated-code/):00113                 SonAni_Run EQU $0049
     0057             (./generated-code/):00114                 SonAni_Run_1 EQU $0057
     0065             (./generated-code/):00115                 SonAni_Run_2 EQU $0065
     0073             (./generated-code/):00116                 SonAni_Run_3 EQU $0073
     0296             (./generated-code/):00117                 SonAni_Slide EQU $0296
     0246             (./generated-code/):00118                 SonAni_Spindash EQU $0246
     0274             (./generated-code/):00119                 SonAni_Spring EQU $0274
     0268             (./generated-code/):00120                 SonAni_Stop EQU $0268
     0081             (./generated-code/):00121                 SonAni_Tumble EQU $0081
     00C5             (./generated-code/):00122                 SonAni_Wait EQU $00C5
     0001             (./generated-code/):00123                 SonAni_Walk EQU $0001
     0013             (./generated-code/):00124                 SonAni_Walk_1 EQU $0013
     0025             (./generated-code/):00125                 SonAni_Walk_2 EQU $0025
     0037             (./generated-code/):00126                 SonAni_Walk_3 EQU $0037
                      (C:\Users\bhrou\gi):00004                         org   $26E3
     FF               (C:\Users\bhrou\gi):00005                         setdp $FF
                      (C:\Users\bhrou\gi):00006                 
                      (C:\Users\bhrou\gi):00007                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00008                 ; Object - Sonic
                      (C:\Users\bhrou\gi):00009                 ;
                      (C:\Users\bhrou\gi):00010                 ; input REG : [u] pointer to Object Status Table (OST)
                      (C:\Users\bhrou\gi):00011                 ; ---------
                      (C:\Users\bhrou\gi):00012                 ;
                      (C:\Users\bhrou\gi):00013                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00014                 
                      (C:\Users\bhrou\gi):00015                         INCLUDE "./Engine/Macros.asm"   
26E3                  (./Engine/Macros.a):00001                 _ldd MACRO
                      (./Engine/Macros.a):00002                         ldd   #((\1)*256)+\2
                      (./Engine/Macros.a):00003                  ENDM
                      (./Engine/Macros.a):00004                  
26E3                  (./Engine/Macros.a):00005                 _ldx MACRO
                      (./Engine/Macros.a):00006                         ldx   #((\1)*256)+\2
                      (./Engine/Macros.a):00007                  ENDM
                      (./Engine/Macros.a):00008                  
26E3                  (./Engine/Macros.a):00009                 _ldy MACRO
                      (./Engine/Macros.a):00010                         ldy   #((\1)*256)+\2
                      (./Engine/Macros.a):00011                  ENDM
                      (./Engine/Macros.a):00012                  
26E3                  (./Engine/Macros.a):00013                 _ldu MACRO
                      (./Engine/Macros.a):00014                         ldu   #((\1)*256)+\2
                      (./Engine/Macros.a):00015                  ENDM  
                      (./Engine/Macros.a):00016                  
26E3                  (./Engine/Macros.a):00017                 _lds MACRO
                      (./Engine/Macros.a):00018                         lds   #((\1)*256)+\2
                      (./Engine/Macros.a):00019                  ENDM   
                      (./Engine/Macros.a):00020                  
26E3                  (./Engine/Macros.a):00021                 _SetCartPageA MACRO
                      (./Engine/Macros.a):00022                  IFDEF T2
                      (./Engine/Macros.a):00023                         jsr   SetCartPageA
                      (./Engine/Macros.a):00024                  ELSE
                      (./Engine/Macros.a):00025                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00026                  ENDC
                      (./Engine/Macros.a):00027                  ENDM      
                      (./Engine/Macros.a):00028                  
26E3                  (./Engine/Macros.a):00029                 _GetCartPageA MACRO
                      (./Engine/Macros.a):00030                  IFDEF T2
                      (./Engine/Macros.a):00031                         jsr   GetCartPageA
                      (./Engine/Macros.a):00032                  ELSE
                      (./Engine/Macros.a):00033                         lda   $E7E6
                      (./Engine/Macros.a):00034                  ENDC
                      (./Engine/Macros.a):00035                  ENDM
                      (./Engine/Macros.a):00036                 
26E3                  (./Engine/Macros.a):00037                 _SetCartPageB MACRO
                      (./Engine/Macros.a):00038                  IFDEF T2
                      (./Engine/Macros.a):00039                         jsr   SetCartPageB
                      (./Engine/Macros.a):00040                  ELSE
                      (./Engine/Macros.a):00041                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00042                  ENDC
                      (./Engine/Macros.a):00043                  ENDM      
                      (./Engine/Macros.a):00044                  
26E3                  (./Engine/Macros.a):00045                 _GetCartPageB MACRO
                      (./Engine/Macros.a):00046                  IFDEF T2
                      (./Engine/Macros.a):00047                         jsr   GetCartPageB
                      (./Engine/Macros.a):00048                  ELSE
                      (./Engine/Macros.a):00049                         ldb   $E7E6
                      (./Engine/Macros.a):00050                  ENDC
                      (./Engine/Macros.a):00051                  ENDM     
                      (./Engine/Macros.a):00052                 
26E3                  (./Engine/Macros.a):00053                 _RunObjectSwap MACRO
                      (./Engine/Macros.a):00054                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00055                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00056                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00057                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00058                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00059                         stu   glb_Address       
                      (./Engine/Macros.a):00060                         ldu   \2             
                      (./Engine/Macros.a):00061                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00062                  ENDM    
                      (./Engine/Macros.a):00063                 
26E3                  (./Engine/Macros.a):00064                 _RunObjectSwapRoutine MACRO
                      (./Engine/Macros.a):00065                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00066                         ; param 2 : Object routine
                      (./Engine/Macros.a):00067                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00068                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00069                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00070                         stu   glb_Address       
                      (./Engine/Macros.a):00071                         lda   \2        
                      (./Engine/Macros.a):00072                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00073                  ENDM 
                      (./Engine/Macros.a):00074                  
26E3                  (./Engine/Macros.a):00075                 _MountObject MACRO 
                      (./Engine/Macros.a):00076                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00077                         ; manual mount of an object from the resident page 1
                      (./Engine/Macros.a):00078                         lda   Obj_Index_Page+\1
                      (./Engine/Macros.a):00079                         _SetCartPageA
                      (./Engine/Macros.a):00080                         ldx   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00081                  ENDM
                      (./Engine/Macros.a):00082                 
26E3                  (./Engine/Macros.a):00083                 _RunObject MACRO 
                      (./Engine/Macros.a):00084                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00085                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00086                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00087                         _MountObject \1
                      (./Engine/Macros.a):00088                         ldu   \2        
                      (./Engine/Macros.a):00089                         jsr   ,x
                      (./Engine/Macros.a):00090                  ENDM
                      (./Engine/Macros.a):00091                 
26E3                  (./Engine/Macros.a):00092                 _RunObjectRoutine MACRO 
                      (./Engine/Macros.a):00093                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00094                         ; param 2 : Object routine
                      (./Engine/Macros.a):00095                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00096                         ; this object does not need or have a data structure for this routine
                      (./Engine/Macros.a):00097                         _MountObject \1
                      (./Engine/Macros.a):00098                         lda   \2        
                      (./Engine/Macros.a):00099                         jsr   ,x
                      (./Engine/Macros.a):00100                  ENDM
                      (./Engine/Macros.a):00101                 
26E3                  (./Engine/Macros.a):00102                 _asld MACRO
                      (./Engine/Macros.a):00103                         aslb
                      (./Engine/Macros.a):00104                         rola
                      (./Engine/Macros.a):00105                  ENDM        
                      (./Engine/Macros.a):00106                  
26E3                  (./Engine/Macros.a):00107                 _asrd MACRO
                      (./Engine/Macros.a):00108                         asra
                      (./Engine/Macros.a):00109                         rorb
                      (./Engine/Macros.a):00110                  ENDM      
                      (./Engine/Macros.a):00111                  
26E3                  (./Engine/Macros.a):00112                 _lsld MACRO
                      (./Engine/Macros.a):00113                         lslb
                      (./Engine/Macros.a):00114                         rola
                      (./Engine/Macros.a):00115                  ENDM        
                      (./Engine/Macros.a):00116                  
26E3                  (./Engine/Macros.a):00117                 _lsrd MACRO
                      (./Engine/Macros.a):00118                         lsra
                      (./Engine/Macros.a):00119                         rorb
                      (./Engine/Macros.a):00120                  ENDM
                      (./Engine/Macros.a):00121                  
26E3                  (./Engine/Macros.a):00122                 _rold MACRO
                      (./Engine/Macros.a):00123                         rolb
                      (./Engine/Macros.a):00124                         rola
                      (./Engine/Macros.a):00125                  ENDM    
                      (./Engine/Macros.a):00126                  
26E3                  (./Engine/Macros.a):00127                 _rord MACRO
                      (./Engine/Macros.a):00128                         rora
                      (./Engine/Macros.a):00129                         rorb
                      (./Engine/Macros.a):00130                  ENDM
                      (./Engine/Macros.a):00131                 
26E3                  (./Engine/Macros.a):00132                 _negd MACRO
                      (./Engine/Macros.a):00133                         nega
                      (./Engine/Macros.a):00134                         negb
                      (./Engine/Macros.a):00135                         sbca  #0
                      (./Engine/Macros.a):00136                  ENDM
                      (./Engine/Macros.a):00137                 
26E3                  (./Engine/Macros.a):00138                 _cba MACRO
                      (./Engine/Macros.a):00139                         pshs  b
                      (./Engine/Macros.a):00140                         cmpa  ,s+
                      (./Engine/Macros.a):00141                  ENDM
                      (./Engine/Macros.a):00142                 
26E3                  (./Engine/Macros.a):00143                 _aba MACRO
                      (./Engine/Macros.a):00144                         pshs  b
                      (./Engine/Macros.a):00145                         adda  ,s+
                      (./Engine/Macros.a):00146                  ENDM
                      (./Engine/Macros.a):00147                 
26E3                  (./Engine/Macros.a):00148                 _sba MACRO
                      (./Engine/Macros.a):00149                         pshs  b
                      (./Engine/Macros.a):00150                         suba  ,s+
                      (./Engine/Macros.a):00151                  ENDM
                      (./Engine/Macros.a):00152                 
26E3                  (./Engine/Macros.a):00153                 _cab MACRO
                      (./Engine/Macros.a):00154                         pshs  a
                      (./Engine/Macros.a):00155                         cmpb  ,s+
                      (./Engine/Macros.a):00156                  ENDM
                      (./Engine/Macros.a):00157                 
26E3                  (./Engine/Macros.a):00158                 _aab MACRO
                      (./Engine/Macros.a):00159                         pshs  a
                      (./Engine/Macros.a):00160                         addb  ,s+
                      (./Engine/Macros.a):00161                  ENDM
                      (./Engine/Macros.a):00162                 
26E3                  (./Engine/Macros.a):00163                 _sab MACRO
                      (./Engine/Macros.a):00164                         pshs  a
                      (./Engine/Macros.a):00165                         subb  ,s+
                      (./Engine/Macros.a):00166                  ENDM
                      (C:\Users\bhrou\gi):00016                 
     0000             (C:\Users\bhrou\gi):00017                 WIDTH_FACTOR equ 1/2 ; BM16 is wide dot
     9F00             (C:\Users\bhrou\gi):00018                 Sonic_top_speed_tmp    equ glb_tmp_var
     9F02             (C:\Users\bhrou\gi):00019                 Sonic_acceleration_tmp equ glb_tmp_var+2
     9F04             (C:\Users\bhrou\gi):00020                 Sonic_deceleration_tmp equ glb_tmp_var+4
                      (C:\Users\bhrou\gi):00021                 
                      (C:\Users\bhrou\gi):00022                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00023                                                                       *; ----------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00024                                                                       *; Object 01 - Sonic
                      (C:\Users\bhrou\gi):00025                                                                       *; ----------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00026                                                                       *; Sprite_19F50: Object_Sonic:
26E3                  (C:\Users\bhrou\gi):00027                 Obj01                                                 *Obj01:
                      (C:\Users\bhrou\gi):00028                                                                       *  ; a0=character
                      (C:\Users\bhrou\gi):00029                                                                       *  tst.w   (Debug_placement_mode).w    ; is debug mode being used?
                      (C:\Users\bhrou\gi):00030                                                                       *  beq.s   Obj01_Normal            ; if not, branch
                      (C:\Users\bhrou\gi):00031                                                                       *  jmp (DebugMode).l
                      (C:\Users\bhrou\gi):00032                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00033                                                                       *; loc_19F5C:
26E3                  (C:\Users\bhrou\gi):00034                 Obj01_Normal                                          *Obj01_Normal:
                      (C:\Users\bhrou\gi):00035                                                                       *  moveq   #0,d0
26E3 A6C81E           (C:\Users\bhrou\gi):00036 [5]     5               lda   routine,u                               *  move.b  routine(a0),d0
26E6 48               (C:\Users\bhrou\gi):00037 [2]     7               asla                                           
26E7 8E26EC           (C:\Users\bhrou\gi):00038 [3]     10              ldx   #Obj01_Index                            *  move.w  Obj01_Index(pc,d0.w),d1
26EA 6E96             (C:\Users\bhrou\gi):00039 [7]     17              jmp   [a,x]                                   *  jmp Obj01_Index(pc,d1.w)
                      (C:\Users\bhrou\gi):00040                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00041                                                                       *; off_19F6A: Obj01_States:
26EC                  (C:\Users\bhrou\gi):00042                 Obj01_Index                                           *Obj01_Index:  offsetTable
26EC 26F8             (C:\Users\bhrou\gi):00043                         fdb   Obj01_Init                              *      offsetTableEntry.w Obj01_Init       ;  0
26EE 274C             (C:\Users\bhrou\gi):00044                         fdb   Obj01_Control                           *      offsetTableEntry.w Obj01_Control    ;  2
26F0 2F82             (C:\Users\bhrou\gi):00045                         fdb   Obj01_Hurt                              *      offsetTableEntry.w Obj01_Hurt       ;  4
26F2 2FA2             (C:\Users\bhrou\gi):00046                         fdb   Obj01_Dead                              *      offsetTableEntry.w Obj01_Dead       ;  6
26F4 2FB3             (C:\Users\bhrou\gi):00047                         fdb   Obj01_Gone                              *      offsetTableEntry.w Obj01_Gone       ;  8
26F6 2FB4             (C:\Users\bhrou\gi):00048                         fdb   Obj01_Respawning                        *      offsetTableEntry.w Obj01_Respawning ; $A
                      (C:\Users\bhrou\gi):00049                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00050                                                                       *; loc_19F76: Obj_01_Sub_0: Obj01_Main:
26F8                  (C:\Users\bhrou\gi):00051                 Obj01_Init                                            *  Obj01_Init:
26F8 6CC81E           (C:\Users\bhrou\gi):00052 [7]     24              inc   routine,u                               *  addq.b  #2,routine(a0)  ; => Obj01_Control
                      (C:\Users\bhrou\gi):00053                         _ldd  $13,9*WIDTH_FACTOR                      *  move.b  #$13,y_radius(a0) ; this sets Sonic's collision height (2*pixels)
26FB CC1300           (             _ldd):00001 [3]     27              ldd   #(($13)*256)+9*WIDTH_FACTOR
26FE EDC85E           (C:\Users\bhrou\gi):00054 [6]     33              std   y_radius,u ; and x_radius               *  move.b  #9,x_radius(a0)
                      (C:\Users\bhrou\gi):00055                         ; unused                                      *  move.l  #Mapunc_Sonic,mappings(a0)
2701 8602             (C:\Users\bhrou\gi):00056 [2]     35              lda   #$02                                    *            
2703 A743             (C:\Users\bhrou\gi):00057 [5]     40              sta   priority,u                              *  move.b  #2,priority(a0)
2705 8600             (C:\Users\bhrou\gi):00058 [2]     42              lda   #18*WIDTH_FACTOR                         
2707 A7C85D           (C:\Users\bhrou\gi):00059 [5]     47              sta   width_pixels,u                          *  move.b  #$18,width_pixels(a0)
270A A642             (C:\Users\bhrou\gi):00060 [5]     52              lda   render_flags,u
270C 8A10             (C:\Users\bhrou\gi):00061 [2]     54              ora   #render_playfieldcoord_mask        
270E A742             (C:\Users\bhrou\gi):00062 [5]     59              sta   render_flags,u                          *  move.b  #4,render_flags(a0)
2710 CC0600           (C:\Users\bhrou\gi):00063 [3]     62              ldd   #$600                                   *
2713 FD30EC           (C:\Users\bhrou\gi):00064 [6]     68              std   Sonic_top_speed                         *  move.w  #$600,(Sonic_top_speed).w   ; set Sonic's top speed
2716 CC000C           (C:\Users\bhrou\gi):00065 [3]     71              ldd   #$000C                                  *
2719 FD30EE           (C:\Users\bhrou\gi):00066 [6]     77              std   Sonic_acceleration                      *  move.w  #$C,(Sonic_acceleration).w  ; set Sonic's acceleration
271C CC0080           (C:\Users\bhrou\gi):00067 [3]     80              ldd   #$0080
271F FD30F0           (C:\Users\bhrou\gi):00068 [6]     86              std   Sonic_deceleration                      *  move.w  #$80,(Sonic_deceleration).w ; set Sonic's deceleration
2722 7D30F5           (C:\Users\bhrou\gi):00069 [7]     93              tst   Last_star_pole_hit                      *  tst.b   (Last_star_pole_hit).w
2725 2617             (C:\Users\bhrou\gi):00070 [3]     96              bne   Obj01_Init_Continued                    *  bne.s   Obj01_Init_Continued
                      (C:\Users\bhrou\gi):00071                                                                       *  ; only happens when not starting at a checkpoint:
                      (C:\Users\bhrou\gi):00072                         ; unused                                      *  move.w  #make_art_tile(ArtTile_ArtUnc_Sonic,0,0),art_tile(a0)
                      (C:\Users\bhrou\gi):00073                         ; unused                                      *  bsr.w   Adjust2PArtPointer
2727 CC0C0D           (C:\Users\bhrou\gi):00074 [3]     99              ldd   #$0C0D
272A A7C87D           (C:\Users\bhrou\gi):00075 [5]     104             sta   top_solid_bit,u                         *  move.b  #$C,top_solid_bit(a0)
272D B730FB           (C:\Users\bhrou\gi):00076 [5]     109             sta   Saved_Solid_bits
2730 E7C87E           (C:\Users\bhrou\gi):00077 [5]     114             stb   lrb_solid_bit,u                         *  move.b  #$D,lrb_solid_bit(a0)
2733 EC4E             (C:\Users\bhrou\gi):00078 [6]     120             ldd   x_pos,u                                 *               
2735 FD30F7           (C:\Users\bhrou\gi):00079 [6]     126             std   Saved_x_pos                             *  move.w  x_pos(a0),(Saved_x_pos).w
2738 ECC811           (C:\Users\bhrou\gi):00080 [6]     132             ldd   y_pos,u                                 *               
273B FD30F9           (C:\Users\bhrou\gi):00081 [6]     138             std   Saved_y_pos                             *  move.w  y_pos(a0),(Saved_y_pos).w
                      (C:\Users\bhrou\gi):00082                         ; unused                                      *  move.w  art_tile(a0),(Saved_art_tile).w
                      (C:\Users\bhrou\gi):00083                         ; moved                                       *  move.w  top_solid_bit(a0),(Saved_Solid_bits).w
                      (C:\Users\bhrou\gi):00084                                                                       *
273E                  (C:\Users\bhrou\gi):00085                 Obj01_Init_Continued                                  *  Obj01_Init_Continued:
273E CC0004           (C:\Users\bhrou\gi):00086 [3]     141             ldd   #$0004
2741 A7C86B           (C:\Users\bhrou\gi):00087 [5]     146             sta   flips_remaining,u                       *  move.b  #0,flips_remaining(a0)
2744 E7C86C           (C:\Users\bhrou\gi):00088 [5]     151             stb   flip_speed,u                            *  move.b  #4,flip_speed(a0)
                      (C:\Users\bhrou\gi):00089                         ; unimplemented                               *  move.b  #0,(Super_Sonic_flag).w
2747 861E             (C:\Users\bhrou\gi):00090 [2]     153             lda   #$1E
2749 A7C867           (C:\Users\bhrou\gi):00091 [5]     158             sta   air_left,u                              *  move.b  #$1E,air_left(a0)
                      (C:\Users\bhrou\gi):00092                         ;ldd   x_pos,u
                      (C:\Users\bhrou\gi):00093                         ;subd  #$20*WIDTH_FACTOR
                      (C:\Users\bhrou\gi):00094                         ;std   x_pos,u                                 *  subi.w  #$20,x_pos(a0)
                      (C:\Users\bhrou\gi):00095                         ;ldd   y_pos,u
                      (C:\Users\bhrou\gi):00096                         ;addd  #4
                      (C:\Users\bhrou\gi):00097                         ;std   y_pos,u                                 *  addi_.w #4,y_pos(a0)
                      (C:\Users\bhrou\gi):00098                         ;ldd   #$0000                                  *
                      (C:\Users\bhrou\gi):00099                         ;std   Sonic_Pos_Record_Index                  *  move.w  #0,(Sonic_Pos_Record_Index).w
                      (C:\Users\bhrou\gi):00100                                                                       *
                      (C:\Users\bhrou\gi):00101                         ; init Sonic_Pos_Record_Buf with sonic's x and y pos
                      (C:\Users\bhrou\gi):00102                         ; init Sonic_Stat_Record_Buf at 0 (joyp control)
                      (C:\Users\bhrou\gi):00103                                                                       *  move.w  #$3F,d2
                      (C:\Users\bhrou\gi):00104                         ;jsr   Sonic_RecordPos                         *- bsr.w   Sonic_RecordPos
                      (C:\Users\bhrou\gi):00105                                                                       *  subq.w  #4,a1
                      (C:\Users\bhrou\gi):00106                                                                       *  move.l  #0,(a1)
                      (C:\Users\bhrou\gi):00107                                                                       *  dbf d2,-
                      (C:\Users\bhrou\gi):00108                                                                       *
                      (C:\Users\bhrou\gi):00109                         ;ldd   x_pos,u
                      (C:\Users\bhrou\gi):00110                         ;addd  #$20*WIDTH_FACTOR
                      (C:\Users\bhrou\gi):00111                         ;std   x_pos,u                                 *  addi.w  #$20,x_pos(a0)
                      (C:\Users\bhrou\gi):00112                         ;ldd   y_pos,u
                      (C:\Users\bhrou\gi):00113                         ;subd  #4
                      (C:\Users\bhrou\gi):00114                         ;std   y_pos,u                                 *  subi_.w #4,y_pos(a0)
                      (C:\Users\bhrou\gi):00115                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00116                                                                       *; Normal state for Sonic
                      (C:\Users\bhrou\gi):00117                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00118                                                                       *; loc_1A030: Obj_01_Sub_2:
274C                  (C:\Users\bhrou\gi):00119                 Obj01_Control                                         *  Obj01_Control:
                      (C:\Users\bhrou\gi):00120                                                                       *  tst.w   (Debug_mode_flag).w ; is debug cheat enabled?
                      (C:\Users\bhrou\gi):00121                                                                       *  beq.s   +           ; if not, branch
                      (C:\Users\bhrou\gi):00122                                                                       *  btst    #button_B,(Ctrl_1_Press).w  ; is button B pressed?
                      (C:\Users\bhrou\gi):00123                                                                       *  beq.s   +           ; if not, branch
                      (C:\Users\bhrou\gi):00124                                                                       *  move.w  #1,(Debug_placement_mode).w ; change Sonic into a ring/item
                      (C:\Users\bhrou\gi):00125                                                                       *  clr.b   (Control_Locked).w      ; unlock control
                      (C:\Users\bhrou\gi):00126                                                                       *  rts
                      (C:\Users\bhrou\gi):00127                                                                       *; -----------------------------------------------------------------------
274C 7D30FD           (C:\Users\bhrou\gi):00128 [7]     165             tst   Control_Locked                          *+ tst.b   (Control_Locked).w  ; are controls locked?
274F 2606             (C:\Users\bhrou\gi):00129 [3]     168             bne   >                                       *  bne.s   +           ; if yes, branch
2751 FC8008           (C:\Users\bhrou\gi):00130 [6]     174             ldd   Ctrl_1
2754 FD8006           (C:\Users\bhrou\gi):00131 [6]     180             std   Ctrl_1_Logical                          *  move.w  (Ctrl_1).w,(Ctrl_1_Logical).w   ; copy new held buttons, to enable joypad control
                      (C:\Users\bhrou\gi):00132                 !                                                     *+
2757 A6C869           (C:\Users\bhrou\gi):00133 [5]     185             lda   obj_control,u
275A 8501             (C:\Users\bhrou\gi):00134 [2]     187             bita  #1                                      *  btst    #0,obj_control(a0)  ; is Sonic interacting with another object that holds him in place or controls his movement somehow?
275C 2609             (C:\Users\bhrou\gi):00135 [3]     190             bne   >                                       *  bne.s   +           ; if yes, branch to skip Sonic's control
                      (C:\Users\bhrou\gi):00136                                                                       *  moveq   #0,d0
275E A64B             (C:\Users\bhrou\gi):00137 [5]     195             lda   status,u                          *  move.b  status(a0),d0
2760 8406             (C:\Users\bhrou\gi):00138 [2]     197             anda  #status_inair|status_jumporroll         *  andi.w  #6,d0   ; %0000 %0110
2762 8E2774           (C:\Users\bhrou\gi):00139 [3]     200             ldx   #Obj01_Modes                            *  move.w  Obj01_Modes(pc,d0.w),d1
2765 AD96             (C:\Users\bhrou\gi):00140 [11]    211             jsr   [a,x]                                   *  jsr Obj01_Modes(pc,d1.w)    ; run Sonic's movement control code
                      (C:\Users\bhrou\gi):00141                 !                                                     *+
                      (C:\Users\bhrou\gi):00142                 
                      (C:\Users\bhrou\gi):00143                         ; unimplemented                               *  cmpi.w  #-$100,(Camera_Min_Y_pos).w ; is vertical wrapping enabled?
                      (C:\Users\bhrou\gi):00144                                                                       *  bne.s   +               ; if not, branch
                      (C:\Users\bhrou\gi):00145                                                                       *  andi.w  #$7FF,y_pos(a0)         ; perform wrapping of Sonic's y position
                      (C:\Users\bhrou\gi):00146                                                                       *+
                      (C:\Users\bhrou\gi):00147                 
2767 BD277C           (C:\Users\bhrou\gi):00148 [8]     219             jsr   Sonic_Display                            *  bsr.s   Sonic_Display
                      (C:\Users\bhrou\gi):00149                         ;jsr   Sonic_Super                             *  bsr.w   Sonic_Super
                      (C:\Users\bhrou\gi):00150                         ;jsr   Sonic_RecordPos                         *  bsr.w   Sonic_RecordPos
                      (C:\Users\bhrou\gi):00151                         ;jsr   Sonic_Water                             *  bsr.w   Sonic_Water
276A FC30F2           (C:\Users\bhrou\gi):00152 [6]     225             ldd   Primary_Angle ; and Secondary_Angle      *  move.b  (Primary_Angle).w,next_tilt(a0)
276D EDC875           (C:\Users\bhrou\gi):00153 [6]     231             std   next_tilt,u   ; and tilt,u               *  move.b  (Secondary_Angle).w,tilt(a0)
                      (C:\Users\bhrou\gi):00154                         ;tst   WindTunnel_flag                         *  tst.b   (WindTunnel_flag).w
                      (C:\Users\bhrou\gi):00155                         ;beq   @a                                      *  beq.s   +
                      (C:\Users\bhrou\gi):00156                         ;tst   anim,u                                  *  tst.b   anim(a0)
                      (C:\Users\bhrou\gi):00157                         ;bne   @a                                      *  bne.s   +
                      (C:\Users\bhrou\gi):00158                         ;ldd   prev_anim,u                             *  move.b  prev_anim(a0),anim(a0)
                      (C:\Users\bhrou\gi):00159                         ;std   anim,u                                  
2770                  (C:\Users\bhrou\gi):00160                 @a                                                     *+
                      (C:\Users\bhrou\gi):00161                 
2770 BD2FC3           (C:\Users\bhrou\gi):00162 [8]     239             jsr   Sonic_Animate                            *  bsr.w   Sonic_Animate
                      (C:\Users\bhrou\gi):00163                         ;tst   obj_control,u                           *  tst.b   obj_control(a0)
                      (C:\Users\bhrou\gi):00164                         ;bmi   @a                                      *  bmi.s   +
                      (C:\Users\bhrou\gi):00165                         ;jsr   TouchResponse                           *  jsr (TouchResponse).l
2773                  (C:\Users\bhrou\gi):00166                 @a                                                     *+
                      (C:\Users\bhrou\gi):00167                 
2773 39               (C:\Users\bhrou\gi):00168 [5]     244             rts                                           *  bra.w   LoadSonicDynPLC
                      (C:\Users\bhrou\gi):00169                                                                       *
                      (C:\Users\bhrou\gi):00170                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00171                                                                       *; secondary states under state Obj01_Control
                      (C:\Users\bhrou\gi):00172                                                                       *; off_1A0BE:
2774                  (C:\Users\bhrou\gi):00173                 Obj01_Modes                                           *Obj01_Modes:  offsetTable
2774 2786             (C:\Users\bhrou\gi):00174                         fdb Obj01_MdNormal_Checks                     *      offsetTableEntry.w Obj01_MdNormal_Checks    ; 0 - not airborne or rolling
2776 27DB             (C:\Users\bhrou\gi):00175                         fdb Obj01_MdAir                               *      offsetTableEntry.w Obj01_MdAir          ; 2 - airborne
2778 27EE             (C:\Users\bhrou\gi):00176                         fdb Obj01_MdRoll                              *      offsetTableEntry.w Obj01_MdRoll         ; 4 - rolling
277A 27DB             (C:\Users\bhrou\gi):00177                         fdb Obj01_MdJump                              *      offsetTableEntry.w Obj01_MdJump         ; 6 - jumping
                      (C:\Users\bhrou\gi):00178                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00179                                                                       *
                      (C:\Users\bhrou\gi):00180                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00181                                                                       *
                      (C:\Users\bhrou\gi):00182                                                                       *; loc_1A0C6:
277C                  (C:\Users\bhrou\gi):00183                 Sonic_Display                                         *Sonic_Display:
                      (C:\Users\bhrou\gi):00184                                                                       *  move.w  invulnerable_time(a0),d0
                      (C:\Users\bhrou\gi):00185                                                                       *  beq.s   Obj01_Display
                      (C:\Users\bhrou\gi):00186                                                                       *  subq.w  #1,invulnerable_time(a0)
                      (C:\Users\bhrou\gi):00187                                                                       *  lsr.w   #3,d0
                      (C:\Users\bhrou\gi):00188                                                                       *  bcc.s   Obj01_ChkInvin
                      (C:\Users\bhrou\gi):00189                                                                       *; loc_1A0D4:
277C                  (C:\Users\bhrou\gi):00190                 Obj01_Display                                         *Obj01_Display:
277C BD71CB           (C:\Users\bhrou\gi):00191 [8]     252             jsr   DisplaySprite                           *  jsr (DisplaySprite).l
                      (C:\Users\bhrou\gi):00192                                                                       *; loc_1A0DA:
277F                  (C:\Users\bhrou\gi):00193                 Obj01_ChkInvin                                        *Obj01_ChkInvin:       ; Checks if invincibility has expired and disables it if it has.
                      (C:\Users\bhrou\gi):00194                                                                       *  btst    #status_sec_isInvincible,status_secondary(a0)
                      (C:\Users\bhrou\gi):00195                                                                       *  beq.s   Obj01_ChkShoes
                      (C:\Users\bhrou\gi):00196                                                                       *  tst.w   invincibility_time(a0)
                      (C:\Users\bhrou\gi):00197                                                                       *  beq.s   Obj01_ChkShoes  ; If there wasn't any time left, that means we're in Super Sonic mode.
                      (C:\Users\bhrou\gi):00198                                                                       *  subq.w  #1,invincibility_time(a0)
                      (C:\Users\bhrou\gi):00199                                                                       *  bne.s   Obj01_ChkShoes
                      (C:\Users\bhrou\gi):00200                                                                       *  tst.b   (Current_Boss_ID).w ; Don't change music if in a boss fight
                      (C:\Users\bhrou\gi):00201                                                                       *  bne.s   Obj01_RmvInvin
                      (C:\Users\bhrou\gi):00202                                                                       *  cmpi.b  #$C,air_left(a0)    ; Don't change music if drowning
                      (C:\Users\bhrou\gi):00203                                                                       *  blo.s   Obj01_RmvInvin
                      (C:\Users\bhrou\gi):00204                                                                       *  move.w  (Level_Music).w,d0
                      (C:\Users\bhrou\gi):00205                                                                       *  jsr (PlayMusic).l
                      (C:\Users\bhrou\gi):00206                                                                       *;loc_1A106:
277F                  (C:\Users\bhrou\gi):00207                 Obj01_RmvInvin                                        *Obj01_RmvInvin:
                      (C:\Users\bhrou\gi):00208                                                                       *  bclr    #status_sec_isInvincible,status_secondary(a0)
                      (C:\Users\bhrou\gi):00209                                                                       *; loc_1A10C:
277F                  (C:\Users\bhrou\gi):00210                 Obj01_ChkShoes                                        *Obj01_ChkShoes:       ; Checks if Speed Shoes have expired and disables them if they have.
                      (C:\Users\bhrou\gi):00211                                                                       *  btst    #status_sec_hasSpeedShoes,status_secondary(a0)
                      (C:\Users\bhrou\gi):00212                                                                       *  beq.s   Obj01_ExitChk
                      (C:\Users\bhrou\gi):00213                                                                       *  tst.w   speedshoes_time(a0)
                      (C:\Users\bhrou\gi):00214                                                                       *  beq.s   Obj01_ExitChk
                      (C:\Users\bhrou\gi):00215                                                                       *  subq.w  #1,speedshoes_time(a0)
                      (C:\Users\bhrou\gi):00216                                                                       *  bne.s   Obj01_ExitChk
                      (C:\Users\bhrou\gi):00217                                                                       *  move.w  #$600,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):00218                                                                       *  move.w  #$C,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):00219                                                                       *  move.w  #$80,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):00220                                                                       *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):00221                                                                       *  beq.s   Obj01_RmvSpeed
                      (C:\Users\bhrou\gi):00222                                                                       *  move.w  #$A00,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):00223                                                                       *  move.w  #$30,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):00224                                                                       *  move.w  #$100,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):00225                                                                       *; loc_1A14A:
277F                  (C:\Users\bhrou\gi):00226                 Obj01_RmvSpeed                                        *Obj01_RmvSpeed:
                      (C:\Users\bhrou\gi):00227                                                                       *  bclr    #status_sec_hasSpeedShoes,status_secondary(a0)
                      (C:\Users\bhrou\gi):00228                                                                       *  move.w  #MusID_SlowDown,d0  ; Slow down tempo
                      (C:\Users\bhrou\gi):00229                                                                       *  jmp (PlayMusic).l
                      (C:\Users\bhrou\gi):00230                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00231                                                                       *; return_1A15A:
277F                  (C:\Users\bhrou\gi):00232                 Obj01_ExitChk                                         *Obj01_ExitChk:
277F 39               (C:\Users\bhrou\gi):00233 [5]     257             rts                                           *  rts
                      (C:\Users\bhrou\gi):00234                                                                       *; End of subroutine Sonic_Display
                      (C:\Users\bhrou\gi):00235                                                                       *
                      (C:\Users\bhrou\gi):00236                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00237                                                                       *; Subroutine to record Sonic's previous positions for invincibility stars
                      (C:\Users\bhrou\gi):00238                                                                       *; and input/status flags for Tails' AI to follow
                      (C:\Users\bhrou\gi):00239                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00240                                                                       *
                      (C:\Users\bhrou\gi):00241                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00242                                                                       *
                      (C:\Users\bhrou\gi):00243                 ; unimplemented                                       *; loc_1A15C:
                      (C:\Users\bhrou\gi):00244                 ;Sonic_RecordPos                                       *Sonic_RecordPos:
                      (C:\Users\bhrou\gi):00245                                                                       *  move.w  (Sonic_Pos_Record_Index).w,d0
                      (C:\Users\bhrou\gi):00246                                                                       *  lea (Sonic_Pos_Record_Buf).w,a1
                      (C:\Users\bhrou\gi):00247                                                                       *  lea (a1,d0.w),a1
                      (C:\Users\bhrou\gi):00248                                                                       *  move.w  x_pos(a0),(a1)+
                      (C:\Users\bhrou\gi):00249                                                                       *  move.w  y_pos(a0),(a1)+
                      (C:\Users\bhrou\gi):00250                                                                       *  addq.b  #4,(Sonic_Pos_Record_Index+1).w
                      (C:\Users\bhrou\gi):00251                                                                       *
                      (C:\Users\bhrou\gi):00252                                                                       *  lea (Sonic_Stat_Record_Buf).w,a1
                      (C:\Users\bhrou\gi):00253                                                                       *  lea (a1,d0.w),a1
                      (C:\Users\bhrou\gi):00254                                                                       *  move.w  (Ctrl_1_Logical).w,(a1)+
                      (C:\Users\bhrou\gi):00255                                                                       *  move.w  status(a0),(a1)+
                      (C:\Users\bhrou\gi):00256                                                                       *
                      (C:\Users\bhrou\gi):00257                 ;        rts                                           *  rts
                      (C:\Users\bhrou\gi):00258                                                                       *; End of subroutine Sonic_RecordPos
                      (C:\Users\bhrou\gi):00259                                                                       *
                      (C:\Users\bhrou\gi):00260                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00261                                                                       *; Subroutine for Sonic when he's underwater
                      (C:\Users\bhrou\gi):00262                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00263                                                                       *
                      (C:\Users\bhrou\gi):00264                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00265                                                                       *
                      (C:\Users\bhrou\gi):00266                                                                       *; loc_1A186:
2780                  (C:\Users\bhrou\gi):00267                 Sonic_Water                                           *Sonic_Water:
2780 7D30F4           (C:\Users\bhrou\gi):00268 [7]     264             tst   Water_flag                              *  tst.b   (Water_flag).w  ; does level have water?
2783 2601             (C:\Users\bhrou\gi):00269 [3]     267             bne   Obj01_InWater                           *  bne.s   Obj01_InWater   ; if yes, branch
                      (C:\Users\bhrou\gi):00270                                                                       *
2785                  (C:\Users\bhrou\gi):00271                 return_1A18C                                          *return_1A18C:
2785 39               (C:\Users\bhrou\gi):00272 [5]     272             rts                                           *  rts
                      (C:\Users\bhrou\gi):00273                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00274                                                                       *; loc_1A18E:
2786                  (C:\Users\bhrou\gi):00275                 Obj01_InWater                                         *Obj01_InWater:
                      (C:\Users\bhrou\gi):00276                                                                       *  move.w  (Water_Level_1).w,d0
                      (C:\Users\bhrou\gi):00277                                                                       *  cmp.w   y_pos(a0),d0    ; is Sonic above the water?
                      (C:\Users\bhrou\gi):00278                                                                       *  bge.s   Obj01_OutWater  ; if yes, branch
                      (C:\Users\bhrou\gi):00279                                                                       *
                      (C:\Users\bhrou\gi):00280                                                                       *  bset    #6,status(a0)   ; set underwater flag
                      (C:\Users\bhrou\gi):00281                                                                       *  bne.s   return_1A18C    ; if already underwater, branch
                      (C:\Users\bhrou\gi):00282                                                                       *
                      (C:\Users\bhrou\gi):00283                                                                       *  movea.l a0,a1
                      (C:\Users\bhrou\gi):00284                                                                       *  bsr.w   ResumeMusic
                      (C:\Users\bhrou\gi):00285                                                                       *  move.b  #ObjID_SmallBubbles,(Sonic_BreathingBubbles+id).w ; load Obj0A (sonic's breathing bubbles) at $FFFFD080
                      (C:\Users\bhrou\gi):00286                                                                       *  move.b  #$81,(Sonic_BreathingBubbles+subtype).w
                      (C:\Users\bhrou\gi):00287                                                                       *  move.l  a0,(Sonic_BreathingBubbles+objoff_3C).w
                      (C:\Users\bhrou\gi):00288                                                                       *  move.w  #$300,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):00289                                                                       *  move.w  #6,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):00290                                                                       *  move.w  #$40,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):00291                                                                       *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):00292                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):00293                                                                       *  move.w  #$500,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):00294                                                                       *  move.w  #$18,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):00295                                                                       *  move.w  #$80,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):00296                                                                       *+
                      (C:\Users\bhrou\gi):00297                                                                       *  asr.w   x_vel(a0)
                      (C:\Users\bhrou\gi):00298                                                                       *  asr.w   y_vel(a0)   ; memory operands can only be shifted one bit at a time
                      (C:\Users\bhrou\gi):00299                                                                       *  asr.w   y_vel(a0)
                      (C:\Users\bhrou\gi):00300                                                                       *  beq.s   return_1A18C
                      (C:\Users\bhrou\gi):00301                                                                       *  move.w  #$100,(Sonic_Dust+anim).w   ; splash animation
                      (C:\Users\bhrou\gi):00302                                                                       *  move.w  #SndID_Splash,d0    ; splash sound
                      (C:\Users\bhrou\gi):00303                                                                       *  jmp (PlaySound).l
                      (C:\Users\bhrou\gi):00304                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00305                                                                       *; loc_1A1FE:
2786                  (C:\Users\bhrou\gi):00306                 Obj01_OutWater                                        *Obj01_OutWater:
                      (C:\Users\bhrou\gi):00307                                                                       *  bclr    #6,status(a0) ; unset underwater flag
                      (C:\Users\bhrou\gi):00308                                                                       *  beq.s   return_1A18C ; if already above water, branch
                      (C:\Users\bhrou\gi):00309                                                                       *
                      (C:\Users\bhrou\gi):00310                                                                       *  movea.l a0,a1
                      (C:\Users\bhrou\gi):00311                                                                       *  bsr.w   ResumeMusic
                      (C:\Users\bhrou\gi):00312                                                                       *  move.w  #$600,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):00313                                                                       *  move.w  #$C,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):00314                                                                       *  move.w  #$80,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):00315                                                                       *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):00316                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):00317                                                                       *  move.w  #$A00,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):00318                                                                       *  move.w  #$30,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):00319                                                                       *  move.w  #$100,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):00320                                                                       *+
                      (C:\Users\bhrou\gi):00321                                                                       *  cmpi.b  #4,routine(a0)  ; is Sonic falling back from getting hurt?
                      (C:\Users\bhrou\gi):00322                                                                       *  beq.s   +       ; if yes, branch
                      (C:\Users\bhrou\gi):00323                                                                       *  asl y_vel(a0)
                      (C:\Users\bhrou\gi):00324                                                                       *+
                      (C:\Users\bhrou\gi):00325                                                                       *  tst.w   y_vel(a0)
                      (C:\Users\bhrou\gi):00326                                                                       *  beq.w   return_1A18C
                      (C:\Users\bhrou\gi):00327                                                                       *  move.w  #$100,(Sonic_Dust+anim).w   ; splash animation
                      (C:\Users\bhrou\gi):00328                                                                       *  movea.l a0,a1
                      (C:\Users\bhrou\gi):00329                                                                       *  bsr.w   ResumeMusic
                      (C:\Users\bhrou\gi):00330                                                                       *  cmpi.w  #-$1000,y_vel(a0)
                      (C:\Users\bhrou\gi):00331                                                                       *  bgt.s   +
                      (C:\Users\bhrou\gi):00332                                                                       *  move.w  #-$1000,y_vel(a0)   ; limit upward y velocity exiting the water
                      (C:\Users\bhrou\gi):00333                                                                       *+
                      (C:\Users\bhrou\gi):00334                                                                       *  move.w  #SndID_Splash,d0    ; splash sound
                      (C:\Users\bhrou\gi):00335                                                                       *  jmp (PlaySound).l
                      (C:\Users\bhrou\gi):00336                                                                       *; End of subroutine Sonic_Water
                      (C:\Users\bhrou\gi):00337                                                                       *
                      (C:\Users\bhrou\gi):00338                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00339                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00340                                                                       *; Start of subroutine Obj01_MdNormal
                      (C:\Users\bhrou\gi):00341                                                                       *; Called if Sonic is neither airborne nor rolling this frame
                      (C:\Users\bhrou\gi):00342                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00343                                                                       *; loc_1A26E:
2786                  (C:\Users\bhrou\gi):00344                 Obj01_MdNormal_Checks                                 *Obj01_MdNormal_Checks:
2786 B68007           (C:\Users\bhrou\gi):00345 [5]     277             lda   Ctrl_1_Press_Logical                    *  move.b  (Ctrl_1_Press_Logical).w,d0
2789 B4000C           (C:\Users\bhrou\gi):00346 [5]     282             anda  button_B_mask|button_A_mask             *  andi.b  #button_B_mask|button_C_mask|button_A_mask,d0
278C 2631             (C:\Users\bhrou\gi):00347 [3]     285             bne   Obj01_MdNormal                          *  bne.s   Obj01_MdNormal
278E EC44             (C:\Users\bhrou\gi):00348 [6]     291             ldd   anim,u
2790 1083025C         (C:\Users\bhrou\gi):00349 [5]     296             cmpd  #SonAni_Blink                           *  cmpi.b  #AniIDSonAni_Blink,anim(a0)
2794 2744             (C:\Users\bhrou\gi):00350 [3]     299             beq   return_1A2DE                            *  beq.s   return_1A2DE
2796 10830262         (C:\Users\bhrou\gi):00351 [5]     304             cmpd  #SonAni_GetUp                           *  cmpi.b  #AniIDSonAni_GetUp,anim(a0)
279A 273E             (C:\Users\bhrou\gi):00352 [3]     307             beq   return_1A2DE                            *  beq.s   return_1A2DE
279C 108300C5         (C:\Users\bhrou\gi):00353 [5]     312             cmpd  #SonAni_Wait                            *  cmpi.b  #AniIDSonAni_Wait,anim(a0)
27A0 261D             (C:\Users\bhrou\gi):00354 [3]     315             bne   Obj01_MdNormal                          *  bne.s   Obj01_MdNormal
27A2 A648             (C:\Users\bhrou\gi):00355 [5]     320             lda   anim_frame,u                            
27A4 811E             (C:\Users\bhrou\gi):00356 [2]     322             cmpa  #$1E                                    *  cmpi.b  #$1E,anim_frame(a0)
27A6 2517             (C:\Users\bhrou\gi):00357 [3]     325             blo   Obj01_MdNormal                          *  blo.s   Obj01_MdNormal
27A8 F68006           (C:\Users\bhrou\gi):00358 [5]     330             ldb   Ctrl_1_Held_Logical                     *  move.b  (Ctrl_1_Held_Logical).w,d0
27AB C4FC             (C:\Users\bhrou\gi):00359 [2]     332             andb  #button_up_mask|button_down_mask|button_left_mask|button_right_mask|button_B_mask|button_A_mask *  andi.b  #button_up_mask|button_down_mask|button_left_mask|button_right_mask|button_B_mask|button_C_mask|button_A_mask,d0
27AD 272B             (C:\Users\bhrou\gi):00360 [3]     335             beq   return_1A2DE                            *  beq.s   return_1A2DE
27AF 8E025C           (C:\Users\bhrou\gi):00361 [3]     338             ldx   #SonAni_Blink
27B2 AF44             (C:\Users\bhrou\gi):00362 [6]     344             stx   anim,u                                  *  move.b  #AniIDSonAni_Blink,anim(a0)
27B4 81AC             (C:\Users\bhrou\gi):00363 [2]     346             cmpa  #$AC                                    *  cmpi.b  #$AC,anim_frame(a0)
27B6 2522             (C:\Users\bhrou\gi):00364 [3]     349             blo   return_1A2DE                            *  blo.s   return_1A2DE
27B8 CC0262           (C:\Users\bhrou\gi):00365 [3]     352             ldd   #SonAni_GetUp
27BB ED44             (C:\Users\bhrou\gi):00366 [6]     358             std   anim,u                                  *  move.b  #AniIDSonAni_GetUp,anim(a0)
27BD 201B             (C:\Users\bhrou\gi):00367 [3]     361             bra   return_1A2DE                            *  bra.s   return_1A2DE
                      (C:\Users\bhrou\gi):00368                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00369                                                                       *; loc_1A2B8:
27BF                  (C:\Users\bhrou\gi):00370                 Obj01_MdNormal                                        *Obj01_MdNormal:
27BF BD2DA1           (C:\Users\bhrou\gi):00371 [8]     369             jsr   Sonic_CheckSpindash                     *  bsr.w   Sonic_CheckSpindash
27C2 BD2D07           (C:\Users\bhrou\gi):00372 [8]     377             jsr   Sonic_Jump                              *  bsr.w   Sonic_Jump
27C5 BD2EBA           (C:\Users\bhrou\gi):00373 [8]     385             jsr   Sonic_SlopeResist                       *  bsr.w   Sonic_SlopeResist
27C8 BD2895           (C:\Users\bhrou\gi):00374 [8]     393             jsr   Sonic_Move                              *  bsr.w   Sonic_Move
27CB BD2CB7           (C:\Users\bhrou\gi):00375 [8]     401             jsr   Sonic_Roll                              *  bsr.w   Sonic_Roll
27CE BD2CB1           (C:\Users\bhrou\gi):00376 [8]     409             jsr   Sonic_LevelBound                        *  bsr.w   Sonic_LevelBound
27D1 BD288B           (C:\Users\bhrou\gi):00377 [8]     417             jsr   ObjectMove                              *  jsr (ObjectMove).l
27D4 BD2FBA           (C:\Users\bhrou\gi):00378 [8]     425             jsr   AnglePos                                *  bsr.w   AnglePos
27D7 BD2EBE           (C:\Users\bhrou\gi):00379 [8]     433             jsr   Sonic_SlopeRepel                        *  bsr.w   Sonic_SlopeRepel
                      (C:\Users\bhrou\gi):00380                                                                       *
27DA                  (C:\Users\bhrou\gi):00381                 return_1A2DE                                          *return_1A2DE:
27DA 39               (C:\Users\bhrou\gi):00382 [5]     438             rts                                           *  rts
                      (C:\Users\bhrou\gi):00383                                                                       *; End of subroutine Obj01_MdNormal
                      (C:\Users\bhrou\gi):00384                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00385                                                                       *; Start of subroutine Obj01_MdAir
                      (C:\Users\bhrou\gi):00386                                                                       *; Called if Sonic is airborne, but not in a ball (thus, probably not jumping)
27DB                  (C:\Users\bhrou\gi):00387                 Obj01_MdJump                                          *; loc_1A2E0: Obj01_MdJump
27DB                  (C:\Users\bhrou\gi):00388                 Obj01_MdAir                                           *Obj01_MdAir:
27DB BD2D6F           (C:\Users\bhrou\gi):00389 [8]     446             jsr   Sonic_JumpHeight                        *  bsr.w   Sonic_JumpHeight
27DE BD2BFE           (C:\Users\bhrou\gi):00390 [8]     454             jsr   Sonic_ChgJumpDir                        *  bsr.w   Sonic_ChgJumpDir
27E1 BD2CB1           (C:\Users\bhrou\gi):00391 [8]     462             jsr   Sonic_LevelBound                        *  bsr.w   Sonic_LevelBound
27E4 BD2809           (C:\Users\bhrou\gi):00392 [8]     470             jsr   ObjectMoveAndFall                        *  jsr (ObjectMoveAndFall).l
                      (C:\Users\bhrou\gi):00393                         ; moved in ObjectFall                          *  btst    #6,status(a0)   ; is Sonic underwater?
                      (C:\Users\bhrou\gi):00394                         ;                                              *  beq.s   +       ; if not, branch
                      (C:\Users\bhrou\gi):00395                         ;                                              *  subi.w  #$28,y_vel(a0)  ; reduce gravity by $28 ($38-$28=$10)
                      (C:\Users\bhrou\gi):00396                         ;                                              *+                                           
27E7 BD2EC0           (C:\Users\bhrou\gi):00397 [8]     478             jsr   Sonic_JumpAngle                         *  bsr.w   Sonic_JumpAngle
27EA BD2F13           (C:\Users\bhrou\gi):00398 [8]     486             jsr   Sonic_DoLevelCollision                  *  bsr.w   Sonic_DoLevelCollision
27ED 39               (C:\Users\bhrou\gi):00399 [5]     491             rts                                           *  rts
                      (C:\Users\bhrou\gi):00400                                                                       *; End of subroutine Obj01_MdAir
                      (C:\Users\bhrou\gi):00401                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00402                                                                       *; Start of subroutine Obj01_MdRoll
                      (C:\Users\bhrou\gi):00403                                                                       *; Called if Sonic is in a ball, but not airborne (thus, probably rolling)
                      (C:\Users\bhrou\gi):00404                                                                       *; loc_1A30A:
27EE                  (C:\Users\bhrou\gi):00405                 Obj01_MdRoll                                          *Obj01_MdRoll:
27EE 6DC878           (C:\Users\bhrou\gi):00406 [7]     498             tst   pinball_mode,u                          *  tst.b   pinball_mode(a0)
27F1 2603             (C:\Users\bhrou\gi):00407 [3]     501             bne   >                                       *  bne.s   +
27F3 BD2D07           (C:\Users\bhrou\gi):00408 [8]     509             jsr   Sonic_Jump                              *  bsr.w   Sonic_Jump
                      (C:\Users\bhrou\gi):00409                 !                                                     *+
27F6 BD2EBC           (C:\Users\bhrou\gi):00410 [8]     517             jsr   Sonic_RollRepel                         *  bsr.w   Sonic_RollRepel
27F9 BD2AE9           (C:\Users\bhrou\gi):00411 [8]     525             jsr   Sonic_RollSpeed                         *  bsr.w   Sonic_RollSpeed
27FC BD2CB1           (C:\Users\bhrou\gi):00412 [8]     533             jsr   Sonic_LevelBound                        *  bsr.w   Sonic_LevelBound
27FF BD288B           (C:\Users\bhrou\gi):00413 [8]     541             jsr   ObjectMove                              *  jsr (ObjectMove).l
2802 BD2FBA           (C:\Users\bhrou\gi):00414 [8]     549             jsr   AnglePos                                *  bsr.w   AnglePos
2805 BD2EBE           (C:\Users\bhrou\gi):00415 [8]     557             jsr   Sonic_SlopeRepel                        *  bsr.w   Sonic_SlopeRepel
2808 39               (C:\Users\bhrou\gi):00416 [5]     562             rts                                           *  rts
                      (C:\Users\bhrou\gi):00417                                                                       *; End of subroutine Obj01_MdRoll
                      (C:\Users\bhrou\gi):00418                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00419                                                                       *; Start of subroutine Obj01_MdJump
                      (C:\Users\bhrou\gi):00420                                                                       *; Called if Sonic is in a ball and airborne (he could be jumping but not necessarily)
                      (C:\Users\bhrou\gi):00421                                                                       *; Notes: This is identical to Obj01_MdAir, at least at this outer level.
                      (C:\Users\bhrou\gi):00422                                                                       *;        Why they gave it a separate copy of the code, I don't know.
                      (C:\Users\bhrou\gi):00423                                                                       *; loc_1A330: Obj01_MdJump2:
                      (C:\Users\bhrou\gi):00424                         ; duplicate code                              *Obj01_MdJump:
                      (C:\Users\bhrou\gi):00425                         ; see Obj01_MdAir                             *  bsr.w   Sonic_JumpHeight
                      (C:\Users\bhrou\gi):00426                                                                       *  bsr.w   Sonic_ChgJumpDir
                      (C:\Users\bhrou\gi):00427                                                                       *  bsr.w   Sonic_LevelBound
                      (C:\Users\bhrou\gi):00428                                                                       *  jsr (ObjectMoveAndFall).l
                      (C:\Users\bhrou\gi):00429                                                                       *  btst    #6,status(a0)   ; is Sonic underwater?
                      (C:\Users\bhrou\gi):00430                                                                       *  beq.s   +       ; if not, branch
                      (C:\Users\bhrou\gi):00431                                                                       *  subi.w  #$28,y_vel(a0)  ; reduce gravity by $28 ($38-$28=$10)
                      (C:\Users\bhrou\gi):00432                                                                       *+
                      (C:\Users\bhrou\gi):00433                                                                       *  bsr.w   Sonic_JumpAngle
                      (C:\Users\bhrou\gi):00434                                                                       *  bsr.w   Sonic_DoLevelCollision
                      (C:\Users\bhrou\gi):00435                                                                       *  rts
                      (C:\Users\bhrou\gi):00436                         ; end of duplicate code                       *; End of subroutine Obj01_MdJump
                      (C:\Users\bhrou\gi):00437                                                                       *
                      (C:\Users\bhrou\gi):00438                 
2809                  (C:\Users\bhrou\gi):00439                 ObjectMoveAndFall
2809 C638             (C:\Users\bhrou\gi):00440 [2]     564             ldb   #$38                                    
280B A64B             (C:\Users\bhrou\gi):00441 [5]     569             lda   status,u
280D 8540             (C:\Users\bhrou\gi):00442 [2]     571             bita  #status_underwater                      
280F 2702             (C:\Users\bhrou\gi):00443 [3]     574             beq   >             
2811 C610             (C:\Users\bhrou\gi):00444 [2]     576             ldb   #$10
2813 8400             (C:\Users\bhrou\gi):00445 [2]     578     !       anda  #0
2815 FD282E           (C:\Users\bhrou\gi):00446 [6]     584             std   @gravity
2818 BE703D           (C:\Users\bhrou\gi):00447 [6]     590             ldx   Vint_Main_runcount_w
281B 2603             (C:\Users\bhrou\gi):00448 [3]     593             bne   >
281D 8E0001           (C:\Users\bhrou\gi):00449 [3]     596             ldx   #1
2820 CC0000           (C:\Users\bhrou\gi):00450 [3]     599     !       ldd   #0
2823 FDFFFE           (C:\Users\bhrou\gi):00451 [6]     605             std   @y_vel
2826 108E0000         (C:\Users\bhrou\gi):00452 [4]     609             ldy   #0
     FFFE             (C:\Users\bhrou\gi):00453                 @y_vel  equ   -2
282A ECC818           (C:\Users\bhrou\gi):00454 [6]     615             ldd   y_vel,u
282D C30000           (C:\Users\bhrou\gi):00455 [4]     619     @loop   addd  #0
     282E             (C:\Users\bhrou\gi):00456                 @gravity equ  *-2
2830 2508             (C:\Users\bhrou\gi):00457 [3]     622             bcs   >
2832 31AB             (C:\Users\bhrou\gi):00458 [8]     630             leay  d,y
2834 301F             (C:\Users\bhrou\gi):00459 [5]     635             leax  -1,x
2836 26F5             (C:\Users\bhrou\gi):00460 [3]     638             bne   @loop 
2838 200C             (C:\Users\bhrou\gi):00461 [3]     641             bra   @a
283A B3282E           (C:\Users\bhrou\gi):00462 [7]     648     !       subd  @gravity
                      (C:\Users\bhrou\gi):00463                         _negd 
283D 40               (            _negd):00001 [2]     650             nega
283E 50               (            _negd):00002 [2]     652             negb
283F 8200             (            _negd):00003 [2]     654             sbca  #0
2841 31AB             (C:\Users\bhrou\gi):00464 [8]     662             leay  d,y
2843 CC0000           (C:\Users\bhrou\gi):00465 [3]     665             ldd   #0
2846 EDC818           (C:\Users\bhrou\gi):00466 [6]     671     @a      std   y_vel,u
2849 109FFE           (C:\Users\bhrou\gi):00467 [6]     677             sty   @y_vel
                      (C:\Users\bhrou\gi):00468                         ;
284C ECC816           (C:\Users\bhrou\gi):00469 [6]     683             ldd   x_vel,u
284F BE703D           (C:\Users\bhrou\gi):00470 [6]     689             ldx   Vint_Main_runcount_w     ; take number of elapsed frame since last render and multiply by inertia/2
2852 2707             (C:\Users\bhrou\gi):00471 [3]     692             beq   @ObjMv
2854 E3C816           (C:\Users\bhrou\gi):00472 [7]     699     !       addd  x_vel,u
2857 301F             (C:\Users\bhrou\gi):00473 [5]     704             leax  -1,x
2859 26F9             (C:\Users\bhrou\gi):00474 [3]     707             bne   < 
285B                  (C:\Users\bhrou\gi):00475                 @ObjMv  _asrd ; wide dot ratio
285B 47               (            _asrd):00001 [2]     709             asra
285C 56               (            _asrd):00002 [2]     711             rorb
285D FD2868           (C:\Users\bhrou\gi):00476 [6]     717             std   @x_vel
                      (C:\Users\bhrou\gi):00477                                                        *    move.l  x_pos(a0),d2    ; load x position
                      (C:\Users\bhrou\gi):00478                                                        *    move.l  y_pos(a0),d3    ; load y position
                      (C:\Users\bhrou\gi):00479                                                        *    move.w  x_vel(a0),d0    ; load horizontal speed
                      (C:\Users\bhrou\gi):00480                                                        *    ext.l   d0
                      (C:\Users\bhrou\gi):00481                                                        *    asl.l   #8,d0   ; shift velocity to line up with the middle 16 bits of the 32-bit position
                      (C:\Users\bhrou\gi):00482                                                        *    add.l   d0,d2   ; add to x-axis position    ; note this affects the subpixel position x_sub(a0) = 2+x_pos(a0)
2860 F62868           (C:\Users\bhrou\gi):00483 [5]     722             ldb   @x_vel
2863 1D               (C:\Users\bhrou\gi):00484 [2]     724             sex                            ; velocity is positive or negative, take care of that
2864 B72871           (C:\Users\bhrou\gi):00485 [5]     729             sta   @b
2867 CC0000           (C:\Users\bhrou\gi):00486 [3]     732             ldd   #0
     2868             (C:\Users\bhrou\gi):00487                 @x_vel  equ   *-2
286A E34F             (C:\Users\bhrou\gi):00488 [7]     739             addd  x_pos+1,u                ; x_pos must be followed by x_sub in memory
286C ED4F             (C:\Users\bhrou\gi):00489 [6]     745             std   x_pos+1,u                ; update low byte of x_pos and x_sub byte
286E A64E             (C:\Users\bhrou\gi):00490 [5]     750             lda   x_pos,u
2870 8900             (C:\Users\bhrou\gi):00491 [2]     752             adca  #$00                     ; parameter is modified by the result of sign extend
     2871             (C:\Users\bhrou\gi):00492                 @b      equ   *-1
2872 A74E             (C:\Users\bhrou\gi):00493 [5]     757             sta   x_pos,u                  ; update high byte of x_pos
                      (C:\Users\bhrou\gi):00494                                                        *    move.w  y_vel(a0),d0    ; load vertical speed
                      (C:\Users\bhrou\gi):00495                                                        *    ext.l   d0
                      (C:\Users\bhrou\gi):00496                                                        *    asl.l   #8,d0   ; shift velocity to line up with the middle 16 bits of the 32-bit position
                      (C:\Users\bhrou\gi):00497                                                        *    add.l   d0,d3   ; add to y-axis position    ; note this affects the subpixel position y_sub(a0) = 2+y_pos(a0)
                      (C:\Users\bhrou\gi):00498                                                        *    move.l  d2,u_pos(a0)    ; update x-axis position
                      (C:\Users\bhrou\gi):00499                                                        *    move.l  d3,y_pos(a0)    ; update y-axis position
2874 D6FE             (C:\Users\bhrou\gi):00500 [4]     761             ldb   @y_vel
2876 1D               (C:\Users\bhrou\gi):00501 [2]     763             sex                            ; velocity is positive or negative, take care of that
2877 B72886           (C:\Users\bhrou\gi):00502 [5]     768             sta   @c
287A DCFE             (C:\Users\bhrou\gi):00503 [5]     773             ldd   @y_vel
287C E3C812           (C:\Users\bhrou\gi):00504 [7]     780             addd  y_pos+1,u                ; y_pos must be followed by y_sub in memory
287F EDC812           (C:\Users\bhrou\gi):00505 [6]     786             std   y_pos+1,u                ; update low byte of y_pos and y_sub byte
2882 A6C811           (C:\Users\bhrou\gi):00506 [5]     791             lda   y_pos,u
2885 8900             (C:\Users\bhrou\gi):00507 [2]     793             adca  #$00                     ; parameter is modified by the result of sign extend
     2886             (C:\Users\bhrou\gi):00508                 @c      equ   *-1
2887 A7C811           (C:\Users\bhrou\gi):00509 [5]     798             sta   y_pos,u                  ; update high byte of y_pos
288A 39               (C:\Users\bhrou\gi):00510 [5]     803             rts                            *    rts
                      (C:\Users\bhrou\gi):00511                                                        *; End of function ObjectMove
                      (C:\Users\bhrou\gi):00512                                                        *; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
288B                  (C:\Users\bhrou\gi):00513                 ObjectMove
288B ECC818           (C:\Users\bhrou\gi):00514 [6]     809             ldd   y_vel,u
288E DDFE             (C:\Users\bhrou\gi):00515 [5]     814             std   @y_vel
2890 ECC816           (C:\Users\bhrou\gi):00516 [6]     820             ldd   x_vel,u
2893 20C6             (C:\Users\bhrou\gi):00517 [3]     823             bra   @ObjMv
                      (C:\Users\bhrou\gi):00518                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00519                                                                       *; Subroutine to make Sonic walk/run
                      (C:\Users\bhrou\gi):00520                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00521                                                                       *
                      (C:\Users\bhrou\gi):00522                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00523                                                                       *
                      (C:\Users\bhrou\gi):00524                                                                       *; loc_1A35A:
2895                  (C:\Users\bhrou\gi):00525                 Sonic_Move                                            *Sonic_Move:
2895 FC30EC           (C:\Users\bhrou\gi):00526 [6]     829             ldd   Sonic_top_speed
2898 FD9F00           (C:\Users\bhrou\gi):00527 [6]     835             std   Sonic_top_speed_tmp                     *  move.w  (Sonic_top_speed).w,d6
289B B6703E           (C:\Users\bhrou\gi):00528 [5]     840             lda   Vint_Main_runcount
289E 2602             (C:\Users\bhrou\gi):00529 [3]     843             bne   >
28A0 8601             (C:\Users\bhrou\gi):00530 [2]     845             lda   #1
28A2 F630EF           (C:\Users\bhrou\gi):00531 [5]     850     !       ldb   Sonic_acceleration+1
28A5 3D               (C:\Users\bhrou\gi):00532 [11]    861             mul
28A6 FD9F02           (C:\Users\bhrou\gi):00533 [6]     867             std   Sonic_acceleration_tmp                  *  move.w  (Sonic_acceleration).w,d5
28A9 B6703E           (C:\Users\bhrou\gi):00534 [5]     872             lda   Vint_Main_runcount
28AC 2602             (C:\Users\bhrou\gi):00535 [3]     875             bne   >
28AE 8601             (C:\Users\bhrou\gi):00536 [2]     877             lda   #1
28B0 F630F1           (C:\Users\bhrou\gi):00537 [5]     882     !       ldb   Sonic_deceleration+1
28B3 3D               (C:\Users\bhrou\gi):00538 [11]    893             mul
28B4 FD9F04           (C:\Users\bhrou\gi):00539 [6]     899             std   Sonic_deceleration_tmp                  *  move.w  (Sonic_deceleration).w,d4
                      (C:\Users\bhrou\gi):00540                                                                       *    if status_sec_isSliding = 7
28B7 6DC86A           (C:\Users\bhrou\gi):00541 [7]     906             tst   status_secondary,u                      *  tst.b   status_secondary(a0)
28BA 102B0124         (C:\Users\bhrou\gi):00542 [5+?]   911             lbmi  Obj01_Traction                          *  bmi.w   Obj01_Traction
                      (C:\Users\bhrou\gi):00543                                                                       *    else
                      (C:\Users\bhrou\gi):00544                                                                       *  btst    #status_sec_isSliding,status_secondary(a0)
                      (C:\Users\bhrou\gi):00545                                                                       *  bne.w   Obj01_Traction
                      (C:\Users\bhrou\gi):00546                                                                       *    endif
28BE 6DC86D           (C:\Users\bhrou\gi):00547 [7]     918             tst   move_lock,u                             *  tst.w   move_lock(a0)
28C1 102600CA         (C:\Users\bhrou\gi):00548 [5+?]   923             lbne  Obj01_ResetScr                          *  bne.w   Obj01_ResetScr
28C5 B68006           (C:\Users\bhrou\gi):00549 [5]     928             lda   Ctrl_1_Held_Logical
28C8 8440             (C:\Users\bhrou\gi):00550 [2]     930             anda  #button_left_mask                       *  btst    #button_left,(Ctrl_1_Held_Logical).w    ; is left being pressed?
28CA 2703             (C:\Users\bhrou\gi):00551 [3]     933             beq   Obj01_NotLeft                           *  beq.s   Obj01_NotLeft           ; if not, branch
28CC BD29FB           (C:\Users\bhrou\gi):00552 [8]     941             jsr   Sonic_MoveLeft                          *  bsr.w   Sonic_MoveLeft
                      (C:\Users\bhrou\gi):00553                                                                       *; loc_1A382:
28CF                  (C:\Users\bhrou\gi):00554                 Obj01_NotLeft                                         *Obj01_NotLeft:
28CF B68006           (C:\Users\bhrou\gi):00555 [5]     946             lda   Ctrl_1_Held_Logical                     *  btst    #button_right,(Ctrl_1_Held_Logical).w   ; is right being pressed?
28D2 8480             (C:\Users\bhrou\gi):00556 [2]     948             anda  #button_right_mask                       
28D4 2703             (C:\Users\bhrou\gi):00557 [3]     951             beq   Obj01_NotRight                          *  beq.s   Obj01_NotRight          ; if not, branch
28D6 BD2A79           (C:\Users\bhrou\gi):00558 [8]     959             jsr   Sonic_MoveRight                         *  bsr.w   Sonic_MoveRight
                      (C:\Users\bhrou\gi):00559                                                                       *; loc_1A38E:
28D9                  (C:\Users\bhrou\gi):00560                 Obj01_NotRight                                        *Obj01_NotRight:
28D9 A6C860           (C:\Users\bhrou\gi):00561 [5]     964             lda   angle,u                                 *  move.b  angle(a0),d0
28DC 8B20             (C:\Users\bhrou\gi):00562 [2]     966             adda  #$20                                    *  addi.b  #$20,d0
28DE 84C0             (C:\Users\bhrou\gi):00563 [2]     968             anda  #$C0                                    *  andi.b  #$C0,d0     ; is Sonic on a slope?
28E0 102600AB         (C:\Users\bhrou\gi):00564 [5+?]   973             lbne  Obj01_ResetScr                          *  bne.w   Obj01_ResetScr  ; if yes, branch
28E4 ECC864           (C:\Users\bhrou\gi):00565 [6]     979             ldd   inertia,u                               *  tst.w   inertia(a0) ; is Sonic moving?
28E7 102600A4         (C:\Users\bhrou\gi):00566 [5+?]   984             lbne  Obj01_ResetScr                          *  bne.w   Obj01_ResetScr  ; if yes, branch
28EB E64B             (C:\Users\bhrou\gi):00567 [5]     989             ldb   status,u
28ED C4DF             (C:\Users\bhrou\gi):00568 [2]     991             andb  #^status_pushing 
28EF E74B             (C:\Users\bhrou\gi):00569 [5]     996             stb   status,u                                *  bclr    #5,status(a0)
28F1 8E00C5           (C:\Users\bhrou\gi):00570 [3]     999             ldx   #SonAni_Wait                            *  move.b  #AniIDSonAni_Wait,anim(a0)  ; use "standing" animation
28F4 AF44             (C:\Users\bhrou\gi):00571 [6]     1005            stx   anim,u
28F6 C508             (C:\Users\bhrou\gi):00572 [2]     1007            bitb  #status_norgroundnorfall                *  btst    #3,status(a0)
28F8 2735             (C:\Users\bhrou\gi):00573 [3]     1010            beq   Sonic_Balance                           *  beq.w   Sonic_Balance
                      (C:\Users\bhrou\gi):00574                 
                      (C:\Users\bhrou\gi):00575                 
                      (C:\Users\bhrou\gi):00576                 
                      (C:\Users\bhrou\gi):00577                 
                      (C:\Users\bhrou\gi):00578                         ; TODO fix object size
28FA 2033             (C:\Users\bhrou\gi):00579 [3]     1013            bra   Sonic_Lookup
                      (C:\Users\bhrou\gi):00580                         ; --------------------
28FC A6C87C           (C:\Users\bhrou\gi):00581 [5]     1018            lda   interact,u                              *  moveq   #0,d0
                      (C:\Users\bhrou\gi):00582                                                                       *  move.b  interact(a0),d0
                      (C:\Users\bhrou\gi):00583                                                                       *    if object_size=$40
                      (C:\Users\bhrou\gi):00584                                                                       *  lsl.w   #6,d0
                      (C:\Users\bhrou\gi):00585                                                                       *    else
28FF C664             (C:\Users\bhrou\gi):00586 [2]     1020            ldb   #object_size
2901 3D               (C:\Users\bhrou\gi):00587 [11]    1031            mul                                           *  mulu.w  #object_size,d0
                      (C:\Users\bhrou\gi):00588                                                                       *    endif
2902 8E641A           (C:\Users\bhrou\gi):00589 [3]     1034            ldx   #Object_RAM                             *  lea (Object_RAM).w,a1 ; a1=character
2905 30CB             (C:\Users\bhrou\gi):00590 [8]     1042            leax  d,u                                     *  lea (a1,d0.w),a1 ; a1=object
2907 6D0B             (C:\Users\bhrou\gi):00591 [7]     1049            tst   status,x                                *  tst.b   status(a1)
2909 2B24             (C:\Users\bhrou\gi):00592 [3]     1052            bmi   Sonic_Lookup                            *  bmi.w   Sonic_Lookup
290B 8600             (C:\Users\bhrou\gi):00593 [2]     1054            lda   #0                                      *  moveq   #0,d1
290D E6885D           (C:\Users\bhrou\gi):00594 [5]     1059            ldb   width_pixels,x                          *  move.b  width_pixels(a1),d1
2910 FD291B           (C:\Users\bhrou\gi):00595 [6]     1065            std   @d1                                     *  move.w  d1,d2
                      (C:\Users\bhrou\gi):00596                         _lsld                                         *  add.w   d2,d2
2913 58               (            _lsld):00001 [2]     1067            lslb
2914 49               (            _lsld):00002 [2]     1069            rola
2915 C002             (C:\Users\bhrou\gi):00597 [2]     1071            subb  #2                                      *  subq.w  #2,d2
2917 F7292A           (C:\Users\bhrou\gi):00598 [5]     1076            stb   @d2
291A CC0000           (C:\Users\bhrou\gi):00599 [3]     1079            ldd   #0
     291B             (C:\Users\bhrou\gi):00600                 @d1     equ   *-2
291D E34E             (C:\Users\bhrou\gi):00601 [7]     1086            addd  x_pos,u                                 *  add.w   x_pos(a0),d1
291F A30E             (C:\Users\bhrou\gi):00602 [7]     1093            subd  x_pos,x                                 *  sub.w   x_pos(a1),d1
                      (C:\Users\bhrou\gi):00603                         ;tst   Super_Sonic_flag                        *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):00604                         ;bne   SuperSonic_Balance                      *  bne.w   SuperSonic_Balance
2921 10830002         (C:\Users\bhrou\gi):00605 [5]     1098            cmpd  #2                                      *  cmpi.w  #2,d1
2925 2D08             (C:\Users\bhrou\gi):00606 [3]     1101            blt   Sonic_BalanceOnObjLeft                  *  blt.s   Sonic_BalanceOnObjLeft
2927 10830000         (C:\Users\bhrou\gi):00607 [5]     1106            cmpd  #0                                      *  cmp.w   d2,d1
     292A             (C:\Users\bhrou\gi):00608                 @d2     equ   *-1
292B 2C02             (C:\Users\bhrou\gi):00609 [3]     1109            bge   Sonic_BalanceOnObjRight                 *  bge.s   Sonic_BalanceOnObjRight
292D 2000             (C:\Users\bhrou\gi):00610 [3]     1112            bra   Sonic_Lookup                            *  bra.w   Sonic_Lookup
                      (C:\Users\bhrou\gi):00611                 
                      (C:\Users\bhrou\gi):00612                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00613                                                                       *; loc_1A3FE:
292F                  (C:\Users\bhrou\gi):00614                 SuperSonic_Balance                                    *SuperSonic_Balance:
                      (C:\Users\bhrou\gi):00615                                                                       *  cmpi.w  #2,d1
                      (C:\Users\bhrou\gi):00616                                                                       *  blt.w   SuperSonic_BalanceOnObjLeft
                      (C:\Users\bhrou\gi):00617                                                                       *  cmp.w   d2,d1
                      (C:\Users\bhrou\gi):00618                                                                       *  bge.w   SuperSonic_BalanceOnObjRight
                      (C:\Users\bhrou\gi):00619                                                                       *  bra.w   Sonic_Lookup
                      (C:\Users\bhrou\gi):00620                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00621                                                                       *; balancing checks for when you're on the right edge of an object
                      (C:\Users\bhrou\gi):00622                                                                       *; loc_1A410:
292F                  (C:\Users\bhrou\gi):00623                 Sonic_BalanceOnObjRight                               *Sonic_BalanceOnObjRight:
                      (C:\Users\bhrou\gi):00624                                                                       *  btst    #0,status(a0)
                      (C:\Users\bhrou\gi):00625                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):00626                                                                       *  move.b  #AniIDSonAni_Balance,anim(a0)
                      (C:\Users\bhrou\gi):00627                                                                       *  addq.w  #6,d2
                      (C:\Users\bhrou\gi):00628                                                                       *  cmp.w   d2,d1
                      (C:\Users\bhrou\gi):00629                                                                       *  blt.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00630                                                                       *  move.b  #AniIDSonAni_Balance2,anim(a0)
                      (C:\Users\bhrou\gi):00631                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00632                                                                       *  ; on right edge of object but facing left:
                      (C:\Users\bhrou\gi):00633                                                                       *+ move.b  #AniIDSonAni_Balance3,anim(a0)
                      (C:\Users\bhrou\gi):00634                                                                       *  addq.w  #6,d2
                      (C:\Users\bhrou\gi):00635                                                                       *  cmp.w   d2,d1
                      (C:\Users\bhrou\gi):00636                                                                       *  blt.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00637                                                                       *  move.b  #AniIDSonAni_Balance4,anim(a0)
                      (C:\Users\bhrou\gi):00638                                                                       *  bclr    #0,status(a0)
                      (C:\Users\bhrou\gi):00639                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00640                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00641                                                                       *; balancing checks for when you're on the left edge of an object
                      (C:\Users\bhrou\gi):00642                                                                       *; loc_1A44E:
292F                  (C:\Users\bhrou\gi):00643                 Sonic_BalanceOnObjLeft                                *Sonic_BalanceOnObjLeft:
                      (C:\Users\bhrou\gi):00644                                                                       *  btst    #0,status(a0)
                      (C:\Users\bhrou\gi):00645                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):00646                                                                       *  move.b  #AniIDSonAni_Balance,anim(a0)
                      (C:\Users\bhrou\gi):00647                                                                       *  cmpi.w  #-4,d1
                      (C:\Users\bhrou\gi):00648                                                                       *  bge.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00649                                                                       *  move.b  #AniIDSonAni_Balance2,anim(a0)
                      (C:\Users\bhrou\gi):00650                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00651                                                                       *  ; on left edge of object but facing right:
                      (C:\Users\bhrou\gi):00652                                                                       *+ move.b  #AniIDSonAni_Balance3,anim(a0)
                      (C:\Users\bhrou\gi):00653                                                                       *  cmpi.w  #-4,d1
                      (C:\Users\bhrou\gi):00654                                                                       *  bge.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00655                                                                       *  move.b  #AniIDSonAni_Balance4,anim(a0)
                      (C:\Users\bhrou\gi):00656                                                                       *  bset    #0,status(a0)
                      (C:\Users\bhrou\gi):00657                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00658                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00659                                                                       *; balancing checks for when you're on the edge of part of the level
                      (C:\Users\bhrou\gi):00660                                                                       *; loc_1A48C:
292F                  (C:\Users\bhrou\gi):00661                 Sonic_Balance                                         *Sonic_Balance:
                      (C:\Users\bhrou\gi):00662                                                                       *  jsr (ChkFloorEdge).l
                      (C:\Users\bhrou\gi):00663                                                                       *  cmpi.w  #$C,d1
                      (C:\Users\bhrou\gi):00664                                                                       *  blt.w   Sonic_Lookup
                      (C:\Users\bhrou\gi):00665                                                                       *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):00666                                                                       *  bne.w   SuperSonic_Balance2
                      (C:\Users\bhrou\gi):00667                                                                       *  cmpi.b  #3,next_tilt(a0)
                      (C:\Users\bhrou\gi):00668                                                                       *  bne.s   Sonic_BalanceLeft
                      (C:\Users\bhrou\gi):00669                                                                       *  btst    #0,status(a0)
                      (C:\Users\bhrou\gi):00670                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):00671                                                                       *  move.b  #AniIDSonAni_Balance,anim(a0)
                      (C:\Users\bhrou\gi):00672                                                                       *  move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):00673                                                                       *  subq.w  #6,d3
                      (C:\Users\bhrou\gi):00674                                                                       *  jsr (ChkFloorEdge_Part2).l
                      (C:\Users\bhrou\gi):00675                                                                       *  cmpi.w  #$C,d1
                      (C:\Users\bhrou\gi):00676                                                                       *  blt.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00677                                                                       *  move.b  #AniIDSonAni_Balance2,anim(a0)
                      (C:\Users\bhrou\gi):00678                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00679                                                                       *  ; on right edge but facing left:
                      (C:\Users\bhrou\gi):00680                                                                       *+ move.b  #AniIDSonAni_Balance3,anim(a0)
                      (C:\Users\bhrou\gi):00681                                                                       *  move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):00682                                                                       *  subq.w  #6,d3
                      (C:\Users\bhrou\gi):00683                                                                       *  jsr (ChkFloorEdge_Part2).l
                      (C:\Users\bhrou\gi):00684                                                                       *  cmpi.w  #$C,d1
                      (C:\Users\bhrou\gi):00685                                                                       *  blt.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00686                                                                       *  move.b  #AniIDSonAni_Balance4,anim(a0)
                      (C:\Users\bhrou\gi):00687                                                                       *  bclr    #0,status(a0)
                      (C:\Users\bhrou\gi):00688                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00689                                                                       *; ---------------------------------------------------------------------------
292F                  (C:\Users\bhrou\gi):00690                 Sonic_BalanceLeft                                     *Sonic_BalanceLeft:
                      (C:\Users\bhrou\gi):00691                                                                       *  cmpi.b  #3,tilt(a0)
                      (C:\Users\bhrou\gi):00692                                                                       *  bne.s   Sonic_Lookup
                      (C:\Users\bhrou\gi):00693                                                                       *  btst    #0,status(a0)
                      (C:\Users\bhrou\gi):00694                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):00695                                                                       *  move.b  #AniIDSonAni_Balance,anim(a0)
                      (C:\Users\bhrou\gi):00696                                                                       *  move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):00697                                                                       *  addq.w  #6,d3
                      (C:\Users\bhrou\gi):00698                                                                       *  jsr (ChkFloorEdge_Part2).l
                      (C:\Users\bhrou\gi):00699                                                                       *  cmpi.w  #$C,d1
                      (C:\Users\bhrou\gi):00700                                                                       *  blt.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00701                                                                       *  move.b  #AniIDSonAni_Balance2,anim(a0)
                      (C:\Users\bhrou\gi):00702                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00703                                                                       *  ; on left edge but facing right:
                      (C:\Users\bhrou\gi):00704                                                                       *+ move.b  #AniIDSonAni_Balance3,anim(a0)
                      (C:\Users\bhrou\gi):00705                                                                       *  move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):00706                                                                       *  addq.w  #6,d3
                      (C:\Users\bhrou\gi):00707                                                                       *  jsr (ChkFloorEdge_Part2).l
                      (C:\Users\bhrou\gi):00708                                                                       *  cmpi.w  #$C,d1
                      (C:\Users\bhrou\gi):00709                                                                       *  blt.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00710                                                                       *  move.b  #AniIDSonAni_Balance4,anim(a0)
                      (C:\Users\bhrou\gi):00711                                                                       *  bset    #0,status(a0)
                      (C:\Users\bhrou\gi):00712                                                                       *  bra.w   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00713                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00714                                                                       *; loc_1A55E:
292F                  (C:\Users\bhrou\gi):00715                 SuperSonic_Balance2                                   *SuperSonic_Balance2:
                      (C:\Users\bhrou\gi):00716                                                                       *  cmpi.b  #3,next_tilt(a0)
                      (C:\Users\bhrou\gi):00717                                                                       *  bne.s   loc_1A56E
                      (C:\Users\bhrou\gi):00718                                                                       *
                      (C:\Users\bhrou\gi):00719                                                                       *; loc_1A566:
292F                  (C:\Users\bhrou\gi):00720                 SuperSonic_BalanceOnObjRight                          *SuperSonic_BalanceOnObjRight:
                      (C:\Users\bhrou\gi):00721                                                                       *  bclr    #0,status(a0)
                      (C:\Users\bhrou\gi):00722                                                                       *  bra.s   loc_1A57C
                      (C:\Users\bhrou\gi):00723                                                                       *; ---------------------------------------------------------------------------
292F                  (C:\Users\bhrou\gi):00724                 loc_1A56E                                             *loc_1A56E:
                      (C:\Users\bhrou\gi):00725                                                                       *  cmpi.b  #3,tilt(a0)
                      (C:\Users\bhrou\gi):00726                                                                       *  bne.s   Sonic_Lookup
                      (C:\Users\bhrou\gi):00727                                                                       *
                      (C:\Users\bhrou\gi):00728                                                                       *; loc_1A576:
292F                  (C:\Users\bhrou\gi):00729                 SuperSonic_BalanceOnObjLeft                           *SuperSonic_BalanceOnObjLeft:
                      (C:\Users\bhrou\gi):00730                                                                       *  bset    #0,status(a0)
                      (C:\Users\bhrou\gi):00731                                                                       *
292F                  (C:\Users\bhrou\gi):00732                 loc_1A57C                                             *loc_1A57C:
                      (C:\Users\bhrou\gi):00733                                                                       *  move.b  #AniIDSonAni_Balance,anim(a0)
                      (C:\Users\bhrou\gi):00734                                                                       *  bra.s   Obj01_ResetScr
                      (C:\Users\bhrou\gi):00735                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00736                                                                       *; loc_1A584:
292F                  (C:\Users\bhrou\gi):00737                 Sonic_Lookup                                          *Sonic_Lookup:
292F B68006           (C:\Users\bhrou\gi):00738 [5]     1117            lda   Ctrl_1_Held_Logical
2932 8410             (C:\Users\bhrou\gi):00739 [2]     1119            anda  #button_up_mask                         *  btst    #button_up,(Ctrl_1_Held_Logical).w  ; is up being pressed?
2934 2729             (C:\Users\bhrou\gi):00740 [3]     1122            beq   Sonic_Duck                              *  beq.s   Sonic_Duck          ; if not, branch
2936 CC0238           (C:\Users\bhrou\gi):00741 [3]     1125            ldd   #SonAni_LookUp                          *  move.b  #AniIDSonAni_LookUp,anim(a0)            ; use "looking up" animation
2939 ED44             (C:\Users\bhrou\gi):00742 [6]     1131            std   anim,u
293B B630FF           (C:\Users\bhrou\gi):00743 [5]     1136            lda   Sonic_Look_delay_counter
293E BB703E           (C:\Users\bhrou\gi):00744 [5]     1141            adda  Vint_Main_runcount                      *  addq.w  #1,(Sonic_Look_delay_counter).w
2941 4C               (C:\Users\bhrou\gi):00745 [2]     1143            inca
2942 B730FF           (C:\Users\bhrou\gi):00746 [5]     1148            sta   Sonic_Look_delay_counter
2945 8178             (C:\Users\bhrou\gi):00747 [2]     1150            cmpa  #$78                                    *  cmpi.w  #$78,(Sonic_Look_delay_counter).w
2947 254B             (C:\Users\bhrou\gi):00748 [3]     1153            blo   Obj01_ResetScr_Part2                    *  blo.s   Obj01_ResetScr_Part2
2949 8678             (C:\Users\bhrou\gi):00749 [2]     1155            lda   #$78
294B B730FF           (C:\Users\bhrou\gi):00750 [5]     1160            sta   Sonic_Look_delay_counter                *  move.w  #$78,(Sonic_Look_delay_counter).w
294E FC6F6E           (C:\Users\bhrou\gi):00751 [6]     1166            ldd   Camera_Y_pos_bias
2951 108300B0         (C:\Users\bhrou\gi):00752 [5]     1171            cmpd  #176                                    *  cmpi.w  #$C8,(Camera_Y_pos_bias).w
2955 2465             (C:\Users\bhrou\gi):00753 [3]     1174            bhs   Obj01_UpdateSpeedOnGround               *  beq.s   Obj01_UpdateSpeedOnGround
2957 C30004           (C:\Users\bhrou\gi):00754 [4]     1178            addd  #4
295A FD6F6E           (C:\Users\bhrou\gi):00755 [6]     1184            std   Camera_Y_pos_bias                       *  addq.w  #2,(Camera_Y_pos_bias).w
295D 205D             (C:\Users\bhrou\gi):00756 [3]     1187            bra   Obj01_UpdateSpeedOnGround               *  bra.s   Obj01_UpdateSpeedOnGround
                      (C:\Users\bhrou\gi):00757                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00758                                                                       *; loc_1A5B2:
295F                  (C:\Users\bhrou\gi):00759                 Sonic_Duck                                            *Sonic_Duck:
295F B68006           (C:\Users\bhrou\gi):00760 [5]     1192            lda   Ctrl_1_Held_Logical
2962 8420             (C:\Users\bhrou\gi):00761 [2]     1194            anda  #button_down_mask                       *  btst    #button_down,(Ctrl_1_Held_Logical).w    ; is down being pressed?
2964 2729             (C:\Users\bhrou\gi):00762 [3]     1197            beq   Obj01_ResetScr                          *  beq.s   Obj01_ResetScr          ; if not, branch
2966 CC023F           (C:\Users\bhrou\gi):00763 [3]     1200            ldd   #SonAni_Duck                            *  move.b  #AniIDSonAni_Duck,anim(a0)          ; use "ducking" animation
2969 ED44             (C:\Users\bhrou\gi):00764 [6]     1206            std   anim,u
296B B630FF           (C:\Users\bhrou\gi):00765 [5]     1211            lda   Sonic_Look_delay_counter
296E BB703E           (C:\Users\bhrou\gi):00766 [5]     1216            adda  Vint_Main_runcount                      *  addq.w  #1,(Sonic_Look_delay_counter).w
2971 4C               (C:\Users\bhrou\gi):00767 [2]     1218            inca
2972 B730FF           (C:\Users\bhrou\gi):00768 [5]     1223            sta   Sonic_Look_delay_counter
2975 8178             (C:\Users\bhrou\gi):00769 [2]     1225            cmpa  #$78                                    *  cmpi.w  #$78,(Sonic_Look_delay_counter).w
2977 251B             (C:\Users\bhrou\gi):00770 [3]     1228            blo   Obj01_ResetScr_Part2                    *  blo.s   Obj01_ResetScr_Part2
2979 8678             (C:\Users\bhrou\gi):00771 [2]     1230            lda   #$78
297B B730FF           (C:\Users\bhrou\gi):00772 [5]     1235            sta   Sonic_Look_delay_counter                *  move.w  #$78,(Sonic_Look_delay_counter).w
297E FC6F6E           (C:\Users\bhrou\gi):00773 [6]     1241            ldd   Camera_Y_pos_bias
2981 10830048         (C:\Users\bhrou\gi):00774 [5]     1246            cmpd  #72                                     *  cmpi.w  #8,(Camera_Y_pos_bias).w
2985 2335             (C:\Users\bhrou\gi):00775 [3]     1249            bls   Obj01_UpdateSpeedOnGround               *  beq.s   Obj01_UpdateSpeedOnGround
2987 830004           (C:\Users\bhrou\gi):00776 [4]     1253            subd  #4
298A FD6F6E           (C:\Users\bhrou\gi):00777 [6]     1259            std   Camera_Y_pos_bias                       *  subq.w  #2,(Camera_Y_pos_bias).w
298D 202D             (C:\Users\bhrou\gi):00778 [3]     1262            bra   Obj01_UpdateSpeedOnGround               *  bra.s   Obj01_UpdateSpeedOnGround
                      (C:\Users\bhrou\gi):00779                                                                       *
                      (C:\Users\bhrou\gi):00780                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):00781                                                                       *; moves the screen back to its normal position after looking up or down
                      (C:\Users\bhrou\gi):00782                                                                       *; loc_1A5E0:
298F                  (C:\Users\bhrou\gi):00783                 Obj01_ResetScr                                        *Obj01_ResetScr:
298F 8600             (C:\Users\bhrou\gi):00784 [2]     1264            lda   #0
2991 B730FF           (C:\Users\bhrou\gi):00785 [5]     1269            sta   Sonic_Look_delay_counter                *  move.w  #0,(Sonic_Look_delay_counter).w
                      (C:\Users\bhrou\gi):00786                                                                       *; loc_1A5E6:
2994                  (C:\Users\bhrou\gi):00787                 Obj01_ResetScr_Part2                                  *Obj01_ResetScr_Part2:
2994 FC6F6E           (C:\Users\bhrou\gi):00788 [6]     1275            ldd   Camera_Y_pos_bias
2997 10830070         (C:\Users\bhrou\gi):00789 [5]     1280            cmpd  #camera_Y_pos_bias_default              *  cmpi.w  #(224/2)-16,(Camera_Y_pos_bias).w   ; is screen in its default position?
299B 271F             (C:\Users\bhrou\gi):00790 [3]     1283            beq   Obj01_UpdateSpeedOnGround               *  beq.s   Obj01_UpdateSpeedOnGround   ; if yes, branch.
299D 240E             (C:\Users\bhrou\gi):00791 [3]     1286            bhs   >                                       *  bhs.s   +               ; depending on the sign of the difference,
299F C30004           (C:\Users\bhrou\gi):00792 [4]     1290            addd  #4                                      *  addq.w  #4,(Camera_Y_pos_bias).w    ; either add 2
29A2 10830070         (C:\Users\bhrou\gi):00793 [5]     1295            cmpd  #camera_Y_pos_bias_default
29A6 2311             (C:\Users\bhrou\gi):00794 [3]     1298            bls   @exit
29A8 CC0070           (C:\Users\bhrou\gi):00795 [3]     1301            ldd   #camera_Y_pos_bias_default ; cap value
29AB 200C             (C:\Users\bhrou\gi):00796 [3]     1304            bra   @exit
29AD 830004           (C:\Users\bhrou\gi):00797 [4]     1308    !       subd  #4                                      *+ subq.w  #2,(Camera_Y_pos_bias).w    ; or subtract 2
29B0 10830070         (C:\Users\bhrou\gi):00798 [5]     1313            cmpd  #camera_Y_pos_bias_default
29B4 2403             (C:\Users\bhrou\gi):00799 [3]     1316            bhs   @exit
29B6 CC0070           (C:\Users\bhrou\gi):00800 [3]     1319            ldd   #camera_Y_pos_bias_default ; cap value
29B9 FD6F6E           (C:\Users\bhrou\gi):00801 [6]     1325    @exit   std   Camera_Y_pos_bias
                      (C:\Users\bhrou\gi):00802                                                                       *
                      (C:\Users\bhrou\gi):00803                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00804                                                                       *; updates Sonic's speed on the ground
                      (C:\Users\bhrou\gi):00805                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00806                                                                       *; sub_1A5F8:
29BC                  (C:\Users\bhrou\gi):00807                 Obj01_UpdateSpeedOnGround                             *Obj01_UpdateSpeedOnGround:
                      (C:\Users\bhrou\gi):00808                                                                       *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):00809                                                                       *  beq.w   +
                      (C:\Users\bhrou\gi):00810                                                                       *  move.w  #$C,d5
                      (C:\Users\bhrou\gi):00811                                                                       *+
29BC B68006           (C:\Users\bhrou\gi):00812 [5]     1330            lda   Ctrl_1_Held_Logical                     *  move.b  (Ctrl_1_Held_Logical).w,d0
29BF 84C0             (C:\Users\bhrou\gi):00813 [2]     1332            anda  #button_left_mask|button_right_mask     *  andi.b  #button_left_mask|button_right_mask,d0 ; is left/right pressed?
29C1 261F             (C:\Users\bhrou\gi):00814 [3]     1335            bne   Obj01_Traction                          *  bne.s   Obj01_Traction  ; if yes, branch
29C3 ECC864           (C:\Users\bhrou\gi):00815 [6]     1341            ldd   inertia,u                               *  move.w  inertia(a0),d0
29C6 271A             (C:\Users\bhrou\gi):00816 [3]     1344            beq   Obj01_Traction                          *  beq.s   Obj01_Traction
29C8 2B0D             (C:\Users\bhrou\gi):00817 [3]     1347            bmi   Obj01_SettleLeft                        *  bmi.s   Obj01_SettleLeft
                      (C:\Users\bhrou\gi):00818                                                                       *
                      (C:\Users\bhrou\gi):00819                                                                       *; slow down when facing right and not pressing a direction
                      (C:\Users\bhrou\gi):00820                                                                       *; Obj01_SettleRight:
29CA B39F02           (C:\Users\bhrou\gi):00821 [7]     1354            subd  Sonic_acceleration_tmp                  *  sub.w   d5,d0
29CD 2403             (C:\Users\bhrou\gi):00822 [3]     1357            bcc   >                                       *  bcc.s   +
29CF CC0000           (C:\Users\bhrou\gi):00823 [3]     1360            ldd   #0                                      *  move.w  #0,d0
                      (C:\Users\bhrou\gi):00824                 !                                                     *+
29D2 EDC864           (C:\Users\bhrou\gi):00825 [6]     1366            std   inertia,u                               *  move.w  d0,inertia(a0)
29D5 200B             (C:\Users\bhrou\gi):00826 [3]     1369            bra   Obj01_Traction                          *  bra.s   Obj01_Traction
                      (C:\Users\bhrou\gi):00827                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00828                                                                       *; slow down when facing left and not pressing a direction
                      (C:\Users\bhrou\gi):00829                                                                       *; loc_1A624:
29D7                  (C:\Users\bhrou\gi):00830                 Obj01_SettleLeft                                      *Obj01_SettleLeft:
29D7 F39F02           (C:\Users\bhrou\gi):00831 [7]     1376            addd  Sonic_acceleration_tmp                  *  add.w   d5,d0
29DA 2403             (C:\Users\bhrou\gi):00832 [3]     1379            bcc   >                                       *  bcc.s   +
29DC CC0000           (C:\Users\bhrou\gi):00833 [3]     1382            ldd   #0                                      *  move.w  #0,d0
                      (C:\Users\bhrou\gi):00834                 !                                                     *+
29DF EDC864           (C:\Users\bhrou\gi):00835 [6]     1388            std   inertia,u                               *  move.w  d0,inertia(a0)
                      (C:\Users\bhrou\gi):00836                                                                       *
                      (C:\Users\bhrou\gi):00837                                                                       *; increase or decrease speed on the ground
                      (C:\Users\bhrou\gi):00838                                                                       *; loc_1A630:
29E2                  (C:\Users\bhrou\gi):00839                 Obj01_Traction                                        *Obj01_Traction:
29E2 A6C860           (C:\Users\bhrou\gi):00840 [5]     1393            lda   angle,u                                 *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):00841                         ;jsr  CalcSine                                *  jsr (CalcSine).l
                      (C:\Users\bhrou\gi):00842                         ;                                             *  muls.w  inertia(a0),d1
                      (C:\Users\bhrou\gi):00843                         ;                                             *  asr.l   #8,d1
29E5 ECC864           (C:\Users\bhrou\gi):00844 [6]     1399            ldd   inertia,u
29E8 BE703D           (C:\Users\bhrou\gi):00845 [6]     1405            ldx   Vint_Main_runcount_w
29EB 2707             (C:\Users\bhrou\gi):00846 [3]     1408            beq   @end
29ED                  (C:\Users\bhrou\gi):00847                 @loop
29ED E3C864           (C:\Users\bhrou\gi):00848 [7]     1415            addd  inertia,u
29F0 301F             (C:\Users\bhrou\gi):00849 [5]     1420            leax  -1,x
29F2 26F9             (C:\Users\bhrou\gi):00850 [3]     1423            bne   @loop 
29F4 EDC816           (C:\Users\bhrou\gi):00851 [6]     1429    @end    std   x_vel,u                                  *  move.w  d1,x_vel(a0)
                      (C:\Users\bhrou\gi):00852                         ;                                              *  muls.w  inertia(a0),d0
                      (C:\Users\bhrou\gi):00853                         ;                                              *  asr.l   #8,d0
                      (C:\Users\bhrou\gi):00854                         ;                                              *  move.w  d0,y_vel(a0)
                      (C:\Users\bhrou\gi):00855                                                                       *
                      (C:\Users\bhrou\gi):00856                                                                       *; stops Sonic from running through walls that meet the ground
                      (C:\Users\bhrou\gi):00857                                                                       *; loc_1A64E:
29F7                  (C:\Users\bhrou\gi):00858                 Obj01_CheckWallsOnGround                              *Obj01_CheckWallsOnGround:
                      (C:\Users\bhrou\gi):00859                                                                       *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):00860                                                                       *  addi.b  #$40,d0
                      (C:\Users\bhrou\gi):00861                                                                       *  bmi.s   return_1A6BE
                      (C:\Users\bhrou\gi):00862                                                                       *  move.b  #$40,d1         ; Rotate 90 degrees clockwise
                      (C:\Users\bhrou\gi):00863                                                                       *  tst.w   inertia(a0)     ; Check inertia
                      (C:\Users\bhrou\gi):00864                                                                       *  beq.s   return_1A6BE    ; If not moving, don't do anything
                      (C:\Users\bhrou\gi):00865                                                                       *  bmi.s   +               ; If negative, branch
                      (C:\Users\bhrou\gi):00866                                                                       *  neg.w   d1              ; Otherwise, we want to rotate counterclockwise
                      (C:\Users\bhrou\gi):00867                                                                       *+
                      (C:\Users\bhrou\gi):00868                                                                       *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):00869                                                                       *  add.b   d1,d0
                      (C:\Users\bhrou\gi):00870                                                                       *  move.w  d0,-(sp)
                      (C:\Users\bhrou\gi):00871                                                                       *  bsr.w   CalcRoomInFront
                      (C:\Users\bhrou\gi):00872                                                                       *  move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):00873                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):00874                                                                       *  bpl.s   return_1A6BE
                      (C:\Users\bhrou\gi):00875                                                                       *  asl.w   #8,d1
                      (C:\Users\bhrou\gi):00876                                                                       *  addi.b  #$20,d0
                      (C:\Users\bhrou\gi):00877                                                                       *  andi.b  #$C0,d0
                      (C:\Users\bhrou\gi):00878                                                                       *  beq.s   loc_1A6BA
                      (C:\Users\bhrou\gi):00879                                                                       *  cmpi.b  #$40,d0
                      (C:\Users\bhrou\gi):00880                                                                       *  beq.s   loc_1A6A8
                      (C:\Users\bhrou\gi):00881                                                                       *  cmpi.b  #$80,d0
                      (C:\Users\bhrou\gi):00882                                                                       *  beq.s   loc_1A6A2
                      (C:\Users\bhrou\gi):00883                                                                       *  add.w   d1,x_vel(a0)
                      (C:\Users\bhrou\gi):00884                                                                       *  bset    #5,status(a0)
                      (C:\Users\bhrou\gi):00885                                                                       *  move.w  #0,inertia(a0)
29F7 39               (C:\Users\bhrou\gi):00886 [5]     1434            rts                                           *  rts
                      (C:\Users\bhrou\gi):00887                                                                       *; ---------------------------------------------------------------------------
29F8                  (C:\Users\bhrou\gi):00888                 loc_1A6A2                                             *loc_1A6A2:
                      (C:\Users\bhrou\gi):00889                                                                       *  sub.w   d1,y_vel(a0)
29F8 39               (C:\Users\bhrou\gi):00890 [5]     1439            rts                                           *  rts
                      (C:\Users\bhrou\gi):00891                                                                       *; ---------------------------------------------------------------------------
29F9                  (C:\Users\bhrou\gi):00892                 loc_1A6A8                                             *loc_1A6A8:
                      (C:\Users\bhrou\gi):00893                                                                       *  sub.w   d1,x_vel(a0)
                      (C:\Users\bhrou\gi):00894                                                                       *  bset    #5,status(a0)
                      (C:\Users\bhrou\gi):00895                                                                       *  move.w  #0,inertia(a0)
29F9 39               (C:\Users\bhrou\gi):00896 [5]     1444            rts                                           *  rts
                      (C:\Users\bhrou\gi):00897                                                                       *; ---------------------------------------------------------------------------
29FA                  (C:\Users\bhrou\gi):00898                 loc_1A6BA                                             *loc_1A6BA:
                      (C:\Users\bhrou\gi):00899                                                                       *  add.w   d1,y_vel(a0)
                      (C:\Users\bhrou\gi):00900                                                                       *
29FA                  (C:\Users\bhrou\gi):00901                 return_1A6BE                                          *return_1A6BE:
29FA 39               (C:\Users\bhrou\gi):00902 [5]     1449            rts                                           *  rts
                      (C:\Users\bhrou\gi):00903                                                                       *; End of subroutine Sonic_Move
                      (C:\Users\bhrou\gi):00904                                                                       *
                      (C:\Users\bhrou\gi):00905                                                                       *
                      (C:\Users\bhrou\gi):00906                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00907                                                                       *
                      (C:\Users\bhrou\gi):00908                                                                       *; loc_1A6C0:
29FB                  (C:\Users\bhrou\gi):00909                 Sonic_MoveLeft                                        *Sonic_MoveLeft:
29FB ECC864           (C:\Users\bhrou\gi):00910 [6]     1455            ldd   inertia,u                               *  move.w  inertia(a0),d0
29FE 2702             (C:\Users\bhrou\gi):00911 [3]     1458            beq   >                                       *  beq.s   +
2A00 2A3C             (C:\Users\bhrou\gi):00912 [3]     1461            bpl   Sonic_TurnLeft                          *  bpl.s   Sonic_TurnLeft ; if Sonic is already moving to the right, branch
                      (C:\Users\bhrou\gi):00913                 !                                                     *+
2A02 E64B             (C:\Users\bhrou\gi):00914 [5]     1466            ldb   status,u
2A04 C501             (C:\Users\bhrou\gi):00915 [2]     1468            bitb  #status_x_orientation
2A06 260B             (C:\Users\bhrou\gi):00916 [3]     1471            bne   >
2A08 CA01             (C:\Users\bhrou\gi):00917 [2]     1473            orb   #status_x_orientation                   *  bset    #0,status(a0)
                      (C:\Users\bhrou\gi):00918                                                                       *  bne.s   +
2A0A C4DF             (C:\Users\bhrou\gi):00919 [2]     1475            andb  #^status_pushing 
2A0C E74B             (C:\Users\bhrou\gi):00920 [5]     1480            stb   status,u                                *  bclr    #5,status(a0)
2A0E CC0049           (C:\Users\bhrou\gi):00921 [3]     1483            ldd   #SonAni_Run
2A11 ED46             (C:\Users\bhrou\gi):00922 [6]     1489            std   prev_anim,u                             *  move.b  #AniIDSonAni_Run,prev_anim(a0)  ; force walking animation to restart if it's already in-progress
                      (C:\Users\bhrou\gi):00923                 !                                                     *+
2A13 FC9F00           (C:\Users\bhrou\gi):00924 [6]     1495            ldd   Sonic_top_speed_tmp
                      (C:\Users\bhrou\gi):00925                         _negd
2A16 40               (            _negd):00001 [2]     1497            nega
2A17 50               (            _negd):00002 [2]     1499            negb
2A18 8200             (            _negd):00003 [2]     1501            sbca  #0
2A1A FD2A25           (C:\Users\bhrou\gi):00926 [6]     1507            std   @top_s
2A1D ECC864           (C:\Users\bhrou\gi):00927 [6]     1513            ldd   inertia,u
2A20 B39F02           (C:\Users\bhrou\gi):00928 [7]     1520            subd  Sonic_acceleration_tmp                  *  sub.w   d5,d0   ; add acceleration to the left
                      (C:\Users\bhrou\gi):00929                         ; moved                                       *  move.w  d6,d1
                      (C:\Users\bhrou\gi):00930                         ; moved                                       *  neg.w   d1
2A23 10830000         (C:\Users\bhrou\gi):00931 [5]     1525            cmpd  #0
     2A25             (C:\Users\bhrou\gi):00932                 @top_s  equ   *-2                                     *  cmp.w   d1,d0   ; compare new speed with top speed
2A27 2E0C             (C:\Users\bhrou\gi):00933 [3]     1528            bgt   >                                       *  bgt.s   +   ; if new speed is less than the maximum, branch
2A29 F39F02           (C:\Users\bhrou\gi):00934 [7]     1535            addd  Sonic_acceleration_tmp                  *  add.w   d5,d0   ; remove this frame's acceleration change
2A2C 10B32A25         (C:\Users\bhrou\gi):00935 [8]     1543            cmpd  @top_s                                  *  cmp.w   d1,d0   ; compare speed with top speed
2A30 2F03             (C:\Users\bhrou\gi):00936 [3]     1546            ble   >                                       *  ble.s   +   ; if speed was already greater than the maximum, branch
2A32 FC2A25           (C:\Users\bhrou\gi):00937 [6]     1552            ldd   @top_s                                  *  move.w  d1,d0   ; limit speed on ground going left
                      (C:\Users\bhrou\gi):00938                 !                                                     *+
2A35 EDC864           (C:\Users\bhrou\gi):00939 [6]     1558            std   inertia,u                               *  move.w  d0,inertia(a0)
2A38 CC0001           (C:\Users\bhrou\gi):00940 [3]     1561            ldd   #SonAni_Walk
2A3B ED44             (C:\Users\bhrou\gi):00941 [6]     1567            std   anim,u                                  *  move.b  #AniIDSonAni_Walk,anim(a0)  ; use walking animation
2A3D 39               (C:\Users\bhrou\gi):00942 [5]     1572            rts                                           *  rts
                      (C:\Users\bhrou\gi):00943                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00944                                                                       *; loc_1A6FA:
2A3E                  (C:\Users\bhrou\gi):00945                 Sonic_TurnLeft                                        *Sonic_TurnLeft:
2A3E B39F04           (C:\Users\bhrou\gi):00946 [7]     1579            subd  Sonic_deceleration_tmp                  *  sub.w   d4,d0
2A41 2403             (C:\Users\bhrou\gi):00947 [3]     1582            bcc   >                                       *  bcc.s   +
2A43 CCFF80           (C:\Users\bhrou\gi):00948 [3]     1585            ldd   #-$80                                   *  move.w  #-$80,d0
                      (C:\Users\bhrou\gi):00949                 !                                                     *+
2A46 EDC864           (C:\Users\bhrou\gi):00950 [6]     1591            std   inertia,u                               *  move.w  d0,inertia(a0)
2A49 E6C860           (C:\Users\bhrou\gi):00951 [5]     1596            ldb   angle,u                                 *  move.b  angle(a0),d0
2A4C CB20             (C:\Users\bhrou\gi):00952 [2]     1598            addb  #$20                                    *  addi.b  #$20,d0
2A4E C4C0             (C:\Users\bhrou\gi):00953 [2]     1600            andb  #$C0                                    *  andi.b  #$C0,d0
2A50 2626             (C:\Users\bhrou\gi):00954 [3]     1603            bne   return_1A744                            *  bne.s   return_1A744
2A52 ECC864           (C:\Users\bhrou\gi):00955 [6]     1609            ldd   inertia,u
2A55 F39F04           (C:\Users\bhrou\gi):00956 [7]     1616            addd  Sonic_deceleration_tmp
2A58 B330F0           (C:\Users\bhrou\gi):00957 [7]     1623            subd  Sonic_deceleration
2A5B 10830400         (C:\Users\bhrou\gi):00958 [5]     1628            cmpd  #$400                                   *  cmpi.w  #$400,d0
2A5F 2D17             (C:\Users\bhrou\gi):00959 [3]     1631            blt   return_1A744                            *  blt.s   return_1A744
2A61 CC0268           (C:\Users\bhrou\gi):00960 [3]     1634            ldd   #SonAni_Stop
2A64 ED44             (C:\Users\bhrou\gi):00961 [6]     1640            std   anim,u                                  *  move.b  #AniIDSonAni_Stop,anim(a0)  ; use "stopping" animation
2A66 E64B             (C:\Users\bhrou\gi):00962 [5]     1645            ldb   status,u
2A68 C4FE             (C:\Users\bhrou\gi):00963 [2]     1647            andb  #^status_x_orientation
2A6A E74B             (C:\Users\bhrou\gi):00964 [5]     1652            stb   status,u                                *  bclr    #0,status(a0)
2A6C 860A             (C:\Users\bhrou\gi):00965 [2]     1654            lda   #SndID_Skidding                         *  move.w  #SndID_Skidding,d0
2A6E B781E0           (C:\Users\bhrou\gi):00966 [5]     1659            sta   Smps.SFXToPlay                          *  jsr (PlaySound).l
2A71 A6C867           (C:\Users\bhrou\gi):00967 [5]     1664            lda   air_left,u                              *  cmpi.b  #$C,air_left(a0)
2A74 810C             (C:\Users\bhrou\gi):00968 [2]     1666            cmpa  #$C
2A76 2500             (C:\Users\bhrou\gi):00969 [3]     1669            blo   return_1A744                            *  blo.s   return_1A744    ; if he's drowning, branch to not make dust
                      (C:\Users\bhrou\gi):00970                         ;ldx   #Sonic_Dust
                      (C:\Users\bhrou\gi):00971                         ;lda   #6
                      (C:\Users\bhrou\gi):00972                         ;sta   routine,x                               *  move.b  #6,(Sonic_Dust+routine).w
                      (C:\Users\bhrou\gi):00973                         ;ldd   #Imgxxx
                      (C:\Users\bhrou\gi):00974                         ;std   image_set,x                            *  move.b  #$15,(Sonic_Dust+mapping_frame).w
                      (C:\Users\bhrou\gi):00975                                                                       *
2A78                  (C:\Users\bhrou\gi):00976                 return_1A744                                          *return_1A744:
2A78 39               (C:\Users\bhrou\gi):00977 [5]     1674            rts                                           *  rts
                      (C:\Users\bhrou\gi):00978                                                                       *; End of subroutine Sonic_MoveLeft
                      (C:\Users\bhrou\gi):00979                                                                       *
                      (C:\Users\bhrou\gi):00980                                                                       *
                      (C:\Users\bhrou\gi):00981                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00982                                                                       *
                      (C:\Users\bhrou\gi):00983                                                                       *; loc_1A746:
2A79                  (C:\Users\bhrou\gi):00984                 Sonic_MoveRight                                       *Sonic_MoveRight:
2A79 ECC864           (C:\Users\bhrou\gi):00985 [6]     1680            ldd   inertia,u                               *  move.w  inertia(a0),d0
2A7C 2B30             (C:\Users\bhrou\gi):00986 [3]     1683            bmi   Sonic_TurnRight                         *  bmi.s   Sonic_TurnRight ; if Sonic is already moving to the left, branch
2A7E E64B             (C:\Users\bhrou\gi):00987 [5]     1688            ldb   status,u
2A80 C501             (C:\Users\bhrou\gi):00988 [2]     1690            bitb  #status_x_orientation
2A82 2709             (C:\Users\bhrou\gi):00989 [3]     1693            beq   >
2A84 C4DE             (C:\Users\bhrou\gi):00990 [2]     1695            andb  #^(status_x_orientation|status_pushing)  *  bclr    #0,status(a0)
                      (C:\Users\bhrou\gi):00991                                                                       *  beq.s   +
2A86 E74B             (C:\Users\bhrou\gi):00992 [5]     1700            stb   status,u                                *  bclr    #5,status(a0)
2A88 CC0049           (C:\Users\bhrou\gi):00993 [3]     1703            ldd   #SonAni_Run
2A8B ED46             (C:\Users\bhrou\gi):00994 [6]     1709            std   prev_anim,u                             *  move.b  #AniIDSonAni_Run,prev_anim(a0)  ; force walking animation to restart if it's already in-progress
                      (C:\Users\bhrou\gi):00995                 !                                                     *+
2A8D ECC864           (C:\Users\bhrou\gi):00996 [6]     1715            ldd   inertia,u
2A90 F39F02           (C:\Users\bhrou\gi):00997 [7]     1722            addd  Sonic_acceleration_tmp                  *  add.w   d5,d0   ; add acceleration to the right
2A93 10B39F00         (C:\Users\bhrou\gi):00998 [8]     1730            cmpd  Sonic_top_speed_tmp                     *  cmp.w   d6,d0   ; compare new speed with top speed
2A97 2D0C             (C:\Users\bhrou\gi):00999 [3]     1733            blt   >                                       *  blt.s   +   ; if new speed is less than the maximum, branch
2A99 B39F02           (C:\Users\bhrou\gi):01000 [7]     1740            subd  Sonic_acceleration_tmp                  *  sub.w   d5,d0   ; remove this frame's acceleration change
2A9C 10B39F00         (C:\Users\bhrou\gi):01001 [8]     1748            cmpd  Sonic_top_speed_tmp                     *  cmp.w   d6,d0   ; compare speed with top speed
2AA0 2C03             (C:\Users\bhrou\gi):01002 [3]     1751            bge   >                                       *  bge.s   +   ; if speed was already greater than the maximum, branch
2AA2 FC9F00           (C:\Users\bhrou\gi):01003 [6]     1757            ldd   Sonic_top_speed_tmp                     *  move.w  d6,d0   ; limit speed on ground going right
                      (C:\Users\bhrou\gi):01004                 !                                                     *+
2AA5 EDC864           (C:\Users\bhrou\gi):01005 [6]     1763            std   inertia,u                               *  move.w  d0,inertia(a0)
2AA8 CC0001           (C:\Users\bhrou\gi):01006 [3]     1766            ldd   #SonAni_Walk
2AAB ED44             (C:\Users\bhrou\gi):01007 [6]     1772            std   anim,u                                  *  move.b  #AniIDSonAni_Walk,anim(a0)  ; use walking animation
2AAD 39               (C:\Users\bhrou\gi):01008 [5]     1777            rts                                           *  rts
                      (C:\Users\bhrou\gi):01009                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01010                                                                       *; loc_1A77A:
2AAE                  (C:\Users\bhrou\gi):01011                 Sonic_TurnRight                                       *Sonic_TurnRight:
2AAE F39F04           (C:\Users\bhrou\gi):01012 [7]     1784            addd  Sonic_deceleration_tmp                  *  add.w   d4,d0
2AB1 2403             (C:\Users\bhrou\gi):01013 [3]     1787            bcc   >                                       *  bcc.s   +
2AB3 CC0080           (C:\Users\bhrou\gi):01014 [3]     1790            ldd   #$80                                    *  move.w  #$80,d0
                      (C:\Users\bhrou\gi):01015                 !                                                     *+
2AB6 EDC864           (C:\Users\bhrou\gi):01016 [6]     1796            std   inertia,u                               *  move.w  d0,inertia(a0)
2AB9 E6C860           (C:\Users\bhrou\gi):01017 [5]     1801            ldb   angle,u                                 *  move.b  angle(a0),d0
2ABC CB20             (C:\Users\bhrou\gi):01018 [2]     1803            addb  #$20                                    *  addi.b  #$20,d0
2ABE C4C0             (C:\Users\bhrou\gi):01019 [2]     1805            andb  #$C0                                    *  andi.b  #$C0,d0
2AC0 2626             (C:\Users\bhrou\gi):01020 [3]     1808            bne   return_1A7C4                            *  bne.s   return_1A7C4
2AC2 ECC864           (C:\Users\bhrou\gi):01021 [6]     1814            ldd   inertia,u
2AC5 B39F04           (C:\Users\bhrou\gi):01022 [7]     1821            subd  Sonic_deceleration_tmp
2AC8 F330F0           (C:\Users\bhrou\gi):01023 [7]     1828            addd  Sonic_deceleration
2ACB 1083FC00         (C:\Users\bhrou\gi):01024 [5]     1833            cmpd  #-$400                                  *  cmpi.w  #-$400,d0
2ACF 2E17             (C:\Users\bhrou\gi):01025 [3]     1836            bgt   return_1A7C4                            *  bgt.s   return_1A7C4
2AD1 CC0268           (C:\Users\bhrou\gi):01026 [3]     1839            ldd   #SonAni_Stop
2AD4 ED44             (C:\Users\bhrou\gi):01027 [6]     1845            std   anim,u                                  *  move.b  #AniIDSonAni_Stop,anim(a0)  ; use "stopping" animation
2AD6 E64B             (C:\Users\bhrou\gi):01028 [5]     1850            ldb   status,u
2AD8 CA01             (C:\Users\bhrou\gi):01029 [2]     1852            orb   #status_x_orientation
2ADA E74B             (C:\Users\bhrou\gi):01030 [5]     1857            stb   status,u                                *  bset    #0,status(a0)
2ADC 860A             (C:\Users\bhrou\gi):01031 [2]     1859            lda   #SndID_Skidding                         *  move.w  #SndID_Skidding,d0
2ADE B781E0           (C:\Users\bhrou\gi):01032 [5]     1864            sta   Smps.SFXToPlay                          *  jsr (PlaySound).l
2AE1 A6C867           (C:\Users\bhrou\gi):01033 [5]     1869            lda   air_left,u                              *  cmpi.b  #$C,air_left(a0)
2AE4 810C             (C:\Users\bhrou\gi):01034 [2]     1871            cmpa  #$C
2AE6 2500             (C:\Users\bhrou\gi):01035 [3]     1874            blo   return_1A7C4                            *  blo.s   return_1A7C4    ; if he's drowning, branch to not make dust
                      (C:\Users\bhrou\gi):01036                         ;ldx   #Sonic_Dust
                      (C:\Users\bhrou\gi):01037                         ;lda   #6
                      (C:\Users\bhrou\gi):01038                         ;sta   routine,x                               *  move.b  #6,(Sonic_Dust+routine).w
                      (C:\Users\bhrou\gi):01039                         ;ldd   #Imgxxx
                      (C:\Users\bhrou\gi):01040                         ;std   image_set,x                            *  move.b  #$15,(Sonic_Dust+mapping_frame).w
                      (C:\Users\bhrou\gi):01041                                                                       *
2AE8                  (C:\Users\bhrou\gi):01042                 return_1A7C4                                          *return_1A7C4:
2AE8 39               (C:\Users\bhrou\gi):01043 [5]     1879            rts                                           *  rts
                      (C:\Users\bhrou\gi):01044                                                                       *; End of subroutine Sonic_MoveRight
                      (C:\Users\bhrou\gi):01045                                                                       *
                      (C:\Users\bhrou\gi):01046                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01047                                                                       *; Subroutine to change Sonic's speed as he rolls
                      (C:\Users\bhrou\gi):01048                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01049                                                                       *
                      (C:\Users\bhrou\gi):01050                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01051                                                                       *
                      (C:\Users\bhrou\gi):01052                                                                       *; loc_1A7C6:
2AE9                  (C:\Users\bhrou\gi):01053                 Sonic_RollSpeed                                       *Sonic_RollSpeed:
2AE9 FC30EC           (C:\Users\bhrou\gi):01054 [6]     1885            ldd   Sonic_top_speed                         *  move.w  (Sonic_top_speed).w,d6
                      (C:\Users\bhrou\gi):01055                         _asld                                         *  asl.w   #1,d6
2AEC 58               (            _asld):00001 [2]     1887            aslb
2AED 49               (            _asld):00002 [2]     1889            rola
2AEE FD9F00           (C:\Users\bhrou\gi):01056 [6]     1895            std   Sonic_top_speed_tmp                     
2AF1 B6703E           (C:\Users\bhrou\gi):01057 [5]     1900            lda   Vint_Main_runcount
2AF4 2602             (C:\Users\bhrou\gi):01058 [3]     1903            bne   >
2AF6 8601             (C:\Users\bhrou\gi):01059 [2]     1905            lda   #1
2AF8 F630EF           (C:\Users\bhrou\gi):01060 [5]     1910    !       ldb   Sonic_acceleration+1                    *  move.w  (Sonic_acceleration).w,d5
2AFB 3D               (C:\Users\bhrou\gi):01061 [11]    1921            mul
                      (C:\Users\bhrou\gi):01062                         _asrd                                         *  asr.w   #1,d5   ; natural roll deceleration = 1/2 normal acceleration
2AFC 47               (            _asrd):00001 [2]     1923            asra
2AFD 56               (            _asrd):00002 [2]     1925            rorb
2AFE FD9F02           (C:\Users\bhrou\gi):01063 [6]     1931            std   Sonic_acceleration_tmp                  
2B01 B6703E           (C:\Users\bhrou\gi):01064 [5]     1936            lda   Vint_Main_runcount
2B04 2602             (C:\Users\bhrou\gi):01065 [3]     1939            bne   >
2B06 8601             (C:\Users\bhrou\gi):01066 [2]     1941            lda   #1
2B08 C620             (C:\Users\bhrou\gi):01067 [2]     1943    !       ldb   #$20
2B0A 3D               (C:\Users\bhrou\gi):01068 [11]    1954            mul
2B0B FD9F04           (C:\Users\bhrou\gi):01069 [6]     1960            std   Sonic_deceleration_tmp                  *  move.w  #$20,d4 ; controlled roll deceleration... interestingly,
                      (C:\Users\bhrou\gi):01070                                                                       *          ; this should be Sonic_deceleration/4 according to Tails_RollSpeed,
                      (C:\Users\bhrou\gi):01071                                                                       *          ; which means Sonic is much better than Tails at slowing down his rolling when he's underwater
                      (C:\Users\bhrou\gi):01072                                                                       *    if status_sec_isSliding = 7
2B0E 6DC86A           (C:\Users\bhrou\gi):01073 [7]     1967            tst   status_secondary,u                      *  tst.b   status_secondary(a0)
2B11 2B71             (C:\Users\bhrou\gi):01074 [3]     1970            bmi   Obj01_Roll_ResetScr                     *  bmi.w   Obj01_Roll_ResetScr
                      (C:\Users\bhrou\gi):01075                         ;                                              *    else
                      (C:\Users\bhrou\gi):01076                         ;                                              *  btst    #status_sec_isSliding,status_secondary(a0)
                      (C:\Users\bhrou\gi):01077                         ;                                              *  bne.w   Obj01_Roll_ResetScr
                      (C:\Users\bhrou\gi):01078                         ;                                              *    endif
2B13 6DC86D           (C:\Users\bhrou\gi):01079 [7]     1977            tst   move_lock,u                             *  tst.w   move_lock(a0)
2B16 2614             (C:\Users\bhrou\gi):01080 [3]     1980            bne   Sonic_ApplyRollSpeed                    *  bne.s   Sonic_ApplyRollSpeed
2B18 B68006           (C:\Users\bhrou\gi):01081 [5]     1985            lda   Ctrl_1_Held_Logical
2B1B 8440             (C:\Users\bhrou\gi):01082 [2]     1987            anda  #button_left_mask                       *  btst    #button_left,(Ctrl_1_Held_Logical).w    ; is left being pressed?
2B1D 2703             (C:\Users\bhrou\gi):01083 [3]     1990            beq   >                                       *  beq.s   +               ; if not, branch
2B1F BD2BC2           (C:\Users\bhrou\gi):01084 [8]     1998            jsr   Sonic_RollLeft                          *  bsr.w   Sonic_RollLeft
                      (C:\Users\bhrou\gi):01085                 !                                                     *+
2B22 B68006           (C:\Users\bhrou\gi):01086 [5]     2003            lda   Ctrl_1_Held_Logical                     
2B25 8480             (C:\Users\bhrou\gi):01087 [2]     2005            anda  #button_right_mask                      *  btst    #button_right,(Ctrl_1_Held_Logical).w   ; is right being pressed?
2B27 2703             (C:\Users\bhrou\gi):01088 [3]     2008            beq   Sonic_ApplyRollSpeed                    *  beq.s   Sonic_ApplyRollSpeed        ; if not, branch
2B29 BD2BE1           (C:\Users\bhrou\gi):01089 [8]     2016            jsr   Sonic_RollRight                         *  bsr.w   Sonic_RollRight
                      (C:\Users\bhrou\gi):01090                                                                       *
                      (C:\Users\bhrou\gi):01091                                                                       *; loc_1A7FC:
2B2C                  (C:\Users\bhrou\gi):01092                 Sonic_ApplyRollSpeed                                  *Sonic_ApplyRollSpeed:
2B2C ECC864           (C:\Users\bhrou\gi):01093 [6]     2022            ldd   inertia,u                               *  move.w  inertia(a0),d0
2B2F 271A             (C:\Users\bhrou\gi):01094 [3]     2025            beq   Sonic_CheckRollStop                     *  beq.s   Sonic_CheckRollStop
2B31 2B0D             (C:\Users\bhrou\gi):01095 [3]     2028            bmi   Sonic_ApplyRollSpeedLeft                *  bmi.s   Sonic_ApplyRollSpeedLeft
                      (C:\Users\bhrou\gi):01096                                                                       *
2B33                  (C:\Users\bhrou\gi):01097                 Sonic_ApplyRollSpeedRight                             *; Sonic_ApplyRollSpeedRight:
2B33 B39F02           (C:\Users\bhrou\gi):01098 [7]     2035            subd  Sonic_acceleration_tmp                  *  sub.w   d5,d0
2B36 2403             (C:\Users\bhrou\gi):01099 [3]     2038            bcc   >                                       *  bcc.s   +
2B38 CC0000           (C:\Users\bhrou\gi):01100 [3]     2041            ldd   #0                                      *  move.w  #0,d0
                      (C:\Users\bhrou\gi):01101                 !                                                     *+
2B3B EDC864           (C:\Users\bhrou\gi):01102 [6]     2047            std   inertia,u                               *  move.w  d0,inertia(a0)
2B3E 200B             (C:\Users\bhrou\gi):01103 [3]     2050            bra   Sonic_CheckRollStop                     *  bra.s   Sonic_CheckRollStop
                      (C:\Users\bhrou\gi):01104                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01105                                                                       *; loc_1A812:
2B40                  (C:\Users\bhrou\gi):01106                 Sonic_ApplyRollSpeedLeft                              *Sonic_ApplyRollSpeedLeft:
2B40 F39F02           (C:\Users\bhrou\gi):01107 [7]     2057            addd  Sonic_acceleration_tmp                  *  add.w   d5,d0
2B43 2403             (C:\Users\bhrou\gi):01108 [3]     2060            bcc   >                                       *  bcc.s   +
2B45 CC0000           (C:\Users\bhrou\gi):01109 [3]     2063            ldd   #0                                      *  move.w  #0,d0
                      (C:\Users\bhrou\gi):01110                 !                                                     *+
2B48 EDC864           (C:\Users\bhrou\gi):01111 [6]     2069            std   inertia,u                               *  move.w  d0,inertia(a0)
                      (C:\Users\bhrou\gi):01112                                                                       *
                      (C:\Users\bhrou\gi):01113                                                                       *; loc_1A81E:
2B4B                  (C:\Users\bhrou\gi):01114                 Sonic_CheckRollStop                                   *Sonic_CheckRollStop:
                      (C:\Users\bhrou\gi):01115                         ;                                             *  tst.w   inertia(a0)
2B4B 2637             (C:\Users\bhrou\gi):01116 [3]     2072            bne   Obj01_Roll_ResetScr                     *  bne.s   Obj01_Roll_ResetScr
2B4D 6DC878           (C:\Users\bhrou\gi):01117 [7]     2079            tst   pinball_mode,u                          *  tst.b   pinball_mode(a0) ; note: the spindash flag has a different meaning when Sonic's already rolling -- it's used to mean he's not allowed to stop rolling
2B50 261C             (C:\Users\bhrou\gi):01118 [3]     2082            bne   Sonic_KeepRolling                       *  bne.s   Sonic_KeepRolling
2B52 A64B             (C:\Users\bhrou\gi):01119 [5]     2087            lda   status,u
2B54 84FB             (C:\Users\bhrou\gi):01120 [2]     2089            anda  #^status_jumporroll                     *  bclr    #2,status(a0)
2B56 A74B             (C:\Users\bhrou\gi):01121 [5]     2094            sta   status,u
2B58 CC1309           (C:\Users\bhrou\gi):01122 [3]     2097            ldd   #$1309                                  *  move.b  #$13,y_radius(a0)
2B5B EDC85E           (C:\Users\bhrou\gi):01123 [6]     2103            std   y_radius,u                              *  move.b  #9,x_radius(a0)
2B5E CC00C5           (C:\Users\bhrou\gi):01124 [3]     2106            ldd   #SonAni_Wait 
2B61 ED44             (C:\Users\bhrou\gi):01125 [6]     2112            std   anim,u                                  *  move.b  #AniIDSonAni_Wait,anim(a0)
2B63 ECC811           (C:\Users\bhrou\gi):01126 [6]     2118            ldd   y_pos,u
2B66 830005           (C:\Users\bhrou\gi):01127 [4]     2122            subd  #5
2B69 EDC811           (C:\Users\bhrou\gi):01128 [6]     2128            std   y_pos,u                                 *  subq.w  #5,y_pos(a0)
2B6C 2016             (C:\Users\bhrou\gi):01129 [3]     2131            bra   Obj01_Roll_ResetScr                     *  bra.s   Obj01_Roll_ResetScr
                      (C:\Users\bhrou\gi):01130                                                                       *
                      (C:\Users\bhrou\gi):01131                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01132                                                                       *; magically gives Sonic an extra push if he's going to stop rolling where it's not allowed
                      (C:\Users\bhrou\gi):01133                                                                       *; (such as in an S-curve in HTZ or a stopper chamber in CNZ)
                      (C:\Users\bhrou\gi):01134                                                                       *; loc_1A848:
2B6E                  (C:\Users\bhrou\gi):01135                 Sonic_KeepRolling                                     *Sonic_KeepRolling:
2B6E CC0400           (C:\Users\bhrou\gi):01136 [3]     2134            ldd   #$400
2B71 EDC864           (C:\Users\bhrou\gi):01137 [6]     2140            std   inertia,u                               *  move.w  #$400,inertia(a0)
2B74 A64B             (C:\Users\bhrou\gi):01138 [5]     2145            lda   status,u                                *  btst    #0,status(a0)
2B76 8401             (C:\Users\bhrou\gi):01139 [2]     2147            anda  #status_x_orientation
2B78 270A             (C:\Users\bhrou\gi):01140 [3]     2150            beq   Obj01_Roll_ResetScr                     *  beq.s   Obj01_Roll_ResetScr
2B7A ECC864           (C:\Users\bhrou\gi):01141 [6]     2156            ldd   inertia,u
                      (C:\Users\bhrou\gi):01142                         _negd                                         *  neg.w   inertia(a0)
2B7D 40               (            _negd):00001 [2]     2158            nega
2B7E 50               (            _negd):00002 [2]     2160            negb
2B7F 8200             (            _negd):00003 [2]     2162            sbca  #0
2B81 EDC864           (C:\Users\bhrou\gi):01143 [6]     2168            std   inertia,u                               *
                      (C:\Users\bhrou\gi):01144                                                                       *; resets the screen to normal while rolling, like Obj01_ResetScr
                      (C:\Users\bhrou\gi):01145                                                                       *; loc_1A85A:
2B84                  (C:\Users\bhrou\gi):01146                 Obj01_Roll_ResetScr                                   *Obj01_Roll_ResetScr:
2B84 FC6F6E           (C:\Users\bhrou\gi):01147 [6]     2174            ldd   Camera_Y_pos_bias
2B87 10830070         (C:\Users\bhrou\gi):01148 [5]     2179            cmpd  #camera_Y_pos_bias_default              *  cmpi.w  #(224/2)-16,(Camera_Y_pos_bias).w   ; is screen in its default position?
2B8B 270B             (C:\Users\bhrou\gi):01149 [3]     2182            beq   Sonic_SetRollSpeeds                     *  beq.s   Sonic_SetRollSpeeds    ; if yes, branch
2B8D 2403             (C:\Users\bhrou\gi):01150 [3]     2185            bhs   >                                       *  bhs.s   +               ; depending on the sign of the difference,
2B8F C30004           (C:\Users\bhrou\gi):01151 [4]     2189            addd  #4                                      *  addq.w  #4,(Camera_Y_pos_bias).w    ; either add 2
2B92 830002           (C:\Users\bhrou\gi):01152 [4]     2193    !       subd  #2                                      *+ subq.w  #2,(Camera_Y_pos_bias).w    ; or subtract 2
2B95 FD6F6E           (C:\Users\bhrou\gi):01153 [6]     2199            std   Camera_Y_pos_bias
                      (C:\Users\bhrou\gi):01154                                                                       *
                      (C:\Users\bhrou\gi):01155                 
                      (C:\Users\bhrou\gi):01156                                                                       *; loc_1A86C:
2B98                  (C:\Users\bhrou\gi):01157                 Sonic_SetRollSpeeds                                   *Sonic_SetRollSpeeds:
2B98 A6C860           (C:\Users\bhrou\gi):01158 [5]     2204            lda   angle,u                                 *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01159                                                                       *  jsr (CalcSine).l
                      (C:\Users\bhrou\gi):01160                                                                       *  muls.w  inertia(a0),d0
                      (C:\Users\bhrou\gi):01161                                                                       *  asr.l   #8,d0
                      (C:\Users\bhrou\gi):01162                                                                       *  move.w  d0,y_vel(a0)    ; set y velocity based on $14 and angle
2B9B ECC864           (C:\Users\bhrou\gi):01163 [6]     2210            ldd   inertia,u                               *  muls.w  inertia(a0),d1
                      (C:\Users\bhrou\gi):01164                                                                       *  asr.l   #8,d1
2B9E 10831000         (C:\Users\bhrou\gi):01165 [5]     2215            cmpd  #$1000                                  *  cmpi.w  #$1000,d1
2BA2 2F03             (C:\Users\bhrou\gi):01166 [3]     2218            ble   >                                       *  ble.s   +
2BA4 CC1000           (C:\Users\bhrou\gi):01167 [3]     2221            ldd   #$1000                                  *  move.w  #$1000,d1   ; limit Sonic's speed rolling right
                      (C:\Users\bhrou\gi):01168                 !                                                     *+
2BA7 1083F000         (C:\Users\bhrou\gi):01169 [5]     2226            cmpd  #-$1000                                 *  cmpi.w  #-$1000,d1
2BAB 2C03             (C:\Users\bhrou\gi):01170 [3]     2229            bge   >                                       *  bge.s   +
2BAD CCF000           (C:\Users\bhrou\gi):01171 [3]     2232            ldd   #-$1000                                 *  move.w  #-$1000,d1  ; limit Sonic's speed rolling left
                      (C:\Users\bhrou\gi):01172                 !                                                     *+
2BB0 BE703D           (C:\Users\bhrou\gi):01173 [6]     2238            ldx   Vint_Main_runcount_w
2BB3 2707             (C:\Users\bhrou\gi):01174 [3]     2241            beq   @end
2BB5                  (C:\Users\bhrou\gi):01175                 @loop
2BB5 E3C864           (C:\Users\bhrou\gi):01176 [7]     2248            addd  inertia,u
2BB8 301F             (C:\Users\bhrou\gi):01177 [5]     2253            leax  -1,x
2BBA 26F9             (C:\Users\bhrou\gi):01178 [3]     2256            bne   @loop 
2BBC EDC816           (C:\Users\bhrou\gi):01179 [6]     2262    @end    std   x_vel,u                                 *  move.w  d1,x_vel(a0)    ; set x velocity based on $14 and angle
2BBF 7E29F7           (C:\Users\bhrou\gi):01180 [4]     2266            jmp   Obj01_CheckWallsOnGround                *  bra.w   Obj01_CheckWallsOnGround
                      (C:\Users\bhrou\gi):01181                                                                       *; End of function Sonic_RollSpeed
                      (C:\Users\bhrou\gi):01182                                                                       *
                      (C:\Users\bhrou\gi):01183                                                                       *
                      (C:\Users\bhrou\gi):01184                 
                      (C:\Users\bhrou\gi):01185                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01186                                                                       *
                      (C:\Users\bhrou\gi):01187                                                                       *
                      (C:\Users\bhrou\gi):01188                                                                       *; loc_1A8A2:
2BC2                  (C:\Users\bhrou\gi):01189                 Sonic_RollLeft                                        *Sonic_RollLeft:
2BC2 ECC864           (C:\Users\bhrou\gi):01190 [6]     2272            ldd   inertia,u                               *  move.w  inertia(a0),d0
2BC5 2702             (C:\Users\bhrou\gi):01191 [3]     2275            beq   >                                       *  beq.s   +
2BC7 2A0C             (C:\Users\bhrou\gi):01192 [3]     2278            bpl   Sonic_BrakeRollingRight                 *  bpl.s   Sonic_BrakeRollingRight
                      (C:\Users\bhrou\gi):01193                 !                                                     *+
2BC9 A64B             (C:\Users\bhrou\gi):01194 [5]     2283            lda   status,u
2BCB 8A01             (C:\Users\bhrou\gi):01195 [2]     2285            ora   #status_x_orientation                   *  bset    #0,status(a0)
2BCD A74B             (C:\Users\bhrou\gi):01196 [5]     2290            sta   status,u
2BCF CC0093           (C:\Users\bhrou\gi):01197 [3]     2293            ldd   #SonAni_Roll
2BD2 ED44             (C:\Users\bhrou\gi):01198 [6]     2299            std   anim,u                                  *  move.b  #AniIDSonAni_Roll,anim(a0)  ; use "rolling" animation
2BD4 39               (C:\Users\bhrou\gi):01199 [5]     2304            rts                                           *  rts
                      (C:\Users\bhrou\gi):01200                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01201                                                                       *; loc_1A8B8:
2BD5                  (C:\Users\bhrou\gi):01202                 Sonic_BrakeRollingRight                               *Sonic_BrakeRollingRight:
2BD5 B39F04           (C:\Users\bhrou\gi):01203 [7]     2311            subd  Sonic_deceleration_tmp                  *  sub.w   d4,d0   ; reduce rightward rolling speed
2BD8 2403             (C:\Users\bhrou\gi):01204 [3]     2314            bcc   >                                       *  bcc.s   +
2BDA CCFF80           (C:\Users\bhrou\gi):01205 [3]     2317            ldd   #-$80                                   *  move.w  #-$80,d0
                      (C:\Users\bhrou\gi):01206                 !                                                     *+
2BDD EDC864           (C:\Users\bhrou\gi):01207 [6]     2323            std   inertia,u                               *  move.w  d0,inertia(a0)
2BE0 39               (C:\Users\bhrou\gi):01208 [5]     2328            rts                                           *  rts
                      (C:\Users\bhrou\gi):01209                                                                       *; End of function Sonic_RollLeft
                      (C:\Users\bhrou\gi):01210                                                                       *
                      (C:\Users\bhrou\gi):01211                                                                       *
                      (C:\Users\bhrou\gi):01212                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01213                                                                       *
                      (C:\Users\bhrou\gi):01214                                                                       *
                      (C:\Users\bhrou\gi):01215                                                                       *; loc_1A8C6:
2BE1                  (C:\Users\bhrou\gi):01216                 Sonic_RollRight                                       *Sonic_RollRight:
2BE1 ECC864           (C:\Users\bhrou\gi):01217 [6]     2334            ldd   inertia,u                               *  move.w  inertia(a0),d0
2BE4 2B0C             (C:\Users\bhrou\gi):01218 [3]     2337            bmi   Sonic_BrakeRollingLeft                  *  bmi.s   Sonic_BrakeRollingLeft
2BE6 A64B             (C:\Users\bhrou\gi):01219 [5]     2342            lda   status,u
2BE8 84FE             (C:\Users\bhrou\gi):01220 [2]     2344            anda  #^status_x_orientation                  *  bclr    #0,status(a0)
2BEA A74B             (C:\Users\bhrou\gi):01221 [5]     2349            sta   status,u
2BEC CC0093           (C:\Users\bhrou\gi):01222 [3]     2352            ldd   #SonAni_Roll                            *  move.b  #AniIDSonAni_Roll,anim(a0)  ; use "rolling" animation
2BEF ED44             (C:\Users\bhrou\gi):01223 [6]     2358            std   anim,u
2BF1 39               (C:\Users\bhrou\gi):01224 [5]     2363            rts                                           *  rts
                      (C:\Users\bhrou\gi):01225                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01226                                                                       *; loc_1A8DA:
2BF2                  (C:\Users\bhrou\gi):01227                 Sonic_BrakeRollingLeft                                *Sonic_BrakeRollingLeft:
2BF2 F39F04           (C:\Users\bhrou\gi):01228 [7]     2370            addd  Sonic_deceleration_tmp                  *  add.w   d4,d0   ; reduce leftward rolling speed
2BF5 2403             (C:\Users\bhrou\gi):01229 [3]     2373            bcc   >                                       *  bcc.s   +
2BF7 CC0080           (C:\Users\bhrou\gi):01230 [3]     2376            ldd   #$80                                    *  move.w  #$80,d0
                      (C:\Users\bhrou\gi):01231                 !                                                     *+
2BFA EDC864           (C:\Users\bhrou\gi):01232 [6]     2382            std   inertia,u                               *  move.w  d0,inertia(a0)
2BFD 39               (C:\Users\bhrou\gi):01233 [5]     2387            rts                                           *  rts
                      (C:\Users\bhrou\gi):01234                                                                       *; End of subroutine Sonic_RollRight
                      (C:\Users\bhrou\gi):01235                                                                       *
                      (C:\Users\bhrou\gi):01236                                                                       *
                      (C:\Users\bhrou\gi):01237                 
                      (C:\Users\bhrou\gi):01238                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01239                                                                       *; Subroutine for moving Sonic left or right when he's in the air
                      (C:\Users\bhrou\gi):01240                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01241                                                                       *
                      (C:\Users\bhrou\gi):01242                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01243                                                                       *
                      (C:\Users\bhrou\gi):01244                                                                       *; loc_1A8E8:
2BFE                  (C:\Users\bhrou\gi):01245                 Sonic_ChgJumpDir                                      *Sonic_ChgJumpDir:
2BFE FC30EC           (C:\Users\bhrou\gi):01246 [6]     2393            ldd   Sonic_top_speed
2C01 FD9F00           (C:\Users\bhrou\gi):01247 [6]     2399            std   Sonic_top_speed_tmp                     *  move.w  (Sonic_top_speed).w,d6
2C04 B6703E           (C:\Users\bhrou\gi):01248 [5]     2404            lda   Vint_Main_runcount
2C07 2602             (C:\Users\bhrou\gi):01249 [3]     2407            bne   >
2C09 8601             (C:\Users\bhrou\gi):01250 [2]     2409            lda   #1
2C0B F630EF           (C:\Users\bhrou\gi):01251 [5]     2414    !       ldb   Sonic_acceleration+1                    *  move.w  (Sonic_acceleration).w,d5
2C0E 3D               (C:\Users\bhrou\gi):01252 [11]    2425            mul
                      (C:\Users\bhrou\gi):01253                         _asld                                         *  asl.w   #1,d5
2C0F 58               (            _asld):00001 [2]     2427            aslb
2C10 49               (            _asld):00002 [2]     2429            rola
2C11 FD9F02           (C:\Users\bhrou\gi):01254 [6]     2435            std   Sonic_acceleration_tmp                  
2C14 A64B             (C:\Users\bhrou\gi):01255 [5]     2440            lda   status,u
2C16 8410             (C:\Users\bhrou\gi):01256 [2]     2442            anda  #status_jumpingafterrolling             *  btst    #4,status(a0)       ; did Sonic jump from rolling?
2C18 2648             (C:\Users\bhrou\gi):01257 [3]     2445            bne   Obj01_Jump_ResetScr                     *  bne.s   Obj01_Jump_ResetScr ; if yes, branch to skip midair control
2C1A AEC816           (C:\Users\bhrou\gi):01258 [6]     2451            ldx   x_vel,u                                 *  move.w  x_vel(a0),d0
2C1D B68006           (C:\Users\bhrou\gi):01259 [5]     2456            lda   Ctrl_1_Held_Logical
2C20 8440             (C:\Users\bhrou\gi):01260 [2]     2458            anda  #button_left_mask                       *  btst    #button_left,(Ctrl_1_Held_Logical).w
2C22 2721             (C:\Users\bhrou\gi):01261 [3]     2461            beq   >                                       *  beq.s   +   ; if not holding left, branch
                      (C:\Users\bhrou\gi):01262                                                                       *
2C24 A64B             (C:\Users\bhrou\gi):01263 [5]     2466            lda   status,u
2C26 8A01             (C:\Users\bhrou\gi):01264 [2]     2468            ora   #status_x_orientation                   
2C28 A74B             (C:\Users\bhrou\gi):01265 [5]     2473            sta   status,u                                *  bset    #0,status(a0)
2C2A FC9F02           (C:\Users\bhrou\gi):01266 [6]     2479            ldd   Sonic_acceleration_tmp
                      (C:\Users\bhrou\gi):01267                         _negd
2C2D 40               (            _negd):00001 [2]     2481            nega
2C2E 50               (            _negd):00002 [2]     2483            negb
2C2F 8200             (            _negd):00003 [2]     2485            sbca  #0
2C31 308B             (C:\Users\bhrou\gi):01268 [8]     2493            leax  d,x                                     *  sub.w   d5,d0   ; add acceleration to the left
2C33 FC9F00           (C:\Users\bhrou\gi):01269 [6]     2499            ldd   Sonic_top_speed_tmp                     *  move.w  d6,d1
                      (C:\Users\bhrou\gi):01270                         _negd                                         *  neg.w   d1
2C36 40               (            _negd):00001 [2]     2501            nega
2C37 50               (            _negd):00002 [2]     2503            negb
2C38 8200             (            _negd):00003 [2]     2505            sbca  #0
2C3A FD2C3E           (C:\Users\bhrou\gi):01271 [6]     2511            std   @d1
2C3D 8C0000           (C:\Users\bhrou\gi):01272 [4]     2515            cmpx  #0                                      *  cmp.w   d1,d0   ; compare new speed with top speed
     2C3E             (C:\Users\bhrou\gi):01273                 @d1     equ   *-2
2C40 2E03             (C:\Users\bhrou\gi):01274 [3]     2518            bgt   >                                       *  bgt.s   +   ; if new speed is less than the maximum, branch
2C42 BE2C3E           (C:\Users\bhrou\gi):01275 [6]     2524            ldx   @d1                                     *  move.w  d1,d0   ; limit speed in air going left, even if Sonic was already going faster (speed limit/cap)
                      (C:\Users\bhrou\gi):01276                 !                                                     *+
2C45 B68006           (C:\Users\bhrou\gi):01277 [5]     2529            lda   Ctrl_1_Held_Logical
2C48 8480             (C:\Users\bhrou\gi):01278 [2]     2531            anda  #button_right_mask                      *  btst    #button_right,(Ctrl_1_Held_Logical).w
2C4A 2713             (C:\Users\bhrou\gi):01279 [3]     2534            beq   >                                       *  beq.s   +   ; if not holding right, branch
                      (C:\Users\bhrou\gi):01280                                                                       *
2C4C A64B             (C:\Users\bhrou\gi):01281 [5]     2539            lda   status,u
2C4E 84FE             (C:\Users\bhrou\gi):01282 [2]     2541            anda  #^status_x_orientation                   
2C50 A74B             (C:\Users\bhrou\gi):01283 [5]     2546            sta   status,u                                *  bclr    #0,status(a0)
2C52 FC9F02           (C:\Users\bhrou\gi):01284 [6]     2552            ldd   Sonic_acceleration_tmp
2C55 308B             (C:\Users\bhrou\gi):01285 [8]     2560            leax  d,x                                     *  add.w   d5,d0   ; accelerate right in the air
2C57 BC9F00           (C:\Users\bhrou\gi):01286 [7]     2567            cmpx  Sonic_top_speed_tmp                     *  cmp.w   d6,d0   ; compare new speed with top speed
2C5A 2D03             (C:\Users\bhrou\gi):01287 [3]     2570            blt   >                                       *  blt.s   +   ; if new speed is less than the maximum, branch
2C5C BE9F00           (C:\Users\bhrou\gi):01288 [6]     2576            ldx   Sonic_top_speed_tmp                     *  move.w  d6,d0   ; limit speed in air going right, even if Sonic was already going faster (speed limit/cap)
                      (C:\Users\bhrou\gi):01289                                                                       *; Obj01_JumpMove:
2C5F AFC816           (C:\Users\bhrou\gi):01290 [6]     2582    !       stx   x_vel,u                                 *+ move.w  d0,x_vel(a0)
                      (C:\Users\bhrou\gi):01291                                                                       *
                      (C:\Users\bhrou\gi):01292                                                                       *; loc_1A932: Obj01_ResetScr2:
2C62                  (C:\Users\bhrou\gi):01293                 Obj01_Jump_ResetScr                                   *Obj01_Jump_ResetScr:
2C62 FC6F6E           (C:\Users\bhrou\gi):01294 [6]     2588            ldd   Camera_Y_pos_bias
2C65 10830070         (C:\Users\bhrou\gi):01295 [5]     2593            cmpd  #camera_Y_pos_bias_default              *  cmpi.w  #(224/2)-16,(Camera_Y_pos_bias).w   ; is screen in its default position?
2C69 270B             (C:\Users\bhrou\gi):01296 [3]     2596            beq   Sonic_JumpPeakDecelerate                *  beq.s   Sonic_JumpPeakDecelerate    ; if yes, branch
2C6B 2403             (C:\Users\bhrou\gi):01297 [3]     2599            bhs   >                                       *  bhs.s   +               ; depending on the sign of the difference,
2C6D C30004           (C:\Users\bhrou\gi):01298 [4]     2603            addd  #4                                      *  addq.w  #4,(Camera_Y_pos_bias).w    ; either add 2
2C70 830002           (C:\Users\bhrou\gi):01299 [4]     2607    !       subd  #2                                      *+ subq.w  #2,(Camera_Y_pos_bias).w    ; or subtract 2
2C73 FD6F6E           (C:\Users\bhrou\gi):01300 [6]     2613            std   Camera_Y_pos_bias
                      (C:\Users\bhrou\gi):01301                 
                      (C:\Users\bhrou\gi):01302                                                                       *
                      (C:\Users\bhrou\gi):01303                                                                       *; loc_1A944:
2C76                  (C:\Users\bhrou\gi):01304                 Sonic_JumpPeakDecelerate                              *Sonic_JumpPeakDecelerate:
2C76 ECC818           (C:\Users\bhrou\gi):01305 [6]     2619            ldd   y_vel,u
2C79 1083FC00         (C:\Users\bhrou\gi):01306 [5]     2624            cmpd  #-$400                                  *  cmpi.w  #-$400,y_vel(a0)    ; is Sonic moving faster than -$400 upwards?
2C7D 2531             (C:\Users\bhrou\gi):01307 [3]     2627            blo   return_1A972                            *  blo.s   return_1A972        ; if yes, return
2C7F ECC816           (C:\Users\bhrou\gi):01308 [6]     2633            ldd   x_vel,u                                 *  move.w  x_vel(a0),d0
                      (C:\Users\bhrou\gi):01309                         ;                                             *  move.w  d0,d1
                      (C:\Users\bhrou\gi):01310                         _asrd
2C82 47               (            _asrd):00001 [2]     2635            asra
2C83 56               (            _asrd):00002 [2]     2637            rorb
                      (C:\Users\bhrou\gi):01311                         _asrd
2C84 47               (            _asrd):00001 [2]     2639            asra
2C85 56               (            _asrd):00002 [2]     2641            rorb
                      (C:\Users\bhrou\gi):01312                         _asrd
2C86 47               (            _asrd):00001 [2]     2643            asra
2C87 56               (            _asrd):00002 [2]     2645            rorb
                      (C:\Users\bhrou\gi):01313                         _asrd
2C88 47               (            _asrd):00001 [2]     2647            asra
2C89 56               (            _asrd):00002 [2]     2649            rorb
                      (C:\Users\bhrou\gi):01314                         _asrd                                         *  asr.w   #5,d1       ; d1 = x_velocity / 32
2C8A 47               (            _asrd):00001 [2]     2651            asra
2C8B 56               (            _asrd):00002 [2]     2653            rorb
2C8C FD2C97           (C:\Users\bhrou\gi):01315 [6]     2659            std   @d1
2C8F 271F             (C:\Users\bhrou\gi):01316 [3]     2662            beq   return_1A972                            *  beq.s   return_1A972    ; return if d1 is 0
2C91 2B0F             (C:\Users\bhrou\gi):01317 [3]     2665            bmi   Sonic_JumpPeakDecelerateLeft            *  bmi.s   Sonic_JumpPeakDecelerateLeft    ; branch if moving left
                      (C:\Users\bhrou\gi):01318                                                                       *
                      (C:\Users\bhrou\gi):01319                                                                       *; Sonic_JumpPeakDecelerateRight:
2C93 ECC816           (C:\Users\bhrou\gi):01320 [6]     2671            ldd   x_vel,u
2C96 830000           (C:\Users\bhrou\gi):01321 [4]     2675            subd  #0                                      *  sub.w   d1,d0   ; reduce x velocity by d1
     2C97             (C:\Users\bhrou\gi):01322                 @d1     equ   *-2
2C99 2403             (C:\Users\bhrou\gi):01323 [3]     2678            bcc   >                                       *  bcc.s   +
2C9B CC0000           (C:\Users\bhrou\gi):01324 [3]     2681            ldd   #0                                      *  move.w  #0,d0
                      (C:\Users\bhrou\gi):01325                 !                                                     *+
2C9E EDC816           (C:\Users\bhrou\gi):01326 [6]     2687            std   x_vel,u                                 *  move.w  d0,x_vel(a0)
2CA1 39               (C:\Users\bhrou\gi):01327 [5]     2692            rts                                           *  rts
                      (C:\Users\bhrou\gi):01328                                                                       *;-------------------------------------------------------------
                      (C:\Users\bhrou\gi):01329                                                                       *; loc_1A966:
2CA2                  (C:\Users\bhrou\gi):01330                 Sonic_JumpPeakDecelerateLeft                          *Sonic_JumpPeakDecelerateLeft:
2CA2 ECC816           (C:\Users\bhrou\gi):01331 [6]     2698            ldd   x_vel,u
2CA5 B32C97           (C:\Users\bhrou\gi):01332 [7]     2705            subd  @d1                                     *  sub.w   d1,d0   ; reduce x velocity by d1
2CA8 2503             (C:\Users\bhrou\gi):01333 [3]     2708            bcs   >                                       *  bcs.s   +
2CAA CC0000           (C:\Users\bhrou\gi):01334 [3]     2711            ldd   #0                                      *  move.w  #0,d0
                      (C:\Users\bhrou\gi):01335                 !                                                     *+
2CAD EDC816           (C:\Users\bhrou\gi):01336 [6]     2717            std   x_vel,u                                 *  move.w  d0,x_vel(a0)
                      (C:\Users\bhrou\gi):01337                                                                       *
2CB0                  (C:\Users\bhrou\gi):01338                 return_1A972                                          *return_1A972:
2CB0 39               (C:\Users\bhrou\gi):01339 [5]     2722            rts                                           *  rts
                      (C:\Users\bhrou\gi):01340                                                                       *; End of subroutine Sonic_ChgJumpDir
                      (C:\Users\bhrou\gi):01341                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01342                 
                      (C:\Users\bhrou\gi):01343                                                                       *
                      (C:\Users\bhrou\gi):01344                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01345                                                                       *; Subroutine to prevent Sonic from leaving the boundaries of a level
                      (C:\Users\bhrou\gi):01346                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01347                                                                       *
                      (C:\Users\bhrou\gi):01348                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01349                                                                       *
                      (C:\Users\bhrou\gi):01350                                                                       *; loc_1A974:
2CB1                  (C:\Users\bhrou\gi):01351                 Sonic_LevelBound                                      *Sonic_LevelBound:
                      (C:\Users\bhrou\gi):01352                                                                       *  move.l  x_pos(a0),d1
                      (C:\Users\bhrou\gi):01353                                                                       *  move.w  x_vel(a0),d0
                      (C:\Users\bhrou\gi):01354                                                                       *  ext.l   d0
                      (C:\Users\bhrou\gi):01355                                                                       *  asl.l   #8,d0
                      (C:\Users\bhrou\gi):01356                                                                       *  add.l   d0,d1
                      (C:\Users\bhrou\gi):01357                                                                       *  swap    d1
                      (C:\Users\bhrou\gi):01358                                                                       *  move.w  (Camera_Min_X_pos).w,d0
                      (C:\Users\bhrou\gi):01359                                                                       *  addi.w  #$10,d0
                      (C:\Users\bhrou\gi):01360                                                                       *  cmp.w   d1,d0           ; has Sonic touched the left boundary?
                      (C:\Users\bhrou\gi):01361                                                                       *  bhi.s   Sonic_Boundary_Sides    ; if yes, branch
                      (C:\Users\bhrou\gi):01362                                                                       *  move.w  (Camera_Max_X_pos).w,d0
                      (C:\Users\bhrou\gi):01363                                                                       *  addi.w  #320-24,d0      ; screen width - Sonic's width_pixels
                      (C:\Users\bhrou\gi):01364                                                                       *  tst.b   (Current_Boss_ID).w
                      (C:\Users\bhrou\gi):01365                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):01366                                                                       *  addi.w  #$40,d0
                      (C:\Users\bhrou\gi):01367                                                                       *+
                      (C:\Users\bhrou\gi):01368                                                                       *  cmp.w   d1,d0           ; has Sonic touched the right boundary?
                      (C:\Users\bhrou\gi):01369                                                                       *  bls.s   Sonic_Boundary_Sides    ; if yes, branch
                      (C:\Users\bhrou\gi):01370                                                                       *
                      (C:\Users\bhrou\gi):01371                                                                       *; loc_1A9A6:
2CB1                  (C:\Users\bhrou\gi):01372                 Sonic_Boundary_CheckBottom                            *Sonic_Boundary_CheckBottom:
                      (C:\Users\bhrou\gi):01373                                                                       *  move.w  (Camera_Max_Y_pos_now).w,d0
                      (C:\Users\bhrou\gi):01374                                                                       *  addi.w  #$E0,d0
                      (C:\Users\bhrou\gi):01375                                                                       *  cmp.w   y_pos(a0),d0        ; has Sonic touched the bottom boundary?
                      (C:\Users\bhrou\gi):01376                                                                       *  blt.s   Sonic_Boundary_Bottom   ; if yes, branch
2CB1 39               (C:\Users\bhrou\gi):01377 [5]     2727            rts                                           *  rts
                      (C:\Users\bhrou\gi):01378                                                                       *; ---------------------------------------------------------------------------
2CB2                  (C:\Users\bhrou\gi):01379                 Sonic_Boundary_Bottom                                 *Sonic_Boundary_Bottom: ;;
2CB2 7E2FC2           (C:\Users\bhrou\gi):01380 [4]     2731            jmp   KillCharacter                           *  jmpto   (KillCharacter).l, JmpTo_KillCharacter
                      (C:\Users\bhrou\gi):01381                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01382                                                                       *
                      (C:\Users\bhrou\gi):01383                                                                       *; loc_1A9BA:
2CB5                  (C:\Users\bhrou\gi):01384                 Sonic_Boundary_Sides                                  *Sonic_Boundary_Sides:
                      (C:\Users\bhrou\gi):01385                                                                       *  move.w  d0,x_pos(a0)
                      (C:\Users\bhrou\gi):01386                                                                       *  move.w  #0,2+x_pos(a0) ; subpixel x
                      (C:\Users\bhrou\gi):01387                                                                       *  move.w  #0,x_vel(a0)
                      (C:\Users\bhrou\gi):01388                                                                       *  move.w  #0,inertia(a0)
2CB5 20FA             (C:\Users\bhrou\gi):01389 [3]     2734            bra   Sonic_Boundary_CheckBottom              *  bra.s   Sonic_Boundary_CheckBottom
                      (C:\Users\bhrou\gi):01390                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01391                                                                       *
                      (C:\Users\bhrou\gi):01392                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01393                                                                       *; Subroutine allowing Sonic to start rolling when he's moving
                      (C:\Users\bhrou\gi):01394                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01395                                                                       *
                      (C:\Users\bhrou\gi):01396                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01397                                                                       *
                      (C:\Users\bhrou\gi):01398                                                                       *; loc_1A9D2:
2CB7                  (C:\Users\bhrou\gi):01399                 Sonic_Roll                                            *Sonic_Roll:
                      (C:\Users\bhrou\gi):01400                                                                       *    if status_sec_isSliding = 7
2CB7 6DC86A           (C:\Users\bhrou\gi):01401 [7]     2741            tst   status_secondary,u                      *  tst.b   status_secondary(a0)
2CBA 2B1A             (C:\Users\bhrou\gi):01402 [3]     2744            bmi   Obj01_NoRoll                            *  bmi.s   Obj01_NoRoll
                      (C:\Users\bhrou\gi):01403                                                                       *    else
                      (C:\Users\bhrou\gi):01404                                                                       *  btst    #status_sec_isSliding,status_secondary(a0)
                      (C:\Users\bhrou\gi):01405                                                                       *  bne.s   Obj01_NoRoll
                      (C:\Users\bhrou\gi):01406                                                                       *    endif
2CBC ECC864           (C:\Users\bhrou\gi):01407 [6]     2750            ldd   inertia,u                               *  mvabs.w inertia(a0),d0
2CBF 2A04             (C:\Users\bhrou\gi):01408 [3]     2753            bpl   >
                      (C:\Users\bhrou\gi):01409                         _negd
2CC1 40               (            _negd):00001 [2]     2755            nega
2CC2 50               (            _negd):00002 [2]     2757            negb
2CC3 8200             (            _negd):00003 [2]     2759            sbca  #0
                      (C:\Users\bhrou\gi):01410                 !                                              
2CC5 10830080         (C:\Users\bhrou\gi):01411 [5]     2764            cmpd  #$80                                    *  cmpi.w  #$80,d0     ; is Sonic moving at $80 speed or faster?
2CC9 250B             (C:\Users\bhrou\gi):01412 [3]     2767            blo   Obj01_NoRoll                            *  blo.s   Obj01_NoRoll    ; if not, branch
2CCB B68006           (C:\Users\bhrou\gi):01413 [5]     2772            lda   Ctrl_1_Held_Logical                     *  move.b  (Ctrl_1_Held_Logical).w,d0
2CCE 85C0             (C:\Users\bhrou\gi):01414 [2]     2774            bita  #button_left_mask|button_right_mask     *  andi.b  #button_left_mask|button_right_mask,d0 ; is left/right being pressed?
2CD0 2604             (C:\Users\bhrou\gi):01415 [3]     2777            bne   Obj01_NoRoll                            *  bne.s   Obj01_NoRoll    ; if yes, branch
2CD2 8420             (C:\Users\bhrou\gi):01416 [2]     2779            anda  #button_down_mask                       *  btst    #button_down,(Ctrl_1_Held_Logical).w ; is down being pressed?
2CD4 2601             (C:\Users\bhrou\gi):01417 [3]     2782            bne   Obj01_ChkRoll                           *  bne.s   Obj01_ChkRoll           ; if yes, branch
                      (C:\Users\bhrou\gi):01418                                                                       *; return_1A9F8:
2CD6                  (C:\Users\bhrou\gi):01419                 Obj01_NoRoll                                          *Obj01_NoRoll:
2CD6 39               (C:\Users\bhrou\gi):01420 [5]     2787            rts                                           *  rts
                      (C:\Users\bhrou\gi):01421                                                                       *
                      (C:\Users\bhrou\gi):01422                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01423                                                                       *; loc_1A9FA:
2CD7                  (C:\Users\bhrou\gi):01424                 Obj01_ChkRoll                                         *Obj01_ChkRoll:
2CD7 A64B             (C:\Users\bhrou\gi):01425 [5]     2792            lda   status,u                           
2CD9 8504             (C:\Users\bhrou\gi):01426 [2]     2794            bita  #status_jumporroll                      *  btst    #2,status(a0)   ; is Sonic already rolling?
2CDB 2701             (C:\Users\bhrou\gi):01427 [3]     2797            beq   Obj01_DoRoll                            *  beq.s   Obj01_DoRoll    ; if not, branch
2CDD 39               (C:\Users\bhrou\gi):01428 [5]     2802            rts                                           *  rts
                      (C:\Users\bhrou\gi):01429                                                                       *
                      (C:\Users\bhrou\gi):01430                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01431                                                                       *; loc_1AA04:
2CDE                  (C:\Users\bhrou\gi):01432                 Obj01_DoRoll                                          *Obj01_DoRoll:
2CDE 8A04             (C:\Users\bhrou\gi):01433 [2]     2804            ora   #status_jumporroll                       
2CE0 A74B             (C:\Users\bhrou\gi):01434 [5]     2809            sta   status,u                                *  bset    #2,status(a0)
2CE2 CC0E07           (C:\Users\bhrou\gi):01435 [3]     2812            ldd   #$0E07                                  *  move.b  #$E,y_radius(a0)
2CE5 EDC85E           (C:\Users\bhrou\gi):01436 [6]     2818            std   y_radius,u ; and x_radius               *  move.b  #7,x_radius(a0)
2CE8 CC0093           (C:\Users\bhrou\gi):01437 [3]     2821            ldd   #SonAni_Roll                            *  move.b  #AniIDSonAni_Roll,anim(a0)  ; use "rolling" animation
2CEB ED44             (C:\Users\bhrou\gi):01438 [6]     2827            std   anim,u                                   
2CED ECC811           (C:\Users\bhrou\gi):01439 [6]     2833            ldd   y_pos,u                                    
2CF0 C30005           (C:\Users\bhrou\gi):01440 [4]     2837            addd  #5                                       
2CF3 EDC811           (C:\Users\bhrou\gi):01441 [6]     2843            std   y_pos,u                                 *  addq.w  #5,y_pos(a0)
2CF6 863E             (C:\Users\bhrou\gi):01442 [2]     2845            lda   #SndID_Roll                             *  move.w  #SndID_Roll,d0
2CF8 B781E0           (C:\Users\bhrou\gi):01443 [5]     2850            sta   Smps.SFXToPlay                          *  jsr (PlaySound).l   ; play rolling sound
2CFB ECC864           (C:\Users\bhrou\gi):01444 [6]     2856            ldd   inertia,u                               *  tst.w   inertia(a0)
2CFE 2606             (C:\Users\bhrou\gi):01445 [3]     2859            bne   return_1AA36                            *  bne.s   return_1AA36
2D00 CC0200           (C:\Users\bhrou\gi):01446 [3]     2862            ldd   #$200                                   *  move.w  #$200,inertia(a0)
2D03 EDC864           (C:\Users\bhrou\gi):01447 [6]     2868            std   inertia,u                                
                      (C:\Users\bhrou\gi):01448                                                                       *
2D06                  (C:\Users\bhrou\gi):01449                 return_1AA36                                          *return_1AA36:
2D06 39               (C:\Users\bhrou\gi):01450 [5]     2873            rts                                           *  rts
                      (C:\Users\bhrou\gi):01451                                                                       *; End of function Sonic_Roll
                      (C:\Users\bhrou\gi):01452                                                                       *
                      (C:\Users\bhrou\gi):01453                                                                       *
                      (C:\Users\bhrou\gi):01454                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01455                                                                       *; Subroutine allowing Sonic to jump
                      (C:\Users\bhrou\gi):01456                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01457                                                                       *
                      (C:\Users\bhrou\gi):01458                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01459                                                                       *
                      (C:\Users\bhrou\gi):01460                                                                       *; loc_1AA38:
2D07                  (C:\Users\bhrou\gi):01461                 Sonic_Jump                                            *Sonic_Jump:
2D07 B68007           (C:\Users\bhrou\gi):01462 [5]     2878            lda   Ctrl_1_Press_Logical                    *  move.b  (Ctrl_1_Press_Logical).w,d0
2D0A 840C             (C:\Users\bhrou\gi):01463 [2]     2880            anda  #button_B_mask|button_A_mask            *  andi.b  #button_B_mask|button_C_mask|button_A_mask,d0 ; is A, B or C pressed?
2D0C 275B             (C:\Users\bhrou\gi):01464 [3]     2883            beq   return_1AAE6                            *  beq.w   return_1AAE6    ; if not, return
                      (C:\Users\bhrou\gi):01465                         ;lda   #0                                      *  moveq   #0,d0
                      (C:\Users\bhrou\gi):01466                         ;ldb   angle,u                                 *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01467                         ;addb  #$80                                    *  addi.b  #$80,d0
                      (C:\Users\bhrou\gi):01468                         ;bsr   CalcRoomOverHead                        *  bsr.w   CalcRoomOverHead
                      (C:\Users\bhrou\gi):01469                         ;cmpd  #6                                      *  cmpi.w  #6,d1           ; does Sonic have enough room to jump?
                      (C:\Users\bhrou\gi):01470                         ;blt   return_1AAE6                            *  blt.w   return_1AAE6        ; if not, branch
2D0E 8E0680           (C:\Users\bhrou\gi):01471 [3]     2886            ldx   #$680                                   *  move.w  #$680,d2
                      (C:\Users\bhrou\gi):01472                         ; unimplemented                               *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):01473                         ;                                             *  beq.s   +
                      (C:\Users\bhrou\gi):01474                         ;                                              *  move.w  #$800,d2    ; set higher jump speed if super
                      (C:\Users\bhrou\gi):01475                                                                       *+
2D11 A64B             (C:\Users\bhrou\gi):01476 [5]     2891            lda   status,u                          *  btst    #6,status(a0)   ; Test if underwater
2D13 8540             (C:\Users\bhrou\gi):01477 [2]     2893            bita  #status_underwater                      
2D15 2703             (C:\Users\bhrou\gi):01478 [3]     2896            beq   >                                       *  beq.s   +       ; if not, branch
2D17 8E0380           (C:\Users\bhrou\gi):01479 [3]     2899            ldx   #$380                                   *  move.w  #$380,d2    ; set lower jump speed if under
                      (C:\Users\bhrou\gi):01480                 !                                                     *+
                      (C:\Users\bhrou\gi):01481                         ;lda   #0                                      *  moveq   #0,d0
                      (C:\Users\bhrou\gi):01482                         ;ldb   angle,u                                 *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01483                         ;subb  #$40                                    *  subi.b  #$40,d0
                      (C:\Users\bhrou\gi):01484                         ;jsr   CalcSine                                *  jsr (CalcSine).l
                      (C:\Users\bhrou\gi):01485                         ;                                              *  muls.w  d2,d1
                      (C:\Users\bhrou\gi):01486                         ;                                              *  asr.l   #8,d1
                      (C:\Users\bhrou\gi):01487                         ;                                             *  add.w   d1,x_vel(a0)    ; make Sonic jump (in X... this adds nothing on level ground)
                      (C:\Users\bhrou\gi):01488                         ;                                              *  muls.w  d2,d0
                      (C:\Users\bhrou\gi):01489                         ;                                              *  asr.l   #8,d0
2D1A ECC864           (C:\Users\bhrou\gi):01490 [6]     2905            ldd   inertia,u
2D1D EDC816           (C:\Users\bhrou\gi):01491 [6]     2911            std   x_vel,u
                      (C:\Users\bhrou\gi):01492                 
2D20 1F10             (C:\Users\bhrou\gi):01493 [6]     2917            tfr   x,d
                      (C:\Users\bhrou\gi):01494                         _negd
2D22 40               (            _negd):00001 [2]     2919            nega
2D23 50               (            _negd):00002 [2]     2921            negb
2D24 8200             (            _negd):00003 [2]     2923            sbca  #0
2D26 E3C818           (C:\Users\bhrou\gi):01495 [7]     2930            addd  y_vel,u
2D29 EDC818           (C:\Users\bhrou\gi):01496 [6]     2936            std   y_vel,u                                 *  add.w   d0,y_vel(a0)    ; make Sonic jump (in Y)
2D2C E64B             (C:\Users\bhrou\gi):01497 [5]     2941            ldb   status,u
2D2E CA02             (C:\Users\bhrou\gi):01498 [2]     2943            orb   #status_inair                           *  bset    #1,status(a0)
2D30 C4DF             (C:\Users\bhrou\gi):01499 [2]     2945            andb  #^status_pushing 
2D32 E74B             (C:\Users\bhrou\gi):01500 [5]     2950            stb   status,u                                *  bclr    #5,status(a0)
2D34 3262             (C:\Users\bhrou\gi):01501 [5]     2955            leas  2,s ; skip end of caller routine        *  addq.l  #4,sp
2D36 8601             (C:\Users\bhrou\gi):01502 [2]     2957            lda   #1
2D38 A7C87B           (C:\Users\bhrou\gi):01503 [5]     2962            sta   jumping,u                               *  move.b  #1,jumping(a0)
2D3B 6FC877           (C:\Users\bhrou\gi):01504 [7]     2969            clr   stick_to_convex,u                       *  clr.b   stick_to_convex(a0)
2D3E 8602             (C:\Users\bhrou\gi):01505 [2]     2971            lda   #SndID_Jump                             *  move.w  #SndID_Jump,d0
2D40 B781E0           (C:\Users\bhrou\gi):01506 [5]     2976            sta   Smps.SFXToPlay                          *  jsr (PlaySound).l   ; play jumping sound
2D43 CC1309           (C:\Users\bhrou\gi):01507 [3]     2979            ldd   #$1309                                  *  move.b  #$13,y_radius(a0)
2D46 EDC85E           (C:\Users\bhrou\gi):01508 [6]     2985            std   y_radius,u ; and x_radius               *  move.b  #9,x_radius(a0)
2D49 A64B             (C:\Users\bhrou\gi):01509 [5]     2990            lda   status,u
2D4B 8504             (C:\Users\bhrou\gi):01510 [2]     2992            bita  #status_jumporroll                      *  btst    #2,status(a0)
2D4D 261B             (C:\Users\bhrou\gi):01511 [3]     2995            bne   Sonic_RollJump                          *  bne.s   Sonic_RollJump
2D4F CC0E07           (C:\Users\bhrou\gi):01512 [3]     2998            ldd   #$0E07                                  *  move.b  #$E,y_radius(a0)
2D52 EDC85E           (C:\Users\bhrou\gi):01513 [6]     3004            std   y_radius,u ; and x_radius               *  move.b  #7,x_radius(a0)
2D55 CC0093           (C:\Users\bhrou\gi):01514 [3]     3007            ldd   #SonAni_Roll                            *  move.b  #AniIDSonAni_Roll,anim(a0)  ; use "jumping" animation
2D58 ED44             (C:\Users\bhrou\gi):01515 [6]     3013            std   anim,u
2D5A A64B             (C:\Users\bhrou\gi):01516 [5]     3018            lda   status,u
2D5C 8A04             (C:\Users\bhrou\gi):01517 [2]     3020            ora   #status_jumporroll
2D5E A74B             (C:\Users\bhrou\gi):01518 [5]     3025            sta   status,u                                *  bset    #2,status(a0)
2D60 ECC811           (C:\Users\bhrou\gi):01519 [6]     3031            ldd   y_pos,u 
2D63 830005           (C:\Users\bhrou\gi):01520 [4]     3035            subd  #5
2D66 EDC811           (C:\Users\bhrou\gi):01521 [6]     3041            std   y_pos,u                                 *  addq.w  #5,y_pos(a0)
                      (C:\Users\bhrou\gi):01522                                                                       *
2D69                  (C:\Users\bhrou\gi):01523                 return_1AAE6                                          *return_1AAE6:
2D69 39               (C:\Users\bhrou\gi):01524 [5]     3046            rts                                           *  rts
                      (C:\Users\bhrou\gi):01525                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01526                                                                       *; loc_1AAE8:
2D6A                  (C:\Users\bhrou\gi):01527                 Sonic_RollJump                                        *Sonic_RollJump:
2D6A 8A10             (C:\Users\bhrou\gi):01528 [2]     3048            ora   #status_jumpingafterrolling             *  bset    #4,status(a0)   ; set the rolling+jumping flag
2D6C A74B             (C:\Users\bhrou\gi):01529 [5]     3053            sta   status,u                           
2D6E 39               (C:\Users\bhrou\gi):01530 [5]     3058            rts                                           *  rts
                      (C:\Users\bhrou\gi):01531                                                                       *; End of function Sonic_Jump
                      (C:\Users\bhrou\gi):01532                                                                       *
                      (C:\Users\bhrou\gi):01533                                                                       *
                      (C:\Users\bhrou\gi):01534                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01535                                                                       *; Subroutine letting Sonic control the height of the jump
                      (C:\Users\bhrou\gi):01536                                                                       *; when the jump button is released
                      (C:\Users\bhrou\gi):01537                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01538                                                                       *
                      (C:\Users\bhrou\gi):01539                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01540                                                                       *
                      (C:\Users\bhrou\gi):01541                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01542                                                                       *; loc_1AAF0:
2D6F                  (C:\Users\bhrou\gi):01543                 Sonic_JumpHeight                                      *Sonic_JumpHeight:
2D6F 6DC87B           (C:\Users\bhrou\gi):01544 [7]     3065            tst   jumping,u                               *  tst.b   jumping(a0) ; is Sonic jumping?
2D72 271C             (C:\Users\bhrou\gi):01545 [3]     3068            beq   Sonic_UpVelCap                          *  beq.s   Sonic_UpVelCap  ; if not, branch
                      (C:\Users\bhrou\gi):01546                                                                       *
2D74 8EFC00           (C:\Users\bhrou\gi):01547 [3]     3071            ldx   #-$400                                  *  move.w  #-$400,d1
2D77 A64B             (C:\Users\bhrou\gi):01548 [5]     3076            lda   status,u                          *  btst    #6,status(a0)   ; is Sonic underwater?
2D79 8540             (C:\Users\bhrou\gi):01549 [2]     3078            bita  #status_underwater                      
2D7B 2703             (C:\Users\bhrou\gi):01550 [3]     3081            beq   >                                       *  beq.s   +       ; if not, branch
2D7D 8EFE00           (C:\Users\bhrou\gi):01551 [3]     3084            ldx   #-$200                                  *  move.w  #-$200,d1
                      (C:\Users\bhrou\gi):01552                 !                                                     *+
                      (C:\Users\bhrou\gi):01553                                                                        
2D80 ACC818           (C:\Users\bhrou\gi):01554 [7]     3091            cmpx  y_vel,u                                 *  cmp.w   y_vel(a0),d1    ; is Sonic going up faster than d1?
2D83 2F0A             (C:\Users\bhrou\gi):01555 [3]     3094            ble   @a                                      *  ble.s   +       ; if not, branch
2D85 F68006           (C:\Users\bhrou\gi):01556 [5]     3099            ldb   Ctrl_1_Held_Logical                     *  move.b  (Ctrl_1_Held_Logical).w,d0
2D88 C50C             (C:\Users\bhrou\gi):01557 [2]     3101            bitb  #button_B_mask|button_A_mask            *  andi.b  #button_B_mask|button_C_mask|button_A_mask,d0 ; is a jump button pressed?
2D8A 2603             (C:\Users\bhrou\gi):01558 [3]     3104            bne   @a                                      *  bne.s   +       ; if yes, branch
2D8C AFC818           (C:\Users\bhrou\gi):01559 [6]     3110            stx   y_vel,u                                 *  move.w  d1,y_vel(a0)    ; immediately reduce Sonic's upward speed to d1
2D8F                  (C:\Users\bhrou\gi):01560                 @a                                                    *+
                      (C:\Users\bhrou\gi):01561                                                                        
                      (C:\Users\bhrou\gi):01562                         ;ldd   y_vel,u                                *  tst.b   y_vel(a0)       ; is Sonic exactly at the height of his jump?
                      (C:\Users\bhrou\gi):01563                         ;beq   Sonic_CheckGoSuper                     *  beq.s   Sonic_CheckGoSuper  ; if yes, test for turning into Super Sonic
2D8F 39               (C:\Users\bhrou\gi):01564 [5]     3115            rts                                           *  rts
                      (C:\Users\bhrou\gi):01565                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01566                                                                       *; loc_1AB22:
2D90                  (C:\Users\bhrou\gi):01567                 Sonic_UpVelCap                                        *Sonic_UpVelCap:
2D90 6DC878           (C:\Users\bhrou\gi):01568 [7]     3122            tst   pinball_mode,u                          *  tst.b   pinball_mode(a0)    ; is Sonic charging a spindash or in a rolling-only area?
2D93 260B             (C:\Users\bhrou\gi):01569 [3]     3125            bne   return_1AB36                            *  bne.s   return_1AB36        ; if yes, return
2D95 8EF040           (C:\Users\bhrou\gi):01570 [3]     3128            ldx   #-$FC0                                   
2D98 ACC818           (C:\Users\bhrou\gi):01571 [7]     3135            cmpx  y_vel,u                                 *  cmpi.w  #-$FC0,y_vel(a0)    ; is Sonic moving up really fast?
2D9B 2C03             (C:\Users\bhrou\gi):01572 [3]     3138            bge   return_1AB36                            *  bge.s   return_1AB36        ; if not, return
2D9D AFC818           (C:\Users\bhrou\gi):01573 [6]     3144            stx   y_vel,u                                 *  move.w  #-$FC0,y_vel(a0)    ; cap upward speed
                      (C:\Users\bhrou\gi):01574                                                                       *
2DA0                  (C:\Users\bhrou\gi):01575                 return_1AB36                                          *return_1AB36:
2DA0 39               (C:\Users\bhrou\gi):01576 [5]     3149            rts                                           *  rts
                      (C:\Users\bhrou\gi):01577                                                                       *; End of subroutine Sonic_JumpHeight
                      (C:\Users\bhrou\gi):01578                                                                       *
                      (C:\Users\bhrou\gi):01579                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01580                                                                       *; Subroutine called at the peak of a jump that transforms Sonic into Super Sonic
                      (C:\Users\bhrou\gi):01581                                                                       *; if he has enough rings and emeralds
                      (C:\Users\bhrou\gi):01582                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01583                                                                       *
                      (C:\Users\bhrou\gi):01584                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01585                                                                       *
                      (C:\Users\bhrou\gi):01586                                                                       *; loc_1AB38: test_set_SS:
2DA1                  (C:\Users\bhrou\gi):01587                 Sonic_CheckGoSuper                                    *Sonic_CheckGoSuper:
                      (C:\Users\bhrou\gi):01588                                                                       *  tst.b   (Super_Sonic_flag).w    ; is Sonic already Super?
                      (C:\Users\bhrou\gi):01589                                                                       *  bne.s   return_1ABA4        ; if yes, branch
                      (C:\Users\bhrou\gi):01590                                                                       *  cmpi.b  #7,(Emerald_count).w    ; does Sonic have exactly 7 emeralds?
                      (C:\Users\bhrou\gi):01591                                                                       *  bne.s   return_1ABA4        ; if not, branch
                      (C:\Users\bhrou\gi):01592                                                                       *  cmpi.w  #50,(Ring_count).w  ; does Sonic have at least 50 rings?
                      (C:\Users\bhrou\gi):01593                                                                       *  blo.s   return_1ABA4        ; if not, branch
                      (C:\Users\bhrou\gi):01594                                                                       *    if gameRevision=2
                      (C:\Users\bhrou\gi):01595                                                                       *  ; fixes a bug where the player can get stuck if transforming at the end of a level
                      (C:\Users\bhrou\gi):01596                                                                       *  tst.b   (Update_HUD_timer).w    ; has Sonic reached the end of the act?
                      (C:\Users\bhrou\gi):01597                                                                       *  beq.s   return_1ABA4        ; if yes, branch
                      (C:\Users\bhrou\gi):01598                                                                       *    endif
                      (C:\Users\bhrou\gi):01599                                                                       *
                      (C:\Users\bhrou\gi):01600                                                                       *  move.b  #1,(Super_Sonic_palette).w
                      (C:\Users\bhrou\gi):01601                                                                       *  move.b  #$F,(Palette_timer).w
                      (C:\Users\bhrou\gi):01602                                                                       *  move.b  #1,(Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):01603                                                                       *  move.b  #$81,obj_control(a0)
                      (C:\Users\bhrou\gi):01604                                                                       *  move.b  #AniIDSupSonAni_Transform,anim(a0)          ; use transformation animation
                      (C:\Users\bhrou\gi):01605                                                                       *  move.b  #ObjID_SuperSonicStars,(SuperSonicStars+id).w ; load Obj7E (super sonic stars object) at $FFFFD040
                      (C:\Users\bhrou\gi):01606                                                                       *  move.w  #$A00,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):01607                                                                       *  move.w  #$30,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):01608                                                                       *  move.w  #$100,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):01609                                                                       *  move.w  #0,invincibility_time(a0)
                      (C:\Users\bhrou\gi):01610                                                                       *  bset    #status_sec_isInvincible,status_secondary(a0)   ; make Sonic invincible
                      (C:\Users\bhrou\gi):01611                                                                       *  move.w  #SndID_SuperTransform,d0
                      (C:\Users\bhrou\gi):01612                                                                       *  jsr (PlaySound).l   ; Play transformation sound effect.
                      (C:\Users\bhrou\gi):01613                                                                       *  move.w  #MusID_SuperSonic,d0
                      (C:\Users\bhrou\gi):01614                                                                       *  jmp (PlayMusic).l   ; load the Super Sonic song and return
                      (C:\Users\bhrou\gi):01615                                                                       *
                      (C:\Users\bhrou\gi):01616                                                                       *; ---------------------------------------------------------------------------
2DA1                  (C:\Users\bhrou\gi):01617                 return_1ABA4                                          *return_1ABA4:
                      (C:\Users\bhrou\gi):01618                         ;rts                                           *  rts
                      (C:\Users\bhrou\gi):01619                                                                       *; End of subroutine Sonic_CheckGoSuper
                      (C:\Users\bhrou\gi):01620                                                                       *
                      (C:\Users\bhrou\gi):01621                                                                       *
                      (C:\Users\bhrou\gi):01622                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01623                                                                       *; Subroutine doing the extra logic for Super Sonic
                      (C:\Users\bhrou\gi):01624                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01625                                                                       *
                      (C:\Users\bhrou\gi):01626                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01627                                                                       *
                      (C:\Users\bhrou\gi):01628                                                                       *; loc_1ABA6:
2DA1                  (C:\Users\bhrou\gi):01629                 Sonic_Super                                           *Sonic_Super:
                      (C:\Users\bhrou\gi):01630                                                                       *  tst.b   (Super_Sonic_flag).w    ; Ignore all this code if not Super Sonic
                      (C:\Users\bhrou\gi):01631                                                                       *  beq.w   return_1AC3C
                      (C:\Users\bhrou\gi):01632                                                                       *  tst.b   (Update_HUD_timer).w
                      (C:\Users\bhrou\gi):01633                                                                       *  beq.s   Sonic_RevertToNormal ; ?
                      (C:\Users\bhrou\gi):01634                                                                       *  subq.w  #1,(Super_Sonic_frame_count).w
                      (C:\Users\bhrou\gi):01635                                                                       *  bpl.w   return_1AC3C
                      (C:\Users\bhrou\gi):01636                                                                       *  move.w  #60,(Super_Sonic_frame_count).w ; Reset frame counter to 60
                      (C:\Users\bhrou\gi):01637                                                                       *  tst.w   (Ring_count).w
                      (C:\Users\bhrou\gi):01638                                                                       *  beq.s   Sonic_RevertToNormal
                      (C:\Users\bhrou\gi):01639                                                                       *  ori.b   #1,(Update_HUD_rings).w
                      (C:\Users\bhrou\gi):01640                                                                       *  cmpi.w  #1,(Ring_count).w
                      (C:\Users\bhrou\gi):01641                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):01642                                                                       *  cmpi.w  #10,(Ring_count).w
                      (C:\Users\bhrou\gi):01643                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):01644                                                                       *  cmpi.w  #100,(Ring_count).w
                      (C:\Users\bhrou\gi):01645                                                                       *  bne.s   ++
                      (C:\Users\bhrou\gi):01646                                                                       *+
                      (C:\Users\bhrou\gi):01647                                                                       *  ori.b   #$80,(Update_HUD_rings).w
                      (C:\Users\bhrou\gi):01648                                                                       *+
                      (C:\Users\bhrou\gi):01649                                                                       *  subq.w  #1,(Ring_count).w
                      (C:\Users\bhrou\gi):01650                                                                       *  bne.s   return_1AC3C
                      (C:\Users\bhrou\gi):01651                                                                       *; loc_1ABF2:
                      (C:\Users\bhrou\gi):01652                                                                       *Sonic_RevertToNormal:
                      (C:\Users\bhrou\gi):01653                                                                       *  move.b  #2,(Super_Sonic_palette).w  ; Remove rotating palette
                      (C:\Users\bhrou\gi):01654                                                                       *  move.w  #$28,(Palette_frame).w
                      (C:\Users\bhrou\gi):01655                                                                       *  move.b  #0,(Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):01656                                                                       *  move.b  #AniIDSonAni_Run,prev_anim(a0)  ; Force Sonic's animation to restart
                      (C:\Users\bhrou\gi):01657                                                                       *  move.w  #1,invincibility_time(a0)   ; Remove invincibility
                      (C:\Users\bhrou\gi):01658                                                                       *  move.w  #$600,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):01659                                                                       *  move.w  #$C,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):01660                                                                       *  move.w  #$80,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):01661                         ;lda   status,u                          *  btst    #6,status(a0)   ; Check if underwater, return if not
                      (C:\Users\bhrou\gi):01662                         ;bita  #status_underwater                       
                      (C:\Users\bhrou\gi):01663                         ;beq   return_1AC3C                            *  beq.s   +       ; if not, branch
                      (C:\Users\bhrou\gi):01664                         ;ldd   #-$200                                  *  beq.s   return_1AC3C
2DA1                  (C:\Users\bhrou\gi):01665                 @a                                                    *+
                      (C:\Users\bhrou\gi):01666                                                                        
                      (C:\Users\bhrou\gi):01667                                                                       *  move.w  #$300,(Sonic_top_speed).w
                      (C:\Users\bhrou\gi):01668                                                                       *  move.w  #6,(Sonic_acceleration).w
                      (C:\Users\bhrou\gi):01669                                                                       *  move.w  #$40,(Sonic_deceleration).w
                      (C:\Users\bhrou\gi):01670                                                                       *
2DA1                  (C:\Users\bhrou\gi):01671                 return_1AC3C                                          *return_1AC3C:
                      (C:\Users\bhrou\gi):01672                         ;rts                                           *  rts
                      (C:\Users\bhrou\gi):01673                                                                       *; End of subroutine Sonic_Super
                      (C:\Users\bhrou\gi):01674                                                                       *
                      (C:\Users\bhrou\gi):01675                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01676                                                                       *; Subroutine to check for starting to charge a spindash
                      (C:\Users\bhrou\gi):01677                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01678                                                                       *
                      (C:\Users\bhrou\gi):01679                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01680                                                                       *
                      (C:\Users\bhrou\gi):01681                                                                       *; loc_1AC3E:
2DA1                  (C:\Users\bhrou\gi):01682                 Sonic_CheckSpindash                                   *Sonic_CheckSpindash:
2DA1 6DC878           (C:\Users\bhrou\gi):01683 [7]     3156            tst   spindash_flag,u                         *  tst.b   spindash_flag(a0)
2DA4 2634             (C:\Users\bhrou\gi):01684 [3]     3159            bne   Sonic_UpdateSpindash                    *  bne.s   Sonic_UpdateSpindash
2DA6 EC44             (C:\Users\bhrou\gi):01685 [6]     3165            ldd   anim,u
2DA8 1083023F         (C:\Users\bhrou\gi):01686 [5]     3170            cmpd  #SonAni_Duck                            *  cmpi.b  #AniIDSonAni_Duck,anim(a0)
2DAC 262B             (C:\Users\bhrou\gi):01687 [3]     3173            bne   return_1AC8C                            *  bne.s   return_1AC8C
2DAE B68007           (C:\Users\bhrou\gi):01688 [5]     3178            lda   Ctrl_1_Press_Logical                    *  move.b  (Ctrl_1_Press_Logical).w,d0
2DB1 840C             (C:\Users\bhrou\gi):01689 [2]     3180            anda  #button_B_mask|button_A_mask            *  andi.b  #button_B_mask|button_C_mask|button_A_mask,d0
2DB3 2724             (C:\Users\bhrou\gi):01690 [3]     3183            beq   return_1AC8C                            *  beq.w   return_1AC8C
2DB5 CC0246           (C:\Users\bhrou\gi):01691 [3]     3186            ldd   #SonAni_Spindash                        *  move.b  #AniIDSonAni_Spindash,anim(a0)
2DB8 ED44             (C:\Users\bhrou\gi):01692 [6]     3192            std   anim,u                                  
2DBA 8682             (C:\Users\bhrou\gi):01693 [2]     3194            lda   #SndID_SpindashRev                      *  move.w  #SndID_SpindashRev,d0
2DBC B781E0           (C:\Users\bhrou\gi):01694 [5]     3199            sta   Smps.SFXToPlay                          *  jsr (PlaySound).l
2DBF 3262             (C:\Users\bhrou\gi):01695 [5]     3204            leas  2,s                                     *  addq.l  #4,sp
2DC1 8601             (C:\Users\bhrou\gi):01696 [2]     3206            lda   #1
2DC3 A7C878           (C:\Users\bhrou\gi):01697 [5]     3211            sta   spindash_flag,u                         *  move.b  #1,spindash_flag(a0)
2DC6 CC0000           (C:\Users\bhrou\gi):01698 [3]     3214            ldd   #0
2DC9 EDC879           (C:\Users\bhrou\gi):01699 [6]     3220            std   spindash_counter,u                      *  move.w  #0,spindash_counter(a0)
2DCC A6C867           (C:\Users\bhrou\gi):01700 [5]     3225            lda   air_left,u
2DCF 810C             (C:\Users\bhrou\gi):01701 [2]     3227            cmpa  #$C                                     *  cmpi.b  #$C,air_left(a0)    ; if he's drowning, branch to not make dust
2DD1 2500             (C:\Users\bhrou\gi):01702 [3]     3230            blo   >                                       *  blo.s   +
                      (C:\Users\bhrou\gi):01703                         ;                                             *  move.b  #2,(Sonic_Dust+anim).w
                      (C:\Users\bhrou\gi):01704                 !                                                     *+
2DD3 BD2CB1           (C:\Users\bhrou\gi):01705 [8]     3238            jsr   Sonic_LevelBound                        *  bsr.w   Sonic_LevelBound
2DD6 BD2FBA           (C:\Users\bhrou\gi):01706 [8]     3246            jsr   AnglePos                                *  bsr.w   AnglePos
                      (C:\Users\bhrou\gi):01707                                                                       *
2DD9                  (C:\Users\bhrou\gi):01708                 return_1AC8C                                          *return_1AC8C:
2DD9 39               (C:\Users\bhrou\gi):01709 [5]     3251            rts                                           *  rts
                      (C:\Users\bhrou\gi):01710                                                                       *; End of subroutine Sonic_CheckSpindash
                      (C:\Users\bhrou\gi):01711                                                                       *
                      (C:\Users\bhrou\gi):01712                                                                       *
                      (C:\Users\bhrou\gi):01713                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01714                                                                       *; Subrouting to update an already-charging spindash
                      (C:\Users\bhrou\gi):01715                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01716                                                                       *
                      (C:\Users\bhrou\gi):01717                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01718                                                                       *
                      (C:\Users\bhrou\gi):01719                                                                       *; loc_1AC8E:
2DDA                  (C:\Users\bhrou\gi):01720                 Sonic_UpdateSpindash                                  *Sonic_UpdateSpindash:
2DDA B68006           (C:\Users\bhrou\gi):01721 [5]     3256            lda   Ctrl_1_Held_Logical                     *  move.b  (Ctrl_1_Held_Logical).w,d0
2DDD 8420             (C:\Users\bhrou\gi):01722 [2]     3258            anda  #button_down_mask                       *  btst    #button_down,d0
2DDF 2667             (C:\Users\bhrou\gi):01723 [3]     3261            bne   Sonic_ChargingSpindash                  *  bne.w   Sonic_ChargingSpindash
                      (C:\Users\bhrou\gi):01724                                                                       *
                      (C:\Users\bhrou\gi):01725                                                                       *  ; unleash the charged spindash and start rolling quickly:
2DE1 CC0E07           (C:\Users\bhrou\gi):01726 [3]     3264            ldd   #$0E07                                  *  move.b  #$E,y_radius(a0)
2DE4 EDC85E           (C:\Users\bhrou\gi):01727 [6]     3270            std   y_radius,u                              *  move.b  #7,x_radius(a0)
2DE7 CC0093           (C:\Users\bhrou\gi):01728 [3]     3273            ldd   #SonAni_Roll    
2DEA ED44             (C:\Users\bhrou\gi):01729 [6]     3279            std   anim,u                                  *  move.b  #AniIDSonAni_Roll,anim(a0)
2DEC ECC811           (C:\Users\bhrou\gi):01730 [6]     3285            ldd   y_pos,u
2DEF C30005           (C:\Users\bhrou\gi):01731 [4]     3289            addd  #5
2DF2 EDC811           (C:\Users\bhrou\gi):01732 [6]     3295            std   y_pos,u                                 *  addq.w  #5,y_pos(a0)    ; add the difference between Sonic's rolling and standing heights
2DF5 8600             (C:\Users\bhrou\gi):01733 [2]     3297            lda   #0
2DF7 A7C878           (C:\Users\bhrou\gi):01734 [5]     3302            sta   spindash_flag,u                         *  move.b  #0,spindash_flag(a0)
                      (C:\Users\bhrou\gi):01735                                                                       *  moveq   #0,d0
2DFA E6C879           (C:\Users\bhrou\gi):01736 [5]     3307            ldb   spindash_counter,u                      *  move.b  spindash_counter(a0),d0
2DFD 58               (C:\Users\bhrou\gi):01737 [2]     3309            aslb                                          *  add.w   d0,d0
2DFE 8E2E36           (C:\Users\bhrou\gi):01738 [3]     3312            ldx   #SpindashSpeeds     
2E01 EC85             (C:\Users\bhrou\gi):01739 [6]     3318            ldd   b,x                                     *  move.w  SpindashSpeeds(pc,d0.w),inertia(a0)
2E03 EDC864           (C:\Users\bhrou\gi):01740 [6]     3324            std   inertia,u
                      (C:\Users\bhrou\gi):01741                         ;                                              *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):01742                         ;                                              *  beq.s   +
                      (C:\Users\bhrou\gi):01743                         ;                                              *  move.w  SpindashSpeedsSuper(pc,d0.w),inertia(a0)
                      (C:\Users\bhrou\gi):01744                         ;                                              *+
                      (C:\Users\bhrou\gi):01745                                                                       *  move.w  inertia(a0),d0
2E06 830800           (C:\Users\bhrou\gi):01746 [4]     3328            subd   #$800                                  *  subi.w  #$800,d0
                      (C:\Users\bhrou\gi):01747                         _asld                                         *  add.w   d0,d0
2E09 58               (            _asld):00001 [2]     3330            aslb
2E0A 49               (            _asld):00002 [2]     3332            rola
2E0B 841F             (C:\Users\bhrou\gi):01748 [2]     3334            anda   #$1F                                   *  andi.w  #$1F00,d0
2E0D C400             (C:\Users\bhrou\gi):01749 [2]     3336            andb   #$00
                      (C:\Users\bhrou\gi):01750                         _negd                                         *  neg.w   d0
2E0F 40               (            _negd):00001 [2]     3338            nega
2E10 50               (            _negd):00002 [2]     3340            negb
2E11 8200             (            _negd):00003 [2]     3342            sbca  #0
2E13 C32000           (C:\Users\bhrou\gi):01751 [4]     3346            addd  #$2000                                  *  addi.w  #$2000,d0
2E16 FD6F71           (C:\Users\bhrou\gi):01752 [6]     3352            std   Horiz_scroll_delay_val                  *  move.w  d0,(Horiz_scroll_delay_val).w
2E19 A64B             (C:\Users\bhrou\gi):01753 [5]     3357            lda   status,u                                *  btst    #0,status(a0)
2E1B 8401             (C:\Users\bhrou\gi):01754 [2]     3359            anda  #status_x_orientation
2E1D 270A             (C:\Users\bhrou\gi):01755 [3]     3362            beq   >                                       *  beq.s   +
2E1F ECC864           (C:\Users\bhrou\gi):01756 [6]     3368            ldd   inertia,u
                      (C:\Users\bhrou\gi):01757                         _negd                                         *  neg.w   inertia(a0)
2E22 40               (            _negd):00001 [2]     3370            nega
2E23 50               (            _negd):00002 [2]     3372            negb
2E24 8200             (            _negd):00003 [2]     3374            sbca  #0
2E26 EDC864           (C:\Users\bhrou\gi):01758 [6]     3380            std   inertia,u
                      (C:\Users\bhrou\gi):01759                 !                                                     *+
2E29 A64B             (C:\Users\bhrou\gi):01760 [5]     3385            lda   status,u
2E2B 8A04             (C:\Users\bhrou\gi):01761 [2]     3387            ora   #status_jumporroll
2E2D A74B             (C:\Users\bhrou\gi):01762 [5]     3392            sta   status,u                                *  bset    #2,status(a0)
                      (C:\Users\bhrou\gi):01763                         ;                                             *  move.b  #0,(Sonic_Dust+anim).w
2E2F C63A             (C:\Users\bhrou\gi):01764 [2]     3394            ldb   #SndID_SpindashRelease                  *  move.w  #SndID_SpindashRelease,d0   ; spindash zoom sound
2E31 F781E0           (C:\Users\bhrou\gi):01765 [5]     3399            stb   Smps.SFXToPlay                          *  jsr (PlaySound).l
2E34 2067             (C:\Users\bhrou\gi):01766 [3]     3402            bra   Obj01_Spindash_ResetScr                 *  bra.s   Obj01_Spindash_ResetScr
                      (C:\Users\bhrou\gi):01767                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01768                                                                       *; word_1AD0C:
2E36                  (C:\Users\bhrou\gi):01769                 SpindashSpeeds                                        *SpindashSpeeds:
2E36 0800             (C:\Users\bhrou\gi):01770                         fdb   $800                                    *  dc.w  $800  ; 0
2E38 0880             (C:\Users\bhrou\gi):01771                         fdb   $880                                    *  dc.w  $880  ; 1
2E3A 0900             (C:\Users\bhrou\gi):01772                         fdb   $900                                    *  dc.w  $900  ; 2
2E3C 0980             (C:\Users\bhrou\gi):01773                         fdb   $980                                    *  dc.w  $980  ; 3
2E3E 0A00             (C:\Users\bhrou\gi):01774                         fdb   $A00                                    *  dc.w  $A00  ; 4
2E40 0A80             (C:\Users\bhrou\gi):01775                         fdb   $A80                                    *  dc.w  $A80  ; 5
2E42 0B00             (C:\Users\bhrou\gi):01776                         fdb   $B00                                    *  dc.w  $B00  ; 6
2E44 0B80             (C:\Users\bhrou\gi):01777                         fdb   $B80                                    *  dc.w  $B80  ; 7
2E46 0C00             (C:\Users\bhrou\gi):01778                         fdb   $C00                                    *  dc.w  $C00  ; 8
                      (C:\Users\bhrou\gi):01779                                                                       *; word_1AD1E:
                      (C:\Users\bhrou\gi):01780                                                                       *SpindashSpeedsSuper:
                      (C:\Users\bhrou\gi):01781                                                                       *  dc.w  $B00  ; 0
                      (C:\Users\bhrou\gi):01782                                                                       *  dc.w  $B80  ; 1
                      (C:\Users\bhrou\gi):01783                                                                       *  dc.w  $C00  ; 2
                      (C:\Users\bhrou\gi):01784                                                                       *  dc.w  $C80  ; 3
                      (C:\Users\bhrou\gi):01785                                                                       *  dc.w  $D00  ; 4
                      (C:\Users\bhrou\gi):01786                                                                       *  dc.w  $D80  ; 5
                      (C:\Users\bhrou\gi):01787                                                                       *  dc.w  $E00  ; 6
                      (C:\Users\bhrou\gi):01788                                                                       *  dc.w  $E80  ; 7
                      (C:\Users\bhrou\gi):01789                                                                       *  dc.w  $F00  ; 8
                      (C:\Users\bhrou\gi):01790                 
                      (C:\Users\bhrou\gi):01791                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01792                                                                       *; loc_1AD30:
2E48                  (C:\Users\bhrou\gi):01793                 Sonic_ChargingSpindash                                *Sonic_ChargingSpindash:           ; If still charging the dash...
2E48 ECC879           (C:\Users\bhrou\gi):01794 [6]     3408            ldd   spindash_counter,u                      *  tst.w   spindash_counter(a0)
2E4B 2712             (C:\Users\bhrou\gi):01795 [3]     3411            beq   >                                       *  beq.s   +
                      (C:\Users\bhrou\gi):01796                                                                       *  move.w  spindash_counter(a0),d0
                      (C:\Users\bhrou\gi):01797                         _lsrd
2E4D 44               (            _lsrd):00001 [2]     3413            lsra
2E4E 56               (            _lsrd):00002 [2]     3415            rorb
                      (C:\Users\bhrou\gi):01798                         _lsrd
2E4F 44               (            _lsrd):00001 [2]     3417            lsra
2E50 56               (            _lsrd):00002 [2]     3419            rorb
                      (C:\Users\bhrou\gi):01799                         _lsrd
2E51 44               (            _lsrd):00001 [2]     3421            lsra
2E52 56               (            _lsrd):00002 [2]     3423            rorb
                      (C:\Users\bhrou\gi):01800                         _lsrd
2E53 44               (            _lsrd):00001 [2]     3425            lsra
2E54 56               (            _lsrd):00002 [2]     3427            rorb
                      (C:\Users\bhrou\gi):01801                         _lsrd                                         *  lsr.w   #5,d0
2E55 44               (            _lsrd):00001 [2]     3429            lsra
2E56 56               (            _lsrd):00002 [2]     3431            rorb
2E57 FD2E6D           (C:\Users\bhrou\gi):01802 [6]     3437            std   @dec
2E5A BE703D           (C:\Users\bhrou\gi):01803 [6]     3443            ldx   Vint_Main_runcount_w
2E5D 270A             (C:\Users\bhrou\gi):01804 [3]     3446            beq   @skip
2E5F F32E6D           (C:\Users\bhrou\gi):01805 [7]     3453    !       addd  @dec
2E62 301F             (C:\Users\bhrou\gi):01806 [5]     3458            leax  -1,x
2E64 26F9             (C:\Users\bhrou\gi):01807 [3]     3461            bne   < 
2E66 FD2E6D           (C:\Users\bhrou\gi):01808 [6]     3467            std   @dec
2E69 ECC879           (C:\Users\bhrou\gi):01809 [6]     3473    @skip   ldd   spindash_counter,u
2E6C 830000           (C:\Users\bhrou\gi):01810 [4]     3477            subd  #0                                      *  sub.w   d0,spindash_counter(a0)
     2E6D             (C:\Users\bhrou\gi):01811                 @dec    equ   *-2
2E6F 2403             (C:\Users\bhrou\gi):01812 [3]     3480            bcc   >                                       *  bcc.s   +
2E71 CC0000           (C:\Users\bhrou\gi):01813 [3]     3483            ldd   #0                                      *  move.w  #0,spindash_counter(a0)
2E74 EDC879           (C:\Users\bhrou\gi):01814 [6]     3489    !       std   spindash_counter,u                      *+
2E77 B68007           (C:\Users\bhrou\gi):01815 [5]     3494            lda   Ctrl_1_Press_Logical                    *  move.b  (Ctrl_1_Press_Logical).w,d0
2E7A 840C             (C:\Users\bhrou\gi):01816 [2]     3496            anda  #button_B_mask|button_A_mask            *  andi.b  #button_B_mask|button_C_mask|button_A_mask,d0
2E7C 271F             (C:\Users\bhrou\gi):01817 [3]     3499            beq   Obj01_Spindash_ResetScr                 *  beq.w   Obj01_Spindash_ResetScr
2E7E CC0246           (C:\Users\bhrou\gi):01818 [3]     3502            ldd   #SonAni_Spindash
2E81 ED44             (C:\Users\bhrou\gi):01819 [6]     3508            std   anim,u                                  *  move.w  #(AniIDSonAni_Spindash<<8),anim(a0)
2E83 8682             (C:\Users\bhrou\gi):01820 [2]     3510            lda   #SndID_SpindashRev                      *  move.w  #SndID_SpindashRev,d0
2E85 B781E0           (C:\Users\bhrou\gi):01821 [5]     3515            sta   Smps.SFXToPlay                          *  jsr (PlaySound).l
2E88 ECC879           (C:\Users\bhrou\gi):01822 [6]     3521            ldd   spindash_counter,u
2E8B C30200           (C:\Users\bhrou\gi):01823 [4]     3525            addd  #$200
2E8E EDC879           (C:\Users\bhrou\gi):01824 [6]     3531            std   spindash_counter,u                      *  addi.w  #$200,spindash_counter(a0)
2E91 10830800         (C:\Users\bhrou\gi):01825 [5]     3536            cmpd  #$800                                   *  cmpi.w  #$800,spindash_counter(a0)
2E95 2506             (C:\Users\bhrou\gi):01826 [3]     3539            blo   Obj01_Spindash_ResetScr                 *  blo.s   Obj01_Spindash_ResetScr
2E97 CC0800           (C:\Users\bhrou\gi):01827 [3]     3542            ldd   #$800
2E9A EDC879           (C:\Users\bhrou\gi):01828 [6]     3548            std   spindash_counter,u                      *  move.w  #$800,spindash_counter(a0)
                      (C:\Users\bhrou\gi):01829                                                                       *
                      (C:\Users\bhrou\gi):01830                 
                      (C:\Users\bhrou\gi):01831                                                                       *; loc_1AD78:
2E9D                  (C:\Users\bhrou\gi):01832                 Obj01_Spindash_ResetScr                               *Obj01_Spindash_ResetScr:
2E9D 3262             (C:\Users\bhrou\gi):01833 [5]     3553            leas  2,s                                     *  addq.l  #4,sp
2E9F FC6F6E           (C:\Users\bhrou\gi):01834 [6]     3559            ldd   Camera_Y_pos_bias
2EA2 10830070         (C:\Users\bhrou\gi):01835 [5]     3564            cmpd  #camera_Y_pos_bias_default              *  cmpi.w  #(224/2)-16,(Camera_Y_pos_bias).w
2EA6 270B             (C:\Users\bhrou\gi):01836 [3]     3567            beq   loc_1AD8C                               *  beq.s   loc_1AD8C
2EA8 2403             (C:\Users\bhrou\gi):01837 [3]     3570            bhs   >                                       *  bhs.s   +
2EAA C30004           (C:\Users\bhrou\gi):01838 [4]     3574            addd  #4                                      *  addq.w  #4,(Camera_Y_pos_bias).w
2EAD 830002           (C:\Users\bhrou\gi):01839 [4]     3578    !       subd  #2                                      *+ subq.w  #2,(Camera_Y_pos_bias).w
2EB0 FD6F6E           (C:\Users\bhrou\gi):01840 [6]     3584            std   Camera_Y_pos_bias                       *
2EB3                  (C:\Users\bhrou\gi):01841                 loc_1AD8C                                             *loc_1AD8C:
2EB3 BD2CB1           (C:\Users\bhrou\gi):01842 [8]     3592            jsr   Sonic_LevelBound                        *  bsr.w   Sonic_LevelBound
2EB6 BD2FBA           (C:\Users\bhrou\gi):01843 [8]     3600            jsr   AnglePos                                *  bsr.w   AnglePos
2EB9 39               (C:\Users\bhrou\gi):01844 [5]     3605            rts                                           *  rts
                      (C:\Users\bhrou\gi):01845                                                                       *; End of subroutine Sonic_UpdateSpindash
                      (C:\Users\bhrou\gi):01846                                                                       *
                      (C:\Users\bhrou\gi):01847                                                                       *
                      (C:\Users\bhrou\gi):01848                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01849                                                                       *; Subroutine to slow Sonic walking up a slope
                      (C:\Users\bhrou\gi):01850                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01851                                                                       *
                      (C:\Users\bhrou\gi):01852                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01853                                                                       *
                      (C:\Users\bhrou\gi):01854                                                                       *; loc_1AD96:
2EBA                  (C:\Users\bhrou\gi):01855                 Sonic_SlopeResist                                     *Sonic_SlopeResist:
                      (C:\Users\bhrou\gi):01856                                                                       *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01857                                                                       *  addi.b  #$60,d0
                      (C:\Users\bhrou\gi):01858                                                                       *  cmpi.b  #$C0,d0
                      (C:\Users\bhrou\gi):01859                                                                       *  bhs.s   return_1ADCA
                      (C:\Users\bhrou\gi):01860                                                                       *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01861                                                                       *  jsr (CalcSine).l
                      (C:\Users\bhrou\gi):01862                                                                       *  muls.w  #$20,d0
                      (C:\Users\bhrou\gi):01863                                                                       *  asr.l   #8,d0
                      (C:\Users\bhrou\gi):01864                                                                       *  tst.w   inertia(a0)
                      (C:\Users\bhrou\gi):01865                                                                       *  beq.s   return_1ADCA
                      (C:\Users\bhrou\gi):01866                                                                       *  bmi.s   loc_1ADC6
                      (C:\Users\bhrou\gi):01867                                                                       *  tst.w   d0
                      (C:\Users\bhrou\gi):01868                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):01869                                                                       *  add.w   d0,inertia(a0)  ; change Sonic's $14
                      (C:\Users\bhrou\gi):01870                                                                       *+
2EBA 39               (C:\Users\bhrou\gi):01871 [5]     3610            rts                                           *  rts
                      (C:\Users\bhrou\gi):01872                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01873                                                                       *
2EBB                  (C:\Users\bhrou\gi):01874                 loc_1ADC6                                             *loc_1ADC6:
                      (C:\Users\bhrou\gi):01875                                                                       *  add.w   d0,inertia(a0)
                      (C:\Users\bhrou\gi):01876                                                                       *
2EBB                  (C:\Users\bhrou\gi):01877                 return_1ADCA                                          *return_1ADCA:
2EBB 39               (C:\Users\bhrou\gi):01878 [5]     3615            rts                                           *  rts
                      (C:\Users\bhrou\gi):01879                                                                       *; End of subroutine Sonic_SlopeResist
                      (C:\Users\bhrou\gi):01880                                                                       *
                      (C:\Users\bhrou\gi):01881                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01882                                                                       *; Subroutine to push Sonic down a slope while he's rolling
                      (C:\Users\bhrou\gi):01883                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01884                                                                       *
                      (C:\Users\bhrou\gi):01885                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01886                                                                       *
                      (C:\Users\bhrou\gi):01887                                                                       *; loc_1ADCC:
2EBC                  (C:\Users\bhrou\gi):01888                 Sonic_RollRepel                                       *Sonic_RollRepel:
                      (C:\Users\bhrou\gi):01889                                                                       *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01890                                                                       *  addi.b  #$60,d0
                      (C:\Users\bhrou\gi):01891                                                                       *  cmpi.b  #$C0,d0
                      (C:\Users\bhrou\gi):01892                                                                       *  bhs.s   return_1AE06
                      (C:\Users\bhrou\gi):01893                                                                       *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01894                                                                       *  jsr (CalcSine).l
                      (C:\Users\bhrou\gi):01895                                                                       *  muls.w  #$50,d0
                      (C:\Users\bhrou\gi):01896                                                                       *  asr.l   #8,d0
                      (C:\Users\bhrou\gi):01897                                                                       *  tst.w   inertia(a0)
                      (C:\Users\bhrou\gi):01898                                                                       *  bmi.s   loc_1ADFC
                      (C:\Users\bhrou\gi):01899                                                                       *  tst.w   d0
                      (C:\Users\bhrou\gi):01900                                                                       *  bpl.s   loc_1ADF6
                      (C:\Users\bhrou\gi):01901                                                                       *  asr.l   #2,d0
                      (C:\Users\bhrou\gi):01902                                                                       *
2EBC                  (C:\Users\bhrou\gi):01903                 loc_1ADF6                                             *loc_1ADF6:
                      (C:\Users\bhrou\gi):01904                                                                       *  add.w   d0,inertia(a0)
2EBC 39               (C:\Users\bhrou\gi):01905 [5]     3620            rts                                           *  rts
                      (C:\Users\bhrou\gi):01906                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01907                                                                       *
2EBD                  (C:\Users\bhrou\gi):01908                 loc_1ADFC                                             *loc_1ADFC:
                      (C:\Users\bhrou\gi):01909                                                                       *  tst.w   d0
                      (C:\Users\bhrou\gi):01910                                                                       *  bmi.s   loc_1AE02
                      (C:\Users\bhrou\gi):01911                                                                       *  asr.l   #2,d0
                      (C:\Users\bhrou\gi):01912                                                                       *
2EBD                  (C:\Users\bhrou\gi):01913                 loc_1AE02                                             *loc_1AE02:
                      (C:\Users\bhrou\gi):01914                                                                       *  add.w   d0,inertia(a0)
                      (C:\Users\bhrou\gi):01915                                                                       *
2EBD                  (C:\Users\bhrou\gi):01916                 return_1AE06                                          *return_1AE06:
2EBD 39               (C:\Users\bhrou\gi):01917 [5]     3625            rts                                           *  rts
                      (C:\Users\bhrou\gi):01918                                                                       *; End of function Sonic_RollRepel
                      (C:\Users\bhrou\gi):01919                                                                       *
                      (C:\Users\bhrou\gi):01920                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01921                                                                       *; Subroutine to push Sonic down a slope
                      (C:\Users\bhrou\gi):01922                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01923                                                                       *
                      (C:\Users\bhrou\gi):01924                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01925                                                                       *
                      (C:\Users\bhrou\gi):01926                                                                       *; loc_1AE08:
2EBE                  (C:\Users\bhrou\gi):01927                 Sonic_SlopeRepel                                      *Sonic_SlopeRepel:
                      (C:\Users\bhrou\gi):01928                                                                       *  nop
                      (C:\Users\bhrou\gi):01929                                                                       *  tst.b   stick_to_convex(a0)
                      (C:\Users\bhrou\gi):01930                                                                       *  bne.s   return_1AE42
                      (C:\Users\bhrou\gi):01931                                                                       *  tst.w   move_lock(a0)
                      (C:\Users\bhrou\gi):01932                                                                       *  bne.s   loc_1AE44
                      (C:\Users\bhrou\gi):01933                                                                       *  move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):01934                                                                       *  addi.b  #$20,d0
                      (C:\Users\bhrou\gi):01935                                                                       *  andi.b  #$C0,d0
                      (C:\Users\bhrou\gi):01936                                                                       *  beq.s   return_1AE42
                      (C:\Users\bhrou\gi):01937                                                                       *  mvabs.w inertia(a0),d0
                      (C:\Users\bhrou\gi):01938                                                                       *  cmpi.w  #$280,d0
                      (C:\Users\bhrou\gi):01939                                                                       *  bhs.s   return_1AE42
                      (C:\Users\bhrou\gi):01940                                                                       *  clr.w   inertia(a0)
                      (C:\Users\bhrou\gi):01941                                                                       *  bset    #1,status(a0)
                      (C:\Users\bhrou\gi):01942                                                                       *  move.w  #$1E,move_lock(a0)
                      (C:\Users\bhrou\gi):01943                                                                       *
2EBE                  (C:\Users\bhrou\gi):01944                 return_1AE42                                          *return_1AE42:
2EBE 39               (C:\Users\bhrou\gi):01945 [5]     3630            rts                                           *  rts
                      (C:\Users\bhrou\gi):01946                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01947                                                                       *
2EBF                  (C:\Users\bhrou\gi):01948                 loc_1AE44                                             *loc_1AE44:
                      (C:\Users\bhrou\gi):01949                                                                       *  subq.w  #1,move_lock(a0)
2EBF 39               (C:\Users\bhrou\gi):01950 [5]     3635            rts                                           *  rts
                      (C:\Users\bhrou\gi):01951                                                                       *; End of function Sonic_SlopeRepel
                      (C:\Users\bhrou\gi):01952                                                                       *
                      (C:\Users\bhrou\gi):01953                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01954                                                                       *; Subroutine to return Sonic's angle to 0 as he jumps
                      (C:\Users\bhrou\gi):01955                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01956                                                                       *
                      (C:\Users\bhrou\gi):01957                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01958                                                                       *
                      (C:\Users\bhrou\gi):01959                                                                       *; loc_1AE4A:
2EC0                  (C:\Users\bhrou\gi):01960                 Sonic_JumpAngle                                       *Sonic_JumpAngle:
2EC0 A6C860           (C:\Users\bhrou\gi):01961 [5]     3640            lda   angle,u                                 *  move.b  angle(a0),d0    ; get Sonic's angle
2EC3 2713             (C:\Users\bhrou\gi):01962 [3]     3643            beq   Sonic_JumpFlip                          *  beq.s   Sonic_JumpFlip  ; if already 0, branch
2EC5 2A08             (C:\Users\bhrou\gi):01963 [3]     3646            bpl   loc_1AE5A                               *  bpl.s   loc_1AE5A   ; if higher than 0, branch
                      (C:\Users\bhrou\gi):01964                                                                       *
2EC7 8B02             (C:\Users\bhrou\gi):01965 [2]     3648            adda  #2                                      *  addq.b  #2,d0       ; increase angle
2EC9 2402             (C:\Users\bhrou\gi):01966 [3]     3651            bcc   BranchTo_Sonic_JumpAngleSet             *  bcc.s   BranchTo_Sonic_JumpAngleSet
2ECB 8600             (C:\Users\bhrou\gi):01967 [2]     3653            lda   #0                                      *  moveq   #0,d0
                      (C:\Users\bhrou\gi):01968                                                                       *
2ECD                  (C:\Users\bhrou\gi):01969                 BranchTo_Sonic_JumpAngleSet                           *BranchTo_Sonic_JumpAngleSet ; BranchTo
2ECD 2006             (C:\Users\bhrou\gi):01970 [3]     3656            bra   Sonic_JumpAngleSet                      *  bra.s   Sonic_JumpAngleSet
                      (C:\Users\bhrou\gi):01971                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):01972                                                                       *
2ECF                  (C:\Users\bhrou\gi):01973                 loc_1AE5A                                             *loc_1AE5A:
2ECF 8002             (C:\Users\bhrou\gi):01974 [2]     3658            suba  #2                                      *  subq.b  #2,d0       ; decrease angle
2ED1 2402             (C:\Users\bhrou\gi):01975 [3]     3661            bcc   Sonic_JumpAngleSet                      *  bcc.s   Sonic_JumpAngleSet
2ED3 8600             (C:\Users\bhrou\gi):01976 [2]     3663            lda   #0                                      *  moveq   #0,d0
                      (C:\Users\bhrou\gi):01977                                                                       *
                      (C:\Users\bhrou\gi):01978                                                                       *; loc_1AE60:
2ED5                  (C:\Users\bhrou\gi):01979                 Sonic_JumpAngleSet                                    *Sonic_JumpAngleSet:
2ED5 A7C860           (C:\Users\bhrou\gi):01980 [5]     3668            sta   angle,u                                 *  move.b  d0,angle(a0)
                      (C:\Users\bhrou\gi):01981                                                                       *; End of function Sonic_JumpAngle
                      (C:\Users\bhrou\gi):01982                                                                       *  ; continue straight to Sonic_JumpFlip
                      (C:\Users\bhrou\gi):01983                                                                       *
                      (C:\Users\bhrou\gi):01984                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01985                                                                       *; Updates Sonic's secondary angle if he's tumbling
                      (C:\Users\bhrou\gi):01986                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01987                                                                       *
                      (C:\Users\bhrou\gi):01988                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):01989                                                                       *
                      (C:\Users\bhrou\gi):01990                                                                       *; loc_1AE64:
2ED8                  (C:\Users\bhrou\gi):01991                 Sonic_JumpFlip                                        *Sonic_JumpFlip:
2ED8 A6C866           (C:\Users\bhrou\gi):01992 [5]     3673            lda   flip_angle,u                            *  move.b  flip_angle(a0),d0
2EDB 2735             (C:\Users\bhrou\gi):01993 [3]     3676            beq   return_1AEA8                            *  beq.s   return_1AEA8
2EDD 6DC864           (C:\Users\bhrou\gi):01994 [7]     3683            tst   inertia,u                               *  tst.w   inertia(a0)
2EE0 2B15             (C:\Users\bhrou\gi):01995 [3]     3686            bmi   Sonic_JumpLeftFlip                      *  bmi.s   Sonic_JumpLeftFlip
                      (C:\Users\bhrou\gi):01996                                                                       *; loc_1AE70:
2EE2                  (C:\Users\bhrou\gi):01997                 Sonic_JumpRightFlip                                   *Sonic_JumpRightFlip:
                      (C:\Users\bhrou\gi):01998                         ;                                             *  move.b  flip_speed(a0),d1
2EE2 ABC86C           (C:\Users\bhrou\gi):01999 [5]     3691            adda  flip_speed,u                            *  add.b   d1,d0
2EE5 240E             (C:\Users\bhrou\gi):02000 [3]     3694            bcc   BranchTo_Sonic_JumpFlipSet              *  bcc.s   BranchTo_Sonic_JumpFlipSet
2EE7 E6C86B           (C:\Users\bhrou\gi):02001 [5]     3699            ldb   flips_remaining,u                        
2EEA 5A               (C:\Users\bhrou\gi):02002 [2]     3701            decb                                          *  subq.b  #1,flips_remaining(a0)
2EEB E7C86B           (C:\Users\bhrou\gi):02003 [5]     3706            stb   flips_remaining,u                        
2EEE 2405             (C:\Users\bhrou\gi):02004 [3]     3709            bcc   BranchTo_Sonic_JumpFlipSet              *  bcc.s   BranchTo_Sonic_JumpFlipSet
2EF0 8400             (C:\Users\bhrou\gi):02005 [2]     3711            anda  #0                                      
2EF2 A7C86B           (C:\Users\bhrou\gi):02006 [5]     3716            sta   flips_remaining,u                       *  move.b  #0,flips_remaining(a0) 
                      (C:\Users\bhrou\gi):02007                         ;                                             *  moveq   #0,d0
                      (C:\Users\bhrou\gi):02008                                                                       *
2EF5                  (C:\Users\bhrou\gi):02009                 BranchTo_Sonic_JumpFlipSet                            *BranchTo_Sonic_JumpFlipSet ; BranchTo
2EF5 2018             (C:\Users\bhrou\gi):02010 [3]     3719            bra   Sonic_JumpFlipSet                       *  bra.s   Sonic_JumpFlipSet
                      (C:\Users\bhrou\gi):02011                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02012                                                                       *; loc_1AE88:
2EF7                  (C:\Users\bhrou\gi):02013                 Sonic_JumpLeftFlip                                    *Sonic_JumpLeftFlip:
2EF7 6DC868           (C:\Users\bhrou\gi):02014 [7]     3726            tst   flip_turned,u                           *  tst.b   flip_turned(a0)
2EFA 26E6             (C:\Users\bhrou\gi):02015 [3]     3729            bne   Sonic_JumpRightFlip                     *  bne.s   Sonic_JumpRightFlip
                      (C:\Users\bhrou\gi):02016                         ;                                             *  move.b  flip_speed(a0),d1
2EFC A0C86C           (C:\Users\bhrou\gi):02017 [5]     3734            suba  flip_speed,u                            *  sub.b   d1,d0
2EFF 240E             (C:\Users\bhrou\gi):02018 [3]     3737            bcc   Sonic_JumpFlipSet                       *  bcc.s   Sonic_JumpFlipSet
2F01 E6C86B           (C:\Users\bhrou\gi):02019 [5]     3742            ldb   flips_remaining,u                        
2F04 5A               (C:\Users\bhrou\gi):02020 [2]     3744            decb                                          *  subq.b  #1,flips_remaining(a0)
2F05 E7C86B           (C:\Users\bhrou\gi):02021 [5]     3749            stb   flips_remaining,u 
2F08 2405             (C:\Users\bhrou\gi):02022 [3]     3752            bcc   Sonic_JumpFlipSet                       *  bcc.s   Sonic_JumpFlipSet
2F0A 8400             (C:\Users\bhrou\gi):02023 [2]     3754            anda   #0
2F0C E7C86B           (C:\Users\bhrou\gi):02024 [5]     3759            stb   flips_remaining,u                       *  move.b  #0,flips_remaining(a0)
                      (C:\Users\bhrou\gi):02025                         ;                                             *  moveq   #0,d0
                      (C:\Users\bhrou\gi):02026                                                                       *; loc_1AEA4:
2F0F                  (C:\Users\bhrou\gi):02027                 Sonic_JumpFlipSet                                     *Sonic_JumpFlipSet:
2F0F A7C866           (C:\Users\bhrou\gi):02028 [5]     3764            sta   flip_angle,u                            *  move.b  d0,flip_angle(a0)
                      (C:\Users\bhrou\gi):02029                                                                       *
2F12                  (C:\Users\bhrou\gi):02030                 return_1AEA8                                          *return_1AEA8:
2F12 39               (C:\Users\bhrou\gi):02031 [5]     3769            rts                                           *  rts
                      (C:\Users\bhrou\gi):02032                                                                       *; End of function Sonic_JumpFlip
                      (C:\Users\bhrou\gi):02033                                                                       *
                      (C:\Users\bhrou\gi):02034                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02035                                                                       *; Subroutine for Sonic to interact with the floor and walls when he's in the air
                      (C:\Users\bhrou\gi):02036                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02037                                                                       *
                      (C:\Users\bhrou\gi):02038                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02039                                                                       *
                      (C:\Users\bhrou\gi):02040                                                                       *; loc_1AEAA: Sonic_Floor:
2F13                  (C:\Users\bhrou\gi):02041                 Sonic_DoLevelCollision                                *Sonic_DoLevelCollision:
                      (C:\Users\bhrou\gi):02042                                                                       *  move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):02043                                                                       *  cmpi.b  #$C,top_solid_bit(a0)
                      (C:\Users\bhrou\gi):02044                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):02045                                                                       *  move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):02046                                                                       *+
                      (C:\Users\bhrou\gi):02047                                                                       *  move.b  lrb_solid_bit(a0),d5
                      (C:\Users\bhrou\gi):02048                                                                       *  move.w  x_vel(a0),d1
                      (C:\Users\bhrou\gi):02049                                                                       *  move.w  y_vel(a0),d2
                      (C:\Users\bhrou\gi):02050                                                                       *  jsr (CalcAngle).l
                      (C:\Users\bhrou\gi):02051                                                                       *  subi.b  #$20,d0
                      (C:\Users\bhrou\gi):02052                                                                       *  andi.b  #$C0,d0
                      (C:\Users\bhrou\gi):02053                                                                       *  cmpi.b  #$40,d0
                      (C:\Users\bhrou\gi):02054                                                                       *  beq.w   Sonic_HitLeftWall
                      (C:\Users\bhrou\gi):02055                                                                       *  cmpi.b  #$80,d0
                      (C:\Users\bhrou\gi):02056                                                                       *  beq.w   Sonic_HitCeilingAndWalls
                      (C:\Users\bhrou\gi):02057                                                                       *  cmpi.b  #$C0,d0
                      (C:\Users\bhrou\gi):02058                                                                       *  beq.w   Sonic_HitRightWall
                      (C:\Users\bhrou\gi):02059                                                                       *  bsr.w   CheckLeftWallDist
                      (C:\Users\bhrou\gi):02060                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02061                                                                       *  bpl.s   +
                      (C:\Users\bhrou\gi):02062                                                                       *  sub.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02063                                                                       *  move.w  #0,x_vel(a0) ; stop Sonic since he hit a wall
                      (C:\Users\bhrou\gi):02064                                                                       *+
                      (C:\Users\bhrou\gi):02065                                                                       *  bsr.w   CheckRightWallDist
                      (C:\Users\bhrou\gi):02066                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02067                                                                       *  bpl.s   +
                      (C:\Users\bhrou\gi):02068                                                                       *  add.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02069                                                                       *  move.w  #0,x_vel(a0) ; stop Sonic since he hit a wall
                      (C:\Users\bhrou\gi):02070                                                                       *+
                      (C:\Users\bhrou\gi):02071                                                                       *  bsr.w   Sonic_CheckFloor
                      (C:\Users\bhrou\gi):02072                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02073                                                                       *  bpl.s   return_1AF8A
                      (C:\Users\bhrou\gi):02074                                                                       *  move.b  y_vel(a0),d2
                      (C:\Users\bhrou\gi):02075                                                                       *  addq.b  #8,d2
                      (C:\Users\bhrou\gi):02076                                                                       *  neg.b   d2
2F13 ECC811           (C:\Users\bhrou\gi):02077 [6]     3775            ldd   y_pos,u
2F16 108302C4         (C:\Users\bhrou\gi):02078 [5]     3780            cmpd  #screen_top+20+$028F+5                  *  cmp.b   d2,d1
2F1A 2C01             (C:\Users\bhrou\gi):02079 [3]     3783            bge   >                                       *  bge.s   +
                      (C:\Users\bhrou\gi):02080                                                                       *  cmp.b   d2,d0
2F1C 39               (C:\Users\bhrou\gi):02081 [5]     3788            rts                                           *  blt.s   return_1AF8A
                      (C:\Users\bhrou\gi):02082                 !                                                     *+
2F1D CC02C4           (C:\Users\bhrou\gi):02083 [3]     3791            ldd   #screen_top+20+$028F+5
2F20 EDC811           (C:\Users\bhrou\gi):02084 [6]     3797            std   y_pos,u
                      (C:\Users\bhrou\gi):02085                                                                       *  add.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02086                                                                       *  move.b  d3,angle(a0)
2F23 BD2F3C           (C:\Users\bhrou\gi):02087 [8]     3805            jsr   Sonic_ResetOnFloor                      *  bsr.w   Sonic_ResetOnFloor
                      (C:\Users\bhrou\gi):02088                                                                       *  move.b  d3,d0
                      (C:\Users\bhrou\gi):02089                                                                       *  addi.b  #$20,d0
                      (C:\Users\bhrou\gi):02090                                                                       *  andi.b  #$40,d0
                      (C:\Users\bhrou\gi):02091                                                                       *  bne.s   loc_1AF68
                      (C:\Users\bhrou\gi):02092                                                                       *  move.b  d3,d0
                      (C:\Users\bhrou\gi):02093                                                                       *  addi.b  #$10,d0
                      (C:\Users\bhrou\gi):02094                                                                       *  andi.b  #$20,d0
                      (C:\Users\bhrou\gi):02095                                                                       *  beq.s   loc_1AF5A
                      (C:\Users\bhrou\gi):02096                                                                       *  asr y_vel(a0)
                      (C:\Users\bhrou\gi):02097                         ;bra   loc_1AF7C                               *  bra.s   loc_1AF7C
                      (C:\Users\bhrou\gi):02098                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02099                                                                       *
2F26                  (C:\Users\bhrou\gi):02100                 loc_1AF5A                                             *loc_1AF5A:
2F26 CC0000           (C:\Users\bhrou\gi):02101 [3]     3808            ldd   #0
2F29 EDC818           (C:\Users\bhrou\gi):02102 [6]     3814            std   y_vel,u                                 *  move.w  #0,y_vel(a0)
2F2C ECC816           (C:\Users\bhrou\gi):02103 [6]     3820            ldd   x_vel,u
2F2F EDC864           (C:\Users\bhrou\gi):02104 [6]     3826            std   inertia,u                               *  move.w  x_vel(a0),inertia(a0)
2F32 39               (C:\Users\bhrou\gi):02105 [5]     3831            rts                                           *  rts
                      (C:\Users\bhrou\gi):02106                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02107                                                                       *
2F33                  (C:\Users\bhrou\gi):02108                 loc_1AF68                                             *loc_1AF68:
                      (C:\Users\bhrou\gi):02109                                                                       *  move.w  #0,x_vel(a0) ; stop Sonic since he hit a wall
                      (C:\Users\bhrou\gi):02110                                                                       *  cmpi.w  #$FC0,y_vel(a0)
                      (C:\Users\bhrou\gi):02111                                                                       *  ble.s   loc_1AF7C
                      (C:\Users\bhrou\gi):02112                                                                       *  move.w  #$FC0,y_vel(a0)
                      (C:\Users\bhrou\gi):02113                                                                       *
2F33                  (C:\Users\bhrou\gi):02114                 loc_1AF7C                                             *loc_1AF7C:
                      (C:\Users\bhrou\gi):02115                                                                       *  move.w  y_vel(a0),inertia(a0)
                      (C:\Users\bhrou\gi):02116                                                                       *  tst.b   d3
                      (C:\Users\bhrou\gi):02117                                                                       *  bpl.s   return_1AF8A
                      (C:\Users\bhrou\gi):02118                                                                       *  neg.w   inertia(a0)
                      (C:\Users\bhrou\gi):02119                                                                       *
2F33                  (C:\Users\bhrou\gi):02120                 return_1AF8A                                          *return_1AF8A:
2F33 39               (C:\Users\bhrou\gi):02121 [5]     3836            rts                                           *  rts
                      (C:\Users\bhrou\gi):02122                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02123                                                                       *; loc_1AF8C:
2F34                  (C:\Users\bhrou\gi):02124                 Sonic_HitLeftWall                                     *Sonic_HitLeftWall:
                      (C:\Users\bhrou\gi):02125                                                                       *  bsr.w   CheckLeftWallDist
                      (C:\Users\bhrou\gi):02126                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02127                                                                       *  bpl.s   Sonic_HitCeiling ; branch if distance is positive (not inside wall)
                      (C:\Users\bhrou\gi):02128                                                                       *  sub.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02129                                                                       *  move.w  #0,x_vel(a0) ; stop Sonic since he hit a wall
                      (C:\Users\bhrou\gi):02130                                                                       *  move.w  y_vel(a0),inertia(a0)
2F34 39               (C:\Users\bhrou\gi):02131 [5]     3841            rts                                           *  rts
                      (C:\Users\bhrou\gi):02132                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02133                                                                       *; loc_1AFA6:
2F35                  (C:\Users\bhrou\gi):02134                 Sonic_HitCeiling                                      *Sonic_HitCeiling:
                      (C:\Users\bhrou\gi):02135                                                                       *  bsr.w   Sonic_CheckCeiling
                      (C:\Users\bhrou\gi):02136                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02137                                                                       *  bpl.s   Sonic_HitFloor ; branch if distance is positive (not inside ceiling)
                      (C:\Users\bhrou\gi):02138                                                                       *  sub.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02139                                                                       *  tst.w   y_vel(a0)
                      (C:\Users\bhrou\gi):02140                                                                       *  bpl.s   return_1AFBE
                      (C:\Users\bhrou\gi):02141                                                                       *  move.w  #0,y_vel(a0) ; stop Sonic in y since he hit a ceiling
                      (C:\Users\bhrou\gi):02142                                                                       *
2F35                  (C:\Users\bhrou\gi):02143                 return_1AFBE                                          *return_1AFBE:
2F35 39               (C:\Users\bhrou\gi):02144 [5]     3846            rts                                           *  rts
                      (C:\Users\bhrou\gi):02145                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02146                                                                       *; loc_1AFC0:
2F36                  (C:\Users\bhrou\gi):02147                 Sonic_HitFloor                                        *Sonic_HitFloor:
                      (C:\Users\bhrou\gi):02148                                                                       *  tst.w   y_vel(a0)
                      (C:\Users\bhrou\gi):02149                                                                       *  bmi.s   return_1AFE6
                      (C:\Users\bhrou\gi):02150                                                                       *  bsr.w   Sonic_CheckFloor
                      (C:\Users\bhrou\gi):02151                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02152                                                                       *  bpl.s   return_1AFE6
                      (C:\Users\bhrou\gi):02153                                                                       *  add.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02154                                                                       *  move.b  d3,angle(a0)
                      (C:\Users\bhrou\gi):02155                                                                       *  bsr.w   Sonic_ResetOnFloor
                      (C:\Users\bhrou\gi):02156                                                                       *  move.w  #0,y_vel(a0)
                      (C:\Users\bhrou\gi):02157                                                                       *  move.w  x_vel(a0),inertia(a0)
                      (C:\Users\bhrou\gi):02158                                                                       *
2F36                  (C:\Users\bhrou\gi):02159                 return_1AFE6                                          *return_1AFE6:
2F36 39               (C:\Users\bhrou\gi):02160 [5]     3851            rts                                           *  rts
                      (C:\Users\bhrou\gi):02161                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02162                                                                       *; loc_1AFE8:
2F37                  (C:\Users\bhrou\gi):02163                 Sonic_HitCeilingAndWalls                              *Sonic_HitCeilingAndWalls:
                      (C:\Users\bhrou\gi):02164                                                                       *  bsr.w   CheckLeftWallDist
                      (C:\Users\bhrou\gi):02165                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02166                                                                       *  bpl.s   +
                      (C:\Users\bhrou\gi):02167                                                                       *  sub.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02168                                                                       *  move.w  #0,x_vel(a0)    ; stop Sonic since he hit a wall
                      (C:\Users\bhrou\gi):02169                                                                       *+
                      (C:\Users\bhrou\gi):02170                                                                       *  bsr.w   CheckRightWallDist
                      (C:\Users\bhrou\gi):02171                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02172                                                                       *  bpl.s   +
                      (C:\Users\bhrou\gi):02173                                                                       *  add.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02174                                                                       *  move.w  #0,x_vel(a0)    ; stop Sonic since he hit a wall
                      (C:\Users\bhrou\gi):02175                                                                       *+
                      (C:\Users\bhrou\gi):02176                                                                       *  bsr.w   Sonic_CheckCeiling
                      (C:\Users\bhrou\gi):02177                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02178                                                                       *  bpl.s   return_1B042
                      (C:\Users\bhrou\gi):02179                                                                       *  sub.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02180                                                                       *  move.b  d3,d0
                      (C:\Users\bhrou\gi):02181                                                                       *  addi.b  #$20,d0
                      (C:\Users\bhrou\gi):02182                                                                       *  andi.b  #$40,d0
                      (C:\Users\bhrou\gi):02183                                                                       *  bne.s   loc_1B02C
                      (C:\Users\bhrou\gi):02184                                                                       *  move.w  #0,y_vel(a0) ; stop Sonic in y since he hit a ceiling
2F37 39               (C:\Users\bhrou\gi):02185 [5]     3856            rts                                           *  rts
                      (C:\Users\bhrou\gi):02186                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02187                                                                       *
2F38                  (C:\Users\bhrou\gi):02188                 loc_1B02C                                             *loc_1B02C:
                      (C:\Users\bhrou\gi):02189                                                                       *  move.b  d3,angle(a0)
                      (C:\Users\bhrou\gi):02190                                                                       *  bsr.w   Sonic_ResetOnFloor
                      (C:\Users\bhrou\gi):02191                                                                       *  move.w  y_vel(a0),inertia(a0)
                      (C:\Users\bhrou\gi):02192                                                                       *  tst.b   d3
                      (C:\Users\bhrou\gi):02193                                                                       *  bpl.s   return_1B042
                      (C:\Users\bhrou\gi):02194                                                                       *  neg.w   inertia(a0)
                      (C:\Users\bhrou\gi):02195                                                                       *
2F38                  (C:\Users\bhrou\gi):02196                 return_1B042                                          *return_1B042:
2F38 39               (C:\Users\bhrou\gi):02197 [5]     3861            rts                                           *  rts
                      (C:\Users\bhrou\gi):02198                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02199                                                                       *; loc_1B044:
2F39                  (C:\Users\bhrou\gi):02200                 Sonic_HitRightWall                                    *Sonic_HitRightWall:
                      (C:\Users\bhrou\gi):02201                                                                       *  bsr.w   CheckRightWallDist
                      (C:\Users\bhrou\gi):02202                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02203                                                                       *  bpl.s   Sonic_HitCeiling2
                      (C:\Users\bhrou\gi):02204                                                                       *  add.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02205                                                                       *  move.w  #0,x_vel(a0) ; stop Sonic since he hit a wall
                      (C:\Users\bhrou\gi):02206                                                                       *  move.w  y_vel(a0),inertia(a0)
2F39 39               (C:\Users\bhrou\gi):02207 [5]     3866            rts                                           *  rts
                      (C:\Users\bhrou\gi):02208                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02209                                                                       *; identical to Sonic_HitCeiling...
                      (C:\Users\bhrou\gi):02210                                                                       *; loc_1B05E:
2F3A                  (C:\Users\bhrou\gi):02211                 Sonic_HitCeiling2                                     *Sonic_HitCeiling2:
                      (C:\Users\bhrou\gi):02212                                                                       *  bsr.w   Sonic_CheckCeiling
                      (C:\Users\bhrou\gi):02213                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02214                                                                       *  bpl.s   Sonic_HitFloor2
                      (C:\Users\bhrou\gi):02215                                                                       *  sub.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02216                                                                       *  tst.w   y_vel(a0)
                      (C:\Users\bhrou\gi):02217                                                                       *  bpl.s   return_1B076
                      (C:\Users\bhrou\gi):02218                                                                       *  move.w  #0,y_vel(a0) ; stop Sonic in y since he hit a ceiling
                      (C:\Users\bhrou\gi):02219                                                                       *
2F3A                  (C:\Users\bhrou\gi):02220                 return_1B076                                          *return_1B076:
2F3A 39               (C:\Users\bhrou\gi):02221 [5]     3871            rts                                           *  rts
                      (C:\Users\bhrou\gi):02222                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02223                                                                       *; identical to Sonic_HitFloor...
                      (C:\Users\bhrou\gi):02224                                                                       *; loc_1B078:
2F3B                  (C:\Users\bhrou\gi):02225                 Sonic_HitFloor2                                       *Sonic_HitFloor2:
                      (C:\Users\bhrou\gi):02226                                                                       *  tst.w   y_vel(a0)
                      (C:\Users\bhrou\gi):02227                                                                       *  bmi.s   return_1B09E
                      (C:\Users\bhrou\gi):02228                                                                       *  bsr.w   Sonic_CheckFloor
                      (C:\Users\bhrou\gi):02229                                                                       *  tst.w   d1
                      (C:\Users\bhrou\gi):02230                                                                       *  bpl.s   return_1B09E
                      (C:\Users\bhrou\gi):02231                                                                       *  add.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02232                                                                       *  move.b  d3,angle(a0)
                      (C:\Users\bhrou\gi):02233                                                                       *  bsr.w   Sonic_ResetOnFloor
                      (C:\Users\bhrou\gi):02234                                                                       *  move.w  #0,y_vel(a0)
                      (C:\Users\bhrou\gi):02235                                                                       *  move.w  x_vel(a0),inertia(a0)
                      (C:\Users\bhrou\gi):02236                                                                       *
2F3B                  (C:\Users\bhrou\gi):02237                 return_1B09E                                          *return_1B09E:
2F3B 39               (C:\Users\bhrou\gi):02238 [5]     3876            rts                                           *  rts
                      (C:\Users\bhrou\gi):02239                                                                       *; End of function Sonic_DoLevelCollision
                      (C:\Users\bhrou\gi):02240                                                                       *
                      (C:\Users\bhrou\gi):02241                                                                       *
                      (C:\Users\bhrou\gi):02242                                                                       *
                      (C:\Users\bhrou\gi):02243                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02244                                                                       *; Subroutine to reset Sonic's mode when he lands on the floor
                      (C:\Users\bhrou\gi):02245                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02246                                                                       *
                      (C:\Users\bhrou\gi):02247                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02248                                                                       *
                      (C:\Users\bhrou\gi):02249                                                                       *; loc_1B0A0:
2F3C                  (C:\Users\bhrou\gi):02250                 Sonic_ResetOnFloor                                    *Sonic_ResetOnFloor:
2F3C 6DC878           (C:\Users\bhrou\gi):02251 [7]     3883            tst   pinball_mode,u                          *  tst.b   pinball_mode(a0)
2F3F 2625             (C:\Users\bhrou\gi):02252 [3]     3886            bne   Sonic_ResetOnFloor_Part3                *  bne.s   Sonic_ResetOnFloor_Part3
2F41 CC0001           (C:\Users\bhrou\gi):02253 [3]     3889            ldd   #SonAni_Walk
2F44 ED44             (C:\Users\bhrou\gi):02254 [6]     3895            std   anim,u                                  *  move.b  #AniIDSonAni_Walk,anim(a0)
                      (C:\Users\bhrou\gi):02255                                                                       *; loc_1B0AC:
2F46                  (C:\Users\bhrou\gi):02256                 Sonic_ResetOnFloor_Part2                              *Sonic_ResetOnFloor_Part2:
                      (C:\Users\bhrou\gi):02257                                                                       *  ; some routines outside of Tails' code can call Sonic_ResetOnFloor_Part2
                      (C:\Users\bhrou\gi):02258                                                                       *  ; when they mean to call Tails_ResetOnFloor_Part2, so fix that here
                      (C:\Users\bhrou\gi):02259                                                                       *  _cmpi.b #ObjID_Sonic,id(a0) ; is this object ID Sonic (obj01)?
                      (C:\Users\bhrou\gi):02260                                                                       *  bne.w   Tails_ResetOnFloor_Part2    ; if not, branch to the Tails version of this code
                      (C:\Users\bhrou\gi):02261                                                                       *
2F46 A64B             (C:\Users\bhrou\gi):02262 [5]     3900            lda   status,u
2F48 8404             (C:\Users\bhrou\gi):02263 [2]     3902            anda  #status_jumporroll                      *  btst    #2,status(a0)
2F4A 271A             (C:\Users\bhrou\gi):02264 [3]     3905            beq   Sonic_ResetOnFloor_Part3                *  beq.s   Sonic_ResetOnFloor_Part3
2F4C A64B             (C:\Users\bhrou\gi):02265 [5]     3910            lda   status,u
2F4E 84FB             (C:\Users\bhrou\gi):02266 [2]     3912            anda  #^status_jumporroll
2F50 A74B             (C:\Users\bhrou\gi):02267 [5]     3917            sta   status,u                                *  bclr    #2,status(a0)
2F52 CC1309           (C:\Users\bhrou\gi):02268 [3]     3920            ldd   #$1309                                  *  move.b  #$13,y_radius(a0) ; this increases Sonic's collision height to standing
2F55 EDC85E           (C:\Users\bhrou\gi):02269 [6]     3926            std   y_radius,u ; and x_radius               *  move.b  #9,x_radius(a0)
2F58 CC0001           (C:\Users\bhrou\gi):02270 [3]     3929            ldd   #SonAni_Walk
2F5B ED44             (C:\Users\bhrou\gi):02271 [6]     3935            std   anim,u                                  *  move.b  #AniIDSonAni_Walk,anim(a0)  ; use running/walking/standing animation
2F5D ECC811           (C:\Users\bhrou\gi):02272 [6]     3941            ldd   y_pos,u
2F60 830005           (C:\Users\bhrou\gi):02273 [4]     3945            subd  #5
2F63 EDC811           (C:\Users\bhrou\gi):02274 [6]     3951            std   y_pos,u                                 *  subq.w  #5,y_pos(a0)    ; move Sonic up 5 pixels so the increased height doesn't push him into the ground
                      (C:\Users\bhrou\gi):02275                                                                       *; loc_1B0DA:
2F66                  (C:\Users\bhrou\gi):02276                 Sonic_ResetOnFloor_Part3                              *Sonic_ResetOnFloor_Part3:
2F66 E64B             (C:\Users\bhrou\gi):02277 [5]     3956            ldb   status,u
2F68 C4CD             (C:\Users\bhrou\gi):02278 [2]     3958            andb  #^(status_inair|status_jumpingafterrolling|status_pushing) *  bclr    #1,status(a0)
2F6A E74B             (C:\Users\bhrou\gi):02279 [5]     3963            stb   status,u                                *  bclr    #5,status(a0)
                      (C:\Users\bhrou\gi):02280                                                                       *  bclr    #4,status(a0)
2F6C CC0000           (C:\Users\bhrou\gi):02281 [3]     3966            ldd   #0
2F6F A7C87B           (C:\Users\bhrou\gi):02282 [5]     3971            sta   jumping,u                               *  move.b  #0,jumping(a0)
2F72 FD30FE           (C:\Users\bhrou\gi):02283 [6]     3977            std   Chain_Bonus_counter                     *  move.w  #0,(Chain_Bonus_counter).w
2F75 A7C866           (C:\Users\bhrou\gi):02284 [5]     3982            sta   flip_angle,u                            *  move.b  #0,flip_angle(a0)
2F78 A7C868           (C:\Users\bhrou\gi):02285 [5]     3987            sta   flip_turned,u                           *  move.b  #0,flip_turned(a0)
2F7B A7C86B           (C:\Users\bhrou\gi):02286 [5]     3992            sta   flips_remaining,u                       *  move.b  #0,flips_remaining(a0)
2F7E FD30FF           (C:\Users\bhrou\gi):02287 [6]     3998            std   Sonic_Look_delay_counter                *  move.w  #0,(Sonic_Look_delay_counter).w
                      (C:\Users\bhrou\gi):02288                         ;ldd   anim,u       
                      (C:\Users\bhrou\gi):02289                         ;cmpd  #SonAni_Hang2                          *  cmpi.b  #AniIDSonAni_Hang2,anim(a0)
                      (C:\Users\bhrou\gi):02290                         ;bne   return_1B11E                           *  bne.s   return_1B11E
                      (C:\Users\bhrou\gi):02291                         ;ldd   #SonAni_Walk
                      (C:\Users\bhrou\gi):02292                         ;std   anim,u                                 *  move.b  #AniIDSonAni_Walk,anim(a0)
                      (C:\Users\bhrou\gi):02293                                                                       *
2F81                  (C:\Users\bhrou\gi):02294                 return_1B11E                                          *return_1B11E:
2F81 39               (C:\Users\bhrou\gi):02295 [5]     4003            rts                                           *  rts
                      (C:\Users\bhrou\gi):02296                                                                       *
                      (C:\Users\bhrou\gi):02297                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02298                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02299                                                                       *; Sonic when he gets hurt
                      (C:\Users\bhrou\gi):02300                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02301                                                                       *; loc_1B120: Obj_01_Sub_4:
2F82                  (C:\Users\bhrou\gi):02302                 Obj01_Hurt                                            *  Obj01_Hurt:
                      (C:\Users\bhrou\gi):02303                                                                       *  tst.w   (Debug_mode_flag).w
                      (C:\Users\bhrou\gi):02304                                                                       *  beq.s   Obj01_Hurt_Normal
                      (C:\Users\bhrou\gi):02305                                                                       *  btst    #button_B,(Ctrl_1_Press).w
                      (C:\Users\bhrou\gi):02306                                                                       *  beq.s   Obj01_Hurt_Normal
                      (C:\Users\bhrou\gi):02307                                                                       *  move.w  #1,(Debug_placement_mode).w
                      (C:\Users\bhrou\gi):02308                                                                       *  clr.b   (Control_Locked).w
2F82 39               (C:\Users\bhrou\gi):02309 [5]     4008            rts                                           *  rts
                      (C:\Users\bhrou\gi):02310                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02311                                                                       *; loc_1B13A:
2F83                  (C:\Users\bhrou\gi):02312                 Obj01_Hurt_Normal                                     *Obj01_Hurt_Normal:
                      (C:\Users\bhrou\gi):02313                                                                       *  tst.b   routine_secondary(a0)
                      (C:\Users\bhrou\gi):02314                                                                       *  bmi.w   Sonic_HurtInstantRecover
                      (C:\Users\bhrou\gi):02315                                                                       *  jsr (ObjectMove).l
                      (C:\Users\bhrou\gi):02316                                                                       *  addi.w  #$30,y_vel(a0)
2F83 A64B             (C:\Users\bhrou\gi):02317 [5]     4013            lda   status,u                                *  btst    #6,status(a0)
2F85 8540             (C:\Users\bhrou\gi):02318 [2]     4015            bita  #status_underwater                       
2F87 2709             (C:\Users\bhrou\gi):02319 [3]     4018            beq   @a                                      *  beq.s   +
2F89 ECC818           (C:\Users\bhrou\gi):02320 [6]     4024            ldd   y_vel,u                                 *  subi.w  #$20,y_vel(a0)
2F8C 830020           (C:\Users\bhrou\gi):02321 [4]     4028            subd  #$20                                     
2F8F EDC818           (C:\Users\bhrou\gi):02322 [6]     4034            std   y_vel,u                                  
2F92                  (C:\Users\bhrou\gi):02323                 @a                                                    *+
                      (C:\Users\bhrou\gi):02324                                                                        
                      (C:\Users\bhrou\gi):02325                                                                       *  cmpi.w  #-$100,(Camera_Min_Y_pos).w
                      (C:\Users\bhrou\gi):02326                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):02327                                                                       *  andi.w  #$7FF,y_pos(a0)
                      (C:\Users\bhrou\gi):02328                                                                       *+
                      (C:\Users\bhrou\gi):02329                                                                       *  bsr.w   Sonic_HurtStop
2F92 BD2CB1           (C:\Users\bhrou\gi):02330 [8]     4042            jsr   Sonic_LevelBound                        *  bsr.w   Sonic_LevelBound
                      (C:\Users\bhrou\gi):02331                         ;jsr   Sonic_RecordPos                        *  bsr.w   Sonic_RecordPos
2F95 BD2FC3           (C:\Users\bhrou\gi):02332 [8]     4050            jsr   Sonic_Animate                           *  bsr.w   Sonic_Animate
                      (C:\Users\bhrou\gi):02333                                                                       *  bsr.w   LoadSonicDynPLC
2F98 7E71CB           (C:\Users\bhrou\gi):02334 [4]     4054            jmp   DisplaySprite                           *  jmp (DisplaySprite).l
                      (C:\Users\bhrou\gi):02335                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02336                                                                       *; loc_1B184:
2F9B                  (C:\Users\bhrou\gi):02337                 Sonic_HurtStop                                        *Sonic_HurtStop:
                      (C:\Users\bhrou\gi):02338                                                                       *  move.w  (Camera_Max_Y_pos_now).w,d0
                      (C:\Users\bhrou\gi):02339                                                                       *  addi.w  #$E0,d0
                      (C:\Users\bhrou\gi):02340                                                                       *  cmp.w   y_pos(a0),d0
                      (C:\Users\bhrou\gi):02341                                                                       *  blt.w   JmpTo_KillCharacter
                      (C:\Users\bhrou\gi):02342                                                                       *  bsr.w   Sonic_DoLevelCollision
                      (C:\Users\bhrou\gi):02343                                                                       *  btst    #1,status(a0)
                      (C:\Users\bhrou\gi):02344                                                                       *  bne.s   return_1B1C8
                      (C:\Users\bhrou\gi):02345                                                                       *  moveq   #0,d0
                      (C:\Users\bhrou\gi):02346                                                                       *  move.w  d0,y_vel(a0)
                      (C:\Users\bhrou\gi):02347                                                                       *  move.w  d0,x_vel(a0)
                      (C:\Users\bhrou\gi):02348                                                                       *  move.w  d0,inertia(a0)
                      (C:\Users\bhrou\gi):02349                                                                       *  move.b  d0,obj_control(a0)
                      (C:\Users\bhrou\gi):02350                                                                       *  move.b  #AniIDSonAni_Walk,anim(a0)
                      (C:\Users\bhrou\gi):02351                                                                       *  subq.b  #2,routine(a0)  ; => Obj01_Control
                      (C:\Users\bhrou\gi):02352                                                                       *  move.w  #$78,invulnerable_time(a0)
                      (C:\Users\bhrou\gi):02353                                                                       *  move.b  #0,spindash_flag(a0)
                      (C:\Users\bhrou\gi):02354                                                                       *
2F9B                  (C:\Users\bhrou\gi):02355                 return_1B1C8                                          *return_1B1C8:
2F9B 39               (C:\Users\bhrou\gi):02356 [5]     4059            rts                                           *  rts
                      (C:\Users\bhrou\gi):02357                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02358                                                                       *; makes Sonic recover control after being hurt before landing
                      (C:\Users\bhrou\gi):02359                                                                       *; seems to be unused
                      (C:\Users\bhrou\gi):02360                                                                       *; loc_1B1CA:
2F9C                  (C:\Users\bhrou\gi):02361                 Sonic_HurtInstantRecover                              *Sonic_HurtInstantRecover:
                      (C:\Users\bhrou\gi):02362                                                                       *  subq.b  #2,routine(a0)  ; => Obj01_Control
                      (C:\Users\bhrou\gi):02363                                                                       *  move.b  #0,routine_secondary(a0)
                      (C:\Users\bhrou\gi):02364                         ;jsr   Sonic_RecordPos                        *  bsr.w   Sonic_RecordPos
2F9C BD2FC3           (C:\Users\bhrou\gi):02365 [8]     4067            jsr   Sonic_Animate                           *  bsr.w   Sonic_Animate
                      (C:\Users\bhrou\gi):02366                                                                       *  bsr.w   LoadSonicDynPLC
2F9F 7E71CB           (C:\Users\bhrou\gi):02367 [4]     4071            jmp   DisplaySprite                           *  jmp (DisplaySprite).l
                      (C:\Users\bhrou\gi):02368                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02369                                                                       *
                      (C:\Users\bhrou\gi):02370                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02371                                                                       *; Sonic when he dies
                      (C:\Users\bhrou\gi):02372                                                                       *; ...poor Sonic
                      (C:\Users\bhrou\gi):02373                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02374                                                                       *
                      (C:\Users\bhrou\gi):02375                                                                       *; loc_1B1E6: Obj_01_Sub_6:
2FA2                  (C:\Users\bhrou\gi):02376                 Obj01_Dead                                            *  Obj01_Dead:
                      (C:\Users\bhrou\gi):02377                                                                       *  tst.w   (Debug_mode_flag).w
                      (C:\Users\bhrou\gi):02378                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):02379                                                                       *  btst    #button_B,(Ctrl_1_Press).w
                      (C:\Users\bhrou\gi):02380                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):02381                                                                       *  move.w  #1,(Debug_placement_mode).w
                      (C:\Users\bhrou\gi):02382                                                                       *  clr.b   (Control_Locked).w
2FA2 39               (C:\Users\bhrou\gi):02383 [5]     4076            rts                                           *  rts
                      (C:\Users\bhrou\gi):02384                                                                       *+
2FA3 BD2FAF           (C:\Users\bhrou\gi):02385 [8]     4084            jsr   CheckGameOver                           *  bsr.w   CheckGameOver
2FA6 BD2809           (C:\Users\bhrou\gi):02386 [8]     4092            jsr   ObjectMoveAndFall                       *  jsr (ObjectMoveAndFall).l
                      (C:\Users\bhrou\gi):02387                         ;jsr   Sonic_RecordPos                        *  bsr.w   Sonic_RecordPos
2FA9 BD2FC3           (C:\Users\bhrou\gi):02388 [8]     4100            jsr   Sonic_Animate                           *  bsr.w   Sonic_Animate
                      (C:\Users\bhrou\gi):02389                                                                       *  bsr.w   LoadSonicDynPLC
2FAC 7E71CB           (C:\Users\bhrou\gi):02390 [4]     4104            jmp   DisplaySprite                           *  jmp (DisplaySprite).l
                      (C:\Users\bhrou\gi):02391                                                                       *
                      (C:\Users\bhrou\gi):02392                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02393                                                                       *
                      (C:\Users\bhrou\gi):02394                                                                       *; loc_1B21C:
2FAF                  (C:\Users\bhrou\gi):02395                 CheckGameOver                                         *CheckGameOver:
                      (C:\Users\bhrou\gi):02396                                                                       *  move.b  #1,(Scroll_lock).w
                      (C:\Users\bhrou\gi):02397                                                                       *  move.b  #0,spindash_flag(a0)
                      (C:\Users\bhrou\gi):02398                                                                       *  move.w  (Camera_Max_Y_pos_now).w,d0
                      (C:\Users\bhrou\gi):02399                                                                       *  addi.w  #$100,d0
                      (C:\Users\bhrou\gi):02400                                                                       *  cmp.w   y_pos(a0),d0
                      (C:\Users\bhrou\gi):02401                                                                       *  bge.w   return_1B31A
                      (C:\Users\bhrou\gi):02402                                                                       *  move.b  #8,routine(a0)  ; => Obj01_Gone
                      (C:\Users\bhrou\gi):02403                                                                       *  move.w  #60,restart_countdown(a0)
                      (C:\Users\bhrou\gi):02404                                                                       *  addq.b  #1,(Update_HUD_lives).w ; update lives counter
                      (C:\Users\bhrou\gi):02405                                                                       *  subq.b  #1,(Life_count).w   ; subtract 1 from number of lives
                      (C:\Users\bhrou\gi):02406                                                                       *  bne.s   Obj01_ResetLevel    ; if it's not a game over, branch
                      (C:\Users\bhrou\gi):02407                                                                       *  move.w  #0,restart_countdown(a0)
                      (C:\Users\bhrou\gi):02408                                                                       *  move.b  #ObjID_GameOver,(GameOver_GameText+id).w ; load Obj39 (game over text)
                      (C:\Users\bhrou\gi):02409                                                                       *  move.b  #ObjID_GameOver,(GameOver_OverText+id).w ; load Obj39 (game over text)
                      (C:\Users\bhrou\gi):02410                                                                       *  move.b  #1,(GameOver_OverText+mapping_frame).w
                      (C:\Users\bhrou\gi):02411                                                                       *  move.w  a0,(GameOver_GameText+parent).w
                      (C:\Users\bhrou\gi):02412                                                                       *  clr.b   (Time_Over_flag).w
                      (C:\Users\bhrou\gi):02413                                                                       *; loc_1B26E:
2FAF                  (C:\Users\bhrou\gi):02414                 Obj01_Finished                                        *Obj01_Finished:
                      (C:\Users\bhrou\gi):02415                                                                       *  clr.b   (Update_HUD_timer).w
                      (C:\Users\bhrou\gi):02416                                                                       *  clr.b   (Update_HUD_timer_2P).w
                      (C:\Users\bhrou\gi):02417                                                                       *  move.b  #8,routine(a0)  ; => Obj01_Gone
                      (C:\Users\bhrou\gi):02418                                                                       *  move.w  #MusID_GameOver,d0
                      (C:\Users\bhrou\gi):02419                                                                       *  jsr (PlayMusic).l
                      (C:\Users\bhrou\gi):02420                                                                       *  moveq   #PLCID_GameOver,d0
2FAF 39               (C:\Users\bhrou\gi):02421 [5]     4109            rts                                           *  jmp (LoadPLC).l
                      (C:\Users\bhrou\gi):02422                                                                       *; End of function CheckGameOver
                      (C:\Users\bhrou\gi):02423                                                                       *
                      (C:\Users\bhrou\gi):02424                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02425                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02426                                                                       *; Sonic when the level is restarted
                      (C:\Users\bhrou\gi):02427                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02428                                                                       *; loc_1B28E:
2FB0                  (C:\Users\bhrou\gi):02429                 Obj01_ResetLevel                                      *Obj01_ResetLevel:
                      (C:\Users\bhrou\gi):02430                                                                       *  tst.b   (Time_Over_flag).w
                      (C:\Users\bhrou\gi):02431                                                                       *  beq.s   Obj01_ResetLevel_Part2
                      (C:\Users\bhrou\gi):02432                                                                       *  move.w  #0,restart_countdown(a0)
                      (C:\Users\bhrou\gi):02433                                                                       *  move.b  #ObjID_TimeOver,(TimeOver_TimeText+id).w ; load Obj39
                      (C:\Users\bhrou\gi):02434                                                                       *  move.b  #ObjID_TimeOver,(TimeOver_OverText+id).w ; load Obj39
                      (C:\Users\bhrou\gi):02435                                                                       *  move.b  #2,(TimeOver_TimeText+mapping_frame).w
                      (C:\Users\bhrou\gi):02436                                                                       *  move.b  #3,(TimeOver_OverText+mapping_frame).w
                      (C:\Users\bhrou\gi):02437                                                                       *  move.w  a0,(TimeOver_TimeText+parent).w
2FB0 20FD             (C:\Users\bhrou\gi):02438 [3]     4112            bra   Obj01_Finished                          *  bra.s   Obj01_Finished
                      (C:\Users\bhrou\gi):02439                                                                       *; ---------------------------------------------------------------------------
2FB2                  (C:\Users\bhrou\gi):02440                 Obj01_ResetLevel_Part2                                *Obj01_ResetLevel_Part2:
                      (C:\Users\bhrou\gi):02441                                                                       *  tst.w   (Two_player_mode).w
                      (C:\Users\bhrou\gi):02442                                                                       *  beq.s   return_1B31A
                      (C:\Users\bhrou\gi):02443                                                                       *  move.b  #0,(Scroll_lock).w
                      (C:\Users\bhrou\gi):02444                                                                       *  move.b  #$A,routine(a0) ; => Obj01_Respawning
                      (C:\Users\bhrou\gi):02445                                                                       *  move.w  (Saved_x_pos).w,x_pos(a0)
                      (C:\Users\bhrou\gi):02446                                                                       *  move.w  (Saved_y_pos).w,y_pos(a0)
                      (C:\Users\bhrou\gi):02447                                                                       *  move.w  (Saved_art_tile).w,art_tile(a0)
                      (C:\Users\bhrou\gi):02448                                                                       *  move.w  (Saved_Solid_bits).w,top_solid_bit(a0)
                      (C:\Users\bhrou\gi):02449                                                                       *  clr.w   (Ring_count).w
                      (C:\Users\bhrou\gi):02450                                                                       *  clr.b   (Extra_life_flags).w
                      (C:\Users\bhrou\gi):02451                                                                       *  move.b  #0,obj_control(a0)
                      (C:\Users\bhrou\gi):02452                                                                       *  move.b  #5,anim(a0)
                      (C:\Users\bhrou\gi):02453                                                                       *  move.w  #0,x_vel(a0)
                      (C:\Users\bhrou\gi):02454                                                                       *  move.w  #0,y_vel(a0)
                      (C:\Users\bhrou\gi):02455                                                                       *  move.w  #0,inertia(a0)
                      (C:\Users\bhrou\gi):02456                                                                       *  move.b  #2,status(a0)
                      (C:\Users\bhrou\gi):02457                                                                       *  move.w  #0,move_lock(a0)
                      (C:\Users\bhrou\gi):02458                                                                       *  move.w  #0,restart_countdown(a0)
                      (C:\Users\bhrou\gi):02459                                                                       *
2FB2                  (C:\Users\bhrou\gi):02460                 return_1B31A                                          *return_1B31A:
2FB2 39               (C:\Users\bhrou\gi):02461 [5]     4117            rts                                           *  rts
                      (C:\Users\bhrou\gi):02462                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02463                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02464                                                                       *; Sonic when he's offscreen and waiting for the level to restart
                      (C:\Users\bhrou\gi):02465                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02466                                                                       *; loc_1B31C: Obj_01_Sub_8:
2FB3                  (C:\Users\bhrou\gi):02467                 Obj01_Gone                                            *  Obj01_Gone:
                      (C:\Users\bhrou\gi):02468                                                                       *  tst.w   restart_countdown(a0)
                      (C:\Users\bhrou\gi):02469                                                                       *  beq.s   +
                      (C:\Users\bhrou\gi):02470                                                                       *  subq.w  #1,restart_countdown(a0)
                      (C:\Users\bhrou\gi):02471                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):02472                                                                       *  move.w  #1,(Level_Inactive_flag).w
                      (C:\Users\bhrou\gi):02473                                                                       *+
2FB3 39               (C:\Users\bhrou\gi):02474 [5]     4122            rts                                           *  rts
                      (C:\Users\bhrou\gi):02475                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02476                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02477                                                                       *; Sonic when he's waiting for the camera to scroll back to where he respawned
                      (C:\Users\bhrou\gi):02478                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02479                                                                       *; loc_1B330: Obj_01_Sub_A:
2FB4                  (C:\Users\bhrou\gi):02480                 Obj01_Respawning                                      *  Obj01_Respawning:
                      (C:\Users\bhrou\gi):02481                                                                       *  tst.w   (Camera_X_pos_diff).w
                      (C:\Users\bhrou\gi):02482                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):02483                                                                       *  tst.w   (Camera_Y_pos_diff).w
                      (C:\Users\bhrou\gi):02484                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):02485                                                                       *  move.b  #2,routine(a0)  ; => Obj01_Control
                      (C:\Users\bhrou\gi):02486                                                                       *+
2FB4 BD2FC3           (C:\Users\bhrou\gi):02487 [8]     4130            jsr   Sonic_Animate                           *  bsr.w   Sonic_Animate
                      (C:\Users\bhrou\gi):02488                                                                       *  bsr.w   LoadSonicDynPLC
2FB7 7E71CB           (C:\Users\bhrou\gi):02489 [4]     4134            jmp   DisplaySprite                           *  jmp (DisplaySprite).l
                      (C:\Users\bhrou\gi):02490                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02491                                                                       *
                      (C:\Users\bhrou\gi):02492                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02493                                                                       *; Sonic pattern loading subroutine
                      (C:\Users\bhrou\gi):02494                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02495                                                                       *
                      (C:\Users\bhrou\gi):02496                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02497                                                                       *
                      (C:\Users\bhrou\gi):02498                                                                       *; loc_1B848:
                      (C:\Users\bhrou\gi):02499                                                                       *LoadSonicDynPLC:
                      (C:\Users\bhrou\gi):02500                                                                       *
                      (C:\Users\bhrou\gi):02501                                                                       *  moveq   #0,d0
                      (C:\Users\bhrou\gi):02502                                                                       *  move.b  mapping_frame(a0),d0    ; load frame number
                      (C:\Users\bhrou\gi):02503                                                                       *; loc_1B84E:
                      (C:\Users\bhrou\gi):02504                                                                       *LoadSonicDynPLC_Part2:
                      (C:\Users\bhrou\gi):02505                                                                       *  cmp.b   (Sonic_LastLoadedDPLC).w,d0
                      (C:\Users\bhrou\gi):02506                                                                       *  beq.s   return_1B89A
                      (C:\Users\bhrou\gi):02507                                                                       *  move.b  d0,(Sonic_LastLoadedDPLC).w
                      (C:\Users\bhrou\gi):02508                                                                       *  lea (MapRUnc_Sonic).l,a2
                      (C:\Users\bhrou\gi):02509                                                                       *  add.w   d0,d0
                      (C:\Users\bhrou\gi):02510                                                                       *  adda.w  (a2,d0.w),a2
                      (C:\Users\bhrou\gi):02511                                                                       *  move.w  (a2)+,d5
                      (C:\Users\bhrou\gi):02512                                                                       *  subq.w  #1,d5
                      (C:\Users\bhrou\gi):02513                                                                       *  bmi.s   return_1B89A
                      (C:\Users\bhrou\gi):02514                                                                       *  move.w  #tiles_to_bytes(ArtTile_ArtUnc_Sonic),d4
                      (C:\Users\bhrou\gi):02515                                                                       *; loc_1B86E:
                      (C:\Users\bhrou\gi):02516                                                                       *SPLC_ReadEntry:
                      (C:\Users\bhrou\gi):02517                                                                       *  moveq   #0,d1
                      (C:\Users\bhrou\gi):02518                                                                       *  move.w  (a2)+,d1
                      (C:\Users\bhrou\gi):02519                                                                       *  move.w  d1,d3
                      (C:\Users\bhrou\gi):02520                                                                       *  lsr.w   #8,d3
                      (C:\Users\bhrou\gi):02521                                                                       *  andi.w  #$F0,d3
                      (C:\Users\bhrou\gi):02522                                                                       *  addi.w  #$10,d3
                      (C:\Users\bhrou\gi):02523                                                                       *  andi.w  #$FFF,d1
                      (C:\Users\bhrou\gi):02524                                                                       *  lsl.l   #5,d1
                      (C:\Users\bhrou\gi):02525                                                                       *  addi.l  #ArtUnc_Sonic,d1
                      (C:\Users\bhrou\gi):02526                                                                       *  move.w  d4,d2
                      (C:\Users\bhrou\gi):02527                                                                       *  add.w   d3,d4
                      (C:\Users\bhrou\gi):02528                                                                       *  add.w   d3,d4
                      (C:\Users\bhrou\gi):02529                                                                       *  jsr (QueueDMATransfer).l
                      (C:\Users\bhrou\gi):02530                                                                       *  dbf d5,SPLC_ReadEntry   ; repeat for number of entries
                      (C:\Users\bhrou\gi):02531                                                                       *
                      (C:\Users\bhrou\gi):02532                                                                       *return_1B89A:
                      (C:\Users\bhrou\gi):02533                                                                       *  rts
                      (C:\Users\bhrou\gi):02534                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):02535                                                                       *
                      (C:\Users\bhrou\gi):02536                                                                       *JmpTo_KillCharacter ; JmpTo
                      (C:\Users\bhrou\gi):02537                                                                       *  jmp (KillCharacter).l
                      (C:\Users\bhrou\gi):02538                                                                       *
                      (C:\Users\bhrou\gi):02539                                                                       *    if ~~removeJmpTos
                      (C:\Users\bhrou\gi):02540                                                                       *  align 4
                      (C:\Users\bhrou\gi):02541                                                                       *    endif
                      (C:\Users\bhrou\gi):02542                                                                        
                      (C:\Users\bhrou\gi):02543                 ; ***************************************************************************************************************************************************
                      (C:\Users\bhrou\gi):02544                 
                      (C:\Users\bhrou\gi):02545                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02546                                                                       * ; Subroutine to change Sonic's angle & position as he walks along the floor
                      (C:\Users\bhrou\gi):02547                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02548                                                                       * 
                      (C:\Users\bhrou\gi):02549                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02550                                                                       * 
                      (C:\Users\bhrou\gi):02551                                                                       * ; loc_1E234: Sonic_AnglePos:
2FBA                  (C:\Users\bhrou\gi):02552                 AnglePos                                              * AnglePos:
                      (C:\Users\bhrou\gi):02553                                                                       *         move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):02554                                                                       *         cmpi.b  #$C,top_solid_bit(a0)
                      (C:\Users\bhrou\gi):02555                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):02556                                                                       *         move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):02557                                                                       * +
                      (C:\Users\bhrou\gi):02558                                                                       *         move.b  top_solid_bit(a0),d5
                      (C:\Users\bhrou\gi):02559                                                                       *         btst    #3,status(a0)
                      (C:\Users\bhrou\gi):02560                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):02561                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02562                                                                       *         move.b  d0,(Primary_Angle).w
                      (C:\Users\bhrou\gi):02563                                                                       *         move.b  d0,(Secondary_Angle).w
2FBA 39               (C:\Users\bhrou\gi):02564 [5]     4139            rts                                           *         rts
                      (C:\Users\bhrou\gi):02565                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02566                                                                       * +       moveq   #3,d0
                      (C:\Users\bhrou\gi):02567                                                                       *         move.b  d0,(Primary_Angle).w
                      (C:\Users\bhrou\gi):02568                                                                       *         move.b  d0,(Secondary_Angle).w
                      (C:\Users\bhrou\gi):02569                                                                       *         move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):02570                                                                       *         addi.b  #$20,d0
                      (C:\Users\bhrou\gi):02571                                                                       *         bpl.s   loc_1E286
                      (C:\Users\bhrou\gi):02572                                                                       *         move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):02573                                                                       *         bpl.s   +
                      (C:\Users\bhrou\gi):02574                                                                       *         subq.b  #1,d0
                      (C:\Users\bhrou\gi):02575                                                                       * +
                      (C:\Users\bhrou\gi):02576                                                                       *         addi.b  #$20,d0
                      (C:\Users\bhrou\gi):02577                                                                       *         bra.s   loc_1E292
                      (C:\Users\bhrou\gi):02578                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02579                                                                       * loc_1E286:
                      (C:\Users\bhrou\gi):02580                                                                       *         move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):02581                                                                       *         bpl.s   loc_1E28E
                      (C:\Users\bhrou\gi):02582                                                                       *         addq.b  #1,d0
                      (C:\Users\bhrou\gi):02583                                                                       * 
                      (C:\Users\bhrou\gi):02584                                                                       * loc_1E28E:
                      (C:\Users\bhrou\gi):02585                                                                       *         addi.b  #$1F,d0
                      (C:\Users\bhrou\gi):02586                                                                       * 
                      (C:\Users\bhrou\gi):02587                                                                       * loc_1E292:
                      (C:\Users\bhrou\gi):02588                                                                       *         andi.b  #$C0,d0
                      (C:\Users\bhrou\gi):02589                                                                       *         cmpi.b  #$40,d0
                      (C:\Users\bhrou\gi):02590                                                                       *         beq.w   Sonic_WalkVertL
                      (C:\Users\bhrou\gi):02591                                                                       *         cmpi.b  #$80,d0
                      (C:\Users\bhrou\gi):02592                                                                       *         beq.w   Sonic_WalkCeiling
                      (C:\Users\bhrou\gi):02593                                                                       *         cmpi.b  #$C0,d0
                      (C:\Users\bhrou\gi):02594                                                                       *         beq.w   Sonic_WalkVertR
                      (C:\Users\bhrou\gi):02595                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02596                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02597                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02598                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02599                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02600                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):02601                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02602                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02603                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):02604                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):02605                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):02606                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):02607                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):02608                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):02609                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02610                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02611                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02612                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02613                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02614                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):02615                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02616                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02617                                                                       *         neg.w   d0
                      (C:\Users\bhrou\gi):02618                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):02619                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):02620                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):02621                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):02622                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):02623                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):02624                                                                       *         bsr.w   Sonic_Angle
                      (C:\Users\bhrou\gi):02625                                                                       *         tst.w   d1
                      (C:\Users\bhrou\gi):02626                                                                       *         beq.s   return_1E31C
                      (C:\Users\bhrou\gi):02627                                                                       *         bpl.s   loc_1E31E
                      (C:\Users\bhrou\gi):02628                                                                       *         cmpi.w  #-$E,d1
                      (C:\Users\bhrou\gi):02629                                                                       *         blt.s   return_1E31C
                      (C:\Users\bhrou\gi):02630                                                                       *         add.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02631                                                                       * 
                      (C:\Users\bhrou\gi):02632                                                                       * return_1E31C:
                      (C:\Users\bhrou\gi):02633                                                                       *         rts
                      (C:\Users\bhrou\gi):02634                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02635                                                                       * 
                      (C:\Users\bhrou\gi):02636                                                                       * loc_1E31E:
                      (C:\Users\bhrou\gi):02637                                                                       *         mvabs.b x_vel(a0),d0
                      (C:\Users\bhrou\gi):02638                                                                       *         addq.b  #4,d0
                      (C:\Users\bhrou\gi):02639                                                                       *         cmpi.b  #$E,d0
                      (C:\Users\bhrou\gi):02640                                                                       *         blo.s   +
                      (C:\Users\bhrou\gi):02641                                                                       *         move.b  #$E,d0
                      (C:\Users\bhrou\gi):02642                                                                       * +
                      (C:\Users\bhrou\gi):02643                                                                       *         cmp.b   d0,d1
                      (C:\Users\bhrou\gi):02644                                                                       *         bgt.s   loc_1E33C
                      (C:\Users\bhrou\gi):02645                                                                       * 
                      (C:\Users\bhrou\gi):02646                                                                       * loc_1E336:
                      (C:\Users\bhrou\gi):02647                                                                       *         add.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02648                                                                       *         rts
                      (C:\Users\bhrou\gi):02649                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02650                                                                       * 
                      (C:\Users\bhrou\gi):02651                                                                       * loc_1E33C:
                      (C:\Users\bhrou\gi):02652                                                                       *         tst.b   stick_to_convex(a0)
                      (C:\Users\bhrou\gi):02653                                                                       *         bne.s   loc_1E336
                      (C:\Users\bhrou\gi):02654                                                                       *         bset    #1,status(a0)
                      (C:\Users\bhrou\gi):02655                                                                       *         bclr    #5,status(a0)
                      (C:\Users\bhrou\gi):02656                                                                       *         move.b  #AniIDSonAni_Run,prev_anim(a0)  ; Force character's animation to restart
                      (C:\Users\bhrou\gi):02657                                                                       *         rts
                      (C:\Users\bhrou\gi):02658                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02659                                                                       * 
                      (C:\Users\bhrou\gi):02660                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02661                                                                       * ; Subroutine to change Sonic's angle as he walks along the floor
                      (C:\Users\bhrou\gi):02662                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02663                                                                       * 
                      (C:\Users\bhrou\gi):02664                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02665                                                                       * 
                      (C:\Users\bhrou\gi):02666                                                                       * ; loc_1E356:
                      (C:\Users\bhrou\gi):02667                                                                       * Sonic_Angle:
                      (C:\Users\bhrou\gi):02668                                                                       *         move.b  (Secondary_Angle).w,d2
                      (C:\Users\bhrou\gi):02669                                                                       *         cmp.w   d0,d1
                      (C:\Users\bhrou\gi):02670                                                                       *         ble.s   +
                      (C:\Users\bhrou\gi):02671                                                                       *         move.b  (Primary_Angle).w,d2
                      (C:\Users\bhrou\gi):02672                                                                       *         move.w  d0,d1
                      (C:\Users\bhrou\gi):02673                                                                       * +
                      (C:\Users\bhrou\gi):02674                                                                       *         btst    #0,d2
                      (C:\Users\bhrou\gi):02675                                                                       *         bne.s   loc_1E380
                      (C:\Users\bhrou\gi):02676                                                                       *         move.b  d2,d0
                      (C:\Users\bhrou\gi):02677                                                                       *         sub.b   angle(a0),d0
                      (C:\Users\bhrou\gi):02678                                                                       *         bpl.s   +
                      (C:\Users\bhrou\gi):02679                                                                       *         neg.b   d0
                      (C:\Users\bhrou\gi):02680                                                                       * +
                      (C:\Users\bhrou\gi):02681                                                                       *         cmpi.b  #$20,d0
                      (C:\Users\bhrou\gi):02682                                                                       *         bhs.s   loc_1E380
                      (C:\Users\bhrou\gi):02683                                                                       *         move.b  d2,angle(a0)
                      (C:\Users\bhrou\gi):02684                                                                       *         rts
                      (C:\Users\bhrou\gi):02685                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02686                                                                       * 
                      (C:\Users\bhrou\gi):02687                                                                       * loc_1E380:
                      (C:\Users\bhrou\gi):02688                                                                       *         move.b  angle(a0),d2
                      (C:\Users\bhrou\gi):02689                                                                       *         addi.b  #$20,d2
                      (C:\Users\bhrou\gi):02690                                                                       *         andi.b  #$C0,d2
                      (C:\Users\bhrou\gi):02691                                                                       *         move.b  d2,angle(a0)
                      (C:\Users\bhrou\gi):02692                                                                       *         rts
                      (C:\Users\bhrou\gi):02693                                                                       * ; End of function Sonic_Angle
                      (C:\Users\bhrou\gi):02694                                                                       * 
                      (C:\Users\bhrou\gi):02695                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02696                                                                       * ; Subroutine allowing Sonic to walk up a vertical slope/wall to his right
                      (C:\Users\bhrou\gi):02697                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02698                                                                       * 
                      (C:\Users\bhrou\gi):02699                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02700                                                                       * 
                      (C:\Users\bhrou\gi):02701                                                                       * ; loc_1E392:
                      (C:\Users\bhrou\gi):02702                                                                       * Sonic_WalkVertR:
                      (C:\Users\bhrou\gi):02703                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02704                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02705                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02706                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02707                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02708                                                                       *         neg.w   d0
                      (C:\Users\bhrou\gi):02709                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):02710                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02711                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02712                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):02713                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):02714                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):02715                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):02716                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):02717                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):02718                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02719                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02720                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02721                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02722                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02723                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):02724                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02725                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02726                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):02727                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):02728                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):02729                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):02730                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):02731                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):02732                                                                       *         bsr.w   Sonic_Angle
                      (C:\Users\bhrou\gi):02733                                                                       *         tst.w   d1
                      (C:\Users\bhrou\gi):02734                                                                       *         beq.s   return_1E400
                      (C:\Users\bhrou\gi):02735                                                                       *         bpl.s   loc_1E402
                      (C:\Users\bhrou\gi):02736                                                                       *         cmpi.w  #-$E,d1
                      (C:\Users\bhrou\gi):02737                                                                       *         blt.s   return_1E400
                      (C:\Users\bhrou\gi):02738                                                                       *         add.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02739                                                                       * 
                      (C:\Users\bhrou\gi):02740                                                                       * return_1E400:
                      (C:\Users\bhrou\gi):02741                                                                       *         rts
                      (C:\Users\bhrou\gi):02742                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02743                                                                       * 
                      (C:\Users\bhrou\gi):02744                                                                       * loc_1E402:
                      (C:\Users\bhrou\gi):02745                                                                       *         mvabs.b y_vel(a0),d0
                      (C:\Users\bhrou\gi):02746                                                                       *         addq.b  #4,d0
                      (C:\Users\bhrou\gi):02747                                                                       *         cmpi.b  #$E,d0
                      (C:\Users\bhrou\gi):02748                                                                       *         blo.s   +
                      (C:\Users\bhrou\gi):02749                                                                       *         move.b  #$E,d0
                      (C:\Users\bhrou\gi):02750                                                                       * +
                      (C:\Users\bhrou\gi):02751                                                                       *         cmp.b   d0,d1
                      (C:\Users\bhrou\gi):02752                                                                       *         bgt.s   loc_1E420
                      (C:\Users\bhrou\gi):02753                                                                       * 
                      (C:\Users\bhrou\gi):02754                                                                       * loc_1E41A:
                      (C:\Users\bhrou\gi):02755                                                                       *         add.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02756                                                                       *         rts
                      (C:\Users\bhrou\gi):02757                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02758                                                                       * 
                      (C:\Users\bhrou\gi):02759                                                                       * loc_1E420:
                      (C:\Users\bhrou\gi):02760                                                                       *         tst.b   stick_to_convex(a0)
                      (C:\Users\bhrou\gi):02761                                                                       *         bne.s   loc_1E41A
                      (C:\Users\bhrou\gi):02762                                                                       *         bset    #1,status(a0)
                      (C:\Users\bhrou\gi):02763                                                                       *         bclr    #5,status(a0)
                      (C:\Users\bhrou\gi):02764                                                                       *         move.b  #AniIDSonAni_Run,prev_anim(a0)  ; Force character's animation to restart
                      (C:\Users\bhrou\gi):02765                                                                       *         rts
                      (C:\Users\bhrou\gi):02766                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02767                                                                       * ;loc_1E43A
                      (C:\Users\bhrou\gi):02768                                                                       * Sonic_WalkCeiling:
                      (C:\Users\bhrou\gi):02769                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02770                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02771                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02772                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02773                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02774                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):02775                                                                       *         eori.w  #$F,d2
                      (C:\Users\bhrou\gi):02776                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02777                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02778                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):02779                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):02780                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):02781                                                                       *         move.w  #$800,d6
                      (C:\Users\bhrou\gi):02782                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):02783                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):02784                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02785                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02786                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02787                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02788                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02789                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):02790                                                                       *         eori.w  #$F,d2
                      (C:\Users\bhrou\gi):02791                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02792                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02793                                                                       *         sub.w   d0,d3
                      (C:\Users\bhrou\gi):02794                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):02795                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):02796                                                                       *         move.w  #$800,d6
                      (C:\Users\bhrou\gi):02797                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):02798                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):02799                                                                       *         bsr.w   Sonic_Angle
                      (C:\Users\bhrou\gi):02800                                                                       *         tst.w   d1
                      (C:\Users\bhrou\gi):02801                                                                       *         beq.s   return_1E4AE
                      (C:\Users\bhrou\gi):02802                                                                       *         bpl.s   loc_1E4B0
                      (C:\Users\bhrou\gi):02803                                                                       *         cmpi.w  #-$E,d1
                      (C:\Users\bhrou\gi):02804                                                                       *         blt.s   return_1E4AE
                      (C:\Users\bhrou\gi):02805                                                                       *         sub.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02806                                                                       * 
                      (C:\Users\bhrou\gi):02807                                                                       * return_1E4AE:
                      (C:\Users\bhrou\gi):02808                                                                       *         rts
                      (C:\Users\bhrou\gi):02809                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02810                                                                       * 
                      (C:\Users\bhrou\gi):02811                                                                       * loc_1E4B0:
                      (C:\Users\bhrou\gi):02812                                                                       *         mvabs.b x_vel(a0),d0
                      (C:\Users\bhrou\gi):02813                                                                       *         addq.b  #4,d0
                      (C:\Users\bhrou\gi):02814                                                                       *         cmpi.b  #$E,d0
                      (C:\Users\bhrou\gi):02815                                                                       *         blo.s   +
                      (C:\Users\bhrou\gi):02816                                                                       *         move.b  #$E,d0
                      (C:\Users\bhrou\gi):02817                                                                       * +
                      (C:\Users\bhrou\gi):02818                                                                       *         cmp.b   d0,d1
                      (C:\Users\bhrou\gi):02819                                                                       *         bgt.s   loc_1E4CE
                      (C:\Users\bhrou\gi):02820                                                                       * 
                      (C:\Users\bhrou\gi):02821                                                                       * loc_1E4C8:
                      (C:\Users\bhrou\gi):02822                                                                       *         sub.w   d1,y_pos(a0)
                      (C:\Users\bhrou\gi):02823                                                                       *         rts
                      (C:\Users\bhrou\gi):02824                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02825                                                                       * 
                      (C:\Users\bhrou\gi):02826                                                                       * loc_1E4CE:
                      (C:\Users\bhrou\gi):02827                                                                       *         tst.b   stick_to_convex(a0)
                      (C:\Users\bhrou\gi):02828                                                                       *         bne.s   loc_1E4C8
                      (C:\Users\bhrou\gi):02829                                                                       *         bset    #1,status(a0)
                      (C:\Users\bhrou\gi):02830                                                                       *         bclr    #5,status(a0)
                      (C:\Users\bhrou\gi):02831                                                                       *         move.b  #AniIDSonAni_Run,prev_anim(a0)  ; Force character's animation to restart
                      (C:\Users\bhrou\gi):02832                                                                       *         rts
                      (C:\Users\bhrou\gi):02833                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02834                                                                       * ;loc_1E4E8
                      (C:\Users\bhrou\gi):02835                                                                       * Sonic_WalkVertL:
                      (C:\Users\bhrou\gi):02836                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02837                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02838                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02839                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02840                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02841                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):02842                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02843                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02844                                                                       *         sub.w   d0,d3
                      (C:\Users\bhrou\gi):02845                                                                       *         eori.w  #$F,d3
                      (C:\Users\bhrou\gi):02846                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):02847                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):02848                                                                       *         move.w  #$400,d6
                      (C:\Users\bhrou\gi):02849                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):02850                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):02851                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):02852                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):02853                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):02854                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):02855                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02856                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):02857                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):02858                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):02859                                                                       *         sub.w   d0,d3
                      (C:\Users\bhrou\gi):02860                                                                       *         eori.w  #$F,d3
                      (C:\Users\bhrou\gi):02861                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):02862                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):02863                                                                       *         move.w  #$400,d6
                      (C:\Users\bhrou\gi):02864                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):02865                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):02866                                                                       *         bsr.w   Sonic_Angle
                      (C:\Users\bhrou\gi):02867                                                                       *         tst.w   d1
                      (C:\Users\bhrou\gi):02868                                                                       *         beq.s   return_1E55C
                      (C:\Users\bhrou\gi):02869                                                                       *         bpl.s   loc_1E55E
                      (C:\Users\bhrou\gi):02870                                                                       *         cmpi.w  #-$E,d1
                      (C:\Users\bhrou\gi):02871                                                                       *         blt.s   return_1E55C
                      (C:\Users\bhrou\gi):02872                                                                       *         sub.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02873                                                                       * 
                      (C:\Users\bhrou\gi):02874                                                                       * return_1E55C:
                      (C:\Users\bhrou\gi):02875                                                                       *         rts
                      (C:\Users\bhrou\gi):02876                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02877                                                                       * 
                      (C:\Users\bhrou\gi):02878                                                                       * loc_1E55E:
                      (C:\Users\bhrou\gi):02879                                                                       *         mvabs.b y_vel(a0),d0
                      (C:\Users\bhrou\gi):02880                                                                       *         addq.b  #4,d0
                      (C:\Users\bhrou\gi):02881                                                                       *         cmpi.b  #$E,d0
                      (C:\Users\bhrou\gi):02882                                                                       *         blo.s   +
                      (C:\Users\bhrou\gi):02883                                                                       *         move.b  #$E,d0
                      (C:\Users\bhrou\gi):02884                                                                       * +
                      (C:\Users\bhrou\gi):02885                                                                       *         cmp.b   d0,d1
                      (C:\Users\bhrou\gi):02886                                                                       *         bgt.s   loc_1E57C
                      (C:\Users\bhrou\gi):02887                                                                       * 
                      (C:\Users\bhrou\gi):02888                                                                       * loc_1E576:
                      (C:\Users\bhrou\gi):02889                                                                       *         sub.w   d1,x_pos(a0)
                      (C:\Users\bhrou\gi):02890                                                                       *         rts
                      (C:\Users\bhrou\gi):02891                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02892                                                                       * 
                      (C:\Users\bhrou\gi):02893                                                                       * loc_1E57C:
                      (C:\Users\bhrou\gi):02894                                                                       *         tst.b   stick_to_convex(a0)
                      (C:\Users\bhrou\gi):02895                                                                       *         bne.s   loc_1E576
                      (C:\Users\bhrou\gi):02896                                                                       *         bset    #1,status(a0)
                      (C:\Users\bhrou\gi):02897                                                                       *         bclr    #5,status(a0)
                      (C:\Users\bhrou\gi):02898                                                                       *         move.b  #AniIDSonAni_Run,prev_anim(a0)  ; Force character's animation to restart
                      (C:\Users\bhrou\gi):02899                                                                       *         rts
                      (C:\Users\bhrou\gi):02900                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02901                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02902                                                                       * ; Subroutine to find which tile is in the specified location
                      (C:\Users\bhrou\gi):02903                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):02904                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):02905                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):02906                                                                       * ; a1 is pointer to block in chunk table
                      (C:\Users\bhrou\gi):02907                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):02908                                                                       * 
                      (C:\Users\bhrou\gi):02909                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02910                                                                       * 
                      (C:\Users\bhrou\gi):02911                                                                       * ; loc_1E596: Floor_ChkTile:
                      (C:\Users\bhrou\gi):02912                                                                       * Find_Tile:
                      (C:\Users\bhrou\gi):02913                                                                       *         move.w  d2,d0   ; y_pos
                      (C:\Users\bhrou\gi):02914                                                                       *         add.w   d0,d0
                      (C:\Users\bhrou\gi):02915                                                                       *         andi.w  #$F00,d0        ; rounded 2*y_pos
                      (C:\Users\bhrou\gi):02916                                                                       *         move.w  d3,d1   ; x_pos
                      (C:\Users\bhrou\gi):02917                                                                       *         lsr.w   #3,d1
                      (C:\Users\bhrou\gi):02918                                                                       *         move.w  d1,d4
                      (C:\Users\bhrou\gi):02919                                                                       *         lsr.w   #4,d1   ; x_pos/128 = x_of_chunk
                      (C:\Users\bhrou\gi):02920                                                                       *         andi.w  #$7F,d1
                      (C:\Users\bhrou\gi):02921                                                                       *         add.w   d1,d0   ; d0 is relevant chunk ID now
                      (C:\Users\bhrou\gi):02922                                                                       *         moveq   #-1,d1
                      (C:\Users\bhrou\gi):02923                                                                       *         clr.w   d1              ; d1 is now $FFFF0000 = Chunk_Table
                      (C:\Users\bhrou\gi):02924                                                                       *         lea     (Level_Layout).w,a1
                      (C:\Users\bhrou\gi):02925                                                                       *         move.b  (a1,d0.w),d1    ; move 128*128 chunk ID to d1
                      (C:\Users\bhrou\gi):02926                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):02927                                                                       *         move.w  word_1E5D0(pc,d1.w),d1
                      (C:\Users\bhrou\gi):02928                                                                       *         move.w  d2,d0   ; y_pos
                      (C:\Users\bhrou\gi):02929                                                                       *         andi.w  #$70,d0
                      (C:\Users\bhrou\gi):02930                                                                       *         add.w   d0,d1
                      (C:\Users\bhrou\gi):02931                                                                       *         andi.w  #$E,d4  ; x_pos/8
                      (C:\Users\bhrou\gi):02932                                                                       *         add.w   d4,d1
                      (C:\Users\bhrou\gi):02933                                                                       *         movea.l d1,a1   ; address of block ID
                      (C:\Users\bhrou\gi):02934                                                                       *         rts
                      (C:\Users\bhrou\gi):02935                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02936                                                                       * ; precalculated values for Find_Tile
                      (C:\Users\bhrou\gi):02937                                                                       * ; (Sonic 1 calculated it every time instead of using a table)
                      (C:\Users\bhrou\gi):02938                                                                       * word_1E5D0:
                      (C:\Users\bhrou\gi):02939                                                                       * c := 0
                      (C:\Users\bhrou\gi):02940                                                                       *         rept 256
                      (C:\Users\bhrou\gi):02941                                                                       *                 dc.w    c
                      (C:\Users\bhrou\gi):02942                                                                       * c := c+$80
                      (C:\Users\bhrou\gi):02943                                                                       *         endm
                      (C:\Users\bhrou\gi):02944                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02945                                                                       * 
                      (C:\Users\bhrou\gi):02946                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):02947                                                                       * 
                      (C:\Users\bhrou\gi):02948                                                                       * ; Scans vertically for up to 2 16x16 blocks to find solid ground or ceiling.
                      (C:\Users\bhrou\gi):02949                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):02950                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):02951                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):02952                                                                       * ; d6 = $0000 for no flip, $0800 for vertical flip
                      (C:\Users\bhrou\gi):02953                                                                       * ; a3 = delta-y for next location to check if current one is empty
                      (C:\Users\bhrou\gi):02954                                                                       * ; a4 = pointer to angle buffer
                      (C:\Users\bhrou\gi):02955                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):02956                                                                       * ; returns distance in d1
                      (C:\Users\bhrou\gi):02957                                                                       * ; returns angle in (a4)
                      (C:\Users\bhrou\gi):02958                                                                       * 
                      (C:\Users\bhrou\gi):02959                                                                       * ; loc_1E7D0:
2FBB                  (C:\Users\bhrou\gi):02960                 FindFloor                                             * FindFloor:
                      (C:\Users\bhrou\gi):02961                                                                       *         bsr.w   Find_Tile
                      (C:\Users\bhrou\gi):02962                                                                       *         move.w  (a1),d0
                      (C:\Users\bhrou\gi):02963                                                                       *         move.w  d0,d4
                      (C:\Users\bhrou\gi):02964                                                                       *         andi.w  #$3FF,d0
                      (C:\Users\bhrou\gi):02965                                                                       *         beq.s   loc_1E7E2
                      (C:\Users\bhrou\gi):02966                                                                       *         btst    d5,d4
                      (C:\Users\bhrou\gi):02967                                                                       *         bne.s   loc_1E7F0
                      (C:\Users\bhrou\gi):02968                                                                       * 
2FBB                  (C:\Users\bhrou\gi):02969                 loc_1E7E2                                             * loc_1E7E2:
                      (C:\Users\bhrou\gi):02970                                                                       *         add.w   a3,d2
                      (C:\Users\bhrou\gi):02971                                                                       *         bsr.w   FindFloor2
                      (C:\Users\bhrou\gi):02972                                                                       *         sub.w   a3,d2
                      (C:\Users\bhrou\gi):02973                                                                       *         addi.w  #$10,d1
2FBB 39               (C:\Users\bhrou\gi):02974 [5]     4144            rts                                           *         rts
                      (C:\Users\bhrou\gi):02975                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):02976                                                                       * 
2FBC                  (C:\Users\bhrou\gi):02977                 loc_1E7F0                                             * loc_1E7F0:      ; block has some solidity
                      (C:\Users\bhrou\gi):02978                                                                       *         movea.l (Collision_addr).w,a2   ; pointer to collision data, i.e. blockID -> collisionID array
                      (C:\Users\bhrou\gi):02979                                                                       *         move.b  (a2,d0.w),d0    ; get collisionID
                      (C:\Users\bhrou\gi):02980                                                                       *         andi.w  #$FF,d0
                      (C:\Users\bhrou\gi):02981                                                                       *         beq.s   loc_1E7E2
                      (C:\Users\bhrou\gi):02982                                                                       *         lea     (ColCurveMap).l,a2
                      (C:\Users\bhrou\gi):02983                                                                       *         move.b  (a2,d0.w),(a4)  ; get angle from AngleMap --> (a4)
                      (C:\Users\bhrou\gi):02984                                                                       *         lsl.w   #4,d0
                      (C:\Users\bhrou\gi):02985                                                                       *         move.w  d3,d1   ; x_pos
                      (C:\Users\bhrou\gi):02986                                                                       *         btst    #$A,d4  ; adv.blockID in d4 - X flipping
                      (C:\Users\bhrou\gi):02987                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):02988                                                                       *         not.w   d1
                      (C:\Users\bhrou\gi):02989                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):02990                                                                       * +
                      (C:\Users\bhrou\gi):02991                                                                       *         btst    #$B,d4  ; Y flipping
                      (C:\Users\bhrou\gi):02992                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):02993                                                                       *         addi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):02994                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):02995                                                                       *         subi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):02996                                                                       * +
                      (C:\Users\bhrou\gi):02997                                                                       *         andi.w  #$F,d1  ; x_pos (mod 16)
                      (C:\Users\bhrou\gi):02998                                                                       *         add.w   d0,d1   ; d0 = 16*blockID -> offset in ColArray to look up
                      (C:\Users\bhrou\gi):02999                                                                       *         lea     (ColArray).l,a2
                      (C:\Users\bhrou\gi):03000                                                                       *         move.b  (a2,d1.w),d0    ; heigth from ColArray
                      (C:\Users\bhrou\gi):03001                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03002                                                                       *         eor.w   d6,d4
                      (C:\Users\bhrou\gi):03003                                                                       *         btst    #$B,d4  ; Y flipping
                      (C:\Users\bhrou\gi):03004                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03005                                                                       *         neg.w   d0
                      (C:\Users\bhrou\gi):03006                                                                       * +
                      (C:\Users\bhrou\gi):03007                                                                       *         tst.w   d0
                      (C:\Users\bhrou\gi):03008                                                                       *         beq.s   loc_1E7E2       ; no collision
                      (C:\Users\bhrou\gi):03009                                                                       *         bmi.s   loc_1E85E
                      (C:\Users\bhrou\gi):03010                                                                       *         cmpi.b  #$10,d0
                      (C:\Users\bhrou\gi):03011                                                                       *         beq.s   loc_1E86A
                      (C:\Users\bhrou\gi):03012                                                                       *         move.w  d2,d1
                      (C:\Users\bhrou\gi):03013                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03014                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03015                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03016                                                                       *         sub.w   d0,d1
2FBC 39               (C:\Users\bhrou\gi):03017 [5]     4149            rts                                           *         rts
                      (C:\Users\bhrou\gi):03018                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03019                                                                       * 
2FBD                  (C:\Users\bhrou\gi):03020                 loc_1E85E                                             * loc_1E85E:
                      (C:\Users\bhrou\gi):03021                                                                       *         move.w  d2,d1
                      (C:\Users\bhrou\gi):03022                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03023                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03024                                                                       *         bpl.w   loc_1E7E2
                      (C:\Users\bhrou\gi):03025                                                                       * 
2FBD                  (C:\Users\bhrou\gi):03026                 loc_1E86A                                             * loc_1E86A:
                      (C:\Users\bhrou\gi):03027                                                                       *         sub.w   a3,d2
                      (C:\Users\bhrou\gi):03028                                                                       *         bsr.w   FindFloor2
                      (C:\Users\bhrou\gi):03029                                                                       *         add.w   a3,d2
                      (C:\Users\bhrou\gi):03030                                                                       *         subi.w  #$10,d1
2FBD 39               (C:\Users\bhrou\gi):03031 [5]     4154            rts                                           *         rts
                      (C:\Users\bhrou\gi):03032                                                                       * ; End of function FindFloor
                      (C:\Users\bhrou\gi):03033                                                                       * 
                      (C:\Users\bhrou\gi):03034                                                                       * 
                      (C:\Users\bhrou\gi):03035                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03036                                                                       * 
                      (C:\Users\bhrou\gi):03037                                                                       * ; Checks a 16x16 block to find solid ground or ceiling.
                      (C:\Users\bhrou\gi):03038                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):03039                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):03040                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):03041                                                                       * ; d6 = $0000 for no flip, $0800 for vertical flip
                      (C:\Users\bhrou\gi):03042                                                                       * ; a4 = pointer to angle buffer
                      (C:\Users\bhrou\gi):03043                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):03044                                                                       * ; returns distance in d1
                      (C:\Users\bhrou\gi):03045                                                                       * ; returns angle in (a4)
                      (C:\Users\bhrou\gi):03046                                                                       * 
                      (C:\Users\bhrou\gi):03047                                                                       * ; loc_1E878:
                      (C:\Users\bhrou\gi):03048                                                                       * FindFloor2:
                      (C:\Users\bhrou\gi):03049                                                                       *         bsr.w   Find_Tile
                      (C:\Users\bhrou\gi):03050                                                                       *         move.w  (a1),d0
                      (C:\Users\bhrou\gi):03051                                                                       *         move.w  d0,d4
                      (C:\Users\bhrou\gi):03052                                                                       *         andi.w  #$3FF,d0
                      (C:\Users\bhrou\gi):03053                                                                       *         beq.s   loc_1E88A
                      (C:\Users\bhrou\gi):03054                                                                       *         btst    d5,d4
                      (C:\Users\bhrou\gi):03055                                                                       *         bne.s   loc_1E898
                      (C:\Users\bhrou\gi):03056                                                                       * 
                      (C:\Users\bhrou\gi):03057                                                                       * loc_1E88A:
                      (C:\Users\bhrou\gi):03058                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03059                                                                       *         move.w  d2,d0
                      (C:\Users\bhrou\gi):03060                                                                       *         andi.w  #$F,d0
                      (C:\Users\bhrou\gi):03061                                                                       *         sub.w   d0,d1
                      (C:\Users\bhrou\gi):03062                                                                       *         rts
                      (C:\Users\bhrou\gi):03063                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03064                                                                       * 
                      (C:\Users\bhrou\gi):03065                                                                       * loc_1E898:
                      (C:\Users\bhrou\gi):03066                                                                       *         movea.l (Collision_addr).w,a2
                      (C:\Users\bhrou\gi):03067                                                                       *         move.b  (a2,d0.w),d0
                      (C:\Users\bhrou\gi):03068                                                                       *         andi.w  #$FF,d0
                      (C:\Users\bhrou\gi):03069                                                                       *         beq.s   loc_1E88A
                      (C:\Users\bhrou\gi):03070                                                                       *         lea     (ColCurveMap).l,a2
                      (C:\Users\bhrou\gi):03071                                                                       *         move.b  (a2,d0.w),(a4)
                      (C:\Users\bhrou\gi):03072                                                                       *         lsl.w   #4,d0
                      (C:\Users\bhrou\gi):03073                                                                       *         move.w  d3,d1
                      (C:\Users\bhrou\gi):03074                                                                       *         btst    #$A,d4
                      (C:\Users\bhrou\gi):03075                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03076                                                                       *         not.w   d1
                      (C:\Users\bhrou\gi):03077                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03078                                                                       * +
                      (C:\Users\bhrou\gi):03079                                                                       *         btst    #$B,d4
                      (C:\Users\bhrou\gi):03080                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03081                                                                       *         addi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03082                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03083                                                                       *         subi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03084                                                                       * +
                      (C:\Users\bhrou\gi):03085                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03086                                                                       *         add.w   d0,d1
                      (C:\Users\bhrou\gi):03087                                                                       *         lea     (ColArray).l,a2
                      (C:\Users\bhrou\gi):03088                                                                       *         move.b  (a2,d1.w),d0
                      (C:\Users\bhrou\gi):03089                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03090                                                                       *         eor.w   d6,d4
                      (C:\Users\bhrou\gi):03091                                                                       *         btst    #$B,d4
                      (C:\Users\bhrou\gi):03092                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03093                                                                       *         neg.w   d0
                      (C:\Users\bhrou\gi):03094                                                                       * +
                      (C:\Users\bhrou\gi):03095                                                                       *         tst.w   d0
                      (C:\Users\bhrou\gi):03096                                                                       *         beq.s   loc_1E88A
                      (C:\Users\bhrou\gi):03097                                                                       *         bmi.s   loc_1E900
                      (C:\Users\bhrou\gi):03098                                                                       *         move.w  d2,d1
                      (C:\Users\bhrou\gi):03099                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03100                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03101                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03102                                                                       *         sub.w   d0,d1
                      (C:\Users\bhrou\gi):03103                                                                       *         rts
                      (C:\Users\bhrou\gi):03104                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03105                                                                       * 
                      (C:\Users\bhrou\gi):03106                                                                       * loc_1E900:
                      (C:\Users\bhrou\gi):03107                                                                       *         move.w  d2,d1
                      (C:\Users\bhrou\gi):03108                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03109                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03110                                                                       *         bpl.w   loc_1E88A
                      (C:\Users\bhrou\gi):03111                                                                       *         not.w   d1
                      (C:\Users\bhrou\gi):03112                                                                       *         rts
                      (C:\Users\bhrou\gi):03113                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03114                                                                       * 
                      (C:\Users\bhrou\gi):03115                                                                       * ; Checks a 16x16 block to find solid ground or ceiling. May check an additional
                      (C:\Users\bhrou\gi):03116                                                                       * ; 16x16 block up for ceilings.
                      (C:\Users\bhrou\gi):03117                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):03118                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):03119                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):03120                                                                       * ; d6 = $0000 for no flip, $0800 for vertical flip
                      (C:\Users\bhrou\gi):03121                                                                       * ; a4 = pointer to angle buffer
                      (C:\Users\bhrou\gi):03122                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):03123                                                                       * ; returns distance in d1
                      (C:\Users\bhrou\gi):03124                                                                       * ; returns angle in (a4)
                      (C:\Users\bhrou\gi):03125                                                                       * 
                      (C:\Users\bhrou\gi):03126                                                                       * ; loc_1E910: Obj_CheckInFloor:
                      (C:\Users\bhrou\gi):03127                                                                       * Ring_FindFloor:
                      (C:\Users\bhrou\gi):03128                                                                       *         bsr.w   Find_Tile
                      (C:\Users\bhrou\gi):03129                                                                       *         move.w  (a1),d0
                      (C:\Users\bhrou\gi):03130                                                                       *         move.w  d0,d4
                      (C:\Users\bhrou\gi):03131                                                                       *         andi.w  #$3FF,d0
                      (C:\Users\bhrou\gi):03132                                                                       *         beq.s   loc_1E922
                      (C:\Users\bhrou\gi):03133                                                                       *         btst    d5,d4
                      (C:\Users\bhrou\gi):03134                                                                       *         bne.s   loc_1E928
                      (C:\Users\bhrou\gi):03135                                                                       * 
                      (C:\Users\bhrou\gi):03136                                                                       * loc_1E922:
                      (C:\Users\bhrou\gi):03137                                                                       *         move.w  #$10,d1
                      (C:\Users\bhrou\gi):03138                                                                       *         rts
                      (C:\Users\bhrou\gi):03139                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03140                                                                       * 
                      (C:\Users\bhrou\gi):03141                                                                       * loc_1E928:
                      (C:\Users\bhrou\gi):03142                                                                       *         movea.l (Collision_addr).w,a2
                      (C:\Users\bhrou\gi):03143                                                                       *         move.b  (a2,d0.w),d0
                      (C:\Users\bhrou\gi):03144                                                                       *         andi.w  #$FF,d0
                      (C:\Users\bhrou\gi):03145                                                                       *         beq.s   loc_1E922
                      (C:\Users\bhrou\gi):03146                                                                       *         lea     (ColCurveMap).l,a2
                      (C:\Users\bhrou\gi):03147                                                                       *         move.b  (a2,d0.w),(a4)
                      (C:\Users\bhrou\gi):03148                                                                       *         lsl.w   #4,d0
                      (C:\Users\bhrou\gi):03149                                                                       *         move.w  d3,d1
                      (C:\Users\bhrou\gi):03150                                                                       *         btst    #$A,d4
                      (C:\Users\bhrou\gi):03151                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03152                                                                       *         not.w   d1
                      (C:\Users\bhrou\gi):03153                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03154                                                                       * +
                      (C:\Users\bhrou\gi):03155                                                                       *         btst    #$B,d4
                      (C:\Users\bhrou\gi):03156                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03157                                                                       *         addi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03158                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03159                                                                       *         subi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03160                                                                       * +
                      (C:\Users\bhrou\gi):03161                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03162                                                                       *         add.w   d0,d1
                      (C:\Users\bhrou\gi):03163                                                                       *         lea     (ColArray).l,a2
                      (C:\Users\bhrou\gi):03164                                                                       *         move.b  (a2,d1.w),d0
                      (C:\Users\bhrou\gi):03165                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03166                                                                       *         eor.w   d6,d4
                      (C:\Users\bhrou\gi):03167                                                                       *         btst    #$B,d4
                      (C:\Users\bhrou\gi):03168                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03169                                                                       *         neg.w   d0
                      (C:\Users\bhrou\gi):03170                                                                       * +
                      (C:\Users\bhrou\gi):03171                                                                       *         tst.w   d0
                      (C:\Users\bhrou\gi):03172                                                                       *         beq.s   loc_1E922
                      (C:\Users\bhrou\gi):03173                                                                       *         bmi.s   loc_1E996
                      (C:\Users\bhrou\gi):03174                                                                       *         cmpi.b  #$10,d0
                      (C:\Users\bhrou\gi):03175                                                                       *         beq.s   loc_1E9A2
                      (C:\Users\bhrou\gi):03176                                                                       *         move.w  d2,d1
                      (C:\Users\bhrou\gi):03177                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03178                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03179                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03180                                                                       *         sub.w   d0,d1
                      (C:\Users\bhrou\gi):03181                                                                       *         rts
                      (C:\Users\bhrou\gi):03182                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03183                                                                       * 
                      (C:\Users\bhrou\gi):03184                                                                       * loc_1E996:
                      (C:\Users\bhrou\gi):03185                                                                       *         move.w  d2,d1
                      (C:\Users\bhrou\gi):03186                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03187                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03188                                                                       *         bpl.w   loc_1E922
                      (C:\Users\bhrou\gi):03189                                                                       * 
                      (C:\Users\bhrou\gi):03190                                                                       * loc_1E9A2:
                      (C:\Users\bhrou\gi):03191                                                                       *         sub.w   a3,d2
                      (C:\Users\bhrou\gi):03192                                                                       *         bsr.w   FindFloor2
                      (C:\Users\bhrou\gi):03193                                                                       *         add.w   a3,d2
                      (C:\Users\bhrou\gi):03194                                                                       *         subi.w  #$10,d1
                      (C:\Users\bhrou\gi):03195                                                                       *         rts
                      (C:\Users\bhrou\gi):03196                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03197                                                                       * 
                      (C:\Users\bhrou\gi):03198                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03199                                                                       * 
                      (C:\Users\bhrou\gi):03200                                                                       * ; Scans horizontally for up to 2 16x16 blocks to find solid walls.
                      (C:\Users\bhrou\gi):03201                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):03202                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):03203                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):03204                                                                       * ; d6 = $0000 for no flip, $0400 for horizontal flip
                      (C:\Users\bhrou\gi):03205                                                                       * ; a3 = delta-x for next location to check if current one is empty
                      (C:\Users\bhrou\gi):03206                                                                       * ; a4 = pointer to angle buffer
                      (C:\Users\bhrou\gi):03207                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):03208                                                                       * ; returns distance to left/right in d1
                      (C:\Users\bhrou\gi):03209                                                                       * ; returns angle in (a4)
                      (C:\Users\bhrou\gi):03210                                                                       * 
                      (C:\Users\bhrou\gi):03211                                                                       * ; loc_1E9B0:
                      (C:\Users\bhrou\gi):03212                                                                       * FindWall:
                      (C:\Users\bhrou\gi):03213                                                                       *         bsr.w   Find_Tile
                      (C:\Users\bhrou\gi):03214                                                                       *         move.w  (a1),d0
                      (C:\Users\bhrou\gi):03215                                                                       *         move.w  d0,d4
                      (C:\Users\bhrou\gi):03216                                                                       *         andi.w  #$3FF,d0        ; plain blockID
                      (C:\Users\bhrou\gi):03217                                                                       *         beq.s   loc_1E9C2       ; no collision
                      (C:\Users\bhrou\gi):03218                                                                       *         btst    d5,d4
                      (C:\Users\bhrou\gi):03219                                                                       *         bne.s   loc_1E9D0
                      (C:\Users\bhrou\gi):03220                                                                       * 
                      (C:\Users\bhrou\gi):03221                                                                       * loc_1E9C2:
                      (C:\Users\bhrou\gi):03222                                                                       *         add.w   a3,d3
                      (C:\Users\bhrou\gi):03223                                                                       *         bsr.w   FindWall2
                      (C:\Users\bhrou\gi):03224                                                                       *         sub.w   a3,d3
                      (C:\Users\bhrou\gi):03225                                                                       *         addi.w  #$10,d1
                      (C:\Users\bhrou\gi):03226                                                                       *         rts
                      (C:\Users\bhrou\gi):03227                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03228                                                                       * 
                      (C:\Users\bhrou\gi):03229                                                                       * loc_1E9D0:
                      (C:\Users\bhrou\gi):03230                                                                       *         movea.l (Collision_addr).w,a2
                      (C:\Users\bhrou\gi):03231                                                                       *         move.b  (a2,d0.w),d0
                      (C:\Users\bhrou\gi):03232                                                                       *         andi.w  #$FF,d0 ; relevant collisionArrayEntry
                      (C:\Users\bhrou\gi):03233                                                                       *         beq.s   loc_1E9C2
                      (C:\Users\bhrou\gi):03234                                                                       *         lea     (ColCurveMap).l,a2
                      (C:\Users\bhrou\gi):03235                                                                       *         move.b  (a2,d0.w),(a4)
                      (C:\Users\bhrou\gi):03236                                                                       *         lsl.w   #4,d0   ; offset in collision array
                      (C:\Users\bhrou\gi):03237                                                                       *         move.w  d2,d1   ; y
                      (C:\Users\bhrou\gi):03238                                                                       *         btst    #$B,d4  ; y-mirror?
                      (C:\Users\bhrou\gi):03239                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03240                                                                       *         not.w   d1
                      (C:\Users\bhrou\gi):03241                                                                       *         addi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03242                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03243                                                                       *         subi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03244                                                                       * +
                      (C:\Users\bhrou\gi):03245                                                                       *         btst    #$A,d4  ; x-mirror?
                      (C:\Users\bhrou\gi):03246                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03247                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03248                                                                       * +
                      (C:\Users\bhrou\gi):03249                                                                       *         andi.w  #$F,d1  ; y
                      (C:\Users\bhrou\gi):03250                                                                       *         add.w   d0,d1   ; line to look up
                      (C:\Users\bhrou\gi):03251                                                                       *         lea     (ColArray2).l,a2        ; rotated collision array
                      (C:\Users\bhrou\gi):03252                                                                       *         move.b  (a2,d1.w),d0    ; collision value
                      (C:\Users\bhrou\gi):03253                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03254                                                                       *         eor.w   d6,d4   ; set x-flip flag if from the right
                      (C:\Users\bhrou\gi):03255                                                                       *         btst    #$A,d4  ; x-mirror?
                      (C:\Users\bhrou\gi):03256                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03257                                                                       *         neg.w   d0
                      (C:\Users\bhrou\gi):03258                                                                       * +
                      (C:\Users\bhrou\gi):03259                                                                       *         tst.w   d0
                      (C:\Users\bhrou\gi):03260                                                                       *         beq.s   loc_1E9C2
                      (C:\Users\bhrou\gi):03261                                                                       *         bmi.s   loc_1EA3E
                      (C:\Users\bhrou\gi):03262                                                                       *         cmpi.b  #$10,d0
                      (C:\Users\bhrou\gi):03263                                                                       *         beq.s   loc_1EA4A
                      (C:\Users\bhrou\gi):03264                                                                       *         move.w  d3,d1   ; x
                      (C:\Users\bhrou\gi):03265                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03266                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03267                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03268                                                                       *         sub.w   d0,d1
                      (C:\Users\bhrou\gi):03269                                                                       *         rts
                      (C:\Users\bhrou\gi):03270                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03271                                                                       * 
                      (C:\Users\bhrou\gi):03272                                                                       * loc_1EA3E:
                      (C:\Users\bhrou\gi):03273                                                                       *         move.w  d3,d1
                      (C:\Users\bhrou\gi):03274                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03275                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03276                                                                       *         bpl.w   loc_1E9C2       ; no collision
                      (C:\Users\bhrou\gi):03277                                                                       * 
                      (C:\Users\bhrou\gi):03278                                                                       * loc_1EA4A:
                      (C:\Users\bhrou\gi):03279                                                                       *         sub.w   a3,d3
                      (C:\Users\bhrou\gi):03280                                                                       *         bsr.w   FindWall2
                      (C:\Users\bhrou\gi):03281                                                                       *         add.w   a3,d3
                      (C:\Users\bhrou\gi):03282                                                                       *         subi.w  #$10,d1
                      (C:\Users\bhrou\gi):03283                                                                       *         rts
                      (C:\Users\bhrou\gi):03284                                                                       * ; End of function FindWall
                      (C:\Users\bhrou\gi):03285                                                                       * 
                      (C:\Users\bhrou\gi):03286                                                                       * 
                      (C:\Users\bhrou\gi):03287                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03288                                                                       * 
                      (C:\Users\bhrou\gi):03289                                                                       * ; Checks a 16x16 blocks to find solid walls.
                      (C:\Users\bhrou\gi):03290                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):03291                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):03292                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):03293                                                                       * ; d6 = $0000 for no flip, $0400 for horizontal flip
                      (C:\Users\bhrou\gi):03294                                                                       * ; a4 = pointer to angle buffer
                      (C:\Users\bhrou\gi):03295                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):03296                                                                       * ; returns distance to left/right in d1
                      (C:\Users\bhrou\gi):03297                                                                       * ; returns angle in (a4)
                      (C:\Users\bhrou\gi):03298                                                                       * 
                      (C:\Users\bhrou\gi):03299                                                                       * ; loc_1EA58:
                      (C:\Users\bhrou\gi):03300                                                                       * FindWall2:
                      (C:\Users\bhrou\gi):03301                                                                       *         bsr.w   Find_Tile
                      (C:\Users\bhrou\gi):03302                                                                       *         move.w  (a1),d0
                      (C:\Users\bhrou\gi):03303                                                                       *         move.w  d0,d4
                      (C:\Users\bhrou\gi):03304                                                                       *         andi.w  #$3FF,d0
                      (C:\Users\bhrou\gi):03305                                                                       *         beq.s   loc_1EA6A
                      (C:\Users\bhrou\gi):03306                                                                       *         btst    d5,d4
                      (C:\Users\bhrou\gi):03307                                                                       *         bne.s   loc_1EA78
                      (C:\Users\bhrou\gi):03308                                                                       * 
                      (C:\Users\bhrou\gi):03309                                                                       * loc_1EA6A:
                      (C:\Users\bhrou\gi):03310                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03311                                                                       *         move.w  d3,d0
                      (C:\Users\bhrou\gi):03312                                                                       *         andi.w  #$F,d0
                      (C:\Users\bhrou\gi):03313                                                                       *         sub.w   d0,d1
                      (C:\Users\bhrou\gi):03314                                                                       *         rts
                      (C:\Users\bhrou\gi):03315                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03316                                                                       * 
                      (C:\Users\bhrou\gi):03317                                                                       * loc_1EA78:
                      (C:\Users\bhrou\gi):03318                                                                       *         movea.l (Collision_addr).w,a2
                      (C:\Users\bhrou\gi):03319                                                                       *         move.b  (a2,d0.w),d0
                      (C:\Users\bhrou\gi):03320                                                                       *         andi.w  #$FF,d0
                      (C:\Users\bhrou\gi):03321                                                                       *         beq.s   loc_1EA6A
                      (C:\Users\bhrou\gi):03322                                                                       *         lea     (ColCurveMap).l,a2
                      (C:\Users\bhrou\gi):03323                                                                       *         move.b  (a2,d0.w),(a4)
                      (C:\Users\bhrou\gi):03324                                                                       *         lsl.w   #4,d0
                      (C:\Users\bhrou\gi):03325                                                                       *         move.w  d2,d1
                      (C:\Users\bhrou\gi):03326                                                                       *         btst    #$B,d4
                      (C:\Users\bhrou\gi):03327                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03328                                                                       *         not.w   d1
                      (C:\Users\bhrou\gi):03329                                                                       *         addi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03330                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03331                                                                       *         subi.b  #$40,(a4)
                      (C:\Users\bhrou\gi):03332                                                                       * +
                      (C:\Users\bhrou\gi):03333                                                                       *         btst    #$A,d4
                      (C:\Users\bhrou\gi):03334                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03335                                                                       *         neg.b   (a4)
                      (C:\Users\bhrou\gi):03336                                                                       * +
                      (C:\Users\bhrou\gi):03337                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03338                                                                       *         add.w   d0,d1
                      (C:\Users\bhrou\gi):03339                                                                       *         lea     (ColArray2).l,a2
                      (C:\Users\bhrou\gi):03340                                                                       *         move.b  (a2,d1.w),d0
                      (C:\Users\bhrou\gi):03341                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03342                                                                       *         eor.w   d6,d4
                      (C:\Users\bhrou\gi):03343                                                                       *         btst    #$A,d4
                      (C:\Users\bhrou\gi):03344                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03345                                                                       *         neg.w   d0
                      (C:\Users\bhrou\gi):03346                                                                       * +
                      (C:\Users\bhrou\gi):03347                                                                       *         tst.w   d0
                      (C:\Users\bhrou\gi):03348                                                                       *         beq.s   loc_1EA6A
                      (C:\Users\bhrou\gi):03349                                                                       *         bmi.s   loc_1EAE0
                      (C:\Users\bhrou\gi):03350                                                                       *         move.w  d3,d1
                      (C:\Users\bhrou\gi):03351                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03352                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03353                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03354                                                                       *         sub.w   d0,d1
                      (C:\Users\bhrou\gi):03355                                                                       *         rts
                      (C:\Users\bhrou\gi):03356                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03357                                                                       * 
                      (C:\Users\bhrou\gi):03358                                                                       * loc_1EAE0:
                      (C:\Users\bhrou\gi):03359                                                                       *         move.w  d3,d1
                      (C:\Users\bhrou\gi):03360                                                                       *         andi.w  #$F,d1
                      (C:\Users\bhrou\gi):03361                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):03362                                                                       *         bpl.w   loc_1EA6A
                      (C:\Users\bhrou\gi):03363                                                                       *         not.w   d1
                      (C:\Users\bhrou\gi):03364                                                                       *         rts
                      (C:\Users\bhrou\gi):03365                                                                       * ; End of function FindWall2
                      (C:\Users\bhrou\gi):03366                                                                       * 
                      (C:\Users\bhrou\gi):03367                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03368                                                                       * ; The subroutine appears to convert the collision array from an unknown
                      (C:\Users\bhrou\gi):03369                                                                       * ; 'raw' format to its current format, and write it to ROM, overwritting
                      (C:\Users\bhrou\gi):03370                                                                       * ; the original. This doesn't work on standard read-only cartridges, and
                      (C:\Users\bhrou\gi):03371                                                                       * ; would instead require a special dev cartridge.
                      (C:\Users\bhrou\gi):03372                                                                       * ; This subroutine exists in Sonic 1 as well, but was oddly changed in
                      (C:\Users\bhrou\gi):03373                                                                       * ; the S2 Nick Arcade prototype to just handle loading GHZ's collision
                      (C:\Users\bhrou\gi):03374                                                                       * ; instead (though it too is dummied out, hence collision being broken).
                      (C:\Users\bhrou\gi):03375                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03376                                                                       * 
                      (C:\Users\bhrou\gi):03377                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03378                                                                       * 
                      (C:\Users\bhrou\gi):03379                                                                       * ; return_1EAF0: FloorLog_Unk:
                      (C:\Users\bhrou\gi):03380                                                                       * ConvertCollisionArray:
                      (C:\Users\bhrou\gi):03381                                                                       *         rts
                      (C:\Users\bhrou\gi):03382                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03383                                                                       *         lea     (ColArray).l,a1 ; Source location of 'raw' collision array
                      (C:\Users\bhrou\gi):03384                                                                       *         lea     (ColArray).l,a2 ; Destinatation of converted collision array (overwrites the original)
                      (C:\Users\bhrou\gi):03385                                                                       * 
                      (C:\Users\bhrou\gi):03386                                                                       *         move.w  #$100-1,d3      ; Number of blocks in collision array
                      (C:\Users\bhrou\gi):03387                                                                       * .blockLoop:
                      (C:\Users\bhrou\gi):03388                                                                       *         moveq   #16,d5          ; Start on the 16th bit (the leftmost pixel)
                      (C:\Users\bhrou\gi):03389                                                                       * 
                      (C:\Users\bhrou\gi):03390                                                                       *         move.w  #16-1,d2        ; Width of a block in pixels
                      (C:\Users\bhrou\gi):03391                                                                       * .columnLoop:
                      (C:\Users\bhrou\gi):03392                                                                       *         moveq   #0,d4
                      (C:\Users\bhrou\gi):03393                                                                       * 
                      (C:\Users\bhrou\gi):03394                                                                       *         ; It seems the 'raw' format stored the collision of each pixel in rows.
                      (C:\Users\bhrou\gi):03395                                                                       *         ; This block of code changes it from rows to columns, so each word contains
                      (C:\Users\bhrou\gi):03396                                                                       *         ; a bit for each pixel in a column.
                      (C:\Users\bhrou\gi):03397                                                                       *         move.w  #16-1,d1        ; Height of a block in pixels
                      (C:\Users\bhrou\gi):03398                                                                       * .rowLoop:
                      (C:\Users\bhrou\gi):03399                                                                       *         move.w  (a1)+,d0        ; Get row of collision bits
                      (C:\Users\bhrou\gi):03400                                                                       *         lsr.l   d5,d0           ; Push the selected bit of this row into the 'eXtend' flag
                      (C:\Users\bhrou\gi):03401                                                                       *         addx.w  d4,d4           ; Shift d4 to the left, and insert the selected bit into bit 0
                      (C:\Users\bhrou\gi):03402                                                                       *         dbf     d1,.rowLoop     ; Loop for each row of pixels in a block
                      (C:\Users\bhrou\gi):03403                                                                       * 
                      (C:\Users\bhrou\gi):03404                                                                       *         move.w  d4,(a2)+        ; Store column of collision bits
                      (C:\Users\bhrou\gi):03405                                                                       *         suba.w  #2*16,a1        ; Back to the start of the block
                      (C:\Users\bhrou\gi):03406                                                                       *         subq.w  #1,d5           ; Get next bit in the row
                      (C:\Users\bhrou\gi):03407                                                                       *         dbf     d2,.columnLoop  ; Loop for each column of pixels in a block
                      (C:\Users\bhrou\gi):03408                                                                       * 
                      (C:\Users\bhrou\gi):03409                                                                       *         adda.w  #2*16,a1        ; Next block
                      (C:\Users\bhrou\gi):03410                                                                       *         dbf     d3,.blockLoop   ; Loop for each block in the collision array
                      (C:\Users\bhrou\gi):03411                                                                       * 
                      (C:\Users\bhrou\gi):03412                                                                       *         lea     (ColArray).l,a1
                      (C:\Users\bhrou\gi):03413                                                                       *         lea     (ColArray2).l,a2        ; Write converted collision array to location of rotated collison array
                      (C:\Users\bhrou\gi):03414                                                                       *         bsr.s   .convertArrayToStandardFormat
                      (C:\Users\bhrou\gi):03415                                                                       *         lea     (ColArray).l,a1
                      (C:\Users\bhrou\gi):03416                                                                       *         lea     (ColArray).l,a2         ; Write converted collision array to location of normal collison array
                      (C:\Users\bhrou\gi):03417                                                                       * 
                      (C:\Users\bhrou\gi):03418                                                                       * ; loc_1EB46: FloorLog_Unk2:
                      (C:\Users\bhrou\gi):03419                                                                       * .convertArrayToStandardFormat:
                      (C:\Users\bhrou\gi):03420                                                                       *         move.w  #$1000-1,d3     ; Size of the collision array
                      (C:\Users\bhrou\gi):03421                                                                       * 
                      (C:\Users\bhrou\gi):03422                                                                       * .processCollisionArrayLoop:
                      (C:\Users\bhrou\gi):03423                                                                       *         moveq   #0,d2
                      (C:\Users\bhrou\gi):03424                                                                       *         move.w  #$F,d1
                      (C:\Users\bhrou\gi):03425                                                                       *         move.w  (a1)+,d0        ; Get current column of collision pixels
                      (C:\Users\bhrou\gi):03426                                                                       *         beq.s   .noCollision    ; Branch if there's no collision in this column
                      (C:\Users\bhrou\gi):03427                                                                       *         bmi.s   .topPixelSolid  ; Branch if top pixel of collision is solid
                      (C:\Users\bhrou\gi):03428                                                                       * 
                      (C:\Users\bhrou\gi):03429                                                                       *         ; Here we count, starting from the bottom, how many pixels tall
                      (C:\Users\bhrou\gi):03430                                                                       *         ; the collision in this column is.
                      (C:\Users\bhrou\gi):03431                                                                       * .processColumnLoop1:
                      (C:\Users\bhrou\gi):03432                                                                       *         lsr.w   #1,d0
                      (C:\Users\bhrou\gi):03433                                                                       *         bcc.s   .pixelNotSolid1
                      (C:\Users\bhrou\gi):03434                                                                       *         addq.b  #1,d2
                      (C:\Users\bhrou\gi):03435                                                                       * .pixelNotSolid1:
                      (C:\Users\bhrou\gi):03436                                                                       *         dbf     d1,.processColumnLoop1
                      (C:\Users\bhrou\gi):03437                                                                       * 
                      (C:\Users\bhrou\gi):03438                                                                       *         bra.s   .columnProcessed
                      (C:\Users\bhrou\gi):03439                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03440                                                                       * .topPixelSolid:
                      (C:\Users\bhrou\gi):03441                                                                       *         cmpi.w  #$FFFF,d0               ; Is entire column solid?
                      (C:\Users\bhrou\gi):03442                                                                       *         beq.s   .entireColumnSolid      ; Branch if so
                      (C:\Users\bhrou\gi):03443                                                                       * 
                      (C:\Users\bhrou\gi):03444                                                                       *         ; Here we count, starting from the top, how many pixels tall
                      (C:\Users\bhrou\gi):03445                                                                       *         ; the collision in this column is (the resulting number is negative).
                      (C:\Users\bhrou\gi):03446                                                                       * .processColumnLoop2:
                      (C:\Users\bhrou\gi):03447                                                                       *         lsl.w   #1,d0
                      (C:\Users\bhrou\gi):03448                                                                       *         bcc.s   .pixelNotSolid2
                      (C:\Users\bhrou\gi):03449                                                                       *         subq.b  #1,d2
                      (C:\Users\bhrou\gi):03450                                                                       * .pixelNotSolid2:
                      (C:\Users\bhrou\gi):03451                                                                       *         dbf     d1,.processColumnLoop2
                      (C:\Users\bhrou\gi):03452                                                                       * 
                      (C:\Users\bhrou\gi):03453                                                                       *         bra.s   .columnProcessed
                      (C:\Users\bhrou\gi):03454                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03455                                                                       * .entireColumnSolid:
                      (C:\Users\bhrou\gi):03456                                                                       *         move.w  #16,d0
                      (C:\Users\bhrou\gi):03457                                                                       * 
                      (C:\Users\bhrou\gi):03458                                                                       * ; loc_1EB78:
                      (C:\Users\bhrou\gi):03459                                                                       * .noCollision:
                      (C:\Users\bhrou\gi):03460                                                                       *         move.w  d0,d2
                      (C:\Users\bhrou\gi):03461                                                                       * 
                      (C:\Users\bhrou\gi):03462                                                                       * ; loc_1EB7A:
                      (C:\Users\bhrou\gi):03463                                                                       * .columnProcessed:
                      (C:\Users\bhrou\gi):03464                                                                       *         move.b  d2,(a2)+        ; Store column collision height to ROM
                      (C:\Users\bhrou\gi):03465                                                                       *         dbf     d3,.processCollisionArrayLoop
                      (C:\Users\bhrou\gi):03466                                                                       * 
                      (C:\Users\bhrou\gi):03467                                                                       *         rts
                      (C:\Users\bhrou\gi):03468                                                                       * 
                      (C:\Users\bhrou\gi):03469                                                                       * ; End of function ConvertCollisionArray
                      (C:\Users\bhrou\gi):03470                                                                       * 
                      (C:\Users\bhrou\gi):03471                                                                       *     if gameRevision<2
                      (C:\Users\bhrou\gi):03472                                                                       *         nop
                      (C:\Users\bhrou\gi):03473                                                                       *     endif
                      (C:\Users\bhrou\gi):03474                                                                       * 
                      (C:\Users\bhrou\gi):03475                                                                       * 
                      (C:\Users\bhrou\gi):03476                                                                       * 
                      (C:\Users\bhrou\gi):03477                                                                       * 
                      (C:\Users\bhrou\gi):03478                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03479                                                                       * ; Subroutine to calculate how much space is in front of Sonic or Tails on the ground
                      (C:\Users\bhrou\gi):03480                                                                       * ; d0 = some input angle
                      (C:\Users\bhrou\gi):03481                                                                       * ; d1 = output about how many pixels (up to some high enough amount)
                      (C:\Users\bhrou\gi):03482                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03483                                                                       * 
                      (C:\Users\bhrou\gi):03484                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03485                                                                       * 
                      (C:\Users\bhrou\gi):03486                                                                       * ; loc_1EB84: Sonic_WalkSpeed:
                      (C:\Users\bhrou\gi):03487                                                                       * CalcRoomInFront:
                      (C:\Users\bhrou\gi):03488                                                                       *         move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03489                                                                       *         cmpi.b  #$C,top_solid_bit(a0)
                      (C:\Users\bhrou\gi):03490                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03491                                                                       *         move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03492                                                                       * +
                      (C:\Users\bhrou\gi):03493                                                                       *         move.b  lrb_solid_bit(a0),d5                    ; Want walls or ceilings
                      (C:\Users\bhrou\gi):03494                                                                       *         move.l  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03495                                                                       *         move.l  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03496                                                                       *         move.w  x_vel(a0),d1
                      (C:\Users\bhrou\gi):03497                                                                       *         ext.l   d1
                      (C:\Users\bhrou\gi):03498                                                                       *         asl.l   #8,d1
                      (C:\Users\bhrou\gi):03499                                                                       *         add.l   d1,d3
                      (C:\Users\bhrou\gi):03500                                                                       *         move.w  y_vel(a0),d1
                      (C:\Users\bhrou\gi):03501                                                                       *         ext.l   d1
                      (C:\Users\bhrou\gi):03502                                                                       *         asl.l   #8,d1
                      (C:\Users\bhrou\gi):03503                                                                       *         add.l   d1,d2
                      (C:\Users\bhrou\gi):03504                                                                       *         swap    d2
                      (C:\Users\bhrou\gi):03505                                                                       *         swap    d3
                      (C:\Users\bhrou\gi):03506                                                                       *         move.b  d0,(Primary_Angle).w
                      (C:\Users\bhrou\gi):03507                                                                       *         move.b  d0,(Secondary_Angle).w
                      (C:\Users\bhrou\gi):03508                                                                       *         move.b  d0,d1
                      (C:\Users\bhrou\gi):03509                                                                       *         addi.b  #$20,d0
                      (C:\Users\bhrou\gi):03510                                                                       *         bpl.s   loc_1EBDC
                      (C:\Users\bhrou\gi):03511                                                                       * 
                      (C:\Users\bhrou\gi):03512                                                                       *         move.b  d1,d0
                      (C:\Users\bhrou\gi):03513                                                                       *         bpl.s   +
                      (C:\Users\bhrou\gi):03514                                                                       *         subq.b  #1,d0
                      (C:\Users\bhrou\gi):03515                                                                       * +
                      (C:\Users\bhrou\gi):03516                                                                       *         addi.b  #$20,d0
                      (C:\Users\bhrou\gi):03517                                                                       *         bra.s   loc_1EBE6
                      (C:\Users\bhrou\gi):03518                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03519                                                                       * loc_1EBDC:
                      (C:\Users\bhrou\gi):03520                                                                       *         move.b  d1,d0
                      (C:\Users\bhrou\gi):03521                                                                       *         bpl.s   +
                      (C:\Users\bhrou\gi):03522                                                                       *         addq.b  #1,d0
                      (C:\Users\bhrou\gi):03523                                                                       * +
                      (C:\Users\bhrou\gi):03524                                                                       *         addi.b  #$1F,d0
                      (C:\Users\bhrou\gi):03525                                                                       * 
                      (C:\Users\bhrou\gi):03526                                                                       * loc_1EBE6:
                      (C:\Users\bhrou\gi):03527                                                                       *         andi.b  #$C0,d0
                      (C:\Users\bhrou\gi):03528                                                                       *         beq.w   CheckFloorDist_Part2            ; Player is going mostly down
                      (C:\Users\bhrou\gi):03529                                                                       *         cmpi.b  #$80,d0
                      (C:\Users\bhrou\gi):03530                                                                       *         beq.w   CheckCeilingDist_Part2          ; Player is going mostly up
                      (C:\Users\bhrou\gi):03531                                                                       *         andi.b  #$38,d1
                      (C:\Users\bhrou\gi):03532                                                                       *         bne.s   +
                      (C:\Users\bhrou\gi):03533                                                                       *         addq.w  #8,d2
                      (C:\Users\bhrou\gi):03534                                                                       * +
                      (C:\Users\bhrou\gi):03535                                                                       *         cmpi.b  #$40,d0
                      (C:\Users\bhrou\gi):03536                                                                       *         beq.w   CheckLeftWallDist_Part2         ; Player is going mostly left
                      (C:\Users\bhrou\gi):03537                                                                       *         bra.w   CheckRightWallDist_Part2        ; Player is going mostly right
                      (C:\Users\bhrou\gi):03538                                                                       * 
                      (C:\Users\bhrou\gi):03539                                                                       * ; End of function CalcRoomInFront
                      (C:\Users\bhrou\gi):03540                                                                       * 
                      (C:\Users\bhrou\gi):03541                                                                       * 
                      (C:\Users\bhrou\gi):03542                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03543                                                                       * ; Subroutine to calculate how much space is empty above Sonic's/Tails' head
                      (C:\Users\bhrou\gi):03544                                                                       * ; d0 = input angle perpendicular to the spine
                      (C:\Users\bhrou\gi):03545                                                                       * ; d1 = output about how many pixels are overhead (up to some high enough amount)
                      (C:\Users\bhrou\gi):03546                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03547                                                                       * 
                      (C:\Users\bhrou\gi):03548                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03549                                                                       * 
                      (C:\Users\bhrou\gi):03550                                                                       * ; sub_1EC0A:
2FBE                  (C:\Users\bhrou\gi):03551                 CalcRoomOverHead                                      * CalcRoomOverHead:
                      (C:\Users\bhrou\gi):03552                                                                       *         move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03553                                                                       *         cmpi.b  #$C,top_solid_bit(a0)
                      (C:\Users\bhrou\gi):03554                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03555                                                                       *         move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03556                                                                       * +
                      (C:\Users\bhrou\gi):03557                                                                       *         move.b  lrb_solid_bit(a0),d5
                      (C:\Users\bhrou\gi):03558                                                                       *         move.b  d0,(Primary_Angle).w
                      (C:\Users\bhrou\gi):03559                                                                       *         move.b  d0,(Secondary_Angle).w
                      (C:\Users\bhrou\gi):03560                                                                       *         addi.b  #$20,d0
                      (C:\Users\bhrou\gi):03561                                                                       *         andi.b  #$C0,d0
                      (C:\Users\bhrou\gi):03562                                                                       *         cmpi.b  #$40,d0
                      (C:\Users\bhrou\gi):03563                                                                       *         beq.w   CheckLeftCeilingDist
                      (C:\Users\bhrou\gi):03564                                                                       *         cmpi.b  #$80,d0
                      (C:\Users\bhrou\gi):03565                                                                       *         beq.w   Sonic_CheckCeiling
                      (C:\Users\bhrou\gi):03566                                                                       *         cmpi.b  #$C0,d0
                      (C:\Users\bhrou\gi):03567                                                                       *         beq.w   CheckRightCeilingDist
                      (C:\Users\bhrou\gi):03568                                                                       * 
                      (C:\Users\bhrou\gi):03569                                                                       * ; End of function CalcRoomOverHead
                      (C:\Users\bhrou\gi):03570                                                                       * 
                      (C:\Users\bhrou\gi):03571                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03572                                                                       * ; Subroutine to check if Sonic/Tails is near the floor
                      (C:\Users\bhrou\gi):03573                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03574                                                                       * 
                      (C:\Users\bhrou\gi):03575                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03576                                                                       * 
                      (C:\Users\bhrou\gi):03577                                                                       * ; loc_1EC4E: Sonic_HitFloor:
2FBE                  (C:\Users\bhrou\gi):03578                 Sonic_CheckFloor                                      * Sonic_CheckFloor:
                      (C:\Users\bhrou\gi):03579                                                                       *         move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03580                                                                       *         cmpi.b  #$C,top_solid_bit(a0)
                      (C:\Users\bhrou\gi):03581                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03582                                                                       *         move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03583                                                                       * +
                      (C:\Users\bhrou\gi):03584                                                                       *         move.b  top_solid_bit(a0),d5
                      (C:\Users\bhrou\gi):03585                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03586                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03587                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03588                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03589                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03590                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03591                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):03592                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03593                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):03594                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03595                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03596                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03597                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03598                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):03599                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03600                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03601                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03602                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03603                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03604                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03605                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):03606                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03607                                                                       *         sub.w   d0,d3
                      (C:\Users\bhrou\gi):03608                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):03609                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03610                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03611                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03612                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):03613                                                                       *         move.b  #0,d2
                      (C:\Users\bhrou\gi):03614                                                                       * 
2FBE                  (C:\Users\bhrou\gi):03615                 loc_1ECC6                                             * loc_1ECC6:
                      (C:\Users\bhrou\gi):03616                                                                       *         move.b  (Secondary_Angle).w,d3
                      (C:\Users\bhrou\gi):03617                                                                       *         cmp.w   d0,d1
                      (C:\Users\bhrou\gi):03618                                                                       *         ble.s   loc_1ECD4
                      (C:\Users\bhrou\gi):03619                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03620                                                                       *         exg     d0,d1
                      (C:\Users\bhrou\gi):03621                                                                       * 
2FBE                  (C:\Users\bhrou\gi):03622                 loc_1ECD4                                             * loc_1ECD4:
                      (C:\Users\bhrou\gi):03623                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03624                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03625                                                                       *         move.b  d2,d3
                      (C:\Users\bhrou\gi):03626                                                                       * +
2FBE 39               (C:\Users\bhrou\gi):03627 [5]     4159            rts                                           *         rts
                      (C:\Users\bhrou\gi):03628                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03629                                                                       * 
                      (C:\Users\bhrou\gi):03630                                                                       *         ; a bit of unused/dead code here
                      (C:\Users\bhrou\gi):03631                                                                       * ;CheckFloorDist:
                      (C:\Users\bhrou\gi):03632                                                                       *         move.w  y_pos(a0),d2 ; a0=character
                      (C:\Users\bhrou\gi):03633                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03634                                                                       * 
                      (C:\Users\bhrou\gi):03635                                                                       * ; Checks a 16x16 block to find solid ground. May check an additional
                      (C:\Users\bhrou\gi):03636                                                                       * ; 16x16 block up for ceilings.
                      (C:\Users\bhrou\gi):03637                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):03638                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):03639                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):03640                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):03641                                                                       * ; returns distance in d1
                      (C:\Users\bhrou\gi):03642                                                                       * ; returns angle in d3, or zero if angle was odd
                      (C:\Users\bhrou\gi):03643                                                                       * ;loc_1ECE6:
2FBF                  (C:\Users\bhrou\gi):03644                 CheckFloorDist_Part2                                  * CheckFloorDist_Part2:
                      (C:\Users\bhrou\gi):03645                                                                       *         addi.w  #$A,d2
                      (C:\Users\bhrou\gi):03646                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03647                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03648                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03649                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03650                                                                       *         move.b  #0,d2
                      (C:\Users\bhrou\gi):03651                                                                       * 
                      (C:\Users\bhrou\gi):03652                                                                       * ; d2 what to use as angle if (Primary_Angle).w is odd
                      (C:\Users\bhrou\gi):03653                                                                       * ; returns angle in d3, or value in d2 if angle was odd
2FBF                  (C:\Users\bhrou\gi):03654                 loc_1ECFE                                             * loc_1ECFE:
                      (C:\Users\bhrou\gi):03655                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03656                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03657                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03658                                                                       *         move.b  d2,d3
                      (C:\Users\bhrou\gi):03659                                                                       * +
2FBF 39               (C:\Users\bhrou\gi):03660 [5]     4164            rts                                           *         rts
                      (C:\Users\bhrou\gi):03661                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03662                                                                       * 
                      (C:\Users\bhrou\gi):03663                                                                       *         ; Unused collision checking subroutine
                      (C:\Users\bhrou\gi):03664                                                                       * 
                      (C:\Users\bhrou\gi):03665                                                                       *         move.w  x_pos(a0),d3 ; a0=character
                      (C:\Users\bhrou\gi):03666                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03667                                                                       *         subq.w  #4,d2
                      (C:\Users\bhrou\gi):03668                                                                       *         move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03669                                                                       *         cmpi.b  #$D,lrb_solid_bit(a0)
                      (C:\Users\bhrou\gi):03670                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03671                                                                       *         move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03672                                                                       * +
                      (C:\Users\bhrou\gi):03673                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03674                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):03675                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03676                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03677                                                                       *         move.b  lrb_solid_bit(a0),d5
                      (C:\Users\bhrou\gi):03678                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03679                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03680                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03681                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03682                                                                       *         move.b  #0,d3
                      (C:\Users\bhrou\gi):03683                                                                       * +
                      (C:\Users\bhrou\gi):03684                                                                       *         rts
                      (C:\Users\bhrou\gi):03685                                                                       * 
                      (C:\Users\bhrou\gi):03686                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03687                                                                       * ; loc_1ED56:
2FC0                  (C:\Users\bhrou\gi):03688                 ChkFloorEdge                                          * ChkFloorEdge:
                      (C:\Users\bhrou\gi):03689                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03690                                                                       * ; loc_1ED5A:
2FC0                  (C:\Users\bhrou\gi):03691                 ChkFloorEdge_Part2                                    * ChkFloorEdge_Part2:
                      (C:\Users\bhrou\gi):03692                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03693                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03694                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03695                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03696                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03697                                                                       *         move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03698                                                                       *         cmpi.b  #$C,top_solid_bit(a0)
                      (C:\Users\bhrou\gi):03699                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03700                                                                       *         move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03701                                                                       * +
                      (C:\Users\bhrou\gi):03702                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03703                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):03704                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03705                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03706                                                                       *         move.b  top_solid_bit(a0),d5
                      (C:\Users\bhrou\gi):03707                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03708                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03709                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03710                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03711                                                                       *         move.b  #0,d3
                      (C:\Users\bhrou\gi):03712                                                                       * +
2FC0 39               (C:\Users\bhrou\gi):03713 [5]     4169            rts                                           *         rts
                      (C:\Users\bhrou\gi):03714                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03715                                                                       * ; Identical to ChkFloorEdge except that this uses a1 instead of a0
                      (C:\Users\bhrou\gi):03716                                                                       * ;loc_1EDA8:
2FC1                  (C:\Users\bhrou\gi):03717                 ChkFloorEdge2                                         * ChkFloorEdge2:
                      (C:\Users\bhrou\gi):03718                                                                       *         move.w  x_pos(a1),d3
                      (C:\Users\bhrou\gi):03719                                                                       *         move.w  y_pos(a1),d2
                      (C:\Users\bhrou\gi):03720                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03721                                                                       *         move.b  y_radius(a1),d0
                      (C:\Users\bhrou\gi):03722                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03723                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03724                                                                       *         move.l  #Primary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03725                                                                       *         cmpi.b  #$C,top_solid_bit(a1)
                      (C:\Users\bhrou\gi):03726                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03727                                                                       *         move.l  #Secondary_Collision,(Collision_addr).w
                      (C:\Users\bhrou\gi):03728                                                                       * +
                      (C:\Users\bhrou\gi):03729                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03730                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):03731                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03732                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03733                                                                       *         move.b  top_solid_bit(a1),d5
                      (C:\Users\bhrou\gi):03734                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03735                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03736                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03737                                                                       *         beq.s   return_1EDF8
                      (C:\Users\bhrou\gi):03738                                                                       *         move.b  #0,d3
                      (C:\Users\bhrou\gi):03739                                                                       * 
2FC1                  (C:\Users\bhrou\gi):03740                 return_1EDF8                                          * return_1EDF8:
2FC1 39               (C:\Users\bhrou\gi):03741 [5]     4174            rts                                           *         rts
                      (C:\Users\bhrou\gi):03742                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03743                                                                       * 
                      (C:\Users\bhrou\gi):03744                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03745                                                                       * ; Subroutine checking if an object should interact with the floor
                      (C:\Users\bhrou\gi):03746                                                                       * ; (objects such as a monitor Sonic bumps from underneath)
                      (C:\Users\bhrou\gi):03747                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03748                                                                       * 
                      (C:\Users\bhrou\gi):03749                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03750                                                                       * 
                      (C:\Users\bhrou\gi):03751                                                                       * ; loc_1EDFA: ObjHitFloor:
2FC2                  (C:\Users\bhrou\gi):03752                 ObjCheckFloorDist                                     * ObjCheckFloorDist:
                      (C:\Users\bhrou\gi):03753                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03754                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03755                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03756                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03757                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03758                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03759                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):03760                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03761                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03762                                                                       *         moveq   #$C,d5
                      (C:\Users\bhrou\gi):03763                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03764                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03765                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03766                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03767                                                                       *         move.b  #0,d3
                      (C:\Users\bhrou\gi):03768                                                                       * +
                      (C:\Users\bhrou\gi):03769                                                                       *         rts
                      (C:\Users\bhrou\gi):03770                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03771                                                                       * 
                      (C:\Users\bhrou\gi):03772                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03773                                                                       * ; Collision check used to let the HTZ boss fire attack to hit the ground
                      (C:\Users\bhrou\gi):03774                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03775                                                                       * 
                      (C:\Users\bhrou\gi):03776                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03777                                                                       * 
                      (C:\Users\bhrou\gi):03778                                                                       * ; loc_1EE30:
                      (C:\Users\bhrou\gi):03779                                                                       * FireCheckFloorDist:
                      (C:\Users\bhrou\gi):03780                                                                       *         move.w  x_pos(a1),d3
                      (C:\Users\bhrou\gi):03781                                                                       *         move.w  y_pos(a1),d2
                      (C:\Users\bhrou\gi):03782                                                                       *         move.b  y_radius(a1),d0
                      (C:\Users\bhrou\gi):03783                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03784                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03785                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03786                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):03787                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03788                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03789                                                                       *         moveq   #$C,d5
                      (C:\Users\bhrou\gi):03790                                                                       *         bra.w   FindFloor
                      (C:\Users\bhrou\gi):03791                                                                       * ; End of function FireCheckFloorDist
                      (C:\Users\bhrou\gi):03792                                                                       * 
                      (C:\Users\bhrou\gi):03793                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03794                                                                       * ; Collision check used to let scattered rings bounce on the ground
                      (C:\Users\bhrou\gi):03795                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03796                                                                       * 
                      (C:\Users\bhrou\gi):03797                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03798                                                                       * 
                      (C:\Users\bhrou\gi):03799                                                                       * ; loc_1EE56:
                      (C:\Users\bhrou\gi):03800                                                                       * RingCheckFloorDist:
                      (C:\Users\bhrou\gi):03801                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03802                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03803                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03804                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03805                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03806                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03807                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):03808                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03809                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03810                                                                       *         moveq   #$C,d5
                      (C:\Users\bhrou\gi):03811                                                                       *         bra.w   Ring_FindFloor
                      (C:\Users\bhrou\gi):03812                                                                       * ; End of function RingCheckFloorDist
                      (C:\Users\bhrou\gi):03813                                                                       * 
                      (C:\Users\bhrou\gi):03814                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03815                                                                       * ; Stores a distance to the nearest wall above Sonic/Tails,
                      (C:\Users\bhrou\gi):03816                                                                       * ; where "above" = right, into d1
                      (C:\Users\bhrou\gi):03817                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03818                                                                       * 
                      (C:\Users\bhrou\gi):03819                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03820                                                                       * 
                      (C:\Users\bhrou\gi):03821                                                                       * ; loc_1EE7C:
2FC2                  (C:\Users\bhrou\gi):03822                 CheckRightCeilingDist                                 * CheckRightCeilingDist:
                      (C:\Users\bhrou\gi):03823                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03824                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03825                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03826                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):03827                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03828                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):03829                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03830                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03831                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):03832                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03833                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03834                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03835                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):03836                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):03837                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03838                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03839                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03840                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):03841                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03842                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):03843                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03844                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03845                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):03846                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):03847                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03848                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03849                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):03850                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):03851                                                                       *         move.b  #-$40,d2
                      (C:\Users\bhrou\gi):03852                                                                       *         bra.w   loc_1ECC6
                      (C:\Users\bhrou\gi):03853                                                                       * ; End of function CheckRightCeilingDist
                      (C:\Users\bhrou\gi):03854                                                                       * 
                      (C:\Users\bhrou\gi):03855                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03856                                                                       * ; Stores a distance to the nearest wall on the right of Sonic/Tails into d1
                      (C:\Users\bhrou\gi):03857                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03858                                                                       * 
                      (C:\Users\bhrou\gi):03859                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03860                                                                       * 
                      (C:\Users\bhrou\gi):03861                                                                       * ; Checks a 16x16 block to find solid walls. May check an additional
                      (C:\Users\bhrou\gi):03862                                                                       * ; 16x16 block up for walls.
                      (C:\Users\bhrou\gi):03863                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):03864                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):03865                                                                       * ; returns distance in d1
                      (C:\Users\bhrou\gi):03866                                                                       * ; returns angle in d3, or zero if angle was odd
                      (C:\Users\bhrou\gi):03867                                                                       * ; sub_1EEDC:
                      (C:\Users\bhrou\gi):03868                                                                       * CheckRightWallDist:
                      (C:\Users\bhrou\gi):03869                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03870                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03871                                                                       * ; loc_1EEE4:
                      (C:\Users\bhrou\gi):03872                                                                       * CheckRightWallDist_Part2:
                      (C:\Users\bhrou\gi):03873                                                                       *         addi.w  #$A,d3
                      (C:\Users\bhrou\gi):03874                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03875                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03876                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03877                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):03878                                                                       *         move.b  #$C0,d2
                      (C:\Users\bhrou\gi):03879                                                                       *         bra.w   loc_1ECFE
                      (C:\Users\bhrou\gi):03880                                                                       * ; End of function CheckRightWallDist
                      (C:\Users\bhrou\gi):03881                                                                       * 
                      (C:\Users\bhrou\gi):03882                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03883                                                                       * 
                      (C:\Users\bhrou\gi):03884                                                                       * ; loc_1EF00: ObjCheckLeftWallDist:
                      (C:\Users\bhrou\gi):03885                                                                       * ObjCheckRightWallDist:
                      (C:\Users\bhrou\gi):03886                                                                       *         add.w   x_pos(a0),d3
                      (C:\Users\bhrou\gi):03887                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03888                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03889                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):03890                                                                       *         movea.w #$10,a3
                      (C:\Users\bhrou\gi):03891                                                                       *         move.w  #0,d6
                      (C:\Users\bhrou\gi):03892                                                                       *         moveq   #$D,d5
                      (C:\Users\bhrou\gi):03893                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):03894                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03895                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03896                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03897                                                                       *         move.b  #-$40,d3
                      (C:\Users\bhrou\gi):03898                                                                       * +
                      (C:\Users\bhrou\gi):03899                                                                       *         rts
                      (C:\Users\bhrou\gi):03900                                                                       * ; End of function ObjCheckRightWallDist
                      (C:\Users\bhrou\gi):03901                                                                       * 
                      (C:\Users\bhrou\gi):03902                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03903                                                                       * ; Stores a distance from Sonic/Tails to the nearest ceiling into d1
                      (C:\Users\bhrou\gi):03904                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03905                                                                       * 
                      (C:\Users\bhrou\gi):03906                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03907                                                                       * 
                      (C:\Users\bhrou\gi):03908                                                                       * ; loc_1EF2E: Sonic_DontRunOnWalls: CheckCeilingDist:
2FC2                  (C:\Users\bhrou\gi):03909                 Sonic_CheckCeiling                                    * Sonic_CheckCeiling:
                      (C:\Users\bhrou\gi):03910                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03911                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03912                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03913                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03914                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03915                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):03916                                                                       *         eori.w  #$F,d2 ; flip position upside-down within the current 16x16 block?
                      (C:\Users\bhrou\gi):03917                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):03918                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03919                                                                       *         add.w   d0,d3
                      (C:\Users\bhrou\gi):03920                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03921                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):03922                                                                       *         move.w  #$800,d6
                      (C:\Users\bhrou\gi):03923                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03924                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):03925                                                                       * 
                      (C:\Users\bhrou\gi):03926                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03927                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03928                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03929                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03930                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03931                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):03932                                                                       *         eori.w  #$F,d2
                      (C:\Users\bhrou\gi):03933                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):03934                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03935                                                                       *         sub.w   d0,d3
                      (C:\Users\bhrou\gi):03936                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):03937                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):03938                                                                       *         move.w  #$800,d6
                      (C:\Users\bhrou\gi):03939                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03940                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):03941                                                                       * 
                      (C:\Users\bhrou\gi):03942                                                                       *         move.b  #$80,d2
                      (C:\Users\bhrou\gi):03943                                                                       *         bra.w   loc_1ECC6
                      (C:\Users\bhrou\gi):03944                                                                       * ; End of function Sonic_CheckCeiling
                      (C:\Users\bhrou\gi):03945                                                                       * 
                      (C:\Users\bhrou\gi):03946                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):03947                                                                       *         ; a bit of unused/dead code here
                      (C:\Users\bhrou\gi):03948                                                                       * ;CheckCeilingDist:
                      (C:\Users\bhrou\gi):03949                                                                       *         move.w  y_pos(a0),d2 ; a0=character
                      (C:\Users\bhrou\gi):03950                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03951                                                                       * 
                      (C:\Users\bhrou\gi):03952                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03953                                                                       * 
                      (C:\Users\bhrou\gi):03954                                                                       * ; Checks a 16x16 block to find solid ceiling. May check an additional
                      (C:\Users\bhrou\gi):03955                                                                       * ; 16x16 block up for ceilings.
                      (C:\Users\bhrou\gi):03956                                                                       * ; d2 = y_pos
                      (C:\Users\bhrou\gi):03957                                                                       * ; d3 = x_pos
                      (C:\Users\bhrou\gi):03958                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):03959                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):03960                                                                       * ; returns distance in d1
                      (C:\Users\bhrou\gi):03961                                                                       * ; returns angle in d3, or zero if angle was odd
                      (C:\Users\bhrou\gi):03962                                                                       * ; loc_1EF9E: CheckSlopeDist:
                      (C:\Users\bhrou\gi):03963                                                                       * CheckCeilingDist_Part2:
                      (C:\Users\bhrou\gi):03964                                                                       *         subi.w  #$A,d2
                      (C:\Users\bhrou\gi):03965                                                                       *         eori.w  #$F,d2
                      (C:\Users\bhrou\gi):03966                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03967                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):03968                                                                       *         move.w  #$800,d6
                      (C:\Users\bhrou\gi):03969                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03970                                                                       *         move.b  #$80,d2
                      (C:\Users\bhrou\gi):03971                                                                       *         bra.w   loc_1ECFE
                      (C:\Users\bhrou\gi):03972                                                                       * ; End of function CheckCeilingDist
                      (C:\Users\bhrou\gi):03973                                                                       * 
                      (C:\Users\bhrou\gi):03974                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03975                                                                       * ; Stores a distance to the nearest wall above the object into d1
                      (C:\Users\bhrou\gi):03976                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):03977                                                                       * 
                      (C:\Users\bhrou\gi):03978                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):03979                                                                       * 
                      (C:\Users\bhrou\gi):03980                                                                       * ; loc_1EFBE: ObjHitCeiling:
                      (C:\Users\bhrou\gi):03981                                                                       * ObjCheckCeilingDist:
                      (C:\Users\bhrou\gi):03982                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):03983                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):03984                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):03985                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):03986                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):03987                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):03988                                                                       *         eori.w  #$F,d2
                      (C:\Users\bhrou\gi):03989                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):03990                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):03991                                                                       *         move.w  #$800,d6
                      (C:\Users\bhrou\gi):03992                                                                       *         moveq   #$D,d5
                      (C:\Users\bhrou\gi):03993                                                                       *         bsr.w   FindFloor
                      (C:\Users\bhrou\gi):03994                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):03995                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):03996                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):03997                                                                       *         move.b  #$80,d3
                      (C:\Users\bhrou\gi):03998                                                                       * +
                      (C:\Users\bhrou\gi):03999                                                                       *         rts
                      (C:\Users\bhrou\gi):04000                                                                       * ; End of function ObjCheckCeilingDist
                      (C:\Users\bhrou\gi):04001                                                                       * 
                      (C:\Users\bhrou\gi):04002                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04003                                                                       * ; Stores a distance to the nearest wall above Sonic/Tails,
                      (C:\Users\bhrou\gi):04004                                                                       * ; where "above" = left, into d1
                      (C:\Users\bhrou\gi):04005                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04006                                                                       * 
                      (C:\Users\bhrou\gi):04007                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):04008                                                                       * 
                      (C:\Users\bhrou\gi):04009                                                                       * ; loc_1EFF6:
2FC2                  (C:\Users\bhrou\gi):04010                 CheckLeftCeilingDist:                                 * CheckLeftCeilingDist:
                      (C:\Users\bhrou\gi):04011                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):04012                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):04013                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):04014                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):04015                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):04016                                                                       *         sub.w   d0,d2
                      (C:\Users\bhrou\gi):04017                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):04018                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):04019                                                                       *         sub.w   d0,d3
                      (C:\Users\bhrou\gi):04020                                                                       *         eori.w  #$F,d3
                      (C:\Users\bhrou\gi):04021                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):04022                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):04023                                                                       *         move.w  #$400,d6
                      (C:\Users\bhrou\gi):04024                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):04025                                                                       *         move.w  d1,-(sp)
                      (C:\Users\bhrou\gi):04026                                                                       * 
                      (C:\Users\bhrou\gi):04027                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):04028                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):04029                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):04030                                                                       *         move.b  x_radius(a0),d0
                      (C:\Users\bhrou\gi):04031                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):04032                                                                       *         add.w   d0,d2
                      (C:\Users\bhrou\gi):04033                                                                       *         move.b  y_radius(a0),d0
                      (C:\Users\bhrou\gi):04034                                                                       *         ext.w   d0
                      (C:\Users\bhrou\gi):04035                                                                       *         sub.w   d0,d3
                      (C:\Users\bhrou\gi):04036                                                                       *         eori.w  #$F,d3
                      (C:\Users\bhrou\gi):04037                                                                       *         lea     (Secondary_Angle).w,a4
                      (C:\Users\bhrou\gi):04038                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):04039                                                                       *         move.w  #$400,d6
                      (C:\Users\bhrou\gi):04040                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):04041                                                                       *         move.w  (sp)+,d0
                      (C:\Users\bhrou\gi):04042                                                                       *         move.b  #$40,d2
                      (C:\Users\bhrou\gi):04043                                                                       *         bra.w   loc_1ECC6
                      (C:\Users\bhrou\gi):04044                                                                       * ; End of function CheckLeftCeilingDist
                      (C:\Users\bhrou\gi):04045                                                                       * 
                      (C:\Users\bhrou\gi):04046                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04047                                                                       * ; Stores a distance to the nearest wall on the left of Sonic/Tails into d1
                      (C:\Users\bhrou\gi):04048                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04049                                                                       * 
                      (C:\Users\bhrou\gi):04050                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):04051                                                                       * 
                      (C:\Users\bhrou\gi):04052                                                                       * ; Checks a 16x16 block to find solid walls. May check an additional
                      (C:\Users\bhrou\gi):04053                                                                       * ; 16x16 block up for walls.
                      (C:\Users\bhrou\gi):04054                                                                       * ; d5 = ($c,$d) or ($e,$f) - solidity type bit (L/R/B or top)
                      (C:\Users\bhrou\gi):04055                                                                       * ; returns relevant block ID in (a1)
                      (C:\Users\bhrou\gi):04056                                                                       * ; returns distance in d1
                      (C:\Users\bhrou\gi):04057                                                                       * ; returns angle in d3, or zero if angle was odd
                      (C:\Users\bhrou\gi):04058                                                                       * ; loc_1F05E: Sonic_HitWall:
                      (C:\Users\bhrou\gi):04059                                                                       * CheckLeftWallDist:
                      (C:\Users\bhrou\gi):04060                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):04061                                                                       *         move.w  x_pos(a0),d3
                      (C:\Users\bhrou\gi):04062                                                                       * ; loc_1F066:
                      (C:\Users\bhrou\gi):04063                                                                       * CheckLeftWallDist_Part2:
                      (C:\Users\bhrou\gi):04064                                                                       *         subi.w  #$A,d3
                      (C:\Users\bhrou\gi):04065                                                                       *         eori.w  #$F,d3
                      (C:\Users\bhrou\gi):04066                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):04067                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):04068                                                                       *         move.w  #$400,d6
                      (C:\Users\bhrou\gi):04069                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):04070                                                                       *         move.b  #$40,d2
                      (C:\Users\bhrou\gi):04071                                                                       *         bra.w   loc_1ECFE
                      (C:\Users\bhrou\gi):04072                                                                       * ; End of function CheckLeftWallDist
                      (C:\Users\bhrou\gi):04073                                                                       * 
                      (C:\Users\bhrou\gi):04074                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):04075                                                                       * 
                      (C:\Users\bhrou\gi):04076                                                                       * ; loc_1F086: ObjCheckRightWallDist:
                      (C:\Users\bhrou\gi):04077                                                                       * ObjCheckLeftWallDist:
                      (C:\Users\bhrou\gi):04078                                                                       *         add.w   x_pos(a0),d3
                      (C:\Users\bhrou\gi):04079                                                                       *         move.w  y_pos(a0),d2
                      (C:\Users\bhrou\gi):04080                                                                       *         ; Engine bug: colliding with left walls is erratic with this function.
                      (C:\Users\bhrou\gi):04081                                                                       *         ; The cause is this: a missing instruction to flip collision on the found
                      (C:\Users\bhrou\gi):04082                                                                       *         ; 16x16 block; this one:
                      (C:\Users\bhrou\gi):04083                                                                       *         ;eori.w #$F,d3
                      (C:\Users\bhrou\gi):04084                                                                       *         lea     (Primary_Angle).w,a4
                      (C:\Users\bhrou\gi):04085                                                                       *         move.b  #0,(a4)
                      (C:\Users\bhrou\gi):04086                                                                       *         movea.w #-$10,a3
                      (C:\Users\bhrou\gi):04087                                                                       *         move.w  #$400,d6
                      (C:\Users\bhrou\gi):04088                                                                       *         moveq   #$D,d5
                      (C:\Users\bhrou\gi):04089                                                                       *         bsr.w   FindWall
                      (C:\Users\bhrou\gi):04090                                                                       *         move.b  (Primary_Angle).w,d3
                      (C:\Users\bhrou\gi):04091                                                                       *         btst    #0,d3
                      (C:\Users\bhrou\gi):04092                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04093                                                                       *         move.b  #$40,d3
                      (C:\Users\bhrou\gi):04094                                                                       * +
                      (C:\Users\bhrou\gi):04095                                                                       *         rts
                      (C:\Users\bhrou\gi):04096                 
                      (C:\Users\bhrou\gi):04097                 ; ***************************************************************************************************************************************************
                      (C:\Users\bhrou\gi):04098                 
                      (C:\Users\bhrou\gi):04099                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04100                                                                       * ; Object touch response subroutine - $20(a0) in the object RAM
                      (C:\Users\bhrou\gi):04101                                                                       * ; collides Sonic with most objects (enemies, rings, monitors...) in the level
                      (C:\Users\bhrou\gi):04102                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04103                                                                       * 
                      (C:\Users\bhrou\gi):04104                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):04105                                                                       * 
                      (C:\Users\bhrou\gi):04106                                                                       * ; loc_3F554:
                      (C:\Users\bhrou\gi):04107                                                                       * TouchResponse:
                      (C:\Users\bhrou\gi):04108                                                                       *         nop
                      (C:\Users\bhrou\gi):04109                                                                       *         jsrto   (Touch_Rings).l, JmpTo_Touch_Rings
                      (C:\Users\bhrou\gi):04110                                                                       *         ; Bumpers in CNZ
                      (C:\Users\bhrou\gi):04111                                                                       *         cmpi.b  #casino_night_zone,(Current_Zone).w
                      (C:\Users\bhrou\gi):04112                                                                       *         bne.s   +
                      (C:\Users\bhrou\gi):04113                                                                       *         jsrto   (Check_CNZ_bumpers).l, JmpTo_Check_CNZ_bumpers
                      (C:\Users\bhrou\gi):04114                                                                       * +
                      (C:\Users\bhrou\gi):04115                                                                       *         tst.b   (Current_Boss_ID).w
                      (C:\Users\bhrou\gi):04116                                                                       *         bne.w   Touch_Boss
                      (C:\Users\bhrou\gi):04117                                                                       *         move.w  x_pos(a0),d2 ; load Sonic's position into d2,d3
                      (C:\Users\bhrou\gi):04118                                                                       *         move.w  y_pos(a0),d3
                      (C:\Users\bhrou\gi):04119                                                                       *         subi_.w #8,d2
                      (C:\Users\bhrou\gi):04120                                                                       *         moveq   #0,d5
                      (C:\Users\bhrou\gi):04121                                                                       *         move.b  y_radius(a0),d5
                      (C:\Users\bhrou\gi):04122                                                                       *         subq.b  #3,d5
                      (C:\Users\bhrou\gi):04123                                                                       *         sub.w   d5,d3
                      (C:\Users\bhrou\gi):04124                                                                       *         cmpi.b  #$4D,mapping_frame(a0)  ; is Sonic ducking?
                      (C:\Users\bhrou\gi):04125                                                                       *         bne.s   Touch_NoDuck            ; if not, branch
                      (C:\Users\bhrou\gi):04126                                                                       *         addi.w  #$C,d3
                      (C:\Users\bhrou\gi):04127                                                                       *         moveq   #$A,d5
                      (C:\Users\bhrou\gi):04128                                                                       * ; loc_3F592:
                      (C:\Users\bhrou\gi):04129                                                                       * Touch_NoDuck:
                      (C:\Users\bhrou\gi):04130                                                                       *         move.w  #$10,d4
                      (C:\Users\bhrou\gi):04131                                                                       *         add.w   d5,d5
                      (C:\Users\bhrou\gi):04132                                                                       *         lea     (Dynamic_Object_RAM).w,a1
                      (C:\Users\bhrou\gi):04133                                                                       *         move.w  #(Dynamic_Object_RAM_End-Dynamic_Object_RAM)/object_size-1,d6
                      (C:\Users\bhrou\gi):04134                                                                       * ; loc_3F5A0:
                      (C:\Users\bhrou\gi):04135                                                                       * Touch_Loop:
                      (C:\Users\bhrou\gi):04136                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04137                                                                       *         bne.w   Touch_Width
                      (C:\Users\bhrou\gi):04138                                                                       * ; loc_3F5A8:
                      (C:\Users\bhrou\gi):04139                                                                       * Touch_NextObj:
                      (C:\Users\bhrou\gi):04140                                                                       *         lea     next_object(a1),a1 ; load obj address ; goto next object
                      (C:\Users\bhrou\gi):04141                                                                       *         dbf     d6,Touch_Loop ; repeat 6F more times
                      (C:\Users\bhrou\gi):04142                                                                       * 
                      (C:\Users\bhrou\gi):04143                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):04144                                                                       *         rts
                      (C:\Users\bhrou\gi):04145                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04146                                                                       * ; loc_3F5B4: Touch_Height:
                      (C:\Users\bhrou\gi):04147                                                                       * Touch_Width:
                      (C:\Users\bhrou\gi):04148                                                                       *         andi.w  #$3F,d0
                      (C:\Users\bhrou\gi):04149                                                                       *         add.w   d0,d0
                      (C:\Users\bhrou\gi):04150                                                                       *         lea     Touch_Sizes(pc,d0.w),a2
                      (C:\Users\bhrou\gi):04151                                                                       *         moveq   #0,d1
                      (C:\Users\bhrou\gi):04152                                                                       *         move.b  (a2)+,d1
                      (C:\Users\bhrou\gi):04153                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04154                                                                       *         sub.w   d1,d0
                      (C:\Users\bhrou\gi):04155                                                                       *         sub.w   d2,d0
                      (C:\Users\bhrou\gi):04156                                                                       *         bcc.s   loc_3F5D6
                      (C:\Users\bhrou\gi):04157                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04158                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):04159                                                                       *         bcs.s   Touch_Height
                      (C:\Users\bhrou\gi):04160                                                                       *         bra.w   Touch_NextObj
                      (C:\Users\bhrou\gi):04161                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04162                                                                       * 
                      (C:\Users\bhrou\gi):04163                                                                       * loc_3F5D6:
                      (C:\Users\bhrou\gi):04164                                                                       *         cmp.w   d4,d0
                      (C:\Users\bhrou\gi):04165                                                                       *         bhi.w   Touch_NextObj
                      (C:\Users\bhrou\gi):04166                                                                       * ; loc_3F5DC: Touch_Width:
                      (C:\Users\bhrou\gi):04167                                                                       * Touch_Height:
                      (C:\Users\bhrou\gi):04168                                                                       *         moveq   #0,d1
                      (C:\Users\bhrou\gi):04169                                                                       *         move.b  (a2)+,d1
                      (C:\Users\bhrou\gi):04170                                                                       *         move.w  y_pos(a1),d0
                      (C:\Users\bhrou\gi):04171                                                                       *         sub.w   d1,d0
                      (C:\Users\bhrou\gi):04172                                                                       *         sub.w   d3,d0
                      (C:\Users\bhrou\gi):04173                                                                       *         bcc.s   loc_3F5F6
                      (C:\Users\bhrou\gi):04174                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04175                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):04176                                                                       *         bcs.w   Touch_ChkValue
                      (C:\Users\bhrou\gi):04177                                                                       *         bra.w   Touch_NextObj
                      (C:\Users\bhrou\gi):04178                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04179                                                                       * 
                      (C:\Users\bhrou\gi):04180                                                                       * loc_3F5F6:
                      (C:\Users\bhrou\gi):04181                                                                       *         cmp.w   d5,d0
                      (C:\Users\bhrou\gi):04182                                                                       *         bhi.w   Touch_NextObj
                      (C:\Users\bhrou\gi):04183                                                                       *         bra.w   Touch_ChkValue
                      (C:\Users\bhrou\gi):04184                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04185                                                                       * ; collision sizes (width,height)
                      (C:\Users\bhrou\gi):04186                                                                       * ; byte_3F600:
                      (C:\Users\bhrou\gi):04187                                                                       * Touch_Sizes:
                      (C:\Users\bhrou\gi):04188                                                                       *         dc.b   4,  4    ;   0
                      (C:\Users\bhrou\gi):04189                                                                       *         dc.b $14,$14    ;   1
                      (C:\Users\bhrou\gi):04190                                                                       *         dc.b  $C,$14    ;   2
                      (C:\Users\bhrou\gi):04191                                                                       *         dc.b $14, $C    ;   3
                      (C:\Users\bhrou\gi):04192                                                                       *         dc.b   4,$10    ;   4
                      (C:\Users\bhrou\gi):04193                                                                       *         dc.b  $C,$12    ;   5
                      (C:\Users\bhrou\gi):04194                                                                       *         dc.b $10,$10    ;   6 - monitors
                      (C:\Users\bhrou\gi):04195                                                                       *         dc.b   6,  6    ;   7 - rings
                      (C:\Users\bhrou\gi):04196                                                                       *         dc.b $18, $C    ;   8
                      (C:\Users\bhrou\gi):04197                                                                       *         dc.b  $C,$10    ;   9
                      (C:\Users\bhrou\gi):04198                                                                       *         dc.b $10,  8    ;  $A
                      (C:\Users\bhrou\gi):04199                                                                       *         dc.b   8,  8    ;  $B
                      (C:\Users\bhrou\gi):04200                                                                       *         dc.b $14,$10    ;  $C
                      (C:\Users\bhrou\gi):04201                                                                       *         dc.b $14,  8    ;  $D
                      (C:\Users\bhrou\gi):04202                                                                       *         dc.b  $E, $E    ;  $E
                      (C:\Users\bhrou\gi):04203                                                                       *         dc.b $18,$18    ;  $F
                      (C:\Users\bhrou\gi):04204                                                                       *         dc.b $28,$10    ; $10
                      (C:\Users\bhrou\gi):04205                                                                       *         dc.b $10,$18    ; $11
                      (C:\Users\bhrou\gi):04206                                                                       *         dc.b   8,$10    ; $12
                      (C:\Users\bhrou\gi):04207                                                                       *         dc.b $20,$70    ; $13
                      (C:\Users\bhrou\gi):04208                                                                       *         dc.b $40,$20    ; $14
                      (C:\Users\bhrou\gi):04209                                                                       *         dc.b $80,$20    ; $15
                      (C:\Users\bhrou\gi):04210                                                                       *         dc.b $20,$20    ; $16
                      (C:\Users\bhrou\gi):04211                                                                       *         dc.b   8,  8    ; $17
                      (C:\Users\bhrou\gi):04212                                                                       *         dc.b   4,  4    ; $18
                      (C:\Users\bhrou\gi):04213                                                                       *         dc.b $20,  8    ; $19
                      (C:\Users\bhrou\gi):04214                                                                       *         dc.b  $C, $C    ; $1A
                      (C:\Users\bhrou\gi):04215                                                                       *         dc.b   8,  4    ; $1B
                      (C:\Users\bhrou\gi):04216                                                                       *         dc.b $18,  4    ; $1C
                      (C:\Users\bhrou\gi):04217                                                                       *         dc.b $28,  4    ; $1D
                      (C:\Users\bhrou\gi):04218                                                                       *         dc.b   4,  8    ; $1E
                      (C:\Users\bhrou\gi):04219                                                                       *         dc.b   4,$18    ; $1F
                      (C:\Users\bhrou\gi):04220                                                                       *         dc.b   4,$28    ; $20
                      (C:\Users\bhrou\gi):04221                                                                       *         dc.b   4,$10    ; $21
                      (C:\Users\bhrou\gi):04222                                                                       *         dc.b $18,$18    ; $22
                      (C:\Users\bhrou\gi):04223                                                                       *         dc.b  $C,$18    ; $23
                      (C:\Users\bhrou\gi):04224                                                                       *         dc.b $48,  8    ; $24
                      (C:\Users\bhrou\gi):04225                                                                       *         dc.b $18,$28    ; $25
                      (C:\Users\bhrou\gi):04226                                                                       *         dc.b $10,  4    ; $26
                      (C:\Users\bhrou\gi):04227                                                                       *         dc.b $20,  2    ; $27
                      (C:\Users\bhrou\gi):04228                                                                       *         dc.b   4,$40    ; $28
                      (C:\Users\bhrou\gi):04229                                                                       *         dc.b $18,$80    ; $29
                      (C:\Users\bhrou\gi):04230                                                                       *         dc.b $20,$10    ; $2A
                      (C:\Users\bhrou\gi):04231                                                                       *         dc.b $10,$20    ; $2B
                      (C:\Users\bhrou\gi):04232                                                                       *         dc.b $10,$30    ; $2C
                      (C:\Users\bhrou\gi):04233                                                                       *         dc.b $10,$40    ; $2D
                      (C:\Users\bhrou\gi):04234                                                                       *         dc.b $10,$50    ; $2E
                      (C:\Users\bhrou\gi):04235                                                                       *         dc.b $10,  2    ; $2F
                      (C:\Users\bhrou\gi):04236                                                                       *         dc.b $10,  1    ; $30
                      (C:\Users\bhrou\gi):04237                                                                       *         dc.b   2,  8    ; $31
                      (C:\Users\bhrou\gi):04238                                                                       *         dc.b $20,$1C    ; $32
                      (C:\Users\bhrou\gi):04239                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04240                                                                       * ; loc_3F666:
                      (C:\Users\bhrou\gi):04241                                                                       * Touch_Boss:
                      (C:\Users\bhrou\gi):04242                                                                       *         lea     Touch_Sizes(pc),a3
                      (C:\Users\bhrou\gi):04243                                                                       *         move.w  x_pos(a0),d2
                      (C:\Users\bhrou\gi):04244                                                                       *         move.w  y_pos(a0),d3
                      (C:\Users\bhrou\gi):04245                                                                       *         subi_.w #8,d2
                      (C:\Users\bhrou\gi):04246                                                                       *         moveq   #0,d5
                      (C:\Users\bhrou\gi):04247                                                                       *         move.b  y_radius(a0),d5
                      (C:\Users\bhrou\gi):04248                                                                       *         subq.b  #3,d5
                      (C:\Users\bhrou\gi):04249                                                                       *         sub.w   d5,d3
                      (C:\Users\bhrou\gi):04250                                                                       *         cmpi.b  #$4D,mapping_frame(a0)
                      (C:\Users\bhrou\gi):04251                                                                       *         bne.s   +
                      (C:\Users\bhrou\gi):04252                                                                       *         addi.w  #$C,d3
                      (C:\Users\bhrou\gi):04253                                                                       *         moveq   #$A,d5
                      (C:\Users\bhrou\gi):04254                                                                       * +
                      (C:\Users\bhrou\gi):04255                                                                       *         move.w  #$10,d4
                      (C:\Users\bhrou\gi):04256                                                                       *         add.w   d5,d5
                      (C:\Users\bhrou\gi):04257                                                                       *         lea     (Dynamic_Object_RAM).w,a1
                      (C:\Users\bhrou\gi):04258                                                                       *         move.w  #(Dynamic_Object_RAM_End-Dynamic_Object_RAM)/object_size-1,d6
                      (C:\Users\bhrou\gi):04259                                                                       * 
                      (C:\Users\bhrou\gi):04260                                                                       * loc_3F69C:
                      (C:\Users\bhrou\gi):04261                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04262                                                                       *         bne.s   loc_3F6AE
                      (C:\Users\bhrou\gi):04263                                                                       * 
                      (C:\Users\bhrou\gi):04264                                                                       * loc_3F6A2:
                      (C:\Users\bhrou\gi):04265                                                                       *         lea     next_object(a1),a1 ; a1=object
                      (C:\Users\bhrou\gi):04266                                                                       *         dbf     d6,loc_3F69C
                      (C:\Users\bhrou\gi):04267                                                                       * 
                      (C:\Users\bhrou\gi):04268                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):04269                                                                       *         rts
                      (C:\Users\bhrou\gi):04270                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04271                                                                       * 
                      (C:\Users\bhrou\gi):04272                                                                       * loc_3F6AE:
                      (C:\Users\bhrou\gi):04273                                                                       *         bsr.w   BossSpecificCollision
                      (C:\Users\bhrou\gi):04274                                                                       *         andi.w  #$3F,d0
                      (C:\Users\bhrou\gi):04275                                                                       *         beq.s   loc_3F6A2
                      (C:\Users\bhrou\gi):04276                                                                       *         add.w   d0,d0
                      (C:\Users\bhrou\gi):04277                                                                       *         lea     (a3,d0.w),a2
                      (C:\Users\bhrou\gi):04278                                                                       *         moveq   #0,d1
                      (C:\Users\bhrou\gi):04279                                                                       *         move.b  (a2)+,d1
                      (C:\Users\bhrou\gi):04280                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04281                                                                       *         sub.w   d1,d0
                      (C:\Users\bhrou\gi):04282                                                                       *         sub.w   d2,d0
                      (C:\Users\bhrou\gi):04283                                                                       *         bcc.s   loc_3F6D4
                      (C:\Users\bhrou\gi):04284                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04285                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):04286                                                                       *         bcs.s   loc_3F6D8
                      (C:\Users\bhrou\gi):04287                                                                       *         bra.s   loc_3F6A2
                      (C:\Users\bhrou\gi):04288                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04289                                                                       * 
                      (C:\Users\bhrou\gi):04290                                                                       * loc_3F6D4:
                      (C:\Users\bhrou\gi):04291                                                                       *         cmp.w   d4,d0
                      (C:\Users\bhrou\gi):04292                                                                       *         bhi.s   loc_3F6A2
                      (C:\Users\bhrou\gi):04293                                                                       * 
                      (C:\Users\bhrou\gi):04294                                                                       * loc_3F6D8:
                      (C:\Users\bhrou\gi):04295                                                                       *         moveq   #0,d1
                      (C:\Users\bhrou\gi):04296                                                                       *         move.b  (a2)+,d1
                      (C:\Users\bhrou\gi):04297                                                                       *         move.w  y_pos(a1),d0
                      (C:\Users\bhrou\gi):04298                                                                       *         sub.w   d1,d0
                      (C:\Users\bhrou\gi):04299                                                                       *         sub.w   d3,d0
                      (C:\Users\bhrou\gi):04300                                                                       *         bcc.s   loc_3F6EE
                      (C:\Users\bhrou\gi):04301                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04302                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):04303                                                                       *         bcs.s   Touch_ChkValue
                      (C:\Users\bhrou\gi):04304                                                                       *         bra.s   loc_3F6A2
                      (C:\Users\bhrou\gi):04305                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04306                                                                       * 
                      (C:\Users\bhrou\gi):04307                                                                       * loc_3F6EE:
                      (C:\Users\bhrou\gi):04308                                                                       *         cmp.w   d5,d0
                      (C:\Users\bhrou\gi):04309                                                                       *         bhi.s   loc_3F6A2
                      (C:\Users\bhrou\gi):04310                                                                       * ; loc_3F6F2:
                      (C:\Users\bhrou\gi):04311                                                                       * Touch_ChkValue:
                      (C:\Users\bhrou\gi):04312                                                                       *         move.b  collision_flags(a1),d1  ; load touch response number
                      (C:\Users\bhrou\gi):04313                                                                       *         andi.b  #$C0,d1                 ; is touch response $40 or higher?
                      (C:\Users\bhrou\gi):04314                                                                       *         beq.w   Touch_Enemy             ; if not, branch
                      (C:\Users\bhrou\gi):04315                                                                       *         cmpi.b  #$C0,d1                 ; is touch response $C0 or higher?
                      (C:\Users\bhrou\gi):04316                                                                       *         beq.w   Touch_Special           ; if yes, branch
                      (C:\Users\bhrou\gi):04317                                                                       *         tst.b   d1                      ; is touch response $80-$BF ?
                      (C:\Users\bhrou\gi):04318                                                                       *         bmi.w   Touch_ChkHurt           ; if yes, branch
                      (C:\Users\bhrou\gi):04319                                                                       *         ; touch response is $40-$7F
                      (C:\Users\bhrou\gi):04320                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04321                                                                       *         andi.b  #$3F,d0
                      (C:\Users\bhrou\gi):04322                                                                       *         cmpi.b  #6,d0                   ; is touch response $46 ?
                      (C:\Users\bhrou\gi):04323                                                                       *         beq.s   Touch_Monitor           ; if yes, branch
                      (C:\Users\bhrou\gi):04324                                                                       *         move.w  (MainCharacter+invulnerable_time).w,d0
                      (C:\Users\bhrou\gi):04325                                                                       *         tst.w   (Two_player_mode).w
                      (C:\Users\bhrou\gi):04326                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04327                                                                       *         move.w  invulnerable_time(a0),d0
                      (C:\Users\bhrou\gi):04328                                                                       * +
                      (C:\Users\bhrou\gi):04329                                                                       *         cmpi.w  #90,d0
                      (C:\Users\bhrou\gi):04330                                                                       *         bhs.w   +
                      (C:\Users\bhrou\gi):04331                                                                       *         move.b  #4,routine(a1)  ; set the object's routine counter
                      (C:\Users\bhrou\gi):04332                                                                       *         move.w  a0,parent(a1)
                      (C:\Users\bhrou\gi):04333                                                                       * +
                      (C:\Users\bhrou\gi):04334                                                                       *         rts
                      (C:\Users\bhrou\gi):04335                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04336                                                                       * ; loc_3F73C:
                      (C:\Users\bhrou\gi):04337                                                                       * Touch_Monitor:
                      (C:\Users\bhrou\gi):04338                                                                       *         tst.w   y_vel(a0)       ; is Sonic moving upwards?
                      (C:\Users\bhrou\gi):04339                                                                       *         bpl.s   loc_3F768       ; if not, branch
                      (C:\Users\bhrou\gi):04340                                                                       *         move.w  y_pos(a0),d0
                      (C:\Users\bhrou\gi):04341                                                                       *         subi.w  #$10,d0
                      (C:\Users\bhrou\gi):04342                                                                       *         cmp.w   y_pos(a1),d0
                      (C:\Users\bhrou\gi):04343                                                                       *         blo.s   return_3F78A
                      (C:\Users\bhrou\gi):04344                                                                       *         neg.w   y_vel(a0)       ; reverse Sonic's y-motion
                      (C:\Users\bhrou\gi):04345                                                                       *         move.w  #-$180,y_vel(a1)
                      (C:\Users\bhrou\gi):04346                                                                       *         tst.b   routine_secondary(a1)
                      (C:\Users\bhrou\gi):04347                                                                       *         bne.s   return_3F78A
                      (C:\Users\bhrou\gi):04348                                                                       *         move.b  #4,routine_secondary(a1) ; set the monitor's routine counter
                      (C:\Users\bhrou\gi):04349                                                                       *         rts
                      (C:\Users\bhrou\gi):04350                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04351                                                                       * 
                      (C:\Users\bhrou\gi):04352                                                                       * loc_3F768:
                      (C:\Users\bhrou\gi):04353                                                                       *         cmpa.w  #MainCharacter,a0
                      (C:\Users\bhrou\gi):04354                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04355                                                                       *         tst.w   (Two_player_mode).w
                      (C:\Users\bhrou\gi):04356                                                                       *         beq.s   return_3F78A
                      (C:\Users\bhrou\gi):04357                                                                       * +
                      (C:\Users\bhrou\gi):04358                                                                       *         cmpi.b  #AniIDSonAni_Roll,anim(a0)
                      (C:\Users\bhrou\gi):04359                                                                       *         bne.s   return_3F78A
                      (C:\Users\bhrou\gi):04360                                                                       *         neg.w   y_vel(a0)       ; reverse Sonic's y-motion
                      (C:\Users\bhrou\gi):04361                                                                       *         move.b  #4,routine(a1)
                      (C:\Users\bhrou\gi):04362                                                                       *         move.w  a0,parent(a1)
                      (C:\Users\bhrou\gi):04363                                                                       * 
                      (C:\Users\bhrou\gi):04364                                                                       * return_3F78A:
                      (C:\Users\bhrou\gi):04365                                                                       *         rts
                      (C:\Users\bhrou\gi):04366                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04367                                                                       * ; loc_3F78C:
                      (C:\Users\bhrou\gi):04368                                                                       * Touch_Enemy:
                      (C:\Users\bhrou\gi):04369                                                                       *         btst    #status_sec_isInvincible,status_secondary(a0)   ; is Sonic invincible?
                      (C:\Users\bhrou\gi):04370                                                                       *         bne.s   +                       ; if yes, branch
                      (C:\Users\bhrou\gi):04371                                                                       *         cmpi.b  #AniIDSonAni_Spindash,anim(a0)
                      (C:\Users\bhrou\gi):04372                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04373                                                                       *         cmpi.b  #AniIDSonAni_Roll,anim(a0)              ; is Sonic rolling?
                      (C:\Users\bhrou\gi):04374                                                                       *         bne.w   Touch_ChkHurt           ; if not, branch
                      (C:\Users\bhrou\gi):04375                                                                       * +
                      (C:\Users\bhrou\gi):04376                                                                       *         btst    #6,render_flags(a1)
                      (C:\Users\bhrou\gi):04377                                                                       *         beq.s   Touch_Enemy_Part2
                      (C:\Users\bhrou\gi):04378                                                                       *         tst.b   boss_hitcount2(a1)
                      (C:\Users\bhrou\gi):04379                                                                       *         beq.s   return_3F7C6
                      (C:\Users\bhrou\gi):04380                                                                       *         neg.w   x_vel(a0)
                      (C:\Users\bhrou\gi):04381                                                                       *         neg.w   y_vel(a0)
                      (C:\Users\bhrou\gi):04382                                                                       *         move.b  #0,collision_flags(a1)
                      (C:\Users\bhrou\gi):04383                                                                       *         subq.b  #1,boss_hitcount2(a1)
                      (C:\Users\bhrou\gi):04384                                                                       * 
                      (C:\Users\bhrou\gi):04385                                                                       * return_3F7C6:
                      (C:\Users\bhrou\gi):04386                                                                       *         rts
                      (C:\Users\bhrou\gi):04387                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04388                                                                       * ; loc_3F7C8:
                      (C:\Users\bhrou\gi):04389                                                                       * Touch_Enemy_Part2:
                      (C:\Users\bhrou\gi):04390                                                                       *         tst.b   collision_property(a1)
                      (C:\Users\bhrou\gi):04391                                                                       *         beq.s   Touch_KillEnemy
                      (C:\Users\bhrou\gi):04392                                                                       *         neg.w   x_vel(a0)
                      (C:\Users\bhrou\gi):04393                                                                       *         neg.w   y_vel(a0)
                      (C:\Users\bhrou\gi):04394                                                                       *         move.b  #0,collision_flags(a1)
                      (C:\Users\bhrou\gi):04395                                                                       *         subq.b  #1,collision_property(a1)
                      (C:\Users\bhrou\gi):04396                                                                       *         bne.s   return_3F7E8
                      (C:\Users\bhrou\gi):04397                                                                       *         bset    #7,status(a1)
                      (C:\Users\bhrou\gi):04398                                                                       * 
                      (C:\Users\bhrou\gi):04399                                                                       * return_3F7E8:
                      (C:\Users\bhrou\gi):04400                                                                       *         rts
                      (C:\Users\bhrou\gi):04401                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04402                                                                       * ; loc_3F7EA:
                      (C:\Users\bhrou\gi):04403                                                                       * Touch_KillEnemy:
                      (C:\Users\bhrou\gi):04404                                                                       *         bset    #7,status(a1)
                      (C:\Users\bhrou\gi):04405                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):04406                                                                       *         move.w  (Chain_Bonus_counter).w,d0
                      (C:\Users\bhrou\gi):04407                                                                       *         addq.w  #2,(Chain_Bonus_counter).w      ; add 2 to chain bonus counter
                      (C:\Users\bhrou\gi):04408                                                                       *         cmpi.w  #6,d0
                      (C:\Users\bhrou\gi):04409                                                                       *         blo.s   loc_3F802
                      (C:\Users\bhrou\gi):04410                                                                       *         moveq   #6,d0
                      (C:\Users\bhrou\gi):04411                                                                       * 
                      (C:\Users\bhrou\gi):04412                                                                       * loc_3F802:
                      (C:\Users\bhrou\gi):04413                                                                       *         move.w  d0,objoff_3E(a1)
                      (C:\Users\bhrou\gi):04414                                                                       *         move.w  Enemy_Points(pc,d0.w),d0
                      (C:\Users\bhrou\gi):04415                                                                       *         cmpi.w  #$20,(Chain_Bonus_counter).w    ; have 16 enemies been destroyed?
                      (C:\Users\bhrou\gi):04416                                                                       *         blo.s   loc_3F81C                       ; if not, branch
                      (C:\Users\bhrou\gi):04417                                                                       *         move.w  #1000,d0                        ; fix bonus to 10000 points
                      (C:\Users\bhrou\gi):04418                                                                       *         move.w  #$A,objoff_3E(a1)
                      (C:\Users\bhrou\gi):04419                                                                       * 
                      (C:\Users\bhrou\gi):04420                                                                       * loc_3F81C:
                      (C:\Users\bhrou\gi):04421                                                                       *         movea.w a0,a3
                      (C:\Users\bhrou\gi):04422                                                                       *         bsr.w   AddPoints2
                      (C:\Users\bhrou\gi):04423                                                                       *         _move.b #ObjID_Explosion,id(a1) ; load obj
                      (C:\Users\bhrou\gi):04424                                                                       *         move.b  #0,routine(a1)
                      (C:\Users\bhrou\gi):04425                                                                       *         tst.w   y_vel(a0)
                      (C:\Users\bhrou\gi):04426                                                                       *         bmi.s   loc_3F844
                      (C:\Users\bhrou\gi):04427                                                                       *         move.w  y_pos(a0),d0
                      (C:\Users\bhrou\gi):04428                                                                       *         cmp.w   y_pos(a1),d0
                      (C:\Users\bhrou\gi):04429                                                                       *         bhs.s   loc_3F84C
                      (C:\Users\bhrou\gi):04430                                                                       *         neg.w   y_vel(a0)
                      (C:\Users\bhrou\gi):04431                                                                       *         rts
                      (C:\Users\bhrou\gi):04432                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04433                                                                       * 
                      (C:\Users\bhrou\gi):04434                                                                       * loc_3F844:
                      (C:\Users\bhrou\gi):04435                                                                       *         addi.w  #$100,y_vel(a0)
                      (C:\Users\bhrou\gi):04436                                                                       *         rts
                      (C:\Users\bhrou\gi):04437                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04438                                                                       * 
                      (C:\Users\bhrou\gi):04439                                                                       * loc_3F84C:
                      (C:\Users\bhrou\gi):04440                                                                       *         subi.w  #$100,y_vel(a0)
                      (C:\Users\bhrou\gi):04441                                                                       *         rts
                      (C:\Users\bhrou\gi):04442                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04443                                                                       * ; byte_3F854:
                      (C:\Users\bhrou\gi):04444                                                                       * Enemy_Points:   dc.w 10, 20, 50, 100
                      (C:\Users\bhrou\gi):04445                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04446                                                                       * 
                      (C:\Users\bhrou\gi):04447                                                                       * loc_3F85C:
                      (C:\Users\bhrou\gi):04448                                                                       *         bset    #7,status(a1)
                      (C:\Users\bhrou\gi):04449                                                                       * 
                      (C:\Users\bhrou\gi):04450                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04451                                                                       * ; Subroutine for checking if Sonic/Tails should be hurt and hurting them if so
                      (C:\Users\bhrou\gi):04452                                                                       * ; note: sonic or tails must be at a0
                      (C:\Users\bhrou\gi):04453                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04454                                                                       * 
                      (C:\Users\bhrou\gi):04455                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):04456                                                                       * 
                      (C:\Users\bhrou\gi):04457                                                                       * ; loc_3F862:
                      (C:\Users\bhrou\gi):04458                                                                       * Touch_ChkHurt:
                      (C:\Users\bhrou\gi):04459                                                                       *         btst    #status_sec_isInvincible,status_secondary(a0)   ; is Sonic invincible?
                      (C:\Users\bhrou\gi):04460                                                                       *         beq.s   Touch_Hurt              ; if not, branch
                      (C:\Users\bhrou\gi):04461                                                                       * ; loc_3F86A:
                      (C:\Users\bhrou\gi):04462                                                                       * Touch_NoHurt:
                      (C:\Users\bhrou\gi):04463                                                                       *         moveq   #-1,d0
                      (C:\Users\bhrou\gi):04464                                                                       *         rts
                      (C:\Users\bhrou\gi):04465                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04466                                                                       * ; loc_3F86E:
                      (C:\Users\bhrou\gi):04467                                                                       * Touch_Hurt:
                      (C:\Users\bhrou\gi):04468                                                                       *         nop
                      (C:\Users\bhrou\gi):04469                                                                       *         tst.w   invulnerable_time(a0)
                      (C:\Users\bhrou\gi):04470                                                                       *         bne.s   Touch_NoHurt
                      (C:\Users\bhrou\gi):04471                                                                       *         movea.l a1,a2
                      (C:\Users\bhrou\gi):04472                                                                       * 
                      (C:\Users\bhrou\gi):04473                                                                       * ; End of function TouchResponse
                      (C:\Users\bhrou\gi):04474                                                                       * ; continue straight to HurtCharacter
                      (C:\Users\bhrou\gi):04475                                                                       * 
                      (C:\Users\bhrou\gi):04476                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04477                                                                       * ; Hurting Sonic/Tails subroutine
                      (C:\Users\bhrou\gi):04478                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04479                                                                       * 
                      (C:\Users\bhrou\gi):04480                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):04481                                                                       * 
                      (C:\Users\bhrou\gi):04482                                                                       * ; loc_3F878: HurtSonic:
                      (C:\Users\bhrou\gi):04483                                                                       * HurtCharacter:
                      (C:\Users\bhrou\gi):04484                                                                       *         move.w  (Ring_count).w,d0
                      (C:\Users\bhrou\gi):04485                                                                       *         cmpa.w  #MainCharacter,a0
                      (C:\Users\bhrou\gi):04486                                                                       *         beq.s   loc_3F88C
                      (C:\Users\bhrou\gi):04487                                                                       *         tst.w   (Two_player_mode).w
                      (C:\Users\bhrou\gi):04488                                                                       *         beq.s   Hurt_Sidekick
                      (C:\Users\bhrou\gi):04489                                                                       *         move.w  (Ring_count_2P).w,d0
                      (C:\Users\bhrou\gi):04490                                                                       * 
                      (C:\Users\bhrou\gi):04491                                                                       * loc_3F88C:
                      (C:\Users\bhrou\gi):04492                                                                       *         btst    #status_sec_hasShield,status_secondary(a0)
                      (C:\Users\bhrou\gi):04493                                                                       *         bne.s   Hurt_Shield
                      (C:\Users\bhrou\gi):04494                                                                       *         tst.w   d0
                      (C:\Users\bhrou\gi):04495                                                                       *         beq.w   KillCharacter
                      (C:\Users\bhrou\gi):04496                                                                       *         jsr     (SingleObjLoad).l
                      (C:\Users\bhrou\gi):04497                                                                       *         bne.s   Hurt_Shield
                      (C:\Users\bhrou\gi):04498                                                                       *         _move.b #ObjID_LostRings,id(a1) ; load obj
                      (C:\Users\bhrou\gi):04499                                                                       *         move.w  x_pos(a0),x_pos(a1)
                      (C:\Users\bhrou\gi):04500                                                                       *         move.w  y_pos(a0),y_pos(a1)
                      (C:\Users\bhrou\gi):04501                                                                       *         move.w  a0,parent(a1)
                      (C:\Users\bhrou\gi):04502                                                                       * 
                      (C:\Users\bhrou\gi):04503                                                                       * ; loc_3F8B8:
                      (C:\Users\bhrou\gi):04504                                                                       * Hurt_Shield:
                      (C:\Users\bhrou\gi):04505                                                                       *         bclr    #status_sec_hasShield,status_secondary(a0) ; remove shield
                      (C:\Users\bhrou\gi):04506                                                                       * 
                      (C:\Users\bhrou\gi):04507                                                                       * ; loc_3F8BE:
                      (C:\Users\bhrou\gi):04508                                                                       * Hurt_Sidekick:
                      (C:\Users\bhrou\gi):04509                                                                       *         move.b  #4,routine(a0)
                      (C:\Users\bhrou\gi):04510                                                                       *         jsrto   (Sonic_ResetOnFloor_Part2).l, JmpTo_Sonic_ResetOnFloor_Part2
                      (C:\Users\bhrou\gi):04511                                                                       *         bset    #1,status(a0)
                      (C:\Users\bhrou\gi):04512                                                                       *         move.w  #-$400,y_vel(a0) ; make Sonic bounce away from the object
                      (C:\Users\bhrou\gi):04513                                                                       *         move.w  #-$200,x_vel(a0)
                      (C:\Users\bhrou\gi):04514                                                                       *         btst    #6,status(a0)   ; underwater?
                      (C:\Users\bhrou\gi):04515                                                                       *         beq.s   Hurt_Reverse    ; if not, branch
                      (C:\Users\bhrou\gi):04516                                                                       *         move.w  #-$200,y_vel(a0) ; bounce slower
                      (C:\Users\bhrou\gi):04517                                                                       *         move.w  #-$100,x_vel(a0)
                      (C:\Users\bhrou\gi):04518                                                                       * 
                      (C:\Users\bhrou\gi):04519                                                                       * ; loc_3F8EE:
                      (C:\Users\bhrou\gi):04520                                                                       * Hurt_Reverse:
                      (C:\Users\bhrou\gi):04521                                                                       *         move.w  x_pos(a0),d0
                      (C:\Users\bhrou\gi):04522                                                                       *         cmp.w   x_pos(a2),d0
                      (C:\Users\bhrou\gi):04523                                                                       *         blo.s   Hurt_ChkSpikes  ; if Sonic is left of the object, branch
                      (C:\Users\bhrou\gi):04524                                                                       *         neg.w   x_vel(a0)       ; if Sonic is right of the object, reverse
                      (C:\Users\bhrou\gi):04525                                                                       * 
                      (C:\Users\bhrou\gi):04526                                                                       * ; loc_3F8FC:
                      (C:\Users\bhrou\gi):04527                                                                       * Hurt_ChkSpikes:
                      (C:\Users\bhrou\gi):04528                                                                       *         move.w  #0,inertia(a0)
                      (C:\Users\bhrou\gi):04529                                                                       *         move.b  #AniIDSonAni_Hurt2,anim(a0)
                      (C:\Users\bhrou\gi):04530                                                                       *         move.w  #$78,invulnerable_time(a0)
                      (C:\Users\bhrou\gi):04531                                                                       *         move.w  #SndID_Hurt,d0  ; load normal damage sound
                      (C:\Users\bhrou\gi):04532                                                                       *         cmpi.b  #ObjID_Spikes,(a2)      ; was damage caused by spikes?
                      (C:\Users\bhrou\gi):04533                                                                       *         bne.s   Hurt_Sound      ; if not, branch
                      (C:\Users\bhrou\gi):04534                                                                       *         move.w  #SndID_HurtBySpikes,d0  ; load spikes damage sound
                      (C:\Users\bhrou\gi):04535                                                                       * 
                      (C:\Users\bhrou\gi):04536                                                                       * ; loc_3F91C:
                      (C:\Users\bhrou\gi):04537                                                                       * Hurt_Sound:
                      (C:\Users\bhrou\gi):04538                                                                       *         jsr     (PlaySound).l
                      (C:\Users\bhrou\gi):04539                                                                       *         moveq   #-1,d0
                      (C:\Users\bhrou\gi):04540                                                                       *         rts
                      (C:\Users\bhrou\gi):04541                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04542                                                                       * 
                      (C:\Users\bhrou\gi):04543                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04544                                                                       * ; Subroutine to kill Sonic or Tails
                      (C:\Users\bhrou\gi):04545                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04546                                                                       * 
                      (C:\Users\bhrou\gi):04547                                                                       * ; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):04548                                                                       * 
                      (C:\Users\bhrou\gi):04549                                                                       * ; loc_3F926: KillSonic:
2FC2                  (C:\Users\bhrou\gi):04550                 KillCharacter                                         * KillCharacter:
                      (C:\Users\bhrou\gi):04551                                                                       *         tst.w   (Debug_placement_mode).w
                      (C:\Users\bhrou\gi):04552                                                                       *         bne.s   ++
                      (C:\Users\bhrou\gi):04553                                                                       *         clr.b   status_secondary(a0)
                      (C:\Users\bhrou\gi):04554                                                                       *         move.b  #6,routine(a0)
                      (C:\Users\bhrou\gi):04555                                                                       *         jsrto   (Sonic_ResetOnFloor_Part2).l, JmpTo_Sonic_ResetOnFloor_Part2
                      (C:\Users\bhrou\gi):04556                                                                       *         bset    #1,status(a0)
                      (C:\Users\bhrou\gi):04557                                                                       *         move.w  #-$700,y_vel(a0)
                      (C:\Users\bhrou\gi):04558                                                                       *         move.w  #0,x_vel(a0)
                      (C:\Users\bhrou\gi):04559                                                                       *         move.w  #0,inertia(a0)
                      (C:\Users\bhrou\gi):04560                                                                       *         move.b  #AniIDSonAni_Death,anim(a0)
                      (C:\Users\bhrou\gi):04561                                                                       *         bset    #high_priority_bit,art_tile(a0)
                      (C:\Users\bhrou\gi):04562                                                                       *         move.w  #SndID_Hurt,d0
                      (C:\Users\bhrou\gi):04563                                                                       *         cmpi.b  #ObjID_Spikes,id(a2)
                      (C:\Users\bhrou\gi):04564                                                                       *         bne.s   +
                      (C:\Users\bhrou\gi):04565                                                                       *         move.w  #SndID_HurtBySpikes,d0
                      (C:\Users\bhrou\gi):04566                                                                       * +
                      (C:\Users\bhrou\gi):04567                                                                       *         jsr     (PlaySound).l
                      (C:\Users\bhrou\gi):04568                                                                       * +
                      (C:\Users\bhrou\gi):04569                                                                       *         moveq   #-1,d0
2FC2 39               (C:\Users\bhrou\gi):04570 [5]     4179            rts                                           *         rts
                      (C:\Users\bhrou\gi):04571                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04572                                                                       * ;loc_3F976:
                      (C:\Users\bhrou\gi):04573                                                                       * Touch_Special:
                      (C:\Users\bhrou\gi):04574                                                                       *         move.b  collision_flags(a1),d1
                      (C:\Users\bhrou\gi):04575                                                                       *         andi.b  #$3F,d1
                      (C:\Users\bhrou\gi):04576                                                                       *         cmpi.b  #6,d1
                      (C:\Users\bhrou\gi):04577                                                                       *         beq.s   loc_3FA00
                      (C:\Users\bhrou\gi):04578                                                                       *         cmpi.b  #7,d1
                      (C:\Users\bhrou\gi):04579                                                                       *         beq.w   loc_3FA18
                      (C:\Users\bhrou\gi):04580                                                                       *         cmpi.b  #$B,d1
                      (C:\Users\bhrou\gi):04581                                                                       *         beq.s   BranchTo_loc_3F85C
                      (C:\Users\bhrou\gi):04582                                                                       *         cmpi.b  #$A,d1
                      (C:\Users\bhrou\gi):04583                                                                       *         beq.s   loc_3FA00
                      (C:\Users\bhrou\gi):04584                                                                       *         cmpi.b  #$C,d1
                      (C:\Users\bhrou\gi):04585                                                                       *         beq.s   loc_3F9CE
                      (C:\Users\bhrou\gi):04586                                                                       *         cmpi.b  #$14,d1
                      (C:\Users\bhrou\gi):04587                                                                       *         beq.s   loc_3FA00
                      (C:\Users\bhrou\gi):04588                                                                       *         cmpi.b  #$15,d1
                      (C:\Users\bhrou\gi):04589                                                                       *         beq.s   loc_3FA00
                      (C:\Users\bhrou\gi):04590                                                                       *         cmpi.b  #$16,d1
                      (C:\Users\bhrou\gi):04591                                                                       *         beq.s   loc_3FA00
                      (C:\Users\bhrou\gi):04592                                                                       *         cmpi.b  #$17,d1
                      (C:\Users\bhrou\gi):04593                                                                       *         beq.s   loc_3FA00
                      (C:\Users\bhrou\gi):04594                                                                       *         cmpi.b  #$18,d1
                      (C:\Users\bhrou\gi):04595                                                                       *         beq.s   loc_3FA00
                      (C:\Users\bhrou\gi):04596                                                                       *         cmpi.b  #$1A,d1
                      (C:\Users\bhrou\gi):04597                                                                       *         beq.s   loc_3FA22
                      (C:\Users\bhrou\gi):04598                                                                       *         cmpi.b  #$21,d1
                      (C:\Users\bhrou\gi):04599                                                                       *         beq.s   loc_3FA12
                      (C:\Users\bhrou\gi):04600                                                                       *         rts
                      (C:\Users\bhrou\gi):04601                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04602                                                                       * 
                      (C:\Users\bhrou\gi):04603                                                                       * BranchTo_loc_3F85C ; BranchTo
                      (C:\Users\bhrou\gi):04604                                                                       *         bra.w   loc_3F85C
                      (C:\Users\bhrou\gi):04605                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04606                                                                       * 
                      (C:\Users\bhrou\gi):04607                                                                       * loc_3F9CE:
                      (C:\Users\bhrou\gi):04608                                                                       *         sub.w   d0,d5
                      (C:\Users\bhrou\gi):04609                                                                       *         cmpi.w  #8,d5
                      (C:\Users\bhrou\gi):04610                                                                       *         bhs.s   BranchTo_Touch_Enemy
                      (C:\Users\bhrou\gi):04611                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04612                                                                       *         subq.w  #4,d0
                      (C:\Users\bhrou\gi):04613                                                                       *         btst    #0,status(a1)
                      (C:\Users\bhrou\gi):04614                                                                       *         beq.s   loc_3F9E8
                      (C:\Users\bhrou\gi):04615                                                                       *         subi.w  #$10,d0
                      (C:\Users\bhrou\gi):04616                                                                       * 
                      (C:\Users\bhrou\gi):04617                                                                       * loc_3F9E8:
                      (C:\Users\bhrou\gi):04618                                                                       *         sub.w   d2,d0
                      (C:\Users\bhrou\gi):04619                                                                       *         bcc.s   loc_3F9F4
                      (C:\Users\bhrou\gi):04620                                                                       *         addi.w  #$18,d0
                      (C:\Users\bhrou\gi):04621                                                                       *         bcs.s   BranchTo_Touch_ChkHurt
                      (C:\Users\bhrou\gi):04622                                                                       *         bra.s   BranchTo_Touch_Enemy
                      (C:\Users\bhrou\gi):04623                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04624                                                                       * 
                      (C:\Users\bhrou\gi):04625                                                                       * loc_3F9F4:
                      (C:\Users\bhrou\gi):04626                                                                       *         cmp.w   d4,d0
                      (C:\Users\bhrou\gi):04627                                                                       *         bhi.s   BranchTo_Touch_Enemy
                      (C:\Users\bhrou\gi):04628                                                                       * 
                      (C:\Users\bhrou\gi):04629                                                                       * BranchTo_Touch_ChkHurt ; BranchTo
                      (C:\Users\bhrou\gi):04630                                                                       *         bra.w   Touch_ChkHurt
                      (C:\Users\bhrou\gi):04631                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04632                                                                       * 
                      (C:\Users\bhrou\gi):04633                                                                       * BranchTo_Touch_Enemy ; BranchTo
                      (C:\Users\bhrou\gi):04634                                                                       *         bra.w   Touch_Enemy
                      (C:\Users\bhrou\gi):04635                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04636                                                                       * 
                      (C:\Users\bhrou\gi):04637                                                                       * loc_3FA00:
                      (C:\Users\bhrou\gi):04638                                                                       *         move.w  a0,d1
                      (C:\Users\bhrou\gi):04639                                                                       *         subi.w  #MainCharacter,d1
                      (C:\Users\bhrou\gi):04640                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04641                                                                       *         addq.b  #1,collision_property(a1)
                      (C:\Users\bhrou\gi):04642                                                                       * +
                      (C:\Users\bhrou\gi):04643                                                                       *         addq.b  #1,collision_property(a1)
                      (C:\Users\bhrou\gi):04644                                                                       *         rts
                      (C:\Users\bhrou\gi):04645                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04646                                                                       * 
                      (C:\Users\bhrou\gi):04647                                                                       * loc_3FA12:
                      (C:\Users\bhrou\gi):04648                                                                       *         addq.b  #1,collision_property(a1)
                      (C:\Users\bhrou\gi):04649                                                                       *         rts
                      (C:\Users\bhrou\gi):04650                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04651                                                                       * 
                      (C:\Users\bhrou\gi):04652                                                                       * loc_3FA18:
                      (C:\Users\bhrou\gi):04653                                                                       *         move.b  #2,collision_property(a1)
                      (C:\Users\bhrou\gi):04654                                                                       *         bra.w   Touch_Enemy
                      (C:\Users\bhrou\gi):04655                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04656                                                                       * 
                      (C:\Users\bhrou\gi):04657                                                                       * loc_3FA22:
                      (C:\Users\bhrou\gi):04658                                                                       *         move.b  #-1,collision_property(a1)
                      (C:\Users\bhrou\gi):04659                                                                       *         bra.w   Touch_Enemy
                      (C:\Users\bhrou\gi):04660                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04661                                                                       * ; loc_3FA2C:
                      (C:\Users\bhrou\gi):04662                                                                       * BossSpecificCollision:
                      (C:\Users\bhrou\gi):04663                                                                       *         cmpi.b  #$F,d0
                      (C:\Users\bhrou\gi):04664                                                                       *         bne.s   +       ; rts
                      (C:\Users\bhrou\gi):04665                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):04666                                                                       *         move.b  (Current_Boss_ID).w,d0
                      (C:\Users\bhrou\gi):04667                                                                       *         beq.s   +       ; rts
                      (C:\Users\bhrou\gi):04668                                                                       *         subq.w  #1,d0
                      (C:\Users\bhrou\gi):04669                                                                       *         add.w   d0,d0
                      (C:\Users\bhrou\gi):04670                                                                       *         move.w  BossCollision_Index(pc,d0.w),d0
                      (C:\Users\bhrou\gi):04671                                                                       *         jmp     BossCollision_Index(pc,d0.w)
                      (C:\Users\bhrou\gi):04672                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04673                                                                       * +       rts
                      (C:\Users\bhrou\gi):04674                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04675                                                                       * ; off_3FA48:
                      (C:\Users\bhrou\gi):04676                                                                       * BossCollision_Index:offsetTable ; jump depending on boss ID
                      (C:\Users\bhrou\gi):04677                                                                       *         offsetTableEntry.w BossCollision_EHZ_CPZ
                      (C:\Users\bhrou\gi):04678                                                                       *         offsetTableEntry.w BossCollision_EHZ_CPZ
                      (C:\Users\bhrou\gi):04679                                                                       *         offsetTableEntry.w BossCollision_HTZ
                      (C:\Users\bhrou\gi):04680                                                                       *         offsetTableEntry.w BossCollision_ARZ
                      (C:\Users\bhrou\gi):04681                                                                       *         offsetTableEntry.w BossCollision_MCZ
                      (C:\Users\bhrou\gi):04682                                                                       *         offsetTableEntry.w BossCollision_CNZ
                      (C:\Users\bhrou\gi):04683                                                                       *         offsetTableEntry.w BossCollision_MTZ
                      (C:\Users\bhrou\gi):04684                                                                       *         offsetTableEntry.w BossCollision_OOZ
                      (C:\Users\bhrou\gi):04685                                                                       *         offsetTableEntry.w return_3FA5E
                      (C:\Users\bhrou\gi):04686                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04687                                                                       * ;loc_3FA5A:
                      (C:\Users\bhrou\gi):04688                                                                       * BossCollision_EHZ_CPZ:
                      (C:\Users\bhrou\gi):04689                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04690                                                                       * 
                      (C:\Users\bhrou\gi):04691                                                                       * return_3FA5E:
                      (C:\Users\bhrou\gi):04692                                                                       *         rts
                      (C:\Users\bhrou\gi):04693                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04694                                                                       * ;loc_3FA60:
                      (C:\Users\bhrou\gi):04695                                                                       * BossCollision_HTZ:
                      (C:\Users\bhrou\gi):04696                                                                       *         tst.b   (Boss_CollisionRoutine).w
                      (C:\Users\bhrou\gi):04697                                                                       *         bne.s   +
                      (C:\Users\bhrou\gi):04698                                                                       *         rts
                      (C:\Users\bhrou\gi):04699                                                                       * ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):04700                                                                       * +
                      (C:\Users\bhrou\gi):04701                                                                       *         move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):04702                                                                       *         moveq   #0,d1
                      (C:\Users\bhrou\gi):04703                                                                       *         move.b  objoff_15(a1),d1
                      (C:\Users\bhrou\gi):04704                                                                       *         subq.b  #2,d1
                      (C:\Users\bhrou\gi):04705                                                                       *         cmpi.b  #7,d1
                      (C:\Users\bhrou\gi):04706                                                                       *         bgt.s   loc_3FAA8
                      (C:\Users\bhrou\gi):04707                                                                       *         move.w  d1,d7
                      (C:\Users\bhrou\gi):04708                                                                       *         add.w   d7,d7
                      (C:\Users\bhrou\gi):04709                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04710                                                                       *         btst    #0,render_flags(a1)
                      (C:\Users\bhrou\gi):04711                                                                       *         beq.s   loc_3FA8E
                      (C:\Users\bhrou\gi):04712                                                                       *         add.w   word_3FAB0(pc,d7.w),d0
                      (C:\Users\bhrou\gi):04713                                                                       *         bra.s   loc_3FA92
                      (C:\Users\bhrou\gi):04714                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04715                                                                       * 
                      (C:\Users\bhrou\gi):04716                                                                       * loc_3FA8E:
                      (C:\Users\bhrou\gi):04717                                                                       *         sub.w   word_3FAB0(pc,d7.w),d0
                      (C:\Users\bhrou\gi):04718                                                                       * 
                      (C:\Users\bhrou\gi):04719                                                                       * loc_3FA92:
                      (C:\Users\bhrou\gi):04720                                                                       *         move.b  byte_3FAC0(pc,d1.w),d1
                      (C:\Users\bhrou\gi):04721                                                                       *         ori.l   #$40000,d1
                      (C:\Users\bhrou\gi):04722                                                                       *         move.w  y_pos(a1),d7
                      (C:\Users\bhrou\gi):04723                                                                       *         subi.w  #$1C,d7
                      (C:\Users\bhrou\gi):04724                                                                       *         bsr.w   Boss_DoCollision
                      (C:\Users\bhrou\gi):04725                                                                       * 
                      (C:\Users\bhrou\gi):04726                                                                       * loc_3FAA8:
                      (C:\Users\bhrou\gi):04727                                                                       *         move.w  (sp)+,d7
                      (C:\Users\bhrou\gi):04728                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04729                                                                       *         rts
                      (C:\Users\bhrou\gi):04730                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04731                                                                       * word_3FAB0:
                      (C:\Users\bhrou\gi):04732                                                                       *         dc.w   $1C
                      (C:\Users\bhrou\gi):04733                                                                       *         dc.w   $20      ; 1
                      (C:\Users\bhrou\gi):04734                                                                       *         dc.w   $28      ; 2
                      (C:\Users\bhrou\gi):04735                                                                       *         dc.w   $34      ; 3
                      (C:\Users\bhrou\gi):04736                                                                       *         dc.w   $3C      ; 4
                      (C:\Users\bhrou\gi):04737                                                                       *         dc.w   $44      ; 5
                      (C:\Users\bhrou\gi):04738                                                                       *         dc.w   $60      ; 6
                      (C:\Users\bhrou\gi):04739                                                                       *         dc.w   $70      ; 7
                      (C:\Users\bhrou\gi):04740                                                                       * byte_3FAC0:
                      (C:\Users\bhrou\gi):04741                                                                       *         dc.b   4
                      (C:\Users\bhrou\gi):04742                                                                       *         dc.b   4        ; 1
                      (C:\Users\bhrou\gi):04743                                                                       *         dc.b   8        ; 2
                      (C:\Users\bhrou\gi):04744                                                                       *         dc.b  $C        ; 3
                      (C:\Users\bhrou\gi):04745                                                                       *         dc.b $14        ; 4
                      (C:\Users\bhrou\gi):04746                                                                       *         dc.b $1C        ; 5
                      (C:\Users\bhrou\gi):04747                                                                       *         dc.b $24        ; 6
                      (C:\Users\bhrou\gi):04748                                                                       *         dc.b   8        ; 7
                      (C:\Users\bhrou\gi):04749                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04750                                                                       * ;loc_3FAC8:
                      (C:\Users\bhrou\gi):04751                                                                       * BossCollision_ARZ:
                      (C:\Users\bhrou\gi):04752                                                                       *         move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):04753                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04754                                                                       *         move.w  y_pos(a1),d7
                      (C:\Users\bhrou\gi):04755                                                                       *         tst.b   (Boss_CollisionRoutine).w
                      (C:\Users\bhrou\gi):04756                                                                       *         beq.s   ++
                      (C:\Users\bhrou\gi):04757                                                                       *         addi_.w #4,d7
                      (C:\Users\bhrou\gi):04758                                                                       *         subi.w  #$50,d0
                      (C:\Users\bhrou\gi):04759                                                                       *         btst    #0,render_flags(a1)
                      (C:\Users\bhrou\gi):04760                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04761                                                                       *         addi.w  #$A0,d0
                      (C:\Users\bhrou\gi):04762                                                                       * +
                      (C:\Users\bhrou\gi):04763                                                                       *         move.l  #$140010,d1
                      (C:\Users\bhrou\gi):04764                                                                       *         bsr.w   Boss_DoCollision
                      (C:\Users\bhrou\gi):04765                                                                       * +
                      (C:\Users\bhrou\gi):04766                                                                       *         move.w  (sp)+,d7
                      (C:\Users\bhrou\gi):04767                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04768                                                                       *         rts
                      (C:\Users\bhrou\gi):04769                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04770                                                                       * ;loc_3FAFE:
                      (C:\Users\bhrou\gi):04771                                                                       * BossCollision_MCZ:
                      (C:\Users\bhrou\gi):04772                                                                       *         sf      boss_hurt_sonic(a1)
                      (C:\Users\bhrou\gi):04773                                                                       *         cmpi.b  #1,(Boss_CollisionRoutine).w
                      (C:\Users\bhrou\gi):04774                                                                       *         blt.s   BossCollision_MCZ2
                      (C:\Users\bhrou\gi):04775                                                                       * ; Boss_CollisionRoutine = 1, i.e. diggers pointing to the side
                      (C:\Users\bhrou\gi):04776                                                                       *         move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):04777                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04778                                                                       *         move.w  y_pos(a1),d7
                      (C:\Users\bhrou\gi):04779                                                                       *         addi_.w #4,d7
                      (C:\Users\bhrou\gi):04780                                                                       *         subi.w  #$30,d0
                      (C:\Users\bhrou\gi):04781                                                                       *         btst    #0,render_flags(a1)     ; left or right?
                      (C:\Users\bhrou\gi):04782                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04783                                                                       *         addi.w  #$60,d0                 ; x+$30, otherwise x-$30
                      (C:\Users\bhrou\gi):04784                                                                       * +
                      (C:\Users\bhrou\gi):04785                                                                       *         move.l  #$40004,d1              ; heigth 4, width 4
                      (C:\Users\bhrou\gi):04786                                                                       *         bsr.w   Boss_DoCollision
                      (C:\Users\bhrou\gi):04787                                                                       *         move.w  (sp)+,d7
                      (C:\Users\bhrou\gi):04788                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04789                                                                       *         cmpi.w  #$78,invulnerable_time(a0)
                      (C:\Users\bhrou\gi):04790                                                                       *         bne.s   +       ; rts
                      (C:\Users\bhrou\gi):04791                                                                       *         st      boss_hurt_sonic(a1)     ; sonic has just been hurt flag
                      (C:\Users\bhrou\gi):04792                                                                       * +
                      (C:\Users\bhrou\gi):04793                                                                       *         rts
                      (C:\Users\bhrou\gi):04794                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04795                                                                       * ; Boss_CollisionRoutine = 0, i.e. diggers pointing towards top
                      (C:\Users\bhrou\gi):04796                                                                       * ;loc_3FB46:
                      (C:\Users\bhrou\gi):04797                                                                       * BossCollision_MCZ2:
                      (C:\Users\bhrou\gi):04798                                                                       *         move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):04799                                                                       *         movea.w #$14,a5
                      (C:\Users\bhrou\gi):04800                                                                       *         movea.w #0,a4
                      (C:\Users\bhrou\gi):04801                                                                       * 
                      (C:\Users\bhrou\gi):04802                                                                       * -       move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04803                                                                       *         move.w  y_pos(a1),d7
                      (C:\Users\bhrou\gi):04804                                                                       *         subi.w  #$20,d7
                      (C:\Users\bhrou\gi):04805                                                                       *         add.w   a5,d0                   ; first check x+$14, second x-$14
                      (C:\Users\bhrou\gi):04806                                                                       *         move.l  #$100004,d1             ; heigth $10, width 4
                      (C:\Users\bhrou\gi):04807                                                                       *         bsr.w   Boss_DoCollision
                      (C:\Users\bhrou\gi):04808                                                                       *         movea.w #-$14,a5
                      (C:\Users\bhrou\gi):04809                                                                       *         adda_.w #1,a4
                      (C:\Users\bhrou\gi):04810                                                                       *         cmpa.w  #1,a4
                      (C:\Users\bhrou\gi):04811                                                                       *         beq.s   -                       ; jump back once for second check
                      (C:\Users\bhrou\gi):04812                                                                       *         move.w  (sp)+,d7
                      (C:\Users\bhrou\gi):04813                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04814                                                                       *         cmpi.w  #$78,invulnerable_time(a0)
                      (C:\Users\bhrou\gi):04815                                                                       *         bne.s   +       ; rts
                      (C:\Users\bhrou\gi):04816                                                                       *         st      boss_hurt_sonic(a1)     ; sonic has just been hurt flag
                      (C:\Users\bhrou\gi):04817                                                                       * +
                      (C:\Users\bhrou\gi):04818                                                                       *         rts
                      (C:\Users\bhrou\gi):04819                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04820                                                                       * ;loc_3FB8A:
                      (C:\Users\bhrou\gi):04821                                                                       * BossCollision_CNZ:
                      (C:\Users\bhrou\gi):04822                                                                       *         tst.b   (Boss_CollisionRoutine).w
                      (C:\Users\bhrou\gi):04823                                                                       *         beq.s   ++
                      (C:\Users\bhrou\gi):04824                                                                       *         move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):04825                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04826                                                                       *         move.w  y_pos(a1),d7
                      (C:\Users\bhrou\gi):04827                                                                       *         addi.w  #$28,d7
                      (C:\Users\bhrou\gi):04828                                                                       *         move.l  #$80010,d1
                      (C:\Users\bhrou\gi):04829                                                                       *         cmpi.b  #1,(Boss_CollisionRoutine).w
                      (C:\Users\bhrou\gi):04830                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04831                                                                       *         move.w  #$20,d1
                      (C:\Users\bhrou\gi):04832                                                                       *         subi_.w #8,d7
                      (C:\Users\bhrou\gi):04833                                                                       *         addi_.w #4,d0
                      (C:\Users\bhrou\gi):04834                                                                       * +
                      (C:\Users\bhrou\gi):04835                                                                       *         bsr.w   Boss_DoCollision
                      (C:\Users\bhrou\gi):04836                                                                       *         move.w  (sp)+,d7
                      (C:\Users\bhrou\gi):04837                                                                       * +
                      (C:\Users\bhrou\gi):04838                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04839                                                                       *         rts
                      (C:\Users\bhrou\gi):04840                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04841                                                                       * ;loc_3FBC4:
                      (C:\Users\bhrou\gi):04842                                                                       * BossCollision_MTZ:
                      (C:\Users\bhrou\gi):04843                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04844                                                                       *         rts
                      (C:\Users\bhrou\gi):04845                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04846                                                                       * ;loc_3FBCA:
                      (C:\Users\bhrou\gi):04847                                                                       * BossCollision_OOZ:
                      (C:\Users\bhrou\gi):04848                                                                       *         cmpi.b  #1,(Boss_CollisionRoutine).w
                      (C:\Users\bhrou\gi):04849                                                                       *         blt.s   loc_3FC46
                      (C:\Users\bhrou\gi):04850                                                                       *         beq.s   loc_3FC1C
                      (C:\Users\bhrou\gi):04851                                                                       *         move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):04852                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04853                                                                       *         move.w  y_pos(a1),d7
                      (C:\Users\bhrou\gi):04854                                                                       *         moveq   #0,d1
                      (C:\Users\bhrou\gi):04855                                                                       *         move.b  mainspr_mapframe(a1),d1
                      (C:\Users\bhrou\gi):04856                                                                       *         subq.b  #2,d1
                      (C:\Users\bhrou\gi):04857                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04858                                                                       *         btst    #0,render_flags(a1)
                      (C:\Users\bhrou\gi):04859                                                                       *         beq.s   loc_3FBF6
                      (C:\Users\bhrou\gi):04860                                                                       *         add.w   word_3FC10(pc,d1.w),d0
                      (C:\Users\bhrou\gi):04861                                                                       *         bra.s   loc_3FBFA
                      (C:\Users\bhrou\gi):04862                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04863                                                                       * 
                      (C:\Users\bhrou\gi):04864                                                                       * loc_3FBF6:
                      (C:\Users\bhrou\gi):04865                                                                       *         sub.w   word_3FC10(pc,d1.w),d0
                      (C:\Users\bhrou\gi):04866                                                                       * 
                      (C:\Users\bhrou\gi):04867                                                                       * loc_3FBFA:
                      (C:\Users\bhrou\gi):04868                                                                       *         sub.w   word_3FC10+2(pc,d1.w),d7
                      (C:\Users\bhrou\gi):04869                                                                       *         move.l  #$60008,d1
                      (C:\Users\bhrou\gi):04870                                                                       *         bsr.w   Boss_DoCollision
                      (C:\Users\bhrou\gi):04871                                                                       *         move.w  (sp)+,d7
                      (C:\Users\bhrou\gi):04872                                                                       *         move.w  #0,d0
                      (C:\Users\bhrou\gi):04873                                                                       *         rts
                      (C:\Users\bhrou\gi):04874                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04875                                                                       * word_3FC10:
                      (C:\Users\bhrou\gi):04876                                                                       *         dc.w   $14,    0
                      (C:\Users\bhrou\gi):04877                                                                       *         dc.w   $10,  $10
                      (C:\Users\bhrou\gi):04878                                                                       *         dc.w   $10, -$10
                      (C:\Users\bhrou\gi):04879                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04880                                                                       * 
                      (C:\Users\bhrou\gi):04881                                                                       * loc_3FC1C:
                      (C:\Users\bhrou\gi):04882                                                                       *         move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):04883                                                                       *         move.w  x_pos(a1),d0
                      (C:\Users\bhrou\gi):04884                                                                       *         move.w  y_pos(a1),d7
                      (C:\Users\bhrou\gi):04885                                                                       *         moveq   #$10,d1
                      (C:\Users\bhrou\gi):04886                                                                       *         btst    #0,render_flags(a1)
                      (C:\Users\bhrou\gi):04887                                                                       *         beq.s   +
                      (C:\Users\bhrou\gi):04888                                                                       *         neg.w   d1
                      (C:\Users\bhrou\gi):04889                                                                       * +
                      (C:\Users\bhrou\gi):04890                                                                       *         sub.w   d1,d0
                      (C:\Users\bhrou\gi):04891                                                                       *         move.l  #$8000C,d1
                      (C:\Users\bhrou\gi):04892                                                                       *         bsr.w   loc_3FC7A
                      (C:\Users\bhrou\gi):04893                                                                       *         move.w  (sp)+,d7
                      (C:\Users\bhrou\gi):04894                                                                       *         move.b  #0,d0
                      (C:\Users\bhrou\gi):04895                                                                       *         rts
                      (C:\Users\bhrou\gi):04896                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04897                                                                       * 
                      (C:\Users\bhrou\gi):04898                                                                       * loc_3FC46:
                      (C:\Users\bhrou\gi):04899                                                                       *         move.b  collision_flags(a1),d0
                      (C:\Users\bhrou\gi):04900                                                                       *         rts
                      (C:\Users\bhrou\gi):04901                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04902                                                                       * ;loc_3FC4C:
                      (C:\Users\bhrou\gi):04903                                                                       *         ; d7 = y_boss, d3 = y_sonic, d1 (high word) = heigth
                      (C:\Users\bhrou\gi):04904                                                                       *         ; d0 = x_boss, d2 = x_sonic, d1 (low word)  = width
                      (C:\Users\bhrou\gi):04905                                                                       * Boss_DoCollision:
                      (C:\Users\bhrou\gi):04906                                                                       *         sub.w   d1,d0
                      (C:\Users\bhrou\gi):04907                                                                       *         sub.w   d2,d0
                      (C:\Users\bhrou\gi):04908                                                                       *         bcc.s   loc_3FC5A
                      (C:\Users\bhrou\gi):04909                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04910                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):04911                                                                       *         bcs.s   loc_3FC5E
                      (C:\Users\bhrou\gi):04912                                                                       * 
                      (C:\Users\bhrou\gi):04913                                                                       * return_3FC58:
                      (C:\Users\bhrou\gi):04914                                                                       *         rts
                      (C:\Users\bhrou\gi):04915                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04916                                                                       * 
                      (C:\Users\bhrou\gi):04917                                                                       * loc_3FC5A:
                      (C:\Users\bhrou\gi):04918                                                                       *         cmp.w   d4,d0
                      (C:\Users\bhrou\gi):04919                                                                       *         bhi.s   return_3FC58
                      (C:\Users\bhrou\gi):04920                                                                       * 
                      (C:\Users\bhrou\gi):04921                                                                       * loc_3FC5E:
                      (C:\Users\bhrou\gi):04922                                                                       *         swap    d1
                      (C:\Users\bhrou\gi):04923                                                                       *         sub.w   d1,d7
                      (C:\Users\bhrou\gi):04924                                                                       *         sub.w   d3,d7
                      (C:\Users\bhrou\gi):04925                                                                       *         bcc.s   loc_3FC70
                      (C:\Users\bhrou\gi):04926                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04927                                                                       *         add.w   d1,d7
                      (C:\Users\bhrou\gi):04928                                                                       *         bcs.w   Touch_ChkHurt
                      (C:\Users\bhrou\gi):04929                                                                       *         bra.s   return_3FC58
                      (C:\Users\bhrou\gi):04930                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04931                                                                       * 
                      (C:\Users\bhrou\gi):04932                                                                       * loc_3FC70:
                      (C:\Users\bhrou\gi):04933                                                                       *         cmp.w   d5,d7
                      (C:\Users\bhrou\gi):04934                                                                       *         bhi.w   return_3FC58
                      (C:\Users\bhrou\gi):04935                                                                       *         bra.w   Touch_ChkHurt
                      (C:\Users\bhrou\gi):04936                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04937                                                                       * 
                      (C:\Users\bhrou\gi):04938                                                                       * loc_3FC7A:
                      (C:\Users\bhrou\gi):04939                                                                       *         sub.w   d1,d0
                      (C:\Users\bhrou\gi):04940                                                                       *         sub.w   d2,d0
                      (C:\Users\bhrou\gi):04941                                                                       *         bcc.s   loc_3FC88
                      (C:\Users\bhrou\gi):04942                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04943                                                                       *         add.w   d1,d0
                      (C:\Users\bhrou\gi):04944                                                                       *         bcs.s   loc_3FC8C
                      (C:\Users\bhrou\gi):04945                                                                       * 
                      (C:\Users\bhrou\gi):04946                                                                       * return_3FC86:
                      (C:\Users\bhrou\gi):04947                                                                       *         rts
                      (C:\Users\bhrou\gi):04948                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04949                                                                       * 
                      (C:\Users\bhrou\gi):04950                                                                       * loc_3FC88:
                      (C:\Users\bhrou\gi):04951                                                                       *         cmp.w   d4,d0
                      (C:\Users\bhrou\gi):04952                                                                       *         bhi.s   return_3FC86
                      (C:\Users\bhrou\gi):04953                                                                       * 
                      (C:\Users\bhrou\gi):04954                                                                       * loc_3FC8C:
                      (C:\Users\bhrou\gi):04955                                                                       *         swap    d1
                      (C:\Users\bhrou\gi):04956                                                                       *         sub.w   d1,d7
                      (C:\Users\bhrou\gi):04957                                                                       *         sub.w   d3,d7
                      (C:\Users\bhrou\gi):04958                                                                       *         bcc.s   loc_3FC9E
                      (C:\Users\bhrou\gi):04959                                                                       *         add.w   d1,d1
                      (C:\Users\bhrou\gi):04960                                                                       *         add.w   d1,d7
                      (C:\Users\bhrou\gi):04961                                                                       *         bcs.w   loc_3FCA4
                      (C:\Users\bhrou\gi):04962                                                                       *         bra.s   return_3FC86
                      (C:\Users\bhrou\gi):04963                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04964                                                                       * 
                      (C:\Users\bhrou\gi):04965                                                                       * loc_3FC9E:
                      (C:\Users\bhrou\gi):04966                                                                       *         cmp.w   d5,d7
                      (C:\Users\bhrou\gi):04967                                                                       *         bhi.w   return_3FC86
                      (C:\Users\bhrou\gi):04968                                                                       * 
                      (C:\Users\bhrou\gi):04969                                                                       * loc_3FCA4:
                      (C:\Users\bhrou\gi):04970                                                                       *         neg.w   x_vel(a0)
                      (C:\Users\bhrou\gi):04971                                                                       *         neg.w   y_vel(a0)
                      (C:\Users\bhrou\gi):04972                                                                       *         rts
                      (C:\Users\bhrou\gi):04973                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04974                                                                       * 
                      (C:\Users\bhrou\gi):04975                                                                       *     if gameRevision<2
                      (C:\Users\bhrou\gi):04976                                                                       *         nop
                      (C:\Users\bhrou\gi):04977                                                                       *     endif
                      (C:\Users\bhrou\gi):04978                                                                       * 
                      (C:\Users\bhrou\gi):04979                                                                       *     if ~~removeJmpTos
                      (C:\Users\bhrou\gi):04980                                                                       * JmpTo_Sonic_ResetOnFloor_Part2 ; JmpTo
                      (C:\Users\bhrou\gi):04981                                                                       *         jmp     (Sonic_ResetOnFloor_Part2).l
                      (C:\Users\bhrou\gi):04982                                                                       * JmpTo_Check_CNZ_bumpers
                      (C:\Users\bhrou\gi):04983                                                                       *         jmp     (Check_CNZ_bumpers).l
                      (C:\Users\bhrou\gi):04984                                                                       * JmpTo_Touch_Rings ; JmpTo
                      (C:\Users\bhrou\gi):04985                                                                       *         jmp     (Touch_Rings).l
                      (C:\Users\bhrou\gi):04986                                                                       * 
                      (C:\Users\bhrou\gi):04987                                                                       *         align 4
                      (C:\Users\bhrou\gi):04988                                                                       *     endif
                      (C:\Users\bhrou\gi):04989                                                                       * 
                      (C:\Users\bhrou\gi):04990                                                                       * 
                      (C:\Users\bhrou\gi):04991                                                                       * 
                      (C:\Users\bhrou\gi):04992                                                                       * 
                      (C:\Users\bhrou\gi):04993                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):04994                                                                       * ;loc_3FCC4:
                      (C:\Users\bhrou\gi):04995                                                                       * AniArt_Load:
                      (C:\Users\bhrou\gi):04996                                                                       *         moveq   #0,d0
                      (C:\Users\bhrou\gi):04997                                                                       *         move.b  (Current_Zone).w,d0
                      (C:\Users\bhrou\gi):04998                                                                       *         add.w   d0,d0
                      (C:\Users\bhrou\gi):04999                                                                       *         add.w   d0,d0
                      (C:\Users\bhrou\gi):05000                                                                       *         move.w  PLC_DYNANM+2(pc,d0.w),d1
                      (C:\Users\bhrou\gi):05001                                                                       *         lea     PLC_DYNANM(pc,d1.w),a2
                      (C:\Users\bhrou\gi):05002                                                                       *         move.w  PLC_DYNANM(pc,d0.w),d0
                      (C:\Users\bhrou\gi):05003                                                                       *         jmp     PLC_DYNANM(pc,d0.w)
                      (C:\Users\bhrou\gi):05004                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):05005                                                                       *         rts
                      (C:\Users\bhrou\gi):05006                                                                       * ; ===========================================================================
                      (C:\Users\bhrou\gi):05007                 
2FC3                  (C:\Users\bhrou\gi):05008                 Sonic_Animate
2FC3 BD70F1           (C:\Users\bhrou\gi):05009 [8]     4187            jsr   Sonic_Animate_Do
2FC6 5D               (C:\Users\bhrou\gi):05010 [2]     4189            tstb
2FC7 2B01             (C:\Users\bhrou\gi):05011 [3]     4192            bmi   SAnim_WalkRun
2FC9 39               (C:\Users\bhrou\gi):05012 [5]     4197            rts
                      (C:\Users\bhrou\gi):05013                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05014                                                                       *; loc_1B3F4:
2FCA                  (C:\Users\bhrou\gi):05015                 SAnim_WalkRun                                         *SAnim_WalkRun:
2FCA 5C               (C:\Users\bhrou\gi):05016 [2]     4199            incb                                          *  addq.b  #1,d0       ; is the start flag = $FF ?
2FCB 1026009C         (C:\Users\bhrou\gi):05017 [5+?]   4204            lbne  SAnim_Roll                              *  bne.w   SAnim_Roll  ; if not, branch
                      (C:\Users\bhrou\gi):05018                                                                       *  moveq   #0,d0       ; is animation walking/running?
2FCF A6C866           (C:\Users\bhrou\gi):05019 [5]     4209            lda   flip_angle,u                            *  move.b  flip_angle(a0),d0   ; if not, branch
2FD2 10260091         (C:\Users\bhrou\gi):05020 [5+?]   4214            lbne  SAnim_Tumble                            *  bne.w   SAnim_Tumble
2FD6 8600             (C:\Users\bhrou\gi):05021 [2]     4216            lda   #0
2FD8 B72FFB           (C:\Users\bhrou\gi):05022 [5]     4221            sta   @d1                                     *  moveq   #0,d1
2FDB E6C860           (C:\Users\bhrou\gi):05023 [5]     4226            ldb   angle,u                                 *  move.b  angle(a0),d0    ; get Sonic's angle
2FDE 2B03             (C:\Users\bhrou\gi):05024 [3]     4229            bmi   >                                       *  bmi.s   +
2FE0 2701             (C:\Users\bhrou\gi):05025 [3]     4232            beq   >                                       *  beq.s   +
2FE2 5A               (C:\Users\bhrou\gi):05026 [2]     4234            decb                                          *  subq.b  #1,d0
                      (C:\Users\bhrou\gi):05027                 !                                                     *+
2FE3 A64B             (C:\Users\bhrou\gi):05028 [5]     4239            lda   status,u                                *  move.b  status(a0),d2
2FE5 8401             (C:\Users\bhrou\gi):05029 [2]     4241            anda  #status_x_orientation                   *  andi.b  #1,d2       ; is Sonic mirrored horizontally?
2FE7 2601             (C:\Users\bhrou\gi):05030 [3]     4244            bne   >                                       *  bne.s   +       ; if yes, branch
2FE9 50               (C:\Users\bhrou\gi):05031 [2]     4246            negb                                          *  not.b   d0      ; reverse angle
                      (C:\Users\bhrou\gi):05032                 !                                                     *+
2FEA CB10             (C:\Users\bhrou\gi):05033 [2]     4248            addb  #$10                                    *  addi.b  #$10,d0     ; add $10 to angle
2FEC F7302C           (C:\Users\bhrou\gi):05034 [5]     4253            stb   @d0
2FEF 2A05             (C:\Users\bhrou\gi):05035 [3]     4256            bpl   >                                       *  bpl.s   +       ; if angle is $0-$7F, branch
2FF1 C603             (C:\Users\bhrou\gi):05036 [2]     4258            ldb   #3
2FF3 F72FFB           (C:\Users\bhrou\gi):05037 [5]     4263            stb   @d1                                     *  moveq   #3,d1
                      (C:\Users\bhrou\gi):05038                 !                                                     *+
                      (C:\Users\bhrou\gi):05039                                                                       *  andi.b  #$FC,render_flags(a0)
2FF6 E642             (C:\Users\bhrou\gi):05040 [5]     4268            ldb   render_flags,u
2FF8 C4FC             (C:\Users\bhrou\gi):05041 [2]     4270            andb  #^(render_xmirror_mask|render_ymirror_mask) 
2FFA 8800             (C:\Users\bhrou\gi):05042 [2]     4272            eora  #0                                      *  eor.b   d1,d2
     2FFB             (C:\Users\bhrou\gi):05043                 @d1     equ   *-1
2FFC B73044           (C:\Users\bhrou\gi):05044 [5]     4277            sta   @d2
2FFF FA3044           (C:\Users\bhrou\gi):05045 [5]     4282            orb   @d2                                     *  or.b    d2,render_flags(a0)
3002 E742             (C:\Users\bhrou\gi):05046 [5]     4287            stb   render_flags,u
3004 A64B             (C:\Users\bhrou\gi):05047 [5]     4292            lda   status,u
3006 8520             (C:\Users\bhrou\gi):05048 [2]     4294            bita  #status_pushing                         *  btst    #5,status(a0)
3008 102600A1         (C:\Users\bhrou\gi):05049 [5+?]   4299            lbne  SAnim_Push                              *  bne.w   SAnim_Push
                      (C:\Users\bhrou\gi):05050                         ; moved                                       *  lsr.b   #4,d0       ; divide angle by 16
                      (C:\Users\bhrou\gi):05051                         ; moved                                       *  andi.b  #6,d0       ; angle must be 0, 2, 4 or 6
300C ECC864           (C:\Users\bhrou\gi):05052 [6]     4305            ldd   inertia,u                               *  mvabs.w inertia(a0),d2  ; get Sonic's "speed" for animation purposes
300F 2A04             (C:\Users\bhrou\gi):05053 [3]     4308            bpl   >
                      (C:\Users\bhrou\gi):05054                         _negd
3011 40               (            _negd):00001 [2]     4310            nega
3012 50               (            _negd):00002 [2]     4312            negb
3013 8200             (            _negd):00003 [2]     4314            sbca  #0
                      (C:\Users\bhrou\gi):05055                 !
                      (C:\Users\bhrou\gi):05056                         ;                                             *    if status_sec_isSliding = 7
3015 6DC86A           (C:\Users\bhrou\gi):05057 [7]     4321            tst   status_secondary,u                      *  tst.b   status_secondary(a0)
3018 2A02             (C:\Users\bhrou\gi):05058 [3]     4324            bpl   >                                       *  bpl.w   +
                      (C:\Users\bhrou\gi):05059                         ;                                             *    else
                      (C:\Users\bhrou\gi):05060                         ;                                             *  btst    #status_sec_isSliding,status_secondary(a0)
                      (C:\Users\bhrou\gi):05061                         ;                                             *  beq.w   +
                      (C:\Users\bhrou\gi):05062                         ;                                             *    endif
                      (C:\Users\bhrou\gi):05063                         _lsld                                         *  add.w   d2,d2
301A 58               (            _lsld):00001 [2]     4326            lslb
301B 49               (            _lsld):00002 [2]     4328            rola
                      (C:\Users\bhrou\gi):05064                 !                                                     *+
                      (C:\Users\bhrou\gi):05065                         ; unimplemented                               *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):05066                         ; unimplemented                               *  bne.s   SAnim_Super
301C 8E305F           (C:\Users\bhrou\gi):05067 [3]     4331            ldx   #Lkp_SonAni_Run                         *  lea (SonAni_Run).l,a1   ; use running animation
301F 10830600         (C:\Users\bhrou\gi):05068 [5]     4336            cmpd  #$600                                   *  cmpi.w  #$600,d2        ; is Sonic at running speed?
3023 2403             (C:\Users\bhrou\gi):05069 [3]     4339            bhs   >                                       *  bhs.s   +               ; use running animation
3025 8E3057           (C:\Users\bhrou\gi):05070 [3]     4342            ldx   #Lkp_SonAni_Walk                        *  lea (SonAni_Walk).l,a1  ; if yes, branch
                      (C:\Users\bhrou\gi):05071                                                                       *  add.b   d0,d0
                      (C:\Users\bhrou\gi):05072                 !                                                     *+
                      (C:\Users\bhrou\gi):05073                                                                       *  add.b   d0,d0
                      (C:\Users\bhrou\gi):05074                                                                       *  move.b  d0,d3
3028 FD3044           (C:\Users\bhrou\gi):05075 [6]     4348            std   @d2
302B C600             (C:\Users\bhrou\gi):05076 [2]     4350            ldb   #0
     302C             (C:\Users\bhrou\gi):05077                 @d0     equ   *-1
302D 54               (C:\Users\bhrou\gi):05078 [2]     4352            lsrb
302E 54               (C:\Users\bhrou\gi):05079 [2]     4354            lsrb
302F 54               (C:\Users\bhrou\gi):05080 [2]     4356            lsrb
3030 54               (C:\Users\bhrou\gi):05081 [2]     4358            lsrb
3031 C406             (C:\Users\bhrou\gi):05082 [2]     4360            andb  #6
3033 AE85             (C:\Users\bhrou\gi):05083 [6]     4366            ldx   b,x
3035 AF44             (C:\Users\bhrou\gi):05084 [6]     4372            stx   anim,u                                  *  add.b   d3,mapping_frame(a0)
3037 BD719A           (C:\Users\bhrou\gi):05085 [8]     4380            jsr   SAnim_WalkRun_Sub
303A E649             (C:\Users\bhrou\gi):05086 [5]     4385            ldb   anim_frame_duration,u
303C F0703E           (C:\Users\bhrou\gi):05087 [5]     4390            subb  Vint_Main_runcount
303F E749             (C:\Users\bhrou\gi):05088 [5]     4395            stb   anim_frame_duration,u                   *  subq.b  #1,anim_frame_duration(a0)
3041 2A13             (C:\Users\bhrou\gi):05089 [3]     4398            bpl   return_1B4AC                            *  bpl.s   return_1B4AC
3043 CC0000           (C:\Users\bhrou\gi):05090 [3]     4401            ldd   #0
     3044             (C:\Users\bhrou\gi):05091                 @d2     equ   *-2
                      (C:\Users\bhrou\gi):05092                         _negd                                         *  neg.w   d2
3046 40               (            _negd):00001 [2]     4403            nega
3047 50               (            _negd):00002 [2]     4405            negb
3048 8200             (            _negd):00003 [2]     4407            sbca  #0
304A C30800           (C:\Users\bhrou\gi):05093 [4]     4411            addd  #$800                                   *  addi.w  #$800,d2
304D 2A03             (C:\Users\bhrou\gi):05094 [3]     4414            bpl   >                                       *  bpl.s   +
304F CC0000           (C:\Users\bhrou\gi):05095 [3]     4417            ldd   #0                                      *  moveq   #0,d2
                      (C:\Users\bhrou\gi):05096                 !                                                     *+
                      (C:\Users\bhrou\gi):05097                         ;                                             *  lsr.w   #8,d2
3052 A749             (C:\Users\bhrou\gi):05098 [5]     4422            sta   anim_frame_duration,u                   *  move.b  d2,anim_frame_duration(a0)  ; modify frame duration
3054 6C48             (C:\Users\bhrou\gi):05099 [7]     4429            inc   anim_frame,u                            *  addq.b  #1,anim_frame(a0)       ; modify frame number
                      (C:\Users\bhrou\gi):05100                                                                       *
3056                  (C:\Users\bhrou\gi):05101                 return_1B4AC                                          *return_1B4AC:
3056 39               (C:\Users\bhrou\gi):05102 [5]     4434            rts                                           *  rts
                      (C:\Users\bhrou\gi):05103                 
3057                  (C:\Users\bhrou\gi):05104                 Lkp_SonAni_Walk
3057 0001             (C:\Users\bhrou\gi):05105                         fdb   SonAni_Walk
3059 0013             (C:\Users\bhrou\gi):05106                         fdb   SonAni_Walk_1
305B 0025             (C:\Users\bhrou\gi):05107                         fdb   SonAni_Walk_2
305D 0037             (C:\Users\bhrou\gi):05108                         fdb   SonAni_Walk_3
305F                  (C:\Users\bhrou\gi):05109                 Lkp_SonAni_Run
305F 0049             (C:\Users\bhrou\gi):05110                         fdb   SonAni_Run
3061 0057             (C:\Users\bhrou\gi):05111                         fdb   SonAni_Run_1
3063 0065             (C:\Users\bhrou\gi):05112                         fdb   SonAni_Run_2
3065 0073             (C:\Users\bhrou\gi):05113                         fdb   SonAni_Run_3
                      (C:\Users\bhrou\gi):05114                 
                      (C:\Users\bhrou\gi):05115                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05116                                                                       *; loc_1B4AE:
                      (C:\Users\bhrou\gi):05117                                                                       *SAnim_Super:
                      (C:\Users\bhrou\gi):05118                                                                       *  lea (SupSonAni_Run).l,a1    ; use fast animation
                      (C:\Users\bhrou\gi):05119                                                                       *  cmpi.w  #$800,d2        ; is Sonic moving fast?
                      (C:\Users\bhrou\gi):05120                                                                       *  bhs.s   SAnim_SuperRun      ; if yes, branch
                      (C:\Users\bhrou\gi):05121                                                                       *  lea (SupSonAni_Walk).l,a1   ; use slower animation
                      (C:\Users\bhrou\gi):05122                                                                       *  add.b   d0,d0
                      (C:\Users\bhrou\gi):05123                                                                       *  add.b   d0,d0
                      (C:\Users\bhrou\gi):05124                                                                       *  bra.s   SAnim_SuperWalk
                      (C:\Users\bhrou\gi):05125                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):05126                                                                       *; loc_1B4C6:
                      (C:\Users\bhrou\gi):05127                                                                       *SAnim_SuperRun:
                      (C:\Users\bhrou\gi):05128                                                                       *  lsr.b   #1,d0
                      (C:\Users\bhrou\gi):05129                                                                       *; loc_1B4C8:
                      (C:\Users\bhrou\gi):05130                                                                       *SAnim_SuperWalk:
                      (C:\Users\bhrou\gi):05131                                                                       *  move.b  d0,d3
                      (C:\Users\bhrou\gi):05132                                                                       *  moveq   #0,d1
                      (C:\Users\bhrou\gi):05133                                                                       *  move.b  anim_frame(a0),d1
                      (C:\Users\bhrou\gi):05134                                                                       *  move.b  1(a1,d1.w),d0
                      (C:\Users\bhrou\gi):05135                                                                       *  cmpi.b  #-1,d0
                      (C:\Users\bhrou\gi):05136                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):05137                                                                       *  move.b  #0,anim_frame(a0)
                      (C:\Users\bhrou\gi):05138                                                                       *  move.b  1(a1),d0
                      (C:\Users\bhrou\gi):05139                                                                       *+
                      (C:\Users\bhrou\gi):05140                                                                       *  move.b  d0,mapping_frame(a0)
                      (C:\Users\bhrou\gi):05141                                                                       *  add.b   d3,mapping_frame(a0)
                      (C:\Users\bhrou\gi):05142                                                                       *  move.b  (Timer_frames+1).w,d1
                      (C:\Users\bhrou\gi):05143                                                                       *  andi.b  #3,d1
                      (C:\Users\bhrou\gi):05144                                                                       *  bne.s   +
                      (C:\Users\bhrou\gi):05145                                                                       *  cmpi.b  #$B5,mapping_frame(a0)
                      (C:\Users\bhrou\gi):05146                                                                       *  bhs.s   +
                      (C:\Users\bhrou\gi):05147                                                                       *  addi.b  #$20,mapping_frame(a0)
                      (C:\Users\bhrou\gi):05148                                                                       *+
                      (C:\Users\bhrou\gi):05149                                                                       *  subq.b  #1,anim_frame_duration(a0)
                      (C:\Users\bhrou\gi):05150                                                                       *  bpl.s   return_1B51E
                      (C:\Users\bhrou\gi):05151                                                                       *  neg.w   d2
                      (C:\Users\bhrou\gi):05152                                                                       *  addi.w  #$800,d2
                      (C:\Users\bhrou\gi):05153                                                                       *  bpl.s   +
                      (C:\Users\bhrou\gi):05154                                                                       *  moveq   #0,d2
                      (C:\Users\bhrou\gi):05155                                                                       *+
                      (C:\Users\bhrou\gi):05156                                                                       *  lsr.w   #8,d2
                      (C:\Users\bhrou\gi):05157                                                                       *  move.b  d2,anim_frame_duration(a0)
                      (C:\Users\bhrou\gi):05158                                                                       *  addq.b  #1,anim_frame(a0)
                      (C:\Users\bhrou\gi):05159                                                                       *
                      (C:\Users\bhrou\gi):05160                                                                       *return_1B51E:
                      (C:\Users\bhrou\gi):05161                                                                       *  rts
                      (C:\Users\bhrou\gi):05162                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05163                                                                       *; loc_1B520:
3067                  (C:\Users\bhrou\gi):05164                 SAnim_Tumble                                          *SAnim_Tumble:
                      (C:\Users\bhrou\gi):05165                                                                       *  move.b  flip_angle(a0),d0
                      (C:\Users\bhrou\gi):05166                                                                       *  moveq   #0,d1
                      (C:\Users\bhrou\gi):05167                                                                       *  move.b  status(a0),d2
                      (C:\Users\bhrou\gi):05168                                                                       *  andi.b  #1,d2
                      (C:\Users\bhrou\gi):05169                                                                       *  bne.s   SAnim_Tumble_Left
                      (C:\Users\bhrou\gi):05170                                                                       *
                      (C:\Users\bhrou\gi):05171                                                                       *  andi.b  #$FC,render_flags(a0)
                      (C:\Users\bhrou\gi):05172                                                                       *  addi.b  #$B,d0
                      (C:\Users\bhrou\gi):05173                                                                       *  divu.w  #$16,d0
                      (C:\Users\bhrou\gi):05174                                                                       *  addi.b  #$5F,d0
                      (C:\Users\bhrou\gi):05175                                                                       *  move.b  d0,mapping_frame(a0)
                      (C:\Users\bhrou\gi):05176                                                                       *  move.b  #0,anim_frame_duration(a0)
3067 39               (C:\Users\bhrou\gi):05177 [5]     4439            rts                                           *  rts
                      (C:\Users\bhrou\gi):05178                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05179                                                                       *; loc_1B54E:
3068                  (C:\Users\bhrou\gi):05180                 SAnim_Tumble_Left                                     *SAnim_Tumble_Left:
                      (C:\Users\bhrou\gi):05181                                                                       *  andi.b  #$FC,render_flags(a0)
                      (C:\Users\bhrou\gi):05182                                                                       *  tst.b   flip_turned(a0)
                      (C:\Users\bhrou\gi):05183                                                                       *  beq.s   loc_1B566
                      (C:\Users\bhrou\gi):05184                                                                       *  ori.b   #1,render_flags(a0)
                      (C:\Users\bhrou\gi):05185                                                                       *  addi.b  #$B,d0
3068 2000             (C:\Users\bhrou\gi):05186 [3]     4442            bra   loc_1B572                               *  bra.s   loc_1B572
                      (C:\Users\bhrou\gi):05187                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05188                                                                       *
306A                  (C:\Users\bhrou\gi):05189                 loc_1B566                                             *loc_1B566:
                      (C:\Users\bhrou\gi):05190                                                                       *  ori.b   #3,render_flags(a0)
                      (C:\Users\bhrou\gi):05191                                                                       *  neg.b   d0
                      (C:\Users\bhrou\gi):05192                                                                       *  addi.b  #$8F,d0
                      (C:\Users\bhrou\gi):05193                                                                       *
306A                  (C:\Users\bhrou\gi):05194                 loc_1B572                                             *loc_1B572:
                      (C:\Users\bhrou\gi):05195                                                                       *  divu.w  #$16,d0
                      (C:\Users\bhrou\gi):05196                                                                       *  addi.b  #$5F,d0
                      (C:\Users\bhrou\gi):05197                                                                       *  move.b  d0,mapping_frame(a0)
                      (C:\Users\bhrou\gi):05198                                                                       *  move.b  #0,anim_frame_duration(a0)
306A 39               (C:\Users\bhrou\gi):05199 [5]     4447            rts                                           *  rts
                      (C:\Users\bhrou\gi):05200                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05201                                                                       *; loc_1B586:
306B                  (C:\Users\bhrou\gi):05202                 SAnim_Roll                                            *SAnim_Roll:
306B A649             (C:\Users\bhrou\gi):05203 [5]     4452            lda   anim_frame_duration,u
306D B0703E           (C:\Users\bhrou\gi):05204 [5]     4457            suba  Vint_Main_runcount
3070 A749             (C:\Users\bhrou\gi):05205 [5]     4462            sta   anim_frame_duration,u                   *  subq.b  #1,anim_frame_duration(a0)  ; subtract 1 from frame duration
3072 2B01             (C:\Users\bhrou\gi):05206 [3]     4465            bmi   >                                       *  bpl.w   SAnim_Delay         ; if time remains, branch
3074 39               (C:\Users\bhrou\gi):05207 [5]     4470            rts
3075 5C               (C:\Users\bhrou\gi):05208 [2]     4472    !       incb                                          *  addq.b  #1,d0       ; is the start flag = $FE ?
3076 2635             (C:\Users\bhrou\gi):05209 [3]     4475            bne   SAnim_Push                              *  bne.s   SAnim_Push  ; if not, branch
3078 ECC864           (C:\Users\bhrou\gi):05210 [6]     4481            ldd   inertia,u                               *  mvabs.w inertia(a0),d2
307B 2A04             (C:\Users\bhrou\gi):05211 [3]     4484            bpl   >
                      (C:\Users\bhrou\gi):05212                         _negd
307D 40               (            _negd):00001 [2]     4486            nega
307E 50               (            _negd):00002 [2]     4488            negb
307F 8200             (            _negd):00003 [2]     4490            sbca  #0
3081 8E00A5           (C:\Users\bhrou\gi):05213 [3]     4493    !       ldx   #SonAni_Roll2                           *  lea (SonAni_Roll2).l,a1
3084 10830600         (C:\Users\bhrou\gi):05214 [5]     4498            cmpd  #$600                                   *  cmpi.w  #$600,d2
3088 2403             (C:\Users\bhrou\gi):05215 [3]     4501            bhs   >                                       *  bhs.s   +
308A 8E0093           (C:\Users\bhrou\gi):05216 [3]     4504            ldx   #SonAni_Roll                            *  lea (SonAni_Roll).l,a1
                      (C:\Users\bhrou\gi):05217                 !                                                     *+
                      (C:\Users\bhrou\gi):05218                         _negd                                         *  neg.w   d2
308D 40               (            _negd):00001 [2]     4506            nega
308E 50               (            _negd):00002 [2]     4508            negb
308F 8200             (            _negd):00003 [2]     4510            sbca  #0
3091 C30400           (C:\Users\bhrou\gi):05219 [4]     4514            addd  #$400                                   *  addi.w  #$400,d2
3094 2A03             (C:\Users\bhrou\gi):05220 [3]     4517            bpl   >                                       *  bpl.s   +
3096 CC0000           (C:\Users\bhrou\gi):05221 [3]     4520            ldd   #0                                      *  moveq   #0,d2
                      (C:\Users\bhrou\gi):05222                 !                                                     *+
                      (C:\Users\bhrou\gi):05223                         ;                                             *  lsr.w   #8,d2
3099 A749             (C:\Users\bhrou\gi):05224 [5]     4525            sta   anim_frame_duration,u                   *  move.b  d2,anim_frame_duration(a0)
309B A64B             (C:\Users\bhrou\gi):05225 [5]     4530            lda   status,u                                *  move.b  status(a0),d1
309D 8401             (C:\Users\bhrou\gi):05226 [2]     4532            anda  #status_x_orientation                   *  andi.b  #1,d1
309F B730A7           (C:\Users\bhrou\gi):05227 [5]     4537            sta   @a
30A2 E642             (C:\Users\bhrou\gi):05228 [5]     4542            ldb   render_flags,u
30A4 C4FC             (C:\Users\bhrou\gi):05229 [2]     4544            andb  #^(render_xmirror_mask|render_ymirror_mask) *  andi.b  #$FC,render_flags(a0)
30A6 CA00             (C:\Users\bhrou\gi):05230 [2]     4546            orb   #0                                      *  or.b    d1,render_flags(a0)
     30A7             (C:\Users\bhrou\gi):05231                 @a      equ   *-1
30A8 E742             (C:\Users\bhrou\gi):05232 [5]     4551            stb   render_flags,u
30AA 7E7152           (C:\Users\bhrou\gi):05233 [4]     4555            jmp   Call_SAnim_Do2                          *  bra.w   SAnim_Do2
                      (C:\Users\bhrou\gi):05234                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05235                                                                       *
                      (C:\Users\bhrou\gi):05236                 
30AD                  (C:\Users\bhrou\gi):05237                 SAnim_Push                                            *SAnim_Push:
30AD A649             (C:\Users\bhrou\gi):05238 [5]     4560            lda   anim_frame_duration,u
30AF B0703E           (C:\Users\bhrou\gi):05239 [5]     4565            suba  Vint_Main_runcount
30B2 A749             (C:\Users\bhrou\gi):05240 [5]     4570            sta   anim_frame_duration,u                   *  subq.b  #1,anim_frame_duration(a0)  ; subtract 1 from frame duration
30B4 2B01             (C:\Users\bhrou\gi):05241 [3]     4573            bmi   >                                       *  bpl.w   SAnim_Delay         ; if time remains, branch
30B6 39               (C:\Users\bhrou\gi):05242 [5]     4578            rts
30B7 ECC864           (C:\Users\bhrou\gi):05243 [6]     4584    !       ldd   inertia,u                               *  move.w  inertia(a0),d2
30BA 2B04             (C:\Users\bhrou\gi):05244 [3]     4587            bmi   >                                       *  bmi.s   +
                      (C:\Users\bhrou\gi):05245                         _negd                                         *  neg.w   d2
30BC 40               (            _negd):00001 [2]     4589            nega
30BD 50               (            _negd):00002 [2]     4591            negb
30BE 8200             (            _negd):00003 [2]     4593            sbca  #0
                      (C:\Users\bhrou\gi):05246                 !                                                     *+
30C0 C30800           (C:\Users\bhrou\gi):05247 [4]     4597            addd  #$800                                   *  addi.w  #$800,d2
30C3 2A03             (C:\Users\bhrou\gi):05248 [3]     4600            bpl   >                                       *  bpl.s   +
30C5 CC0000           (C:\Users\bhrou\gi):05249 [3]     4603            ldd   #0                                      *  moveq   #0,d2
                      (C:\Users\bhrou\gi):05250                 !                                                     *+
                      (C:\Users\bhrou\gi):05251                         _lsrd
30C8 44               (            _lsrd):00001 [2]     4605            lsra
30C9 56               (            _lsrd):00002 [2]     4607            rorb
                      (C:\Users\bhrou\gi):05252                         _lsrd
30CA 44               (            _lsrd):00001 [2]     4609            lsra
30CB 56               (            _lsrd):00002 [2]     4611            rorb
                      (C:\Users\bhrou\gi):05253                         _lsrd
30CC 44               (            _lsrd):00001 [2]     4613            lsra
30CD 56               (            _lsrd):00002 [2]     4615            rorb
                      (C:\Users\bhrou\gi):05254                         _lsrd
30CE 44               (            _lsrd):00001 [2]     4617            lsra
30CF 56               (            _lsrd):00002 [2]     4619            rorb
                      (C:\Users\bhrou\gi):05255                         _lsrd
30D0 44               (            _lsrd):00001 [2]     4621            lsra
30D1 56               (            _lsrd):00002 [2]     4623            rorb
                      (C:\Users\bhrou\gi):05256                         _lsrd                                         *  lsr.w   #6,d2
30D2 44               (            _lsrd):00001 [2]     4625            lsra
30D3 56               (            _lsrd):00002 [2]     4627            rorb
30D4 ED49             (C:\Users\bhrou\gi):05257 [6]     4633            std   anim_frame_duration,u                   *  move.b  d2,anim_frame_duration(a0)
30D6 CC00B7           (C:\Users\bhrou\gi):05258 [3]     4636            ldd   #SonAni_Push                            *  lea (SonAni_Push).l,a1
                      (C:\Users\bhrou\gi):05259                         ; unimplemented                               *  tst.b   (Super_Sonic_flag).w
                      (C:\Users\bhrou\gi):05260                         ;                                             *  beq.s   +
                      (C:\Users\bhrou\gi):05261                         ;                                             *  lea (SupSonAni_Push).l,a1
                      (C:\Users\bhrou\gi):05262                         ;                                             *+
30D9 A64B             (C:\Users\bhrou\gi):05263 [5]     4641            lda   status,u                                *  move.b  status(a0),d1
30DB 8401             (C:\Users\bhrou\gi):05264 [2]     4643            anda  #status_x_orientation                   *  andi.b  #1,d1
30DD B730E5           (C:\Users\bhrou\gi):05265 [5]     4648            sta   @a
30E0 E642             (C:\Users\bhrou\gi):05266 [5]     4653            ldb   render_flags,u
30E2 C4FC             (C:\Users\bhrou\gi):05267 [2]     4655            andb  #^(render_xmirror_mask|render_ymirror_mask) *  andi.b  #$FC,render_flags(a0)
30E4 CA00             (C:\Users\bhrou\gi):05268 [2]     4657            orb   #0                                      *  or.b    d1,render_flags(a0)
     30E5             (C:\Users\bhrou\gi):05269                 @a      equ   *-1
30E6 E742             (C:\Users\bhrou\gi):05270 [5]     4662            stb   render_flags,u
30E8 7E7152           (C:\Users\bhrou\gi):05271 [4]     4666            jmp   Call_SAnim_Do2                          *  bra.w   SAnim_Do2
                      (C:\Users\bhrou\gi):05272                 
                      (C:\Users\bhrou\gi):05273                                                                       *; ===========================================================================
                      (C:\Users\bhrou\gi):05274                                                                       *
                      (C:\Users\bhrou\gi):05275                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):05276                                                                       *; Animation script - Sonic
                      (C:\Users\bhrou\gi):05277                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):05278                                                                       *; off_1B618:
                      (C:\Users\bhrou\gi):05279                                                                       *SonicAniData:         offsetTable
                      (C:\Users\bhrou\gi):05280                                                                       *SonAni_Walk_ptr:      offsetTableEntry.w SonAni_Walk      ;  0 ;   0
                      (C:\Users\bhrou\gi):05281                                                                       *SonAni_Run_ptr:           offsetTableEntry.w SonAni_Run       ;  1 ;   1
                      (C:\Users\bhrou\gi):05282                                                                       *SonAni_Roll_ptr:      offsetTableEntry.w SonAni_Roll      ;  2 ;   2
                      (C:\Users\bhrou\gi):05283                                                                       *SonAni_Roll2_ptr:     offsetTableEntry.w SonAni_Roll2     ;  3 ;   3
                      (C:\Users\bhrou\gi):05284                                                                       *SonAni_Push_ptr:      offsetTableEntry.w SonAni_Push      ;  4 ;   4
                      (C:\Users\bhrou\gi):05285                                                                       *SonAni_Wait_ptr:      offsetTableEntry.w SonAni_Wait      ;  5 ;   5
                      (C:\Users\bhrou\gi):05286                                                                       *SonAni_Balance_ptr:       offsetTableEntry.w SonAni_Balance   ;  6 ;   6
                      (C:\Users\bhrou\gi):05287                                                                       *SonAni_LookUp_ptr:        offsetTableEntry.w SonAni_LookUp    ;  7 ;   7
                      (C:\Users\bhrou\gi):05288                                                                       *SonAni_Duck_ptr:      offsetTableEntry.w SonAni_Duck      ;  8 ;   8
                      (C:\Users\bhrou\gi):05289                                                                       *SonAni_Spindash_ptr:      offsetTableEntry.w SonAni_Spindash  ;  9 ;   9
                      (C:\Users\bhrou\gi):05290                                                                       *SonAni_Blink_ptr:     offsetTableEntry.w SonAni_Blink     ; 10 ;  $A
                      (C:\Users\bhrou\gi):05291                                                                       *SonAni_GetUp_ptr:     offsetTableEntry.w SonAni_GetUp     ; 11 ;  $B
                      (C:\Users\bhrou\gi):05292                                                                       *SonAni_Balance2_ptr:      offsetTableEntry.w SonAni_Balance2  ; 12 ;  $C
                      (C:\Users\bhrou\gi):05293                                                                       *SonAni_Stop_ptr:      offsetTableEntry.w SonAni_Stop      ; 13 ;  $D
                      (C:\Users\bhrou\gi):05294                                                                       *SonAni_Float_ptr:     offsetTableEntry.w SonAni_Float     ; 14 ;  $E
                      (C:\Users\bhrou\gi):05295                                                                       *SonAni_Float2_ptr:        offsetTableEntry.w SonAni_Float2    ; 15 ;  $F
                      (C:\Users\bhrou\gi):05296                                                                       *SonAni_Spring_ptr:        offsetTableEntry.w SonAni_Spring    ; 16 ; $10
                      (C:\Users\bhrou\gi):05297                                                                       *SonAni_Hang_ptr:      offsetTableEntry.w SonAni_Hang      ; 17 ; $11
                      (C:\Users\bhrou\gi):05298                                                                       *SonAni_Dash2_ptr:     offsetTableEntry.w SonAni_Dash2     ; 18 ; $12
                      (C:\Users\bhrou\gi):05299                                                                       *SonAni_Dash3_ptr:     offsetTableEntry.w SonAni_Dash3     ; 19 ; $13
                      (C:\Users\bhrou\gi):05300                                                                       *SonAni_Hang2_ptr:     offsetTableEntry.w SonAni_Hang2     ; 20 ; $14
                      (C:\Users\bhrou\gi):05301                                                                       *SonAni_Bubble_ptr:        offsetTableEntry.w SonAni_Bubble    ; 21 ; $15
                      (C:\Users\bhrou\gi):05302                                                                       *SonAni_DeathBW_ptr:       offsetTableEntry.w SonAni_DeathBW   ; 22 ; $16
                      (C:\Users\bhrou\gi):05303                                                                       *SonAni_Drown_ptr:     offsetTableEntry.w SonAni_Drown     ; 23 ; $17
                      (C:\Users\bhrou\gi):05304                                                                       *SonAni_Death_ptr:     offsetTableEntry.w SonAni_Death     ; 24 ; $18
                      (C:\Users\bhrou\gi):05305                                                                       *SonAni_Hurt_ptr:      offsetTableEntry.w SonAni_Hurt      ; 25 ; $19
                      (C:\Users\bhrou\gi):05306                                                                       *SonAni_Hurt2_ptr:     offsetTableEntry.w SonAni_Hurt      ; 26 ; $1A
                      (C:\Users\bhrou\gi):05307                                                                       *SonAni_Slide_ptr:     offsetTableEntry.w SonAni_Slide     ; 27 ; $1B
                      (C:\Users\bhrou\gi):05308                                                                       *SonAni_Blank_ptr:     offsetTableEntry.w SonAni_Blank     ; 28 ; $1C
                      (C:\Users\bhrou\gi):05309                                                                       *SonAni_Balance3_ptr:      offsetTableEntry.w SonAni_Balance3  ; 29 ; $1D
                      (C:\Users\bhrou\gi):05310                                                                       *SonAni_Balance4_ptr:      offsetTableEntry.w SonAni_Balance4  ; 30 ; $1E
                      (C:\Users\bhrou\gi):05311                                                                       *SupSonAni_Transform_ptr:  offsetTableEntry.w SupSonAni_Transform  ; 31 ; $1F
                      (C:\Users\bhrou\gi):05312                                                                       *SonAni_Lying_ptr:     offsetTableEntry.w SonAni_Lying     ; 32 ; $20
                      (C:\Users\bhrou\gi):05313                                                                       *SonAni_LieDown_ptr:       offsetTableEntry.w SonAni_LieDown   ; 33 ; $21
                      (C:\Users\bhrou\gi):05314                                                                       *
                      (C:\Users\bhrou\gi):05315                                                                       *SonAni_Walk:  dc.b $FF, $F,$10,$11,$12,$13,$14, $D, $E,$FF
                      (C:\Users\bhrou\gi):05316                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05317                                                                       *SonAni_Run:   dc.b $FF,$2D,$2E,$2F,$30,$FF,$FF,$FF,$FF,$FF
                      (C:\Users\bhrou\gi):05318                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05319                                                                       *SonAni_Roll:  dc.b $FE,$3D,$41,$3E,$41,$3F,$41,$40,$41,$FF
                      (C:\Users\bhrou\gi):05320                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05321                                                                       *SonAni_Roll2: dc.b $FE,$3D,$41,$3E,$41,$3F,$41,$40,$41,$FF
                      (C:\Users\bhrou\gi):05322                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05323                                                                       *SonAni_Push:  dc.b $FD,$48,$49,$4A,$4B,$FF,$FF,$FF,$FF,$FF
                      (C:\Users\bhrou\gi):05324                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05325                                                                       *SonAni_Wait:
                      (C:\Users\bhrou\gi):05326                                                                       *  dc.b   5,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
                      (C:\Users\bhrou\gi):05327                                                                       *  dc.b   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2
                      (C:\Users\bhrou\gi):05328                                                                       *  dc.b   3,  3,  3,  3,  3,  4,  4,  4,  5,  5,  5,  4,  4,  4,  5,  5
                      (C:\Users\bhrou\gi):05329                                                                       *  dc.b   5,  4,  4,  4,  5,  5,  5,  4,  4,  4,  5,  5,  5,  6,  6,  6
                      (C:\Users\bhrou\gi):05330                                                                       *  dc.b   6,  6,  6,  6,  6,  6,  6,  4,  4,  4,  5,  5,  5,  4,  4,  4
                      (C:\Users\bhrou\gi):05331                                                                       *  dc.b   5,  5,  5,  4,  4,  4,  5,  5,  5,  4,  4,  4,  5,  5,  5,  6
                      (C:\Users\bhrou\gi):05332                                                                       *  dc.b   6,  6,  6,  6,  6,  6,  6,  6,  6,  4,  4,  4,  5,  5,  5,  4
                      (C:\Users\bhrou\gi):05333                                                                       *  dc.b   4,  4,  5,  5,  5,  4,  4,  4,  5,  5,  5,  4,  4,  4,  5,  5
                      (C:\Users\bhrou\gi):05334                                                                       *  dc.b   5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  4,  4,  4,  5,  5
                      (C:\Users\bhrou\gi):05335                                                                       *  dc.b   5,  4,  4,  4,  5,  5,  5,  4,  4,  4,  5,  5,  5,  4,  4,  4
                      (C:\Users\bhrou\gi):05336                                                                       *  dc.b   5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  7,  8,  8
                      (C:\Users\bhrou\gi):05337                                                                       *  dc.b   8,  9,  9,  9,$FE,  6
                      (C:\Users\bhrou\gi):05338                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05339                                                                       *SonAni_Balance:   dc.b   9,$CC,$CD,$CE,$CD,$FF
                      (C:\Users\bhrou\gi):05340                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05341                                                                       *SonAni_LookUp:    dc.b   5, $B, $C,$FE,  1
                      (C:\Users\bhrou\gi):05342                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05343                                                                       *SonAni_Duck:  dc.b   5,$4C,$4D,$FE,  1
                      (C:\Users\bhrou\gi):05344                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05345                                                                       *SonAni_Spindash:dc.b   0,$42,$43,$42,$44,$42,$45,$42,$46,$42,$47,$FF
                      (C:\Users\bhrou\gi):05346                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05347                                                                       *SonAni_Blink: dc.b   1,  2,$FD,  0
                      (C:\Users\bhrou\gi):05348                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05349                                                                       *SonAni_GetUp: dc.b   3, $A,$FD,  0
                      (C:\Users\bhrou\gi):05350                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05351                                                                       *SonAni_Balance2:dc.b   3,$C8,$C9,$CA,$CB,$FF
                      (C:\Users\bhrou\gi):05352                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05353                                                                       *SonAni_Stop:  dc.b   5,$D2,$D3,$D4,$D5,$FD,  0 ; halt/skidding animation
                      (C:\Users\bhrou\gi):05354                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05355                                                                       *SonAni_Float: dc.b   7,$54,$59,$FF
                      (C:\Users\bhrou\gi):05356                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05357                                                                       *SonAni_Float2:    dc.b   7,$54,$55,$56,$57,$58,$FF
                      (C:\Users\bhrou\gi):05358                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05359                                                                       *SonAni_Spring:    dc.b $2F,$5B,$FD,  0
                      (C:\Users\bhrou\gi):05360                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05361                                                                       *SonAni_Hang:  dc.b   1,$50,$51,$FF
                      (C:\Users\bhrou\gi):05362                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05363                                                                       *SonAni_Dash2: dc.b  $F,$43,$43,$43,$FE,  1
                      (C:\Users\bhrou\gi):05364                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05365                                                                       *SonAni_Dash3: dc.b  $F,$43,$44,$FE,  1
                      (C:\Users\bhrou\gi):05366                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05367                                                                       *SonAni_Hang2: dc.b $13,$6B,$6C,$FF
                      (C:\Users\bhrou\gi):05368                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05369                                                                       *SonAni_Bubble:    dc.b  $B,$5A,$5A,$11,$12,$FD,  0 ; breathe
                      (C:\Users\bhrou\gi):05370                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05371                                                                       *SonAni_DeathBW:   dc.b $20,$5E,$FF
                      (C:\Users\bhrou\gi):05372                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05373                                                                       *SonAni_Drown: dc.b $20,$5D,$FF
                      (C:\Users\bhrou\gi):05374                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05375                                                                       *SonAni_Death: dc.b $20,$5C,$FF
                      (C:\Users\bhrou\gi):05376                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05377                                                                       *SonAni_Hurt:  dc.b $40,$4E,$FF
                      (C:\Users\bhrou\gi):05378                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05379                                                                       *SonAni_Slide: dc.b   9,$4E,$4F,$FF
                      (C:\Users\bhrou\gi):05380                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05381                                                                       *SonAni_Blank: dc.b $77,  0,$FD,  0
                      (C:\Users\bhrou\gi):05382                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05383                                                                       *SonAni_Balance3:dc.b $13,$D0,$D1,$FF
                      (C:\Users\bhrou\gi):05384                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05385                                                                       *SonAni_Balance4:dc.b   3,$CF,$C8,$C9,$CA,$CB,$FE,  4
                      (C:\Users\bhrou\gi):05386                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05387                                                                       *SonAni_Lying: dc.b   9,  8,  9,$FF
                      (C:\Users\bhrou\gi):05388                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05389                                                                       *SonAni_LieDown:   dc.b   3,  7,$FD,  0
                      (C:\Users\bhrou\gi):05390                                                                       *  even
                      (C:\Users\bhrou\gi):05391                                                                       *
                      (C:\Users\bhrou\gi):05392                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):05393                                                                       *; Animation script - Super Sonic
                      (C:\Users\bhrou\gi):05394                                                                       *; (many of these point to the data above this)
                      (C:\Users\bhrou\gi):05395                                                                       *; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):05396                                                                       *SuperSonicAniData: offsetTable
                      (C:\Users\bhrou\gi):05397                                                                       *  offsetTableEntry.w SupSonAni_Walk   ;  0 ;   0
                      (C:\Users\bhrou\gi):05398                                                                       *  offsetTableEntry.w SupSonAni_Run    ;  1 ;   1
                      (C:\Users\bhrou\gi):05399                                                                       *  offsetTableEntry.w SonAni_Roll      ;  2 ;   2
                      (C:\Users\bhrou\gi):05400                                                                       *  offsetTableEntry.w SonAni_Roll2     ;  3 ;   3
                      (C:\Users\bhrou\gi):05401                                                                       *  offsetTableEntry.w SupSonAni_Push   ;  4 ;   4
                      (C:\Users\bhrou\gi):05402                                                                       *  offsetTableEntry.w SupSonAni_Stand  ;  5 ;   5
                      (C:\Users\bhrou\gi):05403                                                                       *  offsetTableEntry.w SupSonAni_Balance    ;  6 ;   6
                      (C:\Users\bhrou\gi):05404                                                                       *  offsetTableEntry.w SonAni_LookUp    ;  7 ;   7
                      (C:\Users\bhrou\gi):05405                                                                       *  offsetTableEntry.w SupSonAni_Duck   ;  8 ;   8
                      (C:\Users\bhrou\gi):05406                                                                       *  offsetTableEntry.w SonAni_Spindash  ;  9 ;   9
                      (C:\Users\bhrou\gi):05407                                                                       *  offsetTableEntry.w SonAni_Blink     ; 10 ;  $A
                      (C:\Users\bhrou\gi):05408                                                                       *  offsetTableEntry.w SonAni_GetUp     ; 11 ;  $B
                      (C:\Users\bhrou\gi):05409                                                                       *  offsetTableEntry.w SonAni_Balance2  ; 12 ;  $C
                      (C:\Users\bhrou\gi):05410                                                                       *  offsetTableEntry.w SonAni_Stop      ; 13 ;  $D
                      (C:\Users\bhrou\gi):05411                                                                       *  offsetTableEntry.w SonAni_Float     ; 14 ;  $E
                      (C:\Users\bhrou\gi):05412                                                                       *  offsetTableEntry.w SonAni_Float2    ; 15 ;  $F
                      (C:\Users\bhrou\gi):05413                                                                       *  offsetTableEntry.w SonAni_Spring    ; 16 ; $10
                      (C:\Users\bhrou\gi):05414                                                                       *  offsetTableEntry.w SonAni_Hang      ; 17 ; $11
                      (C:\Users\bhrou\gi):05415                                                                       *  offsetTableEntry.w SonAni_Dash2     ; 18 ; $12
                      (C:\Users\bhrou\gi):05416                                                                       *  offsetTableEntry.w SonAni_Dash3     ; 19 ; $13
                      (C:\Users\bhrou\gi):05417                                                                       *  offsetTableEntry.w SonAni_Hang2     ; 20 ; $14
                      (C:\Users\bhrou\gi):05418                                                                       *  offsetTableEntry.w SonAni_Bubble    ; 21 ; $15
                      (C:\Users\bhrou\gi):05419                                                                       *  offsetTableEntry.w SonAni_DeathBW   ; 22 ; $16
                      (C:\Users\bhrou\gi):05420                                                                       *  offsetTableEntry.w SonAni_Drown     ; 23 ; $17
                      (C:\Users\bhrou\gi):05421                                                                       *  offsetTableEntry.w SonAni_Death     ; 24 ; $18
                      (C:\Users\bhrou\gi):05422                                                                       *  offsetTableEntry.w SonAni_Hurt      ; 25 ; $19
                      (C:\Users\bhrou\gi):05423                                                                       *  offsetTableEntry.w SonAni_Hurt      ; 26 ; $1A
                      (C:\Users\bhrou\gi):05424                                                                       *  offsetTableEntry.w SonAni_Slide     ; 27 ; $1B
                      (C:\Users\bhrou\gi):05425                                                                       *  offsetTableEntry.w SonAni_Blank     ; 28 ; $1C
                      (C:\Users\bhrou\gi):05426                                                                       *  offsetTableEntry.w SonAni_Balance3  ; 29 ; $1D
                      (C:\Users\bhrou\gi):05427                                                                       *  offsetTableEntry.w SonAni_Balance4  ; 30 ; $1E
                      (C:\Users\bhrou\gi):05428                                                                       *  offsetTableEntry.w SupSonAni_Transform  ; 31 ; $1F
                      (C:\Users\bhrou\gi):05429                                                                       *
                      (C:\Users\bhrou\gi):05430                                                                       *SupSonAni_Walk:       dc.b $FF,$77,$78,$79,$7A,$7B,$7C,$75,$76,$FF
                      (C:\Users\bhrou\gi):05431                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05432                                                                       *SupSonAni_Run:        dc.b $FF,$B5,$B9,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                      (C:\Users\bhrou\gi):05433                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05434                                                                       *SupSonAni_Push:       dc.b $FD,$BD,$BE,$BF,$C0,$FF,$FF,$FF,$FF,$FF
                      (C:\Users\bhrou\gi):05435                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05436                                                                       *SupSonAni_Stand:  dc.b   7,$72,$73,$74,$73,$FF
                      (C:\Users\bhrou\gi):05437                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05438                                                                       *SupSonAni_Balance:    dc.b   9,$C2,$C3,$C4,$C3,$C5,$C6,$C7,$C6,$FF
                      (C:\Users\bhrou\gi):05439                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05440                                                                       *SupSonAni_Duck:       dc.b   5,$C1,$FF
                      (C:\Users\bhrou\gi):05441                                                                       *  rev02even
                      (C:\Users\bhrou\gi):05442                                                                       *SupSonAni_Transform:  dc.b   2,$6D,$6D,$6E,$6E,$6F,$70,$71,$70,$71,$70,$71,$70,$71,$FD,  0
                      (C:\Users\bhrou\gi):05443                                                                       *  even
                      (C:\Users\bhrou\gi):05444                                                                       *
30EB 39               (C:\Users\bhrou\gi):05445 [5]     4671            rts
                      (C:\Users\bhrou\gi):05446                 
30EC 0000             (C:\Users\bhrou\gi):05447                 Sonic_top_speed                 fdb   0
30EE 0000             (C:\Users\bhrou\gi):05448                 Sonic_acceleration              fdb   0
30F0 0000             (C:\Users\bhrou\gi):05449                 Sonic_deceleration              fdb   0
                      (C:\Users\bhrou\gi):05450                 ;Sonic_Pos_Record_Index         fdb   0 ; into Sonic_Pos_Record_Buf and Sonic_Stat_Record_Buf
                      (C:\Users\bhrou\gi):05451                 
30F2 00               (C:\Users\bhrou\gi):05452                 Primary_Angle                   fcb   0
30F3 00               (C:\Users\bhrou\gi):05453                 Secondary_Angle                 fcb   0
30F4 00               (C:\Users\bhrou\gi):05454                 Water_flag                      fcb   0
                      (C:\Users\bhrou\gi):05455                 
30F5 00               (C:\Users\bhrou\gi):05456                 Last_star_pole_hit              fcb   0 ; 1 byte -- max activated starpole ID in this act
30F6 00               (C:\Users\bhrou\gi):05457                 Saved_Last_star_pole_hit        fcb   0
30F7 0000             (C:\Users\bhrou\gi):05458                 Saved_x_pos                     fdb   0
30F9 0000             (C:\Users\bhrou\gi):05459                 Saved_y_pos                     fdb   0
30FB 0000             (C:\Users\bhrou\gi):05460                 Saved_Solid_bits                fdb   0
                      (C:\Users\bhrou\gi):05461                 
30FD 00               (C:\Users\bhrou\gi):05462                 Control_Locked                  fcb   0
                      (C:\Users\bhrou\gi):05463                 
30FE 00               (C:\Users\bhrou\gi):05464                 Chain_Bonus_counter             fcb   0
30FF 00               (C:\Users\bhrou\gi):05465                 Sonic_Look_delay_counter        fcb   0
