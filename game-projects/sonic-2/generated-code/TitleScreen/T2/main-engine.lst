                      (C:\Users\bhrou\gi):00001                 INCLUDE "./generated-code/TitleScreen/ObjectId.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0001             (./generated-code/):00003         ObjID_PaletteFade equ 1
     0002             (./generated-code/):00004         ObjID_RasterFade equ 2
     0003             (./generated-code/):00005         ObjID_SonicAndTailsIn equ 3
     0004             (./generated-code/):00006         ObjID_SEGA equ 4
     0005             (./generated-code/):00007         ObjID_TitleScreen equ 5
                      (C:\Users\bhrou\gi):00002                 INCLUDE "./generated-code/Game.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     010E             (./generated-code/):00003         Build_RAMLoaderManager equ $010E
     0000             (./generated-code/):00004         GmID_EHZ equ 0
     0001             (./generated-code/):00005         GmID_TitleScreen equ 1
     0001             (./generated-code/):00006         gmboot equ 1
                      (C:\Users\bhrou\gi):00003         
                      (C:\Users\bhrou\gi):00004                 opt   c,ct
                      (C:\Users\bhrou\gi):00005                 
                      (C:\Users\bhrou\gi):00006                 ********************************************************************************
                      (C:\Users\bhrou\gi):00007                 * Game Engine (TO8 Thomson) - Benoit Rousseau 2020-2021
                      (C:\Users\bhrou\gi):00008                 * ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00009                 *
                      (C:\Users\bhrou\gi):00010                 *
                      (C:\Users\bhrou\gi):00011                 ********************************************************************************
                      (C:\Users\bhrou\gi):00012                 
                      (C:\Users\bhrou\gi):00013                         INCLUDE "./Engine/Constants.asm"
                      (./Engine/Constant):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00002                 * Constants
                      (./Engine/Constant):00003                 *
                      (./Engine/Constant):00004                 * Naming convention
                      (./Engine/Constant):00005                 * -----------------
                      (./Engine/Constant):00006                 * - lower case
                      (./Engine/Constant):00007                 * - underscore-separated names
                      (./Engine/Constant):00008                 *
                      (./Engine/Constant):00009                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00010                 
                      (./Engine/Constant):00011                 * ===========================================================================
                      (./Engine/Constant):00012                 * TO8 Registers
                      (./Engine/Constant):00013                 * ===========================================================================
                      (./Engine/Constant):00014                 
                      (./Engine/Constant):00015                 ; Disk routine registers (ROM)
                      (./Engine/Constant):00016                 
     6049             (./Engine/Constant):00017                 dk_drive                      equ $6049
     604A             (./Engine/Constant):00018                 dk_track                      equ $604A
     604B             (./Engine/Constant):00019                 dk_track_lsb                  equ $604B
     604C             (./Engine/Constant):00020                 dk_sector                     equ $604C
     604F             (./Engine/Constant):00021                 dk_write_location             equ $604F
                      (./Engine/Constant):00022                 
                      (./Engine/Constant):00023                 * ===========================================================================
                      (./Engine/Constant):00024                 * Globals
                      (./Engine/Constant):00025                 * ===========================================================================
                      (./Engine/Constant):00026                 
     009F             (./Engine/Constant):00027                 glb_direct_page               equ $9F    ; direct page for globals
                      (./Engine/Constant):00028                 
                      (./Engine/Constant):00029                 ; compilated sprite
     9FFE             (./Engine/Constant):00030                 glb_register_s                equ $9FFE  ; reverved space to store S from ROM routines
                      (./Engine/Constant):00031                 
                      (./Engine/Constant):00032                 ; DrawSprites
     9FFC             (./Engine/Constant):00033                 glb_screen_location_1         equ $9FFC  ; start address for rendering of current sprite Part1     
     9FFA             (./Engine/Constant):00034                 glb_screen_location_2         equ $9FFA  ; start address for rendering of current sprite Part2 (Must follow Part1)
                      (./Engine/Constant):00035                 
                      (./Engine/Constant):00036                 ; CheckSpritesRefresh
     9FF9             (./Engine/Constant):00037                 glb_cur_priority              equ $9FF9
     9FF7             (./Engine/Constant):00038                 glb_cur_ptr_sub_obj_erase     equ $9FF7
     9FF5             (./Engine/Constant):00039                 glb_cur_ptr_sub_obj_draw      equ $9FF5
     9FF3             (./Engine/Constant):00040                 glb_camera_x_pos              equ $9FF3 ; camera x position in palyfield coordinates
     9FF1             (./Engine/Constant):00041                 glb_camera_y_pos              equ $9FF1 ; camera y position in palyfield coordinates
     9FEF             (./Engine/Constant):00042                 glb_camera_x_min_pos          equ $9FEF
     9FED             (./Engine/Constant):00043                 glb_camera_y_min_pos          equ $9FED
     9FEB             (./Engine/Constant):00044                 glb_camera_x_max_pos          equ $9FEB
     9FE9             (./Engine/Constant):00045                 glb_camera_y_max_pos          equ $9FE9
     9FE8             (./Engine/Constant):00046                 glb_force_sprite_refresh      equ $9FE8
     9FE7             (./Engine/Constant):00047                 glb_camera_move               equ $9FE7
     9FE6             (./Engine/Constant):00048                 glb_alphaTiles                equ $9FE6
     9F00             (./Engine/Constant):00049                 glb_tmp_var                   equ $9F00 ; custom tmp var space for routine
     9F00             (./Engine/Constant):00050                 glb_system_stack              equ $9F00
                      (./Engine/Constant):00051                 
                      (./Engine/Constant):00052                 * ===========================================================================
                      (./Engine/Constant):00053                 * Display Constants
                      (./Engine/Constant):00054                 * ===========================================================================
                      (./Engine/Constant):00055                 
     00A0             (./Engine/Constant):00056                 screen_width                  equ 160    ; in pixel
     001C             (./Engine/Constant):00057                 screen_top                    equ 28     ; in pixel
     00E3             (./Engine/Constant):00058                 screen_bottom                 equ 28+199 ; in pixel
     0030             (./Engine/Constant):00059                 screen_left                   equ 48     ; in pixel
     00CF             (./Engine/Constant):00060                 screen_right                  equ 48+159 ; in pixel
     0008             (./Engine/Constant):00061                 nb_priority_levels            equ 8      ; number of priority levels (need code change if modified)
                      (./Engine/Constant):00062                 
                      (./Engine/Constant):00063                 * ===========================================================================
                      (./Engine/Constant):00064                 * Images Constants
                      (./Engine/Constant):00065                 * ===========================================================================
                      (./Engine/Constant):00066                 
     0004             (./Engine/Constant):00067                 image_x_size                  equ 4
     0005             (./Engine/Constant):00068                 image_y_size                  equ 5
     0006             (./Engine/Constant):00069                 image_center_offset           equ 6
                      (./Engine/Constant):00070                 
     0004             (./Engine/Constant):00071                 image_subset_x1_offset        equ 4
     0005             (./Engine/Constant):00072                 image_subset_y1_offset        equ 5
                      (./Engine/Constant):00073                 
     0000             (./Engine/Constant):00074                 page_draw_routine             equ 0
     0001             (./Engine/Constant):00075                 draw_routine                  equ 1
     0003             (./Engine/Constant):00076                 page_erase_routine            equ 3
     0004             (./Engine/Constant):00077                 erase_routine                 equ 4
     0006             (./Engine/Constant):00078                 erase_nb_cell                 equ 6
                      (./Engine/Constant):00079                 
                      (./Engine/Constant):00080                 * ===========================================================================
                      (./Engine/Constant):00081                 * Sound Constants
                      (./Engine/Constant):00082                 * ===========================================================================
                      (./Engine/Constant):00083                 
     0000             (./Engine/Constant):00084                 sound_page        equ 0
     0001             (./Engine/Constant):00085                 sound_start_addr  equ 1
     0003             (./Engine/Constant):00086                 sound_end_addr    equ 3
     0005             (./Engine/Constant):00087                 sound_meta_size   equ 5
                      (./Engine/Constant):00088                 
                      (./Engine/Constant):00089                 * ===========================================================================
                      (./Engine/Constant):00090                 * Object Constants
                      (./Engine/Constant):00091                 * ===========================================================================
                      (./Engine/Constant):00092                 
     005D             (./Engine/Constant):00093                 object_core_size              equ 93  ; the size of an object without ext_vars - DEPENDENCY ClearObj routine
     006B             (./Engine/Constant):00094                 object_size                   equ object_core_size+ext_variables_size ; the size of a dynamic object
     006B             (./Engine/Constant):00095                 next_object                   equ object_size
     005D             (./Engine/Constant):00096                 ext_variables                 equ object_core_size ; start of reserved space for additionnal variables
                      (./Engine/Constant):00097                 
     0000             (./Engine/Constant):00098                 id                            equ 0           ; reference to object model id (ObjID_) (0: free slot)
     0001             (./Engine/Constant):00099                 subtype                       equ 1           ; reference to object subtype (Sub_)
     0002             (./Engine/Constant):00100                 render_flags                  equ 2
                      (./Engine/Constant):00101                 
                      (./Engine/Constant):00102                 * --- render_flags bitfield variables ---
     0001             (./Engine/Constant):00103                 render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
     0002             (./Engine/Constant):00104                 render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
     0004             (./Engine/Constant):00105                 render_overlay_mask           equ $04 ; (bit 2) DEPENDENCY should be bit 2 - compilated sprite with no background save
     0008             (./Engine/Constant):00106                 render_motionless_mask        equ $08 ; (bit 3) tell display engine to compute sub image and position check only once until the flag is removed  
     0010             (./Engine/Constant):00107                 render_playfieldcoord_mask    equ $10 ; (bit 4) tell display engine to use playfield (1) or screen (0) coordinates
     0020             (./Engine/Constant):00108                 render_hide_mask              equ $20 ; (bit 5) tell display engine to hide sprite (keep priority and mapping_frame)
     0040             (./Engine/Constant):00109                 render_todelete_mask          equ $40 ; (bit 6) tell display engine to delete sprite and clear OST for this object
     0080             (./Engine/Constant):00110                 render_xloop_mask             equ $80 ; (bit 7) (screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
                      (./Engine/Constant):00111                  
     0003             (./Engine/Constant):00112                 priority                      equ 3           ; display priority (0: nothing to display, 1:front, ..., 8:back)
     0004             (./Engine/Constant):00113                 anim                          equ 4  ; and 5  ; reference to current animation (Ani_)
     0006             (./Engine/Constant):00114                 prev_anim                     equ 6  ; and 7  ; reference to previous animation (Ani_)
     0008             (./Engine/Constant):00115                 anim_frame                    equ 8           ; index of current frame in animation
     0009             (./Engine/Constant):00116                 anim_frame_duration           equ 9           ; number of frames for each image in animation, range: 00-7F (0-127), 0 means display only during one frame
     000A             (./Engine/Constant):00117                 anim_flags                    equ 10          ; byte offset to reference an anim_flags LUT (adv) / store a link flag (non adv)
                      (./Engine/Constant):00118                 
                      (./Engine/Constant):00119                 * --- anim_flags bitfield variables ---
     0001             (./Engine/Constant):00120                 anim_link_mask                equ $01 ; (bit 0) if set, allow the load of a new animation without reseting anim_frame and anim_frame_duration
                      (./Engine/Constant):00121                 
     000B             (./Engine/Constant):00122                 status_flags                  equ 11          ; orientation of sprite, is applied to animation xmirror flag during AnimateSprite
                      (./Engine/Constant):00123                 
                      (./Engine/Constant):00124                 * --- status_flags bitfield variables ---
     0001             (./Engine/Constant):00125                 status_xflip_mask             equ $01 ; (bit 0) X Flip
     0002             (./Engine/Constant):00126                 status_yflip_mask             equ $02 ; (bit 1) Y Flip
                      (./Engine/Constant):00127                 
     000C             (./Engine/Constant):00128                 image_set                     equ 12 ; and 13 ; reference to current image (Img_) (0000 if no image)
     000E             (./Engine/Constant):00129                 x_pos                         equ 14 ; and 15 ; x playfield coordinate
     0010             (./Engine/Constant):00130                 x_sub                         equ 16          ; x subpixel (1/256 of a pixel), must follow x_pos in data structure
     0011             (./Engine/Constant):00131                 y_pos                         equ 17 ; and 18 ; y playfield coordinate
     0013             (./Engine/Constant):00132                 y_sub                         equ 19          ; y subpixel (1/256 of a pixel), must follow y_pos in data structure
     0014             (./Engine/Constant):00133                 xy_pixel                      equ 20          ; x and y screen coordinate
     0014             (./Engine/Constant):00134                 x_pixel                       equ 20          ; x screen coordinate
     0015             (./Engine/Constant):00135                 y_pixel                       equ 21          ; y screen coordinate, must follow x_pixel
                      (./Engine/Constant):00136                 ;x_offset                      equ 93          ; x screen coordinate offset that is applied at rendering
                      (./Engine/Constant):00137                 ;y_offset                      equ 94          ; x screen coordinate offset that is applied at rendering
     0016             (./Engine/Constant):00138                 x_vel                         equ 22 ; and 23 ; horizontal velocity
     0018             (./Engine/Constant):00139                 y_vel                         equ 24 ; and 25 ; vertical velocity
     001A             (./Engine/Constant):00140                 x_acl                         equ 26 ; and 27 ; horizontal gravity
     001C             (./Engine/Constant):00141                 y_acl                         equ 28 ; and 29 ; vertical gravity
     001E             (./Engine/Constant):00142                 routine                       equ 30          ; index of current object routine
     001F             (./Engine/Constant):00143                 routine_secondary             equ 31          ; index of current secondary routine
     0020             (./Engine/Constant):00144                 routine_tertiary              equ 32          ; index of current tertiary routine
     0021             (./Engine/Constant):00145                 routine_quaternary            equ 33          ; index of current quaternary routine
                      (./Engine/Constant):00146                 
                      (./Engine/Constant):00147                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00148                 * reserved variables (update by engine)
                      (./Engine/Constant):00149                 
     0022             (./Engine/Constant):00150                 rsv_render_flags              equ 34
                      (./Engine/Constant):00151                 
                      (./Engine/Constant):00152                 * --- rsv_render_flags bitfield variables ---
     0001             (./Engine/Constant):00153                 rsv_render_checkrefresh_mask  equ $01 ; (bit 0) if erasesprite and display sprite flag are processed for this frame
     0002             (./Engine/Constant):00154                 rsv_render_erasesprite_mask   equ $02 ; (bit 1) if a sprite need to be cleared on screen
     0004             (./Engine/Constant):00155                 rsv_render_displaysprite_mask equ $04 ; (bit 2) if a sprite need to be rendered on screen
     0008             (./Engine/Constant):00156                 rsv_render_outofrange_mask    equ $08 ; (bit 3) if a sprite is out of range for full rendering in screen
     0080             (./Engine/Constant):00157                 rsv_render_onscreen_mask      equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on last screen buffer (may be 0 or 1)
                      (./Engine/Constant):00158                 
     0023             (./Engine/Constant):00159                 rsv_prev_anim                 equ 35 ; and 36 ; reference to previous animation (Ani_) w * UTILE ?
     0025             (./Engine/Constant):00160                 rsv_image_center_offset       equ 37 ; 0 or 1 offset that indicate if image center is even or odd (DRS_XYToAddress)
     0026             (./Engine/Constant):00161                 rsv_image_subset              equ 38 ; and 39 ; reference to current image regarding mirror flags w
     0028             (./Engine/Constant):00162                 rsv_mapping_frame             equ 40 ; and 41 ; reference to current image regarding mirror flags, overlay flag and x precision w
     002A             (./Engine/Constant):00163                 rsv_erase_nb_cell             equ 42 ; b 
     002B             (./Engine/Constant):00164                 rsv_page_draw_routine         equ 43 ; b
     002C             (./Engine/Constant):00165                 rsv_draw_routine              equ 44 ; and 45 ; w
     002E             (./Engine/Constant):00166                 rsv_page_erase_routine        equ 46 ; b
     002F             (./Engine/Constant):00167                 rsv_erase_routine             equ 47 ; and 48 ; w 
     0031             (./Engine/Constant):00168                 rsv_xy1_pixel                 equ 49 ;
     0031             (./Engine/Constant):00169                 rsv_x1_pixel                  equ 49 ; x+x_offset-(x_size/2) screen coordinate
     0032             (./Engine/Constant):00170                 rsv_y1_pixel                  equ 50 ; y+y_offset-(y_size/2) screen coordinate, must follow rsv_x1_pixel
     0033             (./Engine/Constant):00171                 rsv_xy2_pixel                 equ 51 ;
     0033             (./Engine/Constant):00172                 rsv_x2_pixel                  equ 51 ; x+x_offset+(x_size/2) screen coordinate
     0034             (./Engine/Constant):00173                 rsv_y2_pixel                  equ 52 ; y+y_offset+(y_size/2) screen coordinate, must follow rsv_x2_pixel
                      (./Engine/Constant):00174                 
                      (./Engine/Constant):00175                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00176                 * reserved variables (engine) - buffer specific
                      (./Engine/Constant):00177                 
     0035             (./Engine/Constant):00178                 rsv_buffer_0                  equ 53 ; Start index of buffer 0 variables
     0035             (./Engine/Constant):00179                 rsv_priority_0                equ 53 ; internal value that hold priority in video buffer 0
     0036             (./Engine/Constant):00180                 rsv_priority_prev_obj_0       equ 54 ; and 55 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
     0038             (./Engine/Constant):00181                 rsv_priority_next_obj_0       equ 56 ; and 57 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
     003A             (./Engine/Constant):00182                 rsv_prev_mapping_frame_0      equ 58 ; and 59 ; reference to previous image in video buffer 0 w
     003C             (./Engine/Constant):00183                 rsv_prev_erase_nb_cell_0      equ 60 : b
     003D             (./Engine/Constant):00184                 rsv_prev_page_erase_routine_0 equ 61 ; b
     003E             (./Engine/Constant):00185                 rsv_prev_erase_routine_0      equ 62 ; and 63 ; w
     0040             (./Engine/Constant):00186                 rsv_bgdata_0                  equ 64 ; and 65 ; address of background data in screen 0 w
     0042             (./Engine/Constant):00187                 rsv_prev_xy_pixel_0           equ 66 ;
     0042             (./Engine/Constant):00188                 rsv_prev_x_pixel_0            equ 66 ; previous x screen coordinate b
     0043             (./Engine/Constant):00189                 rsv_prev_y_pixel_0            equ 67 ; previous y screen coordinate b, must follow x_pixel
     0044             (./Engine/Constant):00190                 rsv_prev_xy1_pixel_0          equ 68 ;
     0044             (./Engine/Constant):00191                 rsv_prev_x1_pixel_0           equ 68 ; previous x+x_offset-(x_size/2) screen coordinate b
     0045             (./Engine/Constant):00192                 rsv_prev_y1_pixel_0           equ 69 ; previous y+y_offset-(y_size/2) screen coordinate b, must follow x1_pixel
     0046             (./Engine/Constant):00193                 rsv_prev_xy2_pixel_0          equ 70 ;
     0046             (./Engine/Constant):00194                 rsv_prev_x2_pixel_0           equ 70 ; previous x+x_offset+(x_size/2) screen coordinate b
     0047             (./Engine/Constant):00195                 rsv_prev_y2_pixel_0           equ 71 ; previous y+y_offset+(y_size/2) screen coordinate b, must follow x2_pixel
     0048             (./Engine/Constant):00196                 rsv_prev_render_flags_0       equ 72 ;
                      (./Engine/Constant):00197                 * --- rsv_prev_render_flags_0 bitfield variables ---
     0001             (./Engine/Constant):00198                 rsv_prev_render_overlay_mask  equ $01 ; (bit 0) if a sprite has been rendered with compilated sprite and no background save on screen buffer 0/1
     0080             (./Engine/Constant):00199                 rsv_prev_render_onscreen_mask equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on screen buffer 0/1
                      (./Engine/Constant):00200                 
     0049             (./Engine/Constant):00201                 rsv_buffer_1                  equ 73 ; Start index of buffer 1 variables
     0049             (./Engine/Constant):00202                 rsv_priority_1                equ 73 ; internal value that hold priority in video buffer 1
     004A             (./Engine/Constant):00203                 rsv_priority_prev_obj_1       equ 74 ; and 75 ; previous object (OST address) in display priority list for video buffer 1 (0000 if none) w
     004C             (./Engine/Constant):00204                 rsv_priority_next_obj_1       equ 76 ; and 77 ; next object (OST address) in display priority list for video buffer 1 (0000 if none) w
     004E             (./Engine/Constant):00205                 rsv_prev_mapping_frame_1      equ 78 ; and 79 ; reference to previous image in video buffer 1 w
     0050             (./Engine/Constant):00206                 rsv_prev_erase_nb_cell_1      equ 80 ; b
     0051             (./Engine/Constant):00207                 rsv_prev_page_erase_routine_1 equ 81 ; b
     0052             (./Engine/Constant):00208                 rsv_prev_erase_routine_1      equ 82 ; and 83 ; w
     0054             (./Engine/Constant):00209                 rsv_bgdata_1                  equ 84 ; and 85 ; address of background data in screen 1 w
     0056             (./Engine/Constant):00210                 rsv_prev_xy_pixel_1           equ 86 ;
     0056             (./Engine/Constant):00211                 rsv_prev_x_pixel_1            equ 86 ; previous x screen coordinate b
     0057             (./Engine/Constant):00212                 rsv_prev_y_pixel_1            equ 87 ; previous y screen coordinate b, must follow x_pixel
     0058             (./Engine/Constant):00213                 rsv_prev_xy1_pixel_1          equ 88 ;
     0058             (./Engine/Constant):00214                 rsv_prev_x1_pixel_1           equ 88 ; previous x+x_size screen coordinate b
     0059             (./Engine/Constant):00215                 rsv_prev_y1_pixel_1           equ 89 ; previous y+y_size screen coordinate b, must follow x_pixel
     005A             (./Engine/Constant):00216                 rsv_prev_xy2_pixel_1          equ 90 ;
     005A             (./Engine/Constant):00217                 rsv_prev_x2_pixel_1           equ 90 ; previous x+x_size screen coordinate b
     005B             (./Engine/Constant):00218                 rsv_prev_y2_pixel_1           equ 91 ; previous y+y_size screen coordinate b, must follow x_pixel
     005C             (./Engine/Constant):00219                 rsv_prev_render_flags_1       equ 92 ;
                      (./Engine/Constant):00220                 
     0000             (./Engine/Constant):00221                 buf_priority                  equ 0  ; offset for each rsv_buffer variables
     0001             (./Engine/Constant):00222                 buf_priority_prev_obj         equ 1  ;
     0003             (./Engine/Constant):00223                 buf_priority_next_obj         equ 3  ;
     0005             (./Engine/Constant):00224                 buf_prev_mapping_frame        equ 5  ;
     0007             (./Engine/Constant):00225                 buf_erase_nb_cell             equ 7  ;
     0008             (./Engine/Constant):00226                 buf_page_erase_routine        equ 8 ;
     0009             (./Engine/Constant):00227                 buf_erase_routine             equ 9 ;
     000B             (./Engine/Constant):00228                 buf_bgdata                    equ 11 ;
     000D             (./Engine/Constant):00229                 buf_prev_xy_pixel             equ 13 ;
     000D             (./Engine/Constant):00230                 buf_prev_x_pixel              equ 13 ;
     000E             (./Engine/Constant):00231                 buf_prev_y_pixel              equ 14 ;
     000F             (./Engine/Constant):00232                 buf_prev_xy1_pixel            equ 15 ;
     000F             (./Engine/Constant):00233                 buf_prev_x1_pixel             equ 15 ;
     0010             (./Engine/Constant):00234                 buf_prev_y1_pixel             equ 16 ;
     0011             (./Engine/Constant):00235                 buf_prev_xy2_pixel            equ 17 ;
     0011             (./Engine/Constant):00236                 buf_prev_x2_pixel             equ 17 ;
     0012             (./Engine/Constant):00237                 buf_prev_y2_pixel             equ 18 ;
     0013             (./Engine/Constant):00238                 buf_prev_render_flags         equ 19 ;
                      (C:\Users\bhrou\gi):00014                         INCLUDE "./Engine/Macros.asm"        
0000                  (./Engine/Macros.a):00001                 _ldd MACRO
                      (./Engine/Macros.a):00002                         ldd   #((\1)*256)+\2
                      (./Engine/Macros.a):00003                  ENDM
                      (./Engine/Macros.a):00004                  
0000                  (./Engine/Macros.a):00005                 _ldx MACRO
                      (./Engine/Macros.a):00006                         ldx   #((\1)*256)+\2
                      (./Engine/Macros.a):00007                  ENDM
                      (./Engine/Macros.a):00008                  
0000                  (./Engine/Macros.a):00009                 _ldy MACRO
                      (./Engine/Macros.a):00010                         ldy   #((\1)*256)+\2
                      (./Engine/Macros.a):00011                  ENDM
                      (./Engine/Macros.a):00012                  
0000                  (./Engine/Macros.a):00013                 _ldu MACRO
                      (./Engine/Macros.a):00014                         ldu   #((\1)*256)+\2
                      (./Engine/Macros.a):00015                  ENDM  
                      (./Engine/Macros.a):00016                  
0000                  (./Engine/Macros.a):00017                 _lds MACRO
                      (./Engine/Macros.a):00018                         lds   #((\1)*256)+\2
                      (./Engine/Macros.a):00019                  ENDM   
                      (./Engine/Macros.a):00020                  
0000                  (./Engine/Macros.a):00021                 _SetCartPageA MACRO
                      (./Engine/Macros.a):00022                  IFDEF T2
                      (./Engine/Macros.a):00023                         jsr   SetCartPageA
                      (./Engine/Macros.a):00024                  ELSE
                      (./Engine/Macros.a):00025                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00026                  ENDC
                      (./Engine/Macros.a):00027                  ENDM      
                      (./Engine/Macros.a):00028                  
0000                  (./Engine/Macros.a):00029                 _GetCartPageA MACRO
                      (./Engine/Macros.a):00030                  IFDEF T2
                      (./Engine/Macros.a):00031                         jsr   GetCartPageA
                      (./Engine/Macros.a):00032                  ELSE
                      (./Engine/Macros.a):00033                         lda   $E7E6
                      (./Engine/Macros.a):00034                  ENDC
                      (./Engine/Macros.a):00035                  ENDM
                      (./Engine/Macros.a):00036                 
0000                  (./Engine/Macros.a):00037                 _SetCartPageB MACRO
                      (./Engine/Macros.a):00038                  IFDEF T2
                      (./Engine/Macros.a):00039                         jsr   SetCartPageB
                      (./Engine/Macros.a):00040                  ELSE
                      (./Engine/Macros.a):00041                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00042                  ENDC
                      (./Engine/Macros.a):00043                  ENDM      
                      (./Engine/Macros.a):00044                  
0000                  (./Engine/Macros.a):00045                 _GetCartPageB MACRO
                      (./Engine/Macros.a):00046                  IFDEF T2
                      (./Engine/Macros.a):00047                         jsr   GetCartPageB
                      (./Engine/Macros.a):00048                  ELSE
                      (./Engine/Macros.a):00049                         ldb   $E7E6
                      (./Engine/Macros.a):00050                  ENDC
                      (./Engine/Macros.a):00051                  ENDM     
                      (./Engine/Macros.a):00052                 
0000                  (./Engine/Macros.a):00053                 _RunObjectSwap MACRO
                      (./Engine/Macros.a):00054                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00055                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00056                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00057                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00058                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00059                         stu   glb_Address       
                      (./Engine/Macros.a):00060                         ldu   \2             
                      (./Engine/Macros.a):00061                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00062                  ENDM    
                      (./Engine/Macros.a):00063                 
0000                  (./Engine/Macros.a):00064                 _RunObjectSwapRoutine MACRO
                      (./Engine/Macros.a):00065                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00066                         ; param 2 : Object routine
                      (./Engine/Macros.a):00067                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00068                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00069                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00070                         stu   glb_Address       
                      (./Engine/Macros.a):00071                         lda   \2        
                      (./Engine/Macros.a):00072                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00073                  ENDM 
                      (./Engine/Macros.a):00074                  
0000                  (./Engine/Macros.a):00075                 _MountObject MACRO 
                      (./Engine/Macros.a):00076                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00077                         ; manual mount of an object from the resident page 1
                      (./Engine/Macros.a):00078                         lda   Obj_Index_Page+\1
                      (./Engine/Macros.a):00079                         _SetCartPageA
                      (./Engine/Macros.a):00080                         ldx   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00081                  ENDM
                      (./Engine/Macros.a):00082                 
0000                  (./Engine/Macros.a):00083                 _RunObject MACRO 
                      (./Engine/Macros.a):00084                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00085                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00086                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00087                         _MountObject \1
                      (./Engine/Macros.a):00088                         ldu   \2        
                      (./Engine/Macros.a):00089                         jsr   ,x
                      (./Engine/Macros.a):00090                  ENDM
                      (./Engine/Macros.a):00091                 
0000                  (./Engine/Macros.a):00092                 _RunObjectRoutine MACRO 
                      (./Engine/Macros.a):00093                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00094                         ; param 2 : Object routine
                      (./Engine/Macros.a):00095                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00096                         ; this object does not need or have a data structure for this routine
                      (./Engine/Macros.a):00097                         _MountObject \1
                      (./Engine/Macros.a):00098                         lda   \2        
                      (./Engine/Macros.a):00099                         jsr   ,x
                      (./Engine/Macros.a):00100                  ENDM
                      (./Engine/Macros.a):00101                 
0000                  (./Engine/Macros.a):00102                 _asld MACRO
                      (./Engine/Macros.a):00103                         aslb
                      (./Engine/Macros.a):00104                         rola
                      (./Engine/Macros.a):00105                  ENDM        
                      (./Engine/Macros.a):00106                  
0000                  (./Engine/Macros.a):00107                 _asrd MACRO
                      (./Engine/Macros.a):00108                         asra
                      (./Engine/Macros.a):00109                         rorb
                      (./Engine/Macros.a):00110                  ENDM      
                      (./Engine/Macros.a):00111                  
0000                  (./Engine/Macros.a):00112                 _lsld MACRO
                      (./Engine/Macros.a):00113                         lslb
                      (./Engine/Macros.a):00114                         rola
                      (./Engine/Macros.a):00115                  ENDM        
                      (./Engine/Macros.a):00116                  
0000                  (./Engine/Macros.a):00117                 _lsrd MACRO
                      (./Engine/Macros.a):00118                         lsra
                      (./Engine/Macros.a):00119                         rorb
                      (./Engine/Macros.a):00120                  ENDM
                      (./Engine/Macros.a):00121                  
0000                  (./Engine/Macros.a):00122                 _rold MACRO
                      (./Engine/Macros.a):00123                         rolb
                      (./Engine/Macros.a):00124                         rola
                      (./Engine/Macros.a):00125                  ENDM    
                      (./Engine/Macros.a):00126                  
0000                  (./Engine/Macros.a):00127                 _rord MACRO
                      (./Engine/Macros.a):00128                         rora
                      (./Engine/Macros.a):00129                         rorb
                      (./Engine/Macros.a):00130                  ENDM
                      (./Engine/Macros.a):00131                 
0000                  (./Engine/Macros.a):00132                 _negd MACRO
                      (./Engine/Macros.a):00133                         nega
                      (./Engine/Macros.a):00134                         negb
                      (./Engine/Macros.a):00135                         sbca  #0
                      (./Engine/Macros.a):00136                  ENDM
                      (./Engine/Macros.a):00137                 
0000                  (./Engine/Macros.a):00138                 _cba MACRO
                      (./Engine/Macros.a):00139                         pshs  b
                      (./Engine/Macros.a):00140                         cmpa  ,s+
                      (./Engine/Macros.a):00141                  ENDM
                      (./Engine/Macros.a):00142                 
0000                  (./Engine/Macros.a):00143                 _aba MACRO
                      (./Engine/Macros.a):00144                         pshs  b
                      (./Engine/Macros.a):00145                         adda  ,s+
                      (./Engine/Macros.a):00146                  ENDM
                      (./Engine/Macros.a):00147                 
0000                  (./Engine/Macros.a):00148                 _sba MACRO
                      (./Engine/Macros.a):00149                         pshs  b
                      (./Engine/Macros.a):00150                         suba  ,s+
                      (./Engine/Macros.a):00151                  ENDM
                      (./Engine/Macros.a):00152                 
0000                  (./Engine/Macros.a):00153                 _cab MACRO
                      (./Engine/Macros.a):00154                         pshs  a
                      (./Engine/Macros.a):00155                         cmpb  ,s+
                      (./Engine/Macros.a):00156                  ENDM
                      (./Engine/Macros.a):00157                 
0000                  (./Engine/Macros.a):00158                 _aab MACRO
                      (./Engine/Macros.a):00159                         pshs  a
                      (./Engine/Macros.a):00160                         addb  ,s+
                      (./Engine/Macros.a):00161                  ENDM
                      (./Engine/Macros.a):00162                 
0000                  (./Engine/Macros.a):00163                 _sab MACRO
                      (./Engine/Macros.a):00164                         pshs  a
                      (./Engine/Macros.a):00165                         subb  ,s+
                      (./Engine/Macros.a):00166                  ENDM
                      (C:\Users\bhrou\gi):00015                         org   $6100
                      (C:\Users\bhrou\gi):00016                                 
6100 8601             (C:\Users\bhrou\gi):00017 [2]     2               lda   #GmID_TitleScreen
6102 B7849A           (C:\Users\bhrou\gi):00018 [5]     7               sta   glb_Cur_Game_Mode
6105 8600             (C:\Users\bhrou\gi):00019 [2]     9               lda   #GmID_EHZ
6107 B7849B           (C:\Users\bhrou\gi):00020 [5]     14              sta   glb_Next_Game_Mode                
                      (C:\Users\bhrou\gi):00021                 
610A BD9721           (C:\Users\bhrou\gi):00022 [8]     22              jsr   LoadAct       
                      (C:\Users\bhrou\gi):00023                 
                      (C:\Users\bhrou\gi):00024                 * ==============================================================================
                      (C:\Users\bhrou\gi):00025                 * Main Loop
                      (C:\Users\bhrou\gi):00026                 * ==============================================================================
610D                  (C:\Users\bhrou\gi):00027                 LevelMainLoop
610D BD7392           (C:\Users\bhrou\gi):00028 [8]     30              jsr   WaitVBL    
6110 BD854D           (C:\Users\bhrou\gi):00029 [8]     38              jsr   UpdatePalette
6113 BD834B           (C:\Users\bhrou\gi):00030 [8]     46              jsr   ReadJoypads
6116 BD849C           (C:\Users\bhrou\gi):00031 [8]     54              jsr   LoadGameMode                
6119 BD836C           (C:\Users\bhrou\gi):00032 [8]     62              jsr   RunObjects
611C BD76C5           (C:\Users\bhrou\gi):00033 [8]     70              jsr   CheckSpritesRefresh
611F BD7DCF           (C:\Users\bhrou\gi):00034 [8]     78              jsr   EraseSprites
6122 BD8035           (C:\Users\bhrou\gi):00035 [8]     86              jsr   UnsetDisplayPriority
6125 BD8114           (C:\Users\bhrou\gi):00036 [8]     94              jsr   DrawSprites        
6128 20E3             (C:\Users\bhrou\gi):00037 [3]     97              bra   LevelMainLoop
                      (C:\Users\bhrou\gi):00038                 
                      (C:\Users\bhrou\gi):00039                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00040                 * Game Mode RAM variables
                      (C:\Users\bhrou\gi):00041                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00042                         
                      (C:\Users\bhrou\gi):00043                         INCLUDE "./game-mode/title-screen/ram-data.asm"       
                      (./game-mode/title):00001                 ; RAM variables - Special stage
                      (./game-mode/title):00002                 ; TODO : split entre variables qui doivent etre globales (restent ici)
                      (./game-mode/title):00003                 ; et celles specifiques a l'objet (vont avec le code objet)
                      (./game-mode/title):00004                 
                      (./game-mode/title):00005                 ; ext_variables_size is for dynamic objects
     000E             (./game-mode/title):00006                 ext_variables_size                equ 14
                      (./game-mode/title):00007                 
                      (./game-mode/title):00008                 * ===========================================================================
                      (./game-mode/title):00009                 * Object Constants
                      (./game-mode/title):00010                 * ===========================================================================
                      (./game-mode/title):00011                 
     0002             (./game-mode/title):00012                 nb_reserved_objects               equ 2
     0026             (./game-mode/title):00013                 nb_dynamic_objects                equ 38
     0003             (./game-mode/title):00014                 nb_level_objects                  equ 3
     002B             (./game-mode/title):00015                 nb_graphical_objects              equ 43 * max 64 total
                      (./game-mode/title):00016                 
                      (./game-mode/title):00017                 * ---------------------------------------------------------------------------
                      (./game-mode/title):00018                 * Object Status Table - OST
                      (./game-mode/title):00019                 * ---------------------------------------------------------------------------
                      (./game-mode/title):00020                         
612A                  (./game-mode/title):00021                 Object_RAM 
612A                  (./game-mode/title):00022                 Reserved_Object_RAM
612A 04               (./game-mode/title):00023                 MainCharacter                 fcb   ObjID_SEGA
612B 01               (./game-mode/title):00024                                               fcb   $01
612C 0000000000000000 (./game-mode/title):00025                                               fill  0,object_size-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00
6195 0000000000000000 (./game-mode/title):00026                 Sidekick                      fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
6200                  (./game-mode/title):00027                 Reserved_Object_RAM_End
                      (./game-mode/title):00028                 
6200 0000000000000000 (./game-mode/title):00029                 Dynamic_Object_RAM            fill  0,nb_dynamic_objects*object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000
71E2                  (./game-mode/title):00030                 Dynamic_Object_RAM_End
                      (./game-mode/title):00031                 
71E2                  (./game-mode/title):00032                 LevelOnly_Object_RAM                              * faire comme pour Dynamic_Object_RAM
71E2 0000000000000000 (./game-mode/title):00033                 Obj_TailsTails                fill  0,object_size * Positionnement et nommage a mettre dans objet Tails
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
724D 0000000000000000 (./game-mode/title):00034                 Obj_SonicDust                 fill  0,object_size * Positionnement et nommage a mettre dans objet Tails
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
72B8 0000000000000000 (./game-mode/title):00035                 Obj_TailsDust                 fill  0,object_size * Positionnement et nommage a mettre dans objet Tails
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
7323                  (./game-mode/title):00036                 LevelOnly_Object_RAM_End
7323                  (./game-mode/title):00037                 Object_RAM_End
                      (C:\Users\bhrou\gi):00044                         
                      (C:\Users\bhrou\gi):00045                 * ==============================================================================
                      (C:\Users\bhrou\gi):00046                 * Routines
                      (C:\Users\bhrou\gi):00047                 * ==============================================================================
                      (C:\Users\bhrou\gi):00048                         INCLUDE "./Engine/Ram/BankSwitch.asm"
7323 00               (./Engine/Ram/Bank):00001                 glb_Page                      fcb   $00
                      (./Engine/Ram/Bank):00002                 
7324                  (./Engine/Ram/Bank):00003                 SetCartPageA
7324 B77323           (./Engine/Ram/Bank):00004 [5]     102             sta   glb_Page
7327 2A25             (./Engine/Ram/Bank):00005 [3]     105             bpl   @RAMPg
7329 B6E7E6           (./Engine/Ram/Bank):00006 [5]     110             lda   $E7E6
732C 84DF             (./Engine/Ram/Bank):00007 [2]     112             anda  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
732E B7E7E6           (./Engine/Ram/Bank):00008 [5]     117             sta   $E7E6
7331 86F0             (./Engine/Ram/Bank):00009 [2]     119             lda   #$F0                     ; sortie du mode commande T.2
7333 B70555           (./Engine/Ram/Bank):00010 [5]     124             sta   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
7336 86AA             (./Engine/Ram/Bank):00011 [2]     126             lda   #$AA                     ; sequence pour commutation de page T.2
7338 B70555           (./Engine/Ram/Bank):00012 [5]     131             sta   $0555
733B 44               (./Engine/Ram/Bank):00013 [2]     133             lsra                           ; lda   #$55
733C B702AA           (./Engine/Ram/Bank):00014 [5]     138             sta   $02AA
733F 86C0             (./Engine/Ram/Bank):00015 [2]     140             lda   #$C0
7341 B70555           (./Engine/Ram/Bank):00016 [5]     145             sta   $0555
7344 B67323           (./Engine/Ram/Bank):00017 [5]     150             lda   glb_Page
7347 847F             (./Engine/Ram/Bank):00018 [2]     152             anda  #$7F                     ; le bit 7 doit etre a 0        
7349 B70555           (./Engine/Ram/Bank):00019 [5]     157             sta   $0555                    ; selection de la page T.2 en zone cartouche
734C 2003             (./Engine/Ram/Bank):00020 [3]     160             bra   @rts
734E B7E7E6           (./Engine/Ram/Bank):00021 [5]     165     @RAMPg  sta   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
7351 39               (./Engine/Ram/Bank):00022 [5]     170     @rts    rts
                      (./Engine/Ram/Bank):00023                 
7352                  (./Engine/Ram/Bank):00024                 SetCartPageB
7352 F77323           (./Engine/Ram/Bank):00025 [5]     175             stb   glb_Page
7355 2A25             (./Engine/Ram/Bank):00026 [3]     178             bpl   @RAMPg
7357 F6E7E6           (./Engine/Ram/Bank):00027 [5]     183             ldb   $E7E6
735A C4DF             (./Engine/Ram/Bank):00028 [2]     185             andb  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
735C F7E7E6           (./Engine/Ram/Bank):00029 [5]     190             stb   $E7E6
735F C6F0             (./Engine/Ram/Bank):00030 [2]     192             ldb   #$F0                     ; sortie du mode commande T.2
7361 F70555           (./Engine/Ram/Bank):00031 [5]     197             stb   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
7364 C6AA             (./Engine/Ram/Bank):00032 [2]     199             ldb   #$AA                     ; sequence pour commutation de page T.2
7366 F70555           (./Engine/Ram/Bank):00033 [5]     204             stb   $0555
7369 54               (./Engine/Ram/Bank):00034 [2]     206             lsrb                           ; lda   #$55
736A F702AA           (./Engine/Ram/Bank):00035 [5]     211             stb   $02AA
736D C6C0             (./Engine/Ram/Bank):00036 [2]     213             ldb   #$C0
736F F70555           (./Engine/Ram/Bank):00037 [5]     218             stb   $0555
7372 F67323           (./Engine/Ram/Bank):00038 [5]     223             ldb   glb_Page
7375 C47F             (./Engine/Ram/Bank):00039 [2]     225             andb  #$7F                     ; le bit 7 doit etre a 0        
7377 F70555           (./Engine/Ram/Bank):00040 [5]     230             stb   $0555                    ; selection de la page T.2 en zone cartouche
737A 2003             (./Engine/Ram/Bank):00041 [3]     233             bra   @rts
737C F7E7E6           (./Engine/Ram/Bank):00042 [5]     238     @RAMPg  stb   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
737F 39               (./Engine/Ram/Bank):00043 [5]     243     @rts    rts
                      (./Engine/Ram/Bank):00044                 
7380                  (./Engine/Ram/Bank):00045                 GetCartPageA
7380 B67323           (./Engine/Ram/Bank):00046 [5]     248             lda   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
7383 2603             (./Engine/Ram/Bank):00047 [3]     251             bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
7385 B6E7E6           (./Engine/Ram/Bank):00048 [5]     256             lda   $E7E6
7388 39               (./Engine/Ram/Bank):00049 [5]     261     @rts    rts
                      (./Engine/Ram/Bank):00050                 
7389                  (./Engine/Ram/Bank):00051                 GetCartPageB
7389 F67323           (./Engine/Ram/Bank):00052 [5]     266             ldb   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
738C 2603             (./Engine/Ram/Bank):00053 [3]     269             bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
738E F6E7E6           (./Engine/Ram/Bank):00054 [5]     274             ldb   $E7E6
7391 39               (./Engine/Ram/Bank):00055 [5]     279     @rts   rts
                      (./Engine/Ram/Bank):00056                 
                      (C:\Users\bhrou\gi):00049                         INCLUDE "./Engine/Graphics/WaitVBL.asm"
                      (./Engine/Graphics):00001                 ********************************************************************************
                      (./Engine/Graphics):00002                 * Attente VBL
                      (./Engine/Graphics):00003                 * Alternance de la page 2 et 3 entre affichage et espace cartouche
                      (./Engine/Graphics):00004                 * Alternance de la RAMA et RAM B dans l'espace ecran
                      (./Engine/Graphics):00005                 * ------------------------------------------------------------------------------
                      (./Engine/Graphics):00006                 *
                      (./Engine/Graphics):00007                 * Page Affichee par l'automate Video
                      (./Engine/Graphics):00008                 * ----------------------------------
                      (./Engine/Graphics):00009                 *   $E7DD determine la page affichee a l'ecran
                      (./Engine/Graphics):00010                 *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : page 0
                      (./Engine/Graphics):00011                 *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : page 1
                      (./Engine/Graphics):00012                 *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : page 2
                      (./Engine/Graphics):00013                 *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : page 3
                      (./Engine/Graphics):00014                 *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : couleur du cadre
                      (./Engine/Graphics):00015                 *   Remarque : bit5 et bit4 utilisable uniquement en mode MO
                      (./Engine/Graphics):00016                 *
                      (./Engine/Graphics):00017                 * Page en espace cartouche
                      (./Engine/Graphics):00018                 * ------------------------
                      (./Engine/Graphics):00019                 *   $E7E6 determine la page visible dans l'espace cartouche (0000 a 3FFF)
                      (./Engine/Graphics):00020                 *   bit7 toujours a 0
                      (./Engine/Graphics):00021                 *   bit6=1 : ecriture autorisee
                      (./Engine/Graphics):00022                 *   bit5=1 : espace cartouche recouvert par de la RAM
                      (./Engine/Graphics):00023                 *   bit4=0 : CAS1N valide : banques 0-15 / 1 = CAS2N valide : banques 16-31
                      (./Engine/Graphics):00024                 *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bit0=0 (#$60) : page 0
                      (./Engine/Graphics):00025                 *   ...
                      (./Engine/Graphics):00026                 *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bit0=1 (#$6F) : page 15
                      (./Engine/Graphics):00027                 *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bit0=0 (#$70) : page 16
                      (./Engine/Graphics):00028                 *   ...
                      (./Engine/Graphics):00029                 *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bit0=1 (#$7F) : page 31
                      (./Engine/Graphics):00030                 *
                      (./Engine/Graphics):00031                 * Demi-Page 0 en espace ecran (4000 a 5FFF)
                      (./Engine/Graphics):00032                 * -----------------------------------------
                      (./Engine/Graphics):00033                 *   $E7C3 determine la demi-page de la page 0 visible dans l'espace ecran
                      (./Engine/Graphics):00034                 *   bit0=0 : 8Ko RAMA
                      (./Engine/Graphics):00035                 *   bit0=1 : 8ko RAMB
                      (./Engine/Graphics):00036                 *
                      (./Engine/Graphics):00037                 * Page en espace donnees
                      (./Engine/Graphics):00038                 * ----------------------
                      (./Engine/Graphics):00039                 * lda   #$04
                      (./Engine/Graphics):00040                 * sta   $E7E5                    * selection de la page 04 en RAM Donnees (A000-DFFF)
                      (./Engine/Graphics):00041                 *
                      (./Engine/Graphics):00042                 ********************************************************************************
7392                  (./Engine/Graphics):00043                 WaitVBL
7392 FC73E9           (./Engine/Graphics):00044 [6]     285             ldd   Vint_runcount
7395 B373EB           (./Engine/Graphics):00045 [7]     292             subd  Vint_Last_runcount
7398 C102             (./Engine/Graphics):00046 [2]     294             cmpb  #2
739A 240A             (./Engine/Graphics):00047 [3]     297             bhs   SwapVideoPage
739C                  (./Engine/Graphics):00048                 @a
739C 7DE7E7           (./Engine/Graphics):00049 [7]     304             tst   $E7E7              * le faisceau n'est pas dans l'ecran
739F 2AFB             (./Engine/Graphics):00050 [3]     307             bpl   @a                 * tant que le bit est a 0 on boucle
73A1                  (./Engine/Graphics):00051                 @b
73A1 7DE7E7           (./Engine/Graphics):00052 [7]     314             tst   $E7E7              * le faisceau est dans l'ecran
73A4 2BFB             (./Engine/Graphics):00053 [3]     317             bmi   @b                 * tant que le bit est a 1 on boucle
                      (./Engine/Graphics):00054                                         
73A6                  (./Engine/Graphics):00055                 SwapVideoPage
73A6 F673B4           (./Engine/Graphics):00056 [5]     322             ldb   am_SwapVideoPage+1 * charge la valeur du ldb suivant am_SwapVideoPage
73A9 C440             (./Engine/Graphics):00057 [2]     324             andb  #$40               * alterne bit6=0 et bit6=1 (suivant la valeur B $00 ou $FF)
73AB                  (./Engine/Graphics):00058                 glb_screen_border_color        
73AB CA80             (./Engine/Graphics):00059 [2]     326             orb   #$80               * bit7=1, bit3 a bit0=couleur de cadre (ici 0)
73AD F7E7DD           (./Engine/Graphics):00060 [5]     331             stb   $E7DD              * changement page (2 ou 3) affichee a l'ecran
73B0 7373B4           (./Engine/Graphics):00061 [7]     338             com   am_SwapVideoPage+1 * alterne $00 et $FF sur le ldb suivant am_SwapVideoPage
73B3                  (./Engine/Graphics):00062                 am_SwapVideoPage
73B3 C600             (./Engine/Graphics):00063 [2]     340             ldb   #$00
73B5 C401             (./Engine/Graphics):00064 [2]     342             andb  #$01               * alterne bit0=0 et bit0=1 (suivant la valeur B $00 ou $FF)
73B7 F773F0           (./Engine/Graphics):00065 [5]     347             stb   glb_Cur_Wrk_Screen_Id
73BA CA02             (./Engine/Graphics):00066 [2]     349             orb   #$02               * bit1=1
73BC F7E7E5           (./Engine/Graphics):00067 [5]     354             stb   $E7E5              * changement page (2 ou 3) visible dans l'espace donnees
73BF F6E7C3           (./Engine/Graphics):00068 [5]     359             ldb   $E7C3              * charge l'identifiant de la demi-page 0 configuree en espace ecran
73C2 C801             (./Engine/Graphics):00069 [2]     361             eorb  #$01               * alterne bit0 = 0 ou 1 changement demi-page de la page 0 visible dans l'espace ecran
73C4 F7E7C3           (./Engine/Graphics):00070 [5]     366             stb   $E7C3
                      (./Engine/Graphics):00071                         
73C7 7C73E8           (./Engine/Graphics):00072 [7]     373             inc   glb_Main_runcount+1
73CA 2603             (./Engine/Graphics):00073 [3]     376             bne   @a
73CC 7C73E7           (./Engine/Graphics):00074 [7]     383             inc   glb_Main_runcount  
73CF                  (./Engine/Graphics):00075                 @a
                      (./Engine/Graphics):00076                 
73CF FC73E9           (./Engine/Graphics):00077 [6]     389             ldd   Vint_runcount            ; store in Vint_Main_runcount the number of elapsed 50Hz frames
73D2 B373EB           (./Engine/Graphics):00078 [7]     396             subd  Vint_Last_runcount       ; used in AnimateSpriteSync
73D5 F173EF           (./Engine/Graphics):00079 [5]     401             cmpb  Vint_Main_runcount_cap   ; allow to cap Animation and Mvt Sync
73D8 2303             (./Engine/Graphics):00080 [3]     404             bls   @a
73DA F673EF           (./Engine/Graphics):00081 [5]     409             ldb   Vint_Main_runcount_cap
73DD F773EE           (./Engine/Graphics):00082 [5]     414     @a      stb   Vint_Main_runcount
                      (./Engine/Graphics):00083                 
73E0 FC73E9           (./Engine/Graphics):00084 [6]     420             ldd   Vint_runcount
73E3 FD73EB           (./Engine/Graphics):00085 [6]     426             std   Vint_Last_runcount
73E6 39               (./Engine/Graphics):00086 [5]     431             rts
                      (./Engine/Graphics):00087                         
73E7 0000             (./Engine/Graphics):00088                 glb_Main_runcount      fdb   0 ; page swap counter
73E9 0000             (./Engine/Graphics):00089                 Vint_runcount          fdb   0 ; incremented in 50Hz IRQ
73EB 0000             (./Engine/Graphics):00090                 Vint_Last_runcount     fdb   0
73ED 00               (./Engine/Graphics):00091                 Vint_Main_runcount_w   fcb   0 ; pad to be able to load Vint_Main_runcount as a word
73EE 00               (./Engine/Graphics):00092                 Vint_Main_runcount     fcb   0
73EF 00               (./Engine/Graphics):00093                 Vint_Main_runcount_cap fcb   0
73F0 00               (./Engine/Graphics):00094                 glb_Cur_Wrk_Screen_Id  fcb   0 ; screen buffer set to write operations (0 or 1)
                      (C:\Users\bhrou\gi):00050                         INCLUDE "./Engine/Graphics/AnimateSprite.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * Subroutine to animate a sprite using an animation script
                      (./Engine/Graphics):00003                 *
                      (./Engine/Graphics):00004                 * input REG : [u] pointeur sur l'objet
                      (./Engine/Graphics):00005                 *
                      (./Engine/Graphics):00006                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00007                 
                      (./Engine/Graphics):00008                                                             *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                                                             *; Subroutine to animate a sprite using an animation script
                      (./Engine/Graphics):00010                                                             *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00011                                                             *
                      (./Engine/Graphics):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Graphics):00013                                                             *
                      (./Engine/Graphics):00014                                                             *; sub_16544:
73F1                  (./Engine/Graphics):00015                 AnimateSprite                               *AnimateSprite:
                      (./Engine/Graphics):00016                                                             *    moveq   #0,d0
                      (./Engine/Graphics):00017                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
73F1 BD7380           (    _GetCartPageA):00002 [8]     439             jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
73F4 B7744E           (./Engine/Graphics):00018 [5]     444             sta   Anim_Rts+1                    ; backup cart page     
73F7 8E970F           (./Engine/Graphics):00019 [3]     447             ldx   #Ani_Page_Index
73FA E6C4             (./Engine/Graphics):00020 [4]     451             ldb   id,u
73FC 3A               (./Engine/Graphics):00021 [3]     454             abx
73FD A684             (./Engine/Graphics):00022 [4]     458             lda   ,x
                      (./Engine/Graphics):00023                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
73FF BD7324           (    _SetCartPageA):00002 [8]     466             jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00024                 ;
7402 AE44             (./Engine/Graphics):00025 [6]     472             ldx   anim,u                        *    move.b  anim(a0),d0      ; move animation number to d0
7404 2A0C             (./Engine/Graphics):00026 [3]     475             bpl   @a                       ; branch if anim is an address of anim
7406 8E9715           (./Engine/Graphics):00027 [3]     478             ldx   #Ani_Asd_Index           ; negative means anim,u is a signed 8 bit offset for a LUT
                      (./Engine/Graphics):00028                         ; ldb   id,u                   ; already loaded
7409 58               (./Engine/Graphics):00029 [2]     480             aslb
740A 3A               (./Engine/Graphics):00030 [3]     483             abx
740B AE94             (./Engine/Graphics):00031 [8]     491             ldx   [,x]                     ; load Anim LUT (first entry in Asd LUT)
740D E645             (./Engine/Graphics):00032 [5]     496             ldb   anim+1,u                 ; load offset
740F 3A               (./Engine/Graphics):00033 [3]     499             abx                            ; apply offset
7410 AE84             (./Engine/Graphics):00034 [5]     504             ldx   ,x                       ; load target anim address
7412 AC46             (./Engine/Graphics):00035 [7]     511     @a      cmpx  prev_anim,u                   *    cmp.b   prev_anim(a0),d0 ; is animation set to change?
7414 270E             (./Engine/Graphics):00036 [3]     514             beq   Anim_Run                      *    beq.s   Anim_Run         ; if not, branch
7416 AF46             (./Engine/Graphics):00037 [6]     520             stx   prev_anim,u                   *    move.b  d0,prev_anim(a0) ; set prev anim to current animation
                      (./Engine/Graphics):00038                         
7418 A64A             (./Engine/Graphics):00039 [5]     525             lda   anim_flags,u
741A 8401             (./Engine/Graphics):00040 [2]     527             anda  #anim_link_mask               ; if animation link, when changing animation
741C 260E             (./Engine/Graphics):00041 [3]     530             bne   Anim_Reload                   ; will skip frame and duration reinit
                      (./Engine/Graphics):00042                         
741E C600             (./Engine/Graphics):00043 [2]     532             ldb   #0                            
7420 E748             (./Engine/Graphics):00044 [5]     537             stb   anim_frame,u                  *    move.b  #0,anim_frame(a0)          ; reset animation
7422 2004             (./Engine/Graphics):00045 [3]     540             bra   @b                            *    move.b  #0,anim_frame_duration(a0) ; reset frame duration
                      (./Engine/Graphics):00046                                                             *; loc_16560:
7424                  (./Engine/Graphics):00047                 Anim_Run                                    *Anim_Run:
7424 6A49             (./Engine/Graphics):00048 [7]     547             dec   anim_frame_duration,u         *    subq.b  #1,anim_frame_duration(a0)   ; subtract 1 from frame duration
7426 2A25             (./Engine/Graphics):00049 [3]     550             bpl   Anim_Rts                      *    bpl.s   Anim_Wait                    ; if time remains, branch
                      (./Engine/Graphics):00050                         * no offset table                   *    add.w   d0,d0
                      (./Engine/Graphics):00051                         * anim is the address of anim       *    adda.w  (a1,d0.w),a1                 ; calculate address of appropriate animation script
7428 E61F             (./Engine/Graphics):00052 [5]     555     @b      ldb   -1,x                            
742A E749             (./Engine/Graphics):00053 [5]     560             stb   anim_frame_duration,u         *    move.b  (a1),anim_frame_duration(a0) ; load frame duration
742C                  (./Engine/Graphics):00054                 Anim_Reload                                 *    moveq   #0,d1
742C E648             (./Engine/Graphics):00055 [5]     565             ldb   anim_frame,u                  *    move.b  anim_frame(a0),d1 ; load current frame number
742E 8600             (./Engine/Graphics):00056 [2]     567             lda   #0
                      (./Engine/Graphics):00057                         _asld
7430 58               (            _asld):00001 [2]     569             aslb
7431 49               (            _asld):00002 [2]     571             rola
7432 318B             (./Engine/Graphics):00058 [8]     579             leay  d,x
7434 ECA4             (./Engine/Graphics):00059 [5]     584             ldd   ,y                            *    move.b  1(a1,d1.w),d0 ; read sprite number from script
                      (./Engine/Graphics):00060                         * bmi   Anim_End_FF                 *    bmi.s   Anim_End_FF   ; if animation is complete, branch MJ: Delete this line
7436 81FA             (./Engine/Graphics):00061 [2]     586             cmpa  #$FA                          *    cmp.b   #$FA,d0       ; MJ: is it a flag from FA to FF?
7438 2419             (./Engine/Graphics):00062 [3]     589             bhs   Anim_End_FF                   *    bhs     Anim_End_FF   ; MJ: if so, branch to flag routines
                      (./Engine/Graphics):00063                                                             *; loc_1657C:
743A                  (./Engine/Graphics):00064                 Anim_Next                                   *Anim_Next:
                      (./Engine/Graphics):00065                                                                 *    andi.b  #$7F,d0               ; clear sign bit
743A ED4C             (./Engine/Graphics):00066 [6]     595             std   image_set,u                   *    move.b  d0,mapping_frame(a0)  ; load sprite number
743C A64B             (./Engine/Graphics):00067 [5]     600             lda   status_flags,u
743E 8403             (./Engine/Graphics):00068 [2]     602             anda  #status_xflip_mask|status_yflip_mask
7440 B77448           (./Engine/Graphics):00069 [5]     607             sta   @dyn+1
7443 A642             (./Engine/Graphics):00070 [5]     612             lda   render_flags,u
7445 84FE             (./Engine/Graphics):00071 [2]     614             anda  #^render_xmirror_mask
7447 8A00             (./Engine/Graphics):00072 [2]     616     @dyn    ora   #0
7449 A742             (./Engine/Graphics):00073 [5]     621             sta   render_flags,u
                      (./Engine/Graphics):00074                                                             *    move.b  status(a0),d1         ; match the orientaion dictated by the object
                      (./Engine/Graphics):00075                                                             *    andi.b  #3,d1                 ; with the orientation used by the object engine
                      (./Engine/Graphics):00076                                                             *    andi.b  #$FC,render_flags(a0)
                      (./Engine/Graphics):00077                                                             *    or.b    d1,render_flags(a0)
744B 6C48             (./Engine/Graphics):00078 [7]     628             inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)     ; next frame number
                      (./Engine/Graphics):00079                                                             *; return_1659A:
744D                  (./Engine/Graphics):00080                 Anim_Rts                                    *Anim_Wait:
744D 8600             (./Engine/Graphics):00081 [2]     630             lda   #$00                          ; (dynamic)
                      (./Engine/Graphics):00082                         _SetCartPageA                       ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
744F BD7324           (    _SetCartPageA):00002 [8]     638             jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7452 39               (./Engine/Graphics):00083 [5]     643             rts                                 *    rts 
                      (./Engine/Graphics):00084                                                             *; ===========================================================================
                      (./Engine/Graphics):00085                                                             *; loc_1659C:
7453                  (./Engine/Graphics):00086                 Anim_End_FF                                 *Anim_End_FF:
7453 4C               (./Engine/Graphics):00087 [2]     645             inca                                *    addq.b  #1,d0       ; is the end flag = $FF ?
7454 2608             (./Engine/Graphics):00088 [3]     648             bne   Anim_End_FE                   *    bne.s   Anim_End_FE ; if not, branch
7456 C600             (./Engine/Graphics):00089 [2]     650             ldb   #0                            
7458 E748             (./Engine/Graphics):00090 [5]     655             stb   anim_frame,u                  *    move.b  #0,anim_frame(a0) ; restart the animation
745A EC84             (./Engine/Graphics):00091 [5]     660             ldd   ,x                            *    move.b  1(a1),d0          ; read sprite number
745C 20DC             (./Engine/Graphics):00092 [3]     663             bra   Anim_Next                     *    bra.s   Anim_Next
                      (./Engine/Graphics):00093                                                             *; ===========================================================================
                      (./Engine/Graphics):00094                                                             *; loc_165AC:
745E                  (./Engine/Graphics):00095                 Anim_End_FE                                 *Anim_End_FE:
745E 4C               (./Engine/Graphics):00096 [2]     665             inca                                *    addq.b  #1,d0             ; is the end flag = $FE ?
745F 2610             (./Engine/Graphics):00097 [3]     668             bne   Anim_End_FD                   *    bne.s   Anim_End_FD       ; if not, branch
7461 A648             (./Engine/Graphics):00098 [5]     673             lda   anim_frame,u                  
7463 F77467           (./Engine/Graphics):00099 [5]     678             stb   Anim_End_FE_dyn+1             *    move.b  2(a1,d1.w),d0     ; read the next byte in the script
7466                  (./Engine/Graphics):00100                 Anim_End_FE_dyn
7466 8000             (./Engine/Graphics):00101 [2]     680             suba  #$00                          ; (dynamic)                          
7468 A748             (./Engine/Graphics):00102 [5]     685             sta   anim_frame,u                  *    sub.b   d0,anim_frame(a0) ; jump back d0 bytes in the script
                      (./Engine/Graphics):00103                                                             *    sub.b   d0,d1
746A C602             (./Engine/Graphics):00104 [2]     687             ldb   #2
746C 3D               (./Engine/Graphics):00105 [11]    698             mul                                            
746D EC8B             (./Engine/Graphics):00106 [9]     707             ldd   d,x                           *    move.b  1(a1,d1.w),d0     ; read sprite number
746F 20C9             (./Engine/Graphics):00107 [3]     710             bra   Anim_Next                     *    bra.s   Anim_Next
                      (./Engine/Graphics):00108                                                             *; ===========================================================================
                      (./Engine/Graphics):00109                                                             *; loc_165C0:
7471                  (./Engine/Graphics):00110                 Anim_End_FD                                 *Anim_End_FD:
7471 4C               (./Engine/Graphics):00111 [2]     712             inca                                *    addq.b  #1,d0               ; is the end flag = $FD ?
7472 2606             (./Engine/Graphics):00112 [3]     715             bne   Anim_End_FC                   *    bne.s   Anim_End_FC         ; if not, branch
7474 EC21             (./Engine/Graphics):00113 [6]     721             ldd   1,y                           ; read word after FD
7476 ED44             (./Engine/Graphics):00114 [6]     727             std   anim,u                        *    move.b  2(a1,d1.w),anim(a0) ; read next byte, run that animation
7478 20D3             (./Engine/Graphics):00115 [3]     730             bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00116                                                             *; ===========================================================================
                      (./Engine/Graphics):00117                                                             *; loc_165CC:
747A                  (./Engine/Graphics):00118                 Anim_End_FC                                 *Anim_End_FC:
747A 4C               (./Engine/Graphics):00119 [2]     732             inca                                *    addq.b  #1,d0          ; is the end flag = $FC ?
747B 260B             (./Engine/Graphics):00120 [3]     735             bne   Anim_End_FB                   *    bne.s   Anim_End_FB    ; if not, branch
747D 6CC81E           (./Engine/Graphics):00121 [7]     742             inc   routine,u                     *    addq.b  #2,routine(a0) ; jump to next routine
7480 8600             (./Engine/Graphics):00122 [2]     744             lda   #0                            
7482 A749             (./Engine/Graphics):00123 [5]     749             sta   anim_frame_duration,u         *    move.b  #0,anim_frame_duration(a0)
7484 6C48             (./Engine/Graphics):00124 [7]     756             inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)
7486 20C5             (./Engine/Graphics):00125 [3]     759             bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00126                                                             *; ===========================================================================
                      (./Engine/Graphics):00127                                                             *; loc_165E0:
7488                  (./Engine/Graphics):00128                 Anim_End_FB                                 *Anim_End_FB:
7488 4C               (./Engine/Graphics):00129 [2]     761             inca                                *    addq.b  #1,d0                 ; is the end flag = $FB ?
7489 2609             (./Engine/Graphics):00130 [3]     764             bne   Anim_End_FA                   *    bne.s   Anim_End_FA           ; if not, branch
748B 8600             (./Engine/Graphics):00131 [2]     766             lda   #0                            
748D A748             (./Engine/Graphics):00132 [5]     771             sta   anim_frame,u                  *    move.b  #0,anim_frame(a0)     ; reset animation
748F A7C81F           (./Engine/Graphics):00133 [5]     776             sta   routine_secondary,u           *    clr.b   routine_secondary(a0) ; reset 2nd routine counter
7492 20B9             (./Engine/Graphics):00134 [3]     779             bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00135                                                             *; ===========================================================================
                      (./Engine/Graphics):00136                                                             *; loc_165F0:
7494                  (./Engine/Graphics):00137                 Anim_End_FA                                 *Anim_End_FA:
7494 4C               (./Engine/Graphics):00138 [2]     781             inca                                *    addq.b  #1,d0                    ; is the end flag = $FA ?
7495 2603             (./Engine/Graphics):00139 [3]     784             bne   Anim_End                      *    bne.s   Anim_End_F9              ; if not, branch
7497 6CC81F           (./Engine/Graphics):00140 [7]     791             inc   routine_secondary,u           *    addq.b  #2,routine_secondary(a0) ; jump to next routine    
749A                  (./Engine/Graphics):00141                 Anim_End               
749A 20B1             (./Engine/Graphics):00142 [3]     794             bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00143                                                             *; ===========================================================================
                      (./Engine/Graphics):00144                                                             *; loc_165FA:
                      (./Engine/Graphics):00145                                                             *Anim_End_F9:
                      (./Engine/Graphics):00146                                                             *    addq.b  #1,d0            ; is the end flag = $F9 ?
                      (./Engine/Graphics):00147                                                             *    bne.s   Anim_End         ; if not, branch
                      (./Engine/Graphics):00148                                                             *    addq.b  #2,objoff_2A(a0) ; Actually obj89_arrow_routine
                      (./Engine/Graphics):00149                                                             *; return_16602:
                      (./Engine/Graphics):00150                                                             *Anim_End:
                      (./Engine/Graphics):00151                                                             *    rts
                      (./Engine/Graphics):00152                                                             *; End of function AnimateSprite
                      (C:\Users\bhrou\gi):00051                         INCLUDE "./Engine/Graphics/DisplaySprite.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * DisplaySprite
                      (./Engine/Graphics):00003                 * -------------
                      (./Engine/Graphics):00004                 * Subroutine to manage sprite priority.
                      (./Engine/Graphics):00005                 * Object's priority is read and object is (un)registred in display engine.
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * Unlike original S2 code, sprite priority is stored in an open doubly linked list
                      (./Engine/Graphics):00011                 * it allows to keep an exact sprite order for each screen buffer 
                      (./Engine/Graphics):00012                 *
                      (./Engine/Graphics):00013                 * DisplaySprite
                      (./Engine/Graphics):00014                 * input REG : [u] object pointer (OST)
                      (./Engine/Graphics):00015                 *
                      (./Engine/Graphics):00016                 * DisplaySprite_x
                      (./Engine/Graphics):00017                 * input REG : [x] object pointer (OST)
                      (./Engine/Graphics):00018                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00019                                                                                            
749C                  (./Engine/Graphics):00020                 DisplaySprite_x 
749C 3456             (./Engine/Graphics):00021 [11]    805             pshs  d,x,u
749E 1F13             (./Engine/Graphics):00022 [6]     811             tfr   x,u
74A0 2002             (./Engine/Graphics):00023 [3]     814             bra   DSP_Start
                      (./Engine/Graphics):00024                         
74A2                  (./Engine/Graphics):00025                 DisplaySprite 
74A2 3456             (./Engine/Graphics):00026 [11]    825             pshs  d,x,u
                      (./Engine/Graphics):00027                         
74A4                  (./Engine/Graphics):00028                 DSP_Start
74A4 A642             (./Engine/Graphics):00029 [5]     830             lda   render_flags,u
74A6 84DF             (./Engine/Graphics):00030 [2]     832             anda  #^render_hide_mask            ; unset hide flag
74A8 A742             (./Engine/Graphics):00031 [5]     837             sta   render_flags,u
                      (./Engine/Graphics):00032                 
74AA B673F0           (./Engine/Graphics):00033 [5]     842             lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
74AD 2609             (./Engine/Graphics):00034 [3]     845             bne   DSP_SetBuffer1
                      (./Engine/Graphics):00035                         
74AF                  (./Engine/Graphics):00036                 DSP_SetBuffer0        
74AF 30C835           (./Engine/Graphics):00037 [5]     850             leax  rsv_buffer_0,u                ; set x pointer to object variables that belongs to screen buffer 0
74B2 108E7521         (./Engine/Graphics):00038 [4]     854             ldy   #DPS_buffer_0                 ; set y pointer to Display Priority Structure that belongs to screen buffer 0
74B6 2007             (./Engine/Graphics):00039 [3]     857             bra   DSP_BufferPositionned
                      (./Engine/Graphics):00040                         
74B8                  (./Engine/Graphics):00041                 DSP_SetBuffer1       
74B8 30C849           (./Engine/Graphics):00042 [5]     862             leax  rsv_buffer_1,u                ; set x pointer to object variables that belongs to screen buffer 1
74BB 108E759D         (./Engine/Graphics):00043 [4]     866             ldy   #DPS_buffer_1                 ; set y pointer to Display Priority Structure that belongs to screen buffer 1        
                      (./Engine/Graphics):00044                         
74BF                  (./Engine/Graphics):00045                 DSP_BufferPositionned       
74BF A643             (./Engine/Graphics):00046 [5]     871             lda   priority,u                    ; read priority set for this object
74C1 A184             (./Engine/Graphics):00047 [4]     875             cmpa  buf_priority,x
74C3 271E             (./Engine/Graphics):00048 [3]     878             beq   DSP_rts                       ; priority and current priority are the same: nothing to do
74C5 E684             (./Engine/Graphics):00049 [4]     882             ldb   buf_priority,x   
74C7 2641             (./Engine/Graphics):00050 [3]     885             bne   DSP_ChangePriority
                      (./Engine/Graphics):00051                         
74C9                  (./Engine/Graphics):00052                 DSP_InitPriority
74C9 A784             (./Engine/Graphics):00053 [4]     889             sta   buf_priority,x                ; init priority for this screen buffer with priority from object
                      (./Engine/Graphics):00054                         
74CB                  (./Engine/Graphics):00055                 DSP_CheckLastEntry
74CB 31A90012         (./Engine/Graphics):00056 [8]     897             leay  buf_Tbl_Priority_Last_Entry,y
74CF 48               (./Engine/Graphics):00057 [2]     899             asla                                ; change priority number to priority index (value x2)        
74D0 6DA6             (./Engine/Graphics):00058 [7]     906             tst   a,y                           ; test left byte only is ok, no object will be stored at $00__ address
74D2 2611             (./Engine/Graphics):00059 [3]     909             bne   DSP_addToExistingNode         ; not the first object at this priority level, branch
                      (./Engine/Graphics):00060                         
74D4                  (./Engine/Graphics):00061                 DSP_addFirstNode        
74D4 EFA6             (./Engine/Graphics):00062 [6]     915             stu   a,y                           ; save object as last entry in linked list
74D6 31A9FFEE         (./Engine/Graphics):00063 [8]     923             leay  buf_Tbl_Priority_First_Entry-buf_Tbl_Priority_Last_Entry,y
74DA EFA6             (./Engine/Graphics):00064 [6]     929             stu   a,y                           ; save object as first entry in linked list
74DC CC0000           (./Engine/Graphics):00065 [3]     932             ldd   #0
74DF ED01             (./Engine/Graphics):00066 [6]     938             std   buf_priority_prev_obj,x       ; clear object prev and next link, it's the only object at this priority level
74E1 ED03             (./Engine/Graphics):00067 [6]     944             std   buf_priority_next_obj,x
                      (./Engine/Graphics):00068                         
74E3                  (./Engine/Graphics):00069                 DSP_rts
74E3 35D6             (./Engine/Graphics):00070 [13]    957             puls  d,x,u,pc                      ; rts        
                      (./Engine/Graphics):00071                         
74E5                  (./Engine/Graphics):00072                 DSP_addToExistingNode
74E5 AEA6             (./Engine/Graphics):00073 [6]     963             ldx   a,y                           ; x register now store last object at the priority level of current object
74E7 F673F0           (./Engine/Graphics):00074 [5]     968             ldb   glb_Cur_Wrk_Screen_Id
74EA 260E             (./Engine/Graphics):00075 [3]     971             bne   DSP_LinkBuffer1
74EC EF8838           (./Engine/Graphics):00076 [6]     977             stu   rsv_priority_next_obj_0,x     ; link last object with current object if active screen buffer 0
74EF AFC836           (./Engine/Graphics):00077 [6]     983             stx   rsv_priority_prev_obj_0,u     ; link current object with previous object
74F2 6FC838           (./Engine/Graphics):00078 [7]     990             clr   rsv_priority_next_obj_0,u     ; clear object next link        
74F5 6FC839           (./Engine/Graphics):00079 [7]     997             clr   rsv_priority_next_obj_0+1,u   ; clear object next link        
74F8 200C             (./Engine/Graphics):00080 [3]     1000            bra   DSP_LinkCurWithPrev        
74FA                  (./Engine/Graphics):00081                 DSP_LinkBuffer1        
74FA EF884C           (./Engine/Graphics):00082 [6]     1006            stu   rsv_priority_next_obj_1,x     ; link last object with current object if active screen buffer 1
74FD AFC84A           (./Engine/Graphics):00083 [6]     1012            stx   rsv_priority_prev_obj_1,u     ; link current object with previous object
7500 6FC84C           (./Engine/Graphics):00084 [7]     1019            clr   rsv_priority_next_obj_1,u     ; clear object next link        
7503 6FC84D           (./Engine/Graphics):00085 [7]     1026            clr   rsv_priority_next_obj_1+1,u   ; clear object next link        
                      (./Engine/Graphics):00086                         
7506                  (./Engine/Graphics):00087                 DSP_LinkCurWithPrev        
7506 EFA6             (./Engine/Graphics):00088 [6]     1032            stu   a,y                           ; update last object in index
7508 35D6             (./Engine/Graphics):00089 [13]    1045            puls  d,x,u,pc                      ; rts
                      (./Engine/Graphics):00090                         
750A                  (./Engine/Graphics):00091                 DSP_ChangePriority
750A 3426             (./Engine/Graphics):00092 [9]     1054            pshs  d,y
750C 31A90024         (./Engine/Graphics):00093 [8]     1062            leay  buf_Lst_Priority_Unset,y
7510 EFB4             (./Engine/Graphics):00094 [8]     1070            stu   [,y]                          ; add current object address to last free unset list cell
7512 ECA4             (./Engine/Graphics):00095 [5]     1075            ldd   ,y
7514 C30002           (./Engine/Graphics):00096 [4]     1079            addd  #2
7517 EDA4             (./Engine/Graphics):00097 [5]     1084            std   ,y                            ; set unset list free index to next free cell of unset list
7519 3526             (./Engine/Graphics):00098 [9]     1093            puls  d,y                           ; get back DSP_buffer in y
751B 8100             (./Engine/Graphics):00099 [2]     1095            cmpa  #0
751D 26AC             (./Engine/Graphics):00100 [3]     1098            bne   DSP_CheckLastEntry            ; priority is != 0, branch to add object to display priority list
751F 35D6             (./Engine/Graphics):00101 [13]    1111            puls  d,x,u,pc                      ; rts
                      (./Engine/Graphics):00102                 
                      (./Engine/Graphics):00103                         
                      (./Engine/Graphics):00104                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00105                                                        *; Subroutine to display a sprite/object, when a0 is the object RAM
                      (./Engine/Graphics):00106                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00107                                                        *
                      (./Engine/Graphics):00108                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Graphics):00109                                                        *
                      (./Engine/Graphics):00110                                                        *; sub_164F4:
                      (./Engine/Graphics):00111                                                        *DisplaySprite:
                      (./Engine/Graphics):00112                                                        *    lea (Sprite_Table_Input).w,a1
                      (./Engine/Graphics):00113                                                        *    move.w  priority(a0),d0
                      (./Engine/Graphics):00114                                                        *    lsr.w   #1,d0
                      (./Engine/Graphics):00115                                                        *    andi.w  #$380,d0
                      (./Engine/Graphics):00116                                                        *    adda.w  d0,a1
                      (./Engine/Graphics):00117                                                        
                      (./Engine/Graphics):00118                                                        *    cmpi.w  #$7E,(a1)
                      (./Engine/Graphics):00119                                                        *    bhs.s   return_16510
                      (./Engine/Graphics):00120                                                        *    addq.w  #2,(a1)
                      (./Engine/Graphics):00121                                                        
                      (./Engine/Graphics):00122                                                        *    adda.w  (a1),a1
                      (./Engine/Graphics):00123                                                        *    move.w  a0,(a1)
                      (./Engine/Graphics):00124                                                        *
                      (./Engine/Graphics):00125                                                        *return_16510:
                      (./Engine/Graphics):00126                                                        
                      (./Engine/Graphics):00127                                                        *    rts
                      (./Engine/Graphics):00128                                                        *; End of function DisplaySprite       
                      (./Engine/Graphics):00129                 
                      (./Engine/Graphics):00130                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00131                 * Display Priority Structure - DPS
                      (./Engine/Graphics):00132                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00133                 
7521                  (./Engine/Graphics):00134                 DPS_buffer_0
7521 0000000000000000 (./Engine/Graphics):00135                 Tbl_Priority_First_Entry_0    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
7533 0000000000000000 (./Engine/Graphics):00136                 Tbl_Priority_Last_Entry_0     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
7545 7547             (./Engine/Graphics):00137                 Lst_Priority_Unset_0          fdb   Lst_Priority_Unset_0+2     ; pointer to end of list (initialized to its own address+2) (buffer 0)
7547 0000000000000000 (./Engine/Graphics):00138                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
759D                  (./Engine/Graphics):00139                 DPS_buffer_1                              
759D 0000000000000000 (./Engine/Graphics):00140                 Tbl_Priority_First_Entry_1    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
75AF 0000000000000000 (./Engine/Graphics):00141                 Tbl_Priority_Last_Entry_1     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
75C1 75C3             (./Engine/Graphics):00142                 Lst_Priority_Unset_1          fdb   Lst_Priority_Unset_1+2     ; pointer to end of list (initialized to its own address+2) (buffer 1)
75C3 0000000000000000 (./Engine/Graphics):00143                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
7619                  (./Engine/Graphics):00144                 DPS_buffer_end                              
                      (./Engine/Graphics):00145                 
     0000             (./Engine/Graphics):00146                 buf_Tbl_Priority_First_Entry  equ   0                                                            
     0012             (./Engine/Graphics):00147                 buf_Tbl_Priority_Last_Entry   equ   Tbl_Priority_Last_Entry_0-DPS_buffer_0          
     0024             (./Engine/Graphics):00148                 buf_Lst_Priority_Unset        equ   Lst_Priority_Unset_0-DPS_buffer_0                                       
                      (C:\Users\bhrou\gi):00052                         INCLUDE "./Engine/Graphics/CheckSpritesRefresh.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * CheckSpritesRefresh
                      (./Engine/Graphics):00003                 * -------------------
                      (./Engine/Graphics):00004                 * Subroutine to determine if sprites are gonna be erased and/or drawn
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (back to front)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                 
                      (./Engine/Graphics):00013                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00014                 * Sub Priority Objects List - SOL
                      (./Engine/Graphics):00015                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00016                 
7619 0000000000000000 (./Engine/Graphics):00017                 Tbl_Sub_Object_Erase          fill  0,nb_graphical_objects*2    ; entries of objects that have erase flag in the order back to front
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
766F 0000000000000000 (./Engine/Graphics):00018                 Tbl_Sub_Object_Draw           fill  0,nb_graphical_objects*2    ; entries of objects that have draw flag in the order back to front                                
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
                      (./Engine/Graphics):00019                                                            
76C5                  (./Engine/Graphics):00020                 CheckSpritesRefresh
                      (./Engine/Graphics):00021                 
76C5                  (./Engine/Graphics):00022                 CSR_Start
76C5 CC7619           (./Engine/Graphics):00023 [3]     1114            ldd   #Tbl_Sub_Object_Erase
76C8 DDF7             (./Engine/Graphics):00024 [5]     1119            std   <glb_cur_ptr_sub_obj_erase
76CA CC766F           (./Engine/Graphics):00025 [3]     1122            ldd   #Tbl_Sub_Object_Draw
76CD DDF5             (./Engine/Graphics):00026 [5]     1127            std   <glb_cur_ptr_sub_obj_draw
76CF B673F0           (./Engine/Graphics):00027 [5]     1132            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
76D2 2666             (./Engine/Graphics):00028 [3]     1135            bne   CSR_SetBuffer1
                      (./Engine/Graphics):00029                         
76D4                  (./Engine/Graphics):00030                 CSR_SetBuffer0        
76D4 8635             (./Engine/Graphics):00031 [2]     1137            lda   #rsv_buffer_0                 ; set offset to object variables that belongs to screen buffer 0
76D6 B777A2           (./Engine/Graphics):00032 [5]     1142            sta   CSR_ProcessEachPriorityLevel+2    
76D9                  (./Engine/Graphics):00033                 CSR_P8B0
76D9 FE7531           (./Engine/Graphics):00034 [6]     1148            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
76DC 2707             (./Engine/Graphics):00035 [3]     1151            beq   CSR_P7B0
76DE 8608             (./Engine/Graphics):00036 [2]     1153            lda   #$08
76E0 97F9             (./Engine/Graphics):00037 [4]     1157            sta   <glb_cur_priority        
76E2 BD77A0           (./Engine/Graphics):00038 [8]     1165            jsr   CSR_ProcessEachPriorityLevel   
76E5                  (./Engine/Graphics):00039                 CSR_P7B0
76E5 FE752F           (./Engine/Graphics):00040 [6]     1171            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
76E8 2707             (./Engine/Graphics):00041 [3]     1174            beq   CSR_P6B0
76EA 8607             (./Engine/Graphics):00042 [2]     1176            lda   #$07
76EC 97F9             (./Engine/Graphics):00043 [4]     1180            sta   <glb_cur_priority        
76EE BD77A0           (./Engine/Graphics):00044 [8]     1188            jsr   CSR_ProcessEachPriorityLevel   
76F1                  (./Engine/Graphics):00045                 CSR_P6B0
76F1 FE752D           (./Engine/Graphics):00046 [6]     1194            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
76F4 2707             (./Engine/Graphics):00047 [3]     1197            beq   CSR_P5B0
76F6 8606             (./Engine/Graphics):00048 [2]     1199            lda   #$06
76F8 97F9             (./Engine/Graphics):00049 [4]     1203            sta   <glb_cur_priority        
76FA BD77A0           (./Engine/Graphics):00050 [8]     1211            jsr   CSR_ProcessEachPriorityLevel   
76FD                  (./Engine/Graphics):00051                 CSR_P5B0
76FD FE752B           (./Engine/Graphics):00052 [6]     1217            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
7700 2707             (./Engine/Graphics):00053 [3]     1220            beq   CSR_P4B0
7702 8605             (./Engine/Graphics):00054 [2]     1222            lda   #$05
7704 97F9             (./Engine/Graphics):00055 [4]     1226            sta   <glb_cur_priority                       
7706 BD77A0           (./Engine/Graphics):00056 [8]     1234            jsr   CSR_ProcessEachPriorityLevel   
7709                  (./Engine/Graphics):00057                 CSR_P4B0
7709 FE7529           (./Engine/Graphics):00058 [6]     1240            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
770C 2707             (./Engine/Graphics):00059 [3]     1243            beq   CSR_P3B0
770E 8604             (./Engine/Graphics):00060 [2]     1245            lda   #$04
7710 97F9             (./Engine/Graphics):00061 [4]     1249            sta   <glb_cur_priority                       
7712 BD77A0           (./Engine/Graphics):00062 [8]     1257            jsr   CSR_ProcessEachPriorityLevel               
7715                  (./Engine/Graphics):00063                 CSR_P3B0
7715 FE7527           (./Engine/Graphics):00064 [6]     1263            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
7718 2707             (./Engine/Graphics):00065 [3]     1266            beq   CSR_P2B0
771A 8603             (./Engine/Graphics):00066 [2]     1268            lda   #$03
771C 97F9             (./Engine/Graphics):00067 [4]     1272            sta   <glb_cur_priority                       
771E BD77A0           (./Engine/Graphics):00068 [8]     1280            jsr   CSR_ProcessEachPriorityLevel      
7721                  (./Engine/Graphics):00069                 CSR_P2B0
7721 FE7525           (./Engine/Graphics):00070 [6]     1286            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
7724 2707             (./Engine/Graphics):00071 [3]     1289            beq   CSR_P1B0
7726 8602             (./Engine/Graphics):00072 [2]     1291            lda   #$02
7728 97F9             (./Engine/Graphics):00073 [4]     1295            sta   <glb_cur_priority                       
772A BD77A0           (./Engine/Graphics):00074 [8]     1303            jsr   CSR_ProcessEachPriorityLevel  
772D                  (./Engine/Graphics):00075                 CSR_P1B0
772D FE7523           (./Engine/Graphics):00076 [6]     1309            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
7730 2707             (./Engine/Graphics):00077 [3]     1312            beq   CSR_rtsB0
7732 8601             (./Engine/Graphics):00078 [2]     1314            lda   #$01
7734 97F9             (./Engine/Graphics):00079 [4]     1318            sta   <glb_cur_priority                       
7736 BD77A0           (./Engine/Graphics):00080 [8]     1326            jsr   CSR_ProcessEachPriorityLevel
7739                  (./Engine/Graphics):00081                 CSR_rtsB0        
7739 39               (./Engine/Graphics):00082 [5]     1331            rts
                      (./Engine/Graphics):00083                         
773A                  (./Engine/Graphics):00084                 CSR_SetBuffer1       
773A 8649             (./Engine/Graphics):00085 [2]     1333            lda   #rsv_buffer_1                 ; set offset to object variables that belongs to screen buffer 1
773C B777A2           (./Engine/Graphics):00086 [5]     1338            sta   CSR_ProcessEachPriorityLevel+2        
773F                  (./Engine/Graphics):00087                 CSR_P8B1
773F FE75AD           (./Engine/Graphics):00088 [6]     1344            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
7742 2707             (./Engine/Graphics):00089 [3]     1347            beq   CSR_P7B1
7744 8608             (./Engine/Graphics):00090 [2]     1349            lda   #$08
7746 97F9             (./Engine/Graphics):00091 [4]     1353            sta   <glb_cur_priority        
7748 BD77A0           (./Engine/Graphics):00092 [8]     1361            jsr   CSR_ProcessEachPriorityLevel   
774B                  (./Engine/Graphics):00093                 CSR_P7B1
774B FE75AB           (./Engine/Graphics):00094 [6]     1367            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
774E 2707             (./Engine/Graphics):00095 [3]     1370            beq   CSR_P6B1
7750 8607             (./Engine/Graphics):00096 [2]     1372            lda   #$07
7752 97F9             (./Engine/Graphics):00097 [4]     1376            sta   <glb_cur_priority                       
7754 BD77A0           (./Engine/Graphics):00098 [8]     1384            jsr   CSR_ProcessEachPriorityLevel   
7757                  (./Engine/Graphics):00099                 CSR_P6B1
7757 FE75A9           (./Engine/Graphics):00100 [6]     1390            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
775A 2707             (./Engine/Graphics):00101 [3]     1393            beq   CSR_P5B1
775C 8606             (./Engine/Graphics):00102 [2]     1395            lda   #$06
775E 97F9             (./Engine/Graphics):00103 [4]     1399            sta   <glb_cur_priority                       
7760 BD77A0           (./Engine/Graphics):00104 [8]     1407            jsr   CSR_ProcessEachPriorityLevel   
7763                  (./Engine/Graphics):00105                 CSR_P5B1
7763 FE75A7           (./Engine/Graphics):00106 [6]     1413            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
7766 2707             (./Engine/Graphics):00107 [3]     1416            beq   CSR_P4B1
7768 8605             (./Engine/Graphics):00108 [2]     1418            lda   #$05
776A 97F9             (./Engine/Graphics):00109 [4]     1422            sta   <glb_cur_priority                       
776C BD77A0           (./Engine/Graphics):00110 [8]     1430            jsr   CSR_ProcessEachPriorityLevel   
776F                  (./Engine/Graphics):00111                 CSR_P4B1
776F FE75A5           (./Engine/Graphics):00112 [6]     1436            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
7772 2707             (./Engine/Graphics):00113 [3]     1439            beq   CSR_P3B1
7774 8604             (./Engine/Graphics):00114 [2]     1441            lda   #$04
7776 97F9             (./Engine/Graphics):00115 [4]     1445            sta   <glb_cur_priority
7778 BD77A0           (./Engine/Graphics):00116 [8]     1453            jsr   CSR_ProcessEachPriorityLevel               
777B                  (./Engine/Graphics):00117                 CSR_P3B1
777B FE75A3           (./Engine/Graphics):00118 [6]     1459            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
777E 2707             (./Engine/Graphics):00119 [3]     1462            beq   CSR_P2B1
7780 8603             (./Engine/Graphics):00120 [2]     1464            lda   #$03
7782 97F9             (./Engine/Graphics):00121 [4]     1468            sta   <glb_cur_priority                       
7784 BD77A0           (./Engine/Graphics):00122 [8]     1476            jsr   CSR_ProcessEachPriorityLevel      
7787                  (./Engine/Graphics):00123                 CSR_P2B1
7787 FE75A1           (./Engine/Graphics):00124 [6]     1482            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
778A 2707             (./Engine/Graphics):00125 [3]     1485            beq   CSR_P1B1
778C 8602             (./Engine/Graphics):00126 [2]     1487            lda   #$02
778E 97F9             (./Engine/Graphics):00127 [4]     1491            sta   <glb_cur_priority                       
7790 BD77A0           (./Engine/Graphics):00128 [8]     1499            jsr   CSR_ProcessEachPriorityLevel  
7793                  (./Engine/Graphics):00129                 CSR_P1B1
7793 FE759F           (./Engine/Graphics):00130 [6]     1505            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
7796 2707             (./Engine/Graphics):00131 [3]     1508            beq   CSR_rtsB1
7798 8601             (./Engine/Graphics):00132 [2]     1510            lda   #$01
779A 97F9             (./Engine/Graphics):00133 [4]     1514            sta   <glb_cur_priority                       
779C BD77A0           (./Engine/Graphics):00134 [8]     1522            jsr   CSR_ProcessEachPriorityLevel
779F                  (./Engine/Graphics):00135                 CSR_rtsB1        
779F 39               (./Engine/Graphics):00136 [5]     1527            rts
                      (./Engine/Graphics):00137                 
77A0                  (./Engine/Graphics):00138                 CSR_ProcessEachPriorityLevel
77A0 30C810           (./Engine/Graphics):00139 [5]     1532            leax  16,u                          ; dynamic offset, x point to object variables relative to current writable buffer (beware that rsv_buffer_0 and rsv_buffer_1 should be equ >=16)
                      (./Engine/Graphics):00140                         
77A3                  (./Engine/Graphics):00141                 CSR_CheckDelHide
77A3 A642             (./Engine/Graphics):00142 [5]     1537            lda   render_flags,u
77A5 8460             (./Engine/Graphics):00143 [2]     1539            anda  #render_hide_mask|render_todelete_mask
77A7 1026005B         (./Engine/Graphics):00144 [5+?]   1544            lbne  CSR_DoNotDisplaySprite      
                      (./Engine/Graphics):00145                 
77AB                  (./Engine/Graphics):00146                 CSR_CheckRefresh        
77AB A6C822           (./Engine/Graphics):00147 [5]     1549            lda   rsv_render_flags,u
77AE 8401             (./Engine/Graphics):00148 [2]     1551            anda  #rsv_render_checkrefresh_mask ; branch if checkrefresh is true
77B0 1026014F         (./Engine/Graphics):00149 [5+?]   1556            lbne  CSR_CheckErase
                      (./Engine/Graphics):00150                 
77B4                  (./Engine/Graphics):00151                 CSR_UpdSpriteImageBasedOnMirror
                      (./Engine/Graphics):00152                 
                      (./Engine/Graphics):00153                         ; an image set is made of 1 to 4 image subsets
                      (./Engine/Graphics):00154                         ; each subset represent a mirrored version of the image (N: normal, X: x mirror, Y: y mirror, XY: xy mirror)
                      (./Engine/Graphics):00155                         ; this code set the active image subset based on mirror flags
                      (./Engine/Graphics):00156                 
77B4 A6C822           (./Engine/Graphics):00157 [5]     1561            lda   rsv_render_flags,u
77B7 8A01             (./Engine/Graphics):00158 [2]     1563            ora   #rsv_render_checkrefresh_mask
77B9 A7C822           (./Engine/Graphics):00159 [5]     1568            sta   rsv_render_flags,u            ; set checkrefresh flag to true
                      (./Engine/Graphics):00160                         
77BC 108E9709         (./Engine/Graphics):00161 [4]     1572            ldy   #Img_Page_Index               ; call page that store imageset for this object
77C0 8600             (./Engine/Graphics):00162 [2]     1574            lda   #$00
77C2 E6C4             (./Engine/Graphics):00163 [4]     1578            ldb   id,u
77C4 A6AB             (./Engine/Graphics):00164 [8]     1586            lda   d,y
                      (./Engine/Graphics):00165                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
77C6 BD7324           (    _SetCartPageA):00002 [8]     1594            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00166                         
77C9 A642             (./Engine/Graphics):00167 [5]     1599            lda   render_flags,u                ; set image to display based on x and y mirror flags
77CB 8403             (./Engine/Graphics):00168 [2]     1601            anda  #render_xmirror_mask|render_ymirror_mask
77CD 10AE4C           (./Engine/Graphics):00169 [7]     1608            ldy   image_set,u
77D0 E626             (./Engine/Graphics):00170 [5]     1613            ldb   image_center_offset,y
77D2 E7C825           (./Engine/Graphics):00171 [5]     1618            stb   rsv_image_center_offset,u        
77D5 E6A6             (./Engine/Graphics):00172 [5]     1623            ldb   a,y
77D7 31A5             (./Engine/Graphics):00173 [5]     1628            leay  b,y                           ; read image set index
77D9 10AFC826         (./Engine/Graphics):00174 [7]     1635            sty   rsv_image_subset,u
                      (./Engine/Graphics):00175                         
77DD                  (./Engine/Graphics):00176                 CSR_CheckPlayFieldCoord
77DD A642             (./Engine/Graphics):00177 [5]     1640            lda   render_flags,u
77DF 8410             (./Engine/Graphics):00178 [2]     1642            anda  #render_playfieldcoord_mask
77E1 274A             (./Engine/Graphics):00179 [3]     1645            beq   CSR_ComputeMappingFrame       ; branch if position is already expressed in screen coordinate
                      (./Engine/Graphics):00180                 
                      (./Engine/Graphics):00181                         ; purpose here is to check if image coordinate in the playfield
                      (./Engine/Graphics):00182                         ; can be converted to screen position, if not it is flagged out of range
                      (./Engine/Graphics):00183                 
77E3 EC4E             (./Engine/Graphics):00184 [6]     1651            ldd   x_pos,u
77E5 93F3             (./Engine/Graphics):00185 [6]     1657            subd  <glb_camera_x_pos
77E7 10250110         (./Engine/Graphics):00186 [5+?]   1662            lblo  CSR_SetOutOfRange             ; out of range if x_pos < glb_camera_x_pos
77EB 4D               (./Engine/Graphics):00187 [2]     1664            tsta 
77EC 1026010B         (./Engine/Graphics):00188 [5+?]   1669            lbne  CSR_SetOutOfRange             ; out of range if x_pos + 256 > glb_camera_x_pos
77F0 E7C814           (./Engine/Graphics):00189 [5]     1674            stb   x_pixel,u
                      (./Engine/Graphics):00190                 
77F3 ECC811           (./Engine/Graphics):00191 [6]     1680            ldd   y_pos,u
77F6 93F1             (./Engine/Graphics):00192 [6]     1686            subd  <glb_camera_y_pos
77F8 102500FF         (./Engine/Graphics):00193 [5+?]   1691            lblo  CSR_SetOutOfRange             ; out of range if y_pos < glb_camera_y_pos
77FC 4D               (./Engine/Graphics):00194 [2]     1693            tsta 
77FD 102600FA         (./Engine/Graphics):00195 [5+?]   1698            lbne  CSR_SetOutOfRange             ; out of range if y_pos + 256 > glb_camera_y_pos
7801 E7C815           (./Engine/Graphics):00196 [5]     1703            stb   y_pixel,u
7804 2027             (./Engine/Graphics):00197 [3]     1706            bra   CSR_ComputeMappingFrame
                      (./Engine/Graphics):00198                         
7806                  (./Engine/Graphics):00199                 CSR_DoNotDisplaySprite
7806 A643             (./Engine/Graphics):00200 [5]     1711            lda   priority,u                     
7808 91F9             (./Engine/Graphics):00201 [4]     1715            cmpa  <glb_cur_priority 
780A 261A             (./Engine/Graphics):00202 [3]     1718            bne   CSR_NextObject                ; next object if this one is a new priority record (no need to erase) 
                      (./Engine/Graphics):00203                         
780C A6C822           (./Engine/Graphics):00204 [5]     1723            lda   rsv_render_flags,u
780F 84F9             (./Engine/Graphics):00205 [2]     1725            anda  #^rsv_render_erasesprite_mask&^rsv_render_displaysprite_mask ; set erase and display flag to false
7811 A7C822           (./Engine/Graphics):00206 [5]     1730            sta   rsv_render_flags,u
                      (./Engine/Graphics):00207                                 
7814 E68813           (./Engine/Graphics):00208 [5]     1735            ldb   buf_prev_render_flags,x
7817 2A0D             (./Engine/Graphics):00209 [3]     1738            bpl   CSR_NextObject                ; branch if not on screen
                      (./Engine/Graphics):00210                         
7819 8A02             (./Engine/Graphics):00211 [2]     1740            ora   #rsv_render_erasesprite_mask  ; set erase flag to true if on screen                  
781B A7C822           (./Engine/Graphics):00212 [5]     1745            sta   rsv_render_flags,u
                      (./Engine/Graphics):00213                         
781E 109EF7           (./Engine/Graphics):00214 [6]     1751            ldy   <glb_cur_ptr_sub_obj_erase         ; maintain list of changing sprites to erase
7821 EFA1             (./Engine/Graphics):00215 [8]     1759            stu   ,y++
7823 109FF7           (./Engine/Graphics):00216 [6]     1765            sty   <glb_cur_ptr_sub_obj_erase 
                      (./Engine/Graphics):00217                         
7826                  (./Engine/Graphics):00218                 CSR_NextObject
7826 EE03             (./Engine/Graphics):00219 [6]     1771            ldu   buf_priority_next_obj,x
7828 1026FF74         (./Engine/Graphics):00220 [5+?]   1776            lbne  CSR_ProcessEachPriorityLevel   
782C 39               (./Engine/Graphics):00221 [5]     1781            rts
                      (./Engine/Graphics):00222                 
782D                  (./Engine/Graphics):00223                 CSR_ComputeMappingFrame
                      (./Engine/Graphics):00224                 
                      (./Engine/Graphics):00225                         ; The image subset reference up to 4 version of an image
                      (./Engine/Graphics):00226                         ; Draw/Erase, Draw routines and shifted version by 1 pixel of these two routines
                      (./Engine/Graphics):00227                         ; The following code set the appropriate routine that will draw the image
                      (./Engine/Graphics):00228                         ; First thing is to check if the image position is odd or even
                      (./Engine/Graphics):00229                         ; and select the appropriate routine. If no routine is found, it will select the avaible routine.
                      (./Engine/Graphics):00230                         ; The selected image will also be based on image type overlay or not (Simple Draw or Draw/Erase)
                      (./Engine/Graphics):00231                 
782D E6C814           (./Engine/Graphics):00232 [5]     1786    @a      ldb   x_pixel,u                     ; compute mapping_frame 
7830 E8C825           (./Engine/Graphics):00233 [5]     1791    @b      eorb  rsv_image_center_offset,u     ; case of odd image center switch shifted image with normal
7833 C401             (./Engine/Graphics):00234 [2]     1793            andb  #1                            ; index of sub image is encoded in two bits: 00|B0, 01|D0, 10|B1, 11|D1         
7835 58               (./Engine/Graphics):00235 [2]     1795            aslb                                ; set bit2 for 1px shifted image  
7836 A642             (./Engine/Graphics):00236 [5]     1800            lda   render_flags,u            
7838 8404             (./Engine/Graphics):00237 [2]     1802            anda  #render_overlay_mask          ; set bit1 for normal (background save) or overlay sprite (no background save)
783A 2701             (./Engine/Graphics):00238 [3]     1805            beq   @c
783C 5C               (./Engine/Graphics):00239 [2]     1807            incb
783D                  (./Engine/Graphics):00240                 @c
783D A6A5             (./Engine/Graphics):00241 [5]     1812            lda   b,y
783F 2708             (./Engine/Graphics):00242 [3]     1815            beq   CSR_NoDefinedFrame
7841 31A6             (./Engine/Graphics):00243 [5]     1820            leay  a,y                           ; read image subset index
7843 10AFC828         (./Engine/Graphics):00244 [7]     1827            sty   rsv_mapping_frame,u
7847 2021             (./Engine/Graphics):00245 [3]     1830            bra   CSR_UpdateMetadata
7849                  (./Engine/Graphics):00246                 CSR_NoDefinedFrame
7849 C802             (./Engine/Graphics):00247 [2]     1832            eorb  #%00000010                    ; check if there is an alternate shifted image available
784B 2705             (./Engine/Graphics):00248 [3]     1835            beq   @e
784D 6CC825           (./Engine/Graphics):00249 [7]     1842            inc   rsv_image_center_offset,u     ; ajust offset for alternate
7850 2003             (./Engine/Graphics):00250 [3]     1845            bra   @f
7852 6AC825           (./Engine/Graphics):00251 [7]     1852    @e      dec   rsv_image_center_offset,u
7855 6DA5             (./Engine/Graphics):00252 [7]     1859    @f      tst   b,y
7857 26E4             (./Engine/Graphics):00253 [3]     1862            bne   @c        
                      (./Engine/Graphics):00254                 
7859 108E0000         (./Engine/Graphics):00255 [4]     1866            ldy   #0                            ; no defined frame, nothing will be displayed
785D 10AFC828         (./Engine/Graphics):00256 [7]     1873            sty   rsv_mapping_frame,u
7861 A642             (./Engine/Graphics):00257 [5]     1878            lda   render_flags,u
7863 8A20             (./Engine/Graphics):00258 [2]     1880            ora   #render_hide_mask             ; set hide flag
7865 A742             (./Engine/Graphics):00259 [5]     1885            sta   render_flags,u
7867 7E7903           (./Engine/Graphics):00260 [4]     1889            jmp   CSR_CheckErase
                      (./Engine/Graphics):00261                                 
786A                  (./Engine/Graphics):00262                 CSR_UpdateMetadata
786A A626             (./Engine/Graphics):00263 [5]     1894            lda   erase_nb_cell,y               ; copy current image metadata into object data
786C A7C82A           (./Engine/Graphics):00264 [5]     1899            sta   rsv_erase_nb_cell,u           ; this is needed to avoid a lot of page switch 
786F A6A4             (./Engine/Graphics):00265 [4]     1903            lda   page_draw_routine,y           ; during following routines
7871 A7C82B           (./Engine/Graphics):00266 [5]     1908            sta   rsv_page_draw_routine,u
7874 EC21             (./Engine/Graphics):00267 [6]     1914            ldd   draw_routine,y
7876 EDC82C           (./Engine/Graphics):00268 [6]     1920            std   rsv_draw_routine,u
7879 A623             (./Engine/Graphics):00269 [5]     1925            lda   page_erase_routine,y
787B A7C82E           (./Engine/Graphics):00270 [5]     1930            sta   rsv_page_erase_routine,u
787E EC24             (./Engine/Graphics):00271 [6]     1936            ldd   erase_routine,y
7880 EDC82F           (./Engine/Graphics):00272 [6]     1942            std   rsv_erase_routine,u
                      (./Engine/Graphics):00273                         
7883                  (./Engine/Graphics):00274                 CSR_CheckPosition        
7883 E6C815           (./Engine/Graphics):00275 [5]     1947            ldb   y_pixel,u                     ; check if sprite is fully in screen vertical range
7886 10AEC826         (./Engine/Graphics):00276 [7]     1954            ldy   rsv_image_subset,u
788A EB25             (./Engine/Graphics):00277 [5]     1959            addb  image_subset_y1_offset,y
788C C1E3             (./Engine/Graphics):00278 [2]     1961            cmpb  #screen_bottom
788E 226B             (./Engine/Graphics):00279 [3]     1964            bhi   CSR_SetOutOfRange
7890 C11C             (./Engine/Graphics):00280 [2]     1966            cmpb  #screen_top
7892 2567             (./Engine/Graphics):00281 [3]     1969            blo   CSR_SetOutOfRange        
7894 E7C832           (./Engine/Graphics):00282 [5]     1974            stb   rsv_y1_pixel,u
7897 10AE4C           (./Engine/Graphics):00283 [7]     1981            ldy   image_set,u
789A EB25             (./Engine/Graphics):00284 [5]     1986            addb  image_y_size,y
789C C1E3             (./Engine/Graphics):00285 [2]     1988            cmpb  #screen_bottom
789E 225B             (./Engine/Graphics):00286 [3]     1991            bhi   CSR_SetOutOfRange
78A0 C11C             (./Engine/Graphics):00287 [2]     1993            cmpb  #screen_top
78A2 2557             (./Engine/Graphics):00288 [3]     1996            blo   CSR_SetOutOfRange        
78A4 E7C834           (./Engine/Graphics):00289 [5]     2001            stb   rsv_y2_pixel,u
78A7 E1C832           (./Engine/Graphics):00290 [5]     2006            cmpb  rsv_y1_pixel,u                ; check wrapping
78AA 254F             (./Engine/Graphics):00291 [3]     2009            blo   CSR_SetOutOfRange
                      (./Engine/Graphics):00292                                 
78AC A642             (./Engine/Graphics):00293 [5]     2014            lda   render_flags,u                ; check if sprite is fully in screen horizontal range
78AE 8580             (./Engine/Graphics):00294 [2]     2016            bita  #render_xloop_mask
78B0 262B             (./Engine/Graphics):00295 [3]     2019            bne   CSR_DontCheckXFrontier   
                      (./Engine/Graphics):00296                         
78B2 E6C814           (./Engine/Graphics):00297 [5]     2024            ldb   x_pixel,u
78B5 10AEC826         (./Engine/Graphics):00298 [7]     2031            ldy   rsv_image_subset,u
78B9 EB24             (./Engine/Graphics):00299 [5]     2036            addb  image_subset_x1_offset,y
78BB C1CF             (./Engine/Graphics):00300 [2]     2038            cmpb  #screen_right
78BD 223C             (./Engine/Graphics):00301 [3]     2041            bhi   CSR_SetOutOfRange
78BF C130             (./Engine/Graphics):00302 [2]     2043            cmpb  #screen_left
78C1 2538             (./Engine/Graphics):00303 [3]     2046            blo   CSR_SetOutOfRange
78C3 E7C831           (./Engine/Graphics):00304 [5]     2051            stb   rsv_x1_pixel,u
78C6 10AE4C           (./Engine/Graphics):00305 [7]     2058            ldy   image_set,u
78C9 EB24             (./Engine/Graphics):00306 [5]     2063            addb  image_x_size,y
78CB C1CF             (./Engine/Graphics):00307 [2]     2065            cmpb  #screen_right
78CD 222C             (./Engine/Graphics):00308 [3]     2068            bhi   CSR_SetOutOfRange
78CF C130             (./Engine/Graphics):00309 [2]     2070            cmpb  #screen_left
78D1 2528             (./Engine/Graphics):00310 [3]     2073            blo   CSR_SetOutOfRange
78D3 E7C833           (./Engine/Graphics):00311 [5]     2078            stb   rsv_x2_pixel,u
78D6 E1C831           (./Engine/Graphics):00312 [5]     2083            cmpb  rsv_x1_pixel,u                ; check wrapping
78D9 2520             (./Engine/Graphics):00313 [3]     2086            blo   CSR_SetOutOfRange 
                      (./Engine/Graphics):00314                                 
78DB 2014             (./Engine/Graphics):00315 [3]     2089            bra   CSR_DontCheckXFrontier_end        
                      (./Engine/Graphics):00316                         
78DD                  (./Engine/Graphics):00317                 CSR_DontCheckXFrontier  
78DD E6C814           (./Engine/Graphics):00318 [5]     2094            ldb   x_pixel,u
78E0 10AEC826         (./Engine/Graphics):00319 [7]     2101            ldy   rsv_image_subset,u
78E4 EB24             (./Engine/Graphics):00320 [5]     2106            addb  image_subset_x1_offset,y
78E6 E7C831           (./Engine/Graphics):00321 [5]     2111            stb   rsv_x1_pixel,u
                      (./Engine/Graphics):00322                         
78E9 10AE4C           (./Engine/Graphics):00323 [7]     2118            ldy   image_set,u
78EC EB24             (./Engine/Graphics):00324 [5]     2123            addb  image_x_size,y
78EE E7C833           (./Engine/Graphics):00325 [5]     2128            stb   rsv_x2_pixel,u      
                      (./Engine/Graphics):00326                 
78F1                  (./Engine/Graphics):00327                 CSR_DontCheckXFrontier_end        
78F1 A6C822           (./Engine/Graphics):00328 [5]     2133            lda   rsv_render_flags,u
78F4 84F7             (./Engine/Graphics):00329 [2]     2135            anda  #^rsv_render_outofrange_mask  ; unset out of range flag
78F6 A7C822           (./Engine/Graphics):00330 [5]     2140            sta   rsv_render_flags,u
78F9 2008             (./Engine/Graphics):00331 [3]     2143            bra   CSR_CheckErase
                      (./Engine/Graphics):00332                                 
78FB                  (./Engine/Graphics):00333                 CSR_SetOutOfRange
78FB A6C822           (./Engine/Graphics):00334 [5]     2148            lda   rsv_render_flags,u
78FE 8A08             (./Engine/Graphics):00335 [2]     2150            ora   #rsv_render_outofrange_mask   ; set out of range flag
7900 A7C822           (./Engine/Graphics):00336 [5]     2155            sta   rsv_render_flags,u
                      (./Engine/Graphics):00337                 
7903                  (./Engine/Graphics):00338                 CSR_CheckErase
7903 BF79DD           (./Engine/Graphics):00339 [6]     2161            stx   CSR_CheckDraw+1
7906 A684             (./Engine/Graphics):00340 [4]     2165            lda   buf_priority,x
7908 91F9             (./Engine/Graphics):00341 [4]     2169            cmpa  <glb_cur_priority 
790A 102600CE         (./Engine/Graphics):00342 [5+?]   2174            lbne  CSR_CheckDraw
                      (./Engine/Graphics):00343                         
790E 109EF7           (./Engine/Graphics):00344 [6]     2180            ldy   <glb_cur_ptr_sub_obj_erase
                      (./Engine/Graphics):00345                         
7911 A6C822           (./Engine/Graphics):00346 [5]     2185            lda   rsv_render_flags,u
7914 8408             (./Engine/Graphics):00347 [2]     2187            anda  #rsv_render_outofrange_mask
7916 2709             (./Engine/Graphics):00348 [3]     2190            beq   CSR_CheckErase_InRange
7918 A68813           (./Engine/Graphics):00349 [5]     2195            lda   buf_prev_render_flags,x
791B 102A0109         (./Engine/Graphics):00350 [5+?]   2200            lbpl  CSR_SetEraseDrawFalse         ; branch if object is not on screen    
791F 2024             (./Engine/Graphics):00351 [3]     2203            bra   CSR_SetEraseTrue
                      (./Engine/Graphics):00352                                 
7921                  (./Engine/Graphics):00353                 CSR_CheckErase_InRange        
7921 A68813           (./Engine/Graphics):00354 [5]     2208            lda   buf_prev_render_flags,x
7924 102A00AC         (./Engine/Graphics):00355 [5+?]   2213            lbpl  CSR_SetEraseFalse             ; branch if object is not on screen
7928 96E8             (./Engine/Graphics):00356 [4]     2217            lda   <glb_force_sprite_refresh
792A 2619             (./Engine/Graphics):00357 [3]     2220            bne   CSR_SetEraseTrue
792C ECC814           (./Engine/Graphics):00358 [6]     2226            ldd   xy_pixel,u
792F 44               (./Engine/Graphics):00359 [2]     2228            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit, y position precision is y_pixel  
7930 10A30D           (./Engine/Graphics):00360 [8]     2236            cmpd  buf_prev_xy_pixel,x
7933 2610             (./Engine/Graphics):00361 [3]     2239            bne   CSR_SetEraseTrue              ; branch if object moved since last frame
7935 ECC828           (./Engine/Graphics):00362 [6]     2245            ldd   rsv_mapping_frame,u
7938 10A305           (./Engine/Graphics):00363 [8]     2253            cmpd  buf_prev_mapping_frame,x
793B 2608             (./Engine/Graphics):00364 [3]     2256            bne   CSR_SetEraseTrue              ; branch if object image changed since last frame
793D A643             (./Engine/Graphics):00365 [5]     2261            lda   priority,u
793F A184             (./Engine/Graphics):00366 [4]     2265            cmpa  buf_priority,x
7941 2602             (./Engine/Graphics):00367 [3]     2268            bne   CSR_SetEraseTrue              ; branch if object priority changed since last frame
7943 2010             (./Engine/Graphics):00368 [3]     2271            bra   CSR_SubEraseSpriteSearchInit  ; branch if object is on screen but unchanged since last frame
                      (./Engine/Graphics):00369                         
7945                  (./Engine/Graphics):00370                 CSR_SetEraseTrue        
7945 A6C822           (./Engine/Graphics):00371 [5]     2276            lda   rsv_render_flags,u
7948 8A02             (./Engine/Graphics):00372 [2]     2278            ora   #rsv_render_erasesprite_mask
794A A7C822           (./Engine/Graphics):00373 [5]     2283            sta   rsv_render_flags,u
                      (./Engine/Graphics):00374                         
794D EFA1             (./Engine/Graphics):00375 [8]     2291            stu   ,y++
794F 109FF7           (./Engine/Graphics):00376 [6]     2297            sty   <glb_cur_ptr_sub_obj_erase
                      (./Engine/Graphics):00377                                 
7952 7E79DC           (./Engine/Graphics):00378 [4]     2301            jmp   CSR_CheckDraw
                      (./Engine/Graphics):00379                         
7955                  (./Engine/Graphics):00380                 CSR_SubEraseSpriteSearchInit
                      (./Engine/Graphics):00381                 
                      (./Engine/Graphics):00382                         * search a collision with a sprite under the current sprite
                      (./Engine/Graphics):00383                         * the sprite under should have to be erased or displayed
                      (./Engine/Graphics):00384                         * in this case it forces the refresh of the current sprite that was not supposed to be refreshed
                      (./Engine/Graphics):00385                         * as a sub loop, this should be optimized as much as possible ... I hope it is
                      (./Engine/Graphics):00386                         * there are two lists because a sprite can be erased at a position
                      (./Engine/Graphics):00387                         * and displayed at another position : both cases should be tested !
                      (./Engine/Graphics):00388                 
7955 9EF7             (./Engine/Graphics):00389 [5]     2306            ldx   <glb_cur_ptr_sub_obj_erase       
7957 B673F0           (./Engine/Graphics):00390 [5]     2311            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
795A 2627             (./Engine/Graphics):00391 [3]     2314            bne   CSR_SubEraseSearchB1
                      (./Engine/Graphics):00392                         
795C                  (./Engine/Graphics):00393                 CSR_SubEraseSearchB0
795C 8C7619           (./Engine/Graphics):00394 [4]     2318            cmpx  #Tbl_Sub_Object_Erase
795F 2749             (./Engine/Graphics):00395 [3]     2321            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
7961 10AE83           (./Engine/Graphics):00396 [9]     2330            ldy   ,--x
                      (./Engine/Graphics):00397                         
7964                  (./Engine/Graphics):00398                 CSR_SubEraseCheckCollisionB0
7964 ECA844           (./Engine/Graphics):00399 [6]     2336            ldd   rsv_prev_xy1_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 and rsv_prev_y_pixel_0 in one instruction
7967 A1C833           (./Engine/Graphics):00400 [5]     2341            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
796A 22F0             (./Engine/Graphics):00401 [3]     2344            bhi   CSR_SubEraseSearchB0
796C E1C834           (./Engine/Graphics):00402 [5]     2349            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
796F 22EB             (./Engine/Graphics):00403 [3]     2352            bhi   CSR_SubEraseSearchB0
7971 ECA846           (./Engine/Graphics):00404 [6]     2358            ldd   rsv_prev_xy2_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 + rsv_prev_mapping_frame_0.x_size and rsv_prev_y_pixel_0 + rsv_prev_mapping_frame_0.y_size in one instruction
7974 A1C831           (./Engine/Graphics):00405 [5]     2363            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
7977 25E3             (./Engine/Graphics):00406 [3]     2366            blo   CSR_SubEraseSearchB0
7979 E1C832           (./Engine/Graphics):00407 [5]     2371            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
797C 25DE             (./Engine/Graphics):00408 [3]     2374            blo   CSR_SubEraseSearchB0
                      (./Engine/Graphics):00409                         
797E 109EF7           (./Engine/Graphics):00410 [6]     2380            ldy   <glb_cur_ptr_sub_obj_erase
7981 20C2             (./Engine/Graphics):00411 [3]     2383            bra   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00412                 
7983                  (./Engine/Graphics):00413                 CSR_SubEraseSearchB1
7983 8C7619           (./Engine/Graphics):00414 [4]     2387            cmpx  #Tbl_Sub_Object_Erase
7986 2722             (./Engine/Graphics):00415 [3]     2390            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
7988 10AE83           (./Engine/Graphics):00416 [9]     2399            ldy   ,--x
                      (./Engine/Graphics):00417                         
798B                  (./Engine/Graphics):00418                 CSR_SubEraseCheckCollisionB1
798B ECA858           (./Engine/Graphics):00419 [6]     2405            ldd   rsv_prev_xy1_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 and rsv_prev_y_pixel_1 in one instruction
798E A1C833           (./Engine/Graphics):00420 [5]     2410            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
7991 22F0             (./Engine/Graphics):00421 [3]     2413            bhi   CSR_SubEraseSearchB1
7993 E1C834           (./Engine/Graphics):00422 [5]     2418            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
7996 22EB             (./Engine/Graphics):00423 [3]     2421            bhi   CSR_SubEraseSearchB1
7998 ECA85A           (./Engine/Graphics):00424 [6]     2427            ldd   rsv_prev_xy2_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 + rsv_prev_mapping_frame_1.x_size and rsv_prev_y_pixel_1 + rsv_prev_mapping_frame_1.y_size in one instruction
799B A1C831           (./Engine/Graphics):00425 [5]     2432            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
799E 25E3             (./Engine/Graphics):00426 [3]     2435            blo   CSR_SubEraseSearchB1
79A0 E1C832           (./Engine/Graphics):00427 [5]     2440            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
79A3 25DE             (./Engine/Graphics):00428 [3]     2443            blo   CSR_SubEraseSearchB1
                      (./Engine/Graphics):00429                         
79A5 109EF7           (./Engine/Graphics):00430 [6]     2449            ldy   <glb_cur_ptr_sub_obj_erase
79A8 209B             (./Engine/Graphics):00431 [3]     2452            bra   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00432                 
79AA                  (./Engine/Graphics):00433                 CSR_SubDrawSpriteSearchInit
79AA 9EF5             (./Engine/Graphics):00434 [5]     2457            ldx   <glb_cur_ptr_sub_obj_draw
                      (./Engine/Graphics):00435                         
79AC                  (./Engine/Graphics):00436                 CSR_SubDrawSearch
79AC 8C766F           (./Engine/Graphics):00437 [4]     2461            cmpx  #Tbl_Sub_Object_Draw
79AF 2723             (./Engine/Graphics):00438 [3]     2464            beq   CSR_SetEraseFalse             ; branch if no more sub objects
79B1 10AE83           (./Engine/Graphics):00439 [9]     2473            ldy   ,--x
                      (./Engine/Graphics):00440                 
79B4                  (./Engine/Graphics):00441                 CSR_SubDrawCheckCollision
79B4 ECA831           (./Engine/Graphics):00442 [6]     2479            ldd   rsv_xy1_pixel,y               ; sub entry : x_pixel and y_pixel in one instruction
79B7 A1C833           (./Engine/Graphics):00443 [5]     2484            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
79BA 22F0             (./Engine/Graphics):00444 [3]     2487            bhi   CSR_SubDrawSearch
79BC E1C834           (./Engine/Graphics):00445 [5]     2492            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
79BF 22EB             (./Engine/Graphics):00446 [3]     2495            bhi   CSR_SubDrawSearch
79C1 ECA833           (./Engine/Graphics):00447 [6]     2501            ldd   rsv_xy2_pixel,y               ; sub entry : x_pixel + rsv_mapping_frame.x_size and y_pixel + rsv_mapping_frame.y_size in one instruction
79C4 A1C831           (./Engine/Graphics):00448 [5]     2506            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
79C7 25E3             (./Engine/Graphics):00449 [3]     2509            blo   CSR_SubDrawSearch
79C9 E1C832           (./Engine/Graphics):00450 [5]     2514            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
79CC 25DE             (./Engine/Graphics):00451 [3]     2517            blo   CSR_SubDrawSearch
                      (./Engine/Graphics):00452                         
79CE 109EF7           (./Engine/Graphics):00453 [6]     2523            ldy   <glb_cur_ptr_sub_obj_erase
79D1 7E7945           (./Engine/Graphics):00454 [4]     2527            jmp   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00455                 
79D4                  (./Engine/Graphics):00456                 CSR_SetEraseFalse
79D4 A6C822           (./Engine/Graphics):00457 [5]     2532            lda   rsv_render_flags,u 
79D7 84FD             (./Engine/Graphics):00458 [2]     2534            anda  #^rsv_render_erasesprite_mask
79D9 A7C822           (./Engine/Graphics):00459 [5]     2539            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00460                                
79DC                  (./Engine/Graphics):00461                 CSR_CheckDraw
79DC 8EFFFF           (./Engine/Graphics):00462 [3]     2542            ldx   #$FFFF                        ; dynamic restore x
79DF A643             (./Engine/Graphics):00463 [5]     2547            lda   priority,u
79E1 91F9             (./Engine/Graphics):00464 [4]     2551            cmpa  <glb_cur_priority 
79E3 1026FE3F         (./Engine/Graphics):00465 [5+?]   2556            lbne  CSR_NextObject
                      (./Engine/Graphics):00466                         
79E7 109EF5           (./Engine/Graphics):00467 [6]     2562            ldy   <glb_cur_ptr_sub_obj_draw
                      (./Engine/Graphics):00468                         
79EA A6C822           (./Engine/Graphics):00469 [5]     2567            lda   rsv_render_flags,u
79ED 8408             (./Engine/Graphics):00470 [2]     2569            anda  #rsv_render_outofrange_mask
79EF 263F             (./Engine/Graphics):00471 [3]     2572            bne   CSR_SetDrawFalse              ; branch if object image is out of range
79F1 ECC828           (./Engine/Graphics):00472 [6]     2578            ldd   rsv_mapping_frame,u
79F4 273A             (./Engine/Graphics):00473 [3]     2581            beq   CSR_SetDrawFalse              ; branch if object have no image
79F6 A642             (./Engine/Graphics):00474 [5]     2586            lda   render_flags,u
79F8 8420             (./Engine/Graphics):00475 [2]     2588            anda  #render_hide_mask
79FA 2634             (./Engine/Graphics):00476 [3]     2591            bne   CSR_SetDrawFalse              ; branch if object is hidden
                      (./Engine/Graphics):00477                         
79FC                  (./Engine/Graphics):00478                 CSR_SetDrawTrue 
79FC A6C822           (./Engine/Graphics):00479 [5]     2596            lda   rsv_render_flags,u
79FF 8A04             (./Engine/Graphics):00480 [2]     2598            ora   #rsv_render_displaysprite_mask ; set displaysprite flag   
7A01 A7C822           (./Engine/Graphics):00481 [5]     2603            sta   rsv_render_flags,u         
                      (./Engine/Graphics):00482                         
7A04 8502             (./Engine/Graphics):00483 [2]     2605            bita  #rsv_render_erasesprite_mask
7A06 2702             (./Engine/Graphics):00484 [3]     2608            beq   CSR_SDT1
7A08 2007             (./Engine/Graphics):00485 [3]     2611            bra   CSR_SDT2
7A0A                  (./Engine/Graphics):00486                 CSR_SDT1                      
7A0A E68813           (./Engine/Graphics):00487 [5]     2616            ldb   buf_prev_render_flags,x
7A0D 2B0C             (./Engine/Graphics):00488 [3]     2619            bmi   CSR_SetHide
7A0F 2005             (./Engine/Graphics):00489 [3]     2622            bra   CSR_SDT3      
7A11                  (./Engine/Graphics):00490                 CSR_SDT2                      
7A11 E68813           (./Engine/Graphics):00491 [5]     2627            ldb   buf_prev_render_flags,x
7A14 2A05             (./Engine/Graphics):00492 [3]     2630            bpl   CSR_SetHide
7A16                  (./Engine/Graphics):00493                 CSR_SDT3
7A16 EFA1             (./Engine/Graphics):00494 [8]     2638            stu   ,y++
7A18 109FF5           (./Engine/Graphics):00495 [6]     2644            sty   <glb_cur_ptr_sub_obj_draw          ; maintain list of changing sprites to draw, should be to draw and ((on screen and to erase) or (not on screen and not to erase)) 
                      (./Engine/Graphics):00496                 
7A1B                  (./Engine/Graphics):00497                 CSR_SetHide        
7A1B A642             (./Engine/Graphics):00498 [5]     2649            lda   render_flags,u
7A1D 8A20             (./Engine/Graphics):00499 [2]     2651            ora   #render_hide_mask             ; set hide flag
7A1F A742             (./Engine/Graphics):00500 [5]     2656            sta   render_flags,u        
                      (./Engine/Graphics):00501                         
7A21 EE03             (./Engine/Graphics):00502 [6]     2662            ldu   buf_priority_next_obj,x
7A23 1026FD79         (./Engine/Graphics):00503 [5+?]   2667            lbne  CSR_ProcessEachPriorityLevel   
7A27 39               (./Engine/Graphics):00504 [5]     2672            rts
                      (./Engine/Graphics):00505                 
7A28                  (./Engine/Graphics):00506                 CSR_SetEraseDrawFalse 
7A28 A6C822           (./Engine/Graphics):00507 [5]     2677            lda   rsv_render_flags,u 
7A2B 84FD             (./Engine/Graphics):00508 [2]     2679            anda  #^rsv_render_erasesprite_mask
7A2D A7C822           (./Engine/Graphics):00509 [5]     2684            sta   rsv_render_flags,u 
                      (./Engine/Graphics):00510                 
7A30                  (./Engine/Graphics):00511                 CSR_SetDrawFalse 
7A30 A6C822           (./Engine/Graphics):00512 [5]     2689            lda   rsv_render_flags,u
7A33 84FB             (./Engine/Graphics):00513 [2]     2691            anda  #^rsv_render_displaysprite_mask
7A35 A7C822           (./Engine/Graphics):00514 [5]     2696            sta   rsv_render_flags,u
                      (./Engine/Graphics):00515                         
7A38 EE03             (./Engine/Graphics):00516 [6]     2702            ldu   buf_priority_next_obj,x
7A3A 1026FD62         (./Engine/Graphics):00517 [5+?]   2707            lbne   CSR_ProcessEachPriorityLevel   
7A3E 39               (./Engine/Graphics):00518 [5]     2712            rts      
                      (C:\Users\bhrou\gi):00053                         INCLUDE "./Engine/Graphics/EraseSprites.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * EraseSprites
                      (./Engine/Graphics):00003                 * ------------
                      (./Engine/Graphics):00004                 * Subroutine to erase sprites on screen
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (front to back)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                                                 
                      (./Engine/Graphics):00013                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00014                 * Background Backup Cells - BBC
                      (./Engine/Graphics):00015                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00016                 
                      (./Engine/Graphics):00017                 * ----- Cell variables
     0000             (./Engine/Graphics):00018                 nb_cells                      equ   0
     0001             (./Engine/Graphics):00019                 cell_start                    equ   1
     0003             (./Engine/Graphics):00020                 cell_end                      equ   3
     0005             (./Engine/Graphics):00021                 next_entry                    equ   5
     0007             (./Engine/Graphics):00022                 entry_size                    equ   7
                      (./Engine/Graphics):00023                 
                      (./Engine/Graphics):00024                 * ----- Cells List
     0080             (./Engine/Graphics):00025                 nb_free_cells                 equ   128
     0040             (./Engine/Graphics):00026                 cell_size                     equ   64     ; 64 bytes x 128 from $4000 to $5FFF
     6000             (./Engine/Graphics):00027                 cell_start_adr                equ   $6000
                      (./Engine/Graphics):00028                 
7A3F 7A41             (./Engine/Graphics):00029                 Lst_FreeCellFirstEntry_0      fdb   Lst_FreeCell_0 ; Pointer to first entry in free cell list (buffer 0)
7A41 80               (./Engine/Graphics):00030                 Lst_FreeCell_0                fcb   nb_free_cells ; init of first free cell
7A42 4000             (./Engine/Graphics):00031                                               fdb   cell_start_adr-cell_size*nb_free_cells
7A44 6000             (./Engine/Graphics):00032                                               fdb   cell_start_adr
7A46 0000             (./Engine/Graphics):00033                                               fdb   $0000
7A48 0000000000000000 (./Engine/Graphics):00034                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 0)
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./Engine/Graphics):00035                                               
7C07 7C09             (./Engine/Graphics):00036                 Lst_FreeCellFirstEntry_1      fdb   Lst_FreeCell_1 ; Pointer to first entry in free cell list (buffer 1)
7C09 80               (./Engine/Graphics):00037                 Lst_FreeCell_1                fcb   nb_free_cells ; init of first free cell
7C0A 4000             (./Engine/Graphics):00038                                               fdb   cell_start_adr-cell_size*nb_free_cells
7C0C 6000             (./Engine/Graphics):00039                                               fdb   cell_start_adr
7C0E 0000             (./Engine/Graphics):00040                                               fdb   $0000
7C10 0000000000000000 (./Engine/Graphics):00041                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 1)                                                
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./Engine/Graphics):00042                                                                                            
7DCF                  (./Engine/Graphics):00043                 EraseSprites
7DCF 8600             (./Engine/Graphics):00044 [2]     2714            lda   #0
7DD1 97E8             (./Engine/Graphics):00045 [4]     2718            sta   <glb_force_sprite_refresh
                      (./Engine/Graphics):00046                 
7DD3                  (./Engine/Graphics):00047                 ESP_Start
7DD3 B673F0           (./Engine/Graphics):00048 [5]     2723            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7DD6 2669             (./Engine/Graphics):00049 [3]     2726            bne   ESP_P1B1
                      (./Engine/Graphics):00050                 
7DD8                  (./Engine/Graphics):00051                 ESP_P1B0
7DD8 FE7535           (./Engine/Graphics):00052 [6]     2732            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
7DDB 2708             (./Engine/Graphics):00053 [3]     2735            beq   ESP_P2B0
7DDD 8601             (./Engine/Graphics):00054 [2]     2737            lda   #$01
7DDF B77EAE           (./Engine/Graphics):00055 [5]     2742            sta   ESP_CheckPriorityB0+1        
7DE2 BD7EAA           (./Engine/Graphics):00056 [8]     2750            jsr   ESP_ProcessEachPriorityLevelB0
7DE5                  (./Engine/Graphics):00057                 ESP_P2B0
7DE5 FE7537           (./Engine/Graphics):00058 [6]     2756            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+4
7DE8 2708             (./Engine/Graphics):00059 [3]     2759            beq   ESP_P3B0
7DEA 8602             (./Engine/Graphics):00060 [2]     2761            lda   #$02
7DEC B77EAE           (./Engine/Graphics):00061 [5]     2766            sta   ESP_CheckPriorityB0+1        
7DEF BD7EAA           (./Engine/Graphics):00062 [8]     2774            jsr   ESP_ProcessEachPriorityLevelB0   
7DF2                  (./Engine/Graphics):00063                 ESP_P3B0
7DF2 FE7539           (./Engine/Graphics):00064 [6]     2780            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+6
7DF5 2708             (./Engine/Graphics):00065 [3]     2783            beq   ESP_P4B0
7DF7 8603             (./Engine/Graphics):00066 [2]     2785            lda   #$03
7DF9 B77EAE           (./Engine/Graphics):00067 [5]     2790            sta   ESP_CheckPriorityB0+1        
7DFC BD7EAA           (./Engine/Graphics):00068 [8]     2798            jsr   ESP_ProcessEachPriorityLevelB0   
7DFF                  (./Engine/Graphics):00069                 ESP_P4B0
7DFF FE753B           (./Engine/Graphics):00070 [6]     2804            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+8
7E02 2708             (./Engine/Graphics):00071 [3]     2807            beq   ESP_P5B0
7E04 8604             (./Engine/Graphics):00072 [2]     2809            lda   #$04
7E06 B77EAE           (./Engine/Graphics):00073 [5]     2814            sta   ESP_CheckPriorityB0+1        
7E09 BD7EAA           (./Engine/Graphics):00074 [8]     2822            jsr   ESP_ProcessEachPriorityLevelB0   
7E0C                  (./Engine/Graphics):00075                 ESP_P5B0
7E0C FE753D           (./Engine/Graphics):00076 [6]     2828            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+10
7E0F 2708             (./Engine/Graphics):00077 [3]     2831            beq   ESP_P6B0
7E11 8605             (./Engine/Graphics):00078 [2]     2833            lda   #$05
7E13 B77EAE           (./Engine/Graphics):00079 [5]     2838            sta   ESP_CheckPriorityB0+1        
7E16 BD7EAA           (./Engine/Graphics):00080 [8]     2846            jsr   ESP_ProcessEachPriorityLevelB0               
7E19                  (./Engine/Graphics):00081                 ESP_P6B0
7E19 FE753F           (./Engine/Graphics):00082 [6]     2852            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+12
7E1C 2708             (./Engine/Graphics):00083 [3]     2855            beq   ESP_P7B0
7E1E 8606             (./Engine/Graphics):00084 [2]     2857            lda   #$06
7E20 B77EAE           (./Engine/Graphics):00085 [5]     2862            sta   ESP_CheckPriorityB0+1        
7E23 BD7EAA           (./Engine/Graphics):00086 [8]     2870            jsr   ESP_ProcessEachPriorityLevelB0      
7E26                  (./Engine/Graphics):00087                 ESP_P7B0
7E26 FE7541           (./Engine/Graphics):00088 [6]     2876            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+14
7E29 2708             (./Engine/Graphics):00089 [3]     2879            beq   ESP_P8B0
7E2B 8607             (./Engine/Graphics):00090 [2]     2881            lda   #$07
7E2D B77EAE           (./Engine/Graphics):00091 [5]     2886            sta   ESP_CheckPriorityB0+1        
7E30 BD7EAA           (./Engine/Graphics):00092 [8]     2894            jsr   ESP_ProcessEachPriorityLevelB0  
7E33                  (./Engine/Graphics):00093                 ESP_P8B0
7E33 FE7543           (./Engine/Graphics):00094 [6]     2900            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+16
7E36 2708             (./Engine/Graphics):00095 [3]     2903            beq   ESP_rtsB0
7E38 8608             (./Engine/Graphics):00096 [2]     2905            lda   #$08
7E3A B77EAE           (./Engine/Graphics):00097 [5]     2910            sta   ESP_CheckPriorityB0+1                   
7E3D BD7EAA           (./Engine/Graphics):00098 [8]     2918            jsr   ESP_ProcessEachPriorityLevelB0
7E40                  (./Engine/Graphics):00099                 ESP_rtsB0        
7E40 39               (./Engine/Graphics):00100 [5]     2923            rts
                      (./Engine/Graphics):00101                         
7E41                  (./Engine/Graphics):00102                 ESP_P1B1
7E41 FE75B1           (./Engine/Graphics):00103 [6]     2929            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
7E44 2708             (./Engine/Graphics):00104 [3]     2932            beq   ESP_P2B1
7E46 8601             (./Engine/Graphics):00105 [2]     2934            lda   #$01
7E48 B77F27           (./Engine/Graphics):00106 [5]     2939            sta   ESP_CheckPriorityB1+1        
7E4B BD7F23           (./Engine/Graphics):00107 [8]     2947            jsr   ESP_ProcessEachPriorityLevelB1
7E4E                  (./Engine/Graphics):00108                 ESP_P2B1
7E4E FE75B3           (./Engine/Graphics):00109 [6]     2953            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+4
7E51 2708             (./Engine/Graphics):00110 [3]     2956            beq   ESP_P3B1
7E53 8602             (./Engine/Graphics):00111 [2]     2958            lda   #$02
7E55 B77F27           (./Engine/Graphics):00112 [5]     2963            sta   ESP_CheckPriorityB1+1        
7E58 BD7F23           (./Engine/Graphics):00113 [8]     2971            jsr   ESP_ProcessEachPriorityLevelB1   
7E5B                  (./Engine/Graphics):00114                 ESP_P3B1
7E5B FE75B5           (./Engine/Graphics):00115 [6]     2977            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+6
7E5E 2708             (./Engine/Graphics):00116 [3]     2980            beq   ESP_P4B1
7E60 8603             (./Engine/Graphics):00117 [2]     2982            lda   #$03
7E62 B77F27           (./Engine/Graphics):00118 [5]     2987            sta   ESP_CheckPriorityB1+1        
7E65 BD7F23           (./Engine/Graphics):00119 [8]     2995            jsr   ESP_ProcessEachPriorityLevelB1   
7E68                  (./Engine/Graphics):00120                 ESP_P4B1
7E68 FE75B7           (./Engine/Graphics):00121 [6]     3001            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+8
7E6B 2708             (./Engine/Graphics):00122 [3]     3004            beq   ESP_P5B1
7E6D 8604             (./Engine/Graphics):00123 [2]     3006            lda   #$04
7E6F B77F27           (./Engine/Graphics):00124 [5]     3011            sta   ESP_CheckPriorityB1+1        
7E72 BD7F23           (./Engine/Graphics):00125 [8]     3019            jsr   ESP_ProcessEachPriorityLevelB1   
7E75                  (./Engine/Graphics):00126                 ESP_P5B1
7E75 FE75B9           (./Engine/Graphics):00127 [6]     3025            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+10
7E78 2708             (./Engine/Graphics):00128 [3]     3028            beq   ESP_P6B1
7E7A 8605             (./Engine/Graphics):00129 [2]     3030            lda   #$05
7E7C B77F27           (./Engine/Graphics):00130 [5]     3035            sta   ESP_CheckPriorityB1+1        
7E7F BD7F23           (./Engine/Graphics):00131 [8]     3043            jsr   ESP_ProcessEachPriorityLevelB1               
7E82                  (./Engine/Graphics):00132                 ESP_P6B1
7E82 FE75BB           (./Engine/Graphics):00133 [6]     3049            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+12
7E85 2708             (./Engine/Graphics):00134 [3]     3052            beq   ESP_P7B1
7E87 8606             (./Engine/Graphics):00135 [2]     3054            lda   #$06
7E89 B77F27           (./Engine/Graphics):00136 [5]     3059            sta   ESP_CheckPriorityB1+1        
7E8C BD7F23           (./Engine/Graphics):00137 [8]     3067            jsr   ESP_ProcessEachPriorityLevelB1      
7E8F                  (./Engine/Graphics):00138                 ESP_P7B1
7E8F FE75BD           (./Engine/Graphics):00139 [6]     3073            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+14
7E92 2708             (./Engine/Graphics):00140 [3]     3076            beq   ESP_P8B1
7E94 8607             (./Engine/Graphics):00141 [2]     3078            lda   #$07
7E96 B77F27           (./Engine/Graphics):00142 [5]     3083            sta   ESP_CheckPriorityB1+1        
7E99 BD7F23           (./Engine/Graphics):00143 [8]     3091            jsr   ESP_ProcessEachPriorityLevelB1  
7E9C                  (./Engine/Graphics):00144                 ESP_P8B1
7E9C FE75BF           (./Engine/Graphics):00145 [6]     3097            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+16
7E9F 2708             (./Engine/Graphics):00146 [3]     3100            beq   ESP_rtsB1
7EA1 8608             (./Engine/Graphics):00147 [2]     3102            lda   #$08
7EA3 B77F27           (./Engine/Graphics):00148 [5]     3107            sta   ESP_CheckPriorityB1+1        
7EA6 BD7F23           (./Engine/Graphics):00149 [8]     3115            jsr   ESP_ProcessEachPriorityLevelB1
7EA9                  (./Engine/Graphics):00150                 ESP_rtsB1        
7EA9 39               (./Engine/Graphics):00151 [5]     3120            rts
                      (./Engine/Graphics):00152                 
                      (./Engine/Graphics):00153                 * -----------------------------------------------
                      (./Engine/Graphics):00154                 * BUFFER0
                      (./Engine/Graphics):00155                 * -----------------------------------------------
                      (./Engine/Graphics):00156                 
7EAA                  (./Engine/Graphics):00157                 ESP_ProcessEachPriorityLevelB0
7EAA A6C835           (./Engine/Graphics):00158 [5]     3125            lda   rsv_priority_0,u
                      (./Engine/Graphics):00159                         
7EAD                  (./Engine/Graphics):00160                 ESP_CheckPriorityB0
7EAD 8100             (./Engine/Graphics):00161 [2]     3127            cmpa  #0                            ; dynamic current priority
7EAF 10260068         (./Engine/Graphics):00162 [5+?]   3132            lbne   ESP_NextObjectB0             ; do not process this entry (case of priority change)
                      (./Engine/Graphics):00163                         
7EB3                  (./Engine/Graphics):00164                 ESP_UnsetCheckRefreshB0
7EB3 A6C822           (./Engine/Graphics):00165 [5]     3137            lda   rsv_render_flags,u
7EB6 E642             (./Engine/Graphics):00166 [5]     3142            ldb   render_flags,u
7EB8 C408             (./Engine/Graphics):00167 [2]     3144            andb  #render_motionless_mask
7EBA 2605             (./Engine/Graphics):00168 [3]     3147            bne   ESP_CheckEraseB0
7EBC 84FE             (./Engine/Graphics):00169 [2]     3149            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag
7EBE A7C822           (./Engine/Graphics):00170 [5]     3154            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00171                         
7EC1                  (./Engine/Graphics):00172                 ESP_CheckEraseB0
7EC1 8402             (./Engine/Graphics):00173 [2]     3156            anda  #rsv_render_erasesprite_mask
7EC3 10270054         (./Engine/Graphics):00174 [5+?]   3161            lbeq   ESP_NextObjectB0
7EC7 E6C848           (./Engine/Graphics):00175 [5]     3166            ldb   rsv_prev_render_flags_0,u
7ECA C401             (./Engine/Graphics):00176 [2]     3168            andb  #rsv_prev_render_overlay_mask
7ECC 263D             (./Engine/Graphics):00177 [3]     3171            bne   ESP_UnsetOnScreenFlagB0
                      (./Engine/Graphics):00178                         
7ECE                  (./Engine/Graphics):00179                 ESP_CallEraseRoutineB0
7ECE A6C83D           (./Engine/Graphics):00180 [5]     3176            lda   rsv_prev_page_erase_routine_0,u
                      (./Engine/Graphics):00181                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
7ED1 BD7324           (    _SetCartPageA):00002 [8]     3184            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7ED4 AEC83E           (./Engine/Graphics):00182 [6]     3190            ldx   rsv_prev_erase_routine_0,u
7ED7 FF7EE3           (./Engine/Graphics):00183 [6]     3196            stu   ESP_CallEraseRoutineB0_00+1   ; backup u (pointer to object)                
7EDA EEC840           (./Engine/Graphics):00184 [6]     3202            ldu   rsv_bgdata_0,u                ; cell_start background data        
7EDD AD84             (./Engine/Graphics):00185 [7]     3209            jsr   ,x                            ; erase sprite on working screen buffer
7EDF FF7F9F           (./Engine/Graphics):00186 [6]     3215            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
7EE2                  (./Engine/Graphics):00187                 ESP_CallEraseRoutineB0_00        
7EE2 CE0000           (./Engine/Graphics):00188 [3]     3218            ldu   #$0000                        ; restore u (pointer to object)
7EE5 ECC840           (./Engine/Graphics):00189 [6]     3224            ldd   rsv_bgdata_0,u                ; cell_start
7EE8 830010           (./Engine/Graphics):00190 [4]     3228            subd  #16
7EEB C4C0             (./Engine/Graphics):00191 [2]     3230            andb  #256-cell_size                ; round cell_start to cell size
7EED FD7F9D           (./Engine/Graphics):00192 [6]     3236            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./Engine/Graphics):00193                                         
7EF0                  (./Engine/Graphics):00194                 ESP_FreeEraseBufferB0
7EF0 A6C83C           (./Engine/Graphics):00195 [5]     3241            lda   rsv_prev_erase_nb_cell_0,u     ; get nb of cell to free
7EF3 B77F9C           (./Engine/Graphics):00196 [5]     3246            sta   BBF_nb_cells
7EF6 FF8032           (./Engine/Graphics):00197 [6]     3252            stu   BBF_rts+1
7EF9 CE7A41           (./Engine/Graphics):00198 [3]     3255            ldu   #Lst_FreeCell_0
7EFC FF8010           (./Engine/Graphics):00199 [6]     3261            stu   BBF_AddNewEntry+1
7EFF CE7A3F           (./Engine/Graphics):00200 [3]     3264            ldu   #Lst_FreeCellFirstEntry_0        
7F02 FF802F           (./Engine/Graphics):00201 [6]     3270            stu   BBF_SetNewEntryPrevLink+1     ; init prev address destination as Lst_FreeCellFirstEntry                
7F05 FE7A3F           (./Engine/Graphics):00202 [6]     3276            ldu   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
7F08 BD7FA3           (./Engine/Graphics):00203 [8]     3284            jsr   BgBufferFree                  ; free background data in memory
                      (./Engine/Graphics):00204                         
7F0B                  (./Engine/Graphics):00205                 ESP_UnsetOnScreenFlagB0
7F0B A6C848           (./Engine/Graphics):00206 [5]     3289            lda   rsv_prev_render_flags_0,u
7F0E 847F             (./Engine/Graphics):00207 [2]     3291            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen
7F10 A7C848           (./Engine/Graphics):00208 [5]     3296            sta   rsv_prev_render_flags_0,u
7F13 A6C822           (./Engine/Graphics):00209 [5]     3301            lda   rsv_render_flags,u
7F16 847F             (./Engine/Graphics):00210 [2]     3303            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
7F18 A7C822           (./Engine/Graphics):00211 [5]     3308            sta   rsv_render_flags,u
                      (./Engine/Graphics):00212                 
7F1B                  (./Engine/Graphics):00213                 ESP_NextObjectB0
7F1B EEC836           (./Engine/Graphics):00214 [6]     3314            ldu   rsv_priority_prev_obj_0,u
7F1E 1026FF88         (./Engine/Graphics):00215 [5+?]   3319            lbne   ESP_ProcessEachPriorityLevelB0   
7F22 39               (./Engine/Graphics):00216 [5]     3324            rts      
                      (./Engine/Graphics):00217                 
                      (./Engine/Graphics):00218                 * -----------------------------------------------        
                      (./Engine/Graphics):00219                 * BUFFER1
                      (./Engine/Graphics):00220                 * -----------------------------------------------        
                      (./Engine/Graphics):00221                                 
7F23                  (./Engine/Graphics):00222                 ESP_ProcessEachPriorityLevelB1
7F23 A6C849           (./Engine/Graphics):00223 [5]     3329            lda   rsv_priority_1,u
                      (./Engine/Graphics):00224                         
7F26                  (./Engine/Graphics):00225                 ESP_CheckPriorityB1
7F26 8100             (./Engine/Graphics):00226 [2]     3331            cmpa  #0                            ; dynamic current priority
7F28 10260068         (./Engine/Graphics):00227 [5+?]   3336            lbne   ESP_NextObjectB1             ; do not process this entry (case of priority change)
                      (./Engine/Graphics):00228                         
7F2C                  (./Engine/Graphics):00229                 ESP_UnsetCheckRefreshB1
7F2C A6C822           (./Engine/Graphics):00230 [5]     3341            lda   rsv_render_flags,u
7F2F E642             (./Engine/Graphics):00231 [5]     3346            ldb   render_flags,u
7F31 C408             (./Engine/Graphics):00232 [2]     3348            andb  #render_motionless_mask
7F33 2605             (./Engine/Graphics):00233 [3]     3351            bne   ESP_CheckEraseB1
7F35 84FE             (./Engine/Graphics):00234 [2]     3353            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag (CheckSpriteRefresh)
7F37 A7C822           (./Engine/Graphics):00235 [5]     3358            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00236                         
7F3A                  (./Engine/Graphics):00237                 ESP_CheckEraseB1
7F3A 8402             (./Engine/Graphics):00238 [2]     3360            anda  #rsv_render_erasesprite_mask
7F3C 10270054         (./Engine/Graphics):00239 [5+?]   3365            lbeq   ESP_NextObjectB1
7F40 E6C85C           (./Engine/Graphics):00240 [5]     3370            ldb   rsv_prev_render_flags_1,u
7F43 C401             (./Engine/Graphics):00241 [2]     3372            andb  #rsv_prev_render_overlay_mask
7F45 263D             (./Engine/Graphics):00242 [3]     3375            bne   ESP_UnsetOnScreenFlagB1        
                      (./Engine/Graphics):00243                         
7F47                  (./Engine/Graphics):00244                 ESP_CallEraseRoutineB1
7F47 A6C851           (./Engine/Graphics):00245 [5]     3380            lda   rsv_prev_page_erase_routine_1,u
                      (./Engine/Graphics):00246                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
7F4A BD7324           (    _SetCartPageA):00002 [8]     3388            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7F4D AEC852           (./Engine/Graphics):00247 [6]     3394            ldx   rsv_prev_erase_routine_1,u
7F50 FF7F5C           (./Engine/Graphics):00248 [6]     3400            stu   ESP_CallEraseRoutineB1_00+1   ; backup u (pointer to object)                
7F53 EEC854           (./Engine/Graphics):00249 [6]     3406            ldu   rsv_bgdata_1,u                ; cell_start background data        
7F56 AD84             (./Engine/Graphics):00250 [7]     3413            jsr   ,x                            ; erase sprite on working screen buffer
7F58 FF7F9F           (./Engine/Graphics):00251 [6]     3419            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
7F5B                  (./Engine/Graphics):00252                 ESP_CallEraseRoutineB1_00        
7F5B CE0000           (./Engine/Graphics):00253 [3]     3422            ldu   #$0000                        ; restore u (pointer to object)
7F5E ECC854           (./Engine/Graphics):00254 [6]     3428            ldd   rsv_bgdata_1,u                ; cell_start
7F61 830010           (./Engine/Graphics):00255 [4]     3432            subd  #16
7F64 C4C0             (./Engine/Graphics):00256 [2]     3434            andb  #256-cell_size                ; round cell_start to cell size
7F66 FD7F9D           (./Engine/Graphics):00257 [6]     3440            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./Engine/Graphics):00258                                         
7F69                  (./Engine/Graphics):00259                 ESP_FreeEraseBufferB1
7F69 A6C850           (./Engine/Graphics):00260 [5]     3445            lda   rsv_prev_erase_nb_cell_1,u       
7F6C B77F9C           (./Engine/Graphics):00261 [5]     3450            sta   BBF_nb_cells         
7F6F FF8032           (./Engine/Graphics):00262 [6]     3456            stu   BBF_rts+1
7F72 CE7C09           (./Engine/Graphics):00263 [3]     3459            ldu   #Lst_FreeCell_1
7F75 FF8010           (./Engine/Graphics):00264 [6]     3465            stu   BBF_AddNewEntry+1
7F78 CE7C07           (./Engine/Graphics):00265 [3]     3468            ldu   #Lst_FreeCellFirstEntry_1        
7F7B FF802F           (./Engine/Graphics):00266 [6]     3474            stu   BBF_SetNewEntryPrevLink+1          
7F7E FE7C07           (./Engine/Graphics):00267 [6]     3480            ldu   Lst_FreeCellFirstEntry_1
7F81 BD7FA3           (./Engine/Graphics):00268 [8]     3488            jsr   BgBufferFree                  ; free background data in memory
                      (./Engine/Graphics):00269                         
7F84                  (./Engine/Graphics):00270                 ESP_UnsetOnScreenFlagB1
7F84 A6C85C           (./Engine/Graphics):00271 [5]     3493            lda   rsv_prev_render_flags_1,u
7F87 847F             (./Engine/Graphics):00272 [2]     3495            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen 
7F89 A7C85C           (./Engine/Graphics):00273 [5]     3500            sta   rsv_prev_render_flags_1,u
7F8C A6C822           (./Engine/Graphics):00274 [5]     3505            lda   rsv_render_flags,u
7F8F 847F             (./Engine/Graphics):00275 [2]     3507            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
7F91 A7C822           (./Engine/Graphics):00276 [5]     3512            sta   rsv_render_flags,u
                      (./Engine/Graphics):00277                         
7F94                  (./Engine/Graphics):00278                 ESP_NextObjectB1
7F94 EEC84A           (./Engine/Graphics):00279 [6]     3518            ldu   rsv_priority_prev_obj_1,u
7F97 1026FF88         (./Engine/Graphics):00280 [5+?]   3523            lbne   ESP_ProcessEachPriorityLevelB1   
7F9B 39               (./Engine/Graphics):00281 [5]     3528            rts
                      (./Engine/Graphics):00282                         
                      (./Engine/Graphics):00283                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00284                 * BgBufferFree
                      (./Engine/Graphics):00285                 * ------------
                      (./Engine/Graphics):00286                 * Subroutine to free memory from background buffer
                      (./Engine/Graphics):00287                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00288                      
7F9C 00               (./Engine/Graphics):00289                 BBF_nb_cells   fcb   $00
7F9D 0000             (./Engine/Graphics):00290                 BBF_cell_start fdb   $0000
7F9F 0000             (./Engine/Graphics):00291                 BBF_cell_end   fdb   $0000       
7FA1 0000             (./Engine/Graphics):00292                 BBF_prev       fdb   $0000
                      (./Engine/Graphics):00293                 
                      (./Engine/Graphics):00294                         ; search position of the new free cells in the linked list
                      (./Engine/Graphics):00295                         ; linked list is ordered by cell_end (address) descending
                      (./Engine/Graphics):00296                         ; starting at Lst_FreeCellFirstEntry_x
                      (./Engine/Graphics):00297                         ; ----------------------------------------------------------
                      (./Engine/Graphics):00298                 
7FA3                  (./Engine/Graphics):00299                 BgBufferFree        
7FA3 2764             (./Engine/Graphics):00300 [3]     3531            beq   BBF_AddLastEntry
7FA5                  (./Engine/Graphics):00301                 BBF_SearchPos 
7FA5 AE43             (./Engine/Graphics):00302 [6]     3537            ldx   cell_end,u
7FA7 BC7F9F           (./Engine/Graphics):00303 [7]     3544            cmpx  BBF_cell_end
7FAA 2510             (./Engine/Graphics):00304 [3]     3547            blo   BBF_CombineNext
7FAC FF7FA1           (./Engine/Graphics):00305 [6]     3553            stu   BBF_prev
7FAF EC45             (./Engine/Graphics):00306 [6]     3559            ldd   next_entry,u                  ; test next entry
7FB1 273B             (./Engine/Graphics):00307 [3]     3562            beq   BBF_CombinePrevNoNext
7FB3 3045             (./Engine/Graphics):00308 [5]     3567            leax  next_entry,u                  ; there is a next entry, save next_entry position
7FB5 BF802F           (./Engine/Graphics):00309 [6]     3573            stx   BBF_SetNewEntryPrevLink+1   
7FB8 EE45             (./Engine/Graphics):00310 [6]     3579            ldu   next_entry,u                  ; move to next entry        
7FBA 20E9             (./Engine/Graphics):00311 [3]     3582            bra   BBF_SearchPos        
                      (./Engine/Graphics):00312                         
                      (./Engine/Graphics):00313                         ; try to combine with next block
                      (./Engine/Graphics):00314                         ; ----------------------------------------------------------        
                      (./Engine/Graphics):00315                         
7FBC                  (./Engine/Graphics):00316                 BBF_CombineNext
7FBC FF802A           (./Engine/Graphics):00317 [6]     3588            stu   BBF_SetNewEntryNextentry+1
7FBF BE7F9D           (./Engine/Graphics):00318 [6]     3594            ldx   BBF_cell_start
7FC2 AC43             (./Engine/Graphics):00319 [7]     3601            cmpx  cell_end,u
7FC4 262E             (./Engine/Graphics):00320 [3]     3604            bne   BBF_CombinePrev
7FC6 BE7F9F           (./Engine/Graphics):00321 [6]     3610            ldx   BBF_cell_end
7FC9 AF43             (./Engine/Graphics):00322 [6]     3616            stx   cell_end,u
7FCB A6C4             (./Engine/Graphics):00323 [4]     3620            lda   nb_cells,u
7FCD BB7F9C           (./Engine/Graphics):00324 [5]     3625            adda  BBF_nb_cells
7FD0 A7C4             (./Engine/Graphics):00325 [4]     3629            sta   nb_cells,u
                      (./Engine/Graphics):00326                         
7FD2                  (./Engine/Graphics):00327                 BBF_CombineNextAndPrev
7FD2 10BE7FA1         (./Engine/Graphics):00328 [7]     3636            ldy   BBF_prev
7FD6 AC21             (./Engine/Graphics):00329 [7]     3643            cmpx  cell_start,y
7FD8 2657             (./Engine/Graphics):00330 [3]     3646            bne   BBF_rts
7FDA AE41             (./Engine/Graphics):00331 [6]     3652            ldx   cell_start,u
7FDC AF21             (./Engine/Graphics):00332 [6]     3658            stx   cell_start,y
7FDE A6C4             (./Engine/Graphics):00333 [4]     3662            lda   nb_cells,u        
7FE0 ABA4             (./Engine/Graphics):00334 [4]     3666            adda  nb_cells,y
7FE2 A7A4             (./Engine/Graphics):00335 [4]     3670            sta   nb_cells,y
7FE4 EC45             (./Engine/Graphics):00336 [6]     3676            ldd   next_entry,u
7FE6 ED25             (./Engine/Graphics):00337 [6]     3682            std   next_entry,y
7FE8 8600             (./Engine/Graphics):00338 [2]     3684            lda   #$00
7FEA A7C4             (./Engine/Graphics):00339 [4]     3688            sta   nb_cells,u                    ; delete the entry
7FEC 2043             (./Engine/Graphics):00340 [3]     3691            bra   BBF_rts
                      (./Engine/Graphics):00341                                 
                      (./Engine/Graphics):00342                         ; try to combine with prev block 
                      (./Engine/Graphics):00343                         ; ----------------------------------------------------------      
                      (./Engine/Graphics):00344                         
7FEE                  (./Engine/Graphics):00345                 BBF_CombinePrevNoNext
7FEE CC0000           (./Engine/Graphics):00346 [3]     3694            ldd   #$0000
7FF1 FD802A           (./Engine/Graphics):00347 [6]     3700            std   BBF_SetNewEntryNextentry+1
7FF4                  (./Engine/Graphics):00348                 BBF_CombinePrev
7FF4 BE7F9F           (./Engine/Graphics):00349 [6]     3706            ldx   BBF_cell_end
7FF7 AC41             (./Engine/Graphics):00350 [7]     3713            cmpx  cell_start,u
7FF9 2614             (./Engine/Graphics):00351 [3]     3716            bne   BBF_AddNewEntry
7FFB BE7F9D           (./Engine/Graphics):00352 [6]     3722            ldx   BBF_cell_start
7FFE AF41             (./Engine/Graphics):00353 [6]     3728            stx   cell_start,u
8000 A6C4             (./Engine/Graphics):00354 [4]     3732            lda   nb_cells,u        
8002 BB7F9C           (./Engine/Graphics):00355 [5]     3737            adda  BBF_nb_cells
8005 A7C4             (./Engine/Graphics):00356 [4]     3741            sta   nb_cells,u
8007 2028             (./Engine/Graphics):00357 [3]     3744            bra   BBF_rts   
                      (./Engine/Graphics):00358                 
                      (./Engine/Graphics):00359                         ; Add New Entry
                      (./Engine/Graphics):00360                         ; ----------------------------------------------------------
                      (./Engine/Graphics):00361                         
8009                  (./Engine/Graphics):00362                 BBF_AddLastEntry
8009 CC0000           (./Engine/Graphics):00363 [3]     3747            ldd   #$0000
800C FD802A           (./Engine/Graphics):00364 [6]     3753            std   BBF_SetNewEntryNextentry+1        
800F                  (./Engine/Graphics):00365                 BBF_AddNewEntry
800F CE0000           (./Engine/Graphics):00366 [3]     3756            ldu   #$0000                        ; (dynamic) start of linked list data index
8012                  (./Engine/Graphics):00367                 BBF_FindFreeSlot
8012 E6C4             (./Engine/Graphics):00368 [4]     3760            ldb   nb_cells,u                    ; read Lst_FreeCell as a table (not a linked list)
8014 2704             (./Engine/Graphics):00369 [3]     3763            beq   BBF_SetNewEntry               ; branch if empty entry
8016 3347             (./Engine/Graphics):00370 [5]     3768            leau  entry_size,u                  ; move to next entry
8018 20F8             (./Engine/Graphics):00371 [3]     3771            bra   BBF_FindFreeSlot              ; loop             
                      (./Engine/Graphics):00372                 
801A                  (./Engine/Graphics):00373                 BBF_SetNewEntry        
801A B67F9C           (./Engine/Graphics):00374 [5]     3776            lda   BBF_nb_cells              
801D A7C4             (./Engine/Graphics):00375 [4]     3780            sta   nb_cells,u                    ; store released cells
801F FC7F9D           (./Engine/Graphics):00376 [6]     3786            ldd   BBF_cell_start
8022 ED41             (./Engine/Graphics):00377 [6]     3792            std   cell_start,u                  ; store cell start adress
8024 FC7F9F           (./Engine/Graphics):00378 [6]     3798            ldd   BBF_cell_end
8027 ED43             (./Engine/Graphics):00379 [6]     3804            std   cell_end,u                    ; store cell end adress
                      (./Engine/Graphics):00380                         
8029                  (./Engine/Graphics):00381                 BBF_SetNewEntryNextentry        
8029 CC0000           (./Engine/Graphics):00382 [3]     3807            ldd   #$0000                        ; (dynamic) value is dynamically set
802C ED45             (./Engine/Graphics):00383 [6]     3813            std   next_entry,u                  ; link to 0000 if no more entry or next_entry
                      (./Engine/Graphics):00384                         
802E                  (./Engine/Graphics):00385                 BBF_SetNewEntryPrevLink        
802E FFFFFF           (./Engine/Graphics):00386 [6]     3819            stu   $FFFF                         ; (dynamic) set Lst_FreeCellFirstEntry or prev_entry.next_entry with new entry
                      (./Engine/Graphics):00387                         
8031                  (./Engine/Graphics):00388                 BBF_rts
8031 CE0000           (./Engine/Graphics):00389 [3]     3822            ldu   #$0000
8034 39               (./Engine/Graphics):00390 [5]     3827            rts
                      (./Engine/Graphics):00391                                 
                      (C:\Users\bhrou\gi):00054                         INCLUDE "./Engine/Graphics/UnsetDisplayPriority.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * UnsetDisplayPriority
                      (./Engine/Graphics):00003                 * --------------------
                      (./Engine/Graphics):00004                 * Subroutine to unset sprites in Display Sprite Priority structure
                      (./Engine/Graphics):00005                 * Read Lst_Priority_Unset_0/1
                      (./Engine/Graphics):00006                 *
                      (./Engine/Graphics):00007                 * input REG : none
                      (./Engine/Graphics):00008                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                                                                                            
8035                  (./Engine/Graphics):00010                 UnsetDisplayPriority
                      (./Engine/Graphics):00011                 
8035                  (./Engine/Graphics):00012                 UDP_Start
8035 B673F0           (./Engine/Graphics):00013 [5]     3832            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
8038 266D             (./Engine/Graphics):00014 [3]     3835            bne   UDP_B1
                      (./Engine/Graphics):00015                         
803A                  (./Engine/Graphics):00016                 UDP_B0                                    
803A 8E7547           (./Engine/Graphics):00017 [3]     3838            ldx   #Lst_Priority_Unset_0+2
                      (./Engine/Graphics):00018                         
803D                  (./Engine/Graphics):00019                 UDP_CheckEndB0        
803D BC7545           (./Engine/Graphics):00020 [7]     3845            cmpx  Lst_Priority_Unset_0          ; end of priority unset list
8040 2607             (./Engine/Graphics):00021 [3]     3848            bne   UDP_CheckPrioPrevB0
                      (./Engine/Graphics):00022                         
8042                  (./Engine/Graphics):00023                 UDP_InitListB0      
8042 8E7547           (./Engine/Graphics):00024 [3]     3851            ldx   #Lst_Priority_Unset_0+2 
8045 BF7545           (./Engine/Graphics):00025 [6]     3857            stx   Lst_Priority_Unset_0          ; set Lst_Priority_Unset_0 index
8048 39               (./Engine/Graphics):00026 [5]     3862            rts
                      (./Engine/Graphics):00027                         
8049                  (./Engine/Graphics):00028                 UDP_CheckPrioPrevB0
8049 EE81             (./Engine/Graphics):00029 [8]     3870            ldu   ,x++
804B ECC836           (./Engine/Graphics):00030 [6]     3876            ldd   rsv_priority_prev_obj_0,u
804E 2611             (./Engine/Graphics):00031 [3]     3879            bne   UDP_ChainPrevB0
                      (./Engine/Graphics):00032                         
8050 A6C835           (./Engine/Graphics):00033 [5]     3884            lda   rsv_priority_0,u
8053 48               (./Engine/Graphics):00034 [2]     3886            lsla
8054 108E7521         (./Engine/Graphics):00035 [4]     3890            ldy   #Tbl_Priority_First_Entry_0
8058 31A6             (./Engine/Graphics):00036 [5]     3895            leay  a,y
805A ECC838           (./Engine/Graphics):00037 [6]     3901            ldd   rsv_priority_next_obj_0,u
805D EDA4             (./Engine/Graphics):00038 [5]     3906            std   ,y
805F 200A             (./Engine/Graphics):00039 [3]     3909            bra   UDP_CheckPrioNextB0
                      (./Engine/Graphics):00040                                 
8061                  (./Engine/Graphics):00041                 UDP_ChainPrevB0
8061 ECC838           (./Engine/Graphics):00042 [6]     3915            ldd   rsv_priority_next_obj_0,u
8064 10AEC836         (./Engine/Graphics):00043 [7]     3922            ldy   rsv_priority_prev_obj_0,u        
8068 EDA838           (./Engine/Graphics):00044 [6]     3928            std   rsv_priority_next_obj_0,y        
                      (./Engine/Graphics):00045                 
806B                  (./Engine/Graphics):00046                 UDP_CheckPrioNextB0       
806B ECC838           (./Engine/Graphics):00047 [6]     3934            ldd   rsv_priority_next_obj_0,u
806E 2611             (./Engine/Graphics):00048 [3]     3937            bne   UDP_ChainNextB0
                      (./Engine/Graphics):00049                 
8070 A6C835           (./Engine/Graphics):00050 [5]     3942            lda   rsv_priority_0,u
8073 48               (./Engine/Graphics):00051 [2]     3944            lsla
8074 108E7533         (./Engine/Graphics):00052 [4]     3948            ldy   #Tbl_Priority_Last_Entry_0
8078 31A6             (./Engine/Graphics):00053 [5]     3953            leay  a,y
807A ECC836           (./Engine/Graphics):00054 [6]     3959            ldd   rsv_priority_prev_obj_0,u
807D EDA4             (./Engine/Graphics):00055 [5]     3964            std   ,y
807F 200A             (./Engine/Graphics):00056 [3]     3967            bra   UDP_CheckDeleteB0
                      (./Engine/Graphics):00057                                 
8081                  (./Engine/Graphics):00058                 UDP_ChainNextB0
8081 ECC836           (./Engine/Graphics):00059 [6]     3973            ldd   rsv_priority_prev_obj_0,u
8084 10AEC838         (./Engine/Graphics):00060 [7]     3980            ldy   rsv_priority_next_obj_0,u        
8088 EDA836           (./Engine/Graphics):00061 [6]     3986            std   rsv_priority_prev_obj_0,y
                      (./Engine/Graphics):00062                         
808B                  (./Engine/Graphics):00063                 UDP_CheckDeleteB0
808B A642             (./Engine/Graphics):00064 [5]     3991            lda   render_flags,u
808D 8440             (./Engine/Graphics):00065 [2]     3993            anda  #render_todelete_mask
808F 270F             (./Engine/Graphics):00066 [3]     3996            beq   UDP_SetNewPrioB0
8091 A6C848           (./Engine/Graphics):00067 [5]     4001            lda   rsv_prev_render_flags_0,u
8094 2B0A             (./Engine/Graphics):00068 [3]     4004            bmi   UDP_SetNewPrioB0
8096 A6C85C           (./Engine/Graphics):00069 [5]     4009            lda   rsv_prev_render_flags_1,u
8099 2B05             (./Engine/Graphics):00070 [3]     4012            bmi   UDP_SetNewPrioB0
809B BD845F           (./Engine/Graphics):00071 [8]     4020            jsr   ClearObj
809E 209D             (./Engine/Graphics):00072 [3]     4023            bra   UDP_CheckEndB0
                      (./Engine/Graphics):00073                         
80A0                  (./Engine/Graphics):00074                 UDP_SetNewPrioB0
80A0 A643             (./Engine/Graphics):00075 [5]     4028            lda   priority,u
80A2 A7C835           (./Engine/Graphics):00076 [5]     4033            sta   rsv_priority_0,u
80A5 2096             (./Engine/Graphics):00077 [3]     4036            bra   UDP_CheckEndB0        
                      (./Engine/Graphics):00078                 
80A7                  (./Engine/Graphics):00079                 UDP_B1                                    
80A7 8E75C3           (./Engine/Graphics):00080 [3]     4039            ldx   #Lst_Priority_Unset_1+2
                      (./Engine/Graphics):00081                         
80AA                  (./Engine/Graphics):00082                 UDP_CheckEndB1        
80AA BC75C1           (./Engine/Graphics):00083 [7]     4046            cmpx  Lst_Priority_Unset_1          ; end of priority unset list
80AD 2607             (./Engine/Graphics):00084 [3]     4049            bne   UDP_CheckPrioPrevB1
                      (./Engine/Graphics):00085                         
80AF                  (./Engine/Graphics):00086                 UDP_InitListB1      
80AF 8E75C3           (./Engine/Graphics):00087 [3]     4052            ldx   #Lst_Priority_Unset_1+2 
80B2 BF75C1           (./Engine/Graphics):00088 [6]     4058            stx   Lst_Priority_Unset_1          ; set Lst_Priority_Unset_0 index
80B5 39               (./Engine/Graphics):00089 [5]     4063            rts
                      (./Engine/Graphics):00090                         
80B6                  (./Engine/Graphics):00091                 UDP_CheckPrioPrevB1
80B6 EE81             (./Engine/Graphics):00092 [8]     4071            ldu   ,x++
80B8 ECC84A           (./Engine/Graphics):00093 [6]     4077            ldd   rsv_priority_prev_obj_1,u
80BB 2611             (./Engine/Graphics):00094 [3]     4080            bne   UDP_ChainPrevB1
                      (./Engine/Graphics):00095                         
80BD A6C849           (./Engine/Graphics):00096 [5]     4085            lda   rsv_priority_1,u
80C0 48               (./Engine/Graphics):00097 [2]     4087            lsla
80C1 108E759D         (./Engine/Graphics):00098 [4]     4091            ldy   #Tbl_Priority_First_Entry_1
80C5 31A6             (./Engine/Graphics):00099 [5]     4096            leay  a,y
80C7 ECC84C           (./Engine/Graphics):00100 [6]     4102            ldd   rsv_priority_next_obj_1,u
80CA EDA4             (./Engine/Graphics):00101 [5]     4107            std   ,y
80CC 200A             (./Engine/Graphics):00102 [3]     4110            bra   UDP_CheckPrioNextB1
                      (./Engine/Graphics):00103                                 
80CE                  (./Engine/Graphics):00104                 UDP_ChainPrevB1
80CE ECC84C           (./Engine/Graphics):00105 [6]     4116            ldd   rsv_priority_next_obj_1,u
80D1 10AEC84A         (./Engine/Graphics):00106 [7]     4123            ldy   rsv_priority_prev_obj_1,u        
80D5 EDA84C           (./Engine/Graphics):00107 [6]     4129            std   rsv_priority_next_obj_1,y        
                      (./Engine/Graphics):00108                 
80D8                  (./Engine/Graphics):00109                 UDP_CheckPrioNextB1       
80D8 ECC84C           (./Engine/Graphics):00110 [6]     4135            ldd   rsv_priority_next_obj_1,u
80DB 2611             (./Engine/Graphics):00111 [3]     4138            bne   UDP_ChainNextB1
                      (./Engine/Graphics):00112                 
80DD A6C849           (./Engine/Graphics):00113 [5]     4143            lda   rsv_priority_1,u
80E0 48               (./Engine/Graphics):00114 [2]     4145            lsla
80E1 108E75AF         (./Engine/Graphics):00115 [4]     4149            ldy   #Tbl_Priority_Last_Entry_1
80E5 31A6             (./Engine/Graphics):00116 [5]     4154            leay  a,y
80E7 ECC84A           (./Engine/Graphics):00117 [6]     4160            ldd   rsv_priority_prev_obj_1,u
80EA EDA4             (./Engine/Graphics):00118 [5]     4165            std   ,y
80EC 200A             (./Engine/Graphics):00119 [3]     4168            bra   UDP_CheckDeleteB1
                      (./Engine/Graphics):00120                                 
80EE                  (./Engine/Graphics):00121                 UDP_ChainNextB1
80EE ECC84A           (./Engine/Graphics):00122 [6]     4174            ldd   rsv_priority_prev_obj_1,u
80F1 10AEC84C         (./Engine/Graphics):00123 [7]     4181            ldy   rsv_priority_next_obj_1,u        
80F5 EDA84A           (./Engine/Graphics):00124 [6]     4187            std   rsv_priority_prev_obj_1,y
                      (./Engine/Graphics):00125                         
80F8                  (./Engine/Graphics):00126                 UDP_CheckDeleteB1
80F8 A642             (./Engine/Graphics):00127 [5]     4192            lda   render_flags,u
80FA 8440             (./Engine/Graphics):00128 [2]     4194            anda  #render_todelete_mask
80FC 270F             (./Engine/Graphics):00129 [3]     4197            beq   UDP_SetNewPrioB1
80FE A6C848           (./Engine/Graphics):00130 [5]     4202            lda   rsv_prev_render_flags_0,u
8101 2B0A             (./Engine/Graphics):00131 [3]     4205            bmi   UDP_SetNewPrioB1
8103 A6C85C           (./Engine/Graphics):00132 [5]     4210            lda   rsv_prev_render_flags_1,u
8106 2B05             (./Engine/Graphics):00133 [3]     4213            bmi   UDP_SetNewPrioB1
8108 BD845F           (./Engine/Graphics):00134 [8]     4221            jsr   ClearObj
810B 209D             (./Engine/Graphics):00135 [3]     4224            bra   UDP_CheckEndB1
                      (./Engine/Graphics):00136                         
810D                  (./Engine/Graphics):00137                 UDP_SetNewPrioB1
810D A643             (./Engine/Graphics):00138 [5]     4229            lda   priority,u
810F A7C849           (./Engine/Graphics):00139 [5]     4234            sta   rsv_priority_1,u
8112 2096             (./Engine/Graphics):00140 [3]     4237            bra   UDP_CheckEndB1
                      (C:\Users\bhrou\gi):00055                         INCLUDE "./Engine/Graphics/DrawSprites.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * DrawSprites
                      (./Engine/Graphics):00003                 * ------------
                      (./Engine/Graphics):00004                 * Subroutine to draw sprites on screen
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (back to front)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                                                            
8114                  (./Engine/Graphics):00013                 DrawSprites
                      (./Engine/Graphics):00014                 
8114                  (./Engine/Graphics):00015                 DRS_Start
8114 B673F0           (./Engine/Graphics):00016 [5]     4242            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
8117 2641             (./Engine/Graphics):00017 [3]     4245            bne   DRS_P8B1
                      (./Engine/Graphics):00018                         
8119                  (./Engine/Graphics):00019                 DRS_P8B0                                    
8119 BE7531           (./Engine/Graphics):00020 [6]     4251            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
811C 2703             (./Engine/Graphics):00021 [3]     4254            beq   DRS_P7B0
811E BD819B           (./Engine/Graphics):00022 [8]     4262            jsr   DRS_ProcessEachPriorityLevelB0   
8121                  (./Engine/Graphics):00023                 DRS_P7B0
8121 BE752F           (./Engine/Graphics):00024 [6]     4268            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
8124 2703             (./Engine/Graphics):00025 [3]     4271            beq   DRS_P6B0
8126 BD819B           (./Engine/Graphics):00026 [8]     4279            jsr   DRS_ProcessEachPriorityLevelB0  
8129                  (./Engine/Graphics):00027                 DRS_P6B0
8129 BE752D           (./Engine/Graphics):00028 [6]     4285            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
812C 2703             (./Engine/Graphics):00029 [3]     4288            beq   DRS_P5B0
812E BD819B           (./Engine/Graphics):00030 [8]     4296            jsr   DRS_ProcessEachPriorityLevelB0  
8131                  (./Engine/Graphics):00031                 DRS_P5B0
8131 BE752B           (./Engine/Graphics):00032 [6]     4302            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
8134 2703             (./Engine/Graphics):00033 [3]     4305            beq   DRS_P4B0
8136 BD819B           (./Engine/Graphics):00034 [8]     4313            jsr   DRS_ProcessEachPriorityLevelB0  
8139                  (./Engine/Graphics):00035                 DRS_P4B0
8139 BE7529           (./Engine/Graphics):00036 [6]     4319            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
813C 2703             (./Engine/Graphics):00037 [3]     4322            beq   DRS_P3B0
813E BD819B           (./Engine/Graphics):00038 [8]     4330            jsr   DRS_ProcessEachPriorityLevelB0              
8141                  (./Engine/Graphics):00039                 DRS_P3B0
8141 BE7527           (./Engine/Graphics):00040 [6]     4336            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
8144 2703             (./Engine/Graphics):00041 [3]     4339            beq   DRS_P2B0
8146 BD819B           (./Engine/Graphics):00042 [8]     4347            jsr   DRS_ProcessEachPriorityLevelB0     
8149                  (./Engine/Graphics):00043                 DRS_P2B0
8149 BE7525           (./Engine/Graphics):00044 [6]     4353            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
814C 2703             (./Engine/Graphics):00045 [3]     4356            beq   DRS_P1B0
814E BD819B           (./Engine/Graphics):00046 [8]     4364            jsr   DRS_ProcessEachPriorityLevelB0 
8151                  (./Engine/Graphics):00047                 DRS_P1B0
8151 BE7523           (./Engine/Graphics):00048 [6]     4370            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
8154 2703             (./Engine/Graphics):00049 [3]     4373            beq   DRS_rtsB0
8156 BD819B           (./Engine/Graphics):00050 [8]     4381            jsr   DRS_ProcessEachPriorityLevelB0
8159                  (./Engine/Graphics):00051                 DRS_rtsB0        
8159 39               (./Engine/Graphics):00052 [5]     4386            rts
                      (./Engine/Graphics):00053                         
815A                  (./Engine/Graphics):00054                 DRS_P8B1
815A BE75AD           (./Engine/Graphics):00055 [6]     4392            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
815D 2703             (./Engine/Graphics):00056 [3]     4395            beq   DRS_P7B1
815F BD825A           (./Engine/Graphics):00057 [8]     4403            jsr   DRS_ProcessEachPriorityLevelB1   
8162                  (./Engine/Graphics):00058                 DRS_P7B1
8162 BE75AB           (./Engine/Graphics):00059 [6]     4409            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
8165 2703             (./Engine/Graphics):00060 [3]     4412            beq   DRS_P6B1
8167 BD825A           (./Engine/Graphics):00061 [8]     4420            jsr   DRS_ProcessEachPriorityLevelB1   
816A                  (./Engine/Graphics):00062                 DRS_P6B1
816A BE75A9           (./Engine/Graphics):00063 [6]     4426            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
816D 2703             (./Engine/Graphics):00064 [3]     4429            beq   DRS_P5B1
816F BD825A           (./Engine/Graphics):00065 [8]     4437            jsr   DRS_ProcessEachPriorityLevelB1   
8172                  (./Engine/Graphics):00066                 DRS_P5B1
8172 BE75A7           (./Engine/Graphics):00067 [6]     4443            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
8175 2703             (./Engine/Graphics):00068 [3]     4446            beq   DRS_P4B1
8177 BD825A           (./Engine/Graphics):00069 [8]     4454            jsr   DRS_ProcessEachPriorityLevelB1   
817A                  (./Engine/Graphics):00070                 DRS_P4B1
817A BE75A5           (./Engine/Graphics):00071 [6]     4460            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
817D 2703             (./Engine/Graphics):00072 [3]     4463            beq   DRS_P3B1
817F BD825A           (./Engine/Graphics):00073 [8]     4471            jsr   DRS_ProcessEachPriorityLevelB1             
8182                  (./Engine/Graphics):00074                 DRS_P3B1
8182 BE75A3           (./Engine/Graphics):00075 [6]     4477            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
8185 2703             (./Engine/Graphics):00076 [3]     4480            beq   DRS_P2B1
8187 BD825A           (./Engine/Graphics):00077 [8]     4488            jsr   DRS_ProcessEachPriorityLevelB1    
818A                  (./Engine/Graphics):00078                 DRS_P2B1
818A BE75A1           (./Engine/Graphics):00079 [6]     4494            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
818D 2703             (./Engine/Graphics):00080 [3]     4497            beq   DRS_P1B1
818F BD825A           (./Engine/Graphics):00081 [8]     4505            jsr   DRS_ProcessEachPriorityLevelB1
8192                  (./Engine/Graphics):00082                 DRS_P1B1
8192 BE759F           (./Engine/Graphics):00083 [6]     4511            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
8195 2703             (./Engine/Graphics):00084 [3]     4514            beq   DRS_rtsB1
8197 BD825A           (./Engine/Graphics):00085 [8]     4522            jsr   DRS_ProcessEachPriorityLevelB1
819A                  (./Engine/Graphics):00086                 DRS_rtsB1        
819A 39               (./Engine/Graphics):00087 [5]     4527            rts
                      (./Engine/Graphics):00088                 
819B                  (./Engine/Graphics):00089                 DRS_ProcessEachPriorityLevelB0    
819B A68822           (./Engine/Graphics):00090 [5]     4532            lda   rsv_render_flags,x
819E 8404             (./Engine/Graphics):00091 [2]     4534            anda  #rsv_render_displaysprite_mask
81A0 1027007F         (./Engine/Graphics):00092 [5+?]   4539            lbeq  DRS_NextObjectB0
                      (./Engine/Graphics):00093                         
81A4 A68848           (./Engine/Graphics):00094 [5]     4544            lda   rsv_prev_render_flags_0,x
81A7 102B0078         (./Engine/Graphics):00095 [5+?]   4549            lbmi  DRS_NextObjectB0
81AB A602             (./Engine/Graphics):00096 [5]     4554            lda   render_flags,x
81AD 8404             (./Engine/Graphics):00097 [2]     4556            anda  #render_overlay_mask
81AF 260E             (./Engine/Graphics):00098 [3]     4559            bne   DRS_DrawWithoutBackupB0
81B1 A6882A           (./Engine/Graphics):00099 [5]     4564            lda   rsv_erase_nb_cell,x        
81B4 BD82EA           (./Engine/Graphics):00100 [8]     4572            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
81B7 108C0000         (./Engine/Graphics):00101 [5]     4577            cmpy  #$0000                        ; y contains cell_end of allocated space 
81BB 10270064         (./Engine/Graphics):00102 [5+?]   4582            lbeq   DRS_NextObjectB0             ; branch if no more free space
81BF                  (./Engine/Graphics):00103                 DRS_DrawWithoutBackupB0        
81BF EC8814           (./Engine/Graphics):00104 [6]     4588            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
81C2 A08825           (./Engine/Graphics):00105 [5]     4593            suba  rsv_image_center_offset,x
81C5 BD822B           (./Engine/Graphics):00106 [8]     4601            jsr   DRS_XYToAddress
81C8 EC8828           (./Engine/Graphics):00107 [6]     4607            ldd   rsv_mapping_frame,x
81CB ED883A           (./Engine/Graphics):00108 [6]     4613            std   rsv_prev_mapping_frame_0,x    ; save previous mapping_frame
81CE A6882B           (./Engine/Graphics):00109 [5]     4618            lda   rsv_page_draw_routine,x
                      (./Engine/Graphics):00110                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
81D1 BD7324           (    _SetCartPageA):00002 [8]     4626            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
81D4 BF81DD           (./Engine/Graphics):00111 [6]     4632            stx   DRS_dyn3B0+1                  ; save x reg
81D7 DEFA             (./Engine/Graphics):00112 [5]     4637            ldu   <glb_screen_location_2
81D9 AD982C           (./Engine/Graphics):00113 [11]    4648            jsr   [rsv_draw_routine,x]          ; backup background and draw sprite on working screen buffer
81DC                  (./Engine/Graphics):00114                 DRS_dyn3B0        
81DC 8E0000           (./Engine/Graphics):00115 [3]     4651            ldx   #$0000                        ; (dynamic) restore x reg
81DF EF8840           (./Engine/Graphics):00116 [6]     4657            stu   rsv_bgdata_0,x                ; store pointer to saved background data
81E2 EC8814           (./Engine/Graphics):00117 [6]     4663            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
81E5 44               (./Engine/Graphics):00118 [2]     4665            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
81E6 ED8842           (./Engine/Graphics):00119 [6]     4671            std   rsv_prev_xy_pixel_0,x         ; save previous x_pixel and y_pixel in one operation             
81E9 EC8831           (./Engine/Graphics):00120 [6]     4677            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
81EC ED8844           (./Engine/Graphics):00121 [6]     4683            std   rsv_prev_xy1_pixel_0,x        ; save as previous x' and y'        
81EF EC8833           (./Engine/Graphics):00122 [6]     4689            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
81F2 ED8846           (./Engine/Graphics):00123 [6]     4695            std   rsv_prev_xy2_pixel_0,x        ; save as previous x'' and y''
81F5 A6882A           (./Engine/Graphics):00124 [5]     4700            lda   rsv_erase_nb_cell,x
81F8 A7883C           (./Engine/Graphics):00125 [5]     4705            sta   rsv_prev_erase_nb_cell_0,x
81FB A6882E           (./Engine/Graphics):00126 [5]     4710            lda   rsv_page_erase_routine,x
81FE A7883D           (./Engine/Graphics):00127 [5]     4715            sta   rsv_prev_page_erase_routine_0,x
8201 EC882F           (./Engine/Graphics):00128 [6]     4721            ldd   rsv_erase_routine,x
8204 ED883E           (./Engine/Graphics):00129 [6]     4727            std   rsv_prev_erase_routine_0,x
8207 A68848           (./Engine/Graphics):00130 [5]     4732            lda   rsv_prev_render_flags_0,x
820A 8A80             (./Engine/Graphics):00131 [2]     4734            ora   #rsv_prev_render_onscreen_mask
820C E602             (./Engine/Graphics):00132 [5]     4739            ldb   render_flags,x
820E C504             (./Engine/Graphics):00133 [2]     4741            bitb  #render_overlay_mask
8210 2704             (./Engine/Graphics):00134 [3]     4744            beq   DRS_NoOverlayB0
8212 8A01             (./Engine/Graphics):00135 [2]     4746            ora   #rsv_prev_render_overlay_mask
8214 2002             (./Engine/Graphics):00136 [3]     4749            bra   DRS_UpdateRenderFlagB0
                      (./Engine/Graphics):00137                         
8216                  (./Engine/Graphics):00138                 DRS_NoOverlayB0
8216 84FE             (./Engine/Graphics):00139 [2]     4751            anda   #^rsv_prev_render_overlay_mask
                      (./Engine/Graphics):00140                 
8218                  (./Engine/Graphics):00141                 DRS_UpdateRenderFlagB0        
8218 A78848           (./Engine/Graphics):00142 [5]     4756            sta   rsv_prev_render_flags_0,x     ; set the onscreen flag and save overlay flag
821B A68822           (./Engine/Graphics):00143 [5]     4761            lda   rsv_render_flags,x
821E 8A80             (./Engine/Graphics):00144 [2]     4763            ora   #rsv_render_onscreen_mask     ; sprite is on screen
8220 A78822           (./Engine/Graphics):00145 [5]     4768            sta   rsv_render_flags,x
                      (./Engine/Graphics):00146                         
8223                  (./Engine/Graphics):00147                 DRS_NextObjectB0        
8223 AE8838           (./Engine/Graphics):00148 [6]     4774            ldx   rsv_priority_next_obj_0,x
8226 1026FF71         (./Engine/Graphics):00149 [5+?]   4779            lbne  DRS_ProcessEachPriorityLevelB0   
822A 39               (./Engine/Graphics):00150 [5]     4784            rts
                      (./Engine/Graphics):00151                 
                      (./Engine/Graphics):00152                 ********************************************************************************
                      (./Engine/Graphics):00153                 * x_pixel and y_pixel coordinate system
                      (./Engine/Graphics):00154                 * x coordinates:
                      (./Engine/Graphics):00155                 *    - off-screen left 00-2F (0-47)
                      (./Engine/Graphics):00156                 *    - on screen 30-CF (48-207)
                      (./Engine/Graphics):00157                 *    - off-screen right D0-FF (208-255)
                      (./Engine/Graphics):00158                 *
                      (./Engine/Graphics):00159                 * y coordinates:
                      (./Engine/Graphics):00160                 *    - off-screen top 00-1B (0-27)
                      (./Engine/Graphics):00161                 *    - on screen 1C-E3 (28-227)
                      (./Engine/Graphics):00162                 *    - off-screen bottom E4-FF (228-255)
                      (./Engine/Graphics):00163                 ********************************************************************************
                      (./Engine/Graphics):00164                 
822B                  (./Engine/Graphics):00165                 DRS_XYToAddress
822B 8030             (./Engine/Graphics):00166 [2]     4786            suba  #$30
822D 2403             (./Engine/Graphics):00167 [3]     4789            bcc   DRS_XYToAddressPositive
822F 8060             (./Engine/Graphics):00168 [2]     4791            suba  #$60                          ; get x position one line up, skipping (160-255)
8231 5A               (./Engine/Graphics):00169 [2]     4793            decb
8232                  (./Engine/Graphics):00170                 DRS_XYToAddressPositive        
8232 C01C             (./Engine/Graphics):00171 [2]     4795            subb  #$1C                          ; TODO same thing as x for negative case
8234 44               (./Engine/Graphics):00172 [2]     4797            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
8235 44               (./Engine/Graphics):00173 [2]     4799            lsra                                ; x=x/2, RAMA RAMB enterlace  
8236 2511             (./Engine/Graphics):00174 [3]     4802            bcs   DRS_XYToAddressRAM2First      ; Branch if write must begin in RAM2 first
8238                  (./Engine/Graphics):00175                 DRS_XYToAddressRAM1First
8238 B78240           (./Engine/Graphics):00176 [5]     4807            sta   DRS_dyn1+2
823B 8628             (./Engine/Graphics):00177 [2]     4809            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
823D 3D               (./Engine/Graphics):00178 [11]    4820            mul
823E                  (./Engine/Graphics):00179                 DRS_dyn1        
823E C3C000           (./Engine/Graphics):00180 [4]     4824            addd  #$C000                        ; (dynamic)
8241 DDFA             (./Engine/Graphics):00181 [5]     4829            std   <glb_screen_location_2
8243 832000           (./Engine/Graphics):00182 [4]     4833            subd  #$2000
8246 DDFC             (./Engine/Graphics):00183 [5]     4838            std   <glb_screen_location_1     
8248 39               (./Engine/Graphics):00184 [5]     4843            rts
8249                  (./Engine/Graphics):00185                 DRS_XYToAddressRAM2First
8249 B78251           (./Engine/Graphics):00186 [5]     4848            sta   DRS_dyn2+2
824C 8628             (./Engine/Graphics):00187 [2]     4850            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
824E 3D               (./Engine/Graphics):00188 [11]    4861            mul
824F                  (./Engine/Graphics):00189                 DRS_dyn2        
824F C3A000           (./Engine/Graphics):00190 [4]     4865            addd  #$A000                        ; (dynamic)
8252 DDFA             (./Engine/Graphics):00191 [5]     4870            std   <glb_screen_location_2
8254 C32001           (./Engine/Graphics):00192 [4]     4874            addd  #$2001
8257 DDFC             (./Engine/Graphics):00193 [5]     4879            std   <glb_screen_location_1
8259 39               (./Engine/Graphics):00194 [5]     4884            rts
                      (./Engine/Graphics):00195                         
825A                  (./Engine/Graphics):00196                 DRS_ProcessEachPriorityLevelB1
825A A68822           (./Engine/Graphics):00197 [5]     4889            lda   rsv_render_flags,x
825D 8404             (./Engine/Graphics):00198 [2]     4891            anda  #rsv_render_displaysprite_mask
825F 1027007F         (./Engine/Graphics):00199 [5+?]   4896            lbeq  DRS_NextObjectB1
                      (./Engine/Graphics):00200                         
8263 A6885C           (./Engine/Graphics):00201 [5]     4901            lda   rsv_prev_render_flags_1,x
8266 102B0078         (./Engine/Graphics):00202 [5+?]   4906            lbmi  DRS_NextObjectB1
826A A602             (./Engine/Graphics):00203 [5]     4911            lda   render_flags,x
826C 8404             (./Engine/Graphics):00204 [2]     4913            anda  #render_overlay_mask
826E 260E             (./Engine/Graphics):00205 [3]     4916            bne   DRS_DrawWithoutBackupB1
8270 A6882A           (./Engine/Graphics):00206 [5]     4921            lda   rsv_erase_nb_cell,x        
8273 BD82EA           (./Engine/Graphics):00207 [8]     4929            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
8276 108C0000         (./Engine/Graphics):00208 [5]     4934            cmpy  #$0000                        ; y contains cell_end of allocated space
827A 10270064         (./Engine/Graphics):00209 [5+?]   4939            lbeq   DRS_NextObjectB1             ; branch if no more free space
827E                  (./Engine/Graphics):00210                 DRS_DrawWithoutBackupB1        
827E EC8814           (./Engine/Graphics):00211 [6]     4945            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
8281 A08825           (./Engine/Graphics):00212 [5]     4950            suba  rsv_image_center_offset,x
8284 BD822B           (./Engine/Graphics):00213 [8]     4958            jsr   DRS_XYToAddress
8287 EC8828           (./Engine/Graphics):00214 [6]     4964            ldd   rsv_mapping_frame,x
828A ED884E           (./Engine/Graphics):00215 [6]     4970            std   rsv_prev_mapping_frame_1,x    ; save previous mapping_frame
828D A6882B           (./Engine/Graphics):00216 [5]     4975            lda   rsv_page_draw_routine,x
                      (./Engine/Graphics):00217                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
8290 BD7324           (    _SetCartPageA):00002 [8]     4983            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8293 BF829C           (./Engine/Graphics):00218 [6]     4989            stx   DRS_dyn3B1+1                  ; save x reg
8296 DEFA             (./Engine/Graphics):00219 [5]     4994            ldu   <glb_screen_location_2
8298 AD982C           (./Engine/Graphics):00220 [11]    5005            jsr   [rsv_draw_routine,x]
829B                  (./Engine/Graphics):00221                 DRS_dyn3B1        
829B 8E0000           (./Engine/Graphics):00222 [3]     5008            ldx   #$0000                        ; (dynamic) restore x reg
829E EF8854           (./Engine/Graphics):00223 [6]     5014            stu   rsv_bgdata_1,x                ; store pointer to saved background data
82A1 EC8814           (./Engine/Graphics):00224 [6]     5020            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
82A4 44               (./Engine/Graphics):00225 [2]     5022            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
82A5 ED8856           (./Engine/Graphics):00226 [6]     5028            std   rsv_prev_xy_pixel_1,x         ; save previous x_pixel and y_pixel in one operation         
82A8 EC8831           (./Engine/Graphics):00227 [6]     5034            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
82AB ED8858           (./Engine/Graphics):00228 [6]     5040            std   rsv_prev_xy1_pixel_1,x        ; save as previous x' and y'        
82AE EC8833           (./Engine/Graphics):00229 [6]     5046            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
82B1 ED885A           (./Engine/Graphics):00230 [6]     5052            std   rsv_prev_xy2_pixel_1,x        ; save as previous x'' and y''
82B4 A6882A           (./Engine/Graphics):00231 [5]     5057            lda   rsv_erase_nb_cell,x
82B7 A78850           (./Engine/Graphics):00232 [5]     5062            sta   rsv_prev_erase_nb_cell_1,x
82BA A6882E           (./Engine/Graphics):00233 [5]     5067            lda   rsv_page_erase_routine,x
82BD A78851           (./Engine/Graphics):00234 [5]     5072            sta   rsv_prev_page_erase_routine_1,x
82C0 EC882F           (./Engine/Graphics):00235 [6]     5078            ldd   rsv_erase_routine,x
82C3 ED8852           (./Engine/Graphics):00236 [6]     5084            std   rsv_prev_erase_routine_1,x                        
82C6 A6885C           (./Engine/Graphics):00237 [5]     5089            lda   rsv_prev_render_flags_1,x
82C9 8A80             (./Engine/Graphics):00238 [2]     5091            ora   #rsv_prev_render_onscreen_mask
82CB E602             (./Engine/Graphics):00239 [5]     5096            ldb   render_flags,x
82CD C504             (./Engine/Graphics):00240 [2]     5098            bitb  #render_overlay_mask
82CF 2704             (./Engine/Graphics):00241 [3]     5101            beq   DRS_NoOverlayB1
82D1 8A01             (./Engine/Graphics):00242 [2]     5103            ora   #rsv_prev_render_overlay_mask
82D3 2002             (./Engine/Graphics):00243 [3]     5106            bra   DRS_UpdateRenderFlagB1
                      (./Engine/Graphics):00244                         
82D5                  (./Engine/Graphics):00245                 DRS_NoOverlayB1
82D5 84FE             (./Engine/Graphics):00246 [2]     5108            anda   #^rsv_prev_render_overlay_mask
                      (./Engine/Graphics):00247                 
82D7                  (./Engine/Graphics):00248                 DRS_UpdateRenderFlagB1
82D7 A7885C           (./Engine/Graphics):00249 [5]     5113            sta   rsv_prev_render_flags_1,x     ; set the onscreen flag and save overlay flag
82DA A68822           (./Engine/Graphics):00250 [5]     5118            lda   rsv_render_flags,x
82DD 8A80             (./Engine/Graphics):00251 [2]     5120            ora   #rsv_render_onscreen_mask     ; sprite is on screen
82DF A78822           (./Engine/Graphics):00252 [5]     5125            sta   rsv_render_flags,x        
                      (./Engine/Graphics):00253                                 
82E2                  (./Engine/Graphics):00254                 DRS_NextObjectB1        
82E2 AE884C           (./Engine/Graphics):00255 [6]     5131            ldx   rsv_priority_next_obj_1,x
82E5 1026FF71         (./Engine/Graphics):00256 [5+?]   5136            lbne  DRS_ProcessEachPriorityLevelB1   
82E9 39               (./Engine/Graphics):00257 [5]     5141            rts
                      (C:\Users\bhrou\gi):00056                         INCLUDE "./Engine/Graphics/BgBufferAlloc.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * BgBufferAlloc
                      (./Engine/Graphics):00003                 * -------------
                      (./Engine/Graphics):00004                 * Subroutine to allocate memory into background buffer
                      (./Engine/Graphics):00005                 *
                      (./Engine/Graphics):00006                 * input  REG : [a] number of requested cells
                      (./Engine/Graphics):00007                 * output REG : [y] cell_end or 0000 if no more space
                      (./Engine/Graphics):00008                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                 
82EA                  (./Engine/Graphics):00010                 BgBufferAlloc
82EA 3414             (./Engine/Graphics):00011 [8]     5149            pshs  b,x
82EC F673F0           (./Engine/Graphics):00012 [5]     5154            ldb   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
82EF 2609             (./Engine/Graphics):00013 [3]     5157            bne   BBA1                          ; branch if buffer 1 is current
                      (./Engine/Graphics):00014                         
82F1                  (./Engine/Graphics):00015                 BBA0        
82F1 8E7A3F           (./Engine/Graphics):00016 [3]     5160            ldx   #Lst_FreeCellFirstEntry_0     ; save previous cell.next_entry into x for future update
82F4 10BE7A3F         (./Engine/Graphics):00017 [7]     5167            ldy   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
82F8 2007             (./Engine/Graphics):00018 [3]     5170            bra   BBA_Next
                      (./Engine/Graphics):00019                         
82FA                  (./Engine/Graphics):00020                 BBA1        
82FA 8E7C07           (./Engine/Graphics):00021 [3]     5173            ldx   #Lst_FreeCellFirstEntry_1     ; save previous cell.next_entry into x for future update
82FD 10BE7C07         (./Engine/Graphics):00022 [7]     5180            ldy   Lst_FreeCellFirstEntry_1      ; load first cell for screen buffer 1
                      (./Engine/Graphics):00023                         
8301                  (./Engine/Graphics):00024                 BBA_Next
8301 2740             (./Engine/Graphics):00025 [3]     5183            beq   BBA_rts                       ; loop thru all entries, branch if no more free space
8303 A1A4             (./Engine/Graphics):00026 [4]     5187            cmpa  nb_cells,y                    ; compare current nb of free cells with requested
8305 2709             (./Engine/Graphics):00027 [3]     5190            beq   BBA_FitCell                   ; branch if current free cells is the same size than requested
8307 231D             (./Engine/Graphics):00028 [3]     5193            bls   BBA_DivideCell                ; branch if current free cells are greater than requested
8309 3025             (./Engine/Graphics):00029 [5]     5198            leax  next_entry,y                  ; save previous cell.next_entry into x for future update        
830B 10AE25           (./Engine/Graphics):00030 [7]     5205            ldy   next_entry,y                  ; move to next entry
830E 20F1             (./Engine/Graphics):00031 [3]     5208            bra   BBA_Next
                      (./Engine/Graphics):00032                           
8310                  (./Engine/Graphics):00033                 BBA_FitCell
8310 EC25             (./Engine/Graphics):00034 [6]     5214            ldd   next_entry,y
8312 ED84             (./Engine/Graphics):00035 [5]     5219            std   ,x                            ; chain previous cell with next cell
8314 EC23             (./Engine/Graphics):00036 [6]     5225            ldd   cell_end,y                    ; return cell_end
8316 FD8341           (./Engine/Graphics):00037 [6]     5231            std   cell_end_return+2
                      (./Engine/Graphics):00038                 
8319 CC0000           (./Engine/Graphics):00039 [3]     5234            ldd   #0
831C A7A4             (./Engine/Graphics):00040 [4]     5238            sta   nb_cells,y                    ; clean current cell
831E ED21             (./Engine/Graphics):00041 [6]     5244            std   cell_start,y                  ;
8320 ED23             (./Engine/Graphics):00042 [6]     5250            std   cell_end,y                    ;
8322 ED25             (./Engine/Graphics):00043 [6]     5256            std   next_entry,y                  ;
                      (./Engine/Graphics):00044                 
8324 2019             (./Engine/Graphics):00045 [3]     5259            bra   cell_end_return
                      (./Engine/Graphics):00046                         
8326                  (./Engine/Graphics):00047                 BBA_DivideCell
8326 B7832C           (./Engine/Graphics):00048 [5]     5264            sta   BBA_dyn+1
8329 E6A4             (./Engine/Graphics):00049 [4]     5268            ldb   nb_cells,y
832B                  (./Engine/Graphics):00050                 BBA_dyn
832B C000             (./Engine/Graphics):00051 [2]     5270            subb  #$00                          ; substract requested cells to nb_cells
832D E7A4             (./Engine/Graphics):00052 [4]     5274            stb   nb_cells,y                    ; update nb_cells
                      (./Engine/Graphics):00053                         
832F C640             (./Engine/Graphics):00054 [2]     5276            ldb   #cell_size
8331 3D               (./Engine/Graphics):00055 [11]    5287            mul
                      (./Engine/Graphics):00056                         _negd
8332 40               (            _negd):00001 [2]     5289            nega
8333 50               (            _negd):00002 [2]     5291            negb
8334 8200             (            _negd):00003 [2]     5293            sbca  #0
8336 AE23             (./Engine/Graphics):00057 [6]     5299            ldx   cell_end,y
8338 BF8341           (./Engine/Graphics):00058 [6]     5305            stx   cell_end_return+2        
833B 308B             (./Engine/Graphics):00059 [8]     5313            leax  d,x                           ; cell_end = cell_end - (number of requested cells * nb of bytes in a cell)
833D AF23             (./Engine/Graphics):00060 [6]     5319            stx   cell_end,y                    ; update cell_end
833F                  (./Engine/Graphics):00061                 cell_end_return        
833F 108E0000         (./Engine/Graphics):00062 [4]     5323            ldy   #$0000
8343                  (./Engine/Graphics):00063                 BBA_rts
8343 3594             (./Engine/Graphics):00064 [10]    5333            puls  b,x,pc
                      (C:\Users\bhrou\gi):00057                         INCLUDE "./Engine/Joypad/ReadJoypads.asm"
                      (./Engine/Joypad/R):00001                 ********************************************************************************
                      (./Engine/Joypad/R):00002                 * Get joystick parameters (Version 1)
                      (./Engine/Joypad/R):00003                 *
                      (./Engine/Joypad/R):00004                 * Read Joypads and store result as Press and Help values :
                      (./Engine/Joypad/R):00005                 * One byte with direction for player 1 and player 2
                      (./Engine/Joypad/R):00006                 * One byte with button for player 1 and player 2
                      (./Engine/Joypad/R):00007                 *
                      (./Engine/Joypad/R):00008                 * Note : to have one byte for each player, use V2
                      (./Engine/Joypad/R):00009                 * ------------------------------------------------------------------------------
                      (./Engine/Joypad/R):00010                 *
                      (./Engine/Joypad/R):00011                 * Joypads Direction
                      (./Engine/Joypad/R):00012                 * -----------------
                      (./Engine/Joypad/R):00013                 * Register: $E7CC (8bits)
                      (./Engine/Joypad/R):00014                 *
                      (./Engine/Joypad/R):00015                 * Joypad2     Joypad1
                      (./Engine/Joypad/R):00016                 * 1111        1111 (0: press | 1: release)  
                      (./Engine/Joypad/R):00017                 * ||||_Up     ||||_Up
                      (./Engine/Joypad/R):00018                 * |||__Down   |||__Down
                      (./Engine/Joypad/R):00019                 * ||___Left   ||___Left
                      (./Engine/Joypad/R):00020                 * |____Right  |____Right
                      (./Engine/Joypad/R):00021                 *
                      (./Engine/Joypad/R):00022                 * Joypads Bouttons
                      (./Engine/Joypad/R):00023                 * ----------------
                      (./Engine/Joypad/R):00024                 * Register: $E7CD (8bits)
                      (./Engine/Joypad/R):00025                 *
                      (./Engine/Joypad/R):00026                 *   [------] 6 bits DAC
                      (./Engine/Joypad/R):00027                 * 11 001100 (0: press | 1: release) 
                      (./Engine/Joypad/R):00028                 * ||   ||
                      (./Engine/Joypad/R):00029                 * ||   ||_ Btn B Joypad1
                      (./Engine/Joypad/R):00030                 * ||   |__ Btn B Joypad2
                      (./Engine/Joypad/R):00031                 * ||
                      (./Engine/Joypad/R):00032                 * ||______ Btn A Joypad1
                      (./Engine/Joypad/R):00033                 * |_______ Btn A Joypad2
                      (./Engine/Joypad/R):00034                 *
                      (./Engine/Joypad/R):00035                 * Result values: Joypads_Held, Joypads_Press
                      (./Engine/Joypad/R):00036                 * -----------------------------------------------
                      (./Engine/Joypad/R):00037                 * (16 bits)
                      (./Engine/Joypad/R):00038                 * Joypad2     Joypad1                                                          
                      (./Engine/Joypad/R):00039                 * 0000        0000 (0: release | 1: press) 00 000000 (0: release | 1: press)  
                      (./Engine/Joypad/R):00040                 * ||||_Up     ||||_Up                       ||  ||         
                      (./Engine/Joypad/R):00041                 * |||__Down   |||__Down                     ||  ||_ Btn B Joypad1
                      (./Engine/Joypad/R):00042                 * ||___Left   ||___Left                     ||  |__ Btn B Joypad2                   
                      (./Engine/Joypad/R):00043                 * |____Right  |____Right                    ||_____ Btn A Joypad1                 
                      (./Engine/Joypad/R):00044                 *                                           |______ Btn A Joypad2
                      (./Engine/Joypad/R):00045                 ********************************************************************************
                      (./Engine/Joypad/R):00046                 
                      (./Engine/Joypad/R):00047                 ; dedicated mask
     0001             (./Engine/Joypad/R):00048                 c1_button_up_mask            equ   %00000001 
     0002             (./Engine/Joypad/R):00049                 c1_button_down_mask          equ   %00000010 
     0004             (./Engine/Joypad/R):00050                 c1_button_left_mask          equ   %00000100 
     0008             (./Engine/Joypad/R):00051                 c1_button_right_mask         equ   %00001000 
     0040             (./Engine/Joypad/R):00052                 c1_button_A_mask             equ   %01000000 
     0004             (./Engine/Joypad/R):00053                 c1_button_B_mask             equ   %00000100 
                      (./Engine/Joypad/R):00054                 
     0010             (./Engine/Joypad/R):00055                 c2_button_up_mask            equ   %00010000 
     0020             (./Engine/Joypad/R):00056                 c2_button_down_mask          equ   %00100000  
     0040             (./Engine/Joypad/R):00057                 c2_button_left_mask          equ   %01000000 
     0080             (./Engine/Joypad/R):00058                 c2_button_right_mask         equ   %10000000 
     0080             (./Engine/Joypad/R):00059                 c2_button_A_mask             equ   %10000000 
     0008             (./Engine/Joypad/R):00060                 c2_button_B_mask             equ   %00001000 
                      (./Engine/Joypad/R):00061                 
                      (./Engine/Joypad/R):00062                 ; common mask
     0011             (./Engine/Joypad/R):00063                 c_button_up_mask             equ   %00010001 
     0022             (./Engine/Joypad/R):00064                 c_button_down_mask           equ   %00100010 
     0044             (./Engine/Joypad/R):00065                 c_button_left_mask           equ   %01000100 
     0088             (./Engine/Joypad/R):00066                 c_button_right_mask          equ   %10001000 
     00C0             (./Engine/Joypad/R):00067                 c_button_A_mask              equ   %11000000 
     000C             (./Engine/Joypad/R):00068                 c_button_B_mask              equ   %00001100 
                      (./Engine/Joypad/R):00069                 
                      (./Engine/Joypad/R):00070                 ; player mask
     000F             (./Engine/Joypad/R):00071                 c1_dpad                      equ   %00001111 
     00F0             (./Engine/Joypad/R):00072                 c2_dpad                      equ   %11110000
     0044             (./Engine/Joypad/R):00073                 c1_butn                      equ   %01000100 
     0088             (./Engine/Joypad/R):00074                 c2_butn                      equ   %10001000 
                      (./Engine/Joypad/R):00075                 
8345                  (./Engine/Joypad/R):00076                 Joypads_Read
8345 00               (./Engine/Joypad/R):00077                 Dpad_Read                    fcb   $00
8346 00               (./Engine/Joypad/R):00078                 Fire_Read                    fcb   $00
                      (./Engine/Joypad/R):00079                    
8347                  (./Engine/Joypad/R):00080                 Joypads
8347                  (./Engine/Joypad/R):00081                 Joypads_Held                           
8347 00               (./Engine/Joypad/R):00082                 Dpad_Held                    fcb   $00 
8348 00               (./Engine/Joypad/R):00083                 Fire_Held                    fcb   $00 
8349                  (./Engine/Joypad/R):00084                 Joypads_Press                          
8349 00               (./Engine/Joypad/R):00085                 Dpad_Press                   fcb   $00 
834A 00               (./Engine/Joypad/R):00086                 Fire_Press                   fcb   $00 
                      (./Engine/Joypad/R):00087                 
                      (./Engine/Joypad/R):00088                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Joypad/R):00089                                                        *; Subroutine to read joypad input, and send it to the RAM
                      (./Engine/Joypad/R):00090                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Joypad/R):00091                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Joypad/R):00092                                                        *
                      (./Engine/Joypad/R):00093                                                        *; sub_111C:
834B                  (./Engine/Joypad/R):00094                 ReadJoypads                            *ReadJoypads:
                      (./Engine/Joypad/R):00095                                                        *    lea (Ctrl_1).w,a0         ; address where joypad states are written
                      (./Engine/Joypad/R):00096                                                        *    lea (HW_Port_1_Data).l,a1 ; first joypad port
                      (./Engine/Joypad/R):00097                                                        *    bsr.s   Joypad_Read       ; do the first joypad
                      (./Engine/Joypad/R):00098                                                        *    addq.w  #2,a1             ; do the second joypad
                      (./Engine/Joypad/R):00099                                                        *
                      (./Engine/Joypad/R):00100                                                        *; sub_112A:
                      (./Engine/Joypad/R):00101                                                        *Joypad_Read:
                      (./Engine/Joypad/R):00102                                                        *    move.b  #0,(a1)           ; Poll controller data port
                      (./Engine/Joypad/R):00103                                                        *    nop
                      (./Engine/Joypad/R):00104                                                        *    nop
                      (./Engine/Joypad/R):00105                                                        *    move.b  (a1),d0           ; Get controller port data (start/A)
                      (./Engine/Joypad/R):00106                                                        *    lsl.b   #2,d0
                      (./Engine/Joypad/R):00107                                                        *    andi.b  #$C0,d0
                      (./Engine/Joypad/R):00108                                                        *    move.b  #$40,(a1)         ; Poll controller data port again
                      (./Engine/Joypad/R):00109                                                        *    nop
                      (./Engine/Joypad/R):00110                                                        *    nop
                      (./Engine/Joypad/R):00111                                                        *    move.b  (a1),d1           ; Get controller port data (B/C/Dpad)
                      (./Engine/Joypad/R):00112                                                        *    andi.b  #$3F,d1
                      (./Engine/Joypad/R):00113                                                        *    or.b    d1,d0             ; Fuse together into one controller bit array
834B FCE7CC           (./Engine/Joypad/R):00114 [6]     5339            ldd   $E7CC
834E 43               (./Engine/Joypad/R):00115 [2]     5341            coma
834F 53               (./Engine/Joypad/R):00116 [2]     5343            comb                           *    not.b   d0
8350 FD8345           (./Engine/Joypad/R):00117 [6]     5349            std   Joypads_Read        
8353 FC8347           (./Engine/Joypad/R):00118 [6]     5355            ldd   Joypads_Held             *    move.b  (a0),d1           ; Get held button data
8356 B88345           (./Engine/Joypad/R):00119 [5]     5360            eora  Dpad_Read                *    eor.b   d0,d1             ; Toggle off buttons that are being held                       
8359 F88346           (./Engine/Joypad/R):00120 [5]     5365            eorb  Fire_Read
                      (./Engine/Joypad/R):00121                                                        *    move.b  d0,(a0)+          ; Put raw controller input (for held buttons) in F604/F606
835C B48345           (./Engine/Joypad/R):00122 [5]     5370            anda  Dpad_Read                *    and.b   d0,d1
835F F48346           (./Engine/Joypad/R):00123 [5]     5375            andb  Fire_Read
8362 FD8349           (./Engine/Joypad/R):00124 [6]     5381            std   Joypads_Press            *    move.b  d1,(a0)+          ; Put pressed controller input in F605/F607
8365 FC8345           (./Engine/Joypad/R):00125 [6]     5387            ldd   Joypads_Read
8368 FD8347           (./Engine/Joypad/R):00126 [6]     5393            std   Joypads_Held
836B 39               (./Engine/Joypad/R):00127 [5]     5398            rts                            *    rts
                      (./Engine/Joypad/R):00128                                                        *; End of function Joypad_Read
                      (C:\Users\bhrou\gi):00058                         INCLUDE "./Engine/ObjectManagement/RunObjects.asm"
                      (./Engine/ObjectMa):00001                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00002                 * RunObjects
                      (./Engine/ObjectMa):00003                 * ------------
                      (./Engine/ObjectMa):00004                 * Subroutine to run objects code
                      (./Engine/ObjectMa):00005                 *
                      (./Engine/ObjectMa):00006                 * input REG : none
                      (./Engine/ObjectMa):00007                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00008                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00009                                                             *; This runs the code of all the objects that are in Object_RAM
                      (./Engine/ObjectMa):00010                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00011                                                             *
                      (./Engine/ObjectMa):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00013                                                             *
                      (./Engine/ObjectMa):00014                                                             *; sub_15F9C: ObjectsLoad:
836C                  (./Engine/ObjectMa):00015                 RunObjects                                  *RunObjects:
                      (./Engine/ObjectMa):00016                                                             *    tst.b   (Teleport_flag).w
                      (./Engine/ObjectMa):00017                                                             *    bne.s   RunObjects_End  ; rts
836C CE612A           (./Engine/ObjectMa):00018 [3]     5401            ldu   #Object_RAM                   *    lea (Object_RAM).w,a0 ; a0=object
836F 2017             (./Engine/ObjectMa):00019 [3]     5404            bra   am_RunNextObject
                      (./Engine/ObjectMa):00020                                                             *    moveq   #(Dynamic_Object_RAM_End-Object_RAM)/object_size-1,d7 ; run the first $80 objects out of levels
                      (./Engine/ObjectMa):00021                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00022                                                             *    cmpi.b  #GameModeID_Demo,(Game_Mode).w  ; demo mode?
                      (./Engine/ObjectMa):00023                                                             *    beq.s   +   ; if in a level in a demo, branch
                      (./Engine/ObjectMa):00024                                                             *    cmpi.b  #GameModeID_Level,(Game_Mode).w ; regular level mode?
                      (./Engine/ObjectMa):00025                                                             *    bne.s   RunObject ; if not in a level, branch to RunObject
8371                  (./Engine/ObjectMa):00026                 RunObjects_01                               *+
                      (./Engine/ObjectMa):00027                                                             *    move.w  #(Object_RAM_End-Object_RAM)/object_size-1,d7   ; run the first $90 objects in levels
                      (./Engine/ObjectMa):00028                                                             *    tst.w   (Two_player_mode).w
                      (./Engine/ObjectMa):00029                                                             *    bne.s   RunObject ; if in 2 player competition mode, branch to RunObject
                      (./Engine/ObjectMa):00030                                                             *
                      (./Engine/ObjectMa):00031                         ;tst   glb_MainCharacter_Is_Dead     *    cmpi.b  #6,(MainCharacter+routine).w
                      (./Engine/ObjectMa):00032                         ;bne   RunObjectsWhenPlayerIsDead    *    bhs.s   RunObjectsWhenPlayerIsDead ; if dead, branch
                      (./Engine/ObjectMa):00033                                                             *    ; continue straight to RunObject
                      (./Engine/ObjectMa):00034                                                             *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00035                                                             *
                      (./Engine/ObjectMa):00036                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00037                                                             *; This is THE place where each individual object's code gets called from
                      (./Engine/ObjectMa):00038                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00039                                                             *
                      (./Engine/ObjectMa):00040                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00041                                                             *
                      (./Engine/ObjectMa):00042                                                             *; sub_15FCC:
8371                  (./Engine/ObjectMa):00043                 RunObject                                   *RunObject:
8371 E6C4             (./Engine/ObjectMa):00044 [4]     5408            ldb   id,u                          *    move.b  id(a0),d0   ; get the object's ID
8373 2710             (./Engine/ObjectMa):00045 [3]     5411            beq   RunNextObject                 *    beq.s   RunNextObject ; if it's obj00, skip it
                      (./Engine/ObjectMa):00046                 
8375 8E96E5           (./Engine/ObjectMa):00047 [3]     5414            ldx   #Obj_Index_Page
8378 3A               (./Engine/ObjectMa):00048 [3]     5417            abx
8379 A684             (./Engine/ObjectMa):00049 [4]     5421            lda   ,x                            ; page memoire
                      (./Engine/ObjectMa):00050                         _SetCartPageA                       ; selection de la page en RAM (0000-3FFF)
                      (    _SetCartPageA):00001                  IFDEF T2
837B BD7324           (    _SetCartPageA):00002 [8]     5429            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
837E 58               (./Engine/ObjectMa):00051 [2]     5431            aslb                                *    add.w   d0,d0
                      (./Engine/ObjectMa):00052                                                             *    add.w   d0,d0   ; d0 = object ID * 4
837F 8E96EB           (./Engine/ObjectMa):00053 [3]     5434            ldx   #Obj_Index_Address            *    movea.l Obj_Index-4(pc,d0.w),a1 ; load the address of the object's code
8382 3A               (./Engine/ObjectMa):00054 [3]     5437            abx
8383 AD94             (./Engine/ObjectMa):00055 [10]    5447            jsr   [,x]                          *    jsr (a1)    ; dynamic call! to one of the the entries in Obj_Index
                      (./Engine/ObjectMa):00056                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00057                                                             *
                      (./Engine/ObjectMa):00058                                                             *; loc_15FDC:
8385                  (./Engine/ObjectMa):00059                 RunNextObject                               *RunNextObject:
8385 33C86B           (./Engine/ObjectMa):00060 [5]     5452            leau  next_object,u                 *    lea next_object(a0),a0 ; load 0bj address
8388                  (./Engine/ObjectMa):00061                 am_RunNextObject                            
8388 11837323         (./Engine/ObjectMa):00062 [5]     5457            cmpu  #Object_RAM_End               *    dbf d7,RunObject
838C 26E3             (./Engine/ObjectMa):00063 [3]     5460            bne   RunObject                     *; return_15FE4:
838E                  (./Engine/ObjectMa):00064                 RunObjects_End                              *RunObjects_End:
838E 39               (./Engine/ObjectMa):00065 [5]     5465            rts                                 *    rts
                      (./Engine/ObjectMa):00066                                                             *
                      (./Engine/ObjectMa):00067                                                             *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00068                                                             *; this skips certain objects to make enemies and things pause when Sonic dies
                      (./Engine/ObjectMa):00069                                                             *; loc_15FE6:
838F                  (./Engine/ObjectMa):00070                 RunObjectsWhenPlayerIsDead                  *RunObjectsWhenPlayerIsDead:
                      (./Engine/ObjectMa):00071                         ;ldu   #Reserved_Object_RAM
                      (./Engine/ObjectMa):00072                         ;ldx   #Reserved_Object_RAM_End
                      (./Engine/ObjectMa):00073                         ;stx   am_RunNextObject+2            *    moveq   #(Reserved_Object_RAM_End-Reserved_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00074                         ;bsr   RunObject                     *    bsr.s   RunObject   ; run the first $10 objects normally
                      (./Engine/ObjectMa):00075                                                             *    moveq   #(Dynamic_Object_RAM_End-Dynamic_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00076                                                             *    bsr.s   RunObjectDisplayOnly ; all objects in this range are paused      
                      (./Engine/ObjectMa):00077                         ;ldu   #LevelOnly_Object_RAM 
                      (./Engine/ObjectMa):00078                         ;ldx   #LevelOnly_Object_RAM_End
                      (./Engine/ObjectMa):00079                         ;stx   am_RunNextObject+2            *    moveq   #(LevelOnly_Object_RAM_End-LevelOnly_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00080                         ;bsr   RunObject                     *    bra.s   RunObject   ; run the last $10 objects normally
                      (./Engine/ObjectMa):00081                                                             *
                      (./Engine/ObjectMa):00082                         ;ldx   #Object_RAM_End               * repositionne la fin du RunObject avec sa valeur par d�faut
                      (./Engine/ObjectMa):00083                         ;stx   am_RunNextObject+2
                      (./Engine/ObjectMa):00084                         ;rts            
                      (./Engine/ObjectMa):00085                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00086                                                             *
                      (./Engine/ObjectMa):00087                                                             *; sub_15FF2:
                      (./Engine/ObjectMa):00088                                                             *RunObjectDisplayOnly:
                      (./Engine/ObjectMa):00089                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00090                                                             *    move.b  id(a0),d0   ; get the object's ID
                      (./Engine/ObjectMa):00091                                                             *    beq.s   +   ; if it's obj00, skip it
                      (./Engine/ObjectMa):00092                                                             *    tst.b   render_flags(a0)    ; should we render it?
                      (./Engine/ObjectMa):00093                                                             *    bpl.s   +           ; if not, skip it
                      (./Engine/ObjectMa):00094                                                             *    bsr.w   DisplaySprite
                      (./Engine/ObjectMa):00095                                                             *+
                      (./Engine/ObjectMa):00096                                                             *    lea next_object(a0),a0 ; load 0bj address
                      (./Engine/ObjectMa):00097                                                             *    dbf d7,RunObjectDisplayOnly
                      (./Engine/ObjectMa):00098                                                             
                      (./Engine/ObjectMa):00099                                                             *    rts
                      (./Engine/ObjectMa):00100                                                             *; End of function RunObjectDisplayOnly
                      (./Engine/ObjectMa):00101                                                             *
                      (./Engine/ObjectMa):00102                                                             *; ===========================================================================
                      (C:\Users\bhrou\gi):00059                         INCLUDE "./Engine/ObjectManagement/DeleteObject.asm"
                      (./Engine/ObjectMa):00001                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00002                 * DeleteObject
                      (./Engine/ObjectMa):00003                 * ------------
                      (./Engine/ObjectMa):00004                 * Subroutine to delete an object.
                      (./Engine/ObjectMa):00005                 * If the object is rendered as a sprite it will be deleted by EraseSprites
                      (./Engine/ObjectMa):00006                 * routine
                      (./Engine/ObjectMa):00007                 *
                      (./Engine/ObjectMa):00008                 * DeleteObject
                      (./Engine/ObjectMa):00009                 * input REG : [u] object pointer (OST)
                      (./Engine/ObjectMa):00010                 *
                      (./Engine/ObjectMa):00011                 * DeleteObject_x
                      (./Engine/ObjectMa):00012                 * input REG : [x] object pointer (OST)
                      (./Engine/ObjectMa):00013                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00014                 
                      (./Engine/ObjectMa):00015                                                        *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00016                                                        *; Subroutine to delete an object
                      (./Engine/ObjectMa):00017                                                        *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00018                                                        *
                      (./Engine/ObjectMa):00019                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00020                                                        *
                      (./Engine/ObjectMa):00021                                                        *; freeObject:
838F                  (./Engine/ObjectMa):00022                 DeleteObject_x                *DeleteObject:
838F 3456             (./Engine/ObjectMa):00023 [11]    5476            pshs  d,x,u                    *    movea.l a0,a1
8391 3384             (./Engine/ObjectMa):00024 [4]     5480            leau  ,x                       *; sub_164E8:
8393 200A             (./Engine/ObjectMa):00025 [3]     5483            bra   DOB_Start
8395                  (./Engine/ObjectMa):00026                 DeleteObject_return
8395 35D6             (./Engine/ObjectMa):00027 [13]    5496            puls  d,x,u,pc                      ; rts
                      (./Engine/ObjectMa):00028                         
8397                  (./Engine/ObjectMa):00029                 DeleteObject                  *DeleteObject2:
8397 3456             (./Engine/ObjectMa):00030 [11]    5507            pshs  d,x,u
                      (./Engine/ObjectMa):00031                         
8399 A642             (./Engine/ObjectMa):00032 [5]     5512            lda   render_flags,u
839B 8440             (./Engine/ObjectMa):00033 [2]     5514            anda  #render_todelete_mask
839D 26F6             (./Engine/ObjectMa):00034 [3]     5517            bne   DeleteObject_return           ; branch if already registred for deletion        
                      (./Engine/ObjectMa):00035                         
839F                  (./Engine/ObjectMa):00036                 DOB_Start
839F A6C848           (./Engine/ObjectMa):00037 [5]     5522            lda   rsv_prev_render_flags_0,u
83A2 2A27             (./Engine/ObjectMa):00038 [3]     5525            bpl   DOB_RemoveFromDPSB0           ; branch if not onscreen on buffer 0
                      (./Engine/ObjectMa):00039                 
83A4                  (./Engine/ObjectMa):00040                 DOB_ToDeleteFlag0
83A4 A642             (./Engine/ObjectMa):00041 [5]     5530            lda   render_flags,u
83A6 8A40             (./Engine/ObjectMa):00042 [2]     5532            ora   #render_todelete_mask
83A8 A742             (./Engine/ObjectMa):00043 [5]     5537            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./Engine/ObjectMa):00044                         
83AA                  (./Engine/ObjectMa):00045                 DOB_Unset0        
83AA BE7545           (./Engine/ObjectMa):00046 [6]     5543            ldx   Lst_Priority_Unset_0          ; add object to unset list on buffer 0
83AD EF84             (./Engine/ObjectMa):00047 [5]     5548            stu   ,x
83AF 3002             (./Engine/ObjectMa):00048 [5]     5553            leax  2,x
83B1 BF7545           (./Engine/ObjectMa):00049 [6]     5559            stx   Lst_Priority_Unset_0
                      (./Engine/ObjectMa):00050                         
83B4                  (./Engine/ObjectMa):00051                 DOB_TestOnscreen1
83B4 A6C85C           (./Engine/ObjectMa):00052 [5]     5564            lda   rsv_prev_render_flags_1,u
83B7 2A54             (./Engine/ObjectMa):00053 [3]     5567            bpl   DOB_RemoveFromDPSB1           ; branch if not onscreen on buffer 1
                      (./Engine/ObjectMa):00054                         
83B9                  (./Engine/ObjectMa):00055                 DOB_ToDeleteFlag1
83B9 A642             (./Engine/ObjectMa):00056 [5]     5572            lda   render_flags,u
83BB 8A40             (./Engine/ObjectMa):00057 [2]     5574            ora   #render_todelete_mask
83BD A742             (./Engine/ObjectMa):00058 [5]     5579            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./Engine/ObjectMa):00059                         
83BF                  (./Engine/ObjectMa):00060                 DOB_Unset1
83BF BE75C1           (./Engine/ObjectMa):00061 [6]     5585            ldx   Lst_Priority_Unset_1          ; add object to unset list on buffer 1                       
83C2 EF84             (./Engine/ObjectMa):00062 [5]     5590            stu   ,x
83C4 3002             (./Engine/ObjectMa):00063 [5]     5595            leax  2,x
83C6 BF75C1           (./Engine/ObjectMa):00064 [6]     5601            stx   Lst_Priority_Unset_1
83C9 35D6             (./Engine/ObjectMa):00065 [13]    5614            puls  d,x,u,pc                      ; rts
                      (./Engine/ObjectMa):00066                 
83CB                  (./Engine/ObjectMa):00067                 DOB_RemoveFromDPSB0
83CB ECC836           (./Engine/ObjectMa):00068 [6]     5620            ldd   rsv_priority_prev_obj_0,u     ; remove object from DSP on buffer 0
83CE 2611             (./Engine/ObjectMa):00069 [3]     5623            bne   DOB_ChainPrevB0
                      (./Engine/ObjectMa):00070                         
83D0 A6C835           (./Engine/ObjectMa):00071 [5]     5628            lda   rsv_priority_0,u
83D3 48               (./Engine/ObjectMa):00072 [2]     5630            lsla
83D4 108E7521         (./Engine/ObjectMa):00073 [4]     5634            ldy   #Tbl_Priority_First_Entry_0
83D8 31A6             (./Engine/ObjectMa):00074 [5]     5639            leay  a,y
83DA ECC838           (./Engine/ObjectMa):00075 [6]     5645            ldd   rsv_priority_next_obj_0,u
83DD EDA4             (./Engine/ObjectMa):00076 [5]     5650            std   ,y
83DF 200A             (./Engine/ObjectMa):00077 [3]     5653            bra   DOB_CheckPrioNextB0
                      (./Engine/ObjectMa):00078                                 
83E1                  (./Engine/ObjectMa):00079                 DOB_ChainPrevB0
83E1 ECC838           (./Engine/ObjectMa):00080 [6]     5659            ldd   rsv_priority_next_obj_0,u
83E4 10AEC836         (./Engine/ObjectMa):00081 [7]     5666            ldy   rsv_priority_prev_obj_0,u        
83E8 EDA838           (./Engine/ObjectMa):00082 [6]     5672            std   rsv_priority_next_obj_0,y        
                      (./Engine/ObjectMa):00083                 
83EB                  (./Engine/ObjectMa):00084                 DOB_CheckPrioNextB0       
83EB ECC838           (./Engine/ObjectMa):00085 [6]     5678            ldd   rsv_priority_next_obj_0,u
83EE 2611             (./Engine/ObjectMa):00086 [3]     5681            bne   DOB_ChainNextB0
                      (./Engine/ObjectMa):00087                 
83F0 A6C835           (./Engine/ObjectMa):00088 [5]     5686            lda   rsv_priority_0,u
83F3 48               (./Engine/ObjectMa):00089 [2]     5688            lsla
83F4 108E7533         (./Engine/ObjectMa):00090 [4]     5692            ldy   #Tbl_Priority_Last_Entry_0
83F8 31A6             (./Engine/ObjectMa):00091 [5]     5697            leay  a,y
83FA ECC836           (./Engine/ObjectMa):00092 [6]     5703            ldd   rsv_priority_prev_obj_0,u
83FD EDA4             (./Engine/ObjectMa):00093 [5]     5708            std   ,y
83FF 20B3             (./Engine/ObjectMa):00094 [3]     5711            bra   DOB_TestOnscreen1
                      (./Engine/ObjectMa):00095                                 
8401                  (./Engine/ObjectMa):00096                 DOB_ChainNextB0
8401 ECC836           (./Engine/ObjectMa):00097 [6]     5717            ldd   rsv_priority_prev_obj_0,u
8404 10AEC838         (./Engine/ObjectMa):00098 [7]     5724            ldy   rsv_priority_next_obj_0,u        
8408 EDA836           (./Engine/ObjectMa):00099 [6]     5730            std   rsv_priority_prev_obj_0,y
840B 20A7             (./Engine/ObjectMa):00100 [3]     5733            bra   DOB_TestOnscreen1        
                      (./Engine/ObjectMa):00101                 
840D                  (./Engine/ObjectMa):00102                 DOB_RemoveFromDPSB1
840D ECC84A           (./Engine/ObjectMa):00103 [6]     5739            ldd   rsv_priority_prev_obj_1,u
8410 2611             (./Engine/ObjectMa):00104 [3]     5742            bne   DOB_ChainPrevB1
                      (./Engine/ObjectMa):00105                         
8412 A6C849           (./Engine/ObjectMa):00106 [5]     5747            lda   rsv_priority_1,u
8415 48               (./Engine/ObjectMa):00107 [2]     5749            lsla
8416 108E759D         (./Engine/ObjectMa):00108 [4]     5753            ldy   #Tbl_Priority_First_Entry_1
841A 31A6             (./Engine/ObjectMa):00109 [5]     5758            leay  a,y
841C ECC84C           (./Engine/ObjectMa):00110 [6]     5764            ldd   rsv_priority_next_obj_1,u
841F EDA4             (./Engine/ObjectMa):00111 [5]     5769            std   ,y
8421 200A             (./Engine/ObjectMa):00112 [3]     5772            bra   DOB_CheckPrioNextB1
                      (./Engine/ObjectMa):00113                                 
8423                  (./Engine/ObjectMa):00114                 DOB_ChainPrevB1
8423 ECC84C           (./Engine/ObjectMa):00115 [6]     5778            ldd   rsv_priority_next_obj_1,u
8426 10AEC84A         (./Engine/ObjectMa):00116 [7]     5785            ldy   rsv_priority_prev_obj_1,u        
842A EDA84C           (./Engine/ObjectMa):00117 [6]     5791            std   rsv_priority_next_obj_1,y        
                      (./Engine/ObjectMa):00118                 
842D                  (./Engine/ObjectMa):00119                 DOB_CheckPrioNextB1       
842D ECC84C           (./Engine/ObjectMa):00120 [6]     5797            ldd   rsv_priority_next_obj_1,u
8430 2619             (./Engine/ObjectMa):00121 [3]     5800            bne   DOB_ChainNextB1
                      (./Engine/ObjectMa):00122                 
8432 A6C849           (./Engine/ObjectMa):00123 [5]     5805            lda   rsv_priority_1,u
8435 48               (./Engine/ObjectMa):00124 [2]     5807            lsla
8436 108E75AF         (./Engine/ObjectMa):00125 [4]     5811            ldy   #Tbl_Priority_Last_Entry_1
843A 31A6             (./Engine/ObjectMa):00126 [5]     5816            leay  a,y
843C ECC84A           (./Engine/ObjectMa):00127 [6]     5822            ldd   rsv_priority_prev_obj_1,u
843F EDA4             (./Engine/ObjectMa):00128 [5]     5827            std   ,y
8441 A6C848           (./Engine/ObjectMa):00129 [5]     5832            lda   rsv_prev_render_flags_0,u
8444 2B03             (./Engine/ObjectMa):00130 [3]     5835            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
8446 BD845F           (./Engine/ObjectMa):00131 [8]     5843            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
8449                  (./Engine/ObjectMa):00132                 DOB_rts                                *
8449 35D6             (./Engine/ObjectMa):00133 [13]    5856            puls  d,x,u,pc        
                      (./Engine/ObjectMa):00134                                 
844B                  (./Engine/ObjectMa):00135                 DOB_ChainNextB1
844B ECC84A           (./Engine/ObjectMa):00136 [6]     5862            ldd   rsv_priority_prev_obj_1,u
844E 10AEC84C         (./Engine/ObjectMa):00137 [7]     5869            ldy   rsv_priority_next_obj_1,u        
8452 EDA84A           (./Engine/ObjectMa):00138 [6]     5875            std   rsv_priority_prev_obj_1,y
8455 A6C848           (./Engine/ObjectMa):00139 [5]     5880            lda   rsv_prev_render_flags_0,u
8458 2BEF             (./Engine/ObjectMa):00140 [3]     5883            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
845A BD845F           (./Engine/ObjectMa):00141 [8]     5891            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
845D 35D6             (./Engine/ObjectMa):00142 [13]    5904            puls  d,x,u,pc        
                      (./Engine/ObjectMa):00143                 
                      (./Engine/ObjectMa):00144                                                        *    moveq   #0,d1
                      (./Engine/ObjectMa):00145                                                        *
                      (./Engine/ObjectMa):00146                                                        *    moveq   #bytesToLcnt(next_object),d0 ; we want to clear up to the next object
                      (./Engine/ObjectMa):00147                                                        *    ; delete the object by setting all of its bytes to 0
                      (./Engine/ObjectMa):00148                                                        *-   move.l  d1,(a1)+
                      (./Engine/ObjectMa):00149                                                        *    dbf d0,-
                      (./Engine/ObjectMa):00150                                                        *    if object_size&3
                      (./Engine/ObjectMa):00151                                                        *    move.w  d1,(a1)+
                      (./Engine/ObjectMa):00152                                                        *    endif
                      (./Engine/ObjectMa):00153                                                        *
                      (./Engine/ObjectMa):00154                                                        *    rts
                      (./Engine/ObjectMa):00155                                                        *; End of function DeleteObject2                                            
                      (C:\Users\bhrou\gi):00060                         INCLUDE "./engine/object-management/clear-obj-107.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * ClearObj107
                      (./engine/object-m):00003                 * -----------
                      (./engine/object-m):00004                 * Subroutine to clear an object data in OST and ext_variables
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * input REG : [u] pointer on objet (OST)
                      (./engine/object-m):00007                 * clear REG : [d,y]
                      (./engine/object-m):00008                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00009                 
845F                  (./engine/object-m):00010                 ClearObj
845F 3476             (./engine/object-m):00011 [13]    5917            pshs  d,x,y,u
8461 10FF848E         (./engine/object-m):00012 [7]     5924            sts   CLO_1+2
8465 32C86B           (./engine/object-m):00013 [5]     5929            leas  107,u        
8468 CC0000           (./engine/object-m):00014 [3]     5932            ldd   #$0000
846B 8E0000           (./engine/object-m):00015 [3]     5935            ldx   #$0000
846E 3184             (./engine/object-m):00016 [4]     5939            leay  ,x
8470 3384             (./engine/object-m):00017 [4]     5943            leau  ,x
8472 3476             (./engine/object-m):00018 [13]    5956            pshs  d,x,y,u
8474 3476             (./engine/object-m):00019 [13]    5969            pshs  d,x,y,u
8476 3476             (./engine/object-m):00020 [13]    5982            pshs  d,x,y,u
8478 3476             (./engine/object-m):00021 [13]    5995            pshs  d,x,y,u
847A 3476             (./engine/object-m):00022 [13]    6008            pshs  d,x,y,u
847C 3476             (./engine/object-m):00023 [13]    6021            pshs  d,x,y,u
847E 3476             (./engine/object-m):00024 [13]    6034            pshs  d,x,y,u
8480 3476             (./engine/object-m):00025 [13]    6047            pshs  d,x,y,u
8482 3476             (./engine/object-m):00026 [13]    6060            pshs  d,x,y,u
8484 3476             (./engine/object-m):00027 [13]    6073            pshs  d,x,y,u
8486 3476             (./engine/object-m):00028 [13]    6086            pshs  d,x,y,u
8488 3402             (./engine/object-m):00029 [6]     6092            pshs  a
848A 33E4             (./engine/object-m):00030 [4]     6096            leau  ,s
848C                  (./engine/object-m):00031                 CLO_1        
848C 10CE0000         (./engine/object-m):00032 [4]     6100            lds   #$0000        ; start of object should not be written with S as an index because of IRQ        
8490 3636             (./engine/object-m):00033 [11]    6111            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
8492 3636             (./engine/object-m):00034 [11]    6122            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine  (here 18 bytes of margin)
8494 3636             (./engine/object-m):00035 [11]    6133            pshu  d,x,y         ; DEPENDENCY on object_size definition
8496                  (./engine/object-m):00036                 CLO_2        
8496 35F6             (./engine/object-m):00037 [15]    6148            puls  d,x,y,u,pc
                      (C:\Users\bhrou\gi):00061                         INCLUDE "./Engine/LevelManagement/LoadGameMode.asm"     
                      (./Engine/LevelMan):00001                 ********************************************************************************
                      (./Engine/LevelMan):00002                 * LoadGameMode - Charge un nouveau niveau de jeu si requis
                      (./Engine/LevelMan):00003                 * ------------------------------------------------------------------------------
                      (./Engine/LevelMan):00004                 * 
                      (./Engine/LevelMan):00005                 *
                      (./Engine/LevelMan):00006                 ********************************************************************************
                      (./Engine/LevelMan):00007                 
8498 00               (./Engine/LevelMan):00008                 GameMode           fcb   $00
8499 00               (./Engine/LevelMan):00009                 ChangeGameMode     fcb   $00
849A 00               (./Engine/LevelMan):00010                 glb_Cur_Game_Mode  fcb   $00
849B 00               (./Engine/LevelMan):00011                 glb_Next_Game_Mode fcb   $00
                      (./Engine/LevelMan):00012                 
849C                  (./Engine/LevelMan):00013                 LoadGameMode
849C B68499           (./Engine/LevelMan):00014 [5]     6153            lda   ChangeGameMode
849F 2601             (./Engine/LevelMan):00015 [3]     6156            bne   LoadGameModeNow
84A1 39               (./Engine/LevelMan):00016 [5]     6161            rts
                      (./Engine/LevelMan):00017                         
84A2                  (./Engine/LevelMan):00018                 LoadGameModeNow
                      (./Engine/LevelMan):00019                 
                      (./Engine/LevelMan):00020                  IFDEF T2
84A2 8680             (./Engine/LevelMan):00021 [2]     6163            lda   #$80                     ; ROM page 0
                      (./Engine/LevelMan):00022                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
84A4 BD7324           (    _SetCartPageA):00002 [8]     6171            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/LevelMan):00023                                
84A7 B68498           (./Engine/LevelMan):00024 [5]     6176            lda   GameMode
84AA F6849A           (./Engine/LevelMan):00025 [5]     6181            ldb   glb_Cur_Game_Mode
84AD 7E010E           (./Engine/LevelMan):00026 [4]     6185            jmp   Build_RAMLoaderManager          
                      (./Engine/LevelMan):00027                  ELSE
                      (./Engine/LevelMan):00028                         ldb   #$64                     ; Page 4 contains RAMLoaderManager
                      (./Engine/LevelMan):00029                         stb   $E7E6
                      (./Engine/LevelMan):00030                         lda   GameMode
                      (./Engine/LevelMan):00031                         ldb   glb_Cur_Game_Mode
                      (./Engine/LevelMan):00032                         jmp   >$0000          
                      (./Engine/LevelMan):00033                  ENDC
                      (./Engine/LevelMan):00034                             
                      (C:\Users\bhrou\gi):00062                         INCLUDE "./Engine/Ram/ClearDataMemory.asm"
                      (./Engine/Ram/Clea):00001                 ********************************************************************************
                      (./Engine/Ram/Clea):00002                 * Clear memory in data area
                      (./Engine/Ram/Clea):00003                 ********************************************************************************
                      (./Engine/Ram/Clea):00004                 
84B0                  (./Engine/Ram/Clea):00005                 ClearDataMem 
84B0 3448             (./Engine/Ram/Clea):00006 [8]     6193            pshs  u,dp
84B2 10FF84E0         (./Engine/Ram/Clea):00007 [7]     6200            sts   ClearDataMem_3+2
84B6 10CEE000         (./Engine/Ram/Clea):00008 [4]     6204            lds   #$E000
84BA 3384             (./Engine/Ram/Clea):00009 [4]     6208            leau  ,x
84BC 3184             (./Engine/Ram/Clea):00010 [4]     6212            leay  ,x
84BE 1F10             (./Engine/Ram/Clea):00011 [6]     6218            tfr   x,d
84C0 1F8B             (./Engine/Ram/Clea):00012 [6]     6224            tfr   a,dp
84C2                  (./Engine/Ram/Clea):00013                 ClearDataMem_2
84C2 347E             (./Engine/Ram/Clea):00014 [14]    6238            pshs  u,y,x,dp,b,a
84C4 347E             (./Engine/Ram/Clea):00015 [14]    6252            pshs  u,y,x,dp,b,a
84C6 347E             (./Engine/Ram/Clea):00016 [14]    6266            pshs  u,y,x,dp,b,a
84C8 347E             (./Engine/Ram/Clea):00017 [14]    6280            pshs  u,y,x,dp,b,a
84CA 347E             (./Engine/Ram/Clea):00018 [14]    6294            pshs  u,y,x,dp,b,a
84CC 347E             (./Engine/Ram/Clea):00019 [14]    6308            pshs  u,y,x,dp,b,a
84CE 347E             (./Engine/Ram/Clea):00020 [14]    6322            pshs  u,y,x,dp,b,a
84D0 347E             (./Engine/Ram/Clea):00021 [14]    6336            pshs  u,y,x,dp,b,a
84D2 347E             (./Engine/Ram/Clea):00022 [14]    6350            pshs  u,y,x,dp,b,a
84D4 3478             (./Engine/Ram/Clea):00023 [12]    6362            pshs  u,y,x,dp
84D6 118CA010         (./Engine/Ram/Clea):00024 [5]     6367            cmps  #$A010                        
84DA 26E6             (./Engine/Ram/Clea):00025 [3]     6370            bne   ClearDataMem_2
84DC 33E4             (./Engine/Ram/Clea):00026 [4]     6374            leau  ,s        
84DE                  (./Engine/Ram/Clea):00027                 ClearDataMem_3        
84DE 10CE0000         (./Engine/Ram/Clea):00028 [4]     6378            lds   #$0000        ; start of memory should not be written with S as an index because of IRQ        
84E2 3636             (./Engine/Ram/Clea):00029 [11]    6389            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
84E4 3636             (./Engine/Ram/Clea):00030 [11]    6400            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine (here 16 bytes of margin)
84E6 3616             (./Engine/Ram/Clea):00031 [9]     6409            pshu  d,x
84E8 35C8             (./Engine/Ram/Clea):00032 [10]    6419            puls  dp,u,pc
                      (C:\Users\bhrou\gi):00063                         INCLUDE "./Engine/Palette/UpdatePalette.asm"
                      (./Engine/Palette/):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Palette/):00002                 * UpdatePalette
                      (./Engine/Palette/):00003                 * -------------
                      (./Engine/Palette/):00004                 * Subroutine to update palette
                      (./Engine/Palette/):00005                 * should be called just after WaitVBL
                      (./Engine/Palette/):00006                 *
                      (./Engine/Palette/):00007                 * input REG : none
                      (./Engine/Palette/):00008                 * reset REG : [d] [x] [y]
                      (./Engine/Palette/):00009                 * ---------------------------------------------------------------------------
                      (./Engine/Palette/):00010                 
84EA FF               (./Engine/Palette/):00011                 Refresh_palette fcb   $FF            
84EB 84ED             (./Engine/Palette/):00012                 Cur_palette     fdb   Dyn_palette    
84ED 0000000000000000 (./Engine/Palette/):00013                 Dyn_palette     fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
850D 0000000000000000 (./Engine/Palette/):00014                 Black_palette   fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
852D FF0F             (./Engine/Palette/):00015                 White_palette   fdb   $ff0f          
852F FF0F             (./Engine/Palette/):00016                                 fdb   $ff0f
8531 FF0F             (./Engine/Palette/):00017                                 fdb   $ff0f
8533 FF0F             (./Engine/Palette/):00018                                 fdb   $ff0f
8535 FF0F             (./Engine/Palette/):00019                                 fdb   $ff0f
8537 FF0F             (./Engine/Palette/):00020                                 fdb   $ff0f
8539 FF0F             (./Engine/Palette/):00021                                 fdb   $ff0f
853B FF0F             (./Engine/Palette/):00022                                 fdb   $ff0f
853D FF0F             (./Engine/Palette/):00023                                 fdb   $ff0f               
853F FF0F             (./Engine/Palette/):00024                                 fdb   $ff0f
8541 FF0F             (./Engine/Palette/):00025                                 fdb   $ff0f
8543 FF0F             (./Engine/Palette/):00026                                 fdb   $ff0f
8545 FF0F             (./Engine/Palette/):00027                                 fdb   $ff0f
8547 FF0F             (./Engine/Palette/):00028                                 fdb   $ff0f
8549 FF0F             (./Engine/Palette/):00029                                 fdb   $ff0f
854B FF0F             (./Engine/Palette/):00030                                 fdb   $ff0f
                      (./Engine/Palette/):00031                 
854D                  (./Engine/Palette/):00032                 UpdatePalette 
854D 7D84EA           (./Engine/Palette/):00033 [7]     6426            tst   Refresh_palette
8550 2701             (./Engine/Palette/):00034 [3]     6429            beq   @a
8552 39               (./Engine/Palette/):00035 [5]     6434            rts
8553 3408             (./Engine/Palette/):00036 [6]     6440    @a      pshs  dp        
8555 108E0195         (./Engine/Palette/):00037 [4]     6444            ldy   #0405                    * 3328 (52 lignes) - 88 (cycles apres VBL)
8559                  (./Engine/Palette/):00038                 UPP_Tempo        
8559 313F             (./Engine/Palette/):00039 [5]     6449            leay  -1,y
855B 26FC             (./Engine/Palette/):00040 [3]     6452            bne   UPP_Tempo                * tempo pour etre dans la bordure invisible
855D C6E7             (./Engine/Palette/):00041 [2]     6454            ldb   #$E7
855F 1F9B             (./Engine/Palette/):00042 [6]     6460            tfr   b,dp        
8561 BE84EB           (./Engine/Palette/):00043 [6]     6466            ldx   Cur_palette
8564 0FDB             (./Engine/Palette/):00044 [6]     6472            clr   <$DB                     * indice couleur a 0
8566 108E0010         (./Engine/Palette/):00045 [4]     6476            ldy   #$0010                   * init cpt
856A                  (./Engine/Palette/):00046                 UPP_SetColor
856A EC81             (./Engine/Palette/):00047 [8]     6484            ldd   ,x++                     * chargement de la couleur et increment du poiteur x
856C 97DA             (./Engine/Palette/):00048 [4]     6488            sta   <$DA                     * set de la couleur Vert et Rouge
856E D7DA             (./Engine/Palette/):00049 [4]     6492            stb   <$DA                     * set de la couleur Bleu
8570 313F             (./Engine/Palette/):00050 [5]     6497            leay  -1,y
8572 26F6             (./Engine/Palette/):00051 [3]     6500            bne   UPP_SetColor             * on reboucle si fin de liste pas atteinte
8574 7384EA           (./Engine/Palette/):00052 [7]     6507            com   Refresh_palette          * update flag, next run this routine will be ignored if no pal update is requested
8577                  (./Engine/Palette/):00053                 UPP_return
8577 3588             (./Engine/Palette/):00054 [8]     6515            puls dp,pc
                      (./Engine/Palette/):00055                 
                      (./Engine/Palette/):00056                         
                      (./Engine/Palette/):00057                         
                      (C:\Users\bhrou\gi):00064                         INCLUDE "./Engine/Sound/PlayDPCM16kHz.asm"
                      (./Engine/Sound/Pl):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Pl):00002                 * PlayDPCM16kHz
                      (./Engine/Sound/Pl):00003                 * -------------
                      (./Engine/Sound/Pl):00004                 * Subroutine to play a Delta PCM sample at 16kHz
                      (./Engine/Sound/Pl):00005                 * 6 bit DAC sample value is encoded as a 4bit lookup value in a delta table
                      (./Engine/Sound/Pl):00006                 * 62,5 cycles between 2 DAC samples (alternation of 62 and 63 cycles)
                      (./Engine/Sound/Pl):00007                 *
                      (./Engine/Sound/Pl):00008                 * No IRQ here, this will freeze anything running ...
                      (./Engine/Sound/Pl):00009                 * DAC Init from Mission: Liftoff (merci Prehisto ;-))
                      (./Engine/Sound/Pl):00010                 *
                      (./Engine/Sound/Pl):00011                 * input REG : [y] Pcm_ index to play
                      (./Engine/Sound/Pl):00012                 * reset REG : none
                      (./Engine/Sound/Pl):00013                 *
                      (./Engine/Sound/Pl):00014                 * Pcm_ index point to a data structure that store location of sample data:
                      (./Engine/Sound/Pl):00015                 * page[b], start address[w], end address[w]
                      (./Engine/Sound/Pl):00016                 * page[b], start address[w], end address[w]
                      (./Engine/Sound/Pl):00017                 * ...
                      (./Engine/Sound/Pl):00018                 * $00
                      (./Engine/Sound/Pl):00019                 *
                      (./Engine/Sound/Pl):00020                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Pl):00021                 
8579                  (./Engine/Sound/Pl):00022                 PlayDPCM16kHz 
8579 3476             (./Engine/Sound/Pl):00023 [13]    6528            pshs  d,x,y,u
                      (./Engine/Sound/Pl):00024                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
857B BD7380           (    _GetCartPageA):00002 [8]     6536            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
857E B785FA           (./Engine/Sound/Pl):00025 [5]     6541            sta   @RestorePage+1
8581 CCFB3F           (./Engine/Sound/Pl):00026 [3]     6544            ldd   #$fb3f  ! Mute by CRA to 
8584 B4E7CF           (./Engine/Sound/Pl):00027 [5]     6549            anda  $e7cf   ! avoid sound when 
8587 B7E7CF           (./Engine/Sound/Pl):00028 [5]     6554            sta   $e7cf   ! $e7cd written
858A F7E7CD           (./Engine/Sound/Pl):00029 [5]     6559            stb   $e7cd   ! Full sound line
858D 8A04             (./Engine/Sound/Pl):00030 [2]     6561            ora   #$04    ! Disable mute by
858F B7E7CF           (./Engine/Sound/Pl):00031 [5]     6566            sta   $e7cf   ! CRA and sound
8592 CE8600           (./Engine/Sound/Pl):00032 [3]     6569            ldu   #@DACDecodeTbl
8595 8620             (./Engine/Sound/Pl):00033 [2]     6571            lda   #32                      ; init delta value
8597 B785AF           (./Engine/Sound/Pl):00034 [5]     6576            sta   @smplh+1
859A B785BD           (./Engine/Sound/Pl):00035 [5]     6581            sta   @smpll+1
859D                  (./Engine/Sound/Pl):00036                 @ReadChunk
859D A6A4             (./Engine/Sound/Pl):00037 [4]     6585            lda   sound_page,y             ; [4] load memory page
859F 273F             (./Engine/Sound/Pl):00038 [3]     6588            beq   @End                     ; [3]
                      (./Engine/Sound/Pl):00039                         _SetCartPageA                  ; for each page switch there is a lag, data in RAM: 3 cycles late, data in ROM: 73 cycles late in stream
                      (    _SetCartPageA):00001                  IFDEF T2
85A1 BD7324           (    _SetCartPageA):00002 [8]     6596            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
85A4 AE21             (./Engine/Sound/Pl):00040 [6]     6602            ldx   sound_start_addr,y       ; [6] Chunk start addr
85A6                  (./Engine/Sound/Pl):00041                 @Loop      
85A6 A684             (./Engine/Sound/Pl):00042 [4]     6606            lda   ,x                       ; [4] load data byte
85A8 44               (./Engine/Sound/Pl):00043 [2]     6608            lsra                           ; [2]
85A9 44               (./Engine/Sound/Pl):00044 [2]     6610            lsra                           ; [2]
85AA 44               (./Engine/Sound/Pl):00045 [2]     6612            lsra                           ; [2]
85AB 44               (./Engine/Sound/Pl):00046 [2]     6614            lsra                           ; [2]
85AC E6C6             (./Engine/Sound/Pl):00047 [5]     6619            ldb   a,u                      ; [5] read high nibble sample
85AE CB00             (./Engine/Sound/Pl):00048 [2]     6621    @smplh  addb  #00                      ; [2]
85B0 F785BD           (./Engine/Sound/Pl):00049 [5]     6626            stb   @smpll+1                 ; [5]
85B3 F7E7CD           (./Engine/Sound/Pl):00050 [5]     6631            stb   $e7cd                    ; [5] send byte to DAC
85B6 A680             (./Engine/Sound/Pl):00051 [6]     6637            lda   ,x+                      ; [6] reload data byte
85B8 840F             (./Engine/Sound/Pl):00052 [2]     6639            anda  #$0F                     ; [2]
85BA E6C6             (./Engine/Sound/Pl):00053 [5]     6644            ldb   a,u                      ; [5] read low nibble sample
85BC CB00             (./Engine/Sound/Pl):00054 [2]     6646    @smpll  addb  #00                      ; [2]
85BE F785AF           (./Engine/Sound/Pl):00055 [5]     6651            stb   @smplh+1                 ; [5]
85C1 1E89             (./Engine/Sound/Pl):00056 [8]     6659            exg   a,b                      ; [38] wait
85C3 1E89             (./Engine/Sound/Pl):00057 [8]     6667            exg   a,b                      ; ...                                       
85C5 1E89             (./Engine/Sound/Pl):00058 [8]     6675            exg   a,b                      ; ...                                       
85C7 1E89             (./Engine/Sound/Pl):00059 [8]     6683            exg   a,b                      ; ...                                       
85C9 21FE             (./Engine/Sound/Pl):00060 [3]     6686            brn   *                        ; ...        
85CB 21FE             (./Engine/Sound/Pl):00061 [3]     6689            brn   *                        ; ...                                                
85CD F7E7CD           (./Engine/Sound/Pl):00062 [5]     6694            stb   $e7cd                    ; [5] send byte to DAC
85D0 AC23             (./Engine/Sound/Pl):00063 [7]     6701            cmpx  sound_end_addr,y         ; [7]
85D2 2708             (./Engine/Sound/Pl):00064 [3]     6704            beq   @NextChunk               ; [3]
85D4 1E89             (./Engine/Sound/Pl):00065 [8]     6712            exg   a,b                      ; [20] wait        
85D6 1E89             (./Engine/Sound/Pl):00066 [8]     6720            exg   a,b                      ; ...
85D8 12               (./Engine/Sound/Pl):00067 [2]     6722            nop                            ; ...                
85D9 12               (./Engine/Sound/Pl):00068 [2]     6724            nop                            ; ...                        
85DA 20CA             (./Engine/Sound/Pl):00069 [3]     6727            bra   @Loop                    ; [3]
85DC                  (./Engine/Sound/Pl):00070                 @NextChunk
85DC 3125             (./Engine/Sound/Pl):00071 [5]     6732            leay  sound_meta_size,y        ; [5]
85DE 20BD             (./Engine/Sound/Pl):00072 [3]     6735            bra   @ReadChunk               ; [3]
85E0                  (./Engine/Sound/Pl):00073                 @End
85E0 8600             (./Engine/Sound/Pl):00074 [2]     6737            lda   #$00
85E2 B7E7CD           (./Engine/Sound/Pl):00075 [5]     6742            sta   $e7cd
85E5 CCFBFC           (./Engine/Sound/Pl):00076 [3]     6745            ldd   #$fbfc  ! Mute by CRA to
85E8 B4E7CF           (./Engine/Sound/Pl):00077 [5]     6750            anda  $e7cf   ! avoid sound when
85EB B7E7CF           (./Engine/Sound/Pl):00078 [5]     6755            sta   $e7cf   ! $e7cd is written
85EE F4E7CD           (./Engine/Sound/Pl):00079 [5]     6760            andb  $e7cd   ! Activate
85F1 F7E7CD           (./Engine/Sound/Pl):00080 [5]     6765            stb   $e7cd   ! joystick port
85F4 8A04             (./Engine/Sound/Pl):00081 [2]     6767            ora   #$04    ! Disable mute by
85F6 B7E7CF           (./Engine/Sound/Pl):00082 [5]     6772            sta   $e7cf   ! CRA + joystick
85F9                  (./Engine/Sound/Pl):00083                 @RestorePage        
85F9 8600             (./Engine/Sound/Pl):00084 [2]     6774            lda   #$00
                      (./Engine/Sound/Pl):00085                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
85FB BD7324           (    _SetCartPageA):00002 [8]     6782            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
85FE 35F6             (./Engine/Sound/Pl):00086 [15]    6797            puls  d,x,y,u,pc
8600                  (./Engine/Sound/Pl):00087                 @DACDecodeTbl
8600 00010204080C1018 (./Engine/Sound/Pl):00088                         fcb   0,1,2,4,8,12,16,24,-32,-1,-2,-4,-8,-12,-16,-24
     E0FFFEFCF8F4F0E8
                      (./Engine/Sound/Pl):00089                         ; this table use same values as the one used by pcm2dpcm at encoding stage but /4
                      (./Engine/Sound/Pl):00090                         ; so there is no need to downsample from 8-bit to 6-bit
                      (C:\Users\bhrou\gi):00065                         INCLUDE "./Engine/Sound/Smps.asm"
                      (./Engine/Sound/Sm):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Sm):00002                 * SMPS 6809 - Sample Music Playback System for 6809 (LWASM)
                      (./Engine/Sound/Sm):00003                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Sm):00004                 * by Bentoc June 2021, based on
                      (./Engine/Sound/Sm):00005                 * Sonic the Hedgehog 2 disassembled Z80 sound driver
                      (./Engine/Sound/Sm):00006                 * Disassembled by Xenowhirl for AS
                      (./Engine/Sound/Sm):00007                 * Additional disassembly work by RAS Oct 2008
                      (./Engine/Sound/Sm):00008                 * RAS' work merged into SVN by Flamewing
                      (./Engine/Sound/Sm):00009                 *
                      (./Engine/Sound/Sm):00010                 * TODO
                      (./Engine/Sound/Sm):00011                 * - Test real hardware wait time and adjust the code
                      (./Engine/Sound/Sm):00012                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Sm):00013                 
                      (./Engine/Sound/Sm):00014                 ; SMPS Header
     0000             (./Engine/Sound/Sm):00015                 SMPS_VOICE                   equ   0
     0002             (./Engine/Sound/Sm):00016                 SMPS_NB_FM                   equ   2
     0003             (./Engine/Sound/Sm):00017                 SMPS_NB_PSG                  equ   3
     0004             (./Engine/Sound/Sm):00018                 SMPS_TEMPO                   equ   4
     0004             (./Engine/Sound/Sm):00019                 SMPS_TEMPO_DELAY             equ   4
     0005             (./Engine/Sound/Sm):00020                 SMPS_DELAY                   equ   5
     0006             (./Engine/Sound/Sm):00021                 SMPS_TRK_HEADER              equ   6
     0008             (./Engine/Sound/Sm):00022                 SMPS_DAC_FLAG                equ   8
                      (./Engine/Sound/Sm):00023                 
                      (./Engine/Sound/Sm):00024                 ; SMPS Header (each track)
     0000             (./Engine/Sound/Sm):00025                 SMPS_TRK_DATA_PTR            equ   0 
     0002             (./Engine/Sound/Sm):00026                 SMPS_TRK_TR_VOL_PTR          equ   2
     0005             (./Engine/Sound/Sm):00027                 SMPS_TRK_ENV_PTR             equ   5
     0004             (./Engine/Sound/Sm):00028                 SMPS_TRK_FM_HDR_LEN          equ   4
     0006             (./Engine/Sound/Sm):00029                 SMPS_TRK_PSG_HDR_LEN         equ   6
                      (./Engine/Sound/Sm):00030                 
                      (./Engine/Sound/Sm):00031                 ; SMPS SFX Header
     0000             (./Engine/Sound/Sm):00032                 SMPS_SFX_VOICE               equ   0
     0002             (./Engine/Sound/Sm):00033                 SMPS_SFX_TEMPO               equ   2
     0002             (./Engine/Sound/Sm):00034                 SMPS_SFX_TEMPO_NB_CH         equ   2
     0003             (./Engine/Sound/Sm):00035                 SMPS_SFX_NB_CH               equ   3
     0004             (./Engine/Sound/Sm):00036                 SMPS_SFX_HDR_LEN             equ   4
                      (./Engine/Sound/Sm):00037                 
                      (./Engine/Sound/Sm):00038                 ; SMPS SFX Header (each track)
     0000             (./Engine/Sound/Sm):00039                 SMPS_SFX_TRK_CH              equ   0
     0002             (./Engine/Sound/Sm):00040                 SMPS_SFX_TRK_DATA_PTR        equ   2 
     0004             (./Engine/Sound/Sm):00041                 SMPS_SFX_TRK_TR_VOL_PTR      equ   4
     0006             (./Engine/Sound/Sm):00042                 SMPS_SFX_TRK_HDR_LEN         equ   6
                      (./Engine/Sound/Sm):00043                 
                      (./Engine/Sound/Sm):00044                 ; Hardware Addresses
     E7FF             (./Engine/Sound/Sm):00045                 PSG                          equ   $E7FF
     E7FC             (./Engine/Sound/Sm):00046                 YM2413_A0                    equ   $E7FC
     E7FD             (./Engine/Sound/Sm):00047                 YM2413_D0                    equ   $E7FD
                      (./Engine/Sound/Sm):00048                 
                      (./Engine/Sound/Sm):00049                 ******************************************************************************
                      (./Engine/Sound/Sm):00050                 
                      (./Engine/Sound/Sm):00051                 Track STRUCT
                      (./Engine/Sound/Sm):00052                                                                       ;         "playback control"; bits 
                      (./Engine/Sound/Sm):00053                                                                       ;         1 (02h)  seems to be "track is at rest"
                      (./Engine/Sound/Sm):00054                                                                       ;         2 (04h)  SFX is overriding this track
                      (./Engine/Sound/Sm):00055                                                                       ;         3 (08h)  modulation on
                      (./Engine/Sound/Sm):00056                                                                       ;         4 (10h)  do not attack next note
                      (./Engine/Sound/Sm):00057                                                                       ;         7 (80h)  track is playing
0000s                 (./Engine/Sound/Sm):00058                 PlaybackControl                rmb   1
                      (./Engine/Sound/Sm):00059                                                                       ;         "voice control"; bits 
                      (./Engine/Sound/Sm):00060                                                                       ;         0-3 (00h-0Fh) Channel number
                      (./Engine/Sound/Sm):00061                                                                       ;         7   (80h) PSG Track
                      (./Engine/Sound/Sm):00062                                                                       ;         PSG    Chn    |a| |00000|
                      (./Engine/Sound/Sm):00063                                                                       ;         Voice1 0x80 = 100  00000
                      (./Engine/Sound/Sm):00064                                                                       ;         Voice2 0xa0 = 101  00000
                      (./Engine/Sound/Sm):00065                                                                       ;         Voice3 0xc0 = 110  00000                                                      
                      (./Engine/Sound/Sm):00066                                                                       ;         Voice4 0xe0 = 111  00000                                                      
0001s                 (./Engine/Sound/Sm):00067                 VoiceControl                   rmb   1
                      (./Engine/Sound/Sm):00068                                                                       ;         "note control"; bits
                      (./Engine/Sound/Sm):00069                                                                       ;         0-3 (00h-0Fh) Current Block(0-2) and FNum(8)
                      (./Engine/Sound/Sm):00070                                                                       ;         4   (10h) Key On
                      (./Engine/Sound/Sm):00071                                                                       ;         5   (20h) Sustain On
0002s                 (./Engine/Sound/Sm):00072                 NoteControl                    rmb   1
0003s                 (./Engine/Sound/Sm):00073                 TempoDivider                   rmb   1                ; timing divisor; 1 = Normal, 2 = Half, 3 = Third...
0004s                 (./Engine/Sound/Sm):00074                 DataPointer                    rmb   2                ; Track's position
0006s                 (./Engine/Sound/Sm):00075                 Transpose                      rmb   1                ; Transpose (from coord flag E9)
0007s                 (./Engine/Sound/Sm):00076                 Volume                         rmb   1                ; Attenuation - (Dependency) Should follow Transpose
0008s                 (./Engine/Sound/Sm):00077                 VoiceIndex                     rmb   1                ; Current voice in use OR current PSG tone
0009s                 (./Engine/Sound/Sm):00078                 VolFlutter                     rmb   1                ; PSG flutter (dynamically effects PSG volume for decay effects)
000As                 (./Engine/Sound/Sm):00079                 StackPointer                   rmb   1                ; "Gosub" stack position offset (starts at 2Ah, i.e. end of track, and each jump decrements by 2)
000Bs                 (./Engine/Sound/Sm):00080                 DurationTimeout                rmb   1                ; current duration timeout; counting down to zero
000Cs                 (./Engine/Sound/Sm):00081                 SavedDuration                  rmb   1                ; last set duration (if a note follows a note, this is reapplied to 0Bh)
                      (./Engine/Sound/Sm):00082                                                                       ; 0Dh / 0Eh change a little depending on track -- essentially they hold data relevant to the next note to play
000Ds                 (./Engine/Sound/Sm):00083                 NextData                       rmb   2                ; DAC Next drum to play - FM/PSG  frequency
000Fs                 (./Engine/Sound/Sm):00084                 NoteFillTimeout                rmb   1                ; Currently set note fill; counts down to zero and then cuts off note
0010s                 (./Engine/Sound/Sm):00085                 NoteFillMaster                 rmb   1                ; Reset value for current note fill
0011s                 (./Engine/Sound/Sm):00086                 ModulationPtr                  rmb   2                ; address of current modulation setting
0013s                 (./Engine/Sound/Sm):00087                 ModulationWait                 rmb   1                ; Wait for ww period of time before modulation starts
0014s                 (./Engine/Sound/Sm):00088                 ModulationSpeed                rmb   1                ; Modulation Speed
0015s                 (./Engine/Sound/Sm):00089                 ModulationDelta                rmb   1                ; Modulation change per Mod. Step
0016s                 (./Engine/Sound/Sm):00090                 ModulationSteps                rmb   1                ; Number of steps in modulation (divided by 2)
0017s                 (./Engine/Sound/Sm):00091                 ModulationVal                  rmb   2                ; Current modulation value
0019s                 (./Engine/Sound/Sm):00092                 Detune                         rmb   1                ; Set by detune coord flag E1; used to add directly to FM/PSG frequency
001As                 (./Engine/Sound/Sm):00093                 VolTLMask                      rmb   1                ; zVolTLMaskTbl value set during voice setting (value based on algorithm indexing zGain table)
001Bs                 (./Engine/Sound/Sm):00094                 PSGNoise                       rmb   1                ; PSG noise setting
001Cs                 (./Engine/Sound/Sm):00095                 TLPtr                          rmb   2                ; where TL bytes of current voice begin (set during voice setting)
001Es                 (./Engine/Sound/Sm):00096                 InstrTranspose                 rmb   1                ; instrument transpose
                      (./Engine/Sound/Sm):00097                                                                       ;         "InstrAndVolume"; bits
                      (./Engine/Sound/Sm):00098                                                                       ;          FM Instr.  Attnenuation
                      (./Engine/Sound/Sm):00099                                                                       ; FM       0000       xxxx
                      (./Engine/Sound/Sm):00100                                                                       ; FM       0001       xxxx 
                      (./Engine/Sound/Sm):00101                                                                       ; ...  
                      (./Engine/Sound/Sm):00102                                                                       ; PSG      Chn    |a| |1Fh|
                      (./Engine/Sound/Sm):00103                                                                       ; VOL1     0x90 = 100 1xxxx        vol 4b xxxx = attenuation value
                      (./Engine/Sound/Sm):00104                                                                       ; VOL2     0xb0 = 101 1xxxx        vol 4b
                      (./Engine/Sound/Sm):00105                                                                       ; VOL3     0xd0 = 110 1xxxx        vol 4b
                      (./Engine/Sound/Sm):00106                                                                       ; VOL4     0xf0 = 111 1xxxx        vol 4b       
001Fs                 (./Engine/Sound/Sm):00107                 InstrAndVolume                 rmb   1                ; current instrument and volume
0020s                 (./Engine/Sound/Sm):00108                 LoopCounters                   rmb   $A               ; Loop counter index 0
                      (./Engine/Sound/Sm):00109                                                                       ;   ... open ...
                      (./Engine/Sound/Sm):00110                                                                       ; start of next track, every two bytes below this is a coord flag "gosub" (F8h) return stack
                      (./Engine/Sound/Sm):00111                                                                       ;
                      (./Engine/Sound/Sm):00112                                                                       ;        The bytes between +20h and +29h are "open"; starting at +20h and going up are possible loop counters
                      (./Engine/Sound/Sm):00113                                                                       ;        (for coord flag F7) while +2Ah going down (never AT 2Ah though) are stacked return addresses going
                      (./Engine/Sound/Sm):00114                                                                       ;        down after calling coord flag F8h.  Of course, this does mean collisions are possible with either
                      (./Engine/Sound/Sm):00115                                                                       ;        or other track memory if you're not careful with these!  No range checking is performed!
                      (./Engine/Sound/Sm):00116                                                                       ;
                      (./Engine/Sound/Sm):00117                                                                       ;        All tracks are 2Ah bytes long
002As                 (./Engine/Sound/Sm):00118                  ENDSTRUCT
                      (./Engine/Sound/Sm):00119                 
                      (./Engine/Sound/Sm):00120                 ; Track STRUCT Constants
     0000             (./Engine/Sound/Sm):00121                 PlaybackControl              equ   0
     0001             (./Engine/Sound/Sm):00122                 VoiceControl                 equ   1
     0002             (./Engine/Sound/Sm):00123                 NoteControl                  equ   2
     0003             (./Engine/Sound/Sm):00124                 TempoDivider                 equ   3
     0004             (./Engine/Sound/Sm):00125                 DataPointer                  equ   4
     0006             (./Engine/Sound/Sm):00126                 TranspAndVolume              equ   6
     0006             (./Engine/Sound/Sm):00127                 Transpose                    equ   6
     0007             (./Engine/Sound/Sm):00128                 Volume                       equ   7
     0008             (./Engine/Sound/Sm):00129                 VoiceIndex                   equ   8
     0009             (./Engine/Sound/Sm):00130                 VolFlutter                   equ   9
     000A             (./Engine/Sound/Sm):00131                 StackPointer                 equ   10
     000B             (./Engine/Sound/Sm):00132                 DurationTimeout              equ   11
     000C             (./Engine/Sound/Sm):00133                 SavedDuration                equ   12
     000D             (./Engine/Sound/Sm):00134                 NextData                     equ   13
     000F             (./Engine/Sound/Sm):00135                 NoteFillTimeout              equ   15
     0010             (./Engine/Sound/Sm):00136                 NoteFillMaster               equ   16
     0011             (./Engine/Sound/Sm):00137                 ModulationPtr                equ   17
     0013             (./Engine/Sound/Sm):00138                 ModulationWait               equ   19
     0014             (./Engine/Sound/Sm):00139                 ModulationSpeed              equ   20
     0015             (./Engine/Sound/Sm):00140                 ModulationDelta              equ   21
     0016             (./Engine/Sound/Sm):00141                 ModulationSteps              equ   22
     0017             (./Engine/Sound/Sm):00142                 ModulationVal                equ   23
     0019             (./Engine/Sound/Sm):00143                 Detune                       equ   25
     001A             (./Engine/Sound/Sm):00144                 VolTLMask                    equ   26
     001B             (./Engine/Sound/Sm):00145                 PSGNoise                     equ   27
     001C             (./Engine/Sound/Sm):00146                 TLPtr                        equ   28
     001E             (./Engine/Sound/Sm):00147                 InstrTranspose               equ   30 
     001F             (./Engine/Sound/Sm):00148                 InstrAndVolume               equ   31 
     0020             (./Engine/Sound/Sm):00149                 LoopCounters                 equ   32   
     002A             (./Engine/Sound/Sm):00150                 GoSubStack                   equ   42
                      (./Engine/Sound/Sm):00151                 
                      (./Engine/Sound/Sm):00152                 ******************************************************************************
                      (./Engine/Sound/Sm):00153                 
                      (./Engine/Sound/Sm):00154                 SmpsVar STRUCT
0000s                 (./Engine/Sound/Sm):00155                 SFXPriorityVal                 rmb   1        
0001s                 (./Engine/Sound/Sm):00156                 TempoTimeout                   rmb   1        
0002s                 (./Engine/Sound/Sm):00157                 CurrentTempo                   rmb   1                ; Stores current tempo value here
0003s                 (./Engine/Sound/Sm):00158                 StopMusic                      rmb   1                ; Set to 7Fh to pause music, set to 80h to unpause. Otherwise 00h
0004s                 (./Engine/Sound/Sm):00159                 FadeOutCounter                 rmb   1        
0005s                 (./Engine/Sound/Sm):00160                 FadeOutDelay                   rmb   1        
0006s                 (./Engine/Sound/Sm):00161                 QueueToPlay                    rmb   1                ; if NOT set to 80h, means new index was requested by 68K
0007s                 (./Engine/Sound/Sm):00162                 SFXToPlay                      rmb   2                ; When Genesis wants to play "normal" sound, it writes it here
0009s                 (./Engine/Sound/Sm):00163                 VoiceTblPtr                    rmb   2                ; address of the voices
000Bs                 (./Engine/Sound/Sm):00164                 SFXVoiceTblPtr                 rmb   2                ; address of the SFX voices
000Ds                 (./Engine/Sound/Sm):00165                 FadeInFlag                     rmb   1        
000Es                 (./Engine/Sound/Sm):00166                 FadeInDelay                    rmb   1        
000Fs                 (./Engine/Sound/Sm):00167                 FadeInCounter                  rmb   1        
0010s                 (./Engine/Sound/Sm):00168                 1upPlaying                     rmb   1        
0011s                 (./Engine/Sound/Sm):00169                 TempoMod                       rmb   1        
0012s                 (./Engine/Sound/Sm):00170                 TempoTurbo                     rmb   1                ; Stores the tempo if speed shoes are acquired (or 7Bh is played anywho)
0013s                 (./Engine/Sound/Sm):00171                 SpeedUpFlag                    rmb   1        
0014s                 (./Engine/Sound/Sm):00172                 DACEnabled                     rmb   1                
0015s                 (./Engine/Sound/Sm):00173                 60HzData                       rmb   1                ; 1: play 60hz track at 50hz, 0: do not skip frames
0016s                 (./Engine/Sound/Sm):00174                  ENDSTRUCT
                      (./Engine/Sound/Sm):00175                 
                      (./Engine/Sound/Sm):00176                 ******************************************************************************
                      (./Engine/Sound/Sm):00177                 
8610                  (./Engine/Sound/Sm):00178                 StructStart
8610                  (./Engine/Sound/Sm):00179                 Smps          SmpsVar
                      (./Engine/Sound/Sm):00180                 
8626                  (./Engine/Sound/Sm):00181                 tracksStart                ; This is the beginning of all BGM track memory
8626                  (./Engine/Sound/Sm):00182                 SongDACFMStart
8626                  (./Engine/Sound/Sm):00183                 SongDAC         Track
8650                  (./Engine/Sound/Sm):00184                 SongFMStart
8650                  (./Engine/Sound/Sm):00185                 SongFM1         Track
867A                  (./Engine/Sound/Sm):00186                 SongFM2         Track
86A4                  (./Engine/Sound/Sm):00187                 SongFM3         Track
86CE                  (./Engine/Sound/Sm):00188                 SongFM4         Track
86F8                  (./Engine/Sound/Sm):00189                 SongFM5         Track
8722                  (./Engine/Sound/Sm):00190                 SongFM6         Track
874C                  (./Engine/Sound/Sm):00191                 SongFM7         Track
8776                  (./Engine/Sound/Sm):00192                 SongFM8         Track
87A0                  (./Engine/Sound/Sm):00193                 SongFM9         Track
87CA                  (./Engine/Sound/Sm):00194                 SongFMEnd
87CA                  (./Engine/Sound/Sm):00195                 SongDACFMEnd
87CA                  (./Engine/Sound/Sm):00196                 SongPSGStart
87CA                  (./Engine/Sound/Sm):00197                 SongPSG1        Track
87F4                  (./Engine/Sound/Sm):00198                 SongPSG2        Track
881E                  (./Engine/Sound/Sm):00199                 SongPSG3        Track
                      (./Engine/Sound/Sm):00200                 ;SongPSG4        Track
8848                  (./Engine/Sound/Sm):00201                 SongPSGEnd
8848                  (./Engine/Sound/Sm):00202                 tracksEnd
                      (./Engine/Sound/Sm):00203                 
8848                  (./Engine/Sound/Sm):00204                 tracksSFXStart
8848                  (./Engine/Sound/Sm):00205                 SFXFMStart
8848                  (./Engine/Sound/Sm):00206                 SFXFM3          Track
8872                  (./Engine/Sound/Sm):00207                 SFXFM4          Track
889C                  (./Engine/Sound/Sm):00208                 SFXFM5          Track
88C6                  (./Engine/Sound/Sm):00209                 SFXFMEnd
88C6                  (./Engine/Sound/Sm):00210                 SFXPSGStart
88C6                  (./Engine/Sound/Sm):00211                 SFXPSG1         Track
88F0                  (./Engine/Sound/Sm):00212                 SFXPSG2         Track
891A                  (./Engine/Sound/Sm):00213                 SFXPSG3         Track
8944                  (./Engine/Sound/Sm):00214                 SFXPSGEnd
8944                  (./Engine/Sound/Sm):00215                 tracksSFXEnd
8944                  (./Engine/Sound/Sm):00216                 StructEnd
                      (./Engine/Sound/Sm):00217                 
                      (./Engine/Sound/Sm):00218                         ; I want struct data to be in binary please ...
                      (./Engine/Sound/Sm):00219                         ; VoiceControl is hardcoded
                      (./Engine/Sound/Sm):00220                         
                      (./Engine/Sound/Sm):00221                         org   StructStart                
8610 0000000000000000 (./Engine/Sound/Sm):00222                         fill  0,sizeof{SmpsVar}
     0000000000000000
     000000000000
8626 0006             (./Engine/Sound/Sm):00223                         fdb   $0006
8628 0000000000000000 (./Engine/Sound/Sm):00224                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8650 0000             (./Engine/Sound/Sm):00225                         fdb   $0000
8652 0000000000000000 (./Engine/Sound/Sm):00226                         fill  0,sizeof{Track}-2        
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
867A 0001             (./Engine/Sound/Sm):00227                         fdb   $0001
867C 0000000000000000 (./Engine/Sound/Sm):00228                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
86A4 0002             (./Engine/Sound/Sm):00229                         fdb   $0002
86A6 0000000000000000 (./Engine/Sound/Sm):00230                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
86CE 0003             (./Engine/Sound/Sm):00231                         fdb   $0003
86D0 0000000000000000 (./Engine/Sound/Sm):00232                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
86F8 0004             (./Engine/Sound/Sm):00233                         fdb   $0004
86FA 0000000000000000 (./Engine/Sound/Sm):00234                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8722 0005             (./Engine/Sound/Sm):00235                         fdb   $0005
8724 0000000000000000 (./Engine/Sound/Sm):00236                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
874C 0006             (./Engine/Sound/Sm):00237                         fdb   $0006
874E 0000000000000000 (./Engine/Sound/Sm):00238                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8776 0007             (./Engine/Sound/Sm):00239                         fdb   $0007
8778 0000000000000000 (./Engine/Sound/Sm):00240                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
87A0 0008             (./Engine/Sound/Sm):00241                         fdb   $0008
87A2 0000000000000000 (./Engine/Sound/Sm):00242                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
87CA 0080             (./Engine/Sound/Sm):00243                         fdb   $0080
87CC 0000000000000000 (./Engine/Sound/Sm):00244                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
87F4 00A0             (./Engine/Sound/Sm):00245                         fdb   $00A0
87F6 0000000000000000 (./Engine/Sound/Sm):00246                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
881E 00C0             (./Engine/Sound/Sm):00247                         fdb   $00C0
8820 0000000000000000 (./Engine/Sound/Sm):00248                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8848 00E0             (./Engine/Sound/Sm):00249                         fdb   $00E0
884A 0000000000000000 (./Engine/Sound/Sm):00250                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8872 0003             (./Engine/Sound/Sm):00251                         fdb   $0003
8874 0000000000000000 (./Engine/Sound/Sm):00252                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
889C 0004             (./Engine/Sound/Sm):00253                         fdb   $0004
889E 0000000000000000 (./Engine/Sound/Sm):00254                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
88C6 0005             (./Engine/Sound/Sm):00255                         fdb   $0005
88C8 0000000000000000 (./Engine/Sound/Sm):00256                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
88F0 0080             (./Engine/Sound/Sm):00257                         fdb   $0080
88F2 0000000000000000 (./Engine/Sound/Sm):00258                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
891A 00A0             (./Engine/Sound/Sm):00259                         fdb   $00A0
891C 0000000000000000 (./Engine/Sound/Sm):00260                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (./Engine/Sound/Sm):00261                         ;fdb   $00C0
                      (./Engine/Sound/Sm):00262                         ;fill  0,sizeof{Track}-2
                      (./Engine/Sound/Sm):00263                                 
                      (./Engine/Sound/Sm):00264                 ******************************************************************************
                      (./Engine/Sound/Sm):00265                 
8944 00               (./Engine/Sound/Sm):00266                 PALUpdTick      fcb   0     ; this counts from 0 to 5 to periodically "double update" for PAL systems (basically every 6 frames you need to update twice to keep up)
8945 00               (./Engine/Sound/Sm):00267                 DoSFXFlag       fcb   0     ; flag to indicate we're updating SFX (and thus use custom voice table); set to FFh while doing SFX, 0 when not.
8946 00               (./Engine/Sound/Sm):00268                 Paused          fcb   0     ; 0 = normal, -1 = pause all sound and music
8947 00               (./Engine/Sound/Sm):00269                 SongDelay       fcb   0     ; song header delay
                      (./Engine/Sound/Sm):00270                 
8948 00               (./Engine/Sound/Sm):00271                 MusicPage       fcb   0     ; memory page of music data
8949 00               (./Engine/Sound/Sm):00272                 SoundPage       fcb   0     ; memory page of sound data
894A 0000             (./Engine/Sound/Sm):00273                 MusicData       fdb   0     ; address of song data
894C 0000             (./Engine/Sound/Sm):00274                 SoundData       fdb   0     ; address of sound data
                      (./Engine/Sound/Sm):00275                 
                      (./Engine/Sound/Sm):00276                 
     000D             (./Engine/Sound/Sm):00277                 MUSIC_TRACK_COUNT = (tracksEnd-tracksStart)/sizeof{Track}
     000A             (./Engine/Sound/Sm):00278                 MUSIC_DAC_FM_TRACK_COUNT = (SongDACFMEnd-SongDACFMStart)/sizeof{Track}
     0009             (./Engine/Sound/Sm):00279                 MUSIC_FM_TRACK_COUNT = (SongFMEnd-SongFMStart)/sizeof{Track}
     0003             (./Engine/Sound/Sm):00280                 MUSIC_PSG_TRACK_COUNT = (SongPSGEnd-SongPSGStart)/sizeof{Track}
                      (./Engine/Sound/Sm):00281                 
     0006             (./Engine/Sound/Sm):00282                 SFX_TRACK_COUNT = (tracksSFXEnd-tracksSFXStart)/sizeof{Track}
     0003             (./Engine/Sound/Sm):00283                 SFXFM_TRACK_COUNT = (SFXFMEnd-SFXFMStart)/sizeof{Track}
     0003             (./Engine/Sound/Sm):00284                 SFXPSG_TRACK_COUNT = (SFXPSGEnd-SFXPSGStart)/sizeof{Track}
                      (./Engine/Sound/Sm):00285                 
                      (./Engine/Sound/Sm):00286                 ******************************************************************************
                      (./Engine/Sound/Sm):00287                 * writes to YM2413 with required waits
                      (./Engine/Sound/Sm):00288                 ******************************************************************************
                      (./Engine/Sound/Sm):00289                 
894E                  (./Engine/Sound/Sm):00290                 _WriteYM MACRO
                      (./Engine/Sound/Sm):00291                         sta   YM2413_A0
                      (./Engine/Sound/Sm):00292                         nop
                      (./Engine/Sound/Sm):00293                         nop
                      (./Engine/Sound/Sm):00294                         stb   YM2413_D0
                      (./Engine/Sound/Sm):00295                  ENDM  
                      (./Engine/Sound/Sm):00296                 
894E                  (./Engine/Sound/Sm):00297                 _YMBusyWait5 MACRO
                      (./Engine/Sound/Sm):00298                         nop                                        
                      (./Engine/Sound/Sm):00299                         brn   *
                      (./Engine/Sound/Sm):00300                  ENDM
                      (./Engine/Sound/Sm):00301                 
894E                  (./Engine/Sound/Sm):00302                 _YMBusyWait9 MACRO
                      (./Engine/Sound/Sm):00303                         nop
                      (./Engine/Sound/Sm):00304                         nop
                      (./Engine/Sound/Sm):00305                         nop
                      (./Engine/Sound/Sm):00306                         brn   *
                      (./Engine/Sound/Sm):00307                  ENDM
                      (./Engine/Sound/Sm):00308                  
894E                  (./Engine/Sound/Sm):00309                 _YMBusyWait11 MACRO
                      (./Engine/Sound/Sm):00310                         nop
                      (./Engine/Sound/Sm):00311                         nop
                      (./Engine/Sound/Sm):00312                         nop
                      (./Engine/Sound/Sm):00313                         nop
                      (./Engine/Sound/Sm):00314                         brn   *
                      (./Engine/Sound/Sm):00315                  ENDM
                      (./Engine/Sound/Sm):00316                  
894E                  (./Engine/Sound/Sm):00317                 _YMBusyWait19 MACRO
                      (./Engine/Sound/Sm):00318                         exg   a,b
                      (./Engine/Sound/Sm):00319                         exg   a,b
                      (./Engine/Sound/Sm):00320                         brn   *
                      (./Engine/Sound/Sm):00321                  ENDM
                      (./Engine/Sound/Sm):00322                 
                      (./Engine/Sound/Sm):00323                 ******************************************************************************
                      (./Engine/Sound/Sm):00324                 * Setup YM2413 for Drum Mode
                      (./Engine/Sound/Sm):00325                 * destroys A, B
                      (./Engine/Sound/Sm):00326                 ******************************************************************************
                      (./Engine/Sound/Sm):00327                 
894E                  (./Engine/Sound/Sm):00328                 YM2413_DrumModeOn
894E 3416             (./Engine/Sound/Sm):00329 [9]     6806            pshs  d,x
8950 8E8975           (./Engine/Sound/Sm):00330 [3]     6809            ldx   #@data
8953 EC81             (./Engine/Sound/Sm):00331 [8]     6817    @a      ldd   ,x++
8955 2B0D             (./Engine/Sound/Sm):00332 [3]     6820            bmi   @end
                      (./Engine/Sound/Sm):00333                         _WriteYM
8957 B7E7FC           (         _WriteYM):00001 [5]     6825            sta   YM2413_A0
895A 12               (         _WriteYM):00002 [2]     6827            nop
895B 12               (         _WriteYM):00003 [2]     6829            nop
895C F7E7FD           (         _WriteYM):00004 [5]     6834            stb   YM2413_D0
                      (./Engine/Sound/Sm):00334                         _YMBusyWait5
895F 12               (     _YMBusyWait5):00001 [2]     6836            nop                                        
8960 21FE             (     _YMBusyWait5):00002 [3]     6839            brn   *
8962 20EF             (./Engine/Sound/Sm):00335 [3]     6842            bra   @a
8964 8605             (./Engine/Sound/Sm):00336 [2]     6844    @end    lda   #$05                     ; saves values for FMSilenceAll routine
8966 B7874E           (./Engine/Sound/Sm):00337 [5]     6849            sta   SongFM7.NoteControl 
8969 8605             (./Engine/Sound/Sm):00338 [2]     6851            lda   #$05
896B B78778           (./Engine/Sound/Sm):00339 [5]     6856            sta   SongFM8.NoteControl
896E 8601             (./Engine/Sound/Sm):00340 [2]     6858            lda   #$01
8970 B787A2           (./Engine/Sound/Sm):00341 [5]     6863            sta   SongFM9.NoteControl                
8973 3596             (./Engine/Sound/Sm):00342 [11]    6874            puls  d,x,pc       
8975                  (./Engine/Sound/Sm):00343                 @data
8975 0E20             (./Engine/Sound/Sm):00344                         fdb   $0E20
8977 1620             (./Engine/Sound/Sm):00345                         fdb   $1620
8979 1750             (./Engine/Sound/Sm):00346                         fdb   $1750 ; recommended setting is $1750 and $2705 for snare but $1700 and $2700 gives better SD sound (noise), affects HH that will sound more like a cowbell 
897B 18C0             (./Engine/Sound/Sm):00347                         fdb   $18C0
897D 2605             (./Engine/Sound/Sm):00348                         fdb   $2605 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
897F 2705             (./Engine/Sound/Sm):00349                         fdb   $2705 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
8981 2801             (./Engine/Sound/Sm):00350                         fdb   $2801 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
8983 36F2             (./Engine/Sound/Sm):00351                         fdb   $36F2 ; drum at max vol        
8985 3762             (./Engine/Sound/Sm):00352                         fdb   $3762 ; drum at max vol
8987 3844             (./Engine/Sound/Sm):00353                         fdb   $3844 ; drum at max vol
8989 FF               (./Engine/Sound/Sm):00354                         fcb   $FF
                      (./Engine/Sound/Sm):00355                         
                      (./Engine/Sound/Sm):00356                 ******************************************************************************
                      (./Engine/Sound/Sm):00357                 * InitMusicPlayback
                      (./Engine/Sound/Sm):00358                 * 
                      (./Engine/Sound/Sm):00359                 ******************************************************************************
                      (./Engine/Sound/Sm):00360                 
898A                  (./Engine/Sound/Sm):00361                 InitMusicPlayback
898A BD8991           (./Engine/Sound/Sm):00362 [8]     6882            jsr   FMSilenceAll
898D BD89BA           (./Engine/Sound/Sm):00363 [8]     6890            jsr   PSGSilenceAll
8990 39               (./Engine/Sound/Sm):00364 [5]     6895            rts
                      (./Engine/Sound/Sm):00365                 
                      (./Engine/Sound/Sm):00366                 ******************************************************************************
                      (./Engine/Sound/Sm):00367                 * FMSilenceAll
                      (./Engine/Sound/Sm):00368                 * destroys A, B, Y
                      (./Engine/Sound/Sm):00369                 ******************************************************************************
                      (./Engine/Sound/Sm):00370                 
8991                  (./Engine/Sound/Sm):00371                 FMSilenceAll
8991 CC200E           (./Engine/Sound/Sm):00372 [3]     6898            ldd   #$200E
8994 F7E7FC           (./Engine/Sound/Sm):00373 [5]     6903            stb   YM2413_A0
8997 108E8652         (./Engine/Sound/Sm):00374 [4]     6907            ldy   #SongFM1.NoteControl
899B B7E7FD           (./Engine/Sound/Sm):00375 [5]     6912            sta   YM2413_D0                ; note off for all drums     
                      (./Engine/Sound/Sm):00376                         _YMBusyWait5
899E 12               (     _YMBusyWait5):00001 [2]     6914            nop                                        
899F 21FE             (     _YMBusyWait5):00002 [3]     6917            brn   *
                      (./Engine/Sound/Sm):00377                         _YMBusyWait5        
89A1 12               (     _YMBusyWait5):00001 [2]     6919            nop                                        
89A2 21FE             (     _YMBusyWait5):00002 [3]     6922            brn   *
                      (./Engine/Sound/Sm):00378                                 
89A4                  (./Engine/Sound/Sm):00379                 @a      _YMBusyWait5                   ; total wait btw two notes : 20 cycles
89A4 12               (     _YMBusyWait5):00001 [2]     6924            nop                                        
89A5 21FE             (     _YMBusyWait5):00002 [3]     6927            brn   *
89A7 E6A4             (./Engine/Sound/Sm):00380 [4]     6931            ldb   ,y                       ; (wait of 4 cycles)
89A9 B7E7FC           (./Engine/Sound/Sm):00381 [5]     6936            sta   YM2413_A0
89AC C4EF             (./Engine/Sound/Sm):00382 [2]     6938            andb  #$EF                     ; note off for each track
89AE 4C               (./Engine/Sound/Sm):00383 [2]     6940            inca
89AF F7E7FD           (./Engine/Sound/Sm):00384 [5]     6945            stb   YM2413_D0
89B2 31A82A           (./Engine/Sound/Sm):00385 [5]     6950            leay  sizeof{Track},y          ; (wait of 5 cycles)        
89B5 8129             (./Engine/Sound/Sm):00386 [2]     6952            cmpa  #$29                     ; (wait of 2 cycles)
89B7 26EB             (./Engine/Sound/Sm):00387 [3]     6955            bne   @a                       ; (wait of 3 cycles)
89B9 39               (./Engine/Sound/Sm):00388 [5]     6960            rts
                      (./Engine/Sound/Sm):00389                 
                      (./Engine/Sound/Sm):00390                 ******************************************************************************
                      (./Engine/Sound/Sm):00391                 * PSGSilenceAll
                      (./Engine/Sound/Sm):00392                 * destroys A
                      (./Engine/Sound/Sm):00393                 ******************************************************************************
                      (./Engine/Sound/Sm):00394                         
89BA                  (./Engine/Sound/Sm):00395                 PSGSilenceAll
89BA 869F             (./Engine/Sound/Sm):00396 [2]     6962            lda   #$9F
89BC B7E7FF           (./Engine/Sound/Sm):00397 [5]     6967            sta   PSG
89BF 86BF             (./Engine/Sound/Sm):00398 [2]     6969            lda   #$BF
89C1 B7E7FF           (./Engine/Sound/Sm):00399 [5]     6974            sta   PSG       
89C4 86DF             (./Engine/Sound/Sm):00400 [2]     6976            lda   #$DF
89C6 B7E7FF           (./Engine/Sound/Sm):00401 [5]     6981            sta   PSG
89C9 86FF             (./Engine/Sound/Sm):00402 [2]     6983            lda   #$FF
89CB B7E7FF           (./Engine/Sound/Sm):00403 [5]     6988            sta   PSG                               
89CE 39               (./Engine/Sound/Sm):00404 [5]     6993            rts        
                      (./Engine/Sound/Sm):00405                 
                      (./Engine/Sound/Sm):00406                 ******************************************************************************
                      (./Engine/Sound/Sm):00407                 * PlayMusic - Load a new music and init all tracks
                      (./Engine/Sound/Sm):00408                 *
                      (./Engine/Sound/Sm):00409                 * receives in X the address of the song
                      (./Engine/Sound/Sm):00410                 * destroys X
                      (./Engine/Sound/Sm):00411                 ******************************************************************************
                      (./Engine/Sound/Sm):00412                 
89CF                  (./Engine/Sound/Sm):00413                 PlayMusic
89CF                  (./Engine/Sound/Sm):00414                 BGMLoad
89CF 3466             (./Engine/Sound/Sm):00415 [11]    7004            pshs  d,y,u
                      (./Engine/Sound/Sm):00416                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
89D1 BD7380           (    _GetCartPageA):00002 [8]     7012            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
89D4 B78A42           (./Engine/Sound/Sm):00417 [5]     7017            sta   BGMLoad_end+1            ; backup data page
                      (./Engine/Sound/Sm):00418                                 
89D7 A684             (./Engine/Sound/Sm):00419 [4]     7021            lda   ,x                       ; get memory page that contains track data
89D9 B78948           (./Engine/Sound/Sm):00420 [5]     7026            sta   MusicPage
89DC AE01             (./Engine/Sound/Sm):00421 [6]     7032            ldx   1,x                      ; get ptr to track data
89DE BF894A           (./Engine/Sound/Sm):00422 [6]     7038            stx   MusicData
                      (./Engine/Sound/Sm):00423                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
89E1 BD7324           (    _SetCartPageA):00002 [8]     7046            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Sound/Sm):00424                 
89E4 BD898A           (./Engine/Sound/Sm):00425 [8]     7054            jsr   InitMusicPlayback
89E7 EC84             (./Engine/Sound/Sm):00426 [5]     7059            ldd   SMPS_VOICE,x
89E9 F3894A           (./Engine/Sound/Sm):00427 [7]     7066            addd  MusicData   
89EC FD8619           (./Engine/Sound/Sm):00428 [6]     7072            std   Smps.VoiceTblPtr
                      (./Engine/Sound/Sm):00429                         
89EF EC04             (./Engine/Sound/Sm):00430 [6]     7078            ldd   SMPS_TEMPO_DELAY,x
89F1 B78947           (./Engine/Sound/Sm):00431 [5]     7083            sta   SongDelay
89F4 F78621           (./Engine/Sound/Sm):00432 [5]     7088            stb   Smps.TempoMod
89F7 F78612           (./Engine/Sound/Sm):00433 [5]     7093            stb   Smps.CurrentTempo
89FA F78611           (./Engine/Sound/Sm):00434 [5]     7098            stb   Smps.TempoTimeout
                      (./Engine/Sound/Sm):00435                         
89FD 8605             (./Engine/Sound/Sm):00436 [2]     7100            lda   #$05
89FF B78944           (./Engine/Sound/Sm):00437 [5]     7105            sta   PALUpdTick
                      (./Engine/Sound/Sm):00438                         
8A02 A602             (./Engine/Sound/Sm):00439 [5]     7110            lda   SMPS_NB_FM,x
8A04 B78A18           (./Engine/Sound/Sm):00440 [5]     7115            sta   @fm+1
8A07 3306             (./Engine/Sound/Sm):00441 [5]     7120            leau  SMPS_TRK_HEADER,x
8A09 EC08             (./Engine/Sound/Sm):00442 [6]     7126            ldd   SMPS_DAC_FLAG,x
8A0B 260A             (./Engine/Sound/Sm):00443 [3]     7129            bne   @fm                      ; no DRUM track found (should be $0000 to be DRUM)
8A0D 108E8626         (./Engine/Sound/Sm):00444 [4]     7133            ldy   #SongDAC
8A11 BD8A48           (./Engine/Sound/Sm):00445 [8]     7141            jsr   InitTrackFM              ; DRUM mode use channel 6-8
8A14 7A8A18           (./Engine/Sound/Sm):00446 [7]     7148            dec   @fm+1                    ; DAC track is part of FM nb channel count
8A17                  (./Engine/Sound/Sm):00447                 @fm      
8A17 8600             (./Engine/Sound/Sm):00448 [2]     7150            lda   #$00                     ; (dynamic) nb of FM tracks to init
8A19 108E8650         (./Engine/Sound/Sm):00449 [4]     7154            ldy   #SongFM1                 ; Init all FM tracks
8A1D 7A8A18           (./Engine/Sound/Sm):00450 [7]     7161    @fmlp   dec   @fm+1
8A20 2B05             (./Engine/Sound/Sm):00451 [3]     7164            bmi   @psg     
8A22 BD8A48           (./Engine/Sound/Sm):00452 [8]     7172            jsr   InitTrackFM
8A25 20F6             (./Engine/Sound/Sm):00453 [3]     7175            bra   @fmlp
8A27                  (./Engine/Sound/Sm):00454                 @psg    
8A27 86C0             (./Engine/Sound/Sm):00455 [2]     7177            lda   #$C0                     ; set back Tone channel for PSG3 (can be switched to noise by cfSetPSGNoise)
8A29 B7881F           (./Engine/Sound/Sm):00456 [5]     7182            sta   SongPSG3.VoiceControl
8A2C A603             (./Engine/Sound/Sm):00457 [5]     7187            lda   SMPS_NB_PSG,x
8A2E B78A32           (./Engine/Sound/Sm):00458 [5]     7192            sta   >*+4
8A31 8600             (./Engine/Sound/Sm):00459 [2]     7194    @dyn    lda   #$00                     ; (dynamic) nb of PSG tracks to init
8A33 108E87CA         (./Engine/Sound/Sm):00460 [4]     7198            ldy   #SongPSG1                ; Init all PSG tracks
8A37 7A8A32           (./Engine/Sound/Sm):00461 [7]     7205    @psglp  dec   @dyn+1
8A3A 2B05             (./Engine/Sound/Sm):00462 [3]     7208            bmi   BGMLoad_end     
8A3C BD8A69           (./Engine/Sound/Sm):00463 [8]     7216            jsr   InitTrackPSG
8A3F 20F6             (./Engine/Sound/Sm):00464 [3]     7219            bra   @psglp
                      (./Engine/Sound/Sm):00465                 
8A41                  (./Engine/Sound/Sm):00466                 BGMLoad_end
8A41 8600             (./Engine/Sound/Sm):00467 [2]     7221            lda   #0                       ; (dynamic) set back data page
                      (./Engine/Sound/Sm):00468                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
8A43 BD7324           (    _SetCartPageA):00002 [8]     7229            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8A46 35E6             (./Engine/Sound/Sm):00469 [13]    7242            puls  d,y,u,pc
                      (./Engine/Sound/Sm):00470                 
8A48                  (./Engine/Sound/Sm):00471                 InitTrackFM
8A48 B68947           (./Engine/Sound/Sm):00472 [5]     7247            lda   SongDelay        
8A4B A723             (./Engine/Sound/Sm):00473 [5]     7252            sta   TempoDivider,y
8A4D CC8201           (./Engine/Sound/Sm):00474 [3]     7255            ldd   #$8201
8A50 A7A4             (./Engine/Sound/Sm):00475 [4]     7259            sta   PlaybackControl,y
8A52 E72B             (./Engine/Sound/Sm):00476 [5]     7264            stb   DurationTimeout,y
8A54 C62A             (./Engine/Sound/Sm):00477 [2]     7266            ldb   #GoSubStack
8A56 E72A             (./Engine/Sound/Sm):00478 [5]     7271            stb   StackPointer,y
8A58 ECC4             (./Engine/Sound/Sm):00479 [5]     7276            ldd   SMPS_TRK_DATA_PTR,u
8A5A F3894A           (./Engine/Sound/Sm):00480 [7]     7283            addd  MusicData
8A5D ED24             (./Engine/Sound/Sm):00481 [6]     7289            std   DataPointer,y
8A5F EC42             (./Engine/Sound/Sm):00482 [6]     7295            ldd   SMPS_TRK_TR_VOL_PTR,u
8A61 ED26             (./Engine/Sound/Sm):00483 [6]     7301            std   TranspAndVolume,y
8A63 3344             (./Engine/Sound/Sm):00484 [5]     7306            leau  SMPS_TRK_FM_HDR_LEN,u
8A65 31A82A           (./Engine/Sound/Sm):00485 [5]     7311            leay  sizeof{Track},y
8A68 39               (./Engine/Sound/Sm):00486 [5]     7316            rts       
                      (./Engine/Sound/Sm):00487                  
8A69                  (./Engine/Sound/Sm):00488                 InitTrackPSG
8A69 B68947           (./Engine/Sound/Sm):00489 [5]     7321            lda   SongDelay        
8A6C A723             (./Engine/Sound/Sm):00490 [5]     7326            sta   TempoDivider,y
8A6E CC8201           (./Engine/Sound/Sm):00491 [3]     7329            ldd   #$8201
8A71 A7A4             (./Engine/Sound/Sm):00492 [4]     7333            sta   PlaybackControl,y
8A73 E72B             (./Engine/Sound/Sm):00493 [5]     7338            stb   DurationTimeout,y
8A75 C62A             (./Engine/Sound/Sm):00494 [2]     7340            ldb   #GoSubStack
8A77 E72A             (./Engine/Sound/Sm):00495 [5]     7345            stb   StackPointer,y        
8A79 ECC4             (./Engine/Sound/Sm):00496 [5]     7350            ldd   SMPS_TRK_DATA_PTR,u
8A7B F3894A           (./Engine/Sound/Sm):00497 [7]     7357            addd  MusicData
8A7E ED24             (./Engine/Sound/Sm):00498 [6]     7363            std   DataPointer,y
8A80 EC42             (./Engine/Sound/Sm):00499 [6]     7369            ldd   SMPS_TRK_TR_VOL_PTR,u
8A82 ED26             (./Engine/Sound/Sm):00500 [6]     7375            std   TranspAndVolume,y
8A84 A645             (./Engine/Sound/Sm):00501 [5]     7380            lda   SMPS_TRK_ENV_PTR,u
8A86 A728             (./Engine/Sound/Sm):00502 [5]     7385            sta   VoiceIndex,y
8A88 3346             (./Engine/Sound/Sm):00503 [5]     7390            leau  SMPS_TRK_PSG_HDR_LEN,u
8A8A 31A82A           (./Engine/Sound/Sm):00504 [5]     7395            leay  sizeof{Track},y
8A8D 39               (./Engine/Sound/Sm):00505 [5]     7400            rts        
                      (./Engine/Sound/Sm):00506                         
                      (./Engine/Sound/Sm):00507                 ******************************************************************************
                      (./Engine/Sound/Sm):00508                 * MusicFrame - processes a music frame (VInt)
                      (./Engine/Sound/Sm):00509                 *
                      (./Engine/Sound/Sm):00510                 * SMPS Song Data
                      (./Engine/Sound/Sm):00511                 * --------------
                      (./Engine/Sound/Sm):00512                 * value in range [$00, $7F] : Duration value
                      (./Engine/Sound/Sm):00513                 * value in range [$80]      : Rest (counts as a note value)
                      (./Engine/Sound/Sm):00514                 * value in range [$81, $DF] : Note value
                      (./Engine/Sound/Sm):00515                 * value in range [$E0, $FF] : Coordination flag
                      (./Engine/Sound/Sm):00516                 *
                      (./Engine/Sound/Sm):00517                 * destroys A,B,X,Y
                      (./Engine/Sound/Sm):00518                 ******************************************************************************
                      (./Engine/Sound/Sm):00519                 
8A8E                  (./Engine/Sound/Sm):00520                 _UpdateTrack MACRO
                      (./Engine/Sound/Sm):00521                         lda   \1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
                      (./Engine/Sound/Sm):00522                         bpl   a@
                      (./Engine/Sound/Sm):00523                         ldy   #\1                               
                      (./Engine/Sound/Sm):00524                         jsr   \2                       ; If so, UpdateTrack
8A8E                  (./Engine/Sound/Sm):00525                 a@      equ   *        
                      (./Engine/Sound/Sm):00526                  ENDM
                      (./Engine/Sound/Sm):00527                         
8A8E                  (./Engine/Sound/Sm):00528                 MusicFrame 
                      (./Engine/Sound/Sm):00529                         
                      (./Engine/Sound/Sm):00530                         ; simple sound fx implementation with no priority
                      (./Engine/Sound/Sm):00531                         ; TODO upgrade to a queue system like original code
8A8E BE8617           (./Engine/Sound/Sm):00532 [6]     7406            ldx   Smps.SFXToPlay           ; get last requested sound effect to play
8A91 2709             (./Engine/Sound/Sm):00533 [3]     7409            beq   @a                       ; 0 means no sound effect to play
8A93 BD9251           (./Engine/Sound/Sm):00534 [8]     7417            jsr   PlaySound
8A96 CC0000           (./Engine/Sound/Sm):00535 [3]     7420            ldd   #0                       ; reset to be able to play another effect from now
8A99 FD8617           (./Engine/Sound/Sm):00536 [6]     7426            std   Smps.SFXToPlay
8A9C                  (./Engine/Sound/Sm):00537                 @a       
8A9C B68948           (./Engine/Sound/Sm):00538 [5]     7431            lda   MusicPage                ; page switch to the music
8A9F 10270095         (./Engine/Sound/Sm):00539 [5+?]   7436            lbeq  UpdateSound              ; no music to play
                      (./Engine/Sound/Sm):00540                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
8AA3 BD7324           (    _SetCartPageA):00002 [8]     7444            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8AA6 7F8945           (./Engine/Sound/Sm):00541 [7]     7451            clr   DoSFXFlag
                      (./Engine/Sound/Sm):00542                 
8AA9                  (./Engine/Sound/Sm):00543                 UpdateEverything        
8AA9 B68625           (./Engine/Sound/Sm):00544 [5]     7456            lda   Smps.60HzData            ; TODO use SMPS relocate to convert timings
8AAC 270D             (./Engine/Sound/Sm):00545 [3]     7459            beq   @a                       ; to play 60hz songs at 50hz at normal speed
8AAE 7A8944           (./Engine/Sound/Sm):00546 [7]     7466            dec   PALUpdTick               ; this will allow to throw away this code
8AB1 2608             (./Engine/Sound/Sm):00547 [3]     7469            bne   @a
8AB3 8605             (./Engine/Sound/Sm):00548 [2]     7471            lda   #5
8AB5 B78944           (./Engine/Sound/Sm):00549 [5]     7476            sta   PALUpdTick
8AB8 BD8AC0           (./Engine/Sound/Sm):00550 [8]     7484            jsr   UpdateMusic              ; play 2 frames in one to keep original speed
8ABB BD8AC0           (./Engine/Sound/Sm):00551 [8]     7492    @a      jsr   UpdateMusic              ; play 2 frames in one to keep original speed
8ABE 2078             (./Engine/Sound/Sm):00552 [3]     7495            bra   UpdateSound
                      (./Engine/Sound/Sm):00553                 
8AC0                  (./Engine/Sound/Sm):00554                 UpdateMusic
                      (./Engine/Sound/Sm):00555                         * jsr   TempoWait              ; optim : do not call TempoWait, instead skip update
8AC0 B68612           (./Engine/Sound/Sm):00556 [5]     7500            lda   Smps.CurrentTempo        ; tempo value
8AC3 BB8611           (./Engine/Sound/Sm):00557 [5]     7505            adda  Smps.TempoTimeout        ; Adds previous value to
8AC6 B78611           (./Engine/Sound/Sm):00558 [5]     7510            sta   Smps.TempoTimeout        ; Store this as new
8AC9 246C             (./Engine/Sound/Sm):00559 [3]     7513            bcc   @rts                     ; skip update if tempo need more waits
                      (./Engine/Sound/Sm):00560                         _UpdateTrack SongDAC,DACUpdateTrack
8ACB B68626           (     _UpdateTrack):00001 [5]     7518            lda   SongDAC.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8ACE 2A07             (     _UpdateTrack):00002 [3]     7521            bpl   a@
8AD0 108E8626         (     _UpdateTrack):00003 [4]     7525            ldy   #SongDAC                               
8AD4 BD8B8F           (     _UpdateTrack):00004 [8]     7533            jsr   DACUpdateTrack                       ; If so, UpdateTrack
     8AD7             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00561                         _UpdateTrack SongFM1,FMUpdateTrack
8AD7 B68650           (     _UpdateTrack):00001 [5]     7538            lda   SongFM1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8ADA 2A07             (     _UpdateTrack):00002 [3]     7541            bpl   a@
8ADC 108E8650         (     _UpdateTrack):00003 [4]     7545            ldy   #SongFM1                               
8AE0 BD8BEE           (     _UpdateTrack):00004 [8]     7553            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8AE3             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00562                         _UpdateTrack SongFM2,FMUpdateTrack
8AE3 B6867A           (     _UpdateTrack):00001 [5]     7558            lda   SongFM2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8AE6 2A07             (     _UpdateTrack):00002 [3]     7561            bpl   a@
8AE8 108E867A         (     _UpdateTrack):00003 [4]     7565            ldy   #SongFM2                               
8AEC BD8BEE           (     _UpdateTrack):00004 [8]     7573            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8AEF             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00563                         _UpdateTrack SongFM3,FMUpdateTrack
8AEF B686A4           (     _UpdateTrack):00001 [5]     7578            lda   SongFM3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8AF2 2A07             (     _UpdateTrack):00002 [3]     7581            bpl   a@
8AF4 108E86A4         (     _UpdateTrack):00003 [4]     7585            ldy   #SongFM3                               
8AF8 BD8BEE           (     _UpdateTrack):00004 [8]     7593            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8AFB             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00564                         _UpdateTrack SongFM4,FMUpdateTrack
8AFB B686CE           (     _UpdateTrack):00001 [5]     7598            lda   SongFM4.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8AFE 2A07             (     _UpdateTrack):00002 [3]     7601            bpl   a@
8B00 108E86CE         (     _UpdateTrack):00003 [4]     7605            ldy   #SongFM4                               
8B04 BD8BEE           (     _UpdateTrack):00004 [8]     7613            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8B07             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00565                         _UpdateTrack SongFM5,FMUpdateTrack
8B07 B686F8           (     _UpdateTrack):00001 [5]     7618            lda   SongFM5.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B0A 2A07             (     _UpdateTrack):00002 [3]     7621            bpl   a@
8B0C 108E86F8         (     _UpdateTrack):00003 [4]     7625            ldy   #SongFM5                               
8B10 BD8BEE           (     _UpdateTrack):00004 [8]     7633            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8B13             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00566                         ;_UpdateTrack SongFM6,FMUpdateTrack      ; uncomment to use this channel
                      (./Engine/Sound/Sm):00567                         ;_UpdateTrack SongFM7,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit
                      (./Engine/Sound/Sm):00568                         ;_UpdateTrack SongFM8,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit
                      (./Engine/Sound/Sm):00569                         ;_UpdateTrack SongFM9,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit        
                      (./Engine/Sound/Sm):00570                         ;_UpdateTrack SongPSG4,PSGUpdateTrack    ; uncomment to use noise channel as an independent channel from tone 3
                      (./Engine/Sound/Sm):00571                         _UpdateTrack SongPSG1,PSGUpdateTrack
8B13 B687CA           (     _UpdateTrack):00001 [5]     7638            lda   SongPSG1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B16 2A07             (     _UpdateTrack):00002 [3]     7641            bpl   a@
8B18 108E87CA         (     _UpdateTrack):00003 [4]     7645            ldy   #SongPSG1                               
8B1C BD8E6C           (     _UpdateTrack):00004 [8]     7653            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8B1F             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00572                         _UpdateTrack SongPSG2,PSGUpdateTrack        
8B1F B687F4           (     _UpdateTrack):00001 [5]     7658            lda   SongPSG2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B22 2A07             (     _UpdateTrack):00002 [3]     7661            bpl   a@
8B24 108E87F4         (     _UpdateTrack):00003 [4]     7665            ldy   #SongPSG2                               
8B28 BD8E6C           (     _UpdateTrack):00004 [8]     7673            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8B2B             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00573                         _UpdateTrack SongPSG3,PSGUpdateTrack
8B2B B6881E           (     _UpdateTrack):00001 [5]     7678            lda   SongPSG3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B2E 2A07             (     _UpdateTrack):00002 [3]     7681            bpl   a@
8B30 108E881E         (     _UpdateTrack):00003 [4]     7685            ldy   #SongPSG3                               
8B34 BD8E6C           (     _UpdateTrack):00004 [8]     7693            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8B37             (     _UpdateTrack):00005                 a@      equ   *        
8B37 39               (./Engine/Sound/Sm):00574 [5]     7698    @rts    rts
                      (./Engine/Sound/Sm):00575                 
8B38                  (./Engine/Sound/Sm):00576                 UpdateSound        
8B38 B68949           (./Engine/Sound/Sm):00577 [5]     7703            lda   SoundPage                ; page switch to the sound
8B3B 2601             (./Engine/Sound/Sm):00578 [3]     7706            bne   @a
8B3D 39               (./Engine/Sound/Sm):00579 [5]     7711            rts
8B3E                  (./Engine/Sound/Sm):00580                 @a      _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
8B3E BD7324           (    _SetCartPageA):00002 [8]     7719            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8B41 8680             (./Engine/Sound/Sm):00581 [2]     7721            lda   #$80
8B43 B78945           (./Engine/Sound/Sm):00582 [5]     7726            sta   DoSFXFlag                ; Set zDoSFXFlag = 80h (updating sound effects)
                      (./Engine/Sound/Sm):00583                         _UpdateTrack SFXFM3,FMUpdateTrack
8B46 B68848           (     _UpdateTrack):00001 [5]     7731            lda   SFXFM3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B49 2A07             (     _UpdateTrack):00002 [3]     7734            bpl   a@
8B4B 108E8848         (     _UpdateTrack):00003 [4]     7738            ldy   #SFXFM3                               
8B4F BD8BEE           (     _UpdateTrack):00004 [8]     7746            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8B52             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00584                         _UpdateTrack SFXFM4,FMUpdateTrack
8B52 B68872           (     _UpdateTrack):00001 [5]     7751            lda   SFXFM4.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B55 2A07             (     _UpdateTrack):00002 [3]     7754            bpl   a@
8B57 108E8872         (     _UpdateTrack):00003 [4]     7758            ldy   #SFXFM4                               
8B5B BD8BEE           (     _UpdateTrack):00004 [8]     7766            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8B5E             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00585                         _UpdateTrack SFXFM5,FMUpdateTrack
8B5E B6889C           (     _UpdateTrack):00001 [5]     7771            lda   SFXFM5.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B61 2A07             (     _UpdateTrack):00002 [3]     7774            bpl   a@
8B63 108E889C         (     _UpdateTrack):00003 [4]     7778            ldy   #SFXFM5                               
8B67 BD8BEE           (     _UpdateTrack):00004 [8]     7786            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8B6A             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00586                         _UpdateTrack SFXPSG1,PSGUpdateTrack
8B6A B688C6           (     _UpdateTrack):00001 [5]     7791            lda   SFXPSG1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B6D 2A07             (     _UpdateTrack):00002 [3]     7794            bpl   a@
8B6F 108E88C6         (     _UpdateTrack):00003 [4]     7798            ldy   #SFXPSG1                               
8B73 BD8E6C           (     _UpdateTrack):00004 [8]     7806            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8B76             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00587                         _UpdateTrack SFXPSG2,PSGUpdateTrack        
8B76 B688F0           (     _UpdateTrack):00001 [5]     7811            lda   SFXPSG2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B79 2A07             (     _UpdateTrack):00002 [3]     7814            bpl   a@
8B7B 108E88F0         (     _UpdateTrack):00003 [4]     7818            ldy   #SFXPSG2                               
8B7F BD8E6C           (     _UpdateTrack):00004 [8]     7826            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8B82             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00588                         _UpdateTrack SFXPSG3,PSGUpdateTrack
8B82 B6891A           (     _UpdateTrack):00001 [5]     7831            lda   SFXPSG3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8B85 2A07             (     _UpdateTrack):00002 [3]     7834            bpl   a@
8B87 108E891A         (     _UpdateTrack):00003 [4]     7838            ldy   #SFXPSG3                               
8B8B BD8E6C           (     _UpdateTrack):00004 [8]     7846            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8B8E             (     _UpdateTrack):00005                 a@      equ   *        
8B8E 39               (./Engine/Sound/Sm):00589 [5]     7851    @rts    rts
                      (./Engine/Sound/Sm):00590                 
                      (./Engine/Sound/Sm):00591                 * * ************************************************************************************
                      (./Engine/Sound/Sm):00592                 * * 
                      (./Engine/Sound/Sm):00593                 * TempoWait
                      (./Engine/Sound/Sm):00594                 *         ; Tempo works as divisions of the 60Hz clock (there is a fix supplied for
                      (./Engine/Sound/Sm):00595                 *         ; PAL that "kind of" keeps it on track.)  Every time the internal music clock
                      (./Engine/Sound/Sm):00596                 *         ; overflows, it will update.  So a tempo of 80h will update every other
                      (./Engine/Sound/Sm):00597                 *         ; frame, or 30 times a second.
                      (./Engine/Sound/Sm):00598                 
                      (./Engine/Sound/Sm):00599                 *         lda   Smps.CurrentTempo  ; tempo value
                      (./Engine/Sound/Sm):00600                 *         adda  Smps.TempoTimeout  ; Adds previous value to
                      (./Engine/Sound/Sm):00601                 *         sta   Smps.TempoTimeout  ; Store this as new
                      (./Engine/Sound/Sm):00602                 *         bcc   @a
                      (./Engine/Sound/Sm):00603                 *         rts                     ; If addition overflowed (answer greater than FFh), return
                      (./Engine/Sound/Sm):00604                 * @a
                      (./Engine/Sound/Sm):00605                 *         ; So if adding tempo value did NOT overflow, then we add 1 to all durations
                      (./Engine/Sound/Sm):00606                 *         inc   SongDAC.DurationTimeout
                      (./Engine/Sound/Sm):00607                 *         inc   SongFM1.DurationTimeout
                      (./Engine/Sound/Sm):00608                 *         inc   SongFM2.DurationTimeout
                      (./Engine/Sound/Sm):00609                 *         inc   SongFM3.DurationTimeout
                      (./Engine/Sound/Sm):00610                 *         inc   SongFM4.DurationTimeout
                      (./Engine/Sound/Sm):00611                 *         inc   SongFM5.DurationTimeout
                      (./Engine/Sound/Sm):00612                 *         ;inc   SongFM6.DurationTimeout
                      (./Engine/Sound/Sm):00613                 *         ;inc   SongFM7.DurationTimeout
                      (./Engine/Sound/Sm):00614                 *         ;inc   SongFM8.DurationTimeout                
                      (./Engine/Sound/Sm):00615                 *         ;inc   SongFM9.DurationTimeout                        
                      (./Engine/Sound/Sm):00616                 *         ;inc   SongPSG4.DurationTimeout
                      (./Engine/Sound/Sm):00617                 *         inc   SongPSG1.DurationTimeout
                      (./Engine/Sound/Sm):00618                 *         inc   SongPSG2.DurationTimeout
                      (./Engine/Sound/Sm):00619                 *         inc   SongPSG3.DurationTimeout
                      (./Engine/Sound/Sm):00620                 *         rts
                      (./Engine/Sound/Sm):00621                 
                      (./Engine/Sound/Sm):00622                 ******************************************************************************
                      (./Engine/Sound/Sm):00623                 * DACUpdateTrack
                      (./Engine/Sound/Sm):00624                 * input Y (ptr to SONGDAC, is used by CoordFlag)
                      (./Engine/Sound/Sm):00625                 * destroys A,B,X
                      (./Engine/Sound/Sm):00626                 ******************************************************************************
                      (./Engine/Sound/Sm):00627                 
8B8F                  (./Engine/Sound/Sm):00628                 DACUpdateTrack        
8B8F 7A8631           (./Engine/Sound/Sm):00629 [7]     7858            dec   SongDAC.DurationTimeout
8B92 2701             (./Engine/Sound/Sm):00630 [3]     7861            beq   @a
8B94 39               (./Engine/Sound/Sm):00631 [5]     7866            rts
8B95                  (./Engine/Sound/Sm):00632                 @a
8B95 CC0E20           (./Engine/Sound/Sm):00633 [3]     7869            ldd   #$0E20                   ; note has ended, so note off
8B98 97FC             (./Engine/Sound/Sm):00634 [4]     7873            sta   <YM2413_A0
8B9A BE862A           (./Engine/Sound/Sm):00635 [6]     7879            ldx   SongDAC.DataPointer
8B9D D7FD             (./Engine/Sound/Sm):00636 [4]     7883            stb   <YM2413_D0        
                      (./Engine/Sound/Sm):00637                                  
8B9F E680             (./Engine/Sound/Sm):00638 [6]     7889    @b      ldb   ,x+                      ; read DAC song data
8BA1 C1E0             (./Engine/Sound/Sm):00639 [2]     7891            cmpb  #$E0
8BA3 2505             (./Engine/Sound/Sm):00640 [3]     7894            blo   @a                       ; test for >= E0h, which is a coordination flag
8BA5 BD9311           (./Engine/Sound/Sm):00641 [8]     7902            jsr   CoordFlag
8BA8 20F5             (./Engine/Sound/Sm):00642 [3]     7905            bra   @b                       ; read all consecutive coordination flags 
8BAA                  (./Engine/Sound/Sm):00643                 @a        
8BAA 2A0E             (./Engine/Sound/Sm):00644 [3]     7908            bpl   SetDuration              ; test for 80h not set, which is a note duration
8BAC F78633           (./Engine/Sound/Sm):00645 [5]     7913            stb   SongDAC.NextData               ; This is a note; store it here
8BAF E684             (./Engine/Sound/Sm):00646 [4]     7917            ldb   ,x
8BB1 2A05             (./Engine/Sound/Sm):00647 [3]     7920            bpl   SetDurationAndForward    ; test for 80h not set, which is a note duration
8BB3 F68632           (./Engine/Sound/Sm):00648 [5]     7925            ldb   SongDAC.SavedDuration
8BB6 2009             (./Engine/Sound/Sm):00649 [3]     7928            bra   DACAfterDur
                      (./Engine/Sound/Sm):00650                 
8BB8                  (./Engine/Sound/Sm):00651                 SetDurationAndForward
8BB8 3001             (./Engine/Sound/Sm):00652 [5]     7933            leax  1,x
8BBA                  (./Engine/Sound/Sm):00653                 SetDuration
8BBA B68629           (./Engine/Sound/Sm):00654 [5]     7938            lda   SongDAC.TempoDivider
8BBD 3D               (./Engine/Sound/Sm):00655 [11]    7949            mul
8BBE F78632           (./Engine/Sound/Sm):00656 [5]     7954            stb   SongDAC.SavedDuration
8BC1                  (./Engine/Sound/Sm):00657                 DACAfterDur
8BC1 F78631           (./Engine/Sound/Sm):00658 [5]     7959            stb   SongDAC.DurationTimeout
8BC4 BF862A           (./Engine/Sound/Sm):00659 [6]     7965            stx   SongDAC.DataPointer
8BC7 F68633           (./Engine/Sound/Sm):00660 [5]     7970            ldb   SongDAC.NextData
8BCA C180             (./Engine/Sound/Sm):00661 [2]     7972            cmpb  #$80
8BCC 2601             (./Engine/Sound/Sm):00662 [3]     7975            bne   @a
8BCE 39               (./Engine/Sound/Sm):00663 [5]     7980            rts                            ; if a rest, quit
8BCF                  (./Engine/Sound/Sm):00664                 @a
8BCF 8E8BDD           (./Engine/Sound/Sm):00665 [3]     7983            ldx   #@data            
8BD2 C081             (./Engine/Sound/Sm):00666 [2]     7985            subb  #$81                     ; transform note into an index...      
8BD4 860E             (./Engine/Sound/Sm):00667 [2]     7987            lda   #$0E
8BD6 97FC             (./Engine/Sound/Sm):00668 [4]     7991            sta   <YM2413_A0
8BD8 E685             (./Engine/Sound/Sm):00669 [5]     7996            ldb   b,x
8BDA D7FD             (./Engine/Sound/Sm):00670 [4]     8000            stb   <YM2413_D0      
8BDC 39               (./Engine/Sound/Sm):00671 [5]     8005            rts
8BDD                  (./Engine/Sound/Sm):00672                 @data
8BDD 30               (./Engine/Sound/Sm):00673                         fcb   $30 ; $81 - Kick  (BD+TOM) 34
8BDE 28               (./Engine/Sound/Sm):00674                         fcb   $28 ; $82 - Snare (SNARE noise+TOM) 2C
8BDF 21               (./Engine/Sound/Sm):00675                         fcb   $21 ; $83 - Clap 21
8BE0 22               (./Engine/Sound/Sm):00676                         fcb   $22 ; $84 - Scratch 22
8BE1 24               (./Engine/Sound/Sm):00677                         fcb   $24 ; $85 - Timpani 22
8BE2 24               (./Engine/Sound/Sm):00678                         fcb   $24 ; $86 - Hi Tom
8BE3 24               (./Engine/Sound/Sm):00679                         fcb   $24 ; $87 - Bongo
8BE4 24               (./Engine/Sound/Sm):00680                         fcb   $24 ; $88 - Hi Timpani
8BE5 30               (./Engine/Sound/Sm):00681                         fcb   $30 ; $89 - Mid Timpani
8BE6 30               (./Engine/Sound/Sm):00682                         fcb   $30 ; $8A - Mid Low Timpani
8BE7 34               (./Engine/Sound/Sm):00683                         fcb   $34 ; $8B - Low Timpani
8BE8 28               (./Engine/Sound/Sm):00684                         fcb   $28 ; $8C - Mid Tom
8BE9 30               (./Engine/Sound/Sm):00685                         fcb   $30 ; $8D - Low Tom
8BEA 34               (./Engine/Sound/Sm):00686                         fcb   $34 ; $8E - Floor Tom
8BEB 24               (./Engine/Sound/Sm):00687                         fcb   $24 ; $8F - Hi Bongo
8BEC 28               (./Engine/Sound/Sm):00688                         fcb   $28 ; $90 - Mid Bongo
8BED 30               (./Engine/Sound/Sm):00689                         fcb   $30 ; $91 - Low Bongo
                      (./Engine/Sound/Sm):00690                 
                      (./Engine/Sound/Sm):00691                 ******************************************************************************
                      (./Engine/Sound/Sm):00692                 * FM Track Update
                      (./Engine/Sound/Sm):00693                 ******************************************************************************
                      (./Engine/Sound/Sm):00694                 
8BEE                  (./Engine/Sound/Sm):00695                 _FMNoteOff MACRO                       ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
                      (./Engine/Sound/Sm):00696                         bita  #$04                     ; Is SFX overriding set?
                      (./Engine/Sound/Sm):00697                         bne   @skip                    ; if true skip note off, sfx is playing        
                      (./Engine/Sound/Sm):00698                         addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
                      (./Engine/Sound/Sm):00699                         stb   <YM2413_A0
                      (./Engine/Sound/Sm):00700                         ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
                      (./Engine/Sound/Sm):00701                         andb  #$EF                     ; clear bit 4 (10h) Key Off
                      (./Engine/Sound/Sm):00702                         stb   <YM2413_D0               ; send to YM
                      (./Engine/Sound/Sm):00703                         stb   NoteControl,y               
8BEE                  (./Engine/Sound/Sm):00704                 @skip   equ   *        
                      (./Engine/Sound/Sm):00705                  ENDM        
                      (./Engine/Sound/Sm):00706                 
8BEE                  (./Engine/Sound/Sm):00707                 FMUpdateTrack
8BEE 6A2B             (./Engine/Sound/Sm):00708 [7]     8012            dec   DurationTimeout,y        ; Decrement duration
8BF0 2663             (./Engine/Sound/Sm):00709 [3]     8015            bne   NoteFillUpdate           ; If not time-out yet, go do updates only
8BF2 A6A4             (./Engine/Sound/Sm):00710 [4]     8019            lda   PlaybackControl,y
8BF4 84EF             (./Engine/Sound/Sm):00711 [2]     8021            anda  #$EF
8BF6 A7A4             (./Engine/Sound/Sm):00712 [4]     8025            sta   PlaybackControl,y        ; When duration over, clear "do not attack" bit 4 (0x10) of track's play control
                      (./Engine/Sound/Sm):00713                         
8BF8                  (./Engine/Sound/Sm):00714                 FMDoNext
8BF8 AE24             (./Engine/Sound/Sm):00715 [6]     8031            ldx   DataPointer,y
8BFA A6A4             (./Engine/Sound/Sm):00716 [4]     8035            lda   PlaybackControl,y        ; Clear bit 1 (02h) "track is rest" from track
8BFC 84FD             (./Engine/Sound/Sm):00717 [2]     8037            anda  #$FD
8BFE A7A4             (./Engine/Sound/Sm):00718 [4]     8041            sta   PlaybackControl,y        
                      (./Engine/Sound/Sm):00719                        
8C00                  (./Engine/Sound/Sm):00720                 FMReadCoordFlag        
8C00 E680             (./Engine/Sound/Sm):00721 [6]     8047            ldb   ,x+                      ; Read song data
8C02 F78C27           (./Engine/Sound/Sm):00722 [5]     8052            stb   NoteDyn+1
8C05 C1E0             (./Engine/Sound/Sm):00723 [2]     8054            cmpb  #$E0
8C07 2505             (./Engine/Sound/Sm):00724 [3]     8057            blo   FMNoteOff                ; Test for >= E0h, which is a coordination flag
8C09 BD9311           (./Engine/Sound/Sm):00725 [8]     8065            jsr   CoordFlag
8C0C 20F2             (./Engine/Sound/Sm):00726 [3]     8068            bra   FMReadCoordFlag          ; Read all consecutive coordination flags
                      (./Engine/Sound/Sm):00727                 
8C0E                  (./Engine/Sound/Sm):00728                 FMNoteOff
8C0E A6A4             (./Engine/Sound/Sm):00729 [4]     8072            lda   PlaybackControl,y
8C10 8414             (./Engine/Sound/Sm):00730 [2]     8074            anda  #$14                     ; Are bits 4 (no attack) or 2 (SFX overriding) set?
8C12 2612             (./Engine/Sound/Sm):00731 [3]     8077            bne   NoteDyn                  ; If they are, skip
8C14 E621             (./Engine/Sound/Sm):00732 [5]     8082            ldb   VoiceControl,y           ; Otherwise, send a Key Off
                      (./Engine/Sound/Sm):00733                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
8C16 8504             (       _FMNoteOff):00001 [2]     8084            bita  #$04                     ; Is SFX overriding set?
8C18 260C             (       _FMNoteOff):00002 [3]     8087            bne   @skip                    ; if true skip note off, sfx is playing        
8C1A CB20             (       _FMNoteOff):00003 [2]     8089            addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
8C1C D7FC             (       _FMNoteOff):00004 [4]     8093            stb   <YM2413_A0
8C1E E622             (       _FMNoteOff):00005 [5]     8098            ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
8C20 C4EF             (       _FMNoteOff):00006 [2]     8100            andb  #$EF                     ; clear bit 4 (10h) Key Off
8C22 D7FD             (       _FMNoteOff):00007 [4]     8104            stb   <YM2413_D0               ; send to YM
8C24 E722             (       _FMNoteOff):00008 [5]     8109            stb   NoteControl,y               
     8C26             (       _FMNoteOff):00009                 @skip   equ   *        
8C26 C600             (./Engine/Sound/Sm):00734 [2]     8111    NoteDyn ldb   #0                       ; (dynamic) retore note value   
8C28 2A50             (./Engine/Sound/Sm):00735 [3]     8114            bpl   FMSetDuration            ; Test for 80h not set, which is a note duration
                      (./Engine/Sound/Sm):00736                         
8C2A                  (./Engine/Sound/Sm):00737                 FMSetFreq
8C2A C080             (./Engine/Sound/Sm):00738 [2]     8116            subb  #$80                     ; Test for a rest
8C2C 2608             (./Engine/Sound/Sm):00739 [3]     8119            bne   @a
8C2E A6A4             (./Engine/Sound/Sm):00740 [4]     8123            lda   PlaybackControl,y        ; Set bit 1 (track is at rest)
8C30 8A02             (./Engine/Sound/Sm):00741 [2]     8125            ora   #$02
8C32 A7A4             (./Engine/Sound/Sm):00742 [4]     8129            sta   PlaybackControl,y
8C34 2017             (./Engine/Sound/Sm):00743 [3]     8132            bra   @b        
8C36 CB0B             (./Engine/Sound/Sm):00744 [2]     8134    @a      addb  #$0B                     ; Add FMFrequencies offet for C0 Note, access lower notes with transpose
8C38 EB26             (./Engine/Sound/Sm):00745 [5]     8139            addb  Transpose,y              ; Add current channel transpose (coord flag E9)
8C3A EBA81E           (./Engine/Sound/Sm):00746 [5]     8144            addb  InstrTranspose,y         ; Add Instrument (Voice) offset (coord flag EF)
8C3D C15F             (./Engine/Sound/Sm):00747 [2]     8146            cmpb  #95                      ; array bound check
8C3F 2502             (./Engine/Sound/Sm):00748 [3]     8149            blo   @c
8C41 C65E             (./Engine/Sound/Sm):00749 [2]     8151            ldb   #94         
8C43 58               (./Engine/Sound/Sm):00750 [2]     8153    @c      aslb                           ; Transform note into an index...
8C44 CE8D4F           (./Engine/Sound/Sm):00751 [3]     8156            ldu   #FMFrequencies
8C47 8600             (./Engine/Sound/Sm):00752 [2]     8158            lda   #0    
8C49 ECCB             (./Engine/Sound/Sm):00753 [9]     8167            ldd   d,u
8C4B ED2D             (./Engine/Sound/Sm):00754 [6]     8173            std   NextData,y               ; Store Frequency
8C4D E684             (./Engine/Sound/Sm):00755 [4]     8177    @b      ldb   ,x                       ; Get next byte
8C4F 2A27             (./Engine/Sound/Sm):00756 [3]     8180            bpl   FMSetDurationAndForward  ; Test for 80h not set, which is a note duration
8C51 E62C             (./Engine/Sound/Sm):00757 [5]     8185            ldb   SavedDuration,y        
8C53 202A             (./Engine/Sound/Sm):00758 [3]     8188            bra   FinishTrackUpdate
                      (./Engine/Sound/Sm):00759                         
8C55                  (./Engine/Sound/Sm):00760                 NoteFillUpdate
8C55 A62F             (./Engine/Sound/Sm):00761 [5]     8193            lda   NoteFillTimeout,y        ; Get current note fill value
8C57 10270072         (./Engine/Sound/Sm):00762 [5+?]   8198            lbeq  DoModulation             ; If zero, return!
8C5B 6A2F             (./Engine/Sound/Sm):00763 [7]     8205            dec   NoteFillTimeout,y        ; Decrement note fill
8C5D 266E             (./Engine/Sound/Sm):00764 [3]     8208            bne   DoModulation             ; If not zero, return
                      (./Engine/Sound/Sm):00765                         
8C5F A6A4             (./Engine/Sound/Sm):00766 [4]     8212            lda   PlaybackControl,y
8C61 8A02             (./Engine/Sound/Sm):00767 [2]     8214            ora   #$02                     ; Set bit 1 (track is at rest)
8C63 A7A4             (./Engine/Sound/Sm):00768 [4]     8218            sta   PlaybackControl,y        
8C65 E621             (./Engine/Sound/Sm):00769 [5]     8223            ldb   VoiceControl,y
                      (./Engine/Sound/Sm):00770                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y         
8C67 8504             (       _FMNoteOff):00001 [2]     8225            bita  #$04                     ; Is SFX overriding set?
8C69 260C             (       _FMNoteOff):00002 [3]     8228            bne   @skip                    ; if true skip note off, sfx is playing        
8C6B CB20             (       _FMNoteOff):00003 [2]     8230            addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
8C6D D7FC             (       _FMNoteOff):00004 [4]     8234            stb   <YM2413_A0
8C6F E622             (       _FMNoteOff):00005 [5]     8239            ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
8C71 C4EF             (       _FMNoteOff):00006 [2]     8241            andb  #$EF                     ; clear bit 4 (10h) Key Off
8C73 D7FD             (       _FMNoteOff):00007 [4]     8245            stb   <YM2413_D0               ; send to YM
8C75 E722             (       _FMNoteOff):00008 [5]     8250            stb   NoteControl,y               
     8C77             (       _FMNoteOff):00009                 @skip   equ   *        
8C77 39               (./Engine/Sound/Sm):00771 [5]     8255            rts         
                      (./Engine/Sound/Sm):00772                 
8C78                  (./Engine/Sound/Sm):00773                 FMSetDurationAndForward
8C78 3001             (./Engine/Sound/Sm):00774 [5]     8260            leax  1,x
                      (./Engine/Sound/Sm):00775                         
8C7A                  (./Engine/Sound/Sm):00776                 FMSetDuration
8C7A A623             (./Engine/Sound/Sm):00777 [5]     8265            lda   TempoDivider,y
8C7C 3D               (./Engine/Sound/Sm):00778 [11]    8276            mul
8C7D E72C             (./Engine/Sound/Sm):00779 [5]     8281            stb   SavedDuration,y
                      (./Engine/Sound/Sm):00780                         
8C7F                  (./Engine/Sound/Sm):00781                 FinishTrackUpdate
8C7F E72B             (./Engine/Sound/Sm):00782 [5]     8286            stb   DurationTimeout,y        ; Last set duration ... put into ticker
8C81 AF24             (./Engine/Sound/Sm):00783 [6]     8292            stx   DataPointer,y            ; Stores to the track pointer memory
8C83 A6A4             (./Engine/Sound/Sm):00784 [4]     8296            lda   PlaybackControl,y
8C85 8510             (./Engine/Sound/Sm):00785 [2]     8298            bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
8C87 2702             (./Engine/Sound/Sm):00786 [3]     8301            beq   @a                       
8C89 2011             (./Engine/Sound/Sm):00787 [3]     8304            bra   FMPrepareNote            ; If so, quit
8C8B E6A810           (./Engine/Sound/Sm):00788 [5]     8309    @a      ldb   NoteFillMaster,y
8C8E E72F             (./Engine/Sound/Sm):00789 [5]     8314            stb   NoteFillTimeout,y        ; Reset 0Fh "note fill" value to master
8C90 8508             (./Engine/Sound/Sm):00790 [2]     8316            bita  #$08                     ; Is bit 3 (08h) modulation turned on?
8C92 2602             (./Engine/Sound/Sm):00791 [3]     8319            bne   @b
8C94 2006             (./Engine/Sound/Sm):00792 [3]     8322            bra   FMPrepareNote            ; if not, quit
8C96 AEA811           (./Engine/Sound/Sm):00793 [6]     8328    @b      ldx   ModulationPtr,y
8C99 BD943B           (./Engine/Sound/Sm):00794 [8]     8336            jsr   SetModulation            ; reload modulation settings for the new note
                      (./Engine/Sound/Sm):00795                         
8C9C                  (./Engine/Sound/Sm):00796                 FMPrepareNote
8C9C A6A4             (./Engine/Sound/Sm):00797 [4]     8340            lda   PlaybackControl,y
8C9E 8504             (./Engine/Sound/Sm):00798 [2]     8342            bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8CA0 262B             (./Engine/Sound/Sm):00799 [3]     8345            bne   DoModulation             ; If so skip freq update                                                 
8CA2 8502             (./Engine/Sound/Sm):00800 [2]     8347            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8CA4 2701             (./Engine/Sound/Sm):00801 [3]     8350            beq   FMUpdateFreqAndNoteOn
8CA6 39               (./Engine/Sound/Sm):00802 [5]     8355            rts                            ; If so, quit
8CA7                  (./Engine/Sound/Sm):00803                 FMUpdateFreqAndNoteOn
8CA7 E6A819           (./Engine/Sound/Sm):00804 [5]     8360            ldb   Detune,y
8CAA 1D               (./Engine/Sound/Sm):00805 [2]     8362            sex
8CAB E32D             (./Engine/Sound/Sm):00806 [7]     8369            addd  NextData,y               ; Apply detune but don't update stored frequency
8CAD B78CC6           (./Engine/Sound/Sm):00807 [5]     8374            sta   @dyn+1
8CB0 8610             (./Engine/Sound/Sm):00808 [2]     8376            lda   #$10                     ; set LSB Frequency Command
8CB2 AB21             (./Engine/Sound/Sm):00809 [5]     8381            adda  VoiceControl,y
8CB4 97FC             (./Engine/Sound/Sm):00810 [4]     8385            sta   <YM2413_A0
8CB6 8B10             (./Engine/Sound/Sm):00811 [2]     8387            adda  #$10                     ; set Sus/Key/Block/FNum(MSB) Command
8CB8 D7FD             (./Engine/Sound/Sm):00812 [4]     8391            stb   <YM2413_D0
                      (./Engine/Sound/Sm):00813                         _YMBusyWait9
8CBA 12               (     _YMBusyWait9):00001 [2]     8393            nop
8CBB 12               (     _YMBusyWait9):00002 [2]     8395            nop
8CBC 12               (     _YMBusyWait9):00003 [2]     8397            nop
8CBD 21FE             (     _YMBusyWait9):00004 [3]     8400            brn   *
8CBF E622             (./Engine/Sound/Sm):00814 [5]     8405            ldb   NoteControl,y            ; load current value (do not erase FNum MSB) (and used as 5 cycles tempo)
8CC1 CA10             (./Engine/Sound/Sm):00815 [2]     8407            orb   #$10                     ; Set bit 4 (10h) Key On
8CC3 C4F0             (./Engine/Sound/Sm):00816 [2]     8409            andb  #$F0                     ; Clear FNum MSB (and used as 2 cycles tempo)
8CC5 CB00             (./Engine/Sound/Sm):00817 [2]     8411    @dyn    addb  #0                       ; (dynamic) Set Fnum MSB (and used as 2 cycles tempo)                
8CC7 97FC             (./Engine/Sound/Sm):00818 [4]     8415            sta   <YM2413_A0
8CC9 E722             (./Engine/Sound/Sm):00819 [5]     8420            stb   NoteControl,y
8CCB D7FD             (./Engine/Sound/Sm):00820 [4]     8424            stb   <YM2413_D0   
                      (./Engine/Sound/Sm):00821                         
8CCD                  (./Engine/Sound/Sm):00822                 DoModulation  
8CCD A6A4             (./Engine/Sound/Sm):00823 [4]     8428            lda   PlaybackControl,y
8CCF 8502             (./Engine/Sound/Sm):00824 [2]     8430            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8CD1 2701             (./Engine/Sound/Sm):00825 [3]     8433            beq   @a
8CD3 39               (./Engine/Sound/Sm):00826 [5]     8438            rts                            ; If so, quit        
8CD4 8508             (./Engine/Sound/Sm):00827 [2]     8440    @a      bita  #$08                     ; Is bit 3 (08h) "modulation on" set on playback?
8CD6 2601             (./Engine/Sound/Sm):00828 [3]     8443            bne   @b
8CD8 39               (./Engine/Sound/Sm):00829 [5]     8448            rts                            ; If not, quit        
8CD9 A6A813           (./Engine/Sound/Sm):00830 [5]     8453    @b      lda   ModulationWait,y         ; 'ww' period of time before modulation starts
8CDC 2704             (./Engine/Sound/Sm):00831 [3]     8456            beq   @c                       ; if zero, go to it!
8CDE 6AA813           (./Engine/Sound/Sm):00832 [7]     8463            dec   ModulationWait,y         ; Otherwise, decrement timer
8CE1 39               (./Engine/Sound/Sm):00833 [5]     8468            rts                            ; return if decremented
8CE2 6AA814           (./Engine/Sound/Sm):00834 [7]     8475    @c      dec   ModulationSpeed,y        ; Decrement modulation speed counter
8CE5 2701             (./Engine/Sound/Sm):00835 [3]     8478            beq   @d
8CE7 39               (./Engine/Sound/Sm):00836 [5]     8483            rts                            ; Return if not yet zero
8CE8 AEA811           (./Engine/Sound/Sm):00837 [6]     8489    @d      ldx   ModulationPtr,y
8CEB A601             (./Engine/Sound/Sm):00838 [5]     8494            lda   1,x
8CED A7A814           (./Engine/Sound/Sm):00839 [5]     8499            sta   ModulationSpeed,y
8CF0 A6A816           (./Engine/Sound/Sm):00840 [5]     8504            lda   ModulationSteps,y
8CF3 2609             (./Engine/Sound/Sm):00841 [3]     8507            bne   @e
8CF5 A603             (./Engine/Sound/Sm):00842 [5]     8512            lda   3,x
8CF7 A7A816           (./Engine/Sound/Sm):00843 [5]     8517            sta   ModulationSteps,y     
8CFA 60A815           (./Engine/Sound/Sm):00844 [7]     8524            neg   ModulationDelta,y
8CFD 39               (./Engine/Sound/Sm):00845 [5]     8529            rts                
8CFE 6AA816           (./Engine/Sound/Sm):00846 [7]     8536    @e      dec   ModulationSteps,y
8D01 E6A815           (./Engine/Sound/Sm):00847 [5]     8541            ldb   ModulationDelta,y
8D04 1D               (./Engine/Sound/Sm):00848 [2]     8543            sex
8D05 E3A817           (./Engine/Sound/Sm):00849 [7]     8550            addd  ModulationVal,y
8D08 EDA817           (./Engine/Sound/Sm):00850 [6]     8556            std   ModulationVal,y        
                      (./Engine/Sound/Sm):00851                               
8D0B                  (./Engine/Sound/Sm):00852                 FMUpdateFreq
8D0B A6A4             (./Engine/Sound/Sm):00853 [4]     8560            lda   PlaybackControl,y
8D0D 8504             (./Engine/Sound/Sm):00854 [2]     8562            bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8D0F 263D             (./Engine/Sound/Sm):00855 [3]     8565            bne   @rts
8D11 E6A819           (./Engine/Sound/Sm):00856 [5]     8570            ldb   Detune,y
8D14 1D               (./Engine/Sound/Sm):00857 [2]     8572            sex
8D15 FD8D2D           (./Engine/Sound/Sm):00858 [6]     8578            std   @dyna+1
8D18 ECA817           (./Engine/Sound/Sm):00859 [6]     8584            ldd   ModulationVal,y          ; get modulation effect
8D1B 2B06             (./Engine/Sound/Sm):00860 [3]     8587            bmi   @a
                      (./Engine/Sound/Sm):00861                         _asrd                          ; modulation is divided by four
8D1D 47               (            _asrd):00001 [2]     8589            asra
8D1E 56               (            _asrd):00002 [2]     8591            rorb
                      (./Engine/Sound/Sm):00862                         _asrd                          ; used for better precision of delta
8D1F 47               (            _asrd):00001 [2]     8593            asra
8D20 56               (            _asrd):00002 [2]     8595            rorb
8D21 2007             (./Engine/Sound/Sm):00863 [3]     8598            bra   @b
8D23                  (./Engine/Sound/Sm):00864                 @a      _asrd                          ; modulation is divided by four
8D23 47               (            _asrd):00001 [2]     8600            asra
8D24 56               (            _asrd):00002 [2]     8602            rorb
                      (./Engine/Sound/Sm):00865                         _asrd                          ; used for better precision of delta        
8D25 47               (            _asrd):00001 [2]     8604            asra
8D26 56               (            _asrd):00002 [2]     8606            rorb
8D27 C30001           (./Engine/Sound/Sm):00866 [4]     8610            addd  #1                       ; negative value need +1 when div 
8D2A E32D             (./Engine/Sound/Sm):00867 [7]     8617    @b      addd  NextData,y               ; apply detune but don't update stored frequency
8D2C C30000           (./Engine/Sound/Sm):00868 [4]     8621    @dyna   addd  #0                       ; (dynamic) apply detune        
8D2F B78D47           (./Engine/Sound/Sm):00869 [5]     8626            sta   @dynb+1
8D32 8610             (./Engine/Sound/Sm):00870 [2]     8628            lda   #$10                     ; set LSB Frequency Command
8D34 AB21             (./Engine/Sound/Sm):00871 [5]     8633            adda  VoiceControl,y           ; get channel number
8D36 97FC             (./Engine/Sound/Sm):00872 [4]     8637            sta   <YM2413_A0               ; send Fnum update Command
8D38 8B10             (./Engine/Sound/Sm):00873 [2]     8639            adda  #$10                     ; set Sus/Key/Block/FNum(MSB) Command
8D3A D7FD             (./Engine/Sound/Sm):00874 [4]     8643            stb   <YM2413_D0               ; send FNum (b0-b7)
                      (./Engine/Sound/Sm):00875                         _YMBusyWait11                  ; total wait 20 cycles
8D3C 12               (    _YMBusyWait11):00001 [2]     8645            nop
8D3D 12               (    _YMBusyWait11):00002 [2]     8647            nop
8D3E 12               (    _YMBusyWait11):00003 [2]     8649            nop
8D3F 12               (    _YMBusyWait11):00004 [2]     8651            nop
8D40 21FE             (    _YMBusyWait11):00005 [3]     8654            brn   *
8D42 E622             (./Engine/Sound/Sm):00876 [5]     8659            ldb   NoteControl,y            ; load current value (do not erase FNum MSB) (and used as 5 cycles tempo)
8D44 C4F0             (./Engine/Sound/Sm):00877 [2]     8661            andb  #$F0                     ; clear FNum MSB (and used as 2 cycles tempo)
8D46 CB00             (./Engine/Sound/Sm):00878 [2]     8663    @dynb   addb  #0                       ; (dynamic) Set Fnum MSB (and used as 2 cycles tempo)        
8D48 97FC             (./Engine/Sound/Sm):00879 [4]     8667            sta   <YM2413_A0               ; send command
8D4A E722             (./Engine/Sound/Sm):00880 [5]     8672            stb   NoteControl,y
8D4C D7FD             (./Engine/Sound/Sm):00881 [4]     8676            stb   <YM2413_D0               ; send FNum (b8) and Block (b0-b2)
8D4E 39               (./Engine/Sound/Sm):00882 [5]     8681    @rts    rts        
                      (./Engine/Sound/Sm):00883                  
                      (./Engine/Sound/Sm):00884                 ; 95 notes (Note value $81=C0 $DF=A#7) with direct access
                      (./Engine/Sound/Sm):00885                 ; Other notes can be accessed by transpose
8D4F                  (./Engine/Sound/Sm):00886                 FMFrequencies
8D4F 0056005B00610067 (./Engine/Sound/Sm):00887                         fdb   $0056,$005B,$0061,$0067,$006D,$0073,$007A,$0081,$0089,$0091,$009A,$00A2 ; C-1 - B-1
     006D0073007A0081
     00890091009A00A2
8D67 00AD00B700C200CD (./Engine/Sound/Sm):00888                         fdb   $00AD,$00B7,$00C2,$00CD,$00DA,$00E6,$00F4,$0102,$0112,$0122,$0133,$0146 ; C0 - B0
     00DA00E600F40102
     0112012201330146
8D7F 0159016D0183019A (./Engine/Sound/Sm):00889                         fdb   $0159,$016D,$0183,$019A,$01B3,$01CC,$01E8,$0302,$0312,$0322,$0333,$0346 ; C1 - B1
     01B301CC01E80302
     0312032203330346
8D97 0359036D0383039A (./Engine/Sound/Sm):00890                         fdb   $0359,$036D,$0383,$039A,$03B3,$03CC,$03E8,$0502,$0512,$0522,$0533,$0546 ; C2 - B2
     03B303CC03E80502
     0512052205330546
8DAF 0559056D0583059A (./Engine/Sound/Sm):00891                         fdb   $0559,$056D,$0583,$059A,$05B3,$05CC,$05E8,$0702,$0712,$0722,$0733,$0746 ; C3 - B3
     05B305CC05E80702
     0712072207330746
8DC7 0759076D0783079A (./Engine/Sound/Sm):00892                         fdb   $0759,$076D,$0783,$079A,$07B3,$07CC,$07E8,$0902,$0912,$0922,$0933,$0946 ; C4 - B4
     07B307CC07E80902
     0912092209330946
8DDF 0959096D0983099A (./Engine/Sound/Sm):00893                         fdb   $0959,$096D,$0983,$099A,$09B3,$09CC,$09E8,$0B02,$0B12,$0B22,$0B33,$0B46 ; C5 - B5
     09B309CC09E80B02
     0B120B220B330B46
8DF7 0B590B6D0B830B9A (./Engine/Sound/Sm):00894                         fdb   $0B59,$0B6D,$0B83,$0B9A,$0BB3,$0BCC,$0BE8,$0D02,$0D12,$0D22,$0D33,$0D46 ; C6 - B6
     0BB30BCC0BE80D02
     0D120D220D330D46
8E0F 0D590D6D0D830D9A (./Engine/Sound/Sm):00895                         fdb   $0D59,$0D6D,$0D83,$0D9A,$0DB3,$0DCC,$0DE8,$0F02,$0F12,$0F22,$0F33,$0F46 ; C7 - B7        
     0DB30DCC0DE80F02
     0F120F220F330F46
8E27 0F590F6D0F830F9A (./Engine/Sound/Sm):00896                         fdb   $0F59,$0F6D,$0F83,$0F9A,$0FB3,$0FCC,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8 ; C8 - F#8
     0FB30FCC0FE80FE8
     0FE80FE80FE80FE8
8E3F 0FE80FE80FE80FE8 (./Engine/Sound/Sm):00897                         fdb   $0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8                         ; F#8
     0FE80FE80FE80FE8
                      (./Engine/Sound/Sm):00898                         
                      (./Engine/Sound/Sm):00899                 ******************************************************************************
                      (./Engine/Sound/Sm):00900                 * PSG Update Track
                      (./Engine/Sound/Sm):00901                 ******************************************************************************
                      (./Engine/Sound/Sm):00902                 
8E4F                  (./Engine/Sound/Sm):00903                 _PSGNoteOff MACRO                      ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
                      (./Engine/Sound/Sm):00904                         bita  #$04                     ; Is SFX overriding set?
                      (./Engine/Sound/Sm):00905                         bne   @skip                    ; if true skip note off, sfx is playing               
                      (./Engine/Sound/Sm):00906                         orb   #$1F                     ; Volume Off
                      (./Engine/Sound/Sm):00907                         stb   <PSG
8E4F                  (./Engine/Sound/Sm):00908                 @skip   equ   *        
                      (./Engine/Sound/Sm):00909                  ENDM
                      (./Engine/Sound/Sm):00910                  
8E4F                  (./Engine/Sound/Sm):00911                 PSGNoteFillUpdate
8E4F A62F             (./Engine/Sound/Sm):00912 [5]     8686            lda   NoteFillTimeout,y        ; Get current note fill value
8E51 102700BD         (./Engine/Sound/Sm):00913 [5+?]   8691            lbeq  PSGUpdateVolFX           ; If zero, return!
8E55 6A2F             (./Engine/Sound/Sm):00914 [7]     8698            dec   NoteFillTimeout,y        ; Decrement note fill
8E57 102600B7         (./Engine/Sound/Sm):00915 [5+?]   8703            lbne  PSGUpdateVolFX           ; If not zero, return
                      (./Engine/Sound/Sm):00916                         
8E5B A6A4             (./Engine/Sound/Sm):00917 [4]     8707            lda   PlaybackControl,y
8E5D 8A02             (./Engine/Sound/Sm):00918 [2]     8709            ora   #$02                     ; Set bit 1 (track is at rest)
8E5F A7A4             (./Engine/Sound/Sm):00919 [4]     8713            sta   PlaybackControl,y    
8E61 E621             (./Engine/Sound/Sm):00920 [5]     8718            ldb   VoiceControl,y           ; Get "voice control" byte (loads upper bits which specify attenuation setting)
                      (./Engine/Sound/Sm):00921                         _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
8E63 8504             (      _PSGNoteOff):00001 [2]     8720            bita  #$04                     ; Is SFX overriding set?
8E65 2604             (      _PSGNoteOff):00002 [3]     8723            bne   @skip                    ; if true skip note off, sfx is playing               
8E67 CA1F             (      _PSGNoteOff):00003 [2]     8725            orb   #$1F                     ; Volume Off
8E69 D7FF             (      _PSGNoteOff):00004 [4]     8729            stb   <PSG
     8E6B             (      _PSGNoteOff):00005                 @skip   equ   *        
8E6B 39               (./Engine/Sound/Sm):00922 [5]     8734            rts 
                      (./Engine/Sound/Sm):00923                  
8E6C                  (./Engine/Sound/Sm):00924                 PSGUpdateTrack
8E6C 6A2B             (./Engine/Sound/Sm):00925 [7]     8741            dec   DurationTimeout,y        ; Decrement duration
8E6E 26DF             (./Engine/Sound/Sm):00926 [3]     8744            bne   PSGNoteFillUpdate        ; If not time-out yet, go do updates only
8E70 A6A4             (./Engine/Sound/Sm):00927 [4]     8748            lda   PlaybackControl,y
8E72 84EF             (./Engine/Sound/Sm):00928 [2]     8750            anda  #$EF
8E74 A7A4             (./Engine/Sound/Sm):00929 [4]     8754            sta   PlaybackControl,y        ; When duration over, clear "do not attack" bit 4 (0x10) of track's play control
                      (./Engine/Sound/Sm):00930                         
8E76                  (./Engine/Sound/Sm):00931                 PSGDoNext
8E76 AE24             (./Engine/Sound/Sm):00932 [6]     8760            ldx   DataPointer,y
8E78 A6A4             (./Engine/Sound/Sm):00933 [4]     8764            lda   PlaybackControl,y        ; Clear bit 1 (02h) "track is rest" from track
8E7A 84FD             (./Engine/Sound/Sm):00934 [2]     8766            anda  #$FD
8E7C A7A4             (./Engine/Sound/Sm):00935 [4]     8770            sta   PlaybackControl,y        
                      (./Engine/Sound/Sm):00936                        
8E7E                  (./Engine/Sound/Sm):00937                 PSGReadCoordFlag        
8E7E E680             (./Engine/Sound/Sm):00938 [6]     8776            ldb   ,x+                      ; Read song data
8E80 C1E0             (./Engine/Sound/Sm):00939 [2]     8778            cmpb  #$E0
8E82 2505             (./Engine/Sound/Sm):00940 [3]     8781            blo   @a                       ; Test for >= E0h, which is a coordination flag
8E84 BD9311           (./Engine/Sound/Sm):00941 [8]     8789            jsr   CoordFlag
8E87 20F5             (./Engine/Sound/Sm):00942 [3]     8792            bra   PSGReadCoordFlag         ; Read all consecutive coordination flags
8E89 2A34             (./Engine/Sound/Sm):00943 [3]     8795    @a      bpl   PSGSetDuration           ; Test for 80h not set, which is a note duration
                      (./Engine/Sound/Sm):00944                         
8E8B                  (./Engine/Sound/Sm):00945                 PSGSetFreq
8E8B C081             (./Engine/Sound/Sm):00946 [2]     8797            subb  #$81                     ; Test for a rest
8E8D 2412             (./Engine/Sound/Sm):00947 [3]     8800            bcc   @a                       ; If a note branch
8E8F A6A4             (./Engine/Sound/Sm):00948 [4]     8804            lda   PlaybackControl,y        ; If carry (only time that happens if 80h because of earlier logic) this is a rest!
8E91 8A02             (./Engine/Sound/Sm):00949 [2]     8806            ora   #$02
8E93 A7A4             (./Engine/Sound/Sm):00950 [4]     8810            sta   PlaybackControl,y        ; Set bit 1 (track is at rest)
8E95 E621             (./Engine/Sound/Sm):00951 [5]     8815            ldb   VoiceControl,y           ; Get "voice control" byte (loads upper bits which specify attenuation setting)        
                      (./Engine/Sound/Sm):00952                         _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
8E97 8504             (      _PSGNoteOff):00001 [2]     8817            bita  #$04                     ; Is SFX overriding set?
8E99 2604             (      _PSGNoteOff):00002 [3]     8820            bne   @skip                    ; if true skip note off, sfx is playing               
8E9B CA1F             (      _PSGNoteOff):00003 [2]     8822            orb   #$1F                     ; Volume Off
8E9D D7FF             (      _PSGNoteOff):00004 [4]     8826            stb   <PSG
     8E9F             (      _PSGNoteOff):00005                 @skip   equ   *        
8E9F 2014             (./Engine/Sound/Sm):00953 [3]     8829            bra   @b
8EA1 CB03             (./Engine/Sound/Sm):00954 [2]     8831    @a      addb  #$03                     ; Add Frequencies offet for C0 Note, access lower notes with transpose
8EA3 EB26             (./Engine/Sound/Sm):00955 [5]     8836            addb  Transpose,y              ; Add current channel transpose (coord flag E9)
8EA5 C146             (./Engine/Sound/Sm):00956 [2]     8838            cmpb  #70                      ; array bound check
8EA7 2502             (./Engine/Sound/Sm):00957 [3]     8841            blo   @c
8EA9 C645             (./Engine/Sound/Sm):00958 [2]     8843            ldb   #69                      
8EAB 58               (./Engine/Sound/Sm):00959 [2]     8845    @c      aslb                           ; Transform note into an index...
8EAC CE8FD1           (./Engine/Sound/Sm):00960 [3]     8848            ldu   #PSGFrequencies
8EAF 8600             (./Engine/Sound/Sm):00961 [2]     8850            lda   #0    
8EB1 ECCB             (./Engine/Sound/Sm):00962 [9]     8859            ldd   d,u
8EB3 ED2D             (./Engine/Sound/Sm):00963 [6]     8865            std   NextData,y                ; Store Frequency
8EB5 E684             (./Engine/Sound/Sm):00964 [4]     8869    @b      ldb   ,x                        ; Get next byte
8EB7 2A04             (./Engine/Sound/Sm):00965 [3]     8872            bpl   PSGSetDurationAndForward  ; Test for 80h not set, which is a note duration
8EB9 E62C             (./Engine/Sound/Sm):00966 [5]     8877            ldb   SavedDuration,y        
8EBB 2007             (./Engine/Sound/Sm):00967 [3]     8880            bra   PSGFinishTrackUpdate
                      (./Engine/Sound/Sm):00968                 
8EBD                  (./Engine/Sound/Sm):00969                 PSGSetDurationAndForward
8EBD 3001             (./Engine/Sound/Sm):00970 [5]     8885            leax  1,x
                      (./Engine/Sound/Sm):00971                         
8EBF                  (./Engine/Sound/Sm):00972                 PSGSetDuration
8EBF A623             (./Engine/Sound/Sm):00973 [5]     8890            lda   TempoDivider,y
8EC1 3D               (./Engine/Sound/Sm):00974 [11]    8901            mul
8EC2 E72C             (./Engine/Sound/Sm):00975 [5]     8906            stb   SavedDuration,y
                      (./Engine/Sound/Sm):00976                 
8EC4                  (./Engine/Sound/Sm):00977                 PSGFinishTrackUpdate
8EC4 E72B             (./Engine/Sound/Sm):00978 [5]     8911            stb   DurationTimeout,y        ; Last set duration ... put into ticker
8EC6 AF24             (./Engine/Sound/Sm):00979 [6]     8917            stx   DataPointer,y            ; Stores to the track pointer memory
8EC8 A6A4             (./Engine/Sound/Sm):00980 [4]     8921            lda   PlaybackControl,y
8ECA 8510             (./Engine/Sound/Sm):00981 [2]     8923            bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
8ECC 2702             (./Engine/Sound/Sm):00982 [3]     8926            beq   @a                       
8ECE 2013             (./Engine/Sound/Sm):00983 [3]     8929            bra   PSGDoNoteOn              ; If so, quit
8ED0 E6A810           (./Engine/Sound/Sm):00984 [5]     8934    @a      ldb   NoteFillMaster,y
8ED3 E72F             (./Engine/Sound/Sm):00985 [5]     8939            stb   NoteFillTimeout,y        ; Reset 0Fh "note fill" value to master
8ED5 6F29             (./Engine/Sound/Sm):00986 [7]     8946            clr   VolFlutter,y             ; Reset PSG flutter byte
8ED7 8508             (./Engine/Sound/Sm):00987 [2]     8948            bita  #$08                     ; Is bit 3 (08h) modulation turned on?
8ED9 2602             (./Engine/Sound/Sm):00988 [3]     8951            bne   @b
8EDB 2006             (./Engine/Sound/Sm):00989 [3]     8954            bra   PSGDoNoteOn              ; if not, quit
8EDD AEA811           (./Engine/Sound/Sm):00990 [6]     8960    @b      ldx   ModulationPtr,y
8EE0 BD943B           (./Engine/Sound/Sm):00991 [8]     8968            jsr   SetModulation            ; reload modulation settings for the new note
                      (./Engine/Sound/Sm):00992                         
8EE3                  (./Engine/Sound/Sm):00993                 PSGDoNoteOn
8EE3 A6A4             (./Engine/Sound/Sm):00994 [4]     8972            lda   PlaybackControl,y
8EE5 8502             (./Engine/Sound/Sm):00995 [2]     8974            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8EE7 2701             (./Engine/Sound/Sm):00996 [3]     8977            beq   PSGUpdateFreq                       
8EE9 39               (./Engine/Sound/Sm):00997 [5]     8982            rts                            ; If so, quit
8EEA                  (./Engine/Sound/Sm):00998                 PSGUpdateFreq
8EEA E6A819           (./Engine/Sound/Sm):00999 [5]     8987            ldb   Detune,y
8EED 1D               (./Engine/Sound/Sm):01000 [2]     8989            sex
8EEE E32D             (./Engine/Sound/Sm):01001 [7]     8996            addd  NextData,y               ; Apply detune but don't update stored frequency
8EF0 FD8F04           (./Engine/Sound/Sm):01002 [6]     9002            std   @dyn+1
8EF3 C40F             (./Engine/Sound/Sm):01003 [2]     9004            andb  #$0F                     ; Keep only lower four bits (first PSG reg write only applies d0-d3 of freq)
8EF5 A621             (./Engine/Sound/Sm):01004 [5]     9009            lda   VoiceControl,y
8EF7 81E0             (./Engine/Sound/Sm):01005 [2]     9011            cmpa  #$E0
8EF9 2604             (./Engine/Sound/Sm):01006 [3]     9014            bne   @a
8EFB CBC0             (./Engine/Sound/Sm):01007 [2]     9016            addb  #$C0
8EFD 2002             (./Engine/Sound/Sm):01008 [3]     9019            bra   @b
8EFF EB21             (./Engine/Sound/Sm):01009 [5]     9024    @a      addb  VoiceControl,y           ; Get "voice control" byte...
8F01 D7FF             (./Engine/Sound/Sm):01010 [4]     9028    @b      stb   <PSG
8F03 CC0000           (./Engine/Sound/Sm):01011 [3]     9031    @dyn    ldd   #0
                      (./Engine/Sound/Sm):01012                         _lsrd
8F06 44               (            _lsrd):00001 [2]     9033            lsra
8F07 56               (            _lsrd):00002 [2]     9035            rorb
                      (./Engine/Sound/Sm):01013                         _lsrd
8F08 44               (            _lsrd):00001 [2]     9037            lsra
8F09 56               (            _lsrd):00002 [2]     9039            rorb
                      (./Engine/Sound/Sm):01014                         _lsrd
8F0A 44               (            _lsrd):00001 [2]     9041            lsra
8F0B 56               (            _lsrd):00002 [2]     9043            rorb
                      (./Engine/Sound/Sm):01015                         _lsrd              
8F0C 44               (            _lsrd):00001 [2]     9045            lsra
8F0D 56               (            _lsrd):00002 [2]     9047            rorb
8F0E D7FF             (./Engine/Sound/Sm):01016 [4]     9051            stb   <PSG
8F10 2011             (./Engine/Sound/Sm):01017 [3]     9054            bra   PSGDoVolFX
                      (./Engine/Sound/Sm):01018                         
8F12                  (./Engine/Sound/Sm):01019                 PSGUpdateVolFX
8F12 A628             (./Engine/Sound/Sm):01020 [5]     9059            lda   VoiceIndex,y
8F14 2753             (./Engine/Sound/Sm):01021 [3]     9062            beq   PSGDoModulation
8F16 E627             (./Engine/Sound/Sm):01022 [5]     9067            ldb   Volume,y
8F18 F78F51           (./Engine/Sound/Sm):01023 [5]     9072            stb   DynVol+1          
8F1B 200F             (./Engine/Sound/Sm):01024 [3]     9075            bra   PSGFlutter
                      (./Engine/Sound/Sm):01025                 
8F1D                  (./Engine/Sound/Sm):01026                 VolEnvHold
8F1D A629             (./Engine/Sound/Sm):01027 [5]     9080            lda   VolFlutter,y             ; This just decrements the flutter to keep it in place; no more volume changes in this list
8F1F 8002             (./Engine/Sound/Sm):01028 [2]     9082            suba  #2                       ; Put index back (before final volume value)
8F21 A729             (./Engine/Sound/Sm):01029 [5]     9087            sta   VolFlutter,y             ; Loop back and update volume
                      (./Engine/Sound/Sm):01030                         
8F23                  (./Engine/Sound/Sm):01031                 PSGDoVolFX
8F23 E627             (./Engine/Sound/Sm):01032 [5]     9092            ldb   Volume,y
8F25 F78F51           (./Engine/Sound/Sm):01033 [5]     9097            stb   DynVol+1
8F28 A628             (./Engine/Sound/Sm):01034 [5]     9102            lda   VoiceIndex,y
8F2A 271A             (./Engine/Sound/Sm):01035 [3]     9105            beq   PSGUpdateVol             ; If tone is zero, jump to PSGUpdateVol
                      (./Engine/Sound/Sm):01036                                 
8F2C                  (./Engine/Sound/Sm):01037                 PSGFlutter
8F2C 48               (./Engine/Sound/Sm):01038 [2]     9107            asla
8F2D 8E9063           (./Engine/Sound/Sm):01039 [3]     9110            ldx   #PSG_FlutterTbl
8F30 AE86             (./Engine/Sound/Sm):01040 [6]     9116            ldx   a,x
8F32 A629             (./Engine/Sound/Sm):01041 [5]     9121            lda   VolFlutter,y
8F34 6C29             (./Engine/Sound/Sm):01042 [7]     9128            inc   VolFlutter,y        
8F36 A686             (./Engine/Sound/Sm):01043 [5]     9133            lda   a,x
8F38 2A04             (./Engine/Sound/Sm):01044 [3]     9136            bpl   @a
8F3A 8180             (./Engine/Sound/Sm):01045 [2]     9138            cmpa  #$80
8F3C 27DF             (./Engine/Sound/Sm):01046 [3]     9141            beq   VolEnvHold
8F3E B78F42           (./Engine/Sound/Sm):01047 [5]     9146    @a      sta   >*+4
8F41 CB00             (./Engine/Sound/Sm):01048 [2]     9148            addb  #0
8F43 F78F51           (./Engine/Sound/Sm):01049 [5]     9153            stb   DynVol+1
                      (./Engine/Sound/Sm):01050                                 
8F46                  (./Engine/Sound/Sm):01051                 PSGUpdateVol                
8F46 A6A4             (./Engine/Sound/Sm):01052 [4]     9157            lda   PlaybackControl,y
8F48 8502             (./Engine/Sound/Sm):01053 [2]     9159            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8F4A 261D             (./Engine/Sound/Sm):01054 [3]     9162            bne   PSGDoModulation          ; If so, branch           
8F4C 8510             (./Engine/Sound/Sm):01055 [2]     9164            bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
8F4E 2610             (./Engine/Sound/Sm):01056 [3]     9167            bne   @b                       ; If so, branch
8F50 C600             (./Engine/Sound/Sm):01057 [2]     9169    DynVol  ldb   #0                       ; (dynamic) volume
8F52 C110             (./Engine/Sound/Sm):01058 [2]     9171            cmpb  #$10
8F54 2502             (./Engine/Sound/Sm):01059 [3]     9174            blo   @a
8F56 C60F             (./Engine/Sound/Sm):01060 [2]     9176            ldb   #$0F
8F58 EB21             (./Engine/Sound/Sm):01061 [5]     9181    @a      addb  VoiceControl,y
8F5A CA10             (./Engine/Sound/Sm):01062 [2]     9183            orb   #$10
8F5C D7FF             (./Engine/Sound/Sm):01063 [4]     9187            stb   <PSG
8F5E 2009             (./Engine/Sound/Sm):01064 [3]     9190            bra   PSGDoModulation        
8F60 A6A810           (./Engine/Sound/Sm):01065 [5]     9195    @b      lda   NoteFillMaster,y         ; If you get here, then "do not attack next note" was set...
8F63 27EB             (./Engine/Sound/Sm):01066 [3]     9198            beq   DynVol                   ; If it's zero, then just process normally
8F65 A62F             (./Engine/Sound/Sm):01067 [5]     9203            lda   NoteFillTimeout,y        
8F67 26E7             (./Engine/Sound/Sm):01068 [3]     9206            bne   DynVol                   ; If it's not zero, then just process normally
                      (./Engine/Sound/Sm):01069                         
8F69                  (./Engine/Sound/Sm):01070                 PSGDoModulation  
8F69 A6A4             (./Engine/Sound/Sm):01071 [4]     9210            lda   PlaybackControl,y
8F6B 8502             (./Engine/Sound/Sm):01072 [2]     9212            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8F6D 2701             (./Engine/Sound/Sm):01073 [3]     9215            beq   @a
8F6F 39               (./Engine/Sound/Sm):01074 [5]     9220            rts                            ; If so, quit        
8F70 8508             (./Engine/Sound/Sm):01075 [2]     9222    @a      bita  #$08                     ; Is bit 3 (08h) "modulation on" set on playback?
8F72 2601             (./Engine/Sound/Sm):01076 [3]     9225            bne   @b
8F74 39               (./Engine/Sound/Sm):01077 [5]     9230            rts                            ; If not, quit        
8F75 A6A813           (./Engine/Sound/Sm):01078 [5]     9235    @b      lda   ModulationWait,y         ; 'ww' period of time before modulation starts
8F78 2704             (./Engine/Sound/Sm):01079 [3]     9238            beq   @c                       ; if zero, go to it!
8F7A 6AA813           (./Engine/Sound/Sm):01080 [7]     9245            dec   ModulationWait,y         ; Otherwise, decrement timer
8F7D 39               (./Engine/Sound/Sm):01081 [5]     9250            rts                            ; return if decremented
8F7E 6AA814           (./Engine/Sound/Sm):01082 [7]     9257    @c      dec   ModulationSpeed,y        ; Decrement modulation speed counter
8F81 2701             (./Engine/Sound/Sm):01083 [3]     9260            beq   @d
8F83 39               (./Engine/Sound/Sm):01084 [5]     9265            rts                            ; Return if not yet zero
8F84 AEA811           (./Engine/Sound/Sm):01085 [6]     9271    @d      ldx   ModulationPtr,y
8F87 A601             (./Engine/Sound/Sm):01086 [5]     9276            lda   1,x
8F89 A7A814           (./Engine/Sound/Sm):01087 [5]     9281            sta   ModulationSpeed,y
8F8C A6A816           (./Engine/Sound/Sm):01088 [5]     9286            lda   ModulationSteps,y
8F8F 2609             (./Engine/Sound/Sm):01089 [3]     9289            bne   @e
8F91 A603             (./Engine/Sound/Sm):01090 [5]     9294            lda   3,x
8F93 A7A816           (./Engine/Sound/Sm):01091 [5]     9299            sta   ModulationSteps,y     
8F96 60A815           (./Engine/Sound/Sm):01092 [7]     9306            neg   ModulationDelta,y
8F99 39               (./Engine/Sound/Sm):01093 [5]     9311            rts                
8F9A 6AA816           (./Engine/Sound/Sm):01094 [7]     9318    @e      dec   ModulationSteps,y
8F9D E6A815           (./Engine/Sound/Sm):01095 [5]     9323            ldb   ModulationDelta,y
8FA0 1D               (./Engine/Sound/Sm):01096 [2]     9325            sex
8FA1 E3A817           (./Engine/Sound/Sm):01097 [7]     9332            addd  ModulationVal,y
8FA4 EDA817           (./Engine/Sound/Sm):01098 [6]     9338            std   ModulationVal,y        
                      (./Engine/Sound/Sm):01099                               
8FA7                  (./Engine/Sound/Sm):01100                 PSGUpdateFreq2
8FA7 E6A819           (./Engine/Sound/Sm):01101 [5]     9343            ldb   Detune,y
8FAA 1D               (./Engine/Sound/Sm):01102 [2]     9345            sex
8FAB E32D             (./Engine/Sound/Sm):01103 [7]     9352            addd  NextData,y               ; apply detune but don't update stored frequency
8FAD E3A817           (./Engine/Sound/Sm):01104 [7]     9359            addd  ModulationVal,y          ; add modulation effect
8FB0 FD8FC4           (./Engine/Sound/Sm):01105 [6]     9365            std   @dyn+1
8FB3 C40F             (./Engine/Sound/Sm):01106 [2]     9367            andb  #$0F                     ; Keep only lower four bits (first PSG reg write only applies d0-d3 of freq)
8FB5 A621             (./Engine/Sound/Sm):01107 [5]     9372            lda   VoiceControl,y
8FB7 81E0             (./Engine/Sound/Sm):01108 [2]     9374            cmpa  #$E0
8FB9 2604             (./Engine/Sound/Sm):01109 [3]     9377            bne   @a
8FBB CBC0             (./Engine/Sound/Sm):01110 [2]     9379            addb  #$C0
8FBD 2002             (./Engine/Sound/Sm):01111 [3]     9382            bra   @b
8FBF EB21             (./Engine/Sound/Sm):01112 [5]     9387    @a      addb  VoiceControl,y           ; Get "voice control" byte...
8FC1 D7FF             (./Engine/Sound/Sm):01113 [4]     9391    @b      stb   <PSG
8FC3 CC0000           (./Engine/Sound/Sm):01114 [3]     9394    @dyn    ldd   #0
                      (./Engine/Sound/Sm):01115                         _lsrd
8FC6 44               (            _lsrd):00001 [2]     9396            lsra
8FC7 56               (            _lsrd):00002 [2]     9398            rorb
                      (./Engine/Sound/Sm):01116                         _lsrd
8FC8 44               (            _lsrd):00001 [2]     9400            lsra
8FC9 56               (            _lsrd):00002 [2]     9402            rorb
                      (./Engine/Sound/Sm):01117                         _lsrd
8FCA 44               (            _lsrd):00001 [2]     9404            lsra
8FCB 56               (            _lsrd):00002 [2]     9406            rorb
                      (./Engine/Sound/Sm):01118                         _lsrd              
8FCC 44               (            _lsrd):00001 [2]     9408            lsra
8FCD 56               (            _lsrd):00002 [2]     9410            rorb
8FCE D7FF             (./Engine/Sound/Sm):01119 [4]     9414            stb   <PSG
8FD0 39               (./Engine/Sound/Sm):01120 [5]     9419            rts        
                      (./Engine/Sound/Sm):01121                  
                      (./Engine/Sound/Sm):01122                 ; 70 notes (Note value $81=C3 $C7=G#8) with direct access
                      (./Engine/Sound/Sm):01123                 ; (Note value $C8 is reserved for PSG3 to drive noise PSG4)
                      (./Engine/Sound/Sm):01124                 ; Other notes can be accessed by transpose
8FD1                  (./Engine/Sound/Sm):01125                 PSGFrequencies
8FD1 03F803C00388     (./Engine/Sound/Sm):01126                         fdb                                                         $03F8,$03C0,$0388 ; A2 - B2
8FD7 0356032702FA02CF (./Engine/Sound/Sm):01127                         fdb   $0356,$0327,$02FA,$02CF,$02A5,$0281,$025C,$023B,$021A,$01FC,$01E0,$01C4 ; C3 - B3
     02A50281025C023B
     021A01FC01E001C4
8FEF 01AB0193017D0167 (./Engine/Sound/Sm):01128                         fdb   $01AB,$0193,$017D,$0167,$0152,$0140,$012E,$011D,$010D,$00FE,$00F0,$00E2 ; C4 - B4
     01520140012E011D
     010D00FE00F000E2
9007 00D500C900BE00B3 (./Engine/Sound/Sm):01129                         fdb   $00D5,$00C9,$00BE,$00B3,$00A9,$00A0,$0097,$008E,$0086,$007F,$0078,$0071 ; C5 - B5
     00A900A00097008E
     0086007F00780071
901F 006A0064005F0059 (./Engine/Sound/Sm):01130                         fdb   $006A,$0064,$005F,$0059,$0054,$0050,$004B,$0047,$0043,$0040,$003C,$0039 ; C6 - B6
     00540050004B0047
     00430040003C0039
9037 00350032002F002C (./Engine/Sound/Sm):01131                         fdb   $0035,$0032,$002F,$002C,$002A,$0028,$0025,$0023,$0022,$0020,$001F,$001D ; C7 - B7
     002A002800250023
     00220020001F001D
904F 001A001900170016 (./Engine/Sound/Sm):01132                         fdb   $001A,$0019,$0017,$0016,$0015,$0014,$0012,$0011,$0010,$0001             ; C8 - G#8
     0015001400120011
     00100001
                      (./Engine/Sound/Sm):01133                         ; (Last 3 values are also used for channel 3 when driving noise channel. $0000 doesn't work for real SN76489 chip, so was replaced by $0001 value)
                      (./Engine/Sound/Sm):01134                 
9063                  (./Engine/Sound/Sm):01135                 PSG_FlutterTbl
                      (./Engine/Sound/Sm):01136                     ; Basically, for any tone 0-11, dynamic volume adjustments are applied to produce a pseudo-decay,
                      (./Engine/Sound/Sm):01137                     ; or sometimes a ramp up for "soft" sounds, or really any other volume effect you might want!
                      (./Engine/Sound/Sm):01138                 
                      (./Engine/Sound/Sm):01139                     ; Remember on PSG that the higher the value, the quieter it gets (it's attenuation, not volume);
                      (./Engine/Sound/Sm):01140                     ; 0 is thus loudest, and increasing values decay, until level $F (silent)
9063 0000             (./Engine/Sound/Sm):01141                         fdb   0 ; saves a dec instruction in table lookup
9065 907F9096909D90AE (./Engine/Sound/Sm):01142                         fdb   Flutter1,Flutter2,Flutter3,Flutter4
906D 90B990C890F2910E (./Engine/Sound/Sm):01143                         fdb   Flutter5,Flutter6,Flutter7,Flutter8
9075 91369147918591A1 (./Engine/Sound/Sm):01144                         fdb   Flutter9,Flutter10,Flutter11,Flutter12
907D 9221             (./Engine/Sound/Sm):01145                         fdb   Flutter13
907F                  (./Engine/Sound/Sm):01146                 Flutter1
907F 0000000101010202 (./Engine/Sound/Sm):01147                         fcb   0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5
     0203030304040405
908F 05050606060780   (./Engine/Sound/Sm):01148                         fcb   5,5,6,6,6,7,$80
9096                  (./Engine/Sound/Sm):01149                 Flutter2
9096 00020406081080   (./Engine/Sound/Sm):01150                         fcb   0,2,4,6,8,$10,$80
909D                  (./Engine/Sound/Sm):01151                 Flutter3
909D 0000010102020303 (./Engine/Sound/Sm):01152                         fcb   0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,$80
     0404050506060707
     80
90AE                  (./Engine/Sound/Sm):01153                 Flutter4
90AE 0000020304040505 (./Engine/Sound/Sm):01154                         fcb   0,0,2,3,4,4,5,5,5,6,$80
     050680
90B9                  (./Engine/Sound/Sm):01155                 Flutter5
90B9 0303030202020201 (./Engine/Sound/Sm):01156                         fcb   3,3,3,2,2,2,2,1,1,1,0,0,0,0,$80
     01010000000080
90C8                  (./Engine/Sound/Sm):01157                 Flutter6
90C8 0000000000000000 (./Engine/Sound/Sm):01158                         fcb   0,0,0,0,0,0,0,0,0,0,1,1
     00000101
90D4 0101010101010101 (./Engine/Sound/Sm):01159                         fcb   1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2
     0101010102020202
90E4 0202020203030303 (./Engine/Sound/Sm):01160                         fcb   2,2,2,2,3,3,3,3,3,3,3,3,4,$80
     030303030480
90F2                  (./Engine/Sound/Sm):01161                 Flutter7
90F2 0000000000000101 (./Engine/Sound/Sm):01162                         fcb   0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,2
     0101010202020202
9102 0303030404040505 (./Engine/Sound/Sm):01163                         fcb   3,3,3,4,4,4,5,5,5,6,7,$80
     05060780
910E                  (./Engine/Sound/Sm):01164                 Flutter8
910E 0000000000010101 (./Engine/Sound/Sm):01165                         fcb   0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,2
     0101020202020202
911E 0303030303040404 (./Engine/Sound/Sm):01166                         fcb   3,3,3,3,3,4,4,4,4,4,5,5,5,5,5,6
     0404050505050506
912E 0606060607070780 (./Engine/Sound/Sm):01167                         fcb   6,6,6,6,7,7,7,$80
9136                  (./Engine/Sound/Sm):01168                 Flutter9
9136 0001020304050607 (./Engine/Sound/Sm):01169                         fcb   0,1,2,3,4,5,6,7,8,9,$0A,$0B,$0C,$0D,$0E,$0F,$80
     08090A0B0C0D0E0F
     80
9147                  (./Engine/Sound/Sm):01170                 Flutter10
9147 0000000000000000 (./Engine/Sound/Sm):01171                         fcb   0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1
     0000010101010101
9157 0101010101010101 (./Engine/Sound/Sm):01172                         fcb   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     0101010101010101
9167 0101010101010101 (./Engine/Sound/Sm):01173                         fcb   1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2
     0202020202020202
9177 0202030303030303 (./Engine/Sound/Sm):01174                         fcb   2,2,3,3,3,3,3,3,3,3,3,3,4,$80
     030303030480
9185                  (./Engine/Sound/Sm):01175                 Flutter11
9185 0404040303030202 (./Engine/Sound/Sm):01176                         fcb   4,4,4,3,3,3,2,2,2,1,1,1,1,1,1,1
     0201010101010101
9195 0202020202030303 (./Engine/Sound/Sm):01177                         fcb   2,2,2,2,2,3,3,3,3,3,4,$80
     03030480
91A1                  (./Engine/Sound/Sm):01178                 Flutter12
91A1 0404030302020101 (./Engine/Sound/Sm):01179                         fcb   4,4,3,3,2,2,1,1,1,1,1,1,1,1,1,1
     0101010101010101
91B1 0101010101010101 (./Engine/Sound/Sm):01180                         fcb   1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2
     0101020202020202
91C1 0202020202020202 (./Engine/Sound/Sm):01181                         fcb   2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3
     0202020202020303
91D1 0303030303030303 (./Engine/Sound/Sm):01182                         fcb   3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
     0303030303030303
91E1 0303040404040404 (./Engine/Sound/Sm):01183                         fcb   3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4
     0404040404040404
91F1 0404040404040505 (./Engine/Sound/Sm):01184                         fcb   4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5
     0505050505050505
9201 0505050505050505 (./Engine/Sound/Sm):01185                         fcb   5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6
     0505060606060606
9211 0606060606060606 (./Engine/Sound/Sm):01186                         fcb   6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,$80
     0606060606060780
9221                  (./Engine/Sound/Sm):01187                 Flutter13
9221 0E0D0C0B0A090807 (./Engine/Sound/Sm):01188                         fcb   $0E,$0D,$0C,$0B,$0A,9,8,7,6,5,4,3,2,1,0,$80
     0605040302010080
                      (./Engine/Sound/Sm):01189                 
                      (./Engine/Sound/Sm):01190                 ;   END of PSG_FlutterTbl ---------------------------                 
                      (./Engine/Sound/Sm):01191                           
                      (./Engine/Sound/Sm):01192                 ******************************************************************************
                      (./Engine/Sound/Sm):01193                 * PlaySound - Load and play a new sound effect
                      (./Engine/Sound/Sm):01194                 *
                      (./Engine/Sound/Sm):01195                 * receives in X the address of the sound
                      (./Engine/Sound/Sm):01196                 * destroys X
                      (./Engine/Sound/Sm):01197                 ******************************************************************************          
                      (./Engine/Sound/Sm):01198                 
9231                  (./Engine/Sound/Sm):01199                 SFXTrackOffs        
9231 8848             (./Engine/Sound/Sm):01200                         fdb   SFXFM3                   ; identified by Track id 8002 in smps sfx file (for Sonic 2 compatibility)
9233 8848             (./Engine/Sound/Sm):01201                         fdb   SFXFM3                   ; identified by Track id 8003 in smps sfx file        
9235 8872             (./Engine/Sound/Sm):01202                         fdb   SFXFM4                   ; identified by Track id 8004 in smps sfx file        
9237 889C             (./Engine/Sound/Sm):01203                         fdb   SFXFM5                   ; identified by Track id 8005 in smps sfx file
9239 88C6             (./Engine/Sound/Sm):01204                         fdb   SFXPSG1                  ; identified by Track id 8080 in smps sfx file
923B 88F0             (./Engine/Sound/Sm):01205                         fdb   SFXPSG2                  ; identified by Track id 80A0 in smps sfx file
923D 891A             (./Engine/Sound/Sm):01206                         fdb   SFXPSG3                  ; identified by Track id 80C0 in smps sfx file
923F 891A             (./Engine/Sound/Sm):01207                         fdb   SFXPSG3                  ; identified by Track id 80E0 in smps sfx file
                      (./Engine/Sound/Sm):01208                 
9241                  (./Engine/Sound/Sm):01209                 MusicTrackOffs
9241 86A4             (./Engine/Sound/Sm):01210                         fdb   SongFM3
9243 86A4             (./Engine/Sound/Sm):01211                         fdb   SongFM3        
9245 86CE             (./Engine/Sound/Sm):01212                         fdb   SongFM4        
9247 86F8             (./Engine/Sound/Sm):01213                         fdb   SongFM5
9249 87CA             (./Engine/Sound/Sm):01214                         fdb   SongPSG1
924B 87F4             (./Engine/Sound/Sm):01215                         fdb   SongPSG2
924D 881E             (./Engine/Sound/Sm):01216                         fdb   SongPSG3
924F 881E             (./Engine/Sound/Sm):01217                         fdb   SongPSG3
                      (./Engine/Sound/Sm):01218                 
9251                  (./Engine/Sound/Sm):01219                 PlaySound
9251 3466             (./Engine/Sound/Sm):01220 [11]    9430            pshs  d,y,u
                      (./Engine/Sound/Sm):01221                 
                      (./Engine/Sound/Sm):01222                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
9253 BD7380           (    _GetCartPageA):00002 [8]     9438            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
9256 B7930A           (./Engine/Sound/Sm):01223 [5]     9443            sta   PlaySound_end+1          ; backup data page
9259 A684             (./Engine/Sound/Sm):01224 [4]     9447            lda   ,x                       ; get memory page that contains track data
925B B78949           (./Engine/Sound/Sm):01225 [5]     9452            sta   SoundPage
925E AE01             (./Engine/Sound/Sm):01226 [6]     9458            ldx   1,x                      ; get ptr to track data
9260 BF894C           (./Engine/Sound/Sm):01227 [6]     9464            stx   SoundData
                      (./Engine/Sound/Sm):01228                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
9263 BD7324           (    _SetCartPageA):00002 [8]     9472            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Sound/Sm):01229                         
9266 EC84             (./Engine/Sound/Sm):01230 [5]     9477            ldd   SMPS_SFX_VOICE,x
9268 F3894C           (./Engine/Sound/Sm):01231 [7]     9484            addd  SoundData   
926B FD861B           (./Engine/Sound/Sm):01232 [6]     9490            std   Smps.SFXVoiceTblPtr
                      (./Engine/Sound/Sm):01233                 
926E EC02             (./Engine/Sound/Sm):01234 [6]     9496            ldd   SMPS_SFX_TEMPO_NB_CH,x   ; init process for each track
9270 B792E5           (./Engine/Sound/Sm):01235 [5]     9501            sta   @dyna+2        
9273 F79310           (./Engine/Sound/Sm):01236 [5]     9506            stb   PS_cnt
9276 3004             (./Engine/Sound/Sm):01237 [5]     9511            leax  SMPS_SFX_HDR_LEN,x        
9278 CE9241           (./Engine/Sound/Sm):01238 [3]     9514    @a      ldu   #MusicTrackOffs
927B EC84             (./Engine/Sound/Sm):01239 [5]     9519            ldd   SMPS_SFX_TRK_CH,x        ; read playbackcontrol and voice id
927D FD92EB           (./Engine/Sound/Sm):01240 [6]     9525            std   @dynb+1
9280 5D               (./Engine/Sound/Sm):01241 [2]     9527            tstb
9281 2B08             (./Engine/Sound/Sm):01242 [3]     9530            bmi   @psg
9283 C002             (./Engine/Sound/Sm):01243 [2]     9532            subb  #2                       ; this is an fm track
9285 58               (./Engine/Sound/Sm):01244 [2]     9534            aslb                           ; transform track ref to an index: $02,$04,$05 => 0,4,6
9286 10AEC5           (./Engine/Sound/Sm):01245 [7]     9541            ldy   b,u    
9289 2013             (./Engine/Sound/Sm):01246 [3]     9544            bra   @c
928B C1C0             (./Engine/Sound/Sm):01247 [2]     9546    @psg    cmpb  #$C0
928D 2608             (./Engine/Sound/Sm):01248 [3]     9549            bne   @b
928F 86DF             (./Engine/Sound/Sm):01249 [2]     9551            lda   #$DF                     ; set silence on PSG3
9291 97FF             (./Engine/Sound/Sm):01250 [4]     9555            sta   <PSG
9293 86FF             (./Engine/Sound/Sm):01251 [2]     9557            lda   #$FF
9295 97FF             (./Engine/Sound/Sm):01252 [4]     9561            sta   <PSG
9297 54               (./Engine/Sound/Sm):01253 [2]     9563    @b      lsrb                           ; this is a psg track
9298 54               (./Engine/Sound/Sm):01254 [2]     9565            lsrb
9299 54               (./Engine/Sound/Sm):01255 [2]     9567            lsrb
929A 54               (./Engine/Sound/Sm):01256 [2]     9569            lsrb                           ; transform track ref to an index: $80,$A0,$C0,$E0 => 8,10,12,14
929B 10AEC5           (./Engine/Sound/Sm):01257 [7]     9576            ldy   b,u    
929E A6A4             (./Engine/Sound/Sm):01258 [4]     9580    @c      lda   PlaybackControl,y        ; y (hl) ptr to Music Track
92A0 8A04             (./Engine/Sound/Sm):01259 [2]     9582            ora   #$04                     ; Set "SFX is overriding this track!" bit
92A2 A7A4             (./Engine/Sound/Sm):01260 [4]     9586            sta   PlaybackControl,y
92A4 CE9231           (./Engine/Sound/Sm):01261 [3]     9589            ldu   #SFXTrackOffs
92A7 EEC5             (./Engine/Sound/Sm):01262 [6]     9595            ldu   b,u                      ; u (ix) ptr to SFX Track
92A9 CC0000           (./Engine/Sound/Sm):01263 [3]     9598            ldd   #0                       ; clear SFX Track
92AC EDC4             (./Engine/Sound/Sm):01264 [5]     9603            std   ,u
92AE ED42             (./Engine/Sound/Sm):01265 [6]     9609            std   2,u
92B0 ED44             (./Engine/Sound/Sm):01266 [6]     9615            std   4,u
92B2 ED46             (./Engine/Sound/Sm):01267 [6]     9621            std   6,u
92B4 ED48             (./Engine/Sound/Sm):01268 [6]     9627            std   8,u
92B6 ED4A             (./Engine/Sound/Sm):01269 [6]     9633            std   10,u
92B8 ED4C             (./Engine/Sound/Sm):01270 [6]     9639            std   12,u
92BA ED4E             (./Engine/Sound/Sm):01271 [6]     9645            std   14,u
92BC EDC810           (./Engine/Sound/Sm):01272 [6]     9651            std   16,u
92BF EDC812           (./Engine/Sound/Sm):01273 [6]     9657            std   18,u
92C2 EDC814           (./Engine/Sound/Sm):01274 [6]     9663            std   20,u
92C5 EDC816           (./Engine/Sound/Sm):01275 [6]     9669            std   22,u
92C8 EDC818           (./Engine/Sound/Sm):01276 [6]     9675            std   24,u
92CB EDC81A           (./Engine/Sound/Sm):01277 [6]     9681            std   26,u
92CE EDC81C           (./Engine/Sound/Sm):01278 [6]     9687            std   28,u
92D1 EDC81E           (./Engine/Sound/Sm):01279 [6]     9693            std   30,u
92D4 EDC820           (./Engine/Sound/Sm):01280 [6]     9699            std   32,u
92D7 EDC822           (./Engine/Sound/Sm):01281 [6]     9705            std   34,u
92DA EDC824           (./Engine/Sound/Sm):01282 [6]     9711            std   36,u
92DD EDC826           (./Engine/Sound/Sm):01283 [6]     9717            std   38,u
92E0 EDC828           (./Engine/Sound/Sm):01284 [6]     9723            std   40,u
92E3 CC0100           (./Engine/Sound/Sm):01285 [3]     9726    @dyna   ldd   #$0100                   ; (dynamic) TempoDivider
92E6 A74B             (./Engine/Sound/Sm):01286 [5]     9731            sta   DurationTimeout,u        ; current duration timeout to 1 (will expire immediately and thus update)
92E8 E743             (./Engine/Sound/Sm):01287 [5]     9736            stb   TempoDivider,u
92EA CC0000           (./Engine/Sound/Sm):01288 [3]     9739    @dynb   ldd   #0                       ; (dynamic)
92ED A7C4             (./Engine/Sound/Sm):01289 [4]     9743            sta   PlaybackControl,u
92EF E741             (./Engine/Sound/Sm):01290 [5]     9748            stb   VoiceControl,u
92F1 C62A             (./Engine/Sound/Sm):01291 [2]     9750            ldb   #GoSubStack
92F3 E74A             (./Engine/Sound/Sm):01292 [5]     9755            stb   StackPointer,u           ; Reset track "gosub" stack
92F5 EC02             (./Engine/Sound/Sm):01293 [6]     9761            ldd   SMPS_SFX_TRK_DATA_PTR,x 
92F7 F3894C           (./Engine/Sound/Sm):01294 [7]     9768            addd  SoundData
92FA ED44             (./Engine/Sound/Sm):01295 [6]     9774            std   DataPointer,u
92FC EC04             (./Engine/Sound/Sm):01296 [6]     9780            ldd   SMPS_SFX_TRK_TR_VOL_PTR,x
92FE ED46             (./Engine/Sound/Sm):01297 [6]     9786            std   TranspAndVolume,u        
9300 3006             (./Engine/Sound/Sm):01298 [5]     9791            leax  SMPS_SFX_TRK_HDR_LEN,x
9302 7A9310           (./Engine/Sound/Sm):01299 [7]     9798            dec   PS_cnt    
9305 1026FF6F         (./Engine/Sound/Sm):01300 [5+?]   9803            lbne  @a  
                      (./Engine/Sound/Sm):01301                 
9309                  (./Engine/Sound/Sm):01302                 PlaySound_end
9309 8600             (./Engine/Sound/Sm):01303 [2]     9805            lda   #0
                      (./Engine/Sound/Sm):01304                         _SetCartPageA          
                      (    _SetCartPageA):00001                  IFDEF T2
930B BD7324           (    _SetCartPageA):00002 [8]     9813            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
930E 35E6             (./Engine/Sound/Sm):01305 [13]    9826            puls  d,y,u,pc
                      (./Engine/Sound/Sm):01306                 
9310 00               (./Engine/Sound/Sm):01307                 PS_cnt  fcb   0
                      (./Engine/Sound/Sm):01308                         
                      (./Engine/Sound/Sm):01309                 ******************************************************************************
                      (./Engine/Sound/Sm):01310                 * CoordFlag
                      (./Engine/Sound/Sm):01311                 ******************************************************************************
                      (./Engine/Sound/Sm):01312                 
9311                  (./Engine/Sound/Sm):01313                 CoordFlag
9311 C0E0             (./Engine/Sound/Sm):01314 [2]     9828            subb  #$E0
9313 58               (./Engine/Sound/Sm):01315 [2]     9830            aslb
9314 CE9319           (./Engine/Sound/Sm):01316 [3]     9833            ldu   #CoordFlagLookup
9317 6ED5             (./Engine/Sound/Sm):01317 [7]     9840            jmp   [b,u] 
                      (./Engine/Sound/Sm):01318                 
9319                  (./Engine/Sound/Sm):01319                 CoordFlagLookup
9319 9548             (./Engine/Sound/Sm):01320                         fdb   cfSkip1               ; E0 -- unsupported (panning)
931B 9359             (./Engine/Sound/Sm):01321                         fdb   cfDetune              ; E1 -- done
931D 9548             (./Engine/Sound/Sm):01322                         fdb   cfSkip1               ; E2 -- unsupported
931F 936F             (./Engine/Sound/Sm):01323                         fdb   cfJumpReturn          ; E3 -- done
9321 9378             (./Engine/Sound/Sm):01324                         fdb   cfFadeInToPrevious    ; E4 --todo
9323 9379             (./Engine/Sound/Sm):01325                         fdb   cfSetTempoDivider     ; E5 -- done
9325 937E             (./Engine/Sound/Sm):01326                         fdb   cfChangeFMVolume      ; E6 -- done
9327 93AB             (./Engine/Sound/Sm):01327                         fdb   cfPreventAttack       ; E7 -- done
9329 93B2             (./Engine/Sound/Sm):01328                         fdb   cfNoteFill            ; E8 -- done
932B 93BA             (./Engine/Sound/Sm):01329                         fdb   cfChangeTransposition ; E9 -- done
932D 93C1             (./Engine/Sound/Sm):01330                         fdb   cfSetTempo            ; EA -- done
932F 93C7             (./Engine/Sound/Sm):01331                         fdb   cfSetTempoMod         ; EB -- done
9331 93E5             (./Engine/Sound/Sm):01332                         fdb   cfChangePSGVolume     ; EC -- done
9333 954A             (./Engine/Sound/Sm):01333                         fdb   cfNop                 ; ED -- unsupported
9335 954A             (./Engine/Sound/Sm):01334                         fdb   cfNop                 ; EE -- unsupported
9337 93EC             (./Engine/Sound/Sm):01335                         fdb   cfSetVoice            ; EF -- done
9339 9432             (./Engine/Sound/Sm):01336                         fdb   cfModulation          ; F0 -- done
933B 9456             (./Engine/Sound/Sm):01337                         fdb   cfEnableModulation    ; F1 -- done
933D 945D             (./Engine/Sound/Sm):01338                         fdb   cfStopTrack           ; F2 -- done
933F 94FE             (./Engine/Sound/Sm):01339                         fdb   cfSetPSGNoise         ; F3 -- done
9341 9510             (./Engine/Sound/Sm):01340                         fdb   cfDisableModulation   ; F4 -- done
9343 9517             (./Engine/Sound/Sm):01341                         fdb   cfSetPSGTone          ; F5 -- done
9345 951C             (./Engine/Sound/Sm):01342                         fdb   cfJumpTo              ; F6 -- done
9347 9521             (./Engine/Sound/Sm):01343                         fdb   cfRepeatAtPos         ; F7 -- done
9349 9539             (./Engine/Sound/Sm):01344                         fdb   cfJumpToGosub         ; F8 -- done
934B 954A             (./Engine/Sound/Sm):01345                         fdb   cfNop                 ; F9 -- unsupported
934D 954A             (./Engine/Sound/Sm):01346                         fdb   cfNop                 ; FA -- free
934F 954A             (./Engine/Sound/Sm):01347                         fdb   cfNop                 ; FB -- free
9351 954A             (./Engine/Sound/Sm):01348                         fdb   cfNop                 ; FC -- free
9353 954A             (./Engine/Sound/Sm):01349                         fdb   cfNop                 ; FD -- free
9355 954A             (./Engine/Sound/Sm):01350                         fdb   cfNop                 ; FE -- free
9357 954A             (./Engine/Sound/Sm):01351                         fdb   cfNop                 ; FF -- free
                      (./Engine/Sound/Sm):01352                 
                      (./Engine/Sound/Sm):01353                 ; (via Saxman's doc): Alter note values by xx
                      (./Engine/Sound/Sm):01354                 ; More or less a pitch bend; this is applied to the frequency as a signed value
                      (./Engine/Sound/Sm):01355                 ;              
9359                  (./Engine/Sound/Sm):01356                 cfDetune
9359 A680             (./Engine/Sound/Sm):01357 [6]     9846            lda   ,x+
                      (./Engine/Sound/Sm):01358                         ; this should be replaced by a conversion of the smps music file
                      (./Engine/Sound/Sm):01359                         ; here to play sonic2 files only
935B E621             (./Engine/Sound/Sm):01360 [5]     9851            ldb   VoiceControl,y           ; read channel nb
935D 2B0C             (./Engine/Sound/Sm):01361 [3]     9854            bmi   @a                       ; Is voice control bit 7 (80h) a PSG track set?        
935F 47               (./Engine/Sound/Sm):01362 [2]     9856            asra                           ; ratio freq btw YM2612 and YM2413 is 3.73, so tame a bit (/3)
9360 B79368           (./Engine/Sound/Sm):01363 [5]     9861            sta   @dyna+1
9363 47               (./Engine/Sound/Sm):01364 [2]     9863            asra        
9364 B7936A           (./Engine/Sound/Sm):01365 [5]     9868            sta   @dynb+1
9367 8600             (./Engine/Sound/Sm):01366 [2]     9870    @dyna   lda   #0           
9369 8000             (./Engine/Sound/Sm):01367 [2]     9872    @dynb   suba  #0         
                      (./Engine/Sound/Sm):01368                         ; end of tmp code
936B A7A819           (./Engine/Sound/Sm):01369 [5]     9877    @a      sta   Detune,y
936E 39               (./Engine/Sound/Sm):01370 [5]     9882            rts           
                      (./Engine/Sound/Sm):01371                 
                      (./Engine/Sound/Sm):01372                 ; Return (Sonic 1 & 2)
                      (./Engine/Sound/Sm):01373                 ;
936F                  (./Engine/Sound/Sm):01374                 cfJumpReturn
936F A62A             (./Engine/Sound/Sm):01375 [5]     9887            lda   StackPointer,y           ; retrieve stack ptr
9371 AEA6             (./Engine/Sound/Sm):01376 [6]     9893            ldx   a,y                      ; load return address
9373 8B02             (./Engine/Sound/Sm):01377 [2]     9895            adda  #2                       
9375 A72A             (./Engine/Sound/Sm):01378 [5]     9900            sta   StackPointer,y           ; free stack position
9377 39               (./Engine/Sound/Sm):01379 [5]     9905            rts         
                      (./Engine/Sound/Sm):01380                         
9378                  (./Engine/Sound/Sm):01381                 cfFadeInToPrevious
9378 39               (./Engine/Sound/Sm):01382 [5]     9910            rts   
                      (./Engine/Sound/Sm):01383                 
                      (./Engine/Sound/Sm):01384                 ; Change tempo divider to xx
                      (./Engine/Sound/Sm):01385                 ;        
9379                  (./Engine/Sound/Sm):01386                 cfSetTempoDivider
9379 A680             (./Engine/Sound/Sm):01387 [6]     9916            lda   ,x+
937B A723             (./Engine/Sound/Sm):01388 [5]     9921            sta   TempoDivider,y
937D 39               (./Engine/Sound/Sm):01389 [5]     9926            rts    
                      (./Engine/Sound/Sm):01390                         
                      (./Engine/Sound/Sm):01391                 ; (via Saxman's doc): Change channel volume BY xx; xx is signed
                      (./Engine/Sound/Sm):01392                 ;
937E                  (./Engine/Sound/Sm):01393                 cfChangeFMVolume
937E A627             (./Engine/Sound/Sm):01394 [5]     9931            lda   Volume,y                 ; apply volume attenuation change
9380 AB80             (./Engine/Sound/Sm):01395 [6]     9937            adda  ,x+
9382 A727             (./Engine/Sound/Sm):01396 [5]     9942            sta   Volume,y
9384 E6A4             (./Engine/Sound/Sm):01397 [4]     9946            ldb   PlaybackControl,y
9386 C504             (./Engine/Sound/Sm):01398 [2]     9948            bitb  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
9388 2620             (./Engine/Sound/Sm):01399 [3]     9951            bne   @rts        
938A 44               (./Engine/Sound/Sm):01400 [2]     9953            lsra                           ; volume attenuation is unsigned
938B 44               (./Engine/Sound/Sm):01401 [2]     9955            lsra
938C 44               (./Engine/Sound/Sm):01402 [2]     9957            lsra
938D B793A1           (./Engine/Sound/Sm):01403 [5]     9962            sta   @dyn1+1
9390 8630             (./Engine/Sound/Sm):01404 [2]     9964            lda   #$30
9392 AB21             (./Engine/Sound/Sm):01405 [5]     9969            adda  VoiceControl,y
9394 97FC             (./Engine/Sound/Sm):01406 [4]     9973            sta   <YM2413_A0
9396 E6A81F           (./Engine/Sound/Sm):01407 [5]     9978            ldb   InstrAndVolume,y         
9399 1F98             (./Engine/Sound/Sm):01408 [6]     9984            tfr   b,a
939B 8A0F             (./Engine/Sound/Sm):01409 [2]     9986            ora   #$0F                     ; set maximum attenuation for compare        
939D B793A3           (./Engine/Sound/Sm):01410 [5]     9991            sta   @dyn2+1
93A0 CB00             (./Engine/Sound/Sm):01411 [2]     9993    @dyn1   addb  #0                       ; (dynamic) add global volume attenuation to actual voice
93A2 C100             (./Engine/Sound/Sm):01412 [2]     9995    @dyn2   cmpb  #0                       ; (dynamic) test if overflow of attenuation value
93A4 2502             (./Engine/Sound/Sm):01413 [3]     9998            blo   @write                   ; attenuation < F and no overflow
93A6 1F89             (./Engine/Sound/Sm):01414 [6]     10004           tfr   a,b                      ; set maximum attenuation (F)
93A8 D7FD             (./Engine/Sound/Sm):01415 [4]     10008   @write  stb   <YM2413_D0        
93AA 39               (./Engine/Sound/Sm):01416 [5]     10013   @rts    rts     
                      (./Engine/Sound/Sm):01417                 
93AB                  (./Engine/Sound/Sm):01418                 cfPreventAttack
93AB A6A4             (./Engine/Sound/Sm):01419 [4]     10017           lda   PlaybackControl,y
93AD 8A10             (./Engine/Sound/Sm):01420 [2]     10019           ora   #$10
93AF A7A4             (./Engine/Sound/Sm):01421 [4]     10023           sta   PlaybackControl,y        ; Set bit 4 (10h) on playback control; do not attack next note
93B1 39               (./Engine/Sound/Sm):01422 [5]     10028           rts      
                      (./Engine/Sound/Sm):01423                 
                      (./Engine/Sound/Sm):01424                 ; (via Saxman's doc): set note fill amount to xx
                      (./Engine/Sound/Sm):01425                 ;
93B2                  (./Engine/Sound/Sm):01426                 cfNoteFill 
93B2 A680             (./Engine/Sound/Sm):01427 [6]     10034           lda   ,x+
93B4 A72F             (./Engine/Sound/Sm):01428 [5]     10039           sta   NoteFillTimeout,y
93B6 A7A810           (./Engine/Sound/Sm):01429 [5]     10044           sta   NoteFillMaster,y
93B9 39               (./Engine/Sound/Sm):01430 [5]     10049           rts          
                      (./Engine/Sound/Sm):01431                 
                      (./Engine/Sound/Sm):01432                 ; (via Saxman's doc): add xx to channel key
                      (./Engine/Sound/Sm):01433                 ;
93BA                  (./Engine/Sound/Sm):01434                 cfChangeTransposition
93BA A626             (./Engine/Sound/Sm):01435 [5]     10054           lda   Transpose,y
93BC AB80             (./Engine/Sound/Sm):01436 [6]     10060           adda  ,x+
93BE A726             (./Engine/Sound/Sm):01437 [5]     10065           sta   Transpose,y
93C0 39               (./Engine/Sound/Sm):01438 [5]     10070           rts
                      (./Engine/Sound/Sm):01439                 
                      (./Engine/Sound/Sm):01440                 ; (via Saxman's doc): set music tempo to xx
                      (./Engine/Sound/Sm):01441                 ;
93C1                  (./Engine/Sound/Sm):01442                 cfSetTempo 
93C1 A680             (./Engine/Sound/Sm):01443 [6]     10076           lda   ,x+
93C3 B78612           (./Engine/Sound/Sm):01444 [5]     10081           sta   Smps.CurrentTempo
93C6 39               (./Engine/Sound/Sm):01445 [5]     10086           rts          
                      (./Engine/Sound/Sm):01446                 
                      (./Engine/Sound/Sm):01447                 ; (via Saxman's doc): Change Tempo Modifier to xx for ALL channels
                      (./Engine/Sound/Sm):01448                 ;
93C7                  (./Engine/Sound/Sm):01449                 cfSetTempoMod
93C7 A680             (./Engine/Sound/Sm):01450 [6]     10092           lda   ,x+
93C9 B78629           (./Engine/Sound/Sm):01451 [5]     10097           sta   SongDAC.TempoDivider
93CC B78653           (./Engine/Sound/Sm):01452 [5]     10102           sta   SongFM1.TempoDivider
93CF B7867D           (./Engine/Sound/Sm):01453 [5]     10107           sta   SongFM2.TempoDivider
93D2 B786A7           (./Engine/Sound/Sm):01454 [5]     10112           sta   SongFM3.TempoDivider
93D5 B786D1           (./Engine/Sound/Sm):01455 [5]     10117           sta   SongFM4.TempoDivider
93D8 B786FB           (./Engine/Sound/Sm):01456 [5]     10122           sta   SongFM5.TempoDivider
                      (./Engine/Sound/Sm):01457                         ;sta   SongFM6.TempoDivider
                      (./Engine/Sound/Sm):01458                         ;sta   SongFM7.TempoDivider
                      (./Engine/Sound/Sm):01459                         ;sta   SongFM8.TempoDivider
                      (./Engine/Sound/Sm):01460                         ;sta   SongFM9.TempoDivider        
93DB B787CD           (./Engine/Sound/Sm):01461 [5]     10127           sta   SongPSG1.TempoDivider
93DE B787F7           (./Engine/Sound/Sm):01462 [5]     10132           sta   SongPSG2.TempoDivider
93E1 B78821           (./Engine/Sound/Sm):01463 [5]     10137           sta   SongPSG3.TempoDivider
                      (./Engine/Sound/Sm):01464                         ;sta   SongPSG4.TempoDivider        
93E4 39               (./Engine/Sound/Sm):01465 [5]     10142           rts        
                      (./Engine/Sound/Sm):01466                 
93E5                  (./Engine/Sound/Sm):01467                 cfChangePSGVolume
93E5 A627             (./Engine/Sound/Sm):01468 [5]     10147           lda   Volume,y
93E7 AB80             (./Engine/Sound/Sm):01469 [6]     10153           adda  ,x+
93E9 A727             (./Engine/Sound/Sm):01470 [5]     10158           sta   Volume,y
93EB 39               (./Engine/Sound/Sm):01471 [5]     10163           rts    
                      (./Engine/Sound/Sm):01472                         
                      (./Engine/Sound/Sm):01473                 ; (via Saxman's doc): set voice selection to xx
                      (./Engine/Sound/Sm):01474                 ;
93EC                  (./Engine/Sound/Sm):01475                 cfSetVoice
93EC E680             (./Engine/Sound/Sm):01476 [6]     10169           ldb   ,x+
93EE E728             (./Engine/Sound/Sm):01477 [5]     10174           stb   VoiceIndex,y             ; save voice index to restore voice after sfx        
93F0 A6A4             (./Engine/Sound/Sm):01478 [4]     10178           lda   PlaybackControl,y
93F2 8504             (./Engine/Sound/Sm):01479 [2]     10180           bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
93F4 263B             (./Engine/Sound/Sm):01480 [3]     10183           bne   @rts                     ; yes skip YM command
93F6 B68945           (./Engine/Sound/Sm):01481 [5]     10188           lda   DoSFXFlag
93F9 2B05             (./Engine/Sound/Sm):01482 [3]     10191           bmi   @a
93FB FE8619           (./Engine/Sound/Sm):01483 [6]     10197           ldu   Smps.VoiceTblPtr
93FE 2003             (./Engine/Sound/Sm):01484 [3]     10200           bra   @b
9400 FE861B           (./Engine/Sound/Sm):01485 [6]     10206   @a      ldu   Smps.SFXVoiceTblPtr
9403                  (./Engine/Sound/Sm):01486                 @b        
9403 A621             (./Engine/Sound/Sm):01487 [5]     10211           lda   VoiceControl,y           ; read channel nb   
9405 8B30             (./Engine/Sound/Sm):01488 [2]     10213           adda  #$30
9407 97FC             (./Engine/Sound/Sm):01489 [4]     10217           sta   <YM2413_A0
9409 58               (./Engine/Sound/Sm):01490 [2]     10219           aslb
940A ECC5             (./Engine/Sound/Sm):01491 [6]     10225           ldd   b,u
940C A7A81F           (./Engine/Sound/Sm):01492 [5]     10230           sta   InstrAndVolume,y        
940F E7A81E           (./Engine/Sound/Sm):01493 [5]     10235           stb   InstrTranspose,y
9412 E627             (./Engine/Sound/Sm):01494 [5]     10240           ldb   Volume,y                 ; apply current track attenuation to voice
9414 54               (./Engine/Sound/Sm):01495 [2]     10242           lsrb                           ; volume attenuation is unsigned
9415 54               (./Engine/Sound/Sm):01496 [2]     10244           lsrb
9416 54               (./Engine/Sound/Sm):01497 [2]     10246           lsrb
9417 F79428           (./Engine/Sound/Sm):01498 [5]     10251           stb   @dyn1+1
941A C630             (./Engine/Sound/Sm):01499 [2]     10253           ldb   #$30
941C EB21             (./Engine/Sound/Sm):01500 [5]     10258           addb  VoiceControl,y
941E D7FC             (./Engine/Sound/Sm):01501 [4]     10262           stb   <YM2413_A0
9420 1F89             (./Engine/Sound/Sm):01502 [6]     10268           tfr   a,b
9422 CA0F             (./Engine/Sound/Sm):01503 [2]     10270           orb   #$0F                     ; set maximum attenuation for compare        
9424 F7942A           (./Engine/Sound/Sm):01504 [5]     10275           stb   @dyn2+1
9427 8B00             (./Engine/Sound/Sm):01505 [2]     10277   @dyn1   adda  #0                       ; (dynamic) add global volume attenuation
9429 8100             (./Engine/Sound/Sm):01506 [2]     10279   @dyn2   cmpa  #0                       ; (dynamic) test if overflow of attenuation value
942B 2502             (./Engine/Sound/Sm):01507 [3]     10282           blo   @write                   ; attenuation < F and no overflow
942D 1F98             (./Engine/Sound/Sm):01508 [6]     10288           tfr   b,a                      ; set maximum attenuation (F)
942F 97FD             (./Engine/Sound/Sm):01509 [4]     10292   @write  sta   <YM2413_D0     
9431 39               (./Engine/Sound/Sm):01510 [5]     10297   @rts    rts
                      (./Engine/Sound/Sm):01511                 
                      (./Engine/Sound/Sm):01512                 ; (via Saxman's doc): F0wwxxyyzz - modulation
                      (./Engine/Sound/Sm):01513                 ; o        ww - Wait for ww period of time before modulation starts
                      (./Engine/Sound/Sm):01514                 ; o        xx - Modulation Speed
                      (./Engine/Sound/Sm):01515                 ; o        yy - Modulation change per Mod. Step
                      (./Engine/Sound/Sm):01516                 ; o        zz - Number of steps in modulation
                      (./Engine/Sound/Sm):01517                 ;
9432                  (./Engine/Sound/Sm):01518                 cfModulation
9432 A6A4             (./Engine/Sound/Sm):01519 [4]     10301           lda   PlaybackControl,y
9434 8A08             (./Engine/Sound/Sm):01520 [2]     10303           ora   #$08
9436 A7A4             (./Engine/Sound/Sm):01521 [4]     10307           sta   PlaybackControl,y        ; Set bit 3 (08h) of "playback control" byte (modulation on)
9438 AFA811           (./Engine/Sound/Sm):01522 [6]     10313           stx   ModulationPtr,y          ; Back up modulation setting address
943B                  (./Engine/Sound/Sm):01523                 SetModulation
943B EC81             (./Engine/Sound/Sm):01524 [8]     10321           ldd   ,x++                     ; also read ModulationSpeed
943D EDA813           (./Engine/Sound/Sm):01525 [6]     10327           std   ModulationWait,y         ; also write ModulationSpeed
9440 EC81             (./Engine/Sound/Sm):01526 [8]     10335           ldd   ,x++                     ; also read ModulationSteps
9442 A7A815           (./Engine/Sound/Sm):01527 [5]     10340           sta   ModulationDelta,y        
9445 54               (./Engine/Sound/Sm):01528 [2]     10342           lsrb                           ; divide number of steps by 2
9446 E7A816           (./Engine/Sound/Sm):01529 [5]     10347           stb   ModulationSteps,y
9449 A6A4             (./Engine/Sound/Sm):01530 [4]     10351           lda   PlaybackControl,y
944B 8510             (./Engine/Sound/Sm):01531 [2]     10353           bita  #$10                     ; Is bit 4 "do not attack next note" (10h) set?
944D 2606             (./Engine/Sound/Sm):01532 [3]     10356           bne   @a                       ; If so, quit!
944F CC0000           (./Engine/Sound/Sm):01533 [3]     10359           ldd   #0
9452 EDA817           (./Engine/Sound/Sm):01534 [6]     10365           std   ModulationVal,y          ; Clear modulation value
9455 39               (./Engine/Sound/Sm):01535 [5]     10370   @a      rts         
                      (./Engine/Sound/Sm):01536                 
                      (./Engine/Sound/Sm):01537                 ; (via Saxman's doc): Turn on modulation
                      (./Engine/Sound/Sm):01538                 ;
9456                  (./Engine/Sound/Sm):01539                 cfEnableModulation
9456 A6A4             (./Engine/Sound/Sm):01540 [4]     10374           lda   PlaybackControl,y
9458 8A08             (./Engine/Sound/Sm):01541 [2]     10376           ora   #$08
945A A7A4             (./Engine/Sound/Sm):01542 [4]     10380           sta   PlaybackControl,y        ; Set bit 3 (08h) of "playback control" byte (modulation on)
945C 39               (./Engine/Sound/Sm):01543 [5]     10385           rts   
                      (./Engine/Sound/Sm):01544                 
                      (./Engine/Sound/Sm):01545                 ; (via Saxman's doc): stop the track
                      (./Engine/Sound/Sm):01546                 ;
945D                  (./Engine/Sound/Sm):01547                 cfStopTrack
945D A6A4             (./Engine/Sound/Sm):01548 [4]     10389           lda   PlaybackControl,y
945F 846F             (./Engine/Sound/Sm):01549 [2]     10391           anda  #$6F                     ; clear playback byte bit 7 (80h) -- currently playing (not anymore)
9461 A7A4             (./Engine/Sound/Sm):01550 [4]     10395           sta   PlaybackControl,y        ; clear playback byte bit 4 (10h) -- do not attack
                      (./Engine/Sound/Sm):01551                         
9463 E621             (./Engine/Sound/Sm):01552 [5]     10400           ldb   VoiceControl,y           ; read channel nb
9465 2B12             (./Engine/Sound/Sm):01553 [3]     10403           bmi   @a                       ; Is voice control bit 7 (80h) a PSG track set?
                      (./Engine/Sound/Sm):01554                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y               
9467 8504             (       _FMNoteOff):00001 [2]     10405           bita  #$04                     ; Is SFX overriding set?
9469 260C             (       _FMNoteOff):00002 [3]     10408           bne   @skip                    ; if true skip note off, sfx is playing        
946B CB20             (       _FMNoteOff):00003 [2]     10410           addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
946D D7FC             (       _FMNoteOff):00004 [4]     10414           stb   <YM2413_A0
946F E622             (       _FMNoteOff):00005 [5]     10419           ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
9471 C4EF             (       _FMNoteOff):00006 [2]     10421           andb  #$EF                     ; clear bit 4 (10h) Key Off
9473 D7FD             (       _FMNoteOff):00007 [4]     10425           stb   <YM2413_D0               ; send to YM
9475 E722             (       _FMNoteOff):00008 [5]     10430           stb   NoteControl,y               
     9477             (       _FMNoteOff):00009                 @skip   equ   *        
9477 2008             (./Engine/Sound/Sm):01555 [3]     10433           bra   @b
9479                  (./Engine/Sound/Sm):01556                 @a      _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
9479 8504             (      _PSGNoteOff):00001 [2]     10435           bita  #$04                     ; Is SFX overriding set?
947B 2604             (      _PSGNoteOff):00002 [3]     10438           bne   @skip                    ; if true skip note off, sfx is playing               
947D CA1F             (      _PSGNoteOff):00003 [2]     10440           orb   #$1F                     ; Volume Off
947F D7FF             (      _PSGNoteOff):00004 [4]     10444           stb   <PSG
     9481             (      _PSGNoteOff):00005                 @skip   equ   *        
9481 B68945           (./Engine/Sound/Sm):01557 [5]     10449   @b      lda   DoSFXFlag
9484 2B03             (./Engine/Sound/Sm):01558 [3]     10452           bmi   @d
9486 3540             (./Engine/Sound/Sm):01559 [7]     10459   @rts    puls  u                        ; removing return address from stack; will not return to coord flag loop
9488 39               (./Engine/Sound/Sm):01560 [5]     10464           rts
9489 A621             (./Engine/Sound/Sm):01561 [5]     10469   @d      lda   VoiceControl,y           ; this is SFX Track
948B 102B0050         (./Engine/Sound/Sm):01562 [5+?]   10474           lbmi  @psgsfx
948F CE9241           (./Engine/Sound/Sm):01563 [3]     10477           ldu   #MusicTrackOffs          ; get back the overriden music track
9492 8002             (./Engine/Sound/Sm):01564 [2]     10479           suba  #2
9494 48               (./Engine/Sound/Sm):01565 [2]     10481           asla                           ; transform track ref to an index: $02,$04,$05 => 0,4,6
9495 EEC6             (./Engine/Sound/Sm):01566 [6]     10487           ldu   a,u                      ; U ptr to same FM track ID than SFX but for Music, Y still for FM SFX Track
9497 A6C4             (./Engine/Sound/Sm):01567 [4]     10491           lda   PlaybackControl,u
9499 8504             (./Engine/Sound/Sm):01568 [2]     10493           bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
949B 27E9             (./Engine/Sound/Sm):01569 [3]     10496           beq   @rts                     ; if not skip this part (i.e. if SFX was not overriding this track, then nothing to restore)
949D 84FB             (./Engine/Sound/Sm):01570 [2]     10498           anda  #$FB                     ; Clear SFX is overriding this track from playback control
949F 8A02             (./Engine/Sound/Sm):01571 [2]     10500           ora   #$02                     ; Set bit 1 (track is at rest)
94A1 A7C4             (./Engine/Sound/Sm):01572 [4]     10504           sta   PlaybackControl,u
94A3 B68948           (./Engine/Sound/Sm):01573 [5]     10509           lda   MusicPage
                      (./Engine/Sound/Sm):01574                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
94A6 BD7324           (    _SetCartPageA):00002 [8]     10517           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
94A9 BE8619           (./Engine/Sound/Sm):01575 [6]     10523           ldx   Smps.VoiceTblPtr       ; Restore Voice to music channel (x can be erased because we are stopping track read)        
94AC E648             (./Engine/Sound/Sm):01576 [5]     10528           ldb   VoiceIndex,u
94AE A641             (./Engine/Sound/Sm):01577 [5]     10533           lda   VoiceControl,u           ; read channel nb  
94B0 8B30             (./Engine/Sound/Sm):01578 [2]     10535           adda  #$30
94B2 97FC             (./Engine/Sound/Sm):01579 [4]     10539           sta   <YM2413_A0
94B4 58               (./Engine/Sound/Sm):01580 [2]     10541           aslb
94B5 EC85             (./Engine/Sound/Sm):01581 [6]     10547           ldd   b,x
94B7 A7C81F           (./Engine/Sound/Sm):01582 [5]     10552           sta   InstrAndVolume,u        
94BA E7C81E           (./Engine/Sound/Sm):01583 [5]     10557           stb   InstrTranspose,u
94BD E647             (./Engine/Sound/Sm):01584 [5]     10562           ldb   Volume,u                 ; apply current track attenuation to voice
94BF 54               (./Engine/Sound/Sm):01585 [2]     10564           lsrb                           ; volume attenuation is unsigned
94C0 54               (./Engine/Sound/Sm):01586 [2]     10566           lsrb
94C1 54               (./Engine/Sound/Sm):01587 [2]     10568           lsrb
94C2 F794CD           (./Engine/Sound/Sm):01588 [5]     10573           stb   @dyn1+1
94C5 1F89             (./Engine/Sound/Sm):01589 [6]     10579           tfr   a,b
94C7 CA0F             (./Engine/Sound/Sm):01590 [2]     10581           orb   #$0F                     ; set maximum attenuation for compare        
94C9 F794CF           (./Engine/Sound/Sm):01591 [5]     10586           stb   @dyn2+1
94CC 8B00             (./Engine/Sound/Sm):01592 [2]     10588   @dyn1   adda  #0                       ; (dynamic) add global volume attenuation
94CE 8100             (./Engine/Sound/Sm):01593 [2]     10590   @dyn2   cmpa  #0                       ; (dynamic) test if overflow of attenuation value
94D0 2502             (./Engine/Sound/Sm):01594 [3]     10593           blo   @write                   ; attenuation < F and no overflow
94D2 1F98             (./Engine/Sound/Sm):01595 [6]     10599           tfr   b,a                      ; set maximum attenuation (F)
94D4 97FD             (./Engine/Sound/Sm):01596 [4]     10603   @write  sta   <YM2413_D0   
94D6 B68949           (./Engine/Sound/Sm):01597 [5]     10608           lda   SoundPage
                      (./Engine/Sound/Sm):01598                         _SetCartPageA  
                      (    _SetCartPageA):00001                  IFDEF T2
94D9 BD7324           (    _SetCartPageA):00002 [8]     10616           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
94DC 3540             (./Engine/Sound/Sm):01599 [7]     10623           puls  u                        ; removing return address from stack; will not return to coord flag loop
94DE 39               (./Engine/Sound/Sm):01600 [5]     10628           rts                   
94DF CE9241           (./Engine/Sound/Sm):01601 [3]     10631   @psgsfx ldu   #MusicTrackOffs
94E2 44               (./Engine/Sound/Sm):01602 [2]     10633           lsra                           ; this is a psg fx track
94E3 44               (./Engine/Sound/Sm):01603 [2]     10635           lsra
94E4 44               (./Engine/Sound/Sm):01604 [2]     10637           lsra
94E5 44               (./Engine/Sound/Sm):01605 [2]     10639           lsra                           ; transform track ref to an index: $80,$A0,$C0,$E0 => 8,10,12,14
94E6 EEC6             (./Engine/Sound/Sm):01606 [6]     10645           ldu   a,u                      ; U ptr to same FM track ID than SFX but for Music, Y still for FM SFX Track
94E8 A6C4             (./Engine/Sound/Sm):01607 [4]     10649           lda   PlaybackControl,u
94EA 84FB             (./Engine/Sound/Sm):01608 [2]     10651           anda  #$FB                     ; Clear SFX is overriding this track from playback control
94EC 8A02             (./Engine/Sound/Sm):01609 [2]     10653           ora   #$02                     ; Set bit 1 (track is at rest)
94EE A7C4             (./Engine/Sound/Sm):01610 [4]     10657           sta   PlaybackControl,u
94F0 A641             (./Engine/Sound/Sm):01611 [5]     10662           lda   VoiceControl,u           ; read channel nb
94F2 81E0             (./Engine/Sound/Sm):01612 [2]     10664           cmpa  #$E0                     ; Is this a PSG 3 noise (not tone) track?
94F4 2605             (./Engine/Sound/Sm):01613 [3]     10667           bne   @c                       ; If it isn't, don't do next part (non-PSG Noise doesn't restore)
94F6 A6C81B           (./Engine/Sound/Sm):01614 [5]     10672           lda   PSGNoise,u               ; Get PSG noise setting
94F9 97FF             (./Engine/Sound/Sm):01615 [4]     10676           sta   <PSG                     ; Write it to PSG
94FB 3540             (./Engine/Sound/Sm):01616 [7]     10683   @c      puls  u                        ; removing return address from stack; will not return to coord flag loop                        
94FD 39               (./Engine/Sound/Sm):01617 [5]     10688           rts
                      (./Engine/Sound/Sm):01618                 
                      (./Engine/Sound/Sm):01619                 ; (via Saxman's doc): Change current PSG noise to xx (For noise channel, E0-E7)
                      (./Engine/Sound/Sm):01620                 ;
94FE                  (./Engine/Sound/Sm):01621                 cfSetPSGNoise
94FE 86E0             (./Engine/Sound/Sm):01622 [2]     10690           lda   #$E0
9500 A721             (./Engine/Sound/Sm):01623 [5]     10695           sta   VoiceControl,y
9502 A680             (./Engine/Sound/Sm):01624 [6]     10701           lda   ,x+
9504 A7A81B           (./Engine/Sound/Sm):01625 [5]     10706           sta   PSGNoise,y
9507 E6A4             (./Engine/Sound/Sm):01626 [4]     10710           ldb   PlaybackControl,y
9509 C504             (./Engine/Sound/Sm):01627 [2]     10712           bitb  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
950B 2602             (./Engine/Sound/Sm):01628 [3]     10715           bne   @rts        
950D 97FF             (./Engine/Sound/Sm):01629 [4]     10719           sta   <PSG
950F 39               (./Engine/Sound/Sm):01630 [5]     10724   @rts    rts        
                      (./Engine/Sound/Sm):01631                 
9510                  (./Engine/Sound/Sm):01632                 cfDisableModulation
9510 A6A4             (./Engine/Sound/Sm):01633 [4]     10728           lda   PlaybackControl,y
9512 84F7             (./Engine/Sound/Sm):01634 [2]     10730           anda  #$F7
9514 A7A4             (./Engine/Sound/Sm):01635 [4]     10734           sta   PlaybackControl,y        ; Clear bit 3 (08h) of "playback control" byte (modulation off)        
9516 39               (./Engine/Sound/Sm):01636 [5]     10739           rts  
                      (./Engine/Sound/Sm):01637                 
                      (./Engine/Sound/Sm):01638                 ; (via Saxman's doc): Change current PSG tone to xx
                      (./Engine/Sound/Sm):01639                 ;
9517                  (./Engine/Sound/Sm):01640                 cfSetPSGTone
9517 A680             (./Engine/Sound/Sm):01641 [6]     10745           lda   ,x+
9519 A728             (./Engine/Sound/Sm):01642 [5]     10750           sta   VoiceIndex,y
951B 39               (./Engine/Sound/Sm):01643 [5]     10755           rts         
                      (./Engine/Sound/Sm):01644                 
                      (./Engine/Sound/Sm):01645                 ; (via Saxman's doc):  $F6zzzz - jump to position
                      (./Engine/Sound/Sm):01646                 ;    * zzzz - position to loop back to (negative offset)
                      (./Engine/Sound/Sm):01647                 ;
951C                  (./Engine/Sound/Sm):01648                 cfJumpTo
951C EC84             (./Engine/Sound/Sm):01649 [5]     10760           ldd   ,x
951E 308B             (./Engine/Sound/Sm):01650 [8]     10768           leax  d,x
9520 39               (./Engine/Sound/Sm):01651 [5]     10773           rts             
                      (./Engine/Sound/Sm):01652                 
                      (./Engine/Sound/Sm):01653                 ; (via Saxman's doc): $F7xxyyzzzz - repeat section of music
                      (./Engine/Sound/Sm):01654                 ;    * xx - loop index, for loops within loops without confusing the engine.
                      (./Engine/Sound/Sm):01655                 ;          o EXAMPLE: Some notes, then a section that is looped twice, then some more notes, and finally the whole thing is looped three times.
                      (./Engine/Sound/Sm):01656                 ;            The "inner" loop (the section that is looped twice) would have an xx of 01, looking something along the lines of F70102zzzz, whereas the "outside" loop (the whole thing loop) would have an xx of 00, looking something like F70003zzzz.
                      (./Engine/Sound/Sm):01657                 ;    * yy - number of times to repeat
                      (./Engine/Sound/Sm):01658                 ;          o NOTE: This includes the initial encounter of the F7 flag, not number of times to repeat AFTER hitting the flag.
                      (./Engine/Sound/Sm):01659                 ;    * zzzz - position to loop back to (negative offset)
                      (./Engine/Sound/Sm):01660                 ;
9521                  (./Engine/Sound/Sm):01661                 cfRepeatAtPos
9521 EC81             (./Engine/Sound/Sm):01662 [8]     10781           ldd   ,x++                     ; Loop index is in 'a'
9523 8B20             (./Engine/Sound/Sm):01663 [2]     10783           adda  #LoopCounters            ; Add to make loop index offset
9525 33A6             (./Engine/Sound/Sm):01664 [5]     10788           leau  a,y
9527 6DC4             (./Engine/Sound/Sm):01665 [6]     10794           tst   ,u
9529 2602             (./Engine/Sound/Sm):01666 [3]     10797           bne   @a
952B E7C4             (./Engine/Sound/Sm):01667 [4]     10801           stb   ,u                       ; Otherwise, set it to the new number of repeats  
952D 6AC4             (./Engine/Sound/Sm):01668 [6]     10807   @a      dec   ,u                       ; One less loop
952F 2705             (./Engine/Sound/Sm):01669 [3]     10810           beq   @b                       ; If counted to zero, skip the rest of this (hence start loop count of 1 terminates the loop without ever looping)
9531 EC84             (./Engine/Sound/Sm):01670 [5]     10815           ldd   ,x
9533 308B             (./Engine/Sound/Sm):01671 [8]     10823           leax  d,x                      ; loop back
9535 39               (./Engine/Sound/Sm):01672 [5]     10828           rts
9536 3002             (./Engine/Sound/Sm):01673 [5]     10833   @b      leax  2,x
9538 39               (./Engine/Sound/Sm):01674 [5]     10838           rts        
                      (./Engine/Sound/Sm):01675                 
                      (./Engine/Sound/Sm):01676                 ; (via Saxman's doc): jump to position yyyy (keep previous position in memory for returning)
9539                  (./Engine/Sound/Sm):01677                 cfJumpToGosub
9539 A62A             (./Engine/Sound/Sm):01678 [5]     10843           lda   StackPointer,y
953B 8002             (./Engine/Sound/Sm):01679 [2]     10845           suba  #2
953D A72A             (./Engine/Sound/Sm):01680 [5]     10850           sta   StackPointer,y           ; move stack backward
953F 3302             (./Engine/Sound/Sm):01681 [5]     10855           leau  2,x                      ; move x to return address
9541 EFA6             (./Engine/Sound/Sm):01682 [6]     10861           stu   a,y                      ; store return address to stack
9543 EC84             (./Engine/Sound/Sm):01683 [5]     10866           ldd   ,x                       ; read sub address
9545 308B             (./Engine/Sound/Sm):01684 [8]     10874           leax  d,x                      ; gosub
9547 39               (./Engine/Sound/Sm):01685 [5]     10879           rts        
                      (./Engine/Sound/Sm):01686                 
9548                  (./Engine/Sound/Sm):01687                 cfSkip1
9548 3001             (./Engine/Sound/Sm):01688 [5]     10884           leax  1,x
954A                  (./Engine/Sound/Sm):01689                 cfNop 
954A 39               (./Engine/Sound/Sm):01690 [5]     10889           rts                                                 
                      (./Engine/Sound/Sm):01691                 
                      (./Engine/Sound/Sm):01692                 * YM2413 Instrument presets
                      (./Engine/Sound/Sm):01693                 * -------------------------
                      (./Engine/Sound/Sm):01694                 *
                      (./Engine/Sound/Sm):01695                 * /* Order of array = { modulator, carrier } */
                      (./Engine/Sound/Sm):01696                 * typedef struct {
                      (./Engine/Sound/Sm):01697                 *     Bit8u tl;
                      (./Engine/Sound/Sm):01698                 *     Bit8u dc;
                      (./Engine/Sound/Sm):01699                 *     Bit8u dm;
                      (./Engine/Sound/Sm):01700                 *     Bit8u fb;
                      (./Engine/Sound/Sm):01701                 *     Bit8u am[2];
                      (./Engine/Sound/Sm):01702                 *     Bit8u vib[2];
                      (./Engine/Sound/Sm):01703                 *     Bit8u et[2];
                      (./Engine/Sound/Sm):01704                 *     Bit8u ksr[2];
                      (./Engine/Sound/Sm):01705                 *     Bit8u multi[2];
                      (./Engine/Sound/Sm):01706                 *     Bit8u ksl[2];
                      (./Engine/Sound/Sm):01707                 *     Bit8u ar[2];
                      (./Engine/Sound/Sm):01708                 *     Bit8u dr[2];
                      (./Engine/Sound/Sm):01709                 *     Bit8u sl[2];
                      (./Engine/Sound/Sm):01710                 *     Bit8u rr[2];
                      (./Engine/Sound/Sm):01711                 * } opll_patch_t;
                      (./Engine/Sound/Sm):01712                 
                      (./Engine/Sound/Sm):01713                 * static const opll_patch_t patch_ds1001[opll_patch_max] = {
                      (./Engine/Sound/Sm):01714                 *     { 0x05, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0e, 0x08 },{ 0x08, 0x01 },{ 0x04, 0x02 },{ 0x02, 0x07 } }, * 1 : Violin
                      (./Engine/Sound/Sm):01715                 *     { 0x14, 0x00, 0x01, 0x05,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0d, 0x0f },{ 0x08, 0x06 },{ 0x02, 0x01 },{ 0x03, 0x02 } }, * 2 : Guitar
                      (./Engine/Sound/Sm):01716                 *     { 0x08, 0x00, 0x01, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x0f, 0x0b },{ 0x0a, 0x02 },{ 0x02, 0x01 },{ 0x00, 0x02 } }, * 3 : Piano
                      (./Engine/Sound/Sm):01717                 *     { 0x0c, 0x00, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x06 },{ 0x08, 0x04 },{ 0x06, 0x02 },{ 0x01, 0x07 } }, * 4 : Flute
                      (./Engine/Sound/Sm):01718                 *     { 0x1e, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x02, 0x01 },{ 0x00, 0x00 },{ 0x0e, 0x07 },{ 0x01, 0x06 },{ 0x00, 0x02 },{ 0x01, 0x08 } }, * 5 : Clarinet
                      (./Engine/Sound/Sm):01719                 *     { 0x06, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x02, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x0e },{ 0x03, 0x02 },{ 0x0f, 0x0f },{ 0x04, 0x04 } }, * 6 : Oboe
                      (./Engine/Sound/Sm):01720                 *     { 0x1d, 0x00, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x08, 0x08 },{ 0x02, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x07 } }, * 7 : Trumpet
                      (./Engine/Sound/Sm):01721                 *     { 0x22, 0x01, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x07 },{ 0x02, 0x02 },{ 0x00, 0x01 },{ 0x01, 0x07 } }, * 8 : Organ
                      (./Engine/Sound/Sm):01722                 *     { 0x25, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x05, 0x01 },{ 0x00, 0x00 },{ 0x04, 0x07 },{ 0x00, 0x03 },{ 0x07, 0x00 },{ 0x02, 0x01 } }, * 9 : Horn
                      (./Engine/Sound/Sm):01723                 *     { 0x0f, 0x00, 0x01, 0x07,{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x00 },{ 0x05, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x0a },{ 0x08, 0x05 },{ 0x05, 0x00 },{ 0x01, 0x02 } }, * A : Synthesizer
                      (./Engine/Sound/Sm):01724                 *     { 0x24, 0x00, 0x00, 0x07,{ 0x00, 0x01 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x07, 0x01 },{ 0x00, 0x00 },{ 0x0f, 0x0f },{ 0x08, 0x08 },{ 0x02, 0x01 },{ 0x02, 0x02 } }, * B : Harpsichord
                      (./Engine/Sound/Sm):01725                 *     { 0x11, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x03 },{ 0x00, 0x00 },{ 0x06, 0x07 },{ 0x05, 0x04 },{ 0x01, 0x01 },{ 0x08, 0x06 } }, * C : Vibraphone
                      (./Engine/Sound/Sm):01726                 *     { 0x13, 0x00, 0x00, 0x05,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x02 },{ 0x03, 0x00 },{ 0x0c, 0x09 },{ 0x09, 0x05 },{ 0x00, 0x00 },{ 0x03, 0x02 } }, * D : Synthesizer Bass
                      (./Engine/Sound/Sm):01727                 *     { 0x0c, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x03 },{ 0x00, 0x00 },{ 0x09, 0x0c },{ 0x04, 0x00 },{ 0x03, 0x0f },{ 0x03, 0x06 } }, * E : Acoustic Bass
                      (./Engine/Sound/Sm):01728                 *     { 0x0d, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x01 },{ 0x01, 0x02 },{ 0x00, 0x00 },{ 0x0c, 0x0d },{ 0x01, 0x05 },{ 0x05, 0x00 },{ 0x06, 0x06 } }, * F : Electric Guitar
                      (./Engine/Sound/Sm):01729                 *     /* Rhythm Patches: rows 1 and 4 are bass drum, 2 and 5 are Snare Drum & Hi-Hat, 3 and 6 are Tom and Top Cymbal */
                      (./Engine/Sound/Sm):01730                 *     { 0x18, 0x00, 0x01, 0x07,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x0d, 0x00 },{ 0x0f, 0x00 },{ 0x06, 0x00 },{ 0x0a, 0x00 } },
                      (./Engine/Sound/Sm):01731                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x0c, 0x00 },{ 0x08, 0x00 },{ 0x0a, 0x00 },{ 0x07, 0x00 } },
                      (./Engine/Sound/Sm):01732                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x05, 0x00 },{ 0x00, 0x00 },{ 0x0f, 0x00 },{ 0x08, 0x00 },{ 0x05, 0x00 },{ 0x09, 0x00 } },
                      (./Engine/Sound/Sm):01733                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0f },{ 0x00, 0x08 },{ 0x00, 0x06 },{ 0x00, 0x0d } },
                      (./Engine/Sound/Sm):01734                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0d },{ 0x00, 0x08 },{ 0x00, 0x06 },{ 0x00, 0x08 } },
                      (./Engine/Sound/Sm):01735                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0a },{ 0x00, 0x0a },{ 0x00, 0x05 },{ 0x00, 0x05 } }
                      (./Engine/Sound/Sm):01736                 * };             
                      (C:\Users\bhrou\gi):00066                         INCLUDE "./Engine/Irq/IrqSmpsRaster.asm"
                      (./Engine/Irq/IrqS):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Irq/IrqS):00002                 * IrqSmpsRaster/IrqSmps
                      (./Engine/Irq/IrqS):00003                 * ------
                      (./Engine/Irq/IrqS):00004                 * IRQ Subroutine to play sound with SN76489/YM2413 and render some Raster lines
                      (./Engine/Irq/IrqS):00005                 *
                      (./Engine/Irq/IrqS):00006                 * input REG : [dp] with value E7 (from Monitor ROM)
                      (./Engine/Irq/IrqS):00007                 * reset REG : none
                      (./Engine/Irq/IrqS):00008                 *
                      (./Engine/Irq/IrqS):00009                 * IrqOn
                      (./Engine/Irq/IrqS):00010                 * reset REG : [a]
                      (./Engine/Irq/IrqS):00011                 *
                      (./Engine/Irq/IrqS):00012                 * IrqOff
                      (./Engine/Irq/IrqS):00013                 * reset REG : [a]
                      (./Engine/Irq/IrqS):00014                 *
                      (./Engine/Irq/IrqS):00015                 * IrqSync
                      (./Engine/Irq/IrqS):00016                 * input REG : [a] screen line (0-199)
                      (./Engine/Irq/IrqS):00017                 *             [x] timer value
                      (./Engine/Irq/IrqS):00018                 * reset REG : [d]
                      (./Engine/Irq/IrqS):00019                 *
                      (./Engine/Irq/IrqS):00020                 * IrqSync
                      (./Engine/Irq/IrqS):00021                 * reset REG : [d]
                      (./Engine/Irq/IrqS):00022                 * ---------------------------------------------------------------------------
                      (./Engine/Irq/IrqS):00023                        
     6027             (./Engine/Irq/IrqS):00024                 irq_routine       equ $6027 
     E7C5             (./Engine/Irq/IrqS):00025                 irq_timer_ctrl    equ $E7C5 
     E7C6             (./Engine/Irq/IrqS):00026                 irq_timer         equ $E7C6 
     4DFF             (./Engine/Irq/IrqS):00027                 irq_one_frame     equ 312*64-1               ; one frame timer (lines*cycles_per_lines-1), timer launch at -1
954B 0000             (./Engine/Irq/IrqS):00028                 Irq_Raster_Page   fdb $00 
954D 0000             (./Engine/Irq/IrqS):00029                 Irq_Raster_Start  fdb $0000 
954F 0000             (./Engine/Irq/IrqS):00030                 Irq_Raster_End    fdb $0000 
                      (./Engine/Irq/IrqS):00031                        
9551                  (./Engine/Irq/IrqS):00032                 IrqOn         
9551 B66019           (./Engine/Irq/IrqS):00033 [5]     10894           lda   $6019                           
9554 8A20             (./Engine/Irq/IrqS):00034 [2]     10896           ora   #$20
9556 B76019           (./Engine/Irq/IrqS):00035 [5]     10901           sta   $6019                                   ; STATUS register
9559 1CEF             (./Engine/Irq/IrqS):00036 [3]     10904           andcc #$EF                                    ; tell 6809 to activate irq
955B 39               (./Engine/Irq/IrqS):00037 [5]     10909           rts
                      (./Engine/Irq/IrqS):00038                         
955C                  (./Engine/Irq/IrqS):00039                 IrqOff 
955C B66019           (./Engine/Irq/IrqS):00040 [5]     10914           lda   $6019                           
955F 84DF             (./Engine/Irq/IrqS):00041 [2]     10916           anda  #$DF
9561 B76019           (./Engine/Irq/IrqS):00042 [5]     10921           sta   $6019                                   ; STATUS register
9564 1A10             (./Engine/Irq/IrqS):00043 [3]     10924           orcc  #$10                                    ; tell 6809 to activate irq
9566 39               (./Engine/Irq/IrqS):00044 [5]     10929           rts
                      (./Engine/Irq/IrqS):00045                 
9567                  (./Engine/Irq/IrqS):00046                 IrqSync 
9567 C642             (./Engine/Irq/IrqS):00047 [2]     10931           ldb   #$42
9569 F7E7C5           (./Engine/Irq/IrqS):00048 [5]     10936           stb   irq_timer_ctrl
                      (./Engine/Irq/IrqS):00049                         
956C C608             (./Engine/Irq/IrqS):00050 [2]     10938           ldb   #8                                      ; ligne * 64 (cycles par ligne) / 8 (nb cycles boucle tempo)
956E 3D               (./Engine/Irq/IrqS):00051 [11]    10949           mul
956F 1F02             (./Engine/Irq/IrqS):00052 [6]     10955           tfr   d,y
9571 31A8E0           (./Engine/Irq/IrqS):00053 [5]     10960           leay  -32,y                                   ; manual adjustment
                      (./Engine/Irq/IrqS):00054                 
9574                  (./Engine/Irq/IrqS):00055                 IrqSync_1
9574 7DE7E7           (./Engine/Irq/IrqS):00056 [7]     10967           tst   $E7E7                                   ;
9577 2BFB             (./Engine/Irq/IrqS):00057 [3]     10970           bmi   IrqSync_1                               ; while spot is in a visible screen line        
9579                  (./Engine/Irq/IrqS):00058                 IrqSync_2
9579 7DE7E7           (./Engine/Irq/IrqS):00059 [7]     10977           tst   $E7E7                                   ;
957C 2AFB             (./Engine/Irq/IrqS):00060 [3]     10980           bpl   IrqSync_2                               ; while spot is not in a visible screen line
957E                  (./Engine/Irq/IrqS):00061                 IrqSync_3
957E 313F             (./Engine/Irq/IrqS):00062 [5]     10985           leay  -1,y                                    ;
9580 26FC             (./Engine/Irq/IrqS):00063 [3]     10988           bne   IrqSync_3                               ; wait until desired line
                      (./Engine/Irq/IrqS):00064                        
9582 BFE7C6           (./Engine/Irq/IrqS):00065 [6]     10994           stx   irq_timer                               ; spot is at the end of desired line
9585 39               (./Engine/Irq/IrqS):00066 [5]     10999           rts                  
                      (./Engine/Irq/IrqS):00067                        
9586                  (./Engine/Irq/IrqS):00068                 IrqSmps 
                      (./Engine/Irq/IrqS):00069                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
9586 BD7380           (    _GetCartPageA):00002 [8]     11007           jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
9589 B795A5           (./Engine/Irq/IrqS):00070 [5]     11012           sta   IrqSmps_end+1                           ; backup data page
                      (./Engine/Irq/IrqS):00071                         
958C FC73E9           (./Engine/Irq/IrqS):00072 [6]     11018           ldd   Vint_runcount
958F C30001           (./Engine/Irq/IrqS):00073 [4]     11022           addd  #1
9592 FD73E9           (./Engine/Irq/IrqS):00074 [6]     11028           std   Vint_runcount
                      (./Engine/Irq/IrqS):00075                         
9595 10FF95A2         (./Engine/Irq/IrqS):00076 [7]     11035           sts   @a+2                                    ; backup system stack
9599 10CE95CC         (./Engine/Irq/IrqS):00077 [4]     11039           lds   #IRQSysStack                            ; set tmp system stack for IRQ 
959D BD8A8E           (./Engine/Irq/IrqS):00078 [8]     11047           jsr   MusicFrame
95A0 10CE0000         (./Engine/Irq/IrqS):00079 [4]     11051   @a      lds   #0                                      ; (dynamic) restore system stack   
                      (./Engine/Irq/IrqS):00080                         
95A4                  (./Engine/Irq/IrqS):00081                 IrqSmps_end        
95A4 8600             (./Engine/Irq/IrqS):00082 [2]     11053           lda   #$00                                    ; (dynamic)
                      (./Engine/Irq/IrqS):00083                         _SetCartPageA                                 ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
95A6 BD7324           (    _SetCartPageA):00002 [8]     11061           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
95A9 7EE830           (./Engine/Irq/IrqS):00084 [4]     11065           jmp   $E830                                   ; return to caller
                      (./Engine/Irq/IrqS):00085                 
                      (./Engine/Irq/IrqS):00086                 ; This space allow the use of system stack inside IRQ calls
                      (./Engine/Irq/IrqS):00087                 ; otherwise the writes in sys stack will erase data when S is in use
                      (./Engine/Irq/IrqS):00088                 ; (outside of IRQ) for another task than sys stack, ex: stack blast copy 
95AC 0000000000000000 (./Engine/Irq/IrqS):00089                               fill  0,32
     0000000000000000
     0000000000000000
     0000000000000000
95CC                  (./Engine/Irq/IrqS):00090                 IRQSysStack                           
                      (./Engine/Irq/IrqS):00091                        
95CC                  (./Engine/Irq/IrqS):00092                 IrqSmpsRaster 
                      (./Engine/Irq/IrqS):00093                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
95CC BD7380           (    _GetCartPageA):00002 [8]     11073           jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
95CF B7961E           (./Engine/Irq/IrqS):00094 [5]     11078           sta   IrqSmpsRaster_end+1                      ; backup data page
                      (./Engine/Irq/IrqS):00095                         
95D2 B6954B           (./Engine/Irq/IrqS):00096 [5]     11083           lda   Irq_Raster_Page
                      (./Engine/Irq/IrqS):00097                          _SetCartPageA                                ; load Raster data page
                      (    _SetCartPageA):00001                  IFDEF T2
95D5 BD7324           (    _SetCartPageA):00002 [8]     11091           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
95D8 BE954D           (./Engine/Irq/IrqS):00098 [6]     11097           ldx   Irq_Raster_Start
95DB 8620             (./Engine/Irq/IrqS):00099 [2]     11099           lda   #32        
95DD                  (./Engine/Irq/IrqS):00100                 IrqSmpsRaster_1      
95DD 95E7             (./Engine/Irq/IrqS):00101 [4]     11103           bita  <$E7
95DF 27FC             (./Engine/Irq/IrqS):00102 [3]     11106           beq   IrqSmpsRaster_1                          ; while spot is not in a visible screen col
95E1                  (./Engine/Irq/IrqS):00103                 IrqSmpsRaster_2        
95E1 95E7             (./Engine/Irq/IrqS):00104 [4]     11110           bita  <$E7 
95E3 26FC             (./Engine/Irq/IrqS):00105 [3]     11113           bne   IrqSmpsRaster_2                          ; while spot is in a visible screen col
                      (./Engine/Irq/IrqS):00106                                 
95E5 3D               (./Engine/Irq/IrqS):00107 [11]    11124           mul                                           ; tempo                
95E6 3D               (./Engine/Irq/IrqS):00108 [11]    11135           mul                                           ; tempo
95E7 12               (./Engine/Irq/IrqS):00109 [2]     11137           nop                
95E8                  (./Engine/Irq/IrqS):00110                 IrqSmpsRaster_render
95E8 1F89             (./Engine/Irq/IrqS):00111 [6]     11143           tfr   a,b                                     ; tempo
95EA 1F89             (./Engine/Irq/IrqS):00112 [6]     11149           tfr   a,b                                     ; tempo
95EC 1F89             (./Engine/Irq/IrqS):00113 [6]     11155           tfr   a,b                                     ; tempo        
95EE EC01             (./Engine/Irq/IrqS):00114 [6]     11161           ldd   1,x
95F0 FD95F8           (./Engine/Irq/IrqS):00115 [6]     11167           std   >*+8
95F3 A684             (./Engine/Irq/IrqS):00116 [4]     11171           lda   ,x        
95F5 97DB             (./Engine/Irq/IrqS):00117 [4]     11175           sta   <$DB
95F7 CC0000           (./Engine/Irq/IrqS):00118 [3]     11178           ldd   #$0000
95FA D7DA             (./Engine/Irq/IrqS):00119 [4]     11182           stb   <$DA 
95FC 97DA             (./Engine/Irq/IrqS):00120 [4]     11186           sta   <$DA
95FE 3003             (./Engine/Irq/IrqS):00121 [5]     11191           leax  3,x
9600 BC954F           (./Engine/Irq/IrqS):00122 [7]     11198           cmpx  Irq_Raster_End
9603 26E3             (./Engine/Irq/IrqS):00123 [3]     11201           bne   IrqSmpsRaster_render 
                      (./Engine/Irq/IrqS):00124                 
9605 FC73E9           (./Engine/Irq/IrqS):00125 [6]     11207           ldd   Vint_runcount
9608 C30001           (./Engine/Irq/IrqS):00126 [4]     11211           addd  #1
960B FD73E9           (./Engine/Irq/IrqS):00127 [6]     11217           std   Vint_runcount     
                      (./Engine/Irq/IrqS):00128                 
960E 10FF961B         (./Engine/Irq/IrqS):00129 [7]     11224           sts   @a+2                                    ; backup system stack
9612 10CE95CC         (./Engine/Irq/IrqS):00130 [4]     11228           lds   #IRQSysStack                            ; set tmp system stack for IRQ 
9616 BD8A8E           (./Engine/Irq/IrqS):00131 [8]     11236           jsr   MusicFrame
9619 10CE0000         (./Engine/Irq/IrqS):00132 [4]     11240   @a      lds   #0                                      ; (dynamic) restore system stack   
                      (./Engine/Irq/IrqS):00133                 
961D                  (./Engine/Irq/IrqS):00134                 IrqSmpsRaster_end        
961D 8600             (./Engine/Irq/IrqS):00135 [2]     11242           lda   #$00
                      (./Engine/Irq/IrqS):00136                         _SetCartPageA                                 ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
961F BD7324           (    _SetCartPageA):00002 [8]     11250           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
9622 7EE830           (./Engine/Irq/IrqS):00137 [4]     11254           jmp   $E830                                   ; return to caller 
                      (C:\Users\bhrou\gi):00067                         INCLUDE "./generated-code/TitleScreen/BuilderMainGenCode.asm"
                      (./generated-code/):00001                 * Generated Code
                      (./generated-code/):00002                 
9625                  (./generated-code/):00003                 Pal_Island
9625 410B             (./generated-code/):00004                         fdb   $410b
9627 0000             (./generated-code/):00005                         fdb   $0000
9629 100C             (./generated-code/):00006                         fdb   $100c
962B 6A02             (./generated-code/):00007                         fdb   $6a02
962D 2000             (./generated-code/):00008                         fdb   $2000
962F 4000             (./generated-code/):00009                         fdb   $4000
9631 4A01             (./generated-code/):00010                         fdb   $4a01
9633 2600             (./generated-code/):00011                         fdb   $2600
9635 BB0B             (./generated-code/):00012                         fdb   $bb0b
9637 7100             (./generated-code/):00013                         fdb   $7100
9639 A400             (./generated-code/):00014                         fdb   $a400
963B 420A             (./generated-code/):00015                         fdb   $420a
963D 000E             (./generated-code/):00016                         fdb   $000e
963F 740B             (./generated-code/):00017                         fdb   $740b
9641 2301             (./generated-code/):00018                         fdb   $2301
9643 0000             (./generated-code/):00019                         fdb   $0000
                      (./generated-code/):00020                 
9645                  (./generated-code/):00021                 Pal_SEGA
9645 FF0F             (./generated-code/):00022                         fdb   $ff0f
9647 4404             (./generated-code/):00023                         fdb   $4404
9649 1101             (./generated-code/):00024                         fdb   $1101
964B 0000             (./generated-code/):00025                         fdb   $0000
964D 0300             (./generated-code/):00026                         fdb   $0300
964F 0F00             (./generated-code/):00027                         fdb   $0f00
9651 5E03             (./generated-code/):00028                         fdb   $5e03
9653 2501             (./generated-code/):00029                         fdb   $2501
9655 B70B             (./generated-code/):00030                         fdb   $b70b
9657 740B             (./generated-code/):00031                         fdb   $740b
9659 410B             (./generated-code/):00032                         fdb   $410b
965B 100B             (./generated-code/):00033                         fdb   $100b
965D 110C             (./generated-code/):00034                         fdb   $110c
965F 0008             (./generated-code/):00035                         fdb   $0008
9661 100B             (./generated-code/):00036                         fdb   $100b
9663 100B             (./generated-code/):00037                         fdb   $100b
                      (./generated-code/):00038                 
9665                  (./generated-code/):00039                 Pal_TitleScreen
9665 FF0F             (./generated-code/):00040                         fdb   $ff0f
9667 0000             (./generated-code/):00041                         fdb   $0000
9669 0800             (./generated-code/):00042                         fdb   $0800
966B 0200             (./generated-code/):00043                         fdb   $0200
966D 5D03             (./generated-code/):00044                         fdb   $5d03
966F 1600             (./generated-code/):00045                         fdb   $1600
9671 4F00             (./generated-code/):00046                         fdb   $4f00
9673 2700             (./generated-code/):00047                         fdb   $2700
9675 FF00             (./generated-code/):00048                         fdb   $ff00
9677 F300             (./generated-code/):00049                         fdb   $f300
9679 F80F             (./generated-code/):00050                         fdb   $f80f
967B 640E             (./generated-code/):00051                         fdb   $640e
967D 2205             (./generated-code/):00052                         fdb   $2205
967F 000E             (./generated-code/):00053                         fdb   $000e
9681 0100             (./generated-code/):00054                         fdb   $0100
9683 0000             (./generated-code/):00055                         fdb   $0000
                      (./generated-code/):00056                 
9685                  (./generated-code/):00057                 Pal_SEGAMid
9685 FF0F             (./generated-code/):00058                         fdb   $ff0f
9687 4404             (./generated-code/):00059                         fdb   $4404
9689 1101             (./generated-code/):00060                         fdb   $1101
968B 0000             (./generated-code/):00061                         fdb   $0000
968D 0300             (./generated-code/):00062                         fdb   $0300
968F 0F00             (./generated-code/):00063                         fdb   $0f00
9691 5E03             (./generated-code/):00064                         fdb   $5e03
9693 2501             (./generated-code/):00065                         fdb   $2501
9695 B70B             (./generated-code/):00066                         fdb   $b70b
9697 740B             (./generated-code/):00067                         fdb   $740b
9699 410B             (./generated-code/):00068                         fdb   $410b
969B 100B             (./generated-code/):00069                         fdb   $100b
969D 110C             (./generated-code/):00070                         fdb   $110c
969F 0008             (./generated-code/):00071                         fdb   $0008
96A1 FF0F             (./generated-code/):00072                         fdb   $ff0f
96A3 100B             (./generated-code/):00073                         fdb   $100b
                      (./generated-code/):00074                 
96A5                  (./generated-code/):00075                 Pal_SonicAndTailsIn
96A5 0000             (./generated-code/):00076                         fdb   $0000
96A7 FF0F             (./generated-code/):00077                         fdb   $ff0f
96A9 0000             (./generated-code/):00078                         fdb   $0000
96AB 0000             (./generated-code/):00079                         fdb   $0000
96AD 0000             (./generated-code/):00080                         fdb   $0000
96AF 0000             (./generated-code/):00081                         fdb   $0000
96B1 0000             (./generated-code/):00082                         fdb   $0000
96B3 0000             (./generated-code/):00083                         fdb   $0000
96B5 0000             (./generated-code/):00084                         fdb   $0000
96B7 0000             (./generated-code/):00085                         fdb   $0000
96B9 0000             (./generated-code/):00086                         fdb   $0000
96BB 0000             (./generated-code/):00087                         fdb   $0000
96BD 0000             (./generated-code/):00088                         fdb   $0000
96BF 0000             (./generated-code/):00089                         fdb   $0000
96C1 FF0F             (./generated-code/):00090                         fdb   $ff0f
96C3 FF0F             (./generated-code/):00091                         fdb   $ff0f
                      (./generated-code/):00092                 
96C5                  (./generated-code/):00093                 Pal_SEGAEnd
96C5 FF0F             (./generated-code/):00094                         fdb   $ff0f
96C7 4404             (./generated-code/):00095                         fdb   $4404
96C9 1101             (./generated-code/):00096                         fdb   $1101
96CB 0000             (./generated-code/):00097                         fdb   $0000
96CD 0300             (./generated-code/):00098                         fdb   $0300
96CF 0F00             (./generated-code/):00099                         fdb   $0f00
96D1 5E03             (./generated-code/):00100                         fdb   $5e03
96D3 2501             (./generated-code/):00101                         fdb   $2501
96D5 B70B             (./generated-code/):00102                         fdb   $b70b
96D7 740B             (./generated-code/):00103                         fdb   $740b
96D9 410B             (./generated-code/):00104                         fdb   $410b
96DB 100B             (./generated-code/):00105                         fdb   $100b
96DD 110C             (./generated-code/):00106                         fdb   $110c
96DF 0008             (./generated-code/):00107                         fdb   $0008
96E1 FF0F             (./generated-code/):00108                         fdb   $ff0f
96E3 FF0F             (./generated-code/):00109                         fdb   $ff0f
                      (./generated-code/):00110                 
96E5                  (./generated-code/):00111                 Obj_Index_Page
96E5 00               (./generated-code/):00112                         fcb   $00
96E6 64               (./generated-code/):00113                         fcb   $64
96E7 64               (./generated-code/):00114                         fcb   $64
96E8 64               (./generated-code/):00115                         fcb   $64
96E9 64               (./generated-code/):00116                         fcb   $64
96EA 64               (./generated-code/):00117                         fcb   $64
96EB                  (./generated-code/):00118                 Obj_Index_Address
96EB 0000             (./generated-code/):00119                         fcb   $00,$00
96ED 12D7             (./generated-code/):00120                         fcb   $12,$D7
96EF 0D14             (./generated-code/):00121                         fcb   $0D,$14
96F1 0C62             (./generated-code/):00122                         fcb   $0C,$62
96F3 09B8             (./generated-code/):00123                         fcb   $09,$B8
96F5 0226             (./generated-code/):00124                         fcb   $02,$26
96F7                  (./generated-code/):00125                 Pcm_SEGA 
96F7 9F000030BA       (./generated-code/):00126                         fcb   $9F,$00,$00,$30,$BA
96FC 00               (./generated-code/):00127                         fcb   $00
96FD                  (./generated-code/):00128                 Smps_TitleScreen 
96FD 8800000196       (./generated-code/):00129                         fcb   $88,$00,$00,$01,$96
9702 00               (./generated-code/):00130                         fcb   $00
9703                  (./generated-code/):00131                 Smps_Sparkle 
9703 8003340349       (./generated-code/):00132                         fcb   $80,$03,$34,$03,$49
9708 00               (./generated-code/):00133                         fcb   $00
9709                  (./generated-code/):00134                 Img_Page_Index
9709 00               (./generated-code/):00135                         fcb   $00
970A 80               (./generated-code/):00136                         fcb   $80
970B 80               (./generated-code/):00137                         fcb   $80
970C 80               (./generated-code/):00138                         fcb   $80
970D 88               (./generated-code/):00139                         fcb   $88
970E 8C               (./generated-code/):00140                         fcb   $8C
970F                  (./generated-code/):00141                 Ani_Page_Index
970F 00               (./generated-code/):00142                         fcb   $00
9710 80               (./generated-code/):00143                         fcb   $80
9711 80               (./generated-code/):00144                         fcb   $80
9712 80               (./generated-code/):00145                         fcb   $80
9713 80               (./generated-code/):00146                         fcb   $80
9714 80               (./generated-code/):00147                         fcb   $80
9715                  (./generated-code/):00148                 Ani_Asd_Index
9715 0000             (./generated-code/):00149                         fdb   $0000
9717 0000             (./generated-code/):00150                         fdb   $0000
9719 0000             (./generated-code/):00151                         fdb   $0000
971B 0000             (./generated-code/):00152                         fdb   $0000
971D 079F             (./generated-code/):00153                         fdb   $079F
971F 0349             (./generated-code/):00154                         fdb   $0349
9721                  (./generated-code/):00155                 LoadAct
9721 C602             (./generated-code/):00156 [2]     11256           ldb   #$02                     * load page 2
9723 F7E7E5           (./generated-code/):00157 [5]     11261           stb   $E7E5                    * in data space ($A000-$DFFF)
9726 8E0000           (./generated-code/):00158 [3]     11264           ldx   #$0000                   * set Background solid color
9729 BD84B0           (./generated-code/):00159 [8]     11272           jsr   ClearDataMem
972C B6E7DD           (./generated-code/):00160 [5]     11277           lda   $E7DD                    * set border color
972F 84F0             (./generated-code/):00161 [2]     11279           anda  #$F0
9731 8B00             (./generated-code/):00162 [2]     11281           adda  #$00                     * color ref
9733 B7E7DD           (./generated-code/):00163 [5]     11286           sta   $E7DD
9736 840F             (./generated-code/):00164 [2]     11288           anda  #$0F
9738 8B80             (./generated-code/):00165 [2]     11290           adda  #$80
973A B773AC           (./generated-code/):00166 [5]     11295           sta   glb_screen_border_color+1    * maj WaitVBL
973D BD7392           (./generated-code/):00167 [8]     11303           jsr   WaitVBL
9740 C603             (./generated-code/):00168 [2]     11305           ldb   #$03                     * load page 3
9742 F7E7E5           (./generated-code/):00169 [5]     11310           stb   $E7E5                    * data space ($A000-$DFFF)
9745 8E0000           (./generated-code/):00170 [3]     11313           ldx   #$0000                   * set Background solid color
9748 BD84B0           (./generated-code/):00171 [8]     11321           jsr   ClearDataMem
974B CC9645           (./generated-code/):00172 [3]     11324           ldd   #Pal_SEGA
974E FD84EB           (./generated-code/):00173 [6]     11330           std   Cur_palette
9751 7F84EA           (./generated-code/):00174 [7]     11337           clr   Refresh_palette
9754 39               (./generated-code/):00175 [5]     11342           rts
