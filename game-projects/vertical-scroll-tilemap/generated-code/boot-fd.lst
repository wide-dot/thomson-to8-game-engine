                      (/home/robin/githu):00001                 INCLUDE "./generated-code/Game.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0112             (./generated-code/):00003         Build_RAMLoaderManager equ $0112
     0000             (./generated-code/):00004         GmID_scrollscreen equ 0
     0000             (./generated-code/):00005         gmboot equ 0
     0100             (./generated-code/):00006         Build_BootLastBlock equ $0100
                      (/home/robin/githu):00002                 INCLUDE "./generated-code/RAMLoaderManagerFd.glb"
     0008             (./generated-code/):00001         anim EQU $0008
     000E             (./generated-code/):00002         anim_flags EQU $000E
     000C             (./generated-code/):00003         anim_frame EQU $000C
     000D             (./generated-code/):00004         anim_frame_duration EQU $000D
     0001             (./generated-code/):00005         anim_link_mask EQU $0001
     000B             (./generated-code/):00006         buf_bgdata EQU $000B
     0007             (./generated-code/):00007         buf_erase_nb_cell EQU $0007
     0009             (./generated-code/):00008         buf_erase_routine EQU $0009
     0008             (./generated-code/):00009         buf_page_erase_routine EQU $0008
     0005             (./generated-code/):00010         buf_prev_mapping_frame EQU $0005
     0013             (./generated-code/):00011         buf_prev_render_flags EQU $0013
     000F             (./generated-code/):00012         buf_prev_x1_pixel EQU $000F
     0011             (./generated-code/):00013         buf_prev_x2_pixel EQU $0011
     000D             (./generated-code/):00014         buf_prev_x_pixel EQU $000D
     000F             (./generated-code/):00015         buf_prev_xy1_pixel EQU $000F
     0011             (./generated-code/):00016         buf_prev_xy2_pixel EQU $0011
     000D             (./generated-code/):00017         buf_prev_xy_pixel EQU $000D
     0010             (./generated-code/):00018         buf_prev_y1_pixel EQU $0010
     0012             (./generated-code/):00019         buf_prev_y2_pixel EQU $0012
     000E             (./generated-code/):00020         buf_prev_y_pixel EQU $000E
     0000             (./generated-code/):00021         buf_priority EQU $0000
     0003             (./generated-code/):00022         buf_priority_next_obj EQU $0003
     0001             (./generated-code/):00023         buf_priority_prev_obj EQU $0001
     0001             (./generated-code/):00024         CONSTANTS_ASM EQU $0001
     6049             (./generated-code/):00025         dk_drive EQU $6049
     604C             (./generated-code/):00026         dk_sector EQU $604C
     604A             (./generated-code/):00027         dk_track EQU $604A
     604B             (./generated-code/):00028         dk_track_lsb EQU $604B
     604F             (./generated-code/):00029         dk_write_location EQU $604F
     9F00             (./generated-code/):00030         dp EQU $9F00
     9FB3             (./generated-code/):00031         dp_engine EQU $9FB3
     9F97             (./generated-code/):00032         dp_extreg EQU $9F97
     0001             (./generated-code/):00033         draw_routine EQU $0001
     0006             (./generated-code/):00034         erase_nb_cell EQU $0006
     0004             (./generated-code/):00035         erase_routine EQU $0004
     0026             (./generated-code/):00036         ext_variables EQU $0026
     4145             (./generated-code/):00037         fill EQU $4145
     9FA9             (./generated-code/):00038         glb_a0 EQU $9FA9
     9FAA             (./generated-code/):00039         glb_a0_b EQU $9FAA
     9FAB             (./generated-code/):00040         glb_a1 EQU $9FAB
     9FAC             (./generated-code/):00041         glb_a1_b EQU $9FAC
     9FAD             (./generated-code/):00042         glb_a2 EQU $9FAD
     9FAE             (./generated-code/):00043         glb_a2_b EQU $9FAE
     9FAF             (./generated-code/):00044         glb_a3 EQU $9FAF
     9FB0             (./generated-code/):00045         glb_a3_b EQU $9FB0
     9FB1             (./generated-code/):00046         glb_a4 EQU $9FB1
     9FB2             (./generated-code/):00047         glb_a4_b EQU $9FB2
     9FD5             (./generated-code/):00048         glb_alphaTiles EQU $9FD5
     9FEC             (./generated-code/):00049         glb_camera_height EQU $9FEC
     9FD6             (./generated-code/):00050         glb_camera_move EQU $9FD6
     9FEA             (./generated-code/):00051         glb_camera_width EQU $9FEA
     9FDE             (./generated-code/):00052         glb_camera_x_max_pos EQU $9FDE
     9FE2             (./generated-code/):00053         glb_camera_x_min_pos EQU $9FE2
     9FDA             (./generated-code/):00054         glb_camera_x_offset EQU $9FDA
     9FE6             (./generated-code/):00055         glb_camera_x_pos EQU $9FE6
     9FE8             (./generated-code/):00056         glb_camera_x_pos_coarse EQU $9FE8
     9FE5             (./generated-code/):00057         glb_camera_x_sub EQU $9FE5
     9FDC             (./generated-code/):00058         glb_camera_y_max_pos EQU $9FDC
     9FE0             (./generated-code/):00059         glb_camera_y_min_pos EQU $9FE0
     9FD8             (./generated-code/):00060         glb_camera_y_offset EQU $9FD8
     9FE4             (./generated-code/):00061         glb_camera_y_pos EQU $9FE4
     9FE3             (./generated-code/):00062         glb_camera_y_sub EQU $9FE3
     9F97             (./generated-code/):00063         glb_d0 EQU $9F97
     9F98             (./generated-code/):00064         glb_d0_b EQU $9F98
     9F9A             (./generated-code/):00065         glb_d1 EQU $9F9A
     9F9B             (./generated-code/):00066         glb_d1_b EQU $9F9B
     9F9D             (./generated-code/):00067         glb_d2 EQU $9F9D
     9F9E             (./generated-code/):00068         glb_d2_b EQU $9F9E
     9FA0             (./generated-code/):00069         glb_d3 EQU $9FA0
     9FA1             (./generated-code/):00070         glb_d3_b EQU $9FA1
     9FA3             (./generated-code/):00071         glb_d4 EQU $9FA3
     9FA4             (./generated-code/):00072         glb_d4_b EQU $9FA4
     9FA5             (./generated-code/):00073         glb_d5 EQU $9FA5
     9FA6             (./generated-code/):00074         glb_d5_b EQU $9FA6
     9FA7             (./generated-code/):00075         glb_d6 EQU $9FA7
     9FA8             (./generated-code/):00076         glb_d6_b EQU $9FA8
     9FD7             (./generated-code/):00077         glb_force_sprite_refresh EQU $9FD7
     9FD1             (./generated-code/):00078         glb_Page EQU $9FD1
     9FF4             (./generated-code/):00079         glb_ram_end EQU $9FF4
     9FF2             (./generated-code/):00080         glb_register_s EQU $9FF2
     9FF0             (./generated-code/):00081         glb_screen_location_1 EQU $9FF0
     9FEE             (./generated-code/):00082         glb_screen_location_2 EQU $9FEE
     9F00             (./generated-code/):00083         glb_system_stack EQU $9F00
     9FD3             (./generated-code/):00084         glb_timer EQU $9FD3
     9FD2             (./generated-code/):00085         glb_timer_frame EQU $9FD2
     9FD3             (./generated-code/):00086         glb_timer_minute EQU $9FD3
     9FD4             (./generated-code/):00087         glb_timer_second EQU $9FD4
     01CE             (./generated-code/):00088         Gm_Index EQU $01CE
     01AA             (./generated-code/):00089         gm_scrollscreen EQU $01AA
     0000             (./generated-code/):00090         id EQU $0000
     0006             (./generated-code/):00091         image_center_offset EQU $0006
     0010             (./generated-code/):00092         image_set EQU $0010
     0004             (./generated-code/):00093         image_subset_x1_offset EQU $0004
     0005             (./generated-code/):00094         image_subset_y1_offset EQU $0005
     0004             (./generated-code/):00095         image_x_size EQU $0004
     0005             (./generated-code/):00096         image_y_size EQU $0005
     0008             (./generated-code/):00097         nb_priority_levels EQU $0008
     0000             (./generated-code/):00098         next_object EQU $0000
     0026             (./generated-code/):00099         object_base_size EQU $0026
     0000             (./generated-code/):00100         object_rsvd EQU $0000
     003B             (./generated-code/):00101         object_rsvd_size EQU $003B
     0000             (./generated-code/):00102         object_size EQU $0000
     0000             (./generated-code/):00103         page_draw_routine EQU $0000
     0003             (./generated-code/):00104         page_erase_routine EQU $0003
     000A             (./generated-code/):00105         prev_anim EQU $000A
     0007             (./generated-code/):00106         priority EQU $0007
     40C1             (./generated-code/):00107         RAMLoader EQU $40C1
     40D0             (./generated-code/):00108         RAMLoader_continue EQU $40D0
     005F             (./generated-code/):00109         RAMLoaderBin EQU $005F
     0000             (./generated-code/):00110         RAMLoaderManager EQU $0000
     0002             (./generated-code/):00111         render_flags EQU $0002
     0080             (./generated-code/):00112         render_hide_mask EQU $0080
     0004             (./generated-code/):00113         render_overlay_mask EQU $0004
     0008             (./generated-code/):00114         render_playfieldcoord_mask EQU $0008
     0040             (./generated-code/):00115         render_subobjects_mask EQU $0040
     0020             (./generated-code/):00116         render_todelete_mask EQU $0020
     0010             (./generated-code/):00117         render_xloop_mask EQU $0010
     0001             (./generated-code/):00118         render_xmirror_mask EQU $0001
     0002             (./generated-code/):00119         render_ymirror_mask EQU $0002
     40DF             (./generated-code/):00120         RL_Continue EQU $40DF
     4103             (./generated-code/):00121         RL_DKCO EQU $4103
     411E             (./generated-code/):00122         RL_DKContinue EQU $411E
     4122             (./generated-code/):00123         RL_DKDernierBloc EQU $4122
     4131             (./generated-code/):00124         RL_NegOffset EQU $4131
     4135             (./generated-code/):00125         RL_Page EQU $4135
     4149             (./generated-code/):00126         RL_RAM_index EQU $4149
     004E             (./generated-code/):00127         RLM_CopyCode EQU $004E
     0058             (./generated-code/):00128         RLM_CopyCode_restore_s EQU $0058
     0042             (./generated-code/):00129         RLM_CopyData EQU $0042
     0036             (./generated-code/):00130         RLM_SetPage EQU $0036
     0013             (./generated-code/):00131         RLM_SkipCommon EQU $0013
     0022             (./generated-code/):00132         routine EQU $0022
     0025             (./generated-code/):00133         routine_quaternary EQU $0025
     0023             (./generated-code/):00134         routine_secondary EQU $0023
     0024             (./generated-code/):00135         routine_tertiary EQU $0024
     0000             (./generated-code/):00136         rsv_bgdata_0 EQU $0000
     0000             (./generated-code/):00137         rsv_bgdata_1 EQU $0000
     0000             (./generated-code/):00138         rsv_buffer_0 EQU $0000
     0000             (./generated-code/):00139         rsv_buffer_1 EQU $0000
     0000             (./generated-code/):00140         rsv_draw_routine EQU $0000
     0000             (./generated-code/):00141         rsv_erase_nb_cell EQU $0000
     0000             (./generated-code/):00142         rsv_erase_routine EQU $0000
     0000             (./generated-code/):00143         rsv_image_center_offset EQU $0000
     0000             (./generated-code/):00144         rsv_image_subset EQU $0000
     0000             (./generated-code/):00145         rsv_mapping_frame EQU $0000
     0000             (./generated-code/):00146         rsv_page_draw_routine EQU $0000
     0000             (./generated-code/):00147         rsv_page_erase_routine EQU $0000
     0000             (./generated-code/):00148         rsv_prev_anim EQU $0000
     0000             (./generated-code/):00149         rsv_prev_erase_nb_cell_0 EQU $0000
     0000             (./generated-code/):00150         rsv_prev_erase_nb_cell_1 EQU $0000
     0000             (./generated-code/):00151         rsv_prev_erase_routine_0 EQU $0000
     0000             (./generated-code/):00152         rsv_prev_erase_routine_1 EQU $0000
     0000             (./generated-code/):00153         rsv_prev_mapping_frame_0 EQU $0000
     0000             (./generated-code/):00154         rsv_prev_mapping_frame_1 EQU $0000
     0000             (./generated-code/):00155         rsv_prev_page_erase_routine_0 EQU $0000
     0000             (./generated-code/):00156         rsv_prev_page_erase_routine_1 EQU $0000
     0000             (./generated-code/):00157         rsv_prev_render_flags_0 EQU $0000
     0000             (./generated-code/):00158         rsv_prev_render_flags_1 EQU $0000
     0080             (./generated-code/):00159         rsv_prev_render_onscreen_mask EQU $0080
     0001             (./generated-code/):00160         rsv_prev_render_overlay_mask EQU $0001
     0000             (./generated-code/):00161         rsv_prev_x1_pixel_0 EQU $0000
     0000             (./generated-code/):00162         rsv_prev_x1_pixel_1 EQU $0000
     0000             (./generated-code/):00163         rsv_prev_x2_pixel_0 EQU $0000
     0000             (./generated-code/):00164         rsv_prev_x2_pixel_1 EQU $0000
     0000             (./generated-code/):00165         rsv_prev_x_pixel_0 EQU $0000
     0000             (./generated-code/):00166         rsv_prev_x_pixel_1 EQU $0000
     0000             (./generated-code/):00167         rsv_prev_xy1_pixel_0 EQU $0000
     0000             (./generated-code/):00168         rsv_prev_xy1_pixel_1 EQU $0000
     0000             (./generated-code/):00169         rsv_prev_xy2_pixel_0 EQU $0000
     0000             (./generated-code/):00170         rsv_prev_xy2_pixel_1 EQU $0000
     0000             (./generated-code/):00171         rsv_prev_xy_pixel_0 EQU $0000
     0000             (./generated-code/):00172         rsv_prev_xy_pixel_1 EQU $0000
     0000             (./generated-code/):00173         rsv_prev_y1_pixel_0 EQU $0000
     0000             (./generated-code/):00174         rsv_prev_y1_pixel_1 EQU $0000
     0000             (./generated-code/):00175         rsv_prev_y2_pixel_0 EQU $0000
     0000             (./generated-code/):00176         rsv_prev_y2_pixel_1 EQU $0000
     0000             (./generated-code/):00177         rsv_prev_y_pixel_0 EQU $0000
     0000             (./generated-code/):00178         rsv_prev_y_pixel_1 EQU $0000
     0000             (./generated-code/):00179         rsv_priority_0 EQU $0000
     0000             (./generated-code/):00180         rsv_priority_1 EQU $0000
     0000             (./generated-code/):00181         rsv_priority_next_obj_0 EQU $0000
     0000             (./generated-code/):00182         rsv_priority_next_obj_1 EQU $0000
     0000             (./generated-code/):00183         rsv_priority_prev_obj_0 EQU $0000
     0000             (./generated-code/):00184         rsv_priority_prev_obj_1 EQU $0000
     0001             (./generated-code/):00185         rsv_render_checkrefresh_mask EQU $0001
     0004             (./generated-code/):00186         rsv_render_displaysprite_mask EQU $0004
     0002             (./generated-code/):00187         rsv_render_erasesprite_mask EQU $0002
     0000             (./generated-code/):00188         rsv_render_flags EQU $0000
     0080             (./generated-code/):00189         rsv_render_onscreen_mask EQU $0080
     0008             (./generated-code/):00190         rsv_render_outofrange_mask EQU $0008
     0000             (./generated-code/):00191         rsv_x1_pixel EQU $0000
     0000             (./generated-code/):00192         rsv_x2_pixel EQU $0000
     0000             (./generated-code/):00193         rsv_xy1_pixel EQU $0000
     0000             (./generated-code/):00194         rsv_xy2_pixel EQU $0000
     0000             (./generated-code/):00195         rsv_y1_pixel EQU $0000
     0000             (./generated-code/):00196         rsv_y2_pixel EQU $0000
     0005             (./generated-code/):00197         run_object_next EQU $0005
     0003             (./generated-code/):00198         run_object_prev EQU $0003
     00E3             (./generated-code/):00199         screen_bottom EQU $00E3
     00C8             (./generated-code/):00200         screen_height EQU $00C8
     0030             (./generated-code/):00201         screen_left EQU $0030
     00CF             (./generated-code/):00202         screen_right EQU $00CF
     001C             (./generated-code/):00203         screen_top EQU $001C
     00A0             (./generated-code/):00204         screen_width EQU $00A0
     0003             (./generated-code/):00205         sound_end_addr EQU $0003
     0005             (./generated-code/):00206         sound_meta_size EQU $0005
     0000             (./generated-code/):00207         sound_page EQU $0000
     0001             (./generated-code/):00208         sound_start_addr EQU $0001
     4000             (./generated-code/):00209         start EQU $4000
     000E             (./generated-code/):00210         status_flags EQU $000E
     0001             (./generated-code/):00211         status_xflip_mask EQU $0001
     0002             (./generated-code/):00212         status_yflip_mask EQU $0002
     000A             (./generated-code/):00213         sub_anim EQU $000A
     0001             (./generated-code/):00214         subtype EQU $0001
     0001             (./generated-code/):00215         subtype_w EQU $0001
     001E             (./generated-code/):00216         x_acl EQU $001E
     0018             (./generated-code/):00217         x_pixel EQU $0018
     0012             (./generated-code/):00218         x_pos EQU $0012
     0014             (./generated-code/):00219         x_sub EQU $0014
     001A             (./generated-code/):00220         x_vel EQU $001A
     0018             (./generated-code/):00221         xy_pixel EQU $0018
     0020             (./generated-code/):00222         y_acl EQU $0020
     0019             (./generated-code/):00223         y_pixel EQU $0019
     0015             (./generated-code/):00224         y_pos EQU $0015
     0017             (./generated-code/):00225         y_sub EQU $0017
     001C             (./generated-code/):00226         y_vel EQU $001C
     404D             (./generated-code/):00227         zx0_code EQU $404D
     404B             (./generated-code/):00228         zx0_copy EQU $404B
     4000             (./generated-code/):00229         zx0_decompress EQU $4000
     0001             (./generated-code/):00230         ZX0_DISABLE_DISABLING_INTERRUPTS EQU $0001
     0040             (./generated-code/):00231         zx0_dp EQU $0040
     0040             (./generated-code/):00232         zx0_dp_end EQU $0040
     400F             (./generated-code/):00233         zx0_eof EQU $400F
     4062             (./generated-code/):00234         zx0_literals EQU $4062
     4011             (./generated-code/):00235         zx0_new_offset EQU $4011
     4050             (./generated-code/):00236         zx0_offset EQU $4050
     40A0             (./generated-code/):00237         zx0_reload EQU $40A0
     40C0             (./generated-code/):00238         zx0_rts EQU $40C0
                      (/home/robin/githu):00003         
                      (/home/robin/githu):00004         ********************************************************************************
                      (/home/robin/githu):00005         * Boot loader FD - Benoit Rousseau 05/11/2020
                      (/home/robin/githu):00006         * ------------------------------------------------------------------------------
                      (/home/robin/githu):00007         * 
                      (/home/robin/githu):00008         * Description
                      (/home/robin/githu):00009         * -----------
                      (/home/robin/githu):00010         * Animation de la palette: fondu vers une couleur cible PAL_TO
                      (/home/robin/githu):00011         * Initialisation de la commutation de page pour l'espace Donnees (Mode registre)
                      (/home/robin/githu):00012         * Chargement du code de Game Mode Engine en page 4 sur espace donnees
                      (/home/robin/githu):00013         * Appel du Game Mode Engine
                      (/home/robin/githu):00014         *
                      (/home/robin/githu):00015         ********************************************************************************
                      (/home/robin/githu):00016         
                      (/home/robin/githu):00017                 INCLUDE "./engine/constants.asm"
                      (./engine/constant):00001         * ---------------------------------------------------------------------------
                      (./engine/constant):00002         * Constants
                      (./engine/constant):00003         *
                      (./engine/constant):00004         * Naming convention
                      (./engine/constant):00005         * -----------------
                      (./engine/constant):00006         * - lower case
                      (./engine/constant):00007         * - underscore-separated names
                      (./engine/constant):00008         *
                      (./engine/constant):00009         * ---------------------------------------------------------------------------
                      (./engine/constant):00010         
                      (./engine/constant):00011          ifndef CONSTANTS_ASM
0000                  (./engine/constant):00012         CONSTANTS_ASM equ 1
                      (./engine/constant):00013         
                      (./engine/constant):00014         * ===========================================================================
                      (./engine/constant):00015         * TO8 Registers
                      (./engine/constant):00016         * ===========================================================================
                      (./engine/constant):00017         
                      (./engine/constant):00018         ; Disk routine registers (ROM)
                      (./engine/constant):00019         
0000                  (./engine/constant):00020         dk_drive                      equ $6049
0000                  (./engine/constant):00021         dk_track                      equ $604A
0000                  (./engine/constant):00022         dk_track_lsb                  equ $604B
0000                  (./engine/constant):00023         dk_sector                     equ $604C
0000                  (./engine/constant):00024         dk_write_location             equ $604F
                      (./engine/constant):00025         
                      (./engine/constant):00026         * ===========================================================================
                      (./engine/constant):00027         * Globals
                      (./engine/constant):00028         * ===========================================================================
                      (./engine/constant):00029         
                      (./engine/constant):00030         ; WARNING - BuildSprite allow to cross $A000 limit by glb_camera_x_offset/4
                      (./engine/constant):00031         ; Graphics routines using S to write may cross by 12 bytes
                      (./engine/constant):00032         ; be sure to compile with enough margin here
0000                  (./engine/constant):00033         glb_ram_end                   equ $A000-12
                      (./engine/constant):00034         
                      (./engine/constant):00035         ; compilated sprite
0000                  (./engine/constant):00036         glb_register_s                equ glb_ram_end-2             ; reverved space to store S from ROM routines
                      (./engine/constant):00037         
                      (./engine/constant):00038         ; DrawSprites
0000                  (./engine/constant):00039         glb_screen_location_1         equ glb_register_s-2          ; start address for rendering of current sprite Part1     
0000                  (./engine/constant):00040         glb_screen_location_2         equ glb_screen_location_1-2   ; start address for rendering of current sprite Part2 (DEPENDENCY Must follow Part1)
                      (./engine/constant):00041         
0000                  (./engine/constant):00042         glb_camera_height             equ glb_screen_location_2-2
0000                  (./engine/constant):00043         glb_camera_width              equ glb_camera_height-2
0000                  (./engine/constant):00044         glb_camera_x_pos_coarse       equ glb_camera_width-2        ; ((glb_camera_x_pos - 64) / 64) * 64
0000                  (./engine/constant):00045         glb_camera_x_pos              equ glb_camera_x_pos_coarse-2 ; 16.8 camera x position in palyfield coordinates
0000                  (./engine/constant):00046         glb_camera_x_sub              equ glb_camera_x_pos-1        ; 
0000                  (./engine/constant):00047         glb_camera_y_pos              equ glb_camera_x_pos-2        ; 16.8 camera y position in palyfield coordinates
0000                  (./engine/constant):00048         glb_camera_y_sub              equ glb_camera_y_pos-1        ;
0000                  (./engine/constant):00049         glb_camera_x_min_pos          equ glb_camera_y_pos-2
0000                  (./engine/constant):00050         glb_camera_y_min_pos          equ glb_camera_x_min_pos-2
0000                  (./engine/constant):00051         glb_camera_x_max_pos          equ glb_camera_y_min_pos-2
0000                  (./engine/constant):00052         glb_camera_y_max_pos          equ glb_camera_x_max_pos-2
0000                  (./engine/constant):00053         glb_camera_x_offset           equ glb_camera_y_max_pos-2
0000                  (./engine/constant):00054         glb_camera_y_offset           equ glb_camera_x_offset-2
0000                  (./engine/constant):00055         glb_force_sprite_refresh      equ glb_camera_y_offset-1
0000                  (./engine/constant):00056         glb_camera_move               equ glb_force_sprite_refresh-1
0000                  (./engine/constant):00057         glb_alphaTiles                equ glb_camera_move-1
0000                  (./engine/constant):00058         glb_timer_second              equ glb_alphaTiles-1
0000                  (./engine/constant):00059         glb_timer_minute              equ glb_timer_second-1
0000                  (./engine/constant):00060         glb_timer                     equ glb_timer_minute
0000                  (./engine/constant):00061         glb_timer_frame               equ glb_timer-1
                      (./engine/constant):00062         
                      (./engine/constant):00063         ; BankSwitch
0000                  (./engine/constant):00064         glb_Page                      equ glb_timer_frame-1
0000                  (./engine/constant):00065         dp_engine                     equ glb_Page-30  ; engine routines tmp var space
0000                  (./engine/constant):00066         dp_extreg                     equ dp_engine-28 ; extra register space (user and engine common)
0000                  (./engine/constant):00067         dp                            equ $9F00        ; user space (149 bytes max)
0000                  (./engine/constant):00068         glb_system_stack              equ dp
                      (./engine/constant):00069         
                      (./engine/constant):00070         ; generic direct page extra registers
                      (./engine/constant):00071         ; -----------------------------------
0000                  (./engine/constant):00072         glb_d0   equ   dp_extreg
0000                  (./engine/constant):00073         glb_d0_b equ   dp_extreg+1
                      (./engine/constant):00074         ; must be a free byte here for 24bits computation
0000                  (./engine/constant):00075         glb_d1   equ   dp_extreg+3
0000                  (./engine/constant):00076         glb_d1_b equ   dp_extreg+4
                      (./engine/constant):00077         ; must be a free byte here for 24bits computation
0000                  (./engine/constant):00078         glb_d2   equ   dp_extreg+6
0000                  (./engine/constant):00079         glb_d2_b equ   dp_extreg+7
                      (./engine/constant):00080         ; must be a free byte here for 24bits computation
0000                  (./engine/constant):00081         glb_d3   equ   dp_extreg+9
0000                  (./engine/constant):00082         glb_d3_b equ   dp_extreg+10
                      (./engine/constant):00083         ; must be a free byte here for 24bits computation
0000                  (./engine/constant):00084         glb_d4   equ   dp_extreg+12
0000                  (./engine/constant):00085         glb_d4_b equ   dp_extreg+13
0000                  (./engine/constant):00086         glb_d5   equ   dp_extreg+14
0000                  (./engine/constant):00087         glb_d5_b equ   dp_extreg+15
0000                  (./engine/constant):00088         glb_d6   equ   dp_extreg+16
0000                  (./engine/constant):00089         glb_d6_b equ   dp_extreg+17
0000                  (./engine/constant):00090         glb_a0   equ   dp_extreg+18
0000                  (./engine/constant):00091         glb_a0_b equ   dp_extreg+19
0000                  (./engine/constant):00092         glb_a1   equ   dp_extreg+20
0000                  (./engine/constant):00093         glb_a1_b equ   dp_extreg+21
0000                  (./engine/constant):00094         glb_a2   equ   dp_extreg+22
0000                  (./engine/constant):00095         glb_a2_b equ   dp_extreg+23
0000                  (./engine/constant):00096         glb_a3   equ   dp_extreg+24
0000                  (./engine/constant):00097         glb_a3_b equ   dp_extreg+25
0000                  (./engine/constant):00098         glb_a4   equ   dp_extreg+26
0000                  (./engine/constant):00099         glb_a4_b equ   dp_extreg+27
                      (./engine/constant):00100         
                      (./engine/constant):00101         * ===========================================================================
                      (./engine/constant):00102         * Display Constants
                      (./engine/constant):00103         * ===========================================================================
                      (./engine/constant):00104         
0000                  (./engine/constant):00105         screen_width                  equ 160             ; in pixel
0000                  (./engine/constant):00106         screen_height                 equ 200             ; in pixel
0000                  (./engine/constant):00107         screen_top                    equ (256-200)/2     ; in pixel
0000                  (./engine/constant):00108         screen_bottom                 equ screen_top+199  ; in pixel
0000                  (./engine/constant):00109         screen_left                   equ (256-160)/2     ; in pixel
0000                  (./engine/constant):00110         screen_right                  equ screen_left+159 ; in pixel
0000                  (./engine/constant):00111         nb_priority_levels            equ 8               ; number of priority levels (need code change if modified)
                      (./engine/constant):00112         
                      (./engine/constant):00113         * ===========================================================================
                      (./engine/constant):00114         * Images Constants
                      (./engine/constant):00115         * ===========================================================================
                      (./engine/constant):00116         
0000                  (./engine/constant):00117         image_x_size                  equ 4
0000                  (./engine/constant):00118         image_y_size                  equ 5
0000                  (./engine/constant):00119         image_center_offset           equ 6
                      (./engine/constant):00120         
0000                  (./engine/constant):00121         image_subset_x1_offset        equ 4
0000                  (./engine/constant):00122         image_subset_y1_offset        equ 5
                      (./engine/constant):00123         
0000                  (./engine/constant):00124         page_draw_routine             equ 0
0000                  (./engine/constant):00125         draw_routine                  equ 1
0000                  (./engine/constant):00126         page_erase_routine            equ 3
0000                  (./engine/constant):00127         erase_routine                 equ 4
0000                  (./engine/constant):00128         erase_nb_cell                 equ 6
                      (./engine/constant):00129         
                      (./engine/constant):00130         * ===========================================================================
                      (./engine/constant):00131         * Sound Constants
                      (./engine/constant):00132         * ===========================================================================
                      (./engine/constant):00133         
0000                  (./engine/constant):00134         sound_page        equ 0
0000                  (./engine/constant):00135         sound_start_addr  equ 1
0000                  (./engine/constant):00136         sound_end_addr    equ 3
0000                  (./engine/constant):00137         sound_meta_size   equ 5
                      (./engine/constant):00138         
                      (./engine/constant):00139         * ===========================================================================
                      (./engine/constant):00140         * Object Constants
                      (./engine/constant):00141         * ===========================================================================
                      (./engine/constant):00142         
                      (./engine/constant):00143         ; ext_variables_size should be declared in game source code
                      (./engine/constant):00144         
0000                  (./engine/constant):00145         object_base_size              equ 38  ; the size of an object without rsvd and ext_vars
                      (./engine/constant):00146          ifndef OverlayMode
0000                  (./engine/constant):00147         object_rsvd_size              equ 59
                      (./engine/constant):00148          else
0000                  (./engine/constant):00149         object_rsvd_size              equ 5
                      (./engine/constant):00150          endc
                      (./engine/constant):00151         
0000                  (./engine/constant):00152         object_rsvd                   equ object_base_size+ext_variables_size
0000                  (./engine/constant):00153         object_size                   equ object_base_size+ext_variables_size+object_rsvd_size ; the size of a dynamic object
0000                  (./engine/constant):00154         next_object                   equ object_size
0000                  (./engine/constant):00155         ext_variables                 equ object_base_size ; start of reserved space for additionnal variables
                      (./engine/constant):00156         
0000                  (./engine/constant):00157         id                            equ 0   ; reference to object model id (ObjID_) (0: free slot)
0000                  (./engine/constant):00158         subtype                       equ 1   ; reference to object subtype (Sub_) DEPENDENCY subtype must follow id
0000                  (./engine/constant):00159         subtype_w                     equ 1   ; reference to object subtype (Sub_) takes 2 bytes and overlap render_flags DEPENDENCY subtype must follow id
0000                  (./engine/constant):00160         render_flags                  equ 2
0000                  (./engine/constant):00161         run_object_prev               equ 3   ; previous object to update when deleting current object
0000                  (./engine/constant):00162         run_object_next               equ 5   ; next object to run by RunObjects
                      (./engine/constant):00163         
                      (./engine/constant):00164          ifndef OverlayMode
                      (./engine/constant):00165         * --- render_flags bitfield variables --- background erase pack
0000                  (./engine/constant):00166         render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
0000                  (./engine/constant):00167         render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
0000                  (./engine/constant):00168         render_overlay_mask           equ $04 ; (bit 2) DEPENDENCY should be bit 2 - compilated sprite with no background save
0000                  (./engine/constant):00169         render_playfieldcoord_mask    equ $08 ; (bit 3) tell display engine to use playfield (1) or screen (0) coordinates
0000                  (./engine/constant):00170         render_xloop_mask             equ $10 ; (bit 4) (in screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
0000                  (./engine/constant):00171         render_todelete_mask          equ $20 ; (bit 5) tell display engine to delete sprite and clear OST for this object
0000                  (./engine/constant):00172         render_subobjects_mask        equ $40 ; (bit 6) tell display engine to render subobjects for this object
0000                  (./engine/constant):00173         render_hide_mask              equ $80 ; (bit 7) tell display engine to hide sprite (keep priority and mapping_frame)
                      (./engine/constant):00174          else
                      (./engine/constant):00175         ; --- render_flags bitfield variables --- overlay pack
0000                  (./engine/constant):00176         render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
0000                  (./engine/constant):00177         render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
                      (./engine/constant):00178         
0000                  (./engine/constant):00179         render_playfieldcoord_mask    equ $08 ; (bit 3) tell display engine to use playfield (1) or screen (0) coordinates
0000                  (./engine/constant):00180         render_xloop_mask             equ $10 ; (bit 4) (in screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
0000                  (./engine/constant):00181         render_no_range_ctrl_mask     equ $20 ; (bit 5) tell display engine to skip out of range controls (this may lead to memory corruption BEWARE)
0000                  (./engine/constant):00182         render_subobjects_mask        equ $40 ; (bit 6) tell display engine to render subobjects for this object
0000                  (./engine/constant):00183         render_hide_mask              equ $80 ; (bit 7) tell display engine to hide sprite (keep priority and mapping_frame)
                      (./engine/constant):00184          endc
                      (./engine/constant):00185         
0000                  (./engine/constant):00186         priority                      equ 7           ; display priority (0: nothing to display, 1:front, ..., 8:back)
0000                  (./engine/constant):00187         anim                          equ 8  ; and 9  ; reference to current animation (Ani_)
0000                  (./engine/constant):00188         prev_anim                     equ 10 ; and 11 ; reference to previous animation (Ani_)
0000                  (./engine/constant):00189         sub_anim                      equ 10 ; and 11 ; reference to sub animation
0000                  (./engine/constant):00190         anim_frame                    equ 12          ; index of current frame in animation
0000                  (./engine/constant):00191         anim_frame_duration           equ 13          ; number of frames for each image in animation, range: 00-7F (0-127), 0 means display only during one frame
0000                  (./engine/constant):00192         anim_flags                    equ 14          ; byte offset to reference an anim_flags LUT (adv) / store a link flag (non adv)
                      (./engine/constant):00193         
                      (./engine/constant):00194         * --- anim_flags bitfield variables ---
0000                  (./engine/constant):00195         anim_link_mask                equ $01 ; (bit 0) if set, allow the load of a new animation without reseting anim_frame and anim_frame_duration
                      (./engine/constant):00196         
0000                  (./engine/constant):00197         status_flags                  equ 14          ; orientation of sprite, is applied to animation xmirror flag during AnimateSprite
                      (./engine/constant):00198         
                      (./engine/constant):00199         * --- status_flags bitfield variables ---
0000                  (./engine/constant):00200         status_xflip_mask             equ $01 ; (bit 0) X Flip
0000                  (./engine/constant):00201         status_yflip_mask             equ $02 ; (bit 1) Y Flip
                      (./engine/constant):00202         
0000                  (./engine/constant):00203         image_set                     equ 16 ; and 17 ; reference to current image (Img_) (0000 if no image)
0000                  (./engine/constant):00204         x_pos                         equ 18 ; and 19 ; x playfield coordinate
0000                  (./engine/constant):00205         x_sub                         equ 20          ; x subpixel (1/256 of a pixel), must follow x_pos in data structure
0000                  (./engine/constant):00206         y_pos                         equ 21 ; and 22 ; y playfield coordinate
0000                  (./engine/constant):00207         y_sub                         equ 23          ; y subpixel (1/256 of a pixel), must follow y_pos in data structure
0000                  (./engine/constant):00208         xy_pixel                      equ 24          ; x and y screen coordinate
0000                  (./engine/constant):00209         x_pixel                       equ 24          ; x screen coordinate
0000                  (./engine/constant):00210         y_pixel                       equ 25          ; y screen coordinate, must follow x_pixel
0000                  (./engine/constant):00211         x_vel                         equ 26 ; and 27 ; s8.8 horizontal velocity
0000                  (./engine/constant):00212         y_vel                         equ 28 ; and 29 ; s8.8 vertical velocity
0000                  (./engine/constant):00213         x_acl                         equ 30 ; and 31 ; s8.8 horizontal gravity
0000                  (./engine/constant):00214         y_acl                         equ 32 ; and 33 ; s8.8 vertical gravity
0000                  (./engine/constant):00215         routine                       equ 34          ; index of current object routine
0000                  (./engine/constant):00216         routine_secondary             equ 35          ; index of current secondary routine
0000                  (./engine/constant):00217         routine_tertiary              equ 36          ; index of current tertiary routine
0000                  (./engine/constant):00218         routine_quaternary            equ 37          ; index of current quaternary routine
                      (./engine/constant):00219         
                      (./engine/constant):00220          ifndef OverlayMode
                      (./engine/constant):00221         * ---------------------------------------------------------------------------
                      (./engine/constant):00222         * reserved variables (read/write by engine)
                      (./engine/constant):00223         
0000                  (./engine/constant):00224         rsv_render_flags              equ object_rsvd
                      (./engine/constant):00225         
                      (./engine/constant):00226         * --- rsv_render_flags bitfield variables ---
0000                  (./engine/constant):00227         rsv_render_checkrefresh_mask  equ $01 ; (bit 0) if erasesprite and display sprite flag are processed for this frame
0000                  (./engine/constant):00228         rsv_render_erasesprite_mask   equ $02 ; (bit 1) if a sprite need to be cleared on screen
0000                  (./engine/constant):00229         rsv_render_displaysprite_mask equ $04 ; (bit 2) if a sprite need to be rendered on screen
0000                  (./engine/constant):00230         rsv_render_outofrange_mask    equ $08 ; (bit 3) if a sprite is out of range for full rendering in screen
0000                  (./engine/constant):00231         rsv_render_onscreen_mask      equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on last screen buffer (may be 0 or 1)
                      (./engine/constant):00232         
0000                  (./engine/constant):00233         rsv_prev_anim                 equ object_rsvd+1 ; and +2 ; reference to previous animation (Ani_) w * UTILE ?
0000                  (./engine/constant):00234         rsv_image_center_offset       equ object_rsvd+3 ; 0 or 1 offset that indicate if image center is even or odd (DRS_XYToAddress)
0000                  (./engine/constant):00235         rsv_image_subset              equ object_rsvd+4 ; and +5 ; reference to current image regarding mirror flags w
0000                  (./engine/constant):00236         rsv_mapping_frame             equ object_rsvd+6 ; and +7 ; reference to current image regarding mirror flags, overlay flag and x precision w
0000                  (./engine/constant):00237         rsv_erase_nb_cell             equ object_rsvd+8 ; b 
0000                  (./engine/constant):00238         rsv_page_draw_routine         equ object_rsvd+9 ; b
0000                  (./engine/constant):00239         rsv_draw_routine              equ object_rsvd+10 ; and +11 ; w
0000                  (./engine/constant):00240         rsv_page_erase_routine        equ object_rsvd+12 ; b
0000                  (./engine/constant):00241         rsv_erase_routine             equ object_rsvd+13 ; and +14 ; w 
0000                  (./engine/constant):00242         rsv_xy1_pixel                 equ object_rsvd+15 ;
0000                  (./engine/constant):00243         rsv_x1_pixel                  equ object_rsvd+15 ; x+x_offset-(x_size/2) screen coordinate
0000                  (./engine/constant):00244         rsv_y1_pixel                  equ object_rsvd+16 ; y+y_offset-(y_size/2) screen coordinate, must follow rsv_x1_pixel
0000                  (./engine/constant):00245         rsv_xy2_pixel                 equ object_rsvd+17 ;
0000                  (./engine/constant):00246         rsv_x2_pixel                  equ object_rsvd+17 ; x+x_offset+(x_size/2) screen coordinate
0000                  (./engine/constant):00247         rsv_y2_pixel                  equ object_rsvd+18 ; y+y_offset+(y_size/2) screen coordinate, must follow rsv_x2_pixel
                      (./engine/constant):00248         
                      (./engine/constant):00249         * ---------------------------------------------------------------------------
                      (./engine/constant):00250         * reserved variables (engine) - buffer specific
                      (./engine/constant):00251         
0000                  (./engine/constant):00252         rsv_buffer_0                  equ object_rsvd+19 ; Start index of buffer 0 variables
0000                  (./engine/constant):00253         rsv_priority_0                equ object_rsvd+19 ; internal value that hold priority in video buffer 0
0000                  (./engine/constant):00254         rsv_priority_prev_obj_0       equ object_rsvd+20 ; and +21 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
0000                  (./engine/constant):00255         rsv_priority_next_obj_0       equ object_rsvd+22 ; and +23 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
0000                  (./engine/constant):00256         rsv_prev_mapping_frame_0      equ object_rsvd+24 ; and +25 ; reference to previous image in video buffer 0 w
0000                  (./engine/constant):00257         rsv_prev_erase_nb_cell_0      equ object_rsvd+26 : b
0000                  (./engine/constant):00258         rsv_prev_page_erase_routine_0 equ object_rsvd+27 ; b
0000                  (./engine/constant):00259         rsv_prev_erase_routine_0      equ object_rsvd+28 ; and +29 ; w
0000                  (./engine/constant):00260         rsv_bgdata_0                  equ object_rsvd+30 ; and +31 ; address of background data in screen 0 w
0000                  (./engine/constant):00261         rsv_prev_xy_pixel_0           equ object_rsvd+32 ;
0000                  (./engine/constant):00262         rsv_prev_x_pixel_0            equ object_rsvd+32 ; previous x screen coordinate b
0000                  (./engine/constant):00263         rsv_prev_y_pixel_0            equ object_rsvd+33 ; previous y screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00264         rsv_prev_xy1_pixel_0          equ object_rsvd+34 ;
0000                  (./engine/constant):00265         rsv_prev_x1_pixel_0           equ object_rsvd+34 ; previous x+x_offset-(x_size/2) screen coordinate b
0000                  (./engine/constant):00266         rsv_prev_y1_pixel_0           equ object_rsvd+35 ; previous y+y_offset-(y_size/2) screen coordinate b, must follow x1_pixel
0000                  (./engine/constant):00267         rsv_prev_xy2_pixel_0          equ object_rsvd+36 ;
0000                  (./engine/constant):00268         rsv_prev_x2_pixel_0           equ object_rsvd+36 ; previous x+x_offset+(x_size/2) screen coordinate b
0000                  (./engine/constant):00269         rsv_prev_y2_pixel_0           equ object_rsvd+37 ; previous y+y_offset+(y_size/2) screen coordinate b, must follow x2_pixel
0000                  (./engine/constant):00270         rsv_prev_render_flags_0       equ object_rsvd+38 ;
                      (./engine/constant):00271         * --- rsv_prev_render_flags_0 bitfield variables ---
0000                  (./engine/constant):00272         rsv_prev_render_overlay_mask  equ $01 ; (bit 0) if a sprite has been rendered with compilated sprite and no background save on screen buffer 0/1
0000                  (./engine/constant):00273         rsv_prev_render_onscreen_mask equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on screen buffer 0/1
                      (./engine/constant):00274         
0000                  (./engine/constant):00275         rsv_buffer_1                  equ object_rsvd+39 ; Start index of buffer 1 variables
0000                  (./engine/constant):00276         rsv_priority_1                equ object_rsvd+39 ; internal value that hold priority in video buffer 1
0000                  (./engine/constant):00277         rsv_priority_prev_obj_1       equ object_rsvd+40 ; and +41 ; previous object (OST address) in display priority list for video buffer 1 (0000 if none) w
0000                  (./engine/constant):00278         rsv_priority_next_obj_1       equ object_rsvd+42 ; and +43 ; next object (OST address) in display priority list for video buffer 1 (0000 if none) w
0000                  (./engine/constant):00279         rsv_prev_mapping_frame_1      equ object_rsvd+44 ; and +45 ; reference to previous image in video buffer 1 w
0000                  (./engine/constant):00280         rsv_prev_erase_nb_cell_1      equ object_rsvd+46 ; b
0000                  (./engine/constant):00281         rsv_prev_page_erase_routine_1 equ object_rsvd+47 ; b
0000                  (./engine/constant):00282         rsv_prev_erase_routine_1      equ object_rsvd+48 ; and +49 ; w
0000                  (./engine/constant):00283         rsv_bgdata_1                  equ object_rsvd+50 ; and +51 ; address of background data in screen 1 w
0000                  (./engine/constant):00284         rsv_prev_xy_pixel_1           equ object_rsvd+52 ;
0000                  (./engine/constant):00285         rsv_prev_x_pixel_1            equ object_rsvd+52 ; previous x screen coordinate b
0000                  (./engine/constant):00286         rsv_prev_y_pixel_1            equ object_rsvd+53 ; previous y screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00287         rsv_prev_xy1_pixel_1          equ object_rsvd+54 ;
0000                  (./engine/constant):00288         rsv_prev_x1_pixel_1           equ object_rsvd+54 ; previous x+x_size screen coordinate b
0000                  (./engine/constant):00289         rsv_prev_y1_pixel_1           equ object_rsvd+55 ; previous y+y_size screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00290         rsv_prev_xy2_pixel_1          equ object_rsvd+56 ;
0000                  (./engine/constant):00291         rsv_prev_x2_pixel_1           equ object_rsvd+56 ; previous x+x_size screen coordinate b
0000                  (./engine/constant):00292         rsv_prev_y2_pixel_1           equ object_rsvd+57 ; previous y+y_size screen coordinate b, must follow x_pixel
0000                  (./engine/constant):00293         rsv_prev_render_flags_1       equ object_rsvd+58 ;
                      (./engine/constant):00294         
0000                  (./engine/constant):00295         buf_priority                  equ 0  ; offset for each rsv_buffer variables
0000                  (./engine/constant):00296         buf_priority_prev_obj         equ 1  ;
0000                  (./engine/constant):00297         buf_priority_next_obj         equ 3  ;
0000                  (./engine/constant):00298         buf_prev_mapping_frame        equ 5  ;
0000                  (./engine/constant):00299         buf_erase_nb_cell             equ 7  ;
0000                  (./engine/constant):00300         buf_page_erase_routine        equ 8 ;
0000                  (./engine/constant):00301         buf_erase_routine             equ 9 ;
0000                  (./engine/constant):00302         buf_bgdata                    equ 11 ;
0000                  (./engine/constant):00303         buf_prev_xy_pixel             equ 13 ;
0000                  (./engine/constant):00304         buf_prev_x_pixel              equ 13 ;
0000                  (./engine/constant):00305         buf_prev_y_pixel              equ 14 ;
0000                  (./engine/constant):00306         buf_prev_xy1_pixel            equ 15 ;
0000                  (./engine/constant):00307         buf_prev_x1_pixel             equ 15 ;
0000                  (./engine/constant):00308         buf_prev_y1_pixel             equ 16 ;
0000                  (./engine/constant):00309         buf_prev_xy2_pixel            equ 17 ;
0000                  (./engine/constant):00310         buf_prev_x2_pixel             equ 17 ;
0000                  (./engine/constant):00311         buf_prev_y2_pixel             equ 18 ;
0000                  (./engine/constant):00312         buf_prev_render_flags         equ 19 ;
                      (./engine/constant):00313          else
                      (./engine/constant):00314         * ---------------------------------------------------------------------------
                      (./engine/constant):00315         * reserved variables (engine) - buffer specific - overlay pack
                      (./engine/constant):00316         
0000                  (./engine/constant):00317         rsv_priority                  equ object_rsvd   ; internal value that hold priority in video buffer 0
0000                  (./engine/constant):00318         rsv_priority_prev_obj         equ object_rsvd+1 ; and +2 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
0000                  (./engine/constant):00319         rsv_priority_next_obj         equ object_rsvd+3 ; and +4 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
                      (./engine/constant):00320         
                      (./engine/constant):00321         ; ---------------------------------------------------------------------------
                      (./engine/constant):00322         ; when childsprites are activated (i.e. bit #6 of render_flags set)
                      (./engine/constant):00323         ; object_base_size+ext_variables_size should cover at least 7+56 bytes 
                      (./engine/constant):00324         ; subtype is recovered
0000                  (./engine/constant):00325         mainspr_childsprites    equ   subtype         ; amount of child sprites
0000                  (./engine/constant):00326         mainspr_width           equ   run_object_next+2
0000                  (./engine/constant):00327         mainspr_height          equ   run_object_next+3
0000                  (./engine/constant):00328         mainspr_x_pos           equ   mainspr_height+1
0000                  (./engine/constant):00329         mainspr_y_pos           equ   mainspr_height+3
0000                  (./engine/constant):00330         mainspr_mapframe        equ   mainspr_height+5
0000                  (./engine/constant):00331         sub2_x_pos              equ   mainspr_x_pos+6
0000                  (./engine/constant):00332         sub2_y_pos              equ   mainspr_y_pos+6
0000                  (./engine/constant):00333         sub2_mapframe           equ   mainspr_mapframe+6
0000                  (./engine/constant):00334         sub3_x_pos              equ   sub2_x_pos+6
0000                  (./engine/constant):00335         sub3_y_pos              equ   sub2_y_pos+6
0000                  (./engine/constant):00336         sub3_mapframe           equ   sub2_mapframe+6
0000                  (./engine/constant):00337         sub4_x_pos              equ   sub3_x_pos+6
0000                  (./engine/constant):00338         sub4_y_pos              equ   sub3_y_pos+6
0000                  (./engine/constant):00339         sub4_mapframe           equ   sub3_mapframe+6
0000                  (./engine/constant):00340         sub5_x_pos              equ   sub4_x_pos+6
0000                  (./engine/constant):00341         sub5_y_pos              equ   sub4_y_pos+6
0000                  (./engine/constant):00342         sub5_mapframe           equ   sub4_mapframe+6
0000                  (./engine/constant):00343         sub6_x_pos              equ   sub5_x_pos+6
0000                  (./engine/constant):00344         sub6_y_pos              equ   sub5_y_pos+6
0000                  (./engine/constant):00345         sub6_mapframe           equ   sub5_mapframe+6
0000                  (./engine/constant):00346         sub7_x_pos              equ   sub6_x_pos+6
0000                  (./engine/constant):00347         sub7_y_pos              equ   sub6_y_pos+6
0000                  (./engine/constant):00348         sub7_mapframe           equ   sub6_mapframe+6
0000                  (./engine/constant):00349         sub8_x_pos              equ   sub7_x_pos+6
0000                  (./engine/constant):00350         sub8_y_pos              equ   sub7_y_pos+6
0000                  (./engine/constant):00351         sub8_mapframe           equ   sub7_mapframe+6
0000                  (./engine/constant):00352         sub9_x_pos              equ   sub8_x_pos+6
0000                  (./engine/constant):00353         sub9_y_pos              equ   sub8_y_pos+6
0000                  (./engine/constant):00354         sub9_mapframe           equ   sub8_mapframe+6
0000                  (./engine/constant):00355         next_subspr             equ   6 ; size of a subsprite data
                      (./engine/constant):00356          endc
                      (./engine/constant):00357          endc
                      (/home/robin/githu):00018                 INCLUDE "./engine/macros.asm"          
0000                  (./engine/macros.a):00001         _ldd MACRO
                      (./engine/macros.a):00002                 ldd   #((\1)*256)+\2
                      (./engine/macros.a):00003          ENDM
                      (./engine/macros.a):00004          
0000                  (./engine/macros.a):00005         _ldx MACRO
                      (./engine/macros.a):00006                 ldx   #((\1)*256)+\2
                      (./engine/macros.a):00007          ENDM
                      (./engine/macros.a):00008          
0000                  (./engine/macros.a):00009         _ldy MACRO
                      (./engine/macros.a):00010                 ldy   #((\1)*256)+\2
                      (./engine/macros.a):00011          ENDM
                      (./engine/macros.a):00012          
0000                  (./engine/macros.a):00013         _ldu MACRO
                      (./engine/macros.a):00014                 ldu   #((\1)*256)+\2
                      (./engine/macros.a):00015          ENDM  
                      (./engine/macros.a):00016          
0000                  (./engine/macros.a):00017         _lds MACRO
                      (./engine/macros.a):00018                 lds   #((\1)*256)+\2
                      (./engine/macros.a):00019          ENDM   
                      (./engine/macros.a):00020          
0000                  (./engine/macros.a):00021         _SetCartPageA MACRO
                      (./engine/macros.a):00022          IFDEF T2
                      (./engine/macros.a):00023                 jsr   SetCartPageA
                      (./engine/macros.a):00024          ELSE
                      (./engine/macros.a):00025                 sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00026          ENDC
                      (./engine/macros.a):00027          ENDM      
                      (./engine/macros.a):00028          
0000                  (./engine/macros.a):00029         _GetCartPageA MACRO
                      (./engine/macros.a):00030          IFDEF T2
                      (./engine/macros.a):00031                 jsr   GetCartPageA
                      (./engine/macros.a):00032          ELSE
                      (./engine/macros.a):00033                 lda   $E7E6
                      (./engine/macros.a):00034          ENDC
                      (./engine/macros.a):00035          ENDM
                      (./engine/macros.a):00036         
0000                  (./engine/macros.a):00037         _SetCartPageB MACRO
                      (./engine/macros.a):00038          IFDEF T2
                      (./engine/macros.a):00039                 jsr   SetCartPageB
                      (./engine/macros.a):00040          ELSE
                      (./engine/macros.a):00041                 stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00042          ENDC
                      (./engine/macros.a):00043          ENDM      
                      (./engine/macros.a):00044          
0000                  (./engine/macros.a):00045         _GetCartPageB MACRO
                      (./engine/macros.a):00046          IFDEF T2
                      (./engine/macros.a):00047                 jsr   GetCartPageB
                      (./engine/macros.a):00048          ELSE
                      (./engine/macros.a):00049                 ldb   $E7E6
                      (./engine/macros.a):00050          ENDC
                      (./engine/macros.a):00051          ENDM     
                      (./engine/macros.a):00052         
0000                  (./engine/macros.a):00053         _RunObjectSwap MACRO
                      (./engine/macros.a):00054                 ; param 1 : ObjID_
                      (./engine/macros.a):00055                 ; param 2 : Object data RAM address
                      (./engine/macros.a):00056                 ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00057                 lda   Obj_Index_Page+\1
                      (./engine/macros.a):00058                 sta   PSR_Page   
                      (./engine/macros.a):00059                 ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00060                 std   PSR_Address       
                      (./engine/macros.a):00061                 ldu   \2             
                      (./engine/macros.a):00062                 jsr   RunPgSubRoutine
                      (./engine/macros.a):00063          ENDM    
                      (./engine/macros.a):00064         
0000                  (./engine/macros.a):00065         _RunObjectSwapRoutine MACRO
                      (./engine/macros.a):00066                 ; param 1 : ObjID_
                      (./engine/macros.a):00067                 ; param 2 : Object routine
                      (./engine/macros.a):00068                 ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00069                 lda   Obj_Index_Page+\1   
                      (./engine/macros.a):00070                 sta   PSR_Page   
                      (./engine/macros.a):00071                 ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00072                 std   PSR_Address       
                      (./engine/macros.a):00073                 ldb   \2        
                      (./engine/macros.a):00074                 jsr   RunPgSubRoutine
                      (./engine/macros.a):00075          ENDM 
                      (./engine/macros.a):00076          
0000                  (./engine/macros.a):00077         _MountObject MACRO 
                      (./engine/macros.a):00078                 ; param 1 : ObjID_
                      (./engine/macros.a):00079                 ; manual mount of an object from the resident page 1
                      (./engine/macros.a):00080                 lda   Obj_Index_Page+\1
                      (./engine/macros.a):00081                 _SetCartPageA
                      (./engine/macros.a):00082                 ldx   Obj_Index_Address+2*\1
                      (./engine/macros.a):00083          ENDM
                      (./engine/macros.a):00084         
0000                  (./engine/macros.a):00085         _RunObject MACRO 
                      (./engine/macros.a):00086                 ; param 1 : ObjID_
                      (./engine/macros.a):00087                 ; param 2 : Object data RAM address
                      (./engine/macros.a):00088                 ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00089                 _MountObject \1
                      (./engine/macros.a):00090                 ldu   \2        
                      (./engine/macros.a):00091                 jsr   ,x
                      (./engine/macros.a):00092          ENDM
                      (./engine/macros.a):00093         
0000                  (./engine/macros.a):00094         _RunObjectRoutineA MACRO 
                      (./engine/macros.a):00095                 ; param 1 : ObjID_
                      (./engine/macros.a):00096                 ; param 2 : Object routine
                      (./engine/macros.a):00097                 ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00098                 ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00099                 _MountObject \1
                      (./engine/macros.a):00100                 lda   \2        
                      (./engine/macros.a):00101                 jsr   ,x
                      (./engine/macros.a):00102          ENDM
                      (./engine/macros.a):00103         
0000                  (./engine/macros.a):00104         _RunObjectRoutineB MACRO 
                      (./engine/macros.a):00105                 ; param 1 : ObjID_
                      (./engine/macros.a):00106                 ; param 2 : Object routine
                      (./engine/macros.a):00107                 ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00108                 ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00109                 _MountObject \1
                      (./engine/macros.a):00110                 ldb   \2        
                      (./engine/macros.a):00111                 jsr   ,x
                      (./engine/macros.a):00112          ENDM
                      (./engine/macros.a):00113         
0000                  (./engine/macros.a):00114         _SwitchScreenBuffer MACRO
                      (./engine/macros.a):00115                 ldb   $E7E5
                      (./engine/macros.a):00116                 eorb  #1                       ; switch btw page 2 and 3
                      (./engine/macros.a):00117                 orb   #$02
                      (./engine/macros.a):00118                 stb   $E7E5
                      (./engine/macros.a):00119          ENDM
                      (./engine/macros.a):00120         
0000                  (./engine/macros.a):00121         _asld MACRO
                      (./engine/macros.a):00122                 aslb
                      (./engine/macros.a):00123                 rola
                      (./engine/macros.a):00124          ENDM        
                      (./engine/macros.a):00125          
0000                  (./engine/macros.a):00126         _asrd MACRO
                      (./engine/macros.a):00127                 asra
                      (./engine/macros.a):00128                 rorb
                      (./engine/macros.a):00129          ENDM      
                      (./engine/macros.a):00130          
0000                  (./engine/macros.a):00131         _lsld MACRO
                      (./engine/macros.a):00132                 lslb
                      (./engine/macros.a):00133                 rola
                      (./engine/macros.a):00134          ENDM        
                      (./engine/macros.a):00135          
0000                  (./engine/macros.a):00136         _lsrd MACRO
                      (./engine/macros.a):00137                 lsra
                      (./engine/macros.a):00138                 rorb
                      (./engine/macros.a):00139          ENDM
                      (./engine/macros.a):00140          
0000                  (./engine/macros.a):00141         _rold MACRO
                      (./engine/macros.a):00142                 rolb
                      (./engine/macros.a):00143                 rola
                      (./engine/macros.a):00144          ENDM    
                      (./engine/macros.a):00145          
0000                  (./engine/macros.a):00146         _rord MACRO
                      (./engine/macros.a):00147                 rora
                      (./engine/macros.a):00148                 rorb
                      (./engine/macros.a):00149          ENDM
                      (./engine/macros.a):00150         
0000                  (./engine/macros.a):00151         _negd MACRO
                      (./engine/macros.a):00152                 nega
                      (./engine/macros.a):00153                 negb
                      (./engine/macros.a):00154                 sbca  #0
                      (./engine/macros.a):00155          ENDM
                      (./engine/macros.a):00156         
0000                  (./engine/macros.a):00157         _cba MACRO
                      (./engine/macros.a):00158                 pshs  b
                      (./engine/macros.a):00159                 cmpa  ,s+
                      (./engine/macros.a):00160          ENDM
                      (./engine/macros.a):00161         
0000                  (./engine/macros.a):00162         _aba MACRO
                      (./engine/macros.a):00163                 pshs  b
                      (./engine/macros.a):00164                 adda  ,s+
                      (./engine/macros.a):00165          ENDM
                      (./engine/macros.a):00166         
0000                  (./engine/macros.a):00167         _sba MACRO
                      (./engine/macros.a):00168                 pshs  b
                      (./engine/macros.a):00169                 suba  ,s+
                      (./engine/macros.a):00170          ENDM
                      (./engine/macros.a):00171         
0000                  (./engine/macros.a):00172         _cab MACRO
                      (./engine/macros.a):00173                 pshs  a
                      (./engine/macros.a):00174                 cmpb  ,s+
                      (./engine/macros.a):00175          ENDM
                      (./engine/macros.a):00176         
0000                  (./engine/macros.a):00177         _aab MACRO
                      (./engine/macros.a):00178                 pshs  a
                      (./engine/macros.a):00179                 addb  ,s+
                      (./engine/macros.a):00180          ENDM
                      (./engine/macros.a):00181         
0000                  (./engine/macros.a):00182         _sab MACRO
                      (./engine/macros.a):00183                 pshs  a
                      (./engine/macros.a):00184                 subb  ,s+
                      (./engine/macros.a):00185          ENDM
                      (./engine/macros.a):00186         
0000                  (./engine/macros.a):00187         _breakpoint MACRO
                      (./engine/macros.a):00188          IFDEF DEBUG
                      (./engine/macros.a):00189                 pshs  CC
                      (./engine/macros.a):00190                 sta   >$ffff
                      (./engine/macros.a):00191                 puls  CC
                      (./engine/macros.a):00192          ENDC
                      (./engine/macros.a):00193          ENDM
                      (/home/robin/githu):00019                 
                      (/home/robin/githu):00020          IFNDEF boot_color_gr
0000                  (/home/robin/githu):00021         boot_color_gr equ $FF
                      (/home/robin/githu):00022          ENDC
                      (/home/robin/githu):00023          IFNDEF boot_color_b
0000                  (/home/robin/githu):00024         boot_color_b  equ $0F
                      (/home/robin/githu):00025          ENDC
                      (/home/robin/githu):00026         
                      (/home/robin/githu):00027                 org   $6200
                      (/home/robin/githu):00028         
6200                  (/home/robin/githu):00029         PalInit
     62               (/home/robin/githu):00030                 setdp $62
6200 8662             (/home/robin/githu):00031                 lda   #$62
6202 1F8B             (/home/robin/githu):00032                 tfr   a,dp                     * positionne la direct page a 62
                      (/home/robin/githu):00033                 
6204                  (/home/robin/githu):00034         PalFade        
6204 0F7E             (/home/robin/githu):00035                 clr   <pal_idx
6206 8E62F8           (/home/robin/githu):00036                 ldx   #pal_len                 * index limite de chargement pour couleur courante 
6209 CE62EC           (/home/robin/githu):00037                 ldu   #pal_from                * chargement pointeur valeur des couleurs actuelles
                      (/home/robin/githu):00038                 
620C                  (/home/robin/githu):00039         Vsync_1                                
620C 7DE7E7           (/home/robin/githu):00040                 tst   $E7E7                    * le faisceau n'est pas dans l'ecran utile
620F 2AFB             (/home/robin/githu):00041                 bpl   Vsync_1                  * tant que le bit est a 0 on boucle
6211                  (/home/robin/githu):00042         Vsync_2                                 
6211 7DE7E7           (/home/robin/githu):00043                 tst   $E7E7                    * le faisceau est dans l'ecran utile
6214 2BFB             (/home/robin/githu):00044                 bmi   Vsync_2                  * tant que le bit est a 1 on boucle
                      (/home/robin/githu):00045                 
6216 108E0140         (/home/robin/githu):00046                 ldy   #0320                    * 40 lignes * 8 cycles
621A                  (/home/robin/githu):00047         Tempo        
621A 313F             (/home/robin/githu):00048                 leay  -1,y
621C 26FC             (/home/robin/githu):00049                 bne   Tempo                    * tempo pour etre dans la bordure invisible   
                      (/home/robin/githu):00050                                                                                 
621E 0AFE             (/home/robin/githu):00051                 dec   <pal_cycles              * decremente le compteur du nombre de frame
6220 275E             (/home/robin/githu):00052                 beq   InitVideo                * si termine
                      (/home/robin/githu):00053                 
6222                  (/home/robin/githu):00054         PalRun
6222 A6C4             (/home/robin/githu):00055                 lda   ,u                       * chargement de la composante verte et rouge
6224 94FF             (/home/robin/githu):00056                 anda  <pal_mask                * on efface la valeur vert ou rouge par masque
6226 C600             (/home/robin/githu):00057                 ldb   #boot_color_gr           * composante verte et rouge couleur cible
6228 D4FF             (/home/robin/githu):00058                 andb  <pal_mask                * on efface la valeur vert ou rouge par masque
622A D778             (/home/robin/githu):00059                 stb   <pal_buffer              * on stocke la valeur cible pour comparaison
622C C611             (/home/robin/githu):00060                 ldb   #$11                     * preparation de la valeur d'increment de couleur
622E D4FF             (/home/robin/githu):00061                 andb  <pal_mask                * on efface la valeur non utile par masque
6230 D779             (/home/robin/githu):00062                 stb   <pal_buffer+1            * on stocke la valeur pour ADD ou SUB ulterieur
6232 9178             (/home/robin/githu):00063                 cmpa  <pal_buffer              * comparaison de la composante courante et cible
6234 270E             (/home/robin/githu):00064                 beq   PalVRSuivante            * si composante est egale a la cible on passe
6236 2206             (/home/robin/githu):00065                 bhi   PalVRDec                 * si la composante est superieure on branche
6238 A6C4             (/home/robin/githu):00066                 lda   ,u                       * on recharge la valeur avec vert et rouge
623A 9B79             (/home/robin/githu):00067                 adda  <pal_buffer+1            * on incremente la composante verte ou rouge
623C 2004             (/home/robin/githu):00068                 bra   PalVRSave                * on branche pour sauvegarder
623E                  (/home/robin/githu):00069         PalVRDec
623E A6C4             (/home/robin/githu):00070                 lda   ,u                       * on recharge la valeur avec vert et rouge
6240 9079             (/home/robin/githu):00071                 suba  <pal_buffer+1            * on decremente la composante verte ou rouge
6242                  (/home/robin/githu):00072         PalVRSave                             
6242 A7C4             (/home/robin/githu):00073                 sta   ,u                       * sauvegarde de la nouvelle valeur vert ou rouge
6244                  (/home/robin/githu):00074         PalVRSuivante                         
6244 03FF             (/home/robin/githu):00075                 com   <pal_mask                * inversion du masque pour traiter l'autre semioctet
6246 2BDA             (/home/robin/githu):00076                 bmi   PalRun                   * si on traite $F0 on branche sinon on continue
                      (/home/robin/githu):00077                     
6248                  (/home/robin/githu):00078         SetPalBleu
6248 E641             (/home/robin/githu):00079                 ldb   1,u                      * chargement composante bleue courante
624A C100             (/home/robin/githu):00080                 cmpb  #boot_color_b            * comparaison composante courante et cible
624C 2708             (/home/robin/githu):00081                 beq   SetPalNext               * si composante est egale a la cible on passe
624E 2203             (/home/robin/githu):00082                 bhi   SetPalBleudec            * si la composante est superieure on branche
6250 5C               (/home/robin/githu):00083                 incb                           * on incremente la composante bleue
6251 2001             (/home/robin/githu):00084                 bra   SetPalSaveBleu           * on branche pour sauvegarder
6253                  (/home/robin/githu):00085         SetPalBleudec                       
6253 5A               (/home/robin/githu):00086                 decb                           * on decremente la composante bleue
6254                  (/home/robin/githu):00087         SetPalSaveBleu                         
6254 E741             (/home/robin/githu):00088                 stb   1,u                      * sauvegarde de la nouvelle valeur bleue
                      (/home/robin/githu):00089                                                                                
6256                  (/home/robin/githu):00090         SetPalNext                             
6256 967E             (/home/robin/githu):00091                 lda   <pal_idx                 * Lecture index couleur
6258 B7E7DB           (/home/robin/githu):00092                 sta   $E7DB                    * selectionne l'indice de couleur a ecrire
625B 8B02             (/home/robin/githu):00093                 adda  #$02                     * increment de l'indice de couleur (x2)
625D 977E             (/home/robin/githu):00094                 sta   <pal_idx                 * stockage du nouvel index
625F A6C4             (/home/robin/githu):00095                 lda   ,u                       * chargement de la nouvelle couleur courante
6261 B7E7DA           (/home/robin/githu):00096                 sta   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
6264 F7E7DA           (/home/robin/githu):00097                 stb   $E7DA                    * positionne la nouvelle couleur (Bleu)
6267 967E             (/home/robin/githu):00098                 lda   <pal_idx                 * rechargement de l'index couleur
6269 A184             (/home/robin/githu):00099                 cmpa  ,x                       * comparaison avec l'index limite pour cette couleur
626B 26E9             (/home/robin/githu):00100                 bne   SetPalNext               * si inferieur on continue avec la meme couleur
626D 3342             (/home/robin/githu):00101                 leau  2,u                      * on avance le pointeur vers la nouvelle couleur
626F 3001             (/home/robin/githu):00102                 leax  1,x                      * on avance le pointeur vers la nouvelle limite
6271 8C62FE           (/home/robin/githu):00103                 cmpx  #end_pal_len             * test de fin de liste
6274 26AC             (/home/robin/githu):00104                 bne   PalRun                   * on reboucle si fin de liste pas atteinte
6276 208C             (/home/robin/githu):00105                 bra   PalFade
                      (/home/robin/githu):00106                 
6278                  (/home/robin/githu):00107         pal_buffer                             
6278 42               (/home/robin/githu):00108                 fcb   $42                      * B et buffer de comparaison
6279 41               (/home/robin/githu):00109                 fcb   $41                      * A et buffer de comparaison
627A 53               (/home/robin/githu):00110                 fcb   $53                      * S
627B 49               (/home/robin/githu):00111                 fcb   $49                      * I
627C 43               (/home/robin/githu):00112                 fcb   $43                      * C
627D 32               (/home/robin/githu):00113                 fcb   $32                      * 2
                      (/home/robin/githu):00114                                                                                
627E                  (/home/robin/githu):00115         pal_idx                                
627E 00               (/home/robin/githu):00116                 fcb   $00                      * index de la couleur courante dans le traitement
627F 00               (/home/robin/githu):00117                 fcb   $00                      * espace reserve pour somme de controle
                      (/home/robin/githu):00118            
                      (/home/robin/githu):00119         *-------------------------------------------------------------------------------
                      (/home/robin/githu):00120         * A partir de ce point le code doit commencer a l'adresse $6280
                      (/home/robin/githu):00121         *-------------------------------------------------------------------------------
                      (/home/robin/githu):00122         
                      (/home/robin/githu):00123         ********************************************************************************  
                      (/home/robin/githu):00124         * Initialisation du mode video
                      (/home/robin/githu):00125         ********************************************************************************
6280                  (/home/robin/githu):00126         InitVideo
6280 1A50             (/home/robin/githu):00127                 orcc  #$50                     * desactive les interruptions
6282 10CE9F00         (/home/robin/githu):00128                 lds   #glb_system_stack        * positionnement pile systeme
6286 867B             (/home/robin/githu):00129                 lda   #$7B                     * passage en mode 160x200x16c
6288 B7E7DC           (/home/robin/githu):00130                 sta   $E7DC
                      (/home/robin/githu):00131           
                      (/home/robin/githu):00132         ********************************************************************************
                      (/home/robin/githu):00133         * Initialisation de la commutation de page pour l espace Donnees (Mode registre)
                      (/home/robin/githu):00134         ********************************************************************************
628B F66081           (/home/robin/githu):00135                 ldb   $6081                    * $6081 est l'image "lisible" de $E7E7
628E CA10             (/home/robin/githu):00136                 orb   #$10                     * positionne le bit d4 a 1
6290 F76081           (/home/robin/githu):00137                 stb   $6081                    * maintient une image coherente de $E7E7
6293 F7E7E7           (/home/robin/githu):00138                 stb   $E7E7                    * bit d4 a 1 pour pages donnees en mode registre
6296 C664             (/home/robin/githu):00139                 ldb   #$64                     * bit7=0, bit6=1 : ecriture autorisee, bit5=1 : espace cartouche recouvert par de la RAM, bit4-0 : numero de page 
6298 F7E7E6           (/home/robin/githu):00140                 stb   $E7E6                    * changement page 4 dans l'espace cartouche        
                      (/home/robin/githu):00141          
                      (/home/robin/githu):00142         ********************************************************************************
                      (/home/robin/githu):00143         * Lecture des donnees depuis la disquette et decompression par exomizer
                      (/home/robin/githu):00144         ********************************************************************************
629B                  (/home/robin/githu):00145         DKLecture
     60               (/home/robin/githu):00146                 setdp $60
629B 8660             (/home/robin/githu):00147                 lda   #$60
629D 1F8B             (/home/robin/githu):00148                 tfr   a,dp                     * positionne la direct page a 60
                      (/home/robin/githu):00149                 
629F CC0000           (/home/robin/githu):00150                 ldd   #$0000
62A2 DD4F             (/home/robin/githu):00151                 std   <$604F                   * DK.BUF $0000 Destination des donnees lues
62A4 9749             (/home/robin/githu):00152                 sta   <$6049                   * DK.DRV $00 Lecteur
62A6 DD4A             (/home/robin/githu):00153                 std   <$604A                   * DK.TRK $00 Piste
62A8 8602             (/home/robin/githu):00154                 lda   #$02
62AA 974C             (/home/robin/githu):00155                 sta   <$604C                   * DK.SEC $02 Secteur
62AC 9748             (/home/robin/githu):00156                 sta   <$6048                   * DK.OPC $02 Operation - lecture d'un secteur
62AE                  (/home/robin/githu):00157         DKCO
62AE BDE82A           (/home/robin/githu):00158                 jsr   $E82A                    * DKCO Appel Moniteur - lecture d'un secteur
62B1 0C4C             (/home/robin/githu):00159                 inc   <$604C                   * increment du registre Moniteur DK.SEC
62B3 964C             (/home/robin/githu):00160                 lda   <$604C                   * chargement de DK.SEC
62B5 8110             (/home/robin/githu):00161                 cmpa  #$10                     * si DK.SEC est inferieur ou egal a 16
62B7 2310             (/home/robin/githu):00162                 bls   DKContinue               * on continue le traitement
62B9 8601             (/home/robin/githu):00163                 lda   #$01                     * sinon on a depasse le secteur 16
62BB 974C             (/home/robin/githu):00164                 sta   <$604C                   * positionnement du secteur a 1
62BD 0C4B             (/home/robin/githu):00165                 inc   <$604B                   * increment du registre Moniteur DK.TRK
62BF 964B             (/home/robin/githu):00166                 lda   <$604B
62C1 814F             (/home/robin/githu):00167                 cmpa  #$4F                     * si DK.SEC est inferieur ou egal a 79
62C3 2304             (/home/robin/githu):00168                 bls   DKContinue               * on continue le traitement
62C5 0F4B             (/home/robin/githu):00169                 clr   <$604B                   * positionnement de la piste a 0
62C7 0C49             (/home/robin/githu):00170                 inc   <$6049                   * increment du registre Moniteur DK.DRV
62C9                  (/home/robin/githu):00171         DKContinue                            
62C9 0C4F             (/home/robin/githu):00172                 inc   <$604F                   * increment de 256 octets de la zone a ecrire DK.BUF
62CB DC4F             (/home/robin/githu):00173                 ldd   <$604F                   * chargement de la zone a ecrire DK.BUF
62CD                  (/home/robin/githu):00174         dk_dernier_bloc                        
62CD 10830100         (/home/robin/githu):00175                 cmpd  #Build_BootLastBlock     * test debut du dernier bloc de 256 octets a ecrire
62D1 23DB             (/home/robin/githu):00176                 bls   DKCO                     * si DK.BUF inferieur ou egal a la limite alors DKCO
                      (/home/robin/githu):00177         
62D3                  (/home/robin/githu):00178         BOO_WaitVBL
62D3 7DE7E7           (/home/robin/githu):00179                 tst   $E7E7                    ; le faisceau n'est pas dans l'ecran
62D6 2AFB             (/home/robin/githu):00180                 bpl   BOO_WaitVBL              ; tant que le bit est a 0 on boucle
62D8                  (/home/robin/githu):00181         BOO_WaitVBL1
62D8 7DE7E7           (/home/robin/githu):00182                 tst   $E7E7                    ; le faisceau est dans l'ecran
62DB 2BFB             (/home/robin/githu):00183                 bmi   BOO_WaitVBL1             ; tant que le bit est a 1 on boucle
                      (/home/robin/githu):00184         
                      (/home/robin/githu):00185         * Positionnement de la page 3 a l'ecran et de la page 2 en zone A000-DFFF
                      (/home/robin/githu):00186         ***********************************************************
62DD CCC002           (/home/robin/githu):00187                 ldd   #$C002                   ; page 3, couleur de cadre 0 et page 2
62E0 B7E7DD           (/home/robin/githu):00188                 sta   $E7DD                    ; affiche la page a l'ecran
62E3 F7E7E5           (/home/robin/githu):00189                 stb   $E7E5                    ; visible dans l'espace donnees
                      (/home/robin/githu):00190                 
                      (/home/robin/githu):00191                 _ldd  gmboot,$FF               ; level to boot and flag for first level load 
62E6 CC00FF           (             _ldd):00001                 ldd   #((gmboot)*256)+$FF
62E9 7E0000           (/home/robin/githu):00192                 jmp   $0000
                      (/home/robin/githu):00193         
                      (/home/robin/githu):00194         * donnees pour le fondu de palette
                      (/home/robin/githu):00195         ********************************************************************************
                      (/home/robin/githu):00196         
62EC                  (/home/robin/githu):00197         pal_from
62EC 0000             (/home/robin/githu):00198                 fdb   $0000                    * couleur $00 Noir (Thomson) => 06 change bordure
62EE F00F             (/home/robin/githu):00199                 fdb   $F00F                    * couleur $0C Turquoise (Bordure ecran)
62F0 FF0F             (/home/robin/githu):00200                 fdb   $FF0F                    * couleur $0E Blanc (TO8)
62F2 7707             (/home/robin/githu):00201                 fdb   $7707                    * couleur $10 Gris (Fond Bas)
62F4 AA03             (/home/robin/githu):00202                 fdb   $AA03                    * couleur $16 Jaune (Interieur case)
62F6 330A             (/home/robin/githu):00203                 fdb   $330A                    * couleur $18 Mauve (Fond TO8)
                      (/home/robin/githu):00204                                                                                
62F8                  (/home/robin/githu):00205         pal_len                                
62F8 0C               (/home/robin/githu):00206                 fcb   $0C                      * pour chaque couleur on defini un index limite
62F9 0E               (/home/robin/githu):00207                 fcb   $0E                      * (exclu) de chargement. ex: 0C, 0E, ... 
62FA 10               (/home/robin/githu):00208                 fcb   $10                      * la premiere couleur de PAL_FROM est chargee
62FB 16               (/home/robin/githu):00209                 fcb   $16                      * pour les couleurs 0(00) a 5(0A)
62FC 18               (/home/robin/githu):00210                 fcb   $18                      * la seconde couleur de PAL_FORM  est chargee
62FD 20               (/home/robin/githu):00211                 fcb   $20                      * pour la couleur 6(0C)
62FE                  (/home/robin/githu):00212         end_pal_len
                      (/home/robin/githu):00213            
62FE                  (/home/robin/githu):00214         pal_cycles
62FE 10               (/home/robin/githu):00215                 fcb   $10                      * nombre de frames de la transition (VSYNC)
                      (/home/robin/githu):00216                                                                                
62FF                  (/home/robin/githu):00217         pal_mask                               
62FF 0F               (/home/robin/githu):00218                 fcb   $0F                      * masque pour l'aternance du traitemet vert/rouge
