                      (./generated-code/):00001                 INCLUDE "./engine/constants.asm"
                      (./engine/constant):00001         * ---------------------------------------------------------------------------
                      (./engine/constant):00002         * Constants
                      (./engine/constant):00003         *
                      (./engine/constant):00004         * Naming convention
                      (./engine/constant):00005         * -----------------
                      (./engine/constant):00006         * - lower case
                      (./engine/constant):00007         * - underscore-separated names
                      (./engine/constant):00008         *
                      (./engine/constant):00009         * ---------------------------------------------------------------------------
                      (./engine/constant):00010         
                      (./engine/constant):00011          ifndef CONSTANTS_ASM
     0001             (./engine/constant):00012         CONSTANTS_ASM equ 1
                      (./engine/constant):00013         
                      (./engine/constant):00014         * ===========================================================================
                      (./engine/constant):00015         * TO8 Registers
                      (./engine/constant):00016         * ===========================================================================
                      (./engine/constant):00017         
                      (./engine/constant):00018         ; Disk routine registers (ROM)
                      (./engine/constant):00019         
     6049             (./engine/constant):00020         dk_drive                      equ $6049
     604A             (./engine/constant):00021         dk_track                      equ $604A
     604B             (./engine/constant):00022         dk_track_lsb                  equ $604B
     604C             (./engine/constant):00023         dk_sector                     equ $604C
     604F             (./engine/constant):00024         dk_write_location             equ $604F
                      (./engine/constant):00025         
                      (./engine/constant):00026         * ===========================================================================
                      (./engine/constant):00027         * Globals
                      (./engine/constant):00028         * ===========================================================================
                      (./engine/constant):00029         
                      (./engine/constant):00030         ; compilated sprite
     9FFE             (./engine/constant):00031         glb_register_s                equ $9FFE  ; reverved space to store S from ROM routines
                      (./engine/constant):00032         
                      (./engine/constant):00033         ; DrawSprites
     9FFC             (./engine/constant):00034         glb_screen_location_1         equ $9FFC  ; start address for rendering of current sprite Part1     
     9FFA             (./engine/constant):00035         glb_screen_location_2         equ $9FFA  ; start address for rendering of current sprite Part2 (Must follow Part1)
                      (./engine/constant):00036         
                      (./engine/constant):00037         ; CheckSpritesRefresh
     9FF9             (./engine/constant):00038         glb_cur_priority              equ $9FF9
     9FF7             (./engine/constant):00039         glb_cur_ptr_sub_obj_erase     equ $9FF7
     9FF5             (./engine/constant):00040         glb_cur_ptr_sub_obj_draw      equ $9FF5
                      (./engine/constant):00041         
     9FF3             (./engine/constant):00042         glb_camera_x_pos              equ $9FF3 ; camera x position in palyfield coordinates
     9FF1             (./engine/constant):00043         glb_camera_y_pos              equ $9FF1 ; camera y position in palyfield coordinates
     9FEF             (./engine/constant):00044         glb_camera_x_min_pos          equ $9FEF
     9FED             (./engine/constant):00045         glb_camera_y_min_pos          equ $9FED
     9FEB             (./engine/constant):00046         glb_camera_x_max_pos          equ $9FEB
     9FE9             (./engine/constant):00047         glb_camera_y_max_pos          equ $9FE9
     9FE8             (./engine/constant):00048         glb_camera_x_offset           equ $9FE8
     9FE7             (./engine/constant):00049         glb_camera_y_offset           equ $9FE7 
     9FE6             (./engine/constant):00050         glb_force_sprite_refresh      equ $9FE6
     9FE5             (./engine/constant):00051         glb_camera_move               equ $9FE5
     9FE4             (./engine/constant):00052         glb_alphaTiles                equ $9FE4
     9FE3             (./engine/constant):00053         glb_timer_second              equ $9FE3
     9FE2             (./engine/constant):00054         glb_timer_minute              equ $9FE2
     9FE2             (./engine/constant):00055         glb_timer                     equ $9FE2 
     9FE1             (./engine/constant):00056         glb_timer_frame               equ $9FE1
                      (./engine/constant):00057         
                      (./engine/constant):00058         ; BankSwitch
     9FE0             (./engine/constant):00059         glb_Page                      equ $9FE0
     9FB0             (./engine/constant):00060         dp_engine                     equ $9FB0 ; engine and user routines tmp var space
     9F00             (./engine/constant):00061         dp                            equ $9F00 ; free user tmp var space
     9F00             (./engine/constant):00062         glb_system_stack              equ $9F00
                      (./engine/constant):00063         
                      (./engine/constant):00064         * ===========================================================================
                      (./engine/constant):00065         * Display Constants
                      (./engine/constant):00066         * ===========================================================================
                      (./engine/constant):00067         
     00A0             (./engine/constant):00068         screen_width                  equ 160    ; in pixel
     001C             (./engine/constant):00069         screen_top                    equ 28     ; in pixel
     00E3             (./engine/constant):00070         screen_bottom                 equ 28+199 ; in pixel
     0030             (./engine/constant):00071         screen_left                   equ 48     ; in pixel
     00CF             (./engine/constant):00072         screen_right                  equ 48+159 ; in pixel
     0008             (./engine/constant):00073         nb_priority_levels            equ 8      ; number of priority levels (need code change if modified)
                      (./engine/constant):00074         
                      (./engine/constant):00075         * ===========================================================================
                      (./engine/constant):00076         * Images Constants
                      (./engine/constant):00077         * ===========================================================================
                      (./engine/constant):00078         
     0004             (./engine/constant):00079         image_x_size                  equ 4
     0005             (./engine/constant):00080         image_y_size                  equ 5
     0006             (./engine/constant):00081         image_center_offset           equ 6
                      (./engine/constant):00082         
     0004             (./engine/constant):00083         image_subset_x1_offset        equ 4
     0005             (./engine/constant):00084         image_subset_y1_offset        equ 5
                      (./engine/constant):00085         
     0000             (./engine/constant):00086         page_draw_routine             equ 0
     0001             (./engine/constant):00087         draw_routine                  equ 1
     0003             (./engine/constant):00088         page_erase_routine            equ 3
     0004             (./engine/constant):00089         erase_routine                 equ 4
     0006             (./engine/constant):00090         erase_nb_cell                 equ 6
                      (./engine/constant):00091         
                      (./engine/constant):00092         * ===========================================================================
                      (./engine/constant):00093         * Sound Constants
                      (./engine/constant):00094         * ===========================================================================
                      (./engine/constant):00095         
     0000             (./engine/constant):00096         sound_page        equ 0
     0001             (./engine/constant):00097         sound_start_addr  equ 1
     0003             (./engine/constant):00098         sound_end_addr    equ 3
     0005             (./engine/constant):00099         sound_meta_size   equ 5
                      (./engine/constant):00100         
                      (./engine/constant):00101         * ===========================================================================
                      (./engine/constant):00102         * Object Constants
                      (./engine/constant):00103         * ===========================================================================
                      (./engine/constant):00104         
                      (./engine/constant):00105         ; ext_variables_size should be declared in game source code
                      (./engine/constant):00106         
     0022             (./engine/constant):00107         object_base_size              equ 34  ; the size of an object without ext_vars - DEPENDENCY ClearObj routine
     003B             (./engine/constant):00108         object_rsvd_size              equ 59  ; the size of an object without ext_vars - DEPENDENCY ClearObj routine
     ????             (./engine/constant):00109         object_rsvd                   equ object_base_size+ext_variables_size
     ????             (./engine/constant):00110         object_size                   equ object_base_size+ext_variables_size+object_rsvd_size ; the size of a dynamic object
     ????             (./engine/constant):00111         next_object                   equ object_size
     0022             (./engine/constant):00112         ext_variables                 equ object_base_size ; start of reserved space for additionnal variables
                      (./engine/constant):00113         
     0000             (./engine/constant):00114         id                            equ 0           ; reference to object model id (ObjID_) (0: free slot)
     0001             (./engine/constant):00115         subtype                       equ 1           ; reference to object subtype (Sub_) DEPENDENCY subtype must follow id
     0002             (./engine/constant):00116         render_flags                  equ 2
                      (./engine/constant):00117         
                      (./engine/constant):00118         ; bit 7 = onscreen flag, bit 0 = x mirror, bit 1 = y mirror, bit 2 = coordinate system, bit 6 = render subobjects
                      (./engine/constant):00119         
                      (./engine/constant):00120         * --- render_flags bitfield variables ---
     0001             (./engine/constant):00121         render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
     0002             (./engine/constant):00122         render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
     0004             (./engine/constant):00123         render_overlay_mask           equ $04 ; (bit 2) DEPENDENCY should be bit 2 - compilated sprite with no background save
     0008             (./engine/constant):00124         render_playfieldcoord_mask    equ $08 ; (bit 3) tell display engine to use playfield (1) or screen (0) coordinates
     0010             (./engine/constant):00125         render_xloop_mask             equ $10 ; (bit 4) (in screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
     0020             (./engine/constant):00126         render_todelete_mask          equ $20 ; (bit 5) tell display engine to delete sprite and clear OST for this object
     0040             (./engine/constant):00127         render_subobjects             equ $40 ; (bit 6) tell display engine to render subobjects for this object
     0080             (./engine/constant):00128         render_hide_mask              equ $80 ; (bit 7) tell display engine to hide sprite (keep priority and mapping_frame)
                      (./engine/constant):00129         
     0003             (./engine/constant):00130         priority                      equ 3           ; display priority (0: nothing to display, 1:front, ..., 8:back)
     0004             (./engine/constant):00131         anim                          equ 4  ; and 5  ; reference to current animation (Ani_)
     0006             (./engine/constant):00132         prev_anim                     equ 6  ; and 7  ; reference to previous animation (Ani_)
     0008             (./engine/constant):00133         anim_frame                    equ 8           ; index of current frame in animation
     0009             (./engine/constant):00134         anim_frame_duration           equ 9           ; number of frames for each image in animation, range: 00-7F (0-127), 0 means display only during one frame
     000A             (./engine/constant):00135         anim_flags                    equ 10          ; byte offset to reference an anim_flags LUT (adv) / store a link flag (non adv)
                      (./engine/constant):00136         
                      (./engine/constant):00137         * --- anim_flags bitfield variables ---
     0001             (./engine/constant):00138         anim_link_mask                equ $01 ; (bit 0) if set, allow the load of a new animation without reseting anim_frame and anim_frame_duration
                      (./engine/constant):00139         
     000B             (./engine/constant):00140         status_flags                  equ 11          ; orientation of sprite, is applied to animation xmirror flag during AnimateSprite
                      (./engine/constant):00141         
                      (./engine/constant):00142         * --- status_flags bitfield variables ---
     0001             (./engine/constant):00143         status_xflip_mask             equ $01 ; (bit 0) X Flip
     0002             (./engine/constant):00144         status_yflip_mask             equ $02 ; (bit 1) Y Flip
                      (./engine/constant):00145         
     000C             (./engine/constant):00146         image_set                     equ 12 ; and 13 ; reference to current image (Img_) (0000 if no image)
     000E             (./engine/constant):00147         x_pos                         equ 14 ; and 15 ; x playfield coordinate
     0010             (./engine/constant):00148         x_sub                         equ 16          ; x subpixel (1/256 of a pixel), must follow x_pos in data structure
     0011             (./engine/constant):00149         y_pos                         equ 17 ; and 18 ; y playfield coordinate
     0013             (./engine/constant):00150         y_sub                         equ 19          ; y subpixel (1/256 of a pixel), must follow y_pos in data structure
     0014             (./engine/constant):00151         xy_pixel                      equ 20          ; x and y screen coordinate
     0014             (./engine/constant):00152         x_pixel                       equ 20          ; x screen coordinate
     0015             (./engine/constant):00153         y_pixel                       equ 21          ; y screen coordinate, must follow x_pixel
     0016             (./engine/constant):00154         x_vel                         equ 22 ; and 23 ; horizontal velocity
     0018             (./engine/constant):00155         y_vel                         equ 24 ; and 25 ; vertical velocity
     001A             (./engine/constant):00156         x_acl                         equ 26 ; and 27 ; horizontal gravity
     001C             (./engine/constant):00157         y_acl                         equ 28 ; and 29 ; vertical gravity
     001E             (./engine/constant):00158         routine                       equ 30          ; index of current object routine
     001F             (./engine/constant):00159         routine_secondary             equ 31          ; index of current secondary routine
     0020             (./engine/constant):00160         routine_tertiary              equ 32          ; index of current tertiary routine
     0021             (./engine/constant):00161         routine_quaternary            equ 33          ; index of current quaternary routine
                      (./engine/constant):00162         
                      (./engine/constant):00163         * ---------------------------------------------------------------------------
                      (./engine/constant):00164         * reserved variables (read/write by engine)
                      (./engine/constant):00165         
     ????             (./engine/constant):00166         rsv_render_flags              equ object_rsvd
                      (./engine/constant):00167         
                      (./engine/constant):00168         * --- rsv_render_flags bitfield variables ---
     0001             (./engine/constant):00169         rsv_render_checkrefresh_mask  equ $01 ; (bit 0) if erasesprite and display sprite flag are processed for this frame
     0002             (./engine/constant):00170         rsv_render_erasesprite_mask   equ $02 ; (bit 1) if a sprite need to be cleared on screen
     0004             (./engine/constant):00171         rsv_render_displaysprite_mask equ $04 ; (bit 2) if a sprite need to be rendered on screen
     0008             (./engine/constant):00172         rsv_render_outofrange_mask    equ $08 ; (bit 3) if a sprite is out of range for full rendering in screen
     0080             (./engine/constant):00173         rsv_render_onscreen_mask      equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on last screen buffer (may be 0 or 1)
                      (./engine/constant):00174         
     ????             (./engine/constant):00175         rsv_prev_anim                 equ object_rsvd+1 ; and +2 ; reference to previous animation (Ani_) w * UTILE ?
     ????             (./engine/constant):00176         rsv_image_center_offset       equ object_rsvd+3 ; 0 or 1 offset that indicate if image center is even or odd (DRS_XYToAddress)
     ????             (./engine/constant):00177         rsv_image_subset              equ object_rsvd+4 ; and +5 ; reference to current image regarding mirror flags w
     ????             (./engine/constant):00178         rsv_mapping_frame             equ object_rsvd+6 ; and +7 ; reference to current image regarding mirror flags, overlay flag and x precision w
     ????             (./engine/constant):00179         rsv_erase_nb_cell             equ object_rsvd+8 ; b 
     ????             (./engine/constant):00180         rsv_page_draw_routine         equ object_rsvd+9 ; b
     ????             (./engine/constant):00181         rsv_draw_routine              equ object_rsvd+10 ; and +11 ; w
     ????             (./engine/constant):00182         rsv_page_erase_routine        equ object_rsvd+12 ; b
     ????             (./engine/constant):00183         rsv_erase_routine             equ object_rsvd+13 ; and +14 ; w 
     ????             (./engine/constant):00184         rsv_xy1_pixel                 equ object_rsvd+15 ;
     ????             (./engine/constant):00185         rsv_x1_pixel                  equ object_rsvd+15 ; x+x_offset-(x_size/2) screen coordinate
     ????             (./engine/constant):00186         rsv_y1_pixel                  equ object_rsvd+16 ; y+y_offset-(y_size/2) screen coordinate, must follow rsv_x1_pixel
     ????             (./engine/constant):00187         rsv_xy2_pixel                 equ object_rsvd+17 ;
     ????             (./engine/constant):00188         rsv_x2_pixel                  equ object_rsvd+17 ; x+x_offset+(x_size/2) screen coordinate
     ????             (./engine/constant):00189         rsv_y2_pixel                  equ object_rsvd+18 ; y+y_offset+(y_size/2) screen coordinate, must follow rsv_x2_pixel
                      (./engine/constant):00190         
                      (./engine/constant):00191         * ---------------------------------------------------------------------------
                      (./engine/constant):00192         * reserved variables (engine) - buffer specific
                      (./engine/constant):00193         
     ????             (./engine/constant):00194         rsv_buffer_0                  equ object_rsvd+19 ; Start index of buffer 0 variables
     ????             (./engine/constant):00195         rsv_priority_0                equ object_rsvd+19 ; internal value that hold priority in video buffer 0
     ????             (./engine/constant):00196         rsv_priority_prev_obj_0       equ object_rsvd+20 ; and +21 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
     ????             (./engine/constant):00197         rsv_priority_next_obj_0       equ object_rsvd+22 ; and +23 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
     ????             (./engine/constant):00198         rsv_prev_mapping_frame_0      equ object_rsvd+24 ; and object_rsvd+25 ; reference to previous image in video buffer 0 w
     ????             (./engine/constant):00199         rsv_prev_erase_nb_cell_0      equ object_rsvd+26 : b
     ????             (./engine/constant):00200         rsv_prev_page_erase_routine_0 equ object_rsvd+27 ; b
     ????             (./engine/constant):00201         rsv_prev_erase_routine_0      equ object_rsvd+28 ; and object_rsvd+29 ; w
     ????             (./engine/constant):00202         rsv_bgdata_0                  equ object_rsvd+30 ; and +31 ; address of background data in screen 0 w
     ????             (./engine/constant):00203         rsv_prev_xy_pixel_0           equ object_rsvd+32 ;
     ????             (./engine/constant):00204         rsv_prev_x_pixel_0            equ object_rsvd+32 ; previous x screen coordinate b
     ????             (./engine/constant):00205         rsv_prev_y_pixel_0            equ object_rsvd+33 ; previous y screen coordinate b, must follow x_pixel
     ????             (./engine/constant):00206         rsv_prev_xy1_pixel_0          equ object_rsvd+34 ;
     ????             (./engine/constant):00207         rsv_prev_x1_pixel_0           equ object_rsvd+34 ; previous x+x_offset-(x_size/2) screen coordinate b
     ????             (./engine/constant):00208         rsv_prev_y1_pixel_0           equ object_rsvd+35 ; previous y+y_offset-(y_size/2) screen coordinate b, must follow x1_pixel
     ????             (./engine/constant):00209         rsv_prev_xy2_pixel_0          equ object_rsvd+36 ;
     ????             (./engine/constant):00210         rsv_prev_x2_pixel_0           equ object_rsvd+36 ; previous x+x_offset+(x_size/2) screen coordinate b
     ????             (./engine/constant):00211         rsv_prev_y2_pixel_0           equ object_rsvd+37 ; previous y+y_offset+(y_size/2) screen coordinate b, must follow x2_pixel
     ????             (./engine/constant):00212         rsv_prev_render_flags_0       equ object_rsvd+38 ;
                      (./engine/constant):00213         * --- rsv_prev_render_flags_0 bitfield variables ---
     0001             (./engine/constant):00214         rsv_prev_render_overlay_mask  equ $01 ; (bit 0) if a sprite has been rendered with compilated sprite and no background save on screen buffer 0/1
     0080             (./engine/constant):00215         rsv_prev_render_onscreen_mask equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on screen buffer 0/1
                      (./engine/constant):00216         
     ????             (./engine/constant):00217         rsv_buffer_1                  equ object_rsvd+39 ; Start index of buffer 1 variables
     ????             (./engine/constant):00218         rsv_priority_1                equ object_rsvd+39 ; internal value that hold priority in video buffer 1
     ????             (./engine/constant):00219         rsv_priority_prev_obj_1       equ object_rsvd+40 ; and +41 ; previous object (OST address) in display priority list for video buffer 1 (0000 if none) w
     ????             (./engine/constant):00220         rsv_priority_next_obj_1       equ object_rsvd+42 ; and +43 ; next object (OST address) in display priority list for video buffer 1 (0000 if none) w
     ????             (./engine/constant):00221         rsv_prev_mapping_frame_1      equ object_rsvd+44 ; and +45 ; reference to previous image in video buffer 1 w
     ????             (./engine/constant):00222         rsv_prev_erase_nb_cell_1      equ object_rsvd+46 ; b
     ????             (./engine/constant):00223         rsv_prev_page_erase_routine_1 equ object_rsvd+47 ; b
     ????             (./engine/constant):00224         rsv_prev_erase_routine_1      equ object_rsvd+48 ; and +49 ; w
     ????             (./engine/constant):00225         rsv_bgdata_1                  equ object_rsvd+50 ; and +51 ; address of background data in screen 1 w
     ????             (./engine/constant):00226         rsv_prev_xy_pixel_1           equ object_rsvd+52 ;
     ????             (./engine/constant):00227         rsv_prev_x_pixel_1            equ object_rsvd+52 ; previous x screen coordinate b
     ????             (./engine/constant):00228         rsv_prev_y_pixel_1            equ object_rsvd+53 ; previous y screen coordinate b, must follow x_pixel
     ????             (./engine/constant):00229         rsv_prev_xy1_pixel_1          equ object_rsvd+54 ;
     ????             (./engine/constant):00230         rsv_prev_x1_pixel_1           equ object_rsvd+54 ; previous x+x_size screen coordinate b
     ????             (./engine/constant):00231         rsv_prev_y1_pixel_1           equ object_rsvd+55 ; previous y+y_size screen coordinate b, must follow x_pixel
     ????             (./engine/constant):00232         rsv_prev_xy2_pixel_1          equ object_rsvd+56 ;
     ????             (./engine/constant):00233         rsv_prev_x2_pixel_1           equ object_rsvd+56 ; previous x+x_size screen coordinate b
     ????             (./engine/constant):00234         rsv_prev_y2_pixel_1           equ object_rsvd+57 ; previous y+y_size screen coordinate b, must follow x_pixel
     ????             (./engine/constant):00235         rsv_prev_render_flags_1       equ object_rsvd+58 ;
                      (./engine/constant):00236         
     0000             (./engine/constant):00237         buf_priority                  equ 0  ; offset for each rsv_buffer variables
     0001             (./engine/constant):00238         buf_priority_prev_obj         equ 1  ;
     0003             (./engine/constant):00239         buf_priority_next_obj         equ 3  ;
     0005             (./engine/constant):00240         buf_prev_mapping_frame        equ 5  ;
     0007             (./engine/constant):00241         buf_erase_nb_cell             equ 7  ;
     0008             (./engine/constant):00242         buf_page_erase_routine        equ 8 ;
     0009             (./engine/constant):00243         buf_erase_routine             equ 9 ;
     000B             (./engine/constant):00244         buf_bgdata                    equ 11 ;
     000D             (./engine/constant):00245         buf_prev_xy_pixel             equ 13 ;
     000D             (./engine/constant):00246         buf_prev_x_pixel              equ 13 ;
     000E             (./engine/constant):00247         buf_prev_y_pixel              equ 14 ;
     000F             (./engine/constant):00248         buf_prev_xy1_pixel            equ 15 ;
     000F             (./engine/constant):00249         buf_prev_x1_pixel             equ 15 ;
     0010             (./engine/constant):00250         buf_prev_y1_pixel             equ 16 ;
     0011             (./engine/constant):00251         buf_prev_xy2_pixel            equ 17 ;
     0011             (./engine/constant):00252         buf_prev_x2_pixel             equ 17 ;
     0012             (./engine/constant):00253         buf_prev_y2_pixel             equ 18 ;
     0013             (./engine/constant):00254         buf_prev_render_flags         equ 19 ;
                      (./engine/constant):00255         
                      (./engine/constant):00256          endc
                      (./generated-code/):00002                 ORG $A000
     FF               (./generated-code/):00003                 SETDP $FF
                      (./generated-code/):00004                 OPT C,CT
A000                  (./generated-code/):00005                 DRAW_Img_0020_0
A000 33C90F3C         (./generated-code/):00006 [8]     8               LEAU 3900,U
                      (./generated-code/):00007                 
A004 CC0044           (./generated-code/):00008 [3]     11              LDD #$0044
A007 ED43             (./generated-code/):00009 [6]     17              STD 3,U
A009 C641             (./generated-code/):00010 [2]     19              LDB #$41
A00B EDC8DB           (./generated-code/):00011 [6]     25              STD -37,U
A00E ECC853           (./generated-code/):00012 [6]     31              LDD 83,U
A011 84F0             (./generated-code/):00013 [2]     33              ANDA #$F0
A013 C40F             (./generated-code/):00014 [2]     35              ANDB #$0F
A015 C30040           (./generated-code/):00015 [4]     39              ADDD #$0040
A018 EDC853           (./generated-code/):00016 [6]     45              STD 83,U
A01B ECC823           (./generated-code/):00017 [6]     51              LDD 35,U
A01E 84F0             (./generated-code/):00018 [2]     53              ANDA #$F0
A020 C4F0             (./generated-code/):00019 [2]     55              ANDB #$F0
A022 C30400           (./generated-code/):00020 [4]     59              ADDD #$0400
A025 EDC823           (./generated-code/):00021 [6]     65              STD 35,U
A028 ECC82B           (./generated-code/):00022 [6]     71              LDD 43,U
A02B 8600             (./generated-code/):00023 [2]     73              LDA #$00
A02D C40F             (./generated-code/):00024 [2]     75              ANDB #$0F
A02F CA40             (./generated-code/):00025 [2]     77              ORB #$40
A031 EDC82B           (./generated-code/):00026 [6]     83              STD 43,U
A034 ECC8AC           (./generated-code/):00027 [6]     89              LDD -84,U
A037 8644             (./generated-code/):00028 [2]     91              LDA #$44
A039 C40F             (./generated-code/):00029 [2]     93              ANDB #$0F
A03B CA00             (./generated-code/):00030 [2]     95              ORB #$00
A03D EDC8AC           (./generated-code/):00031 [6]     101             STD -84,U
A040 8600             (./generated-code/):00032 [2]     103             LDA #$00
A042 A7C874           (./generated-code/):00033 [5]     108             STA 116,U
A045 A7C84C           (./generated-code/):00034 [5]     113             STA 76,U
A048 A65B             (./generated-code/):00035 [5]     118             LDA -5,U
A04A 84F0             (./generated-code/):00036 [2]     120             ANDA #$F0
A04C 8A01             (./generated-code/):00037 [2]     122             ORA #$01
A04E A75B             (./generated-code/):00038 [5]     127             STA -5,U
A050 A6C8D4           (./generated-code/):00039 [5]     132             LDA -44,U
A053 840F             (./generated-code/):00040 [2]     134             ANDA #$0F
A055 8A40             (./generated-code/):00041 [2]     136             ORA #$40
A057 A7C8D4           (./generated-code/):00042 [5]     141             STA -44,U
A05A A6C8B4           (./generated-code/):00043 [5]     146             LDA -76,U
A05D 840F             (./generated-code/):00044 [2]     148             ANDA #$0F
A05F 8A10             (./generated-code/):00045 [2]     150             ORA #$10
A061 A7C8B4           (./generated-code/):00046 [5]     155             STA -76,U
A064 A6C88C           (./generated-code/):00047 [5]     160             LDA -116,U
A067 840F             (./generated-code/):00048 [2]     162             ANDA #$0F
A069 8A10             (./generated-code/):00049 [2]     164             ORA #$10
A06B A7C88C           (./generated-code/):00050 [5]     169             STA -116,U
A06E 33C9FEE8         (./generated-code/):00051 [8]     177             LEAU -280,U
                      (./generated-code/):00052                 
A072 8611             (./generated-code/):00053 [2]     179             LDA #$11
A074 A7C8DB           (./generated-code/):00054 [5]     184             STA -37,U
A077 A7C8AC           (./generated-code/):00055 [5]     189             STA -84,U
A07A A6C875           (./generated-code/):00056 [5]     194             LDA 117,U
A07D 840F             (./generated-code/):00057 [2]     196             ANDA #$0F
A07F 8A40             (./generated-code/):00058 [2]     198             ORA #$40
A081 A7C875           (./generated-code/):00059 [5]     203             STA 117,U
A084 A6C82B           (./generated-code/):00060 [5]     208             LDA 43,U
A087 840F             (./generated-code/):00061 [2]     210             ANDA #$0F
A089 8A10             (./generated-code/):00062 [2]     212             ORA #$10
A08B A7C82B           (./generated-code/):00063 [5]     217             STA 43,U
A08E A643             (./generated-code/):00064 [5]     222             LDA 3,U
A090 840F             (./generated-code/):00065 [2]     224             ANDA #$0F
A092 8A10             (./generated-code/):00066 [2]     226             ORA #$10
A094 A743             (./generated-code/):00067 [5]     231             STA 3,U
A096 A6C8D4           (./generated-code/):00068 [5]     236             LDA -44,U
A099 840F             (./generated-code/):00069 [2]     238             ANDA #$0F
A09B 8A10             (./generated-code/):00070 [2]     240             ORA #$10
A09D A7C8D4           (./generated-code/):00071 [5]     245             STA -44,U
A0A0 A6C884           (./generated-code/):00072 [5]     250             LDA -124,U
A0A3 840F             (./generated-code/):00073 [2]     252             ANDA #$0F
A0A5 8A10             (./generated-code/):00074 [2]     254             ORA #$10
A0A7 A7C884           (./generated-code/):00075 [5]     259             STA -124,U
A0AA ECC87B           (./generated-code/):00076 [6]     265             LDD 123,U
A0AD 84F0             (./generated-code/):00077 [2]     267             ANDA #$F0
A0AF C40F             (./generated-code/):00078 [2]     269             ANDB #$0F
A0B1 C30410           (./generated-code/):00079 [4]     273             ADDD #$0410
A0B4 EDC87B           (./generated-code/):00080 [6]     279             STD 123,U
A0B7 ECC853           (./generated-code/):00081 [6]     285             LDD 83,U
A0BA 840F             (./generated-code/):00082 [2]     287             ANDA #$0F
A0BC C40F             (./generated-code/):00083 [2]     289             ANDB #$0F
A0BE C34010           (./generated-code/):00084 [4]     293             ADDD #$4010
A0C1 EDC853           (./generated-code/):00085 [6]     299             STD 83,U
A0C4 8601             (./generated-code/):00086 [2]     301             LDA #$01
A0C6 A7C8B3           (./generated-code/):00087 [5]     306             STA -77,U
                      (./generated-code/):00088                 
A0C9 DEFC             (./generated-code/):00089 [5]     311             LDU <glb_screen_location_1
A0CB 33C90F37         (./generated-code/):00090 [8]     319             LEAU 3895,U
                      (./generated-code/):00091                 
A0CF A648             (./generated-code/):00092 [5]     324             LDA 8,U
A0D1 84F0             (./generated-code/):00093 [2]     326             ANDA #$F0
A0D3 8A04             (./generated-code/):00094 [2]     328             ORA #$04
A0D5 A748             (./generated-code/):00095 [5]     333             STA 8,U
A0D7 A6C8E0           (./generated-code/):00096 [5]     338             LDA -32,U
A0DA 84F0             (./generated-code/):00097 [2]     340             ANDA #$F0
A0DC 8A04             (./generated-code/):00098 [2]     342             ORA #$04
A0DE A7C8E0           (./generated-code/):00099 [5]     347             STA -32,U
A0E1 8600             (./generated-code/):00100 [2]     349             LDA #$00
A0E3 A7C858           (./generated-code/):00101 [5]     354             STA 88,U
A0E6 A7C830           (./generated-code/):00102 [5]     359             STA 48,U
A0E9 ECC850           (./generated-code/):00103 [6]     365             LDD 80,U
A0EC 8644             (./generated-code/):00104 [2]     367             LDA #$44
A0EE C40F             (./generated-code/):00105 [2]     369             ANDB #$0F
A0F0 CA00             (./generated-code/):00106 [2]     371             ORB #$00
A0F2 EDC850           (./generated-code/):00107 [6]     377             STD 80,U
A0F5 ECC828           (./generated-code/):00108 [6]     383             LDD 40,U
A0F8 8644             (./generated-code/):00109 [2]     385             LDA #$44
A0FA C40F             (./generated-code/):00110 [2]     387             ANDB #$0F
A0FC CA00             (./generated-code/):00111 [2]     389             ORB #$00
A0FE EDC828           (./generated-code/):00112 [6]     395             STD 40,U
A101 ECC4             (./generated-code/):00113 [5]     400             LDD ,U
A103 8644             (./generated-code/):00114 [2]     402             LDA #$44
A105 C40F             (./generated-code/):00115 [2]     404             ANDB #$0F
A107 CA00             (./generated-code/):00116 [2]     406             ORB #$00
A109 EDC4             (./generated-code/):00117 [5]     411             STD ,U
A10B ECC8D8           (./generated-code/):00118 [6]     417             LDD -40,U
A10E 8614             (./generated-code/):00119 [2]     419             LDA #$14
A110 C4F0             (./generated-code/):00120 [2]     421             ANDB #$F0
A112 CA00             (./generated-code/):00121 [2]     423             ORB #$00
A114 EDC8D8           (./generated-code/):00122 [6]     429             STD -40,U
A117 ECC8B0           (./generated-code/):00123 [6]     435             LDD -80,U
A11A 8611             (./generated-code/):00124 [2]     437             LDA #$11
A11C C4F0             (./generated-code/):00125 [2]     439             ANDB #$F0
A11E CA00             (./generated-code/):00126 [2]     441             ORB #$00
A120 EDC8B0           (./generated-code/):00127 [6]     447             STD -80,U
A123 8640             (./generated-code/):00128 [2]     449             LDA #$40
A125 A7C878           (./generated-code/):00129 [5]     454             STA 120,U
A128 ECC8B7           (./generated-code/):00130 [6]     460             LDD -73,U
A12B 84F0             (./generated-code/):00131 [2]     462             ANDA #$F0
A12D 8A00             (./generated-code/):00132 [2]     464             ORA #$00
A12F C644             (./generated-code/):00133 [2]     466             LDB #$44
A131 EDC8B7           (./generated-code/):00134 [6]     472             STD -73,U
A134 ECC88F           (./generated-code/):00135 [6]     478             LDD -113,U
A137 84F0             (./generated-code/):00136 [2]     480             ANDA #$F0
A139 C40F             (./generated-code/):00137 [2]     482             ANDB #$0F
A13B C30040           (./generated-code/):00138 [4]     486             ADDD #$0040
A13E EDC88F           (./generated-code/):00139 [6]     492             STD -113,U
A141 8611             (./generated-code/):00140 [2]     494             LDA #$11
A143 A7C888           (./generated-code/):00141 [5]     499             STA -120,U
A146 33C9FEEF         (./generated-code/):00142 [8]     507             LEAU -273,U
                      (./generated-code/):00143                 
A14A A7C8B1           (./generated-code/):00144 [5]     512             STA -79,U
A14D CC1144           (./generated-code/):00145 [3]     515             LDD #$1144
A150 EDC871           (./generated-code/):00146 [6]     521             STD 113,U
A153 E7C850           (./generated-code/):00147 [5]     526             STB 80,U
A156 ECC849           (./generated-code/):00148 [6]     532             LDD 73,U
A159 84F0             (./generated-code/):00149 [2]     534             ANDA #$F0
A15B 8A01             (./generated-code/):00150 [2]     536             ORA #$01
A15D C614             (./generated-code/):00151 [2]     538             LDB #$14
A15F EDC849           (./generated-code/):00152 [6]     544             STD 73,U
A162 ECC821           (./generated-code/):00153 [6]     550             LDD 33,U
A165 84F0             (./generated-code/):00154 [2]     552             ANDA #$F0
A167 8A01             (./generated-code/):00155 [2]     554             ORA #$01
A169 C610             (./generated-code/):00156 [2]     556             LDB #$10
A16B EDC821           (./generated-code/):00157 [6]     562             STD 33,U
A16E ECC828           (./generated-code/):00158 [6]     568             LDD 40,U
A171 84F0             (./generated-code/):00159 [2]     570             ANDA #$F0
A173 C4F0             (./generated-code/):00160 [2]     572             ANDB #$F0
A175 C30401           (./generated-code/):00161 [4]     576             ADDD #$0401
A178 EDC828           (./generated-code/):00162 [6]     582             STD 40,U
A17B ECC4             (./generated-code/):00163 [5]     587             LDD ,U
A17D 84F0             (./generated-code/):00164 [2]     589             ANDA #$F0
A17F C4F0             (./generated-code/):00165 [2]     591             ANDB #$F0
A181 C30001           (./generated-code/):00166 [4]     595             ADDD #$0001
A184 EDC4             (./generated-code/):00167 [5]     600             STD ,U
A186 A6C878           (./generated-code/):00168 [5]     605             LDA 120,U
A189 840F             (./generated-code/):00169 [2]     607             ANDA #$0F
A18B 8A00             (./generated-code/):00170 [2]     609             ORA #$00
A18D A7C878           (./generated-code/):00171 [5]     614             STA 120,U
A190 A65A             (./generated-code/):00172 [5]     619             LDA -6,U
A192 840F             (./generated-code/):00173 [2]     621             ANDA #$0F
A194 8A10             (./generated-code/):00174 [2]     623             ORA #$10
A196 A75A             (./generated-code/):00175 [5]     628             STA -6,U
A198 A6C8D9           (./generated-code/):00176 [5]     633             LDA -39,U
A19B 84F0             (./generated-code/):00177 [2]     635             ANDA #$F0
A19D 8A01             (./generated-code/):00178 [2]     637             ORA #$01
A19F A7C8D9           (./generated-code/):00179 [5]     642             STA -39,U
A1A2 A6C8D2           (./generated-code/):00180 [5]     647             LDA -46,U
A1A5 840F             (./generated-code/):00181 [2]     649             ANDA #$0F
A1A7 8A00             (./generated-code/):00182 [2]     651             ORA #$00
A1A9 A7C8D2           (./generated-code/):00183 [5]     656             STA -46,U
A1AC A6C889           (./generated-code/):00184 [5]     661             LDA -119,U
A1AF 840F             (./generated-code/):00185 [2]     663             ANDA #$0F
A1B1 8A10             (./generated-code/):00186 [2]     665             ORA #$10
A1B3 A7C889           (./generated-code/):00187 [5]     670             STA -119,U
A1B6 33C9FF61         (./generated-code/):00188 [8]     678             LEAU -159,U
                      (./generated-code/):00189                 
A1BA A6C4             (./generated-code/):00190 [4]     682             LDA ,U
A1BC 840F             (./generated-code/):00191 [2]     684             ANDA #$0F
A1BE 8A10             (./generated-code/):00192 [2]     686             ORA #$10
A1C0 A7C4             (./generated-code/):00193 [4]     690             STA ,U
A1C2 39               (./generated-code/):00194 [5]     695             RTS
                      (./generated-code/):00195                 
