; ---------------------------------------------------------------------------
; DataType Offsets for tile layer
; ---------------------------------------------------------------------------

layer_parallax_X          equ   0  ; for one camera pixel move tell how much this layer will move in 8 bit decimal value (n/256)
layer_parallax_Y          equ   1  ; ex: $FF is one pixel move, $00 is not moving, $80 is moving half a pixel ...
layer_vp_offset           equ   2  ; viewport offset from top of the screen (in linear memory bytes) col: 4 px = 1 byte + row: 1 px = 40 bytes
layer_vp_tiles_x          equ   4  ; nb of tiles in viewport rows
layer_vp_tiles_y          equ   5  ; nb of tiles in viewport columns
layer_vp_x_size           equ   6  ; viewport x size in pixel 
layer_vp_y_size           equ   8  ; viewport y size in pixel 
layer_mem_step_x          equ   10 ; nb of linear memory bytes between two tiles in a column
layer_mem_step_y          equ   11 ; nb of linear memory bytes to go from the last tile of a row to the first tile of the next row
layer_tile_size_bitmask_x equ   13 ; bitmask used in sub tile position representation (tile x size : 4px=2, 8px=3, 16px=4, 32px=5, ... 256px=8)
layer_tile_size_bitmask_y equ   14 ; bitmask used in sub tile position representation (tile y size : 4px=2, 8px=3, 16px=4, 32px=5, ... 256px=8)
layer_tile_size_divider_x equ   15 ; number of byte to branch over in the division routine (tile x size : 4px=14, 8px=12, 16px=10, 32px=8, ... 256px=2)
layer_tile_size_divider_y equ   16 ; number of byte to branch over in the division routine (tile y size : 4px=14, 8px=12, 16px=10, 32px=8, ... 256px=2)
layer_tiles_location      equ   17 ; location of tiles index (page and adress for each tiles)
layer_width               equ   19 ; nb of tiles in this layer map rows
layer_height              equ   20 ; nb of tiles in this layer map columns
layer_tilemap             equ   21 ; index of a tile [repeated width*height times]