     0018             (C:\Users\bhrou\gi):00001         Builder_End_Page equ 24
     0555             (C:\Users\bhrou\gi):00002         Builder_Progress_Step equ 1365
                      (C:\Users\bhrou\gi):00003         
                      (C:\Users\bhrou\gi):00004                 opt   c,ct
                      (C:\Users\bhrou\gi):00005                 
                      (C:\Users\bhrou\gi):00006                 ********************************************************************************
                      (C:\Users\bhrou\gi):00007                 * T2Loader (TO8 Thomson) - Benoit Rousseau 2021
                      (C:\Users\bhrou\gi):00008                 * ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00009                 * Changement disquettes SDDRIVE : Daniel Coulom
                      (C:\Users\bhrou\gi):00010                 * Lib. MEGAROM T.2 : Prehisto
                      (C:\Users\bhrou\gi):00011                 *
                      (C:\Users\bhrou\gi):00012                 * premiere version tres rudimentaire
                      (C:\Users\bhrou\gi):00013                 * lecture de 4 pistes x 16 secteurs pour une page
                      (C:\Users\bhrou\gi):00014                 * 2x64 pistes par disquette = 32 pages chargees
                      (C:\Users\bhrou\gi):00015                 * il faut donc 4 disquettes pour 128 pages
                      (C:\Users\bhrou\gi):00016                 * 16 pistes par face inutiles sur chacune des 4 disquettes
                      (C:\Users\bhrou\gi):00017                 * lecture des pistes de 16 a 79 face 0 puis 16 a 79 face 1
                      (C:\Users\bhrou\gi):00018                 * la piste 0 contient le boot et ce code de chargement
                      (C:\Users\bhrou\gi):00019                 * pour chaque page lecture des secteurs de 1 a 16
                      (C:\Users\bhrou\gi):00020                 * pas d'entrelacement car les donnees sont chargees depuis SDDRIVE
                      (C:\Users\bhrou\gi):00021                 ********************************************************************************
                      (C:\Users\bhrou\gi):00022                 
                      (C:\Users\bhrou\gi):00023                 * ===========================================================================
                      (C:\Users\bhrou\gi):00024                 * TO8 Registers
                      (C:\Users\bhrou\gi):00025                 * ===========================================================================
                      (C:\Users\bhrou\gi):00026                 
     6049             (C:\Users\bhrou\gi):00027                 dk_drive                    equ $6049
     604A             (C:\Users\bhrou\gi):00028                 dk_track                      equ $604A
     604B             (C:\Users\bhrou\gi):00029                 dk_track_lsb                     equ $604B
     604C             (C:\Users\bhrou\gi):00030                 dk_sector                    equ $604C
     604F             (C:\Users\bhrou\gi):00031                 dk_write_location                equ $604F
                      (C:\Users\bhrou\gi):00032                 
                      (C:\Users\bhrou\gi):00033                         org   $6300
6300 10CE9FFF         (C:\Users\bhrou\gi):00034 [4]     4               lds   #$9FFF                   ; reinit de la pile systeme
                      (C:\Users\bhrou\gi):00035                         
6304 8602             (C:\Users\bhrou\gi):00036 [2]     6               lda   #2                       ; page video
6306 B7E7E5           (C:\Users\bhrou\gi):00037 [5]     11              sta   $E7E5                    ; selection de la page en RAM Donnees (A000-DFFF)        
                      (C:\Users\bhrou\gi):00038                         
6309 8E0000           (C:\Users\bhrou\gi):00039 [3]     14              ldx   #$0000
630C BD651D           (C:\Users\bhrou\gi):00040 [8]     22              jsr   ClearDataMem
630F BD65FD           (C:\Users\bhrou\gi):00041 [8]     30              jsr   WaitOffScreen
                      (C:\Users\bhrou\gi):00042                         
                      (C:\Users\bhrou\gi):00043                         ; Couleur de la progress bar
                      (C:\Users\bhrou\gi):00044                         
6312 8602             (C:\Users\bhrou\gi):00045 [2]     32              lda   #$02
6314 B7E7DB           (C:\Users\bhrou\gi):00046 [5]     37              sta   $E7DB                    * selectionne l'indice de couleur a ecrire
6317 CC0444           (C:\Users\bhrou\gi):00047 [3]     40              ldd   #$0444
631A F7E7DA           (C:\Users\bhrou\gi):00048 [5]     45              stb   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
631D B7E7DA           (C:\Users\bhrou\gi):00049 [5]     50              sta   $E7DA                    * positionne la nouvelle couleur (Bleu)        
                      (C:\Users\bhrou\gi):00050                         
                      (C:\Users\bhrou\gi):00051                         ; Couleur du fond de la progress bar
                      (C:\Users\bhrou\gi):00052                         
6320 8604             (C:\Users\bhrou\gi):00053 [2]     52              lda   #$04
6322 B7E7DB           (C:\Users\bhrou\gi):00054 [5]     57              sta   $E7DB                    * selectionne l'indice de couleur a ecrire
6325 CC0008           (C:\Users\bhrou\gi):00055 [3]     60              ldd   #$0008
6328 F7E7DA           (C:\Users\bhrou\gi):00056 [5]     65              stb   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
632B B7E7DA           (C:\Users\bhrou\gi):00057 [5]     70              sta   $E7DA                    * positionne la nouvelle couleur (Bleu)  
                      (C:\Users\bhrou\gi):00058                         
632E BD659E           (C:\Users\bhrou\gi):00059 [8]     78              jsr   InitProgress
                      (C:\Users\bhrou\gi):00060                         
6331 8680             (C:\Users\bhrou\gi):00061 [2]     80              lda   #$80
6333 B7E7DD           (C:\Users\bhrou\gi):00062 [5]     85              sta   $E7DD                    ; affiche la page 2 a l'ecran        
                      (C:\Users\bhrou\gi):00063                         
6336 8604             (C:\Users\bhrou\gi):00064 [2]     87              lda   #4                       ; page memoire buffer pour lecture disquette
6338 B7E7E5           (C:\Users\bhrou\gi):00065 [5]     92              sta   $E7E5                    ; selection de la page en RAM Donnees (A000-DFFF)
                      (C:\Users\bhrou\gi):00066                         
633B BD64DF           (C:\Users\bhrou\gi):00067 [8]     100             jsr   ENM7                     ; rend la MEGAROM T.2 visible
633E BD6451           (C:\Users\bhrou\gi):00068 [8]     108             jsr   ERASE                    ; effacement complet de la MEGAROM T.2
6341 102B0083         (C:\Users\bhrou\gi):00069 [5+?]   113             lbmi  EraseError               ; verification complete de la ROM
6345                  (C:\Users\bhrou\gi):00070                 respawn        
6345 BD65FD           (C:\Users\bhrou\gi):00071 [8]     121             jsr   WaitOffScreen
                      (C:\Users\bhrou\gi):00072                         
                      (C:\Users\bhrou\gi):00073                         ; Couleur du fond de la progress bar
                      (C:\Users\bhrou\gi):00074                         
6348 8604             (C:\Users\bhrou\gi):00075 [2]     123             lda   #$04
634A B7E7DB           (C:\Users\bhrou\gi):00076 [5]     128             sta   $E7DB                    * selectionne l'indice de couleur a ecrire
634D CC0AAA           (C:\Users\bhrou\gi):00077 [3]     131             ldd   #$0AAA
6350 F7E7DA           (C:\Users\bhrou\gi):00078 [5]     136             stb   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
6353 B7E7DA           (C:\Users\bhrou\gi):00079 [5]     141             sta   $E7DA                    * positionne la nouvelle couleur (Bleu)          
                      (C:\Users\bhrou\gi):00080                         
     60               (C:\Users\bhrou\gi):00081                         setdp $60
6356 8660             (C:\Users\bhrou\gi):00082 [2]     143             lda   #$60
6358 1F8B             (C:\Users\bhrou\gi):00083 [6]     149             tfr   a,dp                     ; positionne la direct page a 60
                      (C:\Users\bhrou\gi):00084                 
635A CC0010           (C:\Users\bhrou\gi):00085 [3]     152             ldd   #$0010                   ; init positionnement lecture disquette
635D 9749             (C:\Users\bhrou\gi):00086 [4]     156             sta   <dk_drive
635F DD4A             (C:\Users\bhrou\gi):00087 [5]     161             std   <dk_track
6361 C601             (C:\Users\bhrou\gi):00088 [2]     163             ldb   #$01
6363 D74C             (C:\Users\bhrou\gi):00089 [4]     167             stb   <dk_sector              ; secteur (1-16)        
                      (C:\Users\bhrou\gi):00090                 
6365                  (C:\Users\bhrou\gi):00091                 RL_Continue
6365 CCA000           (C:\Users\bhrou\gi):00092 [3]     170             ldd   #$A000                   ; le buffer DKCO est toujours positionne a $A000
6368 DD4F             (C:\Users\bhrou\gi):00093 [5]     175             std   <dk_write_location
                      (C:\Users\bhrou\gi):00094                 
636A 8602             (C:\Users\bhrou\gi):00095 [2]     177             lda   #$02
636C 9748             (C:\Users\bhrou\gi):00096 [4]     181             sta   <$6048                   ; DK.OPC $02 Operation - lecture d'un secteur
636E                  (C:\Users\bhrou\gi):00097                 RL_DKCO
636E BDE82A           (C:\Users\bhrou\gi):00098 [8]     189             jsr   $E82A                    ; DKCO Appel Moniteur - lecture d'un secteur
6371 0C4C             (C:\Users\bhrou\gi):00099 [6]     195             inc   <dk_sector              ; increment du registre Moniteur DK.SEC
6373 964C             (C:\Users\bhrou\gi):00100 [4]     199             lda   <dk_sector              ; chargement de DK.SEC
6375 8110             (C:\Users\bhrou\gi):00101 [2]     201             cmpa  #$10                     ; si DK.SEC est inferieur ou egal a 16
6377 2306             (C:\Users\bhrou\gi):00102 [3]     204             bls   RL_DKContinue            ; on continue le traitement
6379 8601             (C:\Users\bhrou\gi):00103 [2]     206             lda   #$01                     ; sinon on a depasse le secteur 16
637B 974C             (C:\Users\bhrou\gi):00104 [4]     210             sta   <dk_sector              ; positionnement du secteur a 1
637D 0C4B             (C:\Users\bhrou\gi):00105 [6]     216             inc   <dk_track_lsb               ; increment du registre Moniteur DK.TRK
637F                  (C:\Users\bhrou\gi):00106                 RL_DKContinue                            
637F 0C4F             (C:\Users\bhrou\gi):00107 [6]     222             inc   <dk_write_location          ; increment de 256 octets de la zone a ecrire DK.BUF
6381 9E4F             (C:\Users\bhrou\gi):00108 [5]     227             ldx   <dk_write_location          ; chargement de la zone a ecrire DK.BUF
6383 8CDF00           (C:\Users\bhrou\gi):00109 [4]     231             cmpx  #$DF00                   ; test debut du dernier bloc de 256 octets a ecrire
6386 23E6             (C:\Users\bhrou\gi):00110 [3]     234             bls   RL_DKCO                  ; si DK.BUF inferieur ou egal a la limite alors DKCO
6388                  (C:\Users\bhrou\gi):00111                 RL_Page
6388 C601             (C:\Users\bhrou\gi):00112 [2]     236             ldb   #$01                     ; repositionnement pour chargement de la page RAM suivante
638A D74C             (C:\Users\bhrou\gi):00113 [4]     240             stb   <dk_sector 
                      (C:\Users\bhrou\gi):00114                 
638C 964B             (C:\Users\bhrou\gi):00115 [4]     244             lda   <dk_track_lsb
638E 8150             (C:\Users\bhrou\gi):00116 [2]     246             cmpa  #$50
6390 2614             (C:\Users\bhrou\gi):00117 [3]     249             bne   RL_Copy
6392 CC0010           (C:\Users\bhrou\gi):00118 [3]     252             ldd   #$0010
6395 DD4A             (C:\Users\bhrou\gi):00119 [5]     257             std   <dk_track
6397 0C49             (C:\Users\bhrou\gi):00120 [6]     263             inc   <dk_drive
6399 9649             (C:\Users\bhrou\gi):00121 [4]     267             lda   <dk_drive
639B 8104             (C:\Users\bhrou\gi):00122 [2]     269             cmpa  #$04
639D 2607             (C:\Users\bhrou\gi):00123 [3]     272             bne   RL_Copy
639F 8600             (C:\Users\bhrou\gi):00124 [2]     274             lda   #$00
63A1 9749             (C:\Users\bhrou\gi):00125 [4]     278             sta   <dk_drive
63A3 BD6431           (C:\Users\bhrou\gi):00126 [8]     286             jsr   MoveToNextDisk           ; on change les deux disquettes par les suivantes
63A6                  (C:\Users\bhrou\gi):00127                 RL_Copy
63A6 B663C7           (C:\Users\bhrou\gi):00128 [5]     291             lda   cur_ROMPage              ; page destination
63A9 108EA000         (C:\Users\bhrou\gi):00129 [4]     295             ldy   #$A000                   ; debut donnees a copier en ROM
63AD BD6480           (C:\Users\bhrou\gi):00130 [8]     303             jsr   P16K                     ; recopie RAM vers ROM
63B0 BD6507           (C:\Users\bhrou\gi):00131 [8]     311             jsr   C16K                     ; verification des donnees copiees
63B3 263E             (C:\Users\bhrou\gi):00132 [3]     314             bne   WriteError
                      (C:\Users\bhrou\gi):00133                         
63B5 B663C7           (C:\Users\bhrou\gi):00134 [5]     319             lda   cur_ROMPage
63B8 BD6557           (C:\Users\bhrou\gi):00135 [8]     327             jsr   DisplayProgress
                      (C:\Users\bhrou\gi):00136                         
63BB 7C63C7           (C:\Users\bhrou\gi):00137 [7]     334             inc   cur_ROMPage              ; page ROM suivante
63BE B663C7           (C:\Users\bhrou\gi):00138 [5]     339             lda   cur_ROMPage
                      (C:\Users\bhrou\gi):00139                         
63C1 8118             (C:\Users\bhrou\gi):00140 [2]     341             cmpa  #Builder_End_Page
63C3 26A0             (C:\Users\bhrou\gi):00141 [3]     344             bne   RL_Continue
                      (C:\Users\bhrou\gi):00142                         
63C5 2044             (C:\Users\bhrou\gi):00143 [3]     347             bra   RL_END                   ; on a depasse la page 127 => fin   
                      (C:\Users\bhrou\gi):00144                         
63C7 00               (C:\Users\bhrou\gi):00145                 cur_ROMPage fcb   $00
                      (C:\Users\bhrou\gi):00146                 
63C8                  (C:\Users\bhrou\gi):00147                 EraseError
63C8 CC0000           (C:\Users\bhrou\gi):00148 [3]     350             ldd   #0
63CB BD64F3           (C:\Users\bhrou\gi):00149 [8]     358     @a      jsr   T16K
63CE 260B             (C:\Users\bhrou\gi):00150 [3]     361             bne   EraseError_2
63D0 5C               (C:\Users\bhrou\gi):00151 [2]     363             incb           
63D1 C180             (C:\Users\bhrou\gi):00152 [2]     365             cmpb  #$80
63D3 1027FF6E         (C:\Users\bhrou\gi):00153 [5+?]   370             lbeq   respawn
63D7 1F98             (C:\Users\bhrou\gi):00154 [6]     376             tfr   b,a
63D9 20F0             (C:\Users\bhrou\gi):00155 [3]     379             bra   @a
                      (C:\Users\bhrou\gi):00156                         
63DB                  (C:\Users\bhrou\gi):00157                 EraseError_2
63DB BD65FD           (C:\Users\bhrou\gi):00158 [8]     387             jsr   WaitOffScreen
63DE 8604             (C:\Users\bhrou\gi):00159 [2]     389             lda   #$04
63E0 B7E7DB           (C:\Users\bhrou\gi):00160 [5]     394             sta   $E7DB                    * selectionne l'indice de couleur a ecrire
63E3 CC0F0F           (C:\Users\bhrou\gi):00161 [3]     397             ldd   #$0F0F
63E6 F7E7DA           (C:\Users\bhrou\gi):00162 [5]     402             stb   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
63E9 B7E7DA           (C:\Users\bhrou\gi):00163 [5]     407             sta   $E7DA                    * positionne la nouvelle couleur (Bleu)
                      (C:\Users\bhrou\gi):00164                   
63EC 8600             (C:\Users\bhrou\gi):00165 [2]     409             lda   #$00
63EE BD64C8           (C:\Users\bhrou\gi):00166 [8]     417             jsr   SETPAG                   * ROM page a 0 pour la voir apres reboot
63F1 20FE             (C:\Users\bhrou\gi):00167 [3]     420             bra   *
                      (C:\Users\bhrou\gi):00168                         
63F3                  (C:\Users\bhrou\gi):00169                 WriteError
63F3 BD65FD           (C:\Users\bhrou\gi):00170 [8]     428             jsr   WaitOffScreen
63F6 8602             (C:\Users\bhrou\gi):00171 [2]     430             lda   #$02
63F8 B7E7DB           (C:\Users\bhrou\gi):00172 [5]     435             sta   $E7DB                    * selectionne l'indice de couleur a ecrire
63FB CC0000           (C:\Users\bhrou\gi):00173 [3]     438             ldd   #$0000
63FE F7E7DA           (C:\Users\bhrou\gi):00174 [5]     443             stb   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
6401 B7E7DA           (C:\Users\bhrou\gi):00175 [5]     448             sta   $E7DA                    * positionne la nouvelle couleur (Bleu)
                      (C:\Users\bhrou\gi):00176                   
6404 8600             (C:\Users\bhrou\gi):00177 [2]     450             lda   #$00
6406 BD64C8           (C:\Users\bhrou\gi):00178 [8]     458             jsr   SETPAG                   * ROM page a 0 pour la voir apres reboot
6409 20FE             (C:\Users\bhrou\gi):00179 [3]     461             bra   *
                      (C:\Users\bhrou\gi):00180                 
640B                  (C:\Users\bhrou\gi):00181                 RL_END
640B 8600             (C:\Users\bhrou\gi):00182 [2]     463             lda   #$00
640D BD64C8           (C:\Users\bhrou\gi):00183 [8]     471             jsr   SETPAG                   * ROM page a 0 pour la voir apres reboot
6410 BD65FD           (C:\Users\bhrou\gi):00184 [8]     479             jsr   WaitOffScreen        
6413 8602             (C:\Users\bhrou\gi):00185 [2]     481             lda   #$02
6415 B7E7DB           (C:\Users\bhrou\gi):00186 [5]     486             sta   $E7DB                    * selectionne l'indice de couleur a ecrire
6418 CC0080           (C:\Users\bhrou\gi):00187 [3]     489             ldd   #$0080
641B F7E7DA           (C:\Users\bhrou\gi):00188 [5]     494             stb   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
641E B7E7DA           (C:\Users\bhrou\gi):00189 [5]     499             sta   $E7DA                    * positionne la nouvelle couleur (Bleu)
6421 8604             (C:\Users\bhrou\gi):00190 [2]     501             lda   #$04
6423 B7E7DB           (C:\Users\bhrou\gi):00191 [5]     506             sta   $E7DB                    * selectionne l'indice de couleur a ecrire
6426 CC0080           (C:\Users\bhrou\gi):00192 [3]     509             ldd   #$0080
6429 F7E7DA           (C:\Users\bhrou\gi):00193 [5]     514             stb   $E7DA                    * positionne la nouvelle couleur (Vert et Rouge)
642C B7E7DA           (C:\Users\bhrou\gi):00194 [5]     519             sta   $E7DA                    * positionne la nouvelle couleur (Bleu)          
642F 20FE             (C:\Users\bhrou\gi):00195 [3]     522             bra   *
                      (C:\Users\bhrou\gi):00196                 
                      (C:\Users\bhrou\gi):00197                 * ===========================================================================
                      (C:\Users\bhrou\gi):00198                 * Ext. Libraries
                      (C:\Users\bhrou\gi):00199                 * ===========================================================================
                      (C:\Users\bhrou\gi):00200                 
                      (C:\Users\bhrou\gi):00201                 ;-------------------------------------------
                      (C:\Users\bhrou\gi):00202                 ; Changement disquette SDDRIVE
                      (C:\Users\bhrou\gi):00203                 ; Modifie le LBA0 pour pointer 4 faces de
                      (C:\Users\bhrou\gi):00204                 ; disquettes plus loin dans la carte SD.
                      (C:\Users\bhrou\gi):00205                 ; Type de carte :
                      (C:\Users\bhrou\gi):00206                 ; - b7 de $6057 (2021.02.11 et suivants)
                      (C:\Users\bhrou\gi):00207                 ; - b0 de $6057 (2018.07.02 et suivants)
                      (C:\Users\bhrou\gi):00208                 ; SD_LB0 :  4 octets en $6051
                      (C:\Users\bhrou\gi):00209                 ; Decalage 4*80*16=5120 secteurs
                      (C:\Users\bhrou\gi):00210                 ; Decalage carte SDHC : $1400 (secteurs)
                      (C:\Users\bhrou\gi):00211                 ; Decalage carte SDSC : $280000 (octets)
                      (C:\Users\bhrou\gi):00212                 ;-------------------------------------------   
6431                  (C:\Users\bhrou\gi):00213                 MoveToNextDisk
6431 9657             (C:\Users\bhrou\gi):00214 [4]     526       LDA   <$57           ;type de carte 
6433 2714             (C:\Users\bhrou\gi):00215 [3]     529       BEQ   SDSC           ;0=capacite standard (avant 2021.02.11)
6435 2B03             (C:\Users\bhrou\gi):00216 [3]     532       BMI   SDHC           ;b7=1 haute capacite (a partir de 2021.02.11)
6437 4A               (C:\Users\bhrou\gi):00217 [2]     534       DECA                 ;1=haute capacite (avant 2021.02.11)       
6438 260F             (C:\Users\bhrou\gi):00218 [3]     537       BNE   SDSC           ;sinon capacite standard
                      (C:\Users\bhrou\gi):00219                 
643A                  (C:\Users\bhrou\gi):00220                 SDHC
643A DC53             (C:\Users\bhrou\gi):00221 [5]     542       LDD   <$53           ;poids faible LBA0   
643C 8B14             (C:\Users\bhrou\gi):00222 [2]     544       ADDA  #$14           ;ajout 5120 secteurs
643E DD53             (C:\Users\bhrou\gi):00223 [5]     549       STD   <$53           ;stockage
6440 DC51             (C:\Users\bhrou\gi):00224 [5]     554       LDD   <$51           ;poids fort LBA0 
6442 C900             (C:\Users\bhrou\gi):00225 [2]     556       ADCB  #$00           ;ajout retenue 
6444 8900             (C:\Users\bhrou\gi):00226 [2]     558       ADCA  #$00           ;ajout retenue
6446 DD51             (C:\Users\bhrou\gi):00227 [5]     563       STD   <$51           ;stockage D
6448 39               (C:\Users\bhrou\gi):00228 [5]     568       RTS
                      (C:\Users\bhrou\gi):00229                 
6449                  (C:\Users\bhrou\gi):00230                 SDSC
6449 DC51             (C:\Users\bhrou\gi):00231 [5]     573       LDD   <$51           ;poids fort LBA0 
644B C30028           (C:\Users\bhrou\gi):00232 [4]     577       ADDD  #$0028         ;ajout decalage
644E DD51             (C:\Users\bhrou\gi):00233 [5]     582       STD   <$51           ;stockage D
6450 39               (C:\Users\bhrou\gi):00234 [5]     587       RTS     
                      (C:\Users\bhrou\gi):00235                 
                      (C:\Users\bhrou\gi):00236                 * ERASE
                      (C:\Users\bhrou\gi):00237                 * Effacement complet de la flash
                      (C:\Users\bhrou\gi):00238                 * In  : néant
                      (C:\Users\bhrou\gi):00239                 * Out : CC.N=1 si l'opération a échoué
                      (C:\Users\bhrou\gi):00240                 * Mod : néant
                      (C:\Users\bhrou\gi):00241                 
     6451             (C:\Users\bhrou\gi):00242                 ERASE  EQU    *
6451 3402             (C:\Users\bhrou\gi):00243 [6]     593            PSHS   A
6453 86AA             (C:\Users\bhrou\gi):00244 [2]     595            LDA    #$AA
6455 B70555           (C:\Users\bhrou\gi):00245 [5]     600            STA    $0555
6458 8655             (C:\Users\bhrou\gi):00246 [2]     602            LDA    #$55
645A B702AA           (C:\Users\bhrou\gi):00247 [5]     607            STA    $02AA
645D 8680             (C:\Users\bhrou\gi):00248 [2]     609            LDA    #$80
645F B70555           (C:\Users\bhrou\gi):00249 [5]     614            STA    $0555
6462 86AA             (C:\Users\bhrou\gi):00250 [2]     616            LDA    #$AA
6464 B70555           (C:\Users\bhrou\gi):00251 [5]     621            STA    $0555
6467 8655             (C:\Users\bhrou\gi):00252 [2]     623            LDA    #$55
6469 B702AA           (C:\Users\bhrou\gi):00253 [5]     628            STA    $02AA
646C 8610             (C:\Users\bhrou\gi):00254 [2]     630            LDA    #$10
646E B70555           (C:\Users\bhrou\gi):00255 [5]     635            STA    $0555
                      (C:\Users\bhrou\gi):00256                      
6471 B60000           (C:\Users\bhrou\gi):00257 [5]     640     WAITS  LDA    $0000
6474 B80000           (C:\Users\bhrou\gi):00258 [5]     645            EORA   $0000
6477 26F8             (C:\Users\bhrou\gi):00259 [3]     648            BNE    WAITS
6479 B60000           (C:\Users\bhrou\gi):00260 [5]     653            LDA    $0000
647C 48               (C:\Users\bhrou\gi):00261 [2]     655            ASLA
647D 48               (C:\Users\bhrou\gi):00262 [2]     657            ASLA
647E 3582             (C:\Users\bhrou\gi):00263 [8]     665            PULS   A,PC
                      (C:\Users\bhrou\gi):00264                   
                      (C:\Users\bhrou\gi):00265                 * P16K
                      (C:\Users\bhrou\gi):00266                 * Programme une page sans vérification
                      (C:\Users\bhrou\gi):00267                 * In : A = No. de page
                      (C:\Users\bhrou\gi):00268                 *      Y = ptr vers la source en RAM
                      (C:\Users\bhrou\gi):00269                 * Out: néant
                      (C:\Users\bhrou\gi):00270                 * Mod: néant
                      (C:\Users\bhrou\gi):00271                 
     6480             (C:\Users\bhrou\gi):00272                 P16K   EQU    *
6480 3402             (C:\Users\bhrou\gi):00273 [6]     671            PSHS   A
6482 8602             (C:\Users\bhrou\gi):00274 [2]     673            LDA    #$02
6484 BD64B1           (C:\Users\bhrou\gi):00275 [8]     681            JSR    SETMOD
6487 3502             (C:\Users\bhrou\gi):00276 [6]     687            PULS   A
6489 BD64C8           (C:\Users\bhrou\gi):00277 [8]     695            JSR    SETPAG
648C 3432             (C:\Users\bhrou\gi):00278 [10]    705            PSHS   A,X,Y
648E 8E0000           (C:\Users\bhrou\gi):00279 [3]     708            LDX    #$0000
                      (C:\Users\bhrou\gi):00280                 
6491 86AA             (C:\Users\bhrou\gi):00281 [2]     710     PROG   LDA    #$AA
6493 B70555           (C:\Users\bhrou\gi):00282 [5]     715            STA    $555
6496 8655             (C:\Users\bhrou\gi):00283 [2]     717            LDA    #$55
6498 B702AA           (C:\Users\bhrou\gi):00284 [5]     722            STA    $2AA
649B 86A0             (C:\Users\bhrou\gi):00285 [2]     724            LDA    #$A0
649D B70555           (C:\Users\bhrou\gi):00286 [5]     729            STA    $555
64A0 A6A0             (C:\Users\bhrou\gi):00287 [6]     735            LDA    ,Y+
64A2 A780             (C:\Users\bhrou\gi):00288 [6]     741            STA    ,X+
                      (C:\Users\bhrou\gi):00289                 
64A4 3D               (C:\Users\bhrou\gi):00290 [11]    752            MUL            Pour attendre
64A5 8C4000           (C:\Users\bhrou\gi):00291 [4]     756            CMPX   #$4000
64A8 25E7             (C:\Users\bhrou\gi):00292 [3]     759            BLO    PROG
                      (C:\Users\bhrou\gi):00293                 
64AA 86F0             (C:\Users\bhrou\gi):00294 [2]     761            LDA    #$F0
64AC B70555           (C:\Users\bhrou\gi):00295 [5]     766            STA    $0555
64AF 35B2             (C:\Users\bhrou\gi):00296 [12]    778            PULS   Y,X,A,PC   
                      (C:\Users\bhrou\gi):00297                        
                      (C:\Users\bhrou\gi):00298                 * SETMOD
                      (C:\Users\bhrou\gi):00299                 * Sélection du mode de fonctionnement
                      (C:\Users\bhrou\gi):00300                 * In  : A = Mode
                      (C:\Users\bhrou\gi):00301                 * Out : néant
                      (C:\Users\bhrou\gi):00302                 * Mod : néant
                      (C:\Users\bhrou\gi):00303                 
     64B1             (C:\Users\bhrou\gi):00304                 SETMOD EQU    *
64B1 3402             (C:\Users\bhrou\gi):00305 [6]     784            PSHS   A
64B3 86AA             (C:\Users\bhrou\gi):00306 [2]     786            LDA    #$AA
64B5 B70555           (C:\Users\bhrou\gi):00307 [5]     791            STA    $0555
64B8 8655             (C:\Users\bhrou\gi):00308 [2]     793            LDA    #$55
64BA B702AA           (C:\Users\bhrou\gi):00309 [5]     798            STA    $02AA
64BD 86B0             (C:\Users\bhrou\gi):00310 [2]     800            LDA    #$B0
64BF B70555           (C:\Users\bhrou\gi):00311 [5]     805            STA    $0555
64C2 3502             (C:\Users\bhrou\gi):00312 [6]     811            PULS   A
64C4 B70556           (C:\Users\bhrou\gi):00313 [5]     816            STA    $0556
64C7 39               (C:\Users\bhrou\gi):00314 [5]     821            RTS       
                      (C:\Users\bhrou\gi):00315                        
                      (C:\Users\bhrou\gi):00316                 * SETPAG
                      (C:\Users\bhrou\gi):00317                 * Sélection de la page entre 0 et 127
                      (C:\Users\bhrou\gi):00318                 * In  : A = No. de page
                      (C:\Users\bhrou\gi):00319                 * Out : néant
                      (C:\Users\bhrou\gi):00320                 * Mod : néant
                      (C:\Users\bhrou\gi):00321                 
     64C8             (C:\Users\bhrou\gi):00322                 SETPAG EQU    *
64C8 3402             (C:\Users\bhrou\gi):00323 [6]     827            PSHS   A
64CA 86AA             (C:\Users\bhrou\gi):00324 [2]     829            LDA    #$AA
64CC B70555           (C:\Users\bhrou\gi):00325 [5]     834            STA    $0555
64CF 8655             (C:\Users\bhrou\gi):00326 [2]     836            LDA    #$55
64D1 B702AA           (C:\Users\bhrou\gi):00327 [5]     841            STA    $02AA
64D4 86C0             (C:\Users\bhrou\gi):00328 [2]     843            LDA    #$C0
64D6 B70555           (C:\Users\bhrou\gi):00329 [5]     848            STA    $0555
64D9 3502             (C:\Users\bhrou\gi):00330 [6]     854            PULS   A
64DB B70555           (C:\Users\bhrou\gi):00331 [5]     859            STA    $0555
64DE 39               (C:\Users\bhrou\gi):00332 [5]     864            RTS       
                      (C:\Users\bhrou\gi):00333                        
                      (C:\Users\bhrou\gi):00334                 * ENM7
                      (C:\Users\bhrou\gi):00335                 * Rend la MEMO7 visible sur TO8/8D/9/9+
                      (C:\Users\bhrou\gi):00336                 * In  : néant
                      (C:\Users\bhrou\gi):00337                 * Out : néant
                      (C:\Users\bhrou\gi):00338                 * Mod : néant
                      (C:\Users\bhrou\gi):00339                 
     64DF             (C:\Users\bhrou\gi):00340                 ENM7   EQU    *
64DF 3402             (C:\Users\bhrou\gi):00341 [6]     870            PSHS   A
64E1 B6E7C3           (C:\Users\bhrou\gi):00342 [5]     875            LDA    $E7C3
64E4 84FB             (C:\Users\bhrou\gi):00343 [2]     877            ANDA   #$FB
64E6 B7E7C3           (C:\Users\bhrou\gi):00344 [5]     882            STA    $E7C3
                      (C:\Users\bhrou\gi):00345                 
64E9 B6E7E6           (C:\Users\bhrou\gi):00346 [5]     887            LDA    $E7E6
64EC 84DF             (C:\Users\bhrou\gi):00347 [2]     889            ANDA   #$DF
64EE B7E7E6           (C:\Users\bhrou\gi):00348 [5]     894            STA    $E7E6
64F1 3582             (C:\Users\bhrou\gi):00349 [8]     902            PULS   A,PC      
                      (C:\Users\bhrou\gi):00350                        
                      (C:\Users\bhrou\gi):00351                 * T16K
                      (C:\Users\bhrou\gi):00352                 * Vérifie qu'une page est vide
                      (C:\Users\bhrou\gi):00353                 * In  : A = page entre 0 et 127
                      (C:\Users\bhrou\gi):00354                 * Out : A = 0 si la page est vide
                      (C:\Users\bhrou\gi):00355                 * Mod : A
                      (C:\Users\bhrou\gi):00356                 
     64F3             (C:\Users\bhrou\gi):00357                 T16K   EQU    *
64F3 3410             (C:\Users\bhrou\gi):00358 [7]     909            PSHS   X
64F5 BD64C8           (C:\Users\bhrou\gi):00359 [8]     917            JSR    SETPAG
64F8 8E0000           (C:\Users\bhrou\gi):00360 [3]     920            LDX    #$0000
64FB A680             (C:\Users\bhrou\gi):00361 [6]     926     TST1   LDA    ,X+
64FD 4C               (C:\Users\bhrou\gi):00362 [2]     928            INCA
64FE 2605             (C:\Users\bhrou\gi):00363 [3]     931            BNE    TERR
6500 8C4000           (C:\Users\bhrou\gi):00364 [4]     935            CMPX   #$4000
6503 25F6             (C:\Users\bhrou\gi):00365 [3]     938            BLO    TST1
6505 3590             (C:\Users\bhrou\gi):00366 [9]     947     TERR   PULS   X,PC        
                      (C:\Users\bhrou\gi):00367                 
                      (C:\Users\bhrou\gi):00368                 * C16K (Bentoc adaptation du code de préhisto)
                      (C:\Users\bhrou\gi):00369                 * Compare les 16K d'une page avec la RAM
                      (C:\Users\bhrou\gi):00370                 * In  : A = page entre 0 et 127
                      (C:\Users\bhrou\gi):00371                 *       Y = pointeur vers une zone RAM
                      (C:\Users\bhrou\gi):00372                 * Out : CC.Z = 0 si les donnees sont identiques 
                      (C:\Users\bhrou\gi):00373                 * Mod : néant
                      (C:\Users\bhrou\gi):00374                 
     6507             (C:\Users\bhrou\gi):00375                 C16K   EQU    *
6507 3436             (C:\Users\bhrou\gi):00376 [11]    958            PSHS   X,Y,D
6509 BD64C8           (C:\Users\bhrou\gi):00377 [8]     966            JSR    SETPAG
650C 8E0000           (C:\Users\bhrou\gi):00378 [3]     969            LDX    #$0000
650F EC81             (C:\Users\bhrou\gi):00379 [8]     977     CMP1   LDD    ,X++
6511 10A3A1           (C:\Users\bhrou\gi):00380 [10]    987            CMPD   ,Y++
6514 2605             (C:\Users\bhrou\gi):00381 [3]     990            BNE    CRTS    
6516 8C4000           (C:\Users\bhrou\gi):00382 [4]     994            CMPX   #$4000
6519 25F4             (C:\Users\bhrou\gi):00383 [3]     997            BLO    CMP1
651B 35B6             (C:\Users\bhrou\gi):00384 [13]    1010    CRTS   PULS   D,Y,X,PC   
                      (C:\Users\bhrou\gi):00385                        
                      (C:\Users\bhrou\gi):00386                 ********************************************************************************
                      (C:\Users\bhrou\gi):00387                 * Clear memory in data area
                      (C:\Users\bhrou\gi):00388                 ********************************************************************************
                      (C:\Users\bhrou\gi):00389                 
651D                  (C:\Users\bhrou\gi):00390                 ClearDataMem 
651D 3448             (C:\Users\bhrou\gi):00391 [8]     1018            pshs  u,dp
651F 10FF654D         (C:\Users\bhrou\gi):00392 [7]     1025            sts   ClearDataMem_3+2
6523 10CEE000         (C:\Users\bhrou\gi):00393 [4]     1029            lds   #$E000
6527 3384             (C:\Users\bhrou\gi):00394 [4]     1033            leau  ,x
6529 3184             (C:\Users\bhrou\gi):00395 [4]     1037            leay  ,x
652B 1F10             (C:\Users\bhrou\gi):00396 [6]     1043            tfr   x,d
652D 1F8B             (C:\Users\bhrou\gi):00397 [6]     1049            tfr   a,dp
652F                  (C:\Users\bhrou\gi):00398                 ClearDataMem_2
652F 347E             (C:\Users\bhrou\gi):00399 [14]    1063            pshs  u,y,x,dp,b,a
6531 347E             (C:\Users\bhrou\gi):00400 [14]    1077            pshs  u,y,x,dp,b,a
6533 347E             (C:\Users\bhrou\gi):00401 [14]    1091            pshs  u,y,x,dp,b,a
6535 347E             (C:\Users\bhrou\gi):00402 [14]    1105            pshs  u,y,x,dp,b,a
6537 347E             (C:\Users\bhrou\gi):00403 [14]    1119            pshs  u,y,x,dp,b,a
6539 347E             (C:\Users\bhrou\gi):00404 [14]    1133            pshs  u,y,x,dp,b,a
653B 347E             (C:\Users\bhrou\gi):00405 [14]    1147            pshs  u,y,x,dp,b,a
653D 347E             (C:\Users\bhrou\gi):00406 [14]    1161            pshs  u,y,x,dp,b,a
653F 347E             (C:\Users\bhrou\gi):00407 [14]    1175            pshs  u,y,x,dp,b,a
6541 3478             (C:\Users\bhrou\gi):00408 [12]    1187            pshs  u,y,x,dp
6543 118CA010         (C:\Users\bhrou\gi):00409 [5]     1192            cmps  #$A010                        
6547 26E6             (C:\Users\bhrou\gi):00410 [3]     1195            bne   ClearDataMem_2
6549 33E4             (C:\Users\bhrou\gi):00411 [4]     1199            leau  ,s        
654B                  (C:\Users\bhrou\gi):00412                 ClearDataMem_3        
654B 10CE0000         (C:\Users\bhrou\gi):00413 [4]     1203            lds   #$0000        ; start of memory should not be written with S as an index because of IRQ        
654F 3636             (C:\Users\bhrou\gi):00414 [11]    1214            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
6551 3636             (C:\Users\bhrou\gi):00415 [11]    1225            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine (here 16 bytes of margin)
6553 3616             (C:\Users\bhrou\gi):00416 [9]     1234            pshu  d,x
6555 35C8             (C:\Users\bhrou\gi):00417 [10]    1244            puls  dp,u,pc      
                      (C:\Users\bhrou\gi):00418                         
                      (C:\Users\bhrou\gi):00419                 ********************************************************************************
                      (C:\Users\bhrou\gi):00420                 * Display progress bar
                      (C:\Users\bhrou\gi):00421                 * a: value btw 0-127 (start)
                      (C:\Users\bhrou\gi):00422                 ********************************************************************************        
                      (C:\Users\bhrou\gi):00423                         
6557                  (C:\Users\bhrou\gi):00424                 DisplayProgress
6557 C602             (C:\Users\bhrou\gi):00425 [2]     1246            ldb   #2                       ; page video
6559 F7E7E5           (C:\Users\bhrou\gi):00426 [5]     1251            stb   $E7E5                    ; selection de la page en RAM Donnees (A000-DFFF)        
                      (C:\Users\bhrou\gi):00427                         
655C FC659C           (C:\Users\bhrou\gi):00428 [6]     1257            ldd   end_value
655F FD65DB           (C:\Users\bhrou\gi):00429 [6]     1263            std   progress_value
6562 C30555           (C:\Users\bhrou\gi):00430 [4]     1267            addd  #Builder_Progress_Step
6565 FD659C           (C:\Users\bhrou\gi):00431 [6]     1273            std   end_value
6568 FC65DB           (C:\Users\bhrou\gi):00432 [6]     1279            ldd   progress_value
                      (C:\Users\bhrou\gi):00433                         
656B                  (C:\Users\bhrou\gi):00434                 DP_Loop
656B 8B40             (C:\Users\bhrou\gi):00435 [2]     1281            adda  #$40
656D B76576           (C:\Users\bhrou\gi):00436 [5]     1286            sta   DP_RestoreA+1
6570 C67F             (C:\Users\bhrou\gi):00437 [2]     1288            ldb   #$7F
6572 BD65DD           (C:\Users\bhrou\gi):00438 [8]     1296            jsr   DRS_XYToAddress
                      (C:\Users\bhrou\gi):00439                         
6575                  (C:\Users\bhrou\gi):00440                 DP_RestoreA                            ; (dynamic)
6575 8600             (C:\Users\bhrou\gi):00441 [2]     1298            lda   #$00
6577 44               (C:\Users\bhrou\gi):00442 [2]     1300            lsra
6578 2508             (C:\Users\bhrou\gi):00443 [3]     1303            bcs   DP_Odd   
657A A684             (C:\Users\bhrou\gi):00444 [4]     1307            lda   ,x
657C 840F             (C:\Users\bhrou\gi):00445 [2]     1309            anda  #$0F
657E 8A10             (C:\Users\bhrou\gi):00446 [2]     1311            ora   #$10
6580 2006             (C:\Users\bhrou\gi):00447 [3]     1314            bra   DP_Continue
6582                  (C:\Users\bhrou\gi):00448                 DP_Odd
6582 A684             (C:\Users\bhrou\gi):00449 [4]     1318            lda   ,x        
6584 84F0             (C:\Users\bhrou\gi):00450 [2]     1320            anda  #$F0
6586 8A01             (C:\Users\bhrou\gi):00451 [2]     1322            ora   #$01
6588                  (C:\Users\bhrou\gi):00452                 DP_Continue
6588 A784             (C:\Users\bhrou\gi):00453 [4]     1326            sta   ,x   
                      (C:\Users\bhrou\gi):00454                         
658A B665DB           (C:\Users\bhrou\gi):00455 [5]     1331            lda   progress_value
658D 4C               (C:\Users\bhrou\gi):00456 [2]     1333            inca
658E B765DB           (C:\Users\bhrou\gi):00457 [5]     1338            sta   progress_value
6591 B1659C           (C:\Users\bhrou\gi):00458 [5]     1343            cmpa  end_value
6594 26D5             (C:\Users\bhrou\gi):00459 [3]     1346            bne   DP_Loop     
                      (C:\Users\bhrou\gi):00460                         
6596 8604             (C:\Users\bhrou\gi):00461 [2]     1348            lda   #4                       ; page video
6598 B7E7E5           (C:\Users\bhrou\gi):00462 [5]     1353            sta   $E7E5                    ; selection de la page en RAM Donnees (A000-DFFF)            
659B 39               (C:\Users\bhrou\gi):00463 [5]     1358            rts
                      (C:\Users\bhrou\gi):00464                         
659C 0000             (C:\Users\bhrou\gi):00465                 end_value fdb $0000   
                      (C:\Users\bhrou\gi):00466                 
                      (C:\Users\bhrou\gi):00467                 ********************************************************************************
                      (C:\Users\bhrou\gi):00468                 * Init progress bar
                      (C:\Users\bhrou\gi):00469                 * write all 128 values
                      (C:\Users\bhrou\gi):00470                 ********************************************************************************    
                      (C:\Users\bhrou\gi):00471                 
659E                  (C:\Users\bhrou\gi):00472                 InitProgress
659E C602             (C:\Users\bhrou\gi):00473 [2]     1360            ldb   #2                       ; page video
65A0 F7E7E5           (C:\Users\bhrou\gi):00474 [5]     1365            stb   $E7E5                    ; selection de la page en RAM Donnees (A000-DFFF)
                      (C:\Users\bhrou\gi):00475                         
65A3 8600             (C:\Users\bhrou\gi):00476 [2]     1367            lda   #$00
65A5 B765DB           (C:\Users\bhrou\gi):00477 [5]     1372            sta   progress_value
                      (C:\Users\bhrou\gi):00478                                 
65A8                  (C:\Users\bhrou\gi):00479                 IP_Loop        
65A8 8B40             (C:\Users\bhrou\gi):00480 [2]     1374            adda  #$40
65AA B765B3           (C:\Users\bhrou\gi):00481 [5]     1379            sta   IP_RestoreA+1
65AD C67F             (C:\Users\bhrou\gi):00482 [2]     1381            ldb   #$7F
65AF BD65DD           (C:\Users\bhrou\gi):00483 [8]     1389            jsr   DRS_XYToAddress
65B2                  (C:\Users\bhrou\gi):00484                 IP_RestoreA                            ; (dynamic)
65B2 8600             (C:\Users\bhrou\gi):00485 [2]     1391            lda   #$00
65B4 44               (C:\Users\bhrou\gi):00486 [2]     1393            lsra
65B5 2508             (C:\Users\bhrou\gi):00487 [3]     1396            bcs   IP_Odd   
65B7 A684             (C:\Users\bhrou\gi):00488 [4]     1400            lda   ,x
65B9 840F             (C:\Users\bhrou\gi):00489 [2]     1402            anda  #$0F
65BB 8A20             (C:\Users\bhrou\gi):00490 [2]     1404            ora   #$20
65BD 2006             (C:\Users\bhrou\gi):00491 [3]     1407            bra   IP_Continue
65BF                  (C:\Users\bhrou\gi):00492                 IP_Odd
65BF A684             (C:\Users\bhrou\gi):00493 [4]     1411            lda   ,x        
65C1 84F0             (C:\Users\bhrou\gi):00494 [2]     1413            anda  #$F0
65C3 8A02             (C:\Users\bhrou\gi):00495 [2]     1415            ora   #$02
65C5                  (C:\Users\bhrou\gi):00496                 IP_Continue
65C5 A784             (C:\Users\bhrou\gi):00497 [4]     1419            sta   ,x     
                      (C:\Users\bhrou\gi):00498                         
65C7 B665DB           (C:\Users\bhrou\gi):00499 [5]     1424            lda   progress_value
65CA 4C               (C:\Users\bhrou\gi):00500 [2]     1426            inca
65CB B765DB           (C:\Users\bhrou\gi):00501 [5]     1431            sta   progress_value
65CE 2AD8             (C:\Users\bhrou\gi):00502 [3]     1434            bpl   IP_Loop     
                      (C:\Users\bhrou\gi):00503                         
65D0 8604             (C:\Users\bhrou\gi):00504 [2]     1436            lda   #4                       ; page de travail
65D2 B7E7E5           (C:\Users\bhrou\gi):00505 [5]     1441            sta   $E7E5                    ; selection de la page en RAM Donnees (A000-DFFF)     
                      (C:\Users\bhrou\gi):00506                         
65D5 8600             (C:\Users\bhrou\gi):00507 [2]     1443            lda   #$00
65D7 B765DB           (C:\Users\bhrou\gi):00508 [5]     1448            sta   progress_value       
65DA 39               (C:\Users\bhrou\gi):00509 [5]     1453            rts
                      (C:\Users\bhrou\gi):00510                         
65DB 0000             (C:\Users\bhrou\gi):00511                 progress_value fdb $0000        
                      (C:\Users\bhrou\gi):00512                 
                      (C:\Users\bhrou\gi):00513                 ********************************************************************************
                      (C:\Users\bhrou\gi):00514                 * x_pixel and y_pixel coordinate system
                      (C:\Users\bhrou\gi):00515                 * x coordinates:
                      (C:\Users\bhrou\gi):00516                 *    - off-screen left 00-2F (0-47)
                      (C:\Users\bhrou\gi):00517                 *    - on screen 30-CF (48-207)
                      (C:\Users\bhrou\gi):00518                 *    - off-screen right D0-FF (208-255)
                      (C:\Users\bhrou\gi):00519                 *
                      (C:\Users\bhrou\gi):00520                 * y coordinates:
                      (C:\Users\bhrou\gi):00521                 *    - off-screen top 00-1B (0-27)
                      (C:\Users\bhrou\gi):00522                 *    - on screen 1C-E3 (28-227)
                      (C:\Users\bhrou\gi):00523                 *    - off-screen bottom E4-FF (228-255)
                      (C:\Users\bhrou\gi):00524                 ********************************************************************************
                      (C:\Users\bhrou\gi):00525                 
65DD                  (C:\Users\bhrou\gi):00526                 DRS_XYToAddress
65DD 8030             (C:\Users\bhrou\gi):00527 [2]     1455            suba  #$30
65DF C01C             (C:\Users\bhrou\gi):00528 [2]     1457            subb  #$1C                          ; TODO same thing as x for negative case
65E1 44               (C:\Users\bhrou\gi):00529 [2]     1459            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
65E2 44               (C:\Users\bhrou\gi):00530 [2]     1461            lsra                                ; x=x/2, RAMA RAMB enterlace  
65E3 250C             (C:\Users\bhrou\gi):00531 [3]     1464            bcs   DRS_XYToAddressRAM2First      ; Branch if write must begin in RAM2 first
65E5                  (C:\Users\bhrou\gi):00532                 DRS_XYToAddressRAM1First
65E5 B765ED           (C:\Users\bhrou\gi):00533 [5]     1469            sta   DRS_dyn1+2
65E8 8628             (C:\Users\bhrou\gi):00534 [2]     1471            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
65EA 3D               (C:\Users\bhrou\gi):00535 [11]    1482            mul
65EB                  (C:\Users\bhrou\gi):00536                 DRS_dyn1        
65EB C3C000           (C:\Users\bhrou\gi):00537 [4]     1486            addd  #$C000                        ; (dynamic)
65EE 1F01             (C:\Users\bhrou\gi):00538 [6]     1492            tfr   d,x     
65F0 39               (C:\Users\bhrou\gi):00539 [5]     1497            rts
65F1                  (C:\Users\bhrou\gi):00540                 DRS_XYToAddressRAM2First
65F1 B765F9           (C:\Users\bhrou\gi):00541 [5]     1502            sta   DRS_dyn2+2
65F4 8628             (C:\Users\bhrou\gi):00542 [2]     1504            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
65F6 3D               (C:\Users\bhrou\gi):00543 [11]    1515            mul
65F7                  (C:\Users\bhrou\gi):00544                 DRS_dyn2        
65F7 C3A000           (C:\Users\bhrou\gi):00545 [4]     1519            addd  #$A000                        ; (dynamic)
65FA 1F01             (C:\Users\bhrou\gi):00546 [6]     1525            tfr   d,x
65FC 39               (C:\Users\bhrou\gi):00547 [5]     1530            rts
                      (C:\Users\bhrou\gi):00548                 
                      (C:\Users\bhrou\gi):00549                 ********************************************************************************
                      (C:\Users\bhrou\gi):00550                 * Temporisation permettant d'avoir le faisceau hors ecran
                      (C:\Users\bhrou\gi):00551                 * et de realiser le changement de palette sans artefact 
                      (C:\Users\bhrou\gi):00552                 ********************************************************************************
                      (C:\Users\bhrou\gi):00553                 
65FD                  (C:\Users\bhrou\gi):00554                 WaitOffScreen        
65FD                  (C:\Users\bhrou\gi):00555                 Vsync_1                                
65FD 7DE7E7           (C:\Users\bhrou\gi):00556 [7]     1537            tst   $E7E7                    * le faisceau n'est pas dans l'ecran utile
6600 2AFB             (C:\Users\bhrou\gi):00557 [3]     1540            bpl   Vsync_1                  * tant que le bit est a 0 on boucle
6602                  (C:\Users\bhrou\gi):00558                 Vsync_2                                 
6602 7DE7E7           (C:\Users\bhrou\gi):00559 [7]     1547            tst   $E7E7                    * le faisceau est dans l'ecran utile
6605 2BFB             (C:\Users\bhrou\gi):00560 [3]     1550            bmi   Vsync_2                  * tant que le bit est a 1 on boucle
                      (C:\Users\bhrou\gi):00561                         
6607 108E0140         (C:\Users\bhrou\gi):00562 [4]     1554            ldy   #0320                    * 40 lignes * 8 cycles
660B                  (C:\Users\bhrou\gi):00563                 Tempo        
660B 313F             (C:\Users\bhrou\gi):00564 [5]     1559            leay  -1,y
660D 26FC             (C:\Users\bhrou\gi):00565 [3]     1562            bne   Tempo                    * tempo pour etre dans la bordure invisible   
                      (C:\Users\bhrou\gi):00566                                                                                        * lors du changement de palette
660F 39               (C:\Users\bhrou\gi):00567 [5]     1567            rts
                      (C:\Users\bhrou\gi):00568                         
