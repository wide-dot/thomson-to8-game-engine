                      (C:\Users\bhrou\gi):00001                 INCLUDE "./generated-code/SpecialStage/ObjectId.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0001             (./generated-code/):00003         ObjID_SSBomb equ 1
     0002             (./generated-code/):00004         ObjID_HalfPipe equ 2
                      (C:\Users\bhrou\gi):00002                 INCLUDE "./generated-code/Game.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     010E             (./generated-code/):00003         Build_RAMLoaderManager equ $010E
     0000             (./generated-code/):00004         GmID_SpecialStage equ 0
     0000             (./generated-code/):00005         gmboot equ 0
                      (C:\Users\bhrou\gi):00003         
                      (C:\Users\bhrou\gi):00004                 opt   c,ct
                      (C:\Users\bhrou\gi):00005                 
                      (C:\Users\bhrou\gi):00006                 ********************************************************************************
                      (C:\Users\bhrou\gi):00007                 * Game Engine (TO8 Thomson) - Benoit Rousseau 2020-2021
                      (C:\Users\bhrou\gi):00008                 * ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00009                 *
                      (C:\Users\bhrou\gi):00010                 *
                      (C:\Users\bhrou\gi):00011                 ********************************************************************************
                      (C:\Users\bhrou\gi):00012                 
                      (C:\Users\bhrou\gi):00013                         INCLUDE "./Engine/Constants.asm"
                      (./Engine/Constant):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00002                 * Constants
                      (./Engine/Constant):00003                 *
                      (./Engine/Constant):00004                 * Naming convention
                      (./Engine/Constant):00005                 * -----------------
                      (./Engine/Constant):00006                 * - lower case
                      (./Engine/Constant):00007                 * - underscore-separated names
                      (./Engine/Constant):00008                 *
                      (./Engine/Constant):00009                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00010                 
                      (./Engine/Constant):00011                 * ===========================================================================
                      (./Engine/Constant):00012                 * TO8 Registers
                      (./Engine/Constant):00013                 * ===========================================================================
                      (./Engine/Constant):00014                 
                      (./Engine/Constant):00015                 ; Disk routine registers (ROM)
                      (./Engine/Constant):00016                 
     6049             (./Engine/Constant):00017                 dk_drive                      equ $6049
     604A             (./Engine/Constant):00018                 dk_track                      equ $604A
     604B             (./Engine/Constant):00019                 dk_track_lsb                  equ $604B
     604C             (./Engine/Constant):00020                 dk_sector                     equ $604C
     604F             (./Engine/Constant):00021                 dk_write_location             equ $604F
                      (./Engine/Constant):00022                 
                      (./Engine/Constant):00023                 * ===========================================================================
                      (./Engine/Constant):00024                 * Globals
                      (./Engine/Constant):00025                 * ===========================================================================
                      (./Engine/Constant):00026                 
     009F             (./Engine/Constant):00027                 glb_direct_page               equ $9F    ; direct page for globals
                      (./Engine/Constant):00028                 
                      (./Engine/Constant):00029                 ; compilated sprite
     9FFE             (./Engine/Constant):00030                 glb_register_s                equ $9FFE  ; reverved space to store S from ROM routines
                      (./Engine/Constant):00031                 
                      (./Engine/Constant):00032                 ; DrawSprites
     9FFC             (./Engine/Constant):00033                 glb_screen_location_1         equ $9FFC  ; start address for rendering of current sprite Part1     
     9FFA             (./Engine/Constant):00034                 glb_screen_location_2         equ $9FFA  ; start address for rendering of current sprite Part2 (Must follow Part1)
                      (./Engine/Constant):00035                 
                      (./Engine/Constant):00036                 ; CheckSpritesRefresh
     9FF9             (./Engine/Constant):00037                 glb_cur_priority              equ $9FF9
     9FF7             (./Engine/Constant):00038                 glb_cur_ptr_sub_obj_erase     equ $9FF7
     9FF5             (./Engine/Constant):00039                 glb_cur_ptr_sub_obj_draw      equ $9FF5
     9FF3             (./Engine/Constant):00040                 glb_camera_x_pos              equ $9FF3 ; camera x position in palyfield coordinates
     9FF1             (./Engine/Constant):00041                 glb_camera_y_pos              equ $9FF1 ; camera y position in palyfield coordinates
     9FEF             (./Engine/Constant):00042                 glb_camera_x_min_pos          equ $9FEF
     9FED             (./Engine/Constant):00043                 glb_camera_y_min_pos          equ $9FED
     9FEB             (./Engine/Constant):00044                 glb_camera_x_max_pos          equ $9FEB
     9FE9             (./Engine/Constant):00045                 glb_camera_y_max_pos          equ $9FE9
     9FE8             (./Engine/Constant):00046                 glb_force_sprite_refresh      equ $9FE8
     9FE7             (./Engine/Constant):00047                 glb_camera_move               equ $9FE7
     9FE6             (./Engine/Constant):00048                 glb_alphaTiles                equ $9FE6
     9F00             (./Engine/Constant):00049                 glb_tmp_var                   equ $9F00 ; custom tmp var space for routine
     9F00             (./Engine/Constant):00050                 glb_system_stack              equ $9F00
                      (./Engine/Constant):00051                 
                      (./Engine/Constant):00052                 * ===========================================================================
                      (./Engine/Constant):00053                 * Display Constants
                      (./Engine/Constant):00054                 * ===========================================================================
                      (./Engine/Constant):00055                 
     00A0             (./Engine/Constant):00056                 screen_width                  equ 160    ; in pixel
     001C             (./Engine/Constant):00057                 screen_top                    equ 28     ; in pixel
     00E3             (./Engine/Constant):00058                 screen_bottom                 equ 28+199 ; in pixel
     0030             (./Engine/Constant):00059                 screen_left                   equ 48     ; in pixel
     00CF             (./Engine/Constant):00060                 screen_right                  equ 48+159 ; in pixel
     0008             (./Engine/Constant):00061                 nb_priority_levels            equ 8      ; number of priority levels (need code change if modified)
                      (./Engine/Constant):00062                 
                      (./Engine/Constant):00063                 * ===========================================================================
                      (./Engine/Constant):00064                 * Images Constants
                      (./Engine/Constant):00065                 * ===========================================================================
                      (./Engine/Constant):00066                 
     0004             (./Engine/Constant):00067                 image_x_size                  equ 4
     0005             (./Engine/Constant):00068                 image_y_size                  equ 5
     0006             (./Engine/Constant):00069                 image_center_offset           equ 6
                      (./Engine/Constant):00070                 
     0004             (./Engine/Constant):00071                 image_subset_x1_offset        equ 4
     0005             (./Engine/Constant):00072                 image_subset_y1_offset        equ 5
                      (./Engine/Constant):00073                 
     0000             (./Engine/Constant):00074                 page_draw_routine             equ 0
     0001             (./Engine/Constant):00075                 draw_routine                  equ 1
     0003             (./Engine/Constant):00076                 page_erase_routine            equ 3
     0004             (./Engine/Constant):00077                 erase_routine                 equ 4
     0006             (./Engine/Constant):00078                 erase_nb_cell                 equ 6
                      (./Engine/Constant):00079                 
                      (./Engine/Constant):00080                 * ===========================================================================
                      (./Engine/Constant):00081                 * Sound Constants
                      (./Engine/Constant):00082                 * ===========================================================================
                      (./Engine/Constant):00083                 
     0000             (./Engine/Constant):00084                 sound_page        equ 0
     0001             (./Engine/Constant):00085                 sound_start_addr  equ 1
     0003             (./Engine/Constant):00086                 sound_end_addr    equ 3
     0005             (./Engine/Constant):00087                 sound_meta_size   equ 5
                      (./Engine/Constant):00088                 
                      (./Engine/Constant):00089                 * ===========================================================================
                      (./Engine/Constant):00090                 * Object Constants
                      (./Engine/Constant):00091                 * ===========================================================================
                      (./Engine/Constant):00092                 
     005D             (./Engine/Constant):00093                 object_core_size              equ 93  ; the size of an object without ext_vars - DEPENDENCY ClearObj routine
     006B             (./Engine/Constant):00094                 object_size                   equ object_core_size+ext_variables_size ; the size of a dynamic object
     006B             (./Engine/Constant):00095                 next_object                   equ object_size
     005D             (./Engine/Constant):00096                 ext_variables                 equ object_core_size ; start of reserved space for additionnal variables
                      (./Engine/Constant):00097                 
     0000             (./Engine/Constant):00098                 id                            equ 0           ; reference to object model id (ObjID_) (0: free slot)
     0001             (./Engine/Constant):00099                 subtype                       equ 1           ; reference to object subtype (Sub_)
     0002             (./Engine/Constant):00100                 render_flags                  equ 2
                      (./Engine/Constant):00101                 
                      (./Engine/Constant):00102                 * --- render_flags bitfield variables ---
     0001             (./Engine/Constant):00103                 render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
     0002             (./Engine/Constant):00104                 render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
     0004             (./Engine/Constant):00105                 render_overlay_mask           equ $04 ; (bit 2) DEPENDENCY should be bit 2 - compilated sprite with no background save
     0008             (./Engine/Constant):00106                 render_motionless_mask        equ $08 ; (bit 3) tell display engine to compute sub image and position check only once until the flag is removed  
     0010             (./Engine/Constant):00107                 render_playfieldcoord_mask    equ $10 ; (bit 4) tell display engine to use playfield (1) or screen (0) coordinates
     0020             (./Engine/Constant):00108                 render_hide_mask              equ $20 ; (bit 5) tell display engine to hide sprite (keep priority and mapping_frame)
     0040             (./Engine/Constant):00109                 render_todelete_mask          equ $40 ; (bit 6) tell display engine to delete sprite and clear OST for this object
     0080             (./Engine/Constant):00110                 render_xloop_mask             equ $80 ; (bit 7) (screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
                      (./Engine/Constant):00111                  
     0003             (./Engine/Constant):00112                 priority                      equ 3           ; display priority (0: nothing to display, 1:front, ..., 8:back)
     0004             (./Engine/Constant):00113                 anim                          equ 4  ; and 5  ; reference to current animation (Ani_)
     0006             (./Engine/Constant):00114                 prev_anim                     equ 6  ; and 7  ; reference to previous animation (Ani_)
     0008             (./Engine/Constant):00115                 anim_frame                    equ 8           ; index of current frame in animation
     0009             (./Engine/Constant):00116                 anim_frame_duration           equ 9           ; number of frames for each image in animation, range: 00-7F (0-127), 0 means display only during one frame
     000A             (./Engine/Constant):00117                 anim_flags                    equ 10          ; byte offset to reference an anim_flags LUT (adv) / store a link flag (non adv)
                      (./Engine/Constant):00118                 
                      (./Engine/Constant):00119                 * --- anim_flags bitfield variables ---
     0001             (./Engine/Constant):00120                 anim_link_mask                equ $01 ; (bit 0) if set, allow the load of a new animation without reseting anim_frame and anim_frame_duration
                      (./Engine/Constant):00121                 
     000B             (./Engine/Constant):00122                 status_flags                  equ 11          ; orientation of sprite, is applied to animation xmirror flag during AnimateSprite
                      (./Engine/Constant):00123                 
                      (./Engine/Constant):00124                 * --- status_flags bitfield variables ---
     0001             (./Engine/Constant):00125                 status_xflip_mask             equ $01 ; (bit 0) X Flip
     0002             (./Engine/Constant):00126                 status_yflip_mask             equ $02 ; (bit 1) Y Flip
                      (./Engine/Constant):00127                 
     000C             (./Engine/Constant):00128                 image_set                     equ 12 ; and 13 ; reference to current image (Img_) (0000 if no image)
     000E             (./Engine/Constant):00129                 x_pos                         equ 14 ; and 15 ; x playfield coordinate
     0010             (./Engine/Constant):00130                 x_sub                         equ 16          ; x subpixel (1/256 of a pixel), must follow x_pos in data structure
     0011             (./Engine/Constant):00131                 y_pos                         equ 17 ; and 18 ; y playfield coordinate
     0013             (./Engine/Constant):00132                 y_sub                         equ 19          ; y subpixel (1/256 of a pixel), must follow y_pos in data structure
     0014             (./Engine/Constant):00133                 xy_pixel                      equ 20          ; x and y screen coordinate
     0014             (./Engine/Constant):00134                 x_pixel                       equ 20          ; x screen coordinate
     0015             (./Engine/Constant):00135                 y_pixel                       equ 21          ; y screen coordinate, must follow x_pixel
                      (./Engine/Constant):00136                 ;x_offset                      equ 93          ; x screen coordinate offset that is applied at rendering
                      (./Engine/Constant):00137                 ;y_offset                      equ 94          ; x screen coordinate offset that is applied at rendering
     0016             (./Engine/Constant):00138                 x_vel                         equ 22 ; and 23 ; horizontal velocity
     0018             (./Engine/Constant):00139                 y_vel                         equ 24 ; and 25 ; vertical velocity
     001A             (./Engine/Constant):00140                 x_acl                         equ 26 ; and 27 ; horizontal gravity
     001C             (./Engine/Constant):00141                 y_acl                         equ 28 ; and 29 ; vertical gravity
     001E             (./Engine/Constant):00142                 routine                       equ 30          ; index of current object routine
     001F             (./Engine/Constant):00143                 routine_secondary             equ 31          ; index of current secondary routine
     0020             (./Engine/Constant):00144                 routine_tertiary              equ 32          ; index of current tertiary routine
     0021             (./Engine/Constant):00145                 routine_quaternary            equ 33          ; index of current quaternary routine
                      (./Engine/Constant):00146                 
                      (./Engine/Constant):00147                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00148                 * reserved variables (update by engine)
                      (./Engine/Constant):00149                 
     0022             (./Engine/Constant):00150                 rsv_render_flags              equ 34
                      (./Engine/Constant):00151                 
                      (./Engine/Constant):00152                 * --- rsv_render_flags bitfield variables ---
     0001             (./Engine/Constant):00153                 rsv_render_checkrefresh_mask  equ $01 ; (bit 0) if erasesprite and display sprite flag are processed for this frame
     0002             (./Engine/Constant):00154                 rsv_render_erasesprite_mask   equ $02 ; (bit 1) if a sprite need to be cleared on screen
     0004             (./Engine/Constant):00155                 rsv_render_displaysprite_mask equ $04 ; (bit 2) if a sprite need to be rendered on screen
     0008             (./Engine/Constant):00156                 rsv_render_outofrange_mask    equ $08 ; (bit 3) if a sprite is out of range for full rendering in screen
     0080             (./Engine/Constant):00157                 rsv_render_onscreen_mask      equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on last screen buffer (may be 0 or 1)
                      (./Engine/Constant):00158                 
     0023             (./Engine/Constant):00159                 rsv_prev_anim                 equ 35 ; and 36 ; reference to previous animation (Ani_) w * UTILE ?
     0025             (./Engine/Constant):00160                 rsv_image_center_offset       equ 37 ; 0 or 1 offset that indicate if image center is even or odd (DRS_XYToAddress)
     0026             (./Engine/Constant):00161                 rsv_image_subset              equ 38 ; and 39 ; reference to current image regarding mirror flags w
     0028             (./Engine/Constant):00162                 rsv_mapping_frame             equ 40 ; and 41 ; reference to current image regarding mirror flags, overlay flag and x precision w
     002A             (./Engine/Constant):00163                 rsv_erase_nb_cell             equ 42 ; b 
     002B             (./Engine/Constant):00164                 rsv_page_draw_routine         equ 43 ; b
     002C             (./Engine/Constant):00165                 rsv_draw_routine              equ 44 ; and 45 ; w
     002E             (./Engine/Constant):00166                 rsv_page_erase_routine        equ 46 ; b
     002F             (./Engine/Constant):00167                 rsv_erase_routine             equ 47 ; and 48 ; w 
     0031             (./Engine/Constant):00168                 rsv_xy1_pixel                 equ 49 ;
     0031             (./Engine/Constant):00169                 rsv_x1_pixel                  equ 49 ; x+x_offset-(x_size/2) screen coordinate
     0032             (./Engine/Constant):00170                 rsv_y1_pixel                  equ 50 ; y+y_offset-(y_size/2) screen coordinate, must follow rsv_x1_pixel
     0033             (./Engine/Constant):00171                 rsv_xy2_pixel                 equ 51 ;
     0033             (./Engine/Constant):00172                 rsv_x2_pixel                  equ 51 ; x+x_offset+(x_size/2) screen coordinate
     0034             (./Engine/Constant):00173                 rsv_y2_pixel                  equ 52 ; y+y_offset+(y_size/2) screen coordinate, must follow rsv_x2_pixel
                      (./Engine/Constant):00174                 
                      (./Engine/Constant):00175                 * ---------------------------------------------------------------------------
                      (./Engine/Constant):00176                 * reserved variables (engine) - buffer specific
                      (./Engine/Constant):00177                 
     0035             (./Engine/Constant):00178                 rsv_buffer_0                  equ 53 ; Start index of buffer 0 variables
     0035             (./Engine/Constant):00179                 rsv_priority_0                equ 53 ; internal value that hold priority in video buffer 0
     0036             (./Engine/Constant):00180                 rsv_priority_prev_obj_0       equ 54 ; and 55 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
     0038             (./Engine/Constant):00181                 rsv_priority_next_obj_0       equ 56 ; and 57 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
     003A             (./Engine/Constant):00182                 rsv_prev_mapping_frame_0      equ 58 ; and 59 ; reference to previous image in video buffer 0 w
     003C             (./Engine/Constant):00183                 rsv_prev_erase_nb_cell_0      equ 60 : b
     003D             (./Engine/Constant):00184                 rsv_prev_page_erase_routine_0 equ 61 ; b
     003E             (./Engine/Constant):00185                 rsv_prev_erase_routine_0      equ 62 ; and 63 ; w
     0040             (./Engine/Constant):00186                 rsv_bgdata_0                  equ 64 ; and 65 ; address of background data in screen 0 w
     0042             (./Engine/Constant):00187                 rsv_prev_xy_pixel_0           equ 66 ;
     0042             (./Engine/Constant):00188                 rsv_prev_x_pixel_0            equ 66 ; previous x screen coordinate b
     0043             (./Engine/Constant):00189                 rsv_prev_y_pixel_0            equ 67 ; previous y screen coordinate b, must follow x_pixel
     0044             (./Engine/Constant):00190                 rsv_prev_xy1_pixel_0          equ 68 ;
     0044             (./Engine/Constant):00191                 rsv_prev_x1_pixel_0           equ 68 ; previous x+x_offset-(x_size/2) screen coordinate b
     0045             (./Engine/Constant):00192                 rsv_prev_y1_pixel_0           equ 69 ; previous y+y_offset-(y_size/2) screen coordinate b, must follow x1_pixel
     0046             (./Engine/Constant):00193                 rsv_prev_xy2_pixel_0          equ 70 ;
     0046             (./Engine/Constant):00194                 rsv_prev_x2_pixel_0           equ 70 ; previous x+x_offset+(x_size/2) screen coordinate b
     0047             (./Engine/Constant):00195                 rsv_prev_y2_pixel_0           equ 71 ; previous y+y_offset+(y_size/2) screen coordinate b, must follow x2_pixel
     0048             (./Engine/Constant):00196                 rsv_prev_render_flags_0       equ 72 ;
                      (./Engine/Constant):00197                 * --- rsv_prev_render_flags_0 bitfield variables ---
     0001             (./Engine/Constant):00198                 rsv_prev_render_overlay_mask  equ $01 ; (bit 0) if a sprite has been rendered with compilated sprite and no background save on screen buffer 0/1
     0080             (./Engine/Constant):00199                 rsv_prev_render_onscreen_mask equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on screen buffer 0/1
                      (./Engine/Constant):00200                 
     0049             (./Engine/Constant):00201                 rsv_buffer_1                  equ 73 ; Start index of buffer 1 variables
     0049             (./Engine/Constant):00202                 rsv_priority_1                equ 73 ; internal value that hold priority in video buffer 1
     004A             (./Engine/Constant):00203                 rsv_priority_prev_obj_1       equ 74 ; and 75 ; previous object (OST address) in display priority list for video buffer 1 (0000 if none) w
     004C             (./Engine/Constant):00204                 rsv_priority_next_obj_1       equ 76 ; and 77 ; next object (OST address) in display priority list for video buffer 1 (0000 if none) w
     004E             (./Engine/Constant):00205                 rsv_prev_mapping_frame_1      equ 78 ; and 79 ; reference to previous image in video buffer 1 w
     0050             (./Engine/Constant):00206                 rsv_prev_erase_nb_cell_1      equ 80 ; b
     0051             (./Engine/Constant):00207                 rsv_prev_page_erase_routine_1 equ 81 ; b
     0052             (./Engine/Constant):00208                 rsv_prev_erase_routine_1      equ 82 ; and 83 ; w
     0054             (./Engine/Constant):00209                 rsv_bgdata_1                  equ 84 ; and 85 ; address of background data in screen 1 w
     0056             (./Engine/Constant):00210                 rsv_prev_xy_pixel_1           equ 86 ;
     0056             (./Engine/Constant):00211                 rsv_prev_x_pixel_1            equ 86 ; previous x screen coordinate b
     0057             (./Engine/Constant):00212                 rsv_prev_y_pixel_1            equ 87 ; previous y screen coordinate b, must follow x_pixel
     0058             (./Engine/Constant):00213                 rsv_prev_xy1_pixel_1          equ 88 ;
     0058             (./Engine/Constant):00214                 rsv_prev_x1_pixel_1           equ 88 ; previous x+x_size screen coordinate b
     0059             (./Engine/Constant):00215                 rsv_prev_y1_pixel_1           equ 89 ; previous y+y_size screen coordinate b, must follow x_pixel
     005A             (./Engine/Constant):00216                 rsv_prev_xy2_pixel_1          equ 90 ;
     005A             (./Engine/Constant):00217                 rsv_prev_x2_pixel_1           equ 90 ; previous x+x_size screen coordinate b
     005B             (./Engine/Constant):00218                 rsv_prev_y2_pixel_1           equ 91 ; previous y+y_size screen coordinate b, must follow x_pixel
     005C             (./Engine/Constant):00219                 rsv_prev_render_flags_1       equ 92 ;
                      (./Engine/Constant):00220                 
     0000             (./Engine/Constant):00221                 buf_priority                  equ 0  ; offset for each rsv_buffer variables
     0001             (./Engine/Constant):00222                 buf_priority_prev_obj         equ 1  ;
     0003             (./Engine/Constant):00223                 buf_priority_next_obj         equ 3  ;
     0005             (./Engine/Constant):00224                 buf_prev_mapping_frame        equ 5  ;
     0007             (./Engine/Constant):00225                 buf_erase_nb_cell             equ 7  ;
     0008             (./Engine/Constant):00226                 buf_page_erase_routine        equ 8 ;
     0009             (./Engine/Constant):00227                 buf_erase_routine             equ 9 ;
     000B             (./Engine/Constant):00228                 buf_bgdata                    equ 11 ;
     000D             (./Engine/Constant):00229                 buf_prev_xy_pixel             equ 13 ;
     000D             (./Engine/Constant):00230                 buf_prev_x_pixel              equ 13 ;
     000E             (./Engine/Constant):00231                 buf_prev_y_pixel              equ 14 ;
     000F             (./Engine/Constant):00232                 buf_prev_xy1_pixel            equ 15 ;
     000F             (./Engine/Constant):00233                 buf_prev_x1_pixel             equ 15 ;
     0010             (./Engine/Constant):00234                 buf_prev_y1_pixel             equ 16 ;
     0011             (./Engine/Constant):00235                 buf_prev_xy2_pixel            equ 17 ;
     0011             (./Engine/Constant):00236                 buf_prev_x2_pixel             equ 17 ;
     0012             (./Engine/Constant):00237                 buf_prev_y2_pixel             equ 18 ;
     0013             (./Engine/Constant):00238                 buf_prev_render_flags         equ 19 ;
                      (C:\Users\bhrou\gi):00014                         INCLUDE "./Engine/Macros.asm"        
0000                  (./Engine/Macros.a):00001                 _ldd MACRO
                      (./Engine/Macros.a):00002                         ldd   #((\1)*256)+\2
                      (./Engine/Macros.a):00003                  ENDM
                      (./Engine/Macros.a):00004                  
0000                  (./Engine/Macros.a):00005                 _ldx MACRO
                      (./Engine/Macros.a):00006                         ldx   #((\1)*256)+\2
                      (./Engine/Macros.a):00007                  ENDM
                      (./Engine/Macros.a):00008                  
0000                  (./Engine/Macros.a):00009                 _ldy MACRO
                      (./Engine/Macros.a):00010                         ldy   #((\1)*256)+\2
                      (./Engine/Macros.a):00011                  ENDM
                      (./Engine/Macros.a):00012                  
0000                  (./Engine/Macros.a):00013                 _ldu MACRO
                      (./Engine/Macros.a):00014                         ldu   #((\1)*256)+\2
                      (./Engine/Macros.a):00015                  ENDM  
                      (./Engine/Macros.a):00016                  
0000                  (./Engine/Macros.a):00017                 _lds MACRO
                      (./Engine/Macros.a):00018                         lds   #((\1)*256)+\2
                      (./Engine/Macros.a):00019                  ENDM   
                      (./Engine/Macros.a):00020                  
0000                  (./Engine/Macros.a):00021                 _SetCartPageA MACRO
                      (./Engine/Macros.a):00022                  IFDEF T2
                      (./Engine/Macros.a):00023                         jsr   SetCartPageA
                      (./Engine/Macros.a):00024                  ELSE
                      (./Engine/Macros.a):00025                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00026                  ENDC
                      (./Engine/Macros.a):00027                  ENDM      
                      (./Engine/Macros.a):00028                  
0000                  (./Engine/Macros.a):00029                 _GetCartPageA MACRO
                      (./Engine/Macros.a):00030                  IFDEF T2
                      (./Engine/Macros.a):00031                         jsr   GetCartPageA
                      (./Engine/Macros.a):00032                  ELSE
                      (./Engine/Macros.a):00033                         lda   $E7E6
                      (./Engine/Macros.a):00034                  ENDC
                      (./Engine/Macros.a):00035                  ENDM
                      (./Engine/Macros.a):00036                 
0000                  (./Engine/Macros.a):00037                 _SetCartPageB MACRO
                      (./Engine/Macros.a):00038                  IFDEF T2
                      (./Engine/Macros.a):00039                         jsr   SetCartPageB
                      (./Engine/Macros.a):00040                  ELSE
                      (./Engine/Macros.a):00041                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./Engine/Macros.a):00042                  ENDC
                      (./Engine/Macros.a):00043                  ENDM      
                      (./Engine/Macros.a):00044                  
0000                  (./Engine/Macros.a):00045                 _GetCartPageB MACRO
                      (./Engine/Macros.a):00046                  IFDEF T2
                      (./Engine/Macros.a):00047                         jsr   GetCartPageB
                      (./Engine/Macros.a):00048                  ELSE
                      (./Engine/Macros.a):00049                         ldb   $E7E6
                      (./Engine/Macros.a):00050                  ENDC
                      (./Engine/Macros.a):00051                  ENDM     
                      (./Engine/Macros.a):00052                 
0000                  (./Engine/Macros.a):00053                 _RunObjectSwap MACRO
                      (./Engine/Macros.a):00054                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00055                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00056                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00057                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00058                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00059                         stu   glb_Address       
                      (./Engine/Macros.a):00060                         ldu   \2             
                      (./Engine/Macros.a):00061                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00062                  ENDM    
                      (./Engine/Macros.a):00063                 
0000                  (./Engine/Macros.a):00064                 _RunObjectSwapRoutine MACRO
                      (./Engine/Macros.a):00065                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00066                         ; param 2 : Object routine
                      (./Engine/Macros.a):00067                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./Engine/Macros.a):00068                         lda   Obj_Index_Page+\1   
                      (./Engine/Macros.a):00069                         ldu   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00070                         stu   glb_Address       
                      (./Engine/Macros.a):00071                         lda   \2        
                      (./Engine/Macros.a):00072                         jsr   RunPgSubRoutine
                      (./Engine/Macros.a):00073                  ENDM 
                      (./Engine/Macros.a):00074                  
0000                  (./Engine/Macros.a):00075                 _MountObject MACRO 
                      (./Engine/Macros.a):00076                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00077                         ; manual mount of an object from the resident page 1
                      (./Engine/Macros.a):00078                         lda   Obj_Index_Page+\1
                      (./Engine/Macros.a):00079                         _SetCartPageA
                      (./Engine/Macros.a):00080                         ldx   Obj_Index_Address+2*\1
                      (./Engine/Macros.a):00081                  ENDM
                      (./Engine/Macros.a):00082                 
0000                  (./Engine/Macros.a):00083                 _RunObject MACRO 
                      (./Engine/Macros.a):00084                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00085                         ; param 2 : Object data RAM address
                      (./Engine/Macros.a):00086                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00087                         _MountObject \1
                      (./Engine/Macros.a):00088                         ldu   \2        
                      (./Engine/Macros.a):00089                         jsr   ,x
                      (./Engine/Macros.a):00090                  ENDM
                      (./Engine/Macros.a):00091                 
0000                  (./Engine/Macros.a):00092                 _RunObjectRoutine MACRO 
                      (./Engine/Macros.a):00093                         ; param 1 : ObjID_
                      (./Engine/Macros.a):00094                         ; param 2 : Object routine
                      (./Engine/Macros.a):00095                         ; manual launch of an object from the resident page 1
                      (./Engine/Macros.a):00096                         ; this object does not need or have a data structure for this routine
                      (./Engine/Macros.a):00097                         _MountObject \1
                      (./Engine/Macros.a):00098                         lda   \2        
                      (./Engine/Macros.a):00099                         jsr   ,x
                      (./Engine/Macros.a):00100                  ENDM
                      (./Engine/Macros.a):00101                 
0000                  (./Engine/Macros.a):00102                 _asld MACRO
                      (./Engine/Macros.a):00103                         aslb
                      (./Engine/Macros.a):00104                         rola
                      (./Engine/Macros.a):00105                  ENDM        
                      (./Engine/Macros.a):00106                  
0000                  (./Engine/Macros.a):00107                 _asrd MACRO
                      (./Engine/Macros.a):00108                         asra
                      (./Engine/Macros.a):00109                         rorb
                      (./Engine/Macros.a):00110                  ENDM      
                      (./Engine/Macros.a):00111                  
0000                  (./Engine/Macros.a):00112                 _lsld MACRO
                      (./Engine/Macros.a):00113                         lslb
                      (./Engine/Macros.a):00114                         rola
                      (./Engine/Macros.a):00115                  ENDM        
                      (./Engine/Macros.a):00116                  
0000                  (./Engine/Macros.a):00117                 _lsrd MACRO
                      (./Engine/Macros.a):00118                         lsra
                      (./Engine/Macros.a):00119                         rorb
                      (./Engine/Macros.a):00120                  ENDM
                      (./Engine/Macros.a):00121                  
0000                  (./Engine/Macros.a):00122                 _rold MACRO
                      (./Engine/Macros.a):00123                         rolb
                      (./Engine/Macros.a):00124                         rola
                      (./Engine/Macros.a):00125                  ENDM    
                      (./Engine/Macros.a):00126                  
0000                  (./Engine/Macros.a):00127                 _rord MACRO
                      (./Engine/Macros.a):00128                         rora
                      (./Engine/Macros.a):00129                         rorb
                      (./Engine/Macros.a):00130                  ENDM
                      (./Engine/Macros.a):00131                 
0000                  (./Engine/Macros.a):00132                 _negd MACRO
                      (./Engine/Macros.a):00133                         nega
                      (./Engine/Macros.a):00134                         negb
                      (./Engine/Macros.a):00135                         sbca  #0
                      (./Engine/Macros.a):00136                  ENDM
                      (./Engine/Macros.a):00137                 
0000                  (./Engine/Macros.a):00138                 _cba MACRO
                      (./Engine/Macros.a):00139                         pshs  b
                      (./Engine/Macros.a):00140                         cmpa  ,s+
                      (./Engine/Macros.a):00141                  ENDM
                      (./Engine/Macros.a):00142                 
0000                  (./Engine/Macros.a):00143                 _aba MACRO
                      (./Engine/Macros.a):00144                         pshs  b
                      (./Engine/Macros.a):00145                         adda  ,s+
                      (./Engine/Macros.a):00146                  ENDM
                      (./Engine/Macros.a):00147                 
0000                  (./Engine/Macros.a):00148                 _sba MACRO
                      (./Engine/Macros.a):00149                         pshs  b
                      (./Engine/Macros.a):00150                         suba  ,s+
                      (./Engine/Macros.a):00151                  ENDM
                      (./Engine/Macros.a):00152                 
0000                  (./Engine/Macros.a):00153                 _cab MACRO
                      (./Engine/Macros.a):00154                         pshs  a
                      (./Engine/Macros.a):00155                         cmpb  ,s+
                      (./Engine/Macros.a):00156                  ENDM
                      (./Engine/Macros.a):00157                 
0000                  (./Engine/Macros.a):00158                 _aab MACRO
                      (./Engine/Macros.a):00159                         pshs  a
                      (./Engine/Macros.a):00160                         addb  ,s+
                      (./Engine/Macros.a):00161                  ENDM
                      (./Engine/Macros.a):00162                 
0000                  (./Engine/Macros.a):00163                 _sab MACRO
                      (./Engine/Macros.a):00164                         pshs  a
                      (./Engine/Macros.a):00165                         subb  ,s+
                      (./Engine/Macros.a):00166                  ENDM
                      (C:\Users\bhrou\gi):00015                         org   $6100
                      (C:\Users\bhrou\gi):00016                 
6100 8600             (C:\Users\bhrou\gi):00017 [2]     2               lda   #GmID_SpecialStage
6102 B78771           (C:\Users\bhrou\gi):00018 [5]     7               sta   glb_Cur_Game_Mode
6105 B78772           (C:\Users\bhrou\gi):00019 [5]     12                      sta   glb_Next_Game_Mode
                      (C:\Users\bhrou\gi):00020                 
                      (C:\Users\bhrou\gi):00021                         _RunObject ObjID_HalfPipe,#SpecialStageHalfPipe
                      (       _RunObject):00001                         _MountObject ObjID_HalfPipe
6108 B69848           (     _MountObject):00001 [5]     17              lda   Obj_Index_Page+ObjID_HalfPipe
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
610B B7E7E6           (    _SetCartPageA):00004 [5]     22              sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
610E BE984D           (     _MountObject):00003 [6]     28              ldx   Obj_Index_Address+2*ObjID_HalfPipe
6111 CE613E           (       _RunObject):00002 [3]     31              ldu   #SpecialStageHalfPipe        
6114 AD84             (       _RunObject):00003 [7]     38              jsr   ,x
                      (C:\Users\bhrou\gi):00022                 
                      (C:\Users\bhrou\gi):00023                 * ==============================================================================
                      (C:\Users\bhrou\gi):00024                 * Main Loop
                      (C:\Users\bhrou\gi):00025                 * ==============================================================================
6116                  (C:\Users\bhrou\gi):00026                 LevelMainLoop
6116 BD75A7           (C:\Users\bhrou\gi):00027 [8]     46              jsr   WaitVBL    
6119 BD884E           (C:\Users\bhrou\gi):00028 [8]     54              jsr   UpdatePalette
611C BD860D           (C:\Users\bhrou\gi):00029 [8]     62              jsr   ReadJoypads
                      (C:\Users\bhrou\gi):00030                         ; jsr   LoadGameMode     
                      (C:\Users\bhrou\gi):00031                         _RunObject ObjID_HalfPipe,#SpecialStageHalfPipe
                      (       _RunObject):00001                         _MountObject ObjID_HalfPipe
611F B69848           (     _MountObject):00001 [5]     67              lda   Obj_Index_Page+ObjID_HalfPipe
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
6122 B7E7E6           (    _SetCartPageA):00004 [5]     72              sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
6125 BE984D           (     _MountObject):00003 [6]     78              ldx   Obj_Index_Address+2*ObjID_HalfPipe
6128 CE613E           (       _RunObject):00002 [3]     81              ldu   #SpecialStageHalfPipe        
612B AD84             (       _RunObject):00003 [7]     88              jsr   ,x
612D BD862E           (C:\Users\bhrou\gi):00032 [8]     96              jsr   RunObjects
6130 BD7987           (C:\Users\bhrou\gi):00033 [8]     104             jsr   CheckSpritesRefresh                                              
6133 BD8091           (C:\Users\bhrou\gi):00034 [8]     112             jsr   EraseSprites
6136 BD82F7           (C:\Users\bhrou\gi):00035 [8]     120             jsr   UnsetDisplayPriority
6139 BD83D6           (C:\Users\bhrou\gi):00036 [8]     128             jsr   DrawSprites       
613C 20D8             (C:\Users\bhrou\gi):00037 [3]     131             bra   LevelMainLoop
                      (C:\Users\bhrou\gi):00038                         
                      (C:\Users\bhrou\gi):00039                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00040                 * Game Mode RAM variables
                      (C:\Users\bhrou\gi):00041                 * ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00042                         
                      (C:\Users\bhrou\gi):00043                         INCLUDE "./game-mode/special-stage/ram-data.asm"        
                      (./game-mode/speci):00001                 ; RAM variables - Special stage
                      (./game-mode/speci):00002                 ; TODO : split entre variables qui doivent etre globales (restent ici)
                      (./game-mode/speci):00003                 ; et celles specifiques a l'objet (vont avec le code objet)
                      (./game-mode/speci):00004                 
                      (./game-mode/speci):00005                 ; ext_variables_size is for dynamic objects
     000E             (./game-mode/speci):00006                 ext_variables_size                equ 14
                      (./game-mode/speci):00007                 
                      (./game-mode/speci):00008                 * ===========================================================================
                      (./game-mode/speci):00009                 * Object Subtypes
                      (./game-mode/speci):00010                 * ===========================================================================
     0000             (./game-mode/speci):00011                 Sub_SpecialStage_Init             equ 0
     0001             (./game-mode/speci):00012                 Sub_SpecialStage_Main             equ 1
                      (./game-mode/speci):00013                 
                      (./game-mode/speci):00014                 * ===========================================================================
                      (./game-mode/speci):00015                 * Object Constants
                      (./game-mode/speci):00016                 * ===========================================================================
                      (./game-mode/speci):00017                 
     0003             (./game-mode/speci):00018                 nb_level_objects                  equ 3
     0002             (./game-mode/speci):00019                 nb_reserved_objects               equ 2
     0028             (./game-mode/speci):00020                 nb_dynamic_objects                equ 40
     002E             (./game-mode/speci):00021                 nb_graphical_objects              equ 46 * max 64 total
                      (./game-mode/speci):00022                 
                      (./game-mode/speci):00023                 ; Objects that will be run manually from Special Stage
613E 0000000000000000 (./game-mode/speci):00024                 SpecialStageHalfPipe              fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
61A9 0000000000000000 (./game-mode/speci):00025                 HalfPipeEven                      fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
6214 0000000000000000 (./game-mode/speci):00026                 HalfPipeOdd                       fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
                      (./game-mode/speci):00027                 
627F                  (./game-mode/speci):00028                 Object_RAM
627F                  (./game-mode/speci):00029                 SS_Object_RAM
627F 0000000000000000 (./game-mode/speci):00030                 MainCharacter                     fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
                      (./game-mode/speci):00031                 ;Sidekick                         fill  0,object_size
                      (./game-mode/speci):00032                 ;SpecialStageHUD                  fill  0,object_size
                      (./game-mode/speci):00033                 ;SpecialStageStartBanner          fill  0,object_size
                      (./game-mode/speci):00034                 ;SpecialStageNumberOfRings        fill  0,object_size
62EA 0000000000000000 (./game-mode/speci):00035                 SpecialStageShadow_Sonic          fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
                      (./game-mode/speci):00036                 ;SpecialStageShadow_Tails         fill  0,object_size
                      (./game-mode/speci):00037                 ;SpecialStageTails_Tails          fill  0,object_size
6355 0000000000000000 (./game-mode/speci):00038                 Dynamic_Object_RAM                fill  0,nb_dynamic_objects*object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (./game-mode/speci):00039                 ;SpecialStageResults              fill  0,object_size
                      (./game-mode/speci):00040                 ;                                 fill  0,$C*object_size
                      (./game-mode/speci):00041                 ;SpecialStageResults2             fill  0,object_size
                      (./game-mode/speci):00042                 ;                                 fill  0,$51*object_size
740D 0000000000000000 (./game-mode/speci):00043                 Dynamic_Object_RAM_End            fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000
7478                  (./game-mode/speci):00044                 SS_Object_RAM_End
7478                  (./game-mode/speci):00045                 Object_RAM_End
                      (./game-mode/speci):00046                 
7478 00               (./game-mode/speci):00047                 Current_Special_Stage             fcb   $00
                      (./game-mode/speci):00048                 
7479 0000             (./game-mode/speci):00049                 Ring_count                        fdb   $0000
747B 0000000000000000 (./game-mode/speci):00050                 SS2p_RingBuffer                   fill  0,12
     00000000
                      (./game-mode/speci):00051                 
7487                  (./game-mode/speci):00052                 SS_Misc_Variables
                      (./game-mode/speci):00053                 ;PNT_Buffer                        fill  0,$700
                      (./game-mode/speci):00054                 ;PNT_Buffer_End
                      (./game-mode/speci):00055                 ;SS_Horiz_Scroll_Buf_2             fill  0,$400
7487 00000000         (./game-mode/speci):00056                 SSTrack_mappings_bitflags         fill  0,4
748B 00000000         (./game-mode/speci):00057                 SSTrack_mappings_uncompressed     fill  0,4
748F 00               (./game-mode/speci):00058                 SSTrack_anim                      fcb   $00
7490 00               (./game-mode/speci):00059                 SSTrack_last_anim_frame           fcb   $00
7491 0000             (./game-mode/speci):00060                 SpecialStage_CurrentSegment       fdb   $0000
7493 00               (./game-mode/speci):00061                 SSTrack_anim_frame                fcb   $00
7494 00               (./game-mode/speci):00062                 SS_Alternate_PNT                  fcb   $00
7495 00               (./game-mode/speci):00063                 SSTrack_drawing_index             fcb   $00 ; 0:new half-pipe frame is displayed in this loop, >0:no refresh of half-pipe in this loop
7496 00               (./game-mode/speci):00064                 SSTrack_Orientation               fcb   $00
7497 00               (./game-mode/speci):00065                 SS_Alternate_HorizScroll_Buf      fcb   $00
7498 00               (./game-mode/speci):00066                 SSTrack_mapping_frame             fcb   $00
7499 00               (./game-mode/speci):00067                 SS_Last_Alternate_HorizScroll_Buf fcb   $00
749A 00000000         (./game-mode/speci):00068                 SS_New_Speed_Factor               fill  0,4
749E 0000000000000000 (./game-mode/speci):00069                 SS_Cur_Speed_Factor               fill  0,9
     00
74A7 0000             (./game-mode/speci):00070                 SSTrack_duration_timer            fdb   $0000
74A9 00               (./game-mode/speci):00071                 SS_player_anim_frame_timer        fcb   $00
                      (./game-mode/speci):00072                 ;SpecialStage_LastSegment          fcb   $00
74AA 0000000000       (./game-mode/speci):00073                 SpecialStage_Started              fill  0,5
74AF 00000000         (./game-mode/speci):00074                 SSTrack_last_mappings_copy        fill  0,4
74B3 0000000000000000 (./game-mode/speci):00075                 SSTrack_last_mappings             fill  0,8
74BB 0000000000       (./game-mode/speci):00076                 SSTrack_LastVScroll               fill  0,5
74C0 00               (./game-mode/speci):00077                 SSTrack_last_mapping_frame        fcb   $00
74C1 00000000         (./game-mode/speci):00078                 SSTrack_mappings_RLE              fill  0,4
74C5 0000000000000000 (./game-mode/speci):00079                 SSDrawRegBuffer                   fill  0,12
     00000000
74D1 0000             (./game-mode/speci):00080                 SSDrawRegBuffer_End               fdb   $0000
74D3 0000             (./game-mode/speci):00081                 SpecialStage_LastSegment2         fdb   $0000
74D5 0000000000000000 (./game-mode/speci):00082                 SS_unk_DB4D                       fill  0,$15
     0000000000000000
     0000000000
74EA 0000000000000000 (./game-mode/speci):00083                 SS_Ctrl_Record_Buf                fill  0,30
     0000000000000000
     0000000000000000
     000000000000
7508 0000             (./game-mode/speci):00084                 SS_Last_Ctrl_Record               fdb   $0000
750A                  (./game-mode/speci):00085                 SS_Ctrl_Record_Buf_End
                      (./game-mode/speci):00086                 ;SS_CurrentPerspective             fdb   $0000
750A 00               (./game-mode/speci):00087                 SS_Check_Rings_flag               fcb   $00
750B 00               (./game-mode/speci):00088                 SS_Pause_Only_flag                fcb   $00
750C 00000000         (./game-mode/speci):00089                 SS_CurrentLevelObjectLocations    fill  0,4
7510 0000             (./game-mode/speci):00090                 SS_Ring_Requirement               fdb   $0000
7512 0000000000       (./game-mode/speci):00091                 SS_CurrentLevelLayout             fill  0,5
7517 0000             (./game-mode/speci):00092                 SS_2P_BCD_Score                   fdb   $0000
7519 00               (./game-mode/speci):00093                 SS_NoCheckpoint_flag              fcb   $00
751A 00               (./game-mode/speci):00094                 SS_Checkpoint_Rainbow_flag        fcb   $00
751B 00               (./game-mode/speci):00095                 SS_Rainbow_palette                fcb   $00
751C 00000000         (./game-mode/speci):00096                 SS_Perfect_rings_left             fill  0,4
7520 00               (./game-mode/speci):00097                 SS_Star_color_1                   fcb   $00
7521 00               (./game-mode/speci):00098                 SS_Star_color_2                   fcb   $00
7522 00               (./game-mode/speci):00099                 SS_NoCheckpointMsg_flag           fcb   $00
7523 0000             (./game-mode/speci):00100                 SS_NoRingsTogoLifetime            fdb   $0000
7525 0000             (./game-mode/speci):00101                 SS_RingsToGoBCD                   fdb   $0000
7527 00               (./game-mode/speci):00102                 SS_HideRingsToGo                  fcb   $00
7528 00               (./game-mode/speci):00103                 SS_TriggerRingsToGo               fcb   $00
7529                  (./game-mode/speci):00104                 SS_Misc_Variables_End
                      (./game-mode/speci):00105                 ;SS_Horiz_Scroll_Buf_1             fill  0,$400
                      (./game-mode/speci):00106                 ;SS_Horiz_Scroll_Buf_1_End
7529 00               (./game-mode/speci):00107                 SS_Offset_X                       fcb   $00
752A 00               (./game-mode/speci):00108                 SS_Offset_Y                       fcb   $00
752B 00               (./game-mode/speci):00109                 SS_Swap_Positions_Flag            fcb   $00
                      (./game-mode/speci):00110                 ;SS_Sprite_Table                   fill  0,$280    ; Sprite attribute table buffer
                      (./game-mode/speci):00111                 ;SS_Sprite_Table_End               fill  0,$80     ; unused, but SAT buffer can spill over into this area when there are too many sprites on-screen
                      (./game-mode/speci):00112                 
                      (./game-mode/speci):00113                 ; TO8 Version
752C 00               (./game-mode/speci):00114                 HalfPipe_Seq               fcb $00
752D 0000             (./game-mode/speci):00115                 HalfPipe_Seq_UpdFlip       fdb $0000
752F 0000             (./game-mode/speci):00116                 HalfPipe_Vint_Track_Image  fdb $0000
7531 0000             (./game-mode/speci):00117                 SS_Seg_Len_x4              fdb $0000
7533 0000             (./game-mode/speci):00118                 HalfPipe_z_step            fdb $0000
7535 00               (./game-mode/speci):00119                 HalfPipe_Nb_Elapsed_Frames fcb $00 
7536 0000             (./game-mode/speci):00120                 HalfPipe_Vint_Main_Loop    fdb $0000
                      (C:\Users\bhrou\gi):00044                 
                      (C:\Users\bhrou\gi):00045                 * ==============================================================================
                      (C:\Users\bhrou\gi):00046                 * Routines
                      (C:\Users\bhrou\gi):00047                 * ==============================================================================
                      (C:\Users\bhrou\gi):00048                         INCLUDE "./Engine/Ram/BankSwitch.asm"
7538 00               (./Engine/Ram/Bank):00001                 glb_Page                      fcb   $00
                      (./Engine/Ram/Bank):00002                 
7539                  (./Engine/Ram/Bank):00003                 SetCartPageA
7539 B77538           (./Engine/Ram/Bank):00004 [5]     136             sta   glb_Page
753C 2A25             (./Engine/Ram/Bank):00005 [3]     139             bpl   @RAMPg
753E B6E7E6           (./Engine/Ram/Bank):00006 [5]     144             lda   $E7E6
7541 84DF             (./Engine/Ram/Bank):00007 [2]     146             anda  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
7543 B7E7E6           (./Engine/Ram/Bank):00008 [5]     151             sta   $E7E6
7546 86F0             (./Engine/Ram/Bank):00009 [2]     153             lda   #$F0                     ; sortie du mode commande T.2
7548 B70555           (./Engine/Ram/Bank):00010 [5]     158             sta   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
754B 86AA             (./Engine/Ram/Bank):00011 [2]     160             lda   #$AA                     ; sequence pour commutation de page T.2
754D B70555           (./Engine/Ram/Bank):00012 [5]     165             sta   $0555
7550 44               (./Engine/Ram/Bank):00013 [2]     167             lsra                           ; lda   #$55
7551 B702AA           (./Engine/Ram/Bank):00014 [5]     172             sta   $02AA
7554 86C0             (./Engine/Ram/Bank):00015 [2]     174             lda   #$C0
7556 B70555           (./Engine/Ram/Bank):00016 [5]     179             sta   $0555
7559 B67538           (./Engine/Ram/Bank):00017 [5]     184             lda   glb_Page
755C 847F             (./Engine/Ram/Bank):00018 [2]     186             anda  #$7F                     ; le bit 7 doit etre a 0        
755E B70555           (./Engine/Ram/Bank):00019 [5]     191             sta   $0555                    ; selection de la page T.2 en zone cartouche
7561 2003             (./Engine/Ram/Bank):00020 [3]     194             bra   @rts
7563 B7E7E6           (./Engine/Ram/Bank):00021 [5]     199     @RAMPg  sta   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
7566 39               (./Engine/Ram/Bank):00022 [5]     204     @rts    rts
                      (./Engine/Ram/Bank):00023                 
7567                  (./Engine/Ram/Bank):00024                 SetCartPageB
7567 F77538           (./Engine/Ram/Bank):00025 [5]     209             stb   glb_Page
756A 2A25             (./Engine/Ram/Bank):00026 [3]     212             bpl   @RAMPg
756C F6E7E6           (./Engine/Ram/Bank):00027 [5]     217             ldb   $E7E6
756F C4DF             (./Engine/Ram/Bank):00028 [2]     219             andb  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
7571 F7E7E6           (./Engine/Ram/Bank):00029 [5]     224             stb   $E7E6
7574 C6F0             (./Engine/Ram/Bank):00030 [2]     226             ldb   #$F0                     ; sortie du mode commande T.2
7576 F70555           (./Engine/Ram/Bank):00031 [5]     231             stb   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
7579 C6AA             (./Engine/Ram/Bank):00032 [2]     233             ldb   #$AA                     ; sequence pour commutation de page T.2
757B F70555           (./Engine/Ram/Bank):00033 [5]     238             stb   $0555
757E 54               (./Engine/Ram/Bank):00034 [2]     240             lsrb                           ; lda   #$55
757F F702AA           (./Engine/Ram/Bank):00035 [5]     245             stb   $02AA
7582 C6C0             (./Engine/Ram/Bank):00036 [2]     247             ldb   #$C0
7584 F70555           (./Engine/Ram/Bank):00037 [5]     252             stb   $0555
7587 F67538           (./Engine/Ram/Bank):00038 [5]     257             ldb   glb_Page
758A C47F             (./Engine/Ram/Bank):00039 [2]     259             andb  #$7F                     ; le bit 7 doit etre a 0        
758C F70555           (./Engine/Ram/Bank):00040 [5]     264             stb   $0555                    ; selection de la page T.2 en zone cartouche
758F 2003             (./Engine/Ram/Bank):00041 [3]     267             bra   @rts
7591 F7E7E6           (./Engine/Ram/Bank):00042 [5]     272     @RAMPg  stb   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
7594 39               (./Engine/Ram/Bank):00043 [5]     277     @rts    rts
                      (./Engine/Ram/Bank):00044                 
7595                  (./Engine/Ram/Bank):00045                 GetCartPageA
7595 B67538           (./Engine/Ram/Bank):00046 [5]     282             lda   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
7598 2603             (./Engine/Ram/Bank):00047 [3]     285             bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
759A B6E7E6           (./Engine/Ram/Bank):00048 [5]     290             lda   $E7E6
759D 39               (./Engine/Ram/Bank):00049 [5]     295     @rts    rts
                      (./Engine/Ram/Bank):00050                 
759E                  (./Engine/Ram/Bank):00051                 GetCartPageB
759E F67538           (./Engine/Ram/Bank):00052 [5]     300             ldb   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
75A1 2603             (./Engine/Ram/Bank):00053 [3]     303             bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
75A3 F6E7E6           (./Engine/Ram/Bank):00054 [5]     308             ldb   $E7E6
75A6 39               (./Engine/Ram/Bank):00055 [5]     313     @rts   rts
                      (./Engine/Ram/Bank):00056                 
                      (C:\Users\bhrou\gi):00049                         INCLUDE "./Engine/Graphics/WaitVBL.asm"
                      (./Engine/Graphics):00001                 ********************************************************************************
                      (./Engine/Graphics):00002                 * Attente VBL
                      (./Engine/Graphics):00003                 * Alternance de la page 2 et 3 entre affichage et espace cartouche
                      (./Engine/Graphics):00004                 * Alternance de la RAMA et RAM B dans l'espace ecran
                      (./Engine/Graphics):00005                 * ------------------------------------------------------------------------------
                      (./Engine/Graphics):00006                 *
                      (./Engine/Graphics):00007                 * Page Affichee par l'automate Video
                      (./Engine/Graphics):00008                 * ----------------------------------
                      (./Engine/Graphics):00009                 *   $E7DD determine la page affichee a l'ecran
                      (./Engine/Graphics):00010                 *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : page 0
                      (./Engine/Graphics):00011                 *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : page 1
                      (./Engine/Graphics):00012                 *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : page 2
                      (./Engine/Graphics):00013                 *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : page 3
                      (./Engine/Graphics):00014                 *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : couleur du cadre
                      (./Engine/Graphics):00015                 *   Remarque : bit5 et bit4 utilisable uniquement en mode MO
                      (./Engine/Graphics):00016                 *
                      (./Engine/Graphics):00017                 * Page en espace cartouche
                      (./Engine/Graphics):00018                 * ------------------------
                      (./Engine/Graphics):00019                 *   $E7E6 determine la page visible dans l'espace cartouche (0000 a 3FFF)
                      (./Engine/Graphics):00020                 *   bit7 toujours a 0
                      (./Engine/Graphics):00021                 *   bit6=1 : ecriture autorisee
                      (./Engine/Graphics):00022                 *   bit5=1 : espace cartouche recouvert par de la RAM
                      (./Engine/Graphics):00023                 *   bit4=0 : CAS1N valide : banques 0-15 / 1 = CAS2N valide : banques 16-31
                      (./Engine/Graphics):00024                 *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bit0=0 (#$60) : page 0
                      (./Engine/Graphics):00025                 *   ...
                      (./Engine/Graphics):00026                 *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bit0=1 (#$6F) : page 15
                      (./Engine/Graphics):00027                 *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bit0=0 (#$70) : page 16
                      (./Engine/Graphics):00028                 *   ...
                      (./Engine/Graphics):00029                 *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bit0=1 (#$7F) : page 31
                      (./Engine/Graphics):00030                 *
                      (./Engine/Graphics):00031                 * Demi-Page 0 en espace ecran (4000 a 5FFF)
                      (./Engine/Graphics):00032                 * -----------------------------------------
                      (./Engine/Graphics):00033                 *   $E7C3 determine la demi-page de la page 0 visible dans l'espace ecran
                      (./Engine/Graphics):00034                 *   bit0=0 : 8Ko RAMA
                      (./Engine/Graphics):00035                 *   bit0=1 : 8ko RAMB
                      (./Engine/Graphics):00036                 *
                      (./Engine/Graphics):00037                 * Page en espace donnees
                      (./Engine/Graphics):00038                 * ----------------------
                      (./Engine/Graphics):00039                 * lda   #$04
                      (./Engine/Graphics):00040                 * sta   $E7E5                    * selection de la page 04 en RAM Donnees (A000-DFFF)
                      (./Engine/Graphics):00041                 *
                      (./Engine/Graphics):00042                 ********************************************************************************
75A7                  (./Engine/Graphics):00043                 WaitVBL
75A7 FC75FE           (./Engine/Graphics):00044 [6]     319             ldd   Vint_runcount
75AA B37600           (./Engine/Graphics):00045 [7]     326             subd  Vint_Last_runcount
75AD C102             (./Engine/Graphics):00046 [2]     328             cmpb  #2
75AF 240A             (./Engine/Graphics):00047 [3]     331             bhs   SwapVideoPage
75B1                  (./Engine/Graphics):00048                 @a
75B1 7DE7E7           (./Engine/Graphics):00049 [7]     338             tst   $E7E7              * le faisceau n'est pas dans l'ecran
75B4 2AFB             (./Engine/Graphics):00050 [3]     341             bpl   @a                 * tant que le bit est a 0 on boucle
75B6                  (./Engine/Graphics):00051                 @b
75B6 7DE7E7           (./Engine/Graphics):00052 [7]     348             tst   $E7E7              * le faisceau est dans l'ecran
75B9 2BFB             (./Engine/Graphics):00053 [3]     351             bmi   @b                 * tant que le bit est a 1 on boucle
                      (./Engine/Graphics):00054                                         
75BB                  (./Engine/Graphics):00055                 SwapVideoPage
75BB F675C9           (./Engine/Graphics):00056 [5]     356             ldb   am_SwapVideoPage+1 * charge la valeur du ldb suivant am_SwapVideoPage
75BE C440             (./Engine/Graphics):00057 [2]     358             andb  #$40               * alterne bit6=0 et bit6=1 (suivant la valeur B $00 ou $FF)
75C0                  (./Engine/Graphics):00058                 glb_screen_border_color        
75C0 CA80             (./Engine/Graphics):00059 [2]     360             orb   #$80               * bit7=1, bit3 a bit0=couleur de cadre (ici 0)
75C2 F7E7DD           (./Engine/Graphics):00060 [5]     365             stb   $E7DD              * changement page (2 ou 3) affichee a l'ecran
75C5 7375C9           (./Engine/Graphics):00061 [7]     372             com   am_SwapVideoPage+1 * alterne $00 et $FF sur le ldb suivant am_SwapVideoPage
75C8                  (./Engine/Graphics):00062                 am_SwapVideoPage
75C8 C600             (./Engine/Graphics):00063 [2]     374             ldb   #$00
75CA C401             (./Engine/Graphics):00064 [2]     376             andb  #$01               * alterne bit0=0 et bit0=1 (suivant la valeur B $00 ou $FF)
75CC F77605           (./Engine/Graphics):00065 [5]     381             stb   glb_Cur_Wrk_Screen_Id
75CF CA02             (./Engine/Graphics):00066 [2]     383             orb   #$02               * bit1=1
75D1 F7E7E5           (./Engine/Graphics):00067 [5]     388             stb   $E7E5              * changement page (2 ou 3) visible dans l'espace donnees
75D4 F6E7C3           (./Engine/Graphics):00068 [5]     393             ldb   $E7C3              * charge l'identifiant de la demi-page 0 configuree en espace ecran
75D7 C801             (./Engine/Graphics):00069 [2]     395             eorb  #$01               * alterne bit0 = 0 ou 1 changement demi-page de la page 0 visible dans l'espace ecran
75D9 F7E7C3           (./Engine/Graphics):00070 [5]     400             stb   $E7C3
                      (./Engine/Graphics):00071                         
75DC 7C75FD           (./Engine/Graphics):00072 [7]     407             inc   glb_Main_runcount+1
75DF 2603             (./Engine/Graphics):00073 [3]     410             bne   @a
75E1 7C75FC           (./Engine/Graphics):00074 [7]     417             inc   glb_Main_runcount  
75E4                  (./Engine/Graphics):00075                 @a
                      (./Engine/Graphics):00076                 
75E4 FC75FE           (./Engine/Graphics):00077 [6]     423             ldd   Vint_runcount            ; store in Vint_Main_runcount the number of elapsed 50Hz frames
75E7 B37600           (./Engine/Graphics):00078 [7]     430             subd  Vint_Last_runcount       ; used in AnimateSpriteSync
75EA F17604           (./Engine/Graphics):00079 [5]     435             cmpb  Vint_Main_runcount_cap   ; allow to cap Animation and Mvt Sync
75ED 2303             (./Engine/Graphics):00080 [3]     438             bls   @a
75EF F67604           (./Engine/Graphics):00081 [5]     443             ldb   Vint_Main_runcount_cap
75F2 F77603           (./Engine/Graphics):00082 [5]     448     @a      stb   Vint_Main_runcount
                      (./Engine/Graphics):00083                 
75F5 FC75FE           (./Engine/Graphics):00084 [6]     454             ldd   Vint_runcount
75F8 FD7600           (./Engine/Graphics):00085 [6]     460             std   Vint_Last_runcount
75FB 39               (./Engine/Graphics):00086 [5]     465             rts
                      (./Engine/Graphics):00087                         
75FC 0000             (./Engine/Graphics):00088                 glb_Main_runcount      fdb   0 ; page swap counter
75FE 0000             (./Engine/Graphics):00089                 Vint_runcount          fdb   0 ; incremented in 50Hz IRQ
7600 0000             (./Engine/Graphics):00090                 Vint_Last_runcount     fdb   0
7602 00               (./Engine/Graphics):00091                 Vint_Main_runcount_w   fcb   0 ; pad to be able to load Vint_Main_runcount as a word
7603 00               (./Engine/Graphics):00092                 Vint_Main_runcount     fcb   0
7604 00               (./Engine/Graphics):00093                 Vint_Main_runcount_cap fcb   0
7605 00               (./Engine/Graphics):00094                 glb_Cur_Wrk_Screen_Id  fcb   0 ; screen buffer set to write operations (0 or 1)
                      (C:\Users\bhrou\gi):00050                         INCLUDE "./Engine/Graphics/DrawFullscreenImage.asm"     
                      (./Engine/Graphics):00001                 ********************************************************************************  
                      (./Engine/Graphics):00002                 * Draw an image to data area
                      (./Engine/Graphics):00003                 * !!! IRQ should be disabled !!!
                      (./Engine/Graphics):00004                 *
                      (./Engine/Graphics):00005                 * input  REG : [x] image data address  
                      (./Engine/Graphics):00006                 ********************************************************************************    
7606                  (./Engine/Graphics):00007                 DrawFullscreenImage
7606 346E             (./Engine/Graphics):00008 [12]    477             pshs  u,y,dp,b,a
7608 10FF7677         (./Engine/Graphics):00009 [7]     484             sts   DFI_a_rts+2
                      (./Engine/Graphics):00010                 
                      (./Engine/Graphics):00011                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
760C B6E7E6           (    _GetCartPageA):00004 [5]     489             lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
760F B7767A           (./Engine/Graphics):00012 [5]     494             sta   DFI_rts+1                ; backup cart page     
                      (./Engine/Graphics):00013                 
7612 A684             (./Engine/Graphics):00014 [4]     498             lda   ,x
                      (./Engine/Graphics):00015                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7614 B7E7E6           (    _SetCartPageA):00004 [5]     503             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00016                         
7617 EE01             (./Engine/Graphics):00017 [6]     509             ldu   1,x        
                      (./Engine/Graphics):00018                         
7619 10CEDF40         (./Engine/Graphics):00019 [4]     513             lds   #$DF40
761D                  (./Engine/Graphics):00020                 DFI_a
761D 373E             (./Engine/Graphics):00021 [12]    525             pulu  a,b,dp,x,y
761F 343E             (./Engine/Graphics):00022 [12]    537             pshs  y,x,dp,b,a
7621 373E             (./Engine/Graphics):00023 [12]    549             pulu  a,b,dp,x,y
7623 343E             (./Engine/Graphics):00024 [12]    561             pshs  y,x,dp,b,a
7625 373E             (./Engine/Graphics):00025 [12]    573             pulu  a,b,dp,x,y
7627 343E             (./Engine/Graphics):00026 [12]    585             pshs  y,x,dp,b,a
7629 373E             (./Engine/Graphics):00027 [12]    597             pulu  a,b,dp,x,y
762B 343E             (./Engine/Graphics):00028 [12]    609             pshs  y,x,dp,b,a
762D 373E             (./Engine/Graphics):00029 [12]    621             pulu  a,b,dp,x,y
762F 343E             (./Engine/Graphics):00030 [12]    633             pshs  y,x,dp,b,a
7631 373E             (./Engine/Graphics):00031 [12]    645             pulu  a,b,dp,x,y
7633 343E             (./Engine/Graphics):00032 [12]    657             pshs  y,x,dp,b,a
7635 118CC014         (./Engine/Graphics):00033 [5]     662             cmps  #$C014
7639 26E2             (./Engine/Graphics):00034 [3]     665             bne   DFI_a
763B 373E             (./Engine/Graphics):00035 [12]    677             pulu  a,b,dp,x,y
763D 343E             (./Engine/Graphics):00036 [12]    689             pshs  y,x,dp,b,a
763F 373E             (./Engine/Graphics):00037 [12]    701             pulu  a,b,dp,x,y
7641 343E             (./Engine/Graphics):00038 [12]    713             pshs  y,x,dp,b,a
7643 373C             (./Engine/Graphics):00039 [11]    724             pulu  b,dp,x,y
7645 343C             (./Engine/Graphics):00040 [11]    735             pshs  y,x,dp,b
                      (./Engine/Graphics):00041                         
7647 10CEBF40         (./Engine/Graphics):00042 [4]     739             lds   #$BF40
764B                  (./Engine/Graphics):00043                 DFI_b
764B 373E             (./Engine/Graphics):00044 [12]    751             pulu  a,b,dp,x,y
764D 343E             (./Engine/Graphics):00045 [12]    763             pshs  y,x,dp,b,a
764F 373E             (./Engine/Graphics):00046 [12]    775             pulu  a,b,dp,x,y
7651 343E             (./Engine/Graphics):00047 [12]    787             pshs  y,x,dp,b,a
7653 373E             (./Engine/Graphics):00048 [12]    799             pulu  a,b,dp,x,y
7655 343E             (./Engine/Graphics):00049 [12]    811             pshs  y,x,dp,b,a
7657 373E             (./Engine/Graphics):00050 [12]    823             pulu  a,b,dp,x,y
7659 343E             (./Engine/Graphics):00051 [12]    835             pshs  y,x,dp,b,a
765B 373E             (./Engine/Graphics):00052 [12]    847             pulu  a,b,dp,x,y
765D 343E             (./Engine/Graphics):00053 [12]    859             pshs  y,x,dp,b,a
765F 373E             (./Engine/Graphics):00054 [12]    871             pulu  a,b,dp,x,y
7661 343E             (./Engine/Graphics):00055 [12]    883             pshs  y,x,dp,b,a
7663 118CA014         (./Engine/Graphics):00056 [5]     888             cmps  #$A014
7667 26E2             (./Engine/Graphics):00057 [3]     891             bne   DFI_b
7669 373E             (./Engine/Graphics):00058 [12]    903             pulu  a,b,dp,x,y
766B 343E             (./Engine/Graphics):00059 [12]    915             pshs  y,x,dp,b,a
766D 373E             (./Engine/Graphics):00060 [12]    927             pulu  a,b,dp,x,y
766F 343E             (./Engine/Graphics):00061 [12]    939             pshs  y,x,dp,b,a
7671 373C             (./Engine/Graphics):00062 [11]    950             pulu  b,dp,x,y
7673 343C             (./Engine/Graphics):00063 [11]    961             pshs  y,x,dp,b
7675                  (./Engine/Graphics):00064                 DFI_a_rts
7675 10CE0000         (./Engine/Graphics):00065 [4]     965             lds   #$0000
7679                  (./Engine/Graphics):00066                 DFI_rts
7679 8600             (./Engine/Graphics):00067 [2]     967             lda   #$00
                      (./Engine/Graphics):00068                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
767B B7E7E6           (    _SetCartPageA):00004 [5]     972             sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
767E 35EE             (./Engine/Graphics):00069 [14]    986             puls  a,b,dp,y,u,pc
                      (C:\Users\bhrou\gi):00051                         INCLUDE "./Engine/Graphics/AnimateSprite.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * Subroutine to animate a sprite using an animation script
                      (./Engine/Graphics):00003                 *
                      (./Engine/Graphics):00004                 * input REG : [u] pointeur sur l'objet
                      (./Engine/Graphics):00005                 *
                      (./Engine/Graphics):00006                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00007                 
                      (./Engine/Graphics):00008                                                             *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                                                             *; Subroutine to animate a sprite using an animation script
                      (./Engine/Graphics):00010                                                             *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00011                                                             *
                      (./Engine/Graphics):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Graphics):00013                                                             *
                      (./Engine/Graphics):00014                                                             *; sub_16544:
7680                  (./Engine/Graphics):00015                 AnimateSprite                               *AnimateSprite:
                      (./Engine/Graphics):00016                                                             *    moveq   #0,d0
                      (./Engine/Graphics):00017                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
7680 B6E7E6           (    _GetCartPageA):00004 [5]     991             lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
7683 B776DD           (./Engine/Graphics):00018 [5]     996             sta   Anim_Rts+1                    ; backup cart page     
7686 8E9858           (./Engine/Graphics):00019 [3]     999             ldx   #Ani_Page_Index
7689 E6C4             (./Engine/Graphics):00020 [4]     1003            ldb   id,u
768B 3A               (./Engine/Graphics):00021 [3]     1006            abx
768C A684             (./Engine/Graphics):00022 [4]     1010            lda   ,x
                      (./Engine/Graphics):00023                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
768E B7E7E6           (    _SetCartPageA):00004 [5]     1015            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00024                 ;
7691 AE44             (./Engine/Graphics):00025 [6]     1021            ldx   anim,u                        *    move.b  anim(a0),d0      ; move animation number to d0
7693 2A0C             (./Engine/Graphics):00026 [3]     1024            bpl   @a                       ; branch if anim is an address of anim
7695 8E985B           (./Engine/Graphics):00027 [3]     1027            ldx   #Ani_Asd_Index           ; negative means anim,u is a signed 8 bit offset for a LUT
                      (./Engine/Graphics):00028                         ; ldb   id,u                   ; already loaded
7698 58               (./Engine/Graphics):00029 [2]     1029            aslb
7699 3A               (./Engine/Graphics):00030 [3]     1032            abx
769A AE94             (./Engine/Graphics):00031 [8]     1040            ldx   [,x]                     ; load Anim LUT (first entry in Asd LUT)
769C E645             (./Engine/Graphics):00032 [5]     1045            ldb   anim+1,u                 ; load offset
769E 3A               (./Engine/Graphics):00033 [3]     1048            abx                            ; apply offset
769F AE84             (./Engine/Graphics):00034 [5]     1053            ldx   ,x                       ; load target anim address
76A1 AC46             (./Engine/Graphics):00035 [7]     1060    @a      cmpx  prev_anim,u                   *    cmp.b   prev_anim(a0),d0 ; is animation set to change?
76A3 270E             (./Engine/Graphics):00036 [3]     1063            beq   Anim_Run                      *    beq.s   Anim_Run         ; if not, branch
76A5 AF46             (./Engine/Graphics):00037 [6]     1069            stx   prev_anim,u                   *    move.b  d0,prev_anim(a0) ; set prev anim to current animation
                      (./Engine/Graphics):00038                         
76A7 A64A             (./Engine/Graphics):00039 [5]     1074            lda   anim_flags,u
76A9 8401             (./Engine/Graphics):00040 [2]     1076            anda  #anim_link_mask               ; if animation link, when changing animation
76AB 260E             (./Engine/Graphics):00041 [3]     1079            bne   Anim_Reload                   ; will skip frame and duration reinit
                      (./Engine/Graphics):00042                         
76AD C600             (./Engine/Graphics):00043 [2]     1081            ldb   #0                            
76AF E748             (./Engine/Graphics):00044 [5]     1086            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0)          ; reset animation
76B1 2004             (./Engine/Graphics):00045 [3]     1089            bra   @b                            *    move.b  #0,anim_frame_duration(a0) ; reset frame duration
                      (./Engine/Graphics):00046                                                             *; loc_16560:
76B3                  (./Engine/Graphics):00047                 Anim_Run                                    *Anim_Run:
76B3 6A49             (./Engine/Graphics):00048 [7]     1096            dec   anim_frame_duration,u         *    subq.b  #1,anim_frame_duration(a0)   ; subtract 1 from frame duration
76B5 2A25             (./Engine/Graphics):00049 [3]     1099            bpl   Anim_Rts                      *    bpl.s   Anim_Wait                    ; if time remains, branch
                      (./Engine/Graphics):00050                         * no offset table                   *    add.w   d0,d0
                      (./Engine/Graphics):00051                         * anim is the address of anim       *    adda.w  (a1,d0.w),a1                 ; calculate address of appropriate animation script
76B7 E61F             (./Engine/Graphics):00052 [5]     1104    @b      ldb   -1,x                            
76B9 E749             (./Engine/Graphics):00053 [5]     1109            stb   anim_frame_duration,u         *    move.b  (a1),anim_frame_duration(a0) ; load frame duration
76BB                  (./Engine/Graphics):00054                 Anim_Reload                                 *    moveq   #0,d1
76BB E648             (./Engine/Graphics):00055 [5]     1114            ldb   anim_frame,u                  *    move.b  anim_frame(a0),d1 ; load current frame number
76BD 8600             (./Engine/Graphics):00056 [2]     1116            lda   #0
                      (./Engine/Graphics):00057                         _asld
76BF 58               (            _asld):00001 [2]     1118            aslb
76C0 49               (            _asld):00002 [2]     1120            rola
76C1 318B             (./Engine/Graphics):00058 [8]     1128            leay  d,x
76C3 ECA4             (./Engine/Graphics):00059 [5]     1133            ldd   ,y                            *    move.b  1(a1,d1.w),d0 ; read sprite number from script
                      (./Engine/Graphics):00060                         * bmi   Anim_End_FF                 *    bmi.s   Anim_End_FF   ; if animation is complete, branch MJ: Delete this line
76C5 81FA             (./Engine/Graphics):00061 [2]     1135            cmpa  #$FA                          *    cmp.b   #$FA,d0       ; MJ: is it a flag from FA to FF?
76C7 2419             (./Engine/Graphics):00062 [3]     1138            bhs   Anim_End_FF                   *    bhs     Anim_End_FF   ; MJ: if so, branch to flag routines
                      (./Engine/Graphics):00063                                                             *; loc_1657C:
76C9                  (./Engine/Graphics):00064                 Anim_Next                                   *Anim_Next:
                      (./Engine/Graphics):00065                                                                 *    andi.b  #$7F,d0               ; clear sign bit
76C9 ED4C             (./Engine/Graphics):00066 [6]     1144            std   image_set,u                   *    move.b  d0,mapping_frame(a0)  ; load sprite number
76CB A64B             (./Engine/Graphics):00067 [5]     1149            lda   status_flags,u
76CD 8403             (./Engine/Graphics):00068 [2]     1151            anda  #status_xflip_mask|status_yflip_mask
76CF B776D7           (./Engine/Graphics):00069 [5]     1156            sta   @dyn+1
76D2 A642             (./Engine/Graphics):00070 [5]     1161            lda   render_flags,u
76D4 84FE             (./Engine/Graphics):00071 [2]     1163            anda  #^render_xmirror_mask
76D6 8A00             (./Engine/Graphics):00072 [2]     1165    @dyn    ora   #0
76D8 A742             (./Engine/Graphics):00073 [5]     1170            sta   render_flags,u
                      (./Engine/Graphics):00074                                                             *    move.b  status(a0),d1         ; match the orientaion dictated by the object
                      (./Engine/Graphics):00075                                                             *    andi.b  #3,d1                 ; with the orientation used by the object engine
                      (./Engine/Graphics):00076                                                             *    andi.b  #$FC,render_flags(a0)
                      (./Engine/Graphics):00077                                                             *    or.b    d1,render_flags(a0)
76DA 6C48             (./Engine/Graphics):00078 [7]     1177            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)     ; next frame number
                      (./Engine/Graphics):00079                                                             *; return_1659A:
76DC                  (./Engine/Graphics):00080                 Anim_Rts                                    *Anim_Wait:
76DC 8600             (./Engine/Graphics):00081 [2]     1179            lda   #$00                          ; (dynamic)
                      (./Engine/Graphics):00082                         _SetCartPageA                       ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
76DE B7E7E6           (    _SetCartPageA):00004 [5]     1184            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
76E1 39               (./Engine/Graphics):00083 [5]     1189            rts                                 *    rts 
                      (./Engine/Graphics):00084                                                             *; ===========================================================================
                      (./Engine/Graphics):00085                                                             *; loc_1659C:
76E2                  (./Engine/Graphics):00086                 Anim_End_FF                                 *Anim_End_FF:
76E2 4C               (./Engine/Graphics):00087 [2]     1191            inca                                *    addq.b  #1,d0       ; is the end flag = $FF ?
76E3 2608             (./Engine/Graphics):00088 [3]     1194            bne   Anim_End_FE                   *    bne.s   Anim_End_FE ; if not, branch
76E5 C600             (./Engine/Graphics):00089 [2]     1196            ldb   #0                            
76E7 E748             (./Engine/Graphics):00090 [5]     1201            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0) ; restart the animation
76E9 EC84             (./Engine/Graphics):00091 [5]     1206            ldd   ,x                            *    move.b  1(a1),d0          ; read sprite number
76EB 20DC             (./Engine/Graphics):00092 [3]     1209            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./Engine/Graphics):00093                                                             *; ===========================================================================
                      (./Engine/Graphics):00094                                                             *; loc_165AC:
76ED                  (./Engine/Graphics):00095                 Anim_End_FE                                 *Anim_End_FE:
76ED 4C               (./Engine/Graphics):00096 [2]     1211            inca                                *    addq.b  #1,d0             ; is the end flag = $FE ?
76EE 2610             (./Engine/Graphics):00097 [3]     1214            bne   Anim_End_FD                   *    bne.s   Anim_End_FD       ; if not, branch
76F0 A648             (./Engine/Graphics):00098 [5]     1219            lda   anim_frame,u                  
76F2 F776F6           (./Engine/Graphics):00099 [5]     1224            stb   Anim_End_FE_dyn+1             *    move.b  2(a1,d1.w),d0     ; read the next byte in the script
76F5                  (./Engine/Graphics):00100                 Anim_End_FE_dyn
76F5 8000             (./Engine/Graphics):00101 [2]     1226            suba  #$00                          ; (dynamic)                          
76F7 A748             (./Engine/Graphics):00102 [5]     1231            sta   anim_frame,u                  *    sub.b   d0,anim_frame(a0) ; jump back d0 bytes in the script
                      (./Engine/Graphics):00103                                                             *    sub.b   d0,d1
76F9 C602             (./Engine/Graphics):00104 [2]     1233            ldb   #2
76FB 3D               (./Engine/Graphics):00105 [11]    1244            mul                                            
76FC EC8B             (./Engine/Graphics):00106 [9]     1253            ldd   d,x                           *    move.b  1(a1,d1.w),d0     ; read sprite number
76FE 20C9             (./Engine/Graphics):00107 [3]     1256            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./Engine/Graphics):00108                                                             *; ===========================================================================
                      (./Engine/Graphics):00109                                                             *; loc_165C0:
7700                  (./Engine/Graphics):00110                 Anim_End_FD                                 *Anim_End_FD:
7700 4C               (./Engine/Graphics):00111 [2]     1258            inca                                *    addq.b  #1,d0               ; is the end flag = $FD ?
7701 2606             (./Engine/Graphics):00112 [3]     1261            bne   Anim_End_FC                   *    bne.s   Anim_End_FC         ; if not, branch
7703 EC21             (./Engine/Graphics):00113 [6]     1267            ldd   1,y                           ; read word after FD
7705 ED44             (./Engine/Graphics):00114 [6]     1273            std   anim,u                        *    move.b  2(a1,d1.w),anim(a0) ; read next byte, run that animation
7707 20D3             (./Engine/Graphics):00115 [3]     1276            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00116                                                             *; ===========================================================================
                      (./Engine/Graphics):00117                                                             *; loc_165CC:
7709                  (./Engine/Graphics):00118                 Anim_End_FC                                 *Anim_End_FC:
7709 4C               (./Engine/Graphics):00119 [2]     1278            inca                                *    addq.b  #1,d0          ; is the end flag = $FC ?
770A 260B             (./Engine/Graphics):00120 [3]     1281            bne   Anim_End_FB                   *    bne.s   Anim_End_FB    ; if not, branch
770C 6CC81E           (./Engine/Graphics):00121 [7]     1288            inc   routine,u                     *    addq.b  #2,routine(a0) ; jump to next routine
770F 8600             (./Engine/Graphics):00122 [2]     1290            lda   #0                            
7711 A749             (./Engine/Graphics):00123 [5]     1295            sta   anim_frame_duration,u         *    move.b  #0,anim_frame_duration(a0)
7713 6C48             (./Engine/Graphics):00124 [7]     1302            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)
7715 20C5             (./Engine/Graphics):00125 [3]     1305            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00126                                                             *; ===========================================================================
                      (./Engine/Graphics):00127                                                             *; loc_165E0:
7717                  (./Engine/Graphics):00128                 Anim_End_FB                                 *Anim_End_FB:
7717 4C               (./Engine/Graphics):00129 [2]     1307            inca                                *    addq.b  #1,d0                 ; is the end flag = $FB ?
7718 2609             (./Engine/Graphics):00130 [3]     1310            bne   Anim_End_FA                   *    bne.s   Anim_End_FA           ; if not, branch
771A 8600             (./Engine/Graphics):00131 [2]     1312            lda   #0                            
771C A748             (./Engine/Graphics):00132 [5]     1317            sta   anim_frame,u                  *    move.b  #0,anim_frame(a0)     ; reset animation
771E A7C81F           (./Engine/Graphics):00133 [5]     1322            sta   routine_secondary,u           *    clr.b   routine_secondary(a0) ; reset 2nd routine counter
7721 20B9             (./Engine/Graphics):00134 [3]     1325            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00135                                                             *; ===========================================================================
                      (./Engine/Graphics):00136                                                             *; loc_165F0:
7723                  (./Engine/Graphics):00137                 Anim_End_FA                                 *Anim_End_FA:
7723 4C               (./Engine/Graphics):00138 [2]     1327            inca                                *    addq.b  #1,d0                    ; is the end flag = $FA ?
7724 2603             (./Engine/Graphics):00139 [3]     1330            bne   Anim_End                      *    bne.s   Anim_End_F9              ; if not, branch
7726 6CC81F           (./Engine/Graphics):00140 [7]     1337            inc   routine_secondary,u           *    addq.b  #2,routine_secondary(a0) ; jump to next routine    
7729                  (./Engine/Graphics):00141                 Anim_End               
7729 20B1             (./Engine/Graphics):00142 [3]     1340            bra   Anim_Rts                      *    rts
                      (./Engine/Graphics):00143                                                             *; ===========================================================================
                      (./Engine/Graphics):00144                                                             *; loc_165FA:
                      (./Engine/Graphics):00145                                                             *Anim_End_F9:
                      (./Engine/Graphics):00146                                                             *    addq.b  #1,d0            ; is the end flag = $F9 ?
                      (./Engine/Graphics):00147                                                             *    bne.s   Anim_End         ; if not, branch
                      (./Engine/Graphics):00148                                                             *    addq.b  #2,objoff_2A(a0) ; Actually obj89_arrow_routine
                      (./Engine/Graphics):00149                                                             *; return_16602:
                      (./Engine/Graphics):00150                                                             *Anim_End:
                      (./Engine/Graphics):00151                                                             *    rts
                      (./Engine/Graphics):00152                                                             *; End of function AnimateSprite
                      (C:\Users\bhrou\gi):00052                         INCLUDE "./Engine/Graphics/GetImgIdA.asm"
772B                  (./Engine/Graphics):00001                 GetImgIdA
                      (./Engine/Graphics):00002                 
                      (./Engine/Graphics):00003                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
772B B6E7E6           (    _GetCartPageA):00004 [5]     1345            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
772E B77741           (./Engine/Graphics):00004 [5]     1350            sta   GetImgId_Rts+1                ; backup cart page     
7731 8E9855           (./Engine/Graphics):00005 [3]     1353            ldx   #Img_Page_Index               ; call page that store imageset for this object
7734 E6C4             (./Engine/Graphics):00006 [4]     1357            ldb   id,u
7736 3A               (./Engine/Graphics):00007 [3]     1360                    abx
7737 A684             (./Engine/Graphics):00008 [4]     1364                    lda   ,x
                      (./Engine/Graphics):00009                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7739 B7E7E6           (    _SetCartPageA):00004 [5]     1369            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00010                                 
773C AE4C             (./Engine/Graphics):00011 [6]     1375                    ldx   image_set,u
773E A61F             (./Engine/Graphics):00012 [5]     1380                    lda   -1,x
                      (./Engine/Graphics):00013                 
7740                  (./Engine/Graphics):00014                 GetImgId_Rts
7740 C600             (./Engine/Graphics):00015 [2]     1382            ldb   #$00                          ; (dynamic)
                      (./Engine/Graphics):00016                         _SetCartPageB                       ; restore data page
                      (    _SetCartPageB):00001                  IFDEF T2
                      (    _SetCartPageB):00002                         jsr   SetCartPageB
                      (    _SetCartPageB):00003                  ELSE
7742 F7E7E6           (    _SetCartPageB):00004 [5]     1387            stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageB):00005                  ENDC
7745 39               (./Engine/Graphics):00017 [5]     1392            rts
                      (C:\Users\bhrou\gi):00053                         INCLUDE "./Engine/Graphics/DisplaySprite.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * DisplaySprite
                      (./Engine/Graphics):00003                 * -------------
                      (./Engine/Graphics):00004                 * Subroutine to manage sprite priority.
                      (./Engine/Graphics):00005                 * Object's priority is read and object is (un)registred in display engine.
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * Unlike original S2 code, sprite priority is stored in an open doubly linked list
                      (./Engine/Graphics):00011                 * it allows to keep an exact sprite order for each screen buffer 
                      (./Engine/Graphics):00012                 *
                      (./Engine/Graphics):00013                 * DisplaySprite
                      (./Engine/Graphics):00014                 * input REG : [u] object pointer (OST)
                      (./Engine/Graphics):00015                 *
                      (./Engine/Graphics):00016                 * DisplaySprite_x
                      (./Engine/Graphics):00017                 * input REG : [x] object pointer (OST)
                      (./Engine/Graphics):00018                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00019                                                                                            
7746                  (./Engine/Graphics):00020                 DisplaySprite_x 
7746 3456             (./Engine/Graphics):00021 [11]    1403            pshs  d,x,u
7748 1F13             (./Engine/Graphics):00022 [6]     1409            tfr   x,u
774A 2002             (./Engine/Graphics):00023 [3]     1412            bra   DSP_Start
                      (./Engine/Graphics):00024                         
774C                  (./Engine/Graphics):00025                 DisplaySprite 
774C 3456             (./Engine/Graphics):00026 [11]    1423            pshs  d,x,u
                      (./Engine/Graphics):00027                         
774E                  (./Engine/Graphics):00028                 DSP_Start
774E A642             (./Engine/Graphics):00029 [5]     1428            lda   render_flags,u
7750 84DF             (./Engine/Graphics):00030 [2]     1430            anda  #^render_hide_mask            ; unset hide flag
7752 A742             (./Engine/Graphics):00031 [5]     1435            sta   render_flags,u
                      (./Engine/Graphics):00032                 
7754 B67605           (./Engine/Graphics):00033 [5]     1440            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7757 2609             (./Engine/Graphics):00034 [3]     1443            bne   DSP_SetBuffer1
                      (./Engine/Graphics):00035                         
7759                  (./Engine/Graphics):00036                 DSP_SetBuffer0        
7759 30C835           (./Engine/Graphics):00037 [5]     1448            leax  rsv_buffer_0,u                ; set x pointer to object variables that belongs to screen buffer 0
775C 108E77CB         (./Engine/Graphics):00038 [4]     1452            ldy   #DPS_buffer_0                 ; set y pointer to Display Priority Structure that belongs to screen buffer 0
7760 2007             (./Engine/Graphics):00039 [3]     1455            bra   DSP_BufferPositionned
                      (./Engine/Graphics):00040                         
7762                  (./Engine/Graphics):00041                 DSP_SetBuffer1       
7762 30C849           (./Engine/Graphics):00042 [5]     1460            leax  rsv_buffer_1,u                ; set x pointer to object variables that belongs to screen buffer 1
7765 108E784D         (./Engine/Graphics):00043 [4]     1464            ldy   #DPS_buffer_1                 ; set y pointer to Display Priority Structure that belongs to screen buffer 1        
                      (./Engine/Graphics):00044                         
7769                  (./Engine/Graphics):00045                 DSP_BufferPositionned       
7769 A643             (./Engine/Graphics):00046 [5]     1469            lda   priority,u                    ; read priority set for this object
776B A184             (./Engine/Graphics):00047 [4]     1473            cmpa  buf_priority,x
776D 271E             (./Engine/Graphics):00048 [3]     1476            beq   DSP_rts                       ; priority and current priority are the same: nothing to do
776F E684             (./Engine/Graphics):00049 [4]     1480            ldb   buf_priority,x   
7771 2641             (./Engine/Graphics):00050 [3]     1483            bne   DSP_ChangePriority
                      (./Engine/Graphics):00051                         
7773                  (./Engine/Graphics):00052                 DSP_InitPriority
7773 A784             (./Engine/Graphics):00053 [4]     1487            sta   buf_priority,x                ; init priority for this screen buffer with priority from object
                      (./Engine/Graphics):00054                         
7775                  (./Engine/Graphics):00055                 DSP_CheckLastEntry
7775 31A90012         (./Engine/Graphics):00056 [8]     1495            leay  buf_Tbl_Priority_Last_Entry,y
7779 48               (./Engine/Graphics):00057 [2]     1497            asla                                ; change priority number to priority index (value x2)        
777A 6DA6             (./Engine/Graphics):00058 [7]     1504            tst   a,y                           ; test left byte only is ok, no object will be stored at $00__ address
777C 2611             (./Engine/Graphics):00059 [3]     1507            bne   DSP_addToExistingNode         ; not the first object at this priority level, branch
                      (./Engine/Graphics):00060                         
777E                  (./Engine/Graphics):00061                 DSP_addFirstNode        
777E EFA6             (./Engine/Graphics):00062 [6]     1513            stu   a,y                           ; save object as last entry in linked list
7780 31A9FFEE         (./Engine/Graphics):00063 [8]     1521            leay  buf_Tbl_Priority_First_Entry-buf_Tbl_Priority_Last_Entry,y
7784 EFA6             (./Engine/Graphics):00064 [6]     1527            stu   a,y                           ; save object as first entry in linked list
7786 CC0000           (./Engine/Graphics):00065 [3]     1530            ldd   #0
7789 ED01             (./Engine/Graphics):00066 [6]     1536            std   buf_priority_prev_obj,x       ; clear object prev and next link, it's the only object at this priority level
778B ED03             (./Engine/Graphics):00067 [6]     1542            std   buf_priority_next_obj,x
                      (./Engine/Graphics):00068                         
778D                  (./Engine/Graphics):00069                 DSP_rts
778D 35D6             (./Engine/Graphics):00070 [13]    1555            puls  d,x,u,pc                      ; rts        
                      (./Engine/Graphics):00071                         
778F                  (./Engine/Graphics):00072                 DSP_addToExistingNode
778F AEA6             (./Engine/Graphics):00073 [6]     1561            ldx   a,y                           ; x register now store last object at the priority level of current object
7791 F67605           (./Engine/Graphics):00074 [5]     1566            ldb   glb_Cur_Wrk_Screen_Id
7794 260E             (./Engine/Graphics):00075 [3]     1569            bne   DSP_LinkBuffer1
7796 EF8838           (./Engine/Graphics):00076 [6]     1575            stu   rsv_priority_next_obj_0,x     ; link last object with current object if active screen buffer 0
7799 AFC836           (./Engine/Graphics):00077 [6]     1581            stx   rsv_priority_prev_obj_0,u     ; link current object with previous object
779C 6FC838           (./Engine/Graphics):00078 [7]     1588            clr   rsv_priority_next_obj_0,u     ; clear object next link        
779F 6FC839           (./Engine/Graphics):00079 [7]     1595            clr   rsv_priority_next_obj_0+1,u   ; clear object next link        
77A2 200C             (./Engine/Graphics):00080 [3]     1598            bra   DSP_LinkCurWithPrev        
77A4                  (./Engine/Graphics):00081                 DSP_LinkBuffer1        
77A4 EF884C           (./Engine/Graphics):00082 [6]     1604            stu   rsv_priority_next_obj_1,x     ; link last object with current object if active screen buffer 1
77A7 AFC84A           (./Engine/Graphics):00083 [6]     1610            stx   rsv_priority_prev_obj_1,u     ; link current object with previous object
77AA 6FC84C           (./Engine/Graphics):00084 [7]     1617            clr   rsv_priority_next_obj_1,u     ; clear object next link        
77AD 6FC84D           (./Engine/Graphics):00085 [7]     1624            clr   rsv_priority_next_obj_1+1,u   ; clear object next link        
                      (./Engine/Graphics):00086                         
77B0                  (./Engine/Graphics):00087                 DSP_LinkCurWithPrev        
77B0 EFA6             (./Engine/Graphics):00088 [6]     1630            stu   a,y                           ; update last object in index
77B2 35D6             (./Engine/Graphics):00089 [13]    1643            puls  d,x,u,pc                      ; rts
                      (./Engine/Graphics):00090                         
77B4                  (./Engine/Graphics):00091                 DSP_ChangePriority
77B4 3426             (./Engine/Graphics):00092 [9]     1652            pshs  d,y
77B6 31A90024         (./Engine/Graphics):00093 [8]     1660            leay  buf_Lst_Priority_Unset,y
77BA EFB4             (./Engine/Graphics):00094 [8]     1668            stu   [,y]                          ; add current object address to last free unset list cell
77BC ECA4             (./Engine/Graphics):00095 [5]     1673            ldd   ,y
77BE C30002           (./Engine/Graphics):00096 [4]     1677            addd  #2
77C1 EDA4             (./Engine/Graphics):00097 [5]     1682            std   ,y                            ; set unset list free index to next free cell of unset list
77C3 3526             (./Engine/Graphics):00098 [9]     1691            puls  d,y                           ; get back DSP_buffer in y
77C5 8100             (./Engine/Graphics):00099 [2]     1693            cmpa  #0
77C7 26AC             (./Engine/Graphics):00100 [3]     1696            bne   DSP_CheckLastEntry            ; priority is != 0, branch to add object to display priority list
77C9 35D6             (./Engine/Graphics):00101 [13]    1709            puls  d,x,u,pc                      ; rts
                      (./Engine/Graphics):00102                 
                      (./Engine/Graphics):00103                         
                      (./Engine/Graphics):00104                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00105                                                        *; Subroutine to display a sprite/object, when a0 is the object RAM
                      (./Engine/Graphics):00106                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Graphics):00107                                                        *
                      (./Engine/Graphics):00108                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Graphics):00109                                                        *
                      (./Engine/Graphics):00110                                                        *; sub_164F4:
                      (./Engine/Graphics):00111                                                        *DisplaySprite:
                      (./Engine/Graphics):00112                                                        *    lea (Sprite_Table_Input).w,a1
                      (./Engine/Graphics):00113                                                        *    move.w  priority(a0),d0
                      (./Engine/Graphics):00114                                                        *    lsr.w   #1,d0
                      (./Engine/Graphics):00115                                                        *    andi.w  #$380,d0
                      (./Engine/Graphics):00116                                                        *    adda.w  d0,a1
                      (./Engine/Graphics):00117                                                        
                      (./Engine/Graphics):00118                                                        *    cmpi.w  #$7E,(a1)
                      (./Engine/Graphics):00119                                                        *    bhs.s   return_16510
                      (./Engine/Graphics):00120                                                        *    addq.w  #2,(a1)
                      (./Engine/Graphics):00121                                                        
                      (./Engine/Graphics):00122                                                        *    adda.w  (a1),a1
                      (./Engine/Graphics):00123                                                        *    move.w  a0,(a1)
                      (./Engine/Graphics):00124                                                        *
                      (./Engine/Graphics):00125                                                        *return_16510:
                      (./Engine/Graphics):00126                                                        
                      (./Engine/Graphics):00127                                                        *    rts
                      (./Engine/Graphics):00128                                                        *; End of function DisplaySprite       
                      (./Engine/Graphics):00129                 
                      (./Engine/Graphics):00130                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00131                 * Display Priority Structure - DPS
                      (./Engine/Graphics):00132                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00133                 
77CB                  (./Engine/Graphics):00134                 DPS_buffer_0
77CB 0000000000000000 (./Engine/Graphics):00135                 Tbl_Priority_First_Entry_0    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
77DD 0000000000000000 (./Engine/Graphics):00136                 Tbl_Priority_Last_Entry_0     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
77EF 77F1             (./Engine/Graphics):00137                 Lst_Priority_Unset_0          fdb   Lst_Priority_Unset_0+2     ; pointer to end of list (initialized to its own address+2) (buffer 0)
77F1 0000000000000000 (./Engine/Graphics):00138                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
784D                  (./Engine/Graphics):00139                 DPS_buffer_1                              
784D 0000000000000000 (./Engine/Graphics):00140                 Tbl_Priority_First_Entry_1    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
785F 0000000000000000 (./Engine/Graphics):00141                 Tbl_Priority_Last_Entry_1     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
7871 7873             (./Engine/Graphics):00142                 Lst_Priority_Unset_1          fdb   Lst_Priority_Unset_1+2     ; pointer to end of list (initialized to its own address+2) (buffer 1)
7873 0000000000000000 (./Engine/Graphics):00143                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
78CF                  (./Engine/Graphics):00144                 DPS_buffer_end                              
                      (./Engine/Graphics):00145                 
     0000             (./Engine/Graphics):00146                 buf_Tbl_Priority_First_Entry  equ   0                                                            
     0012             (./Engine/Graphics):00147                 buf_Tbl_Priority_Last_Entry   equ   Tbl_Priority_Last_Entry_0-DPS_buffer_0          
     0024             (./Engine/Graphics):00148                 buf_Lst_Priority_Unset        equ   Lst_Priority_Unset_0-DPS_buffer_0                                       
                      (C:\Users\bhrou\gi):00054                         INCLUDE "./Engine/Graphics/CheckSpritesRefresh.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * CheckSpritesRefresh
                      (./Engine/Graphics):00003                 * -------------------
                      (./Engine/Graphics):00004                 * Subroutine to determine if sprites are gonna be erased and/or drawn
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (back to front)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                 
                      (./Engine/Graphics):00013                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00014                 * Sub Priority Objects List - SOL
                      (./Engine/Graphics):00015                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00016                 
78CF 0000000000000000 (./Engine/Graphics):00017                 Tbl_Sub_Object_Erase          fill  0,nb_graphical_objects*2    ; entries of objects that have erase flag in the order back to front
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
792B 0000000000000000 (./Engine/Graphics):00018                 Tbl_Sub_Object_Draw           fill  0,nb_graphical_objects*2    ; entries of objects that have draw flag in the order back to front                                
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
                      (./Engine/Graphics):00019                                                            
7987                  (./Engine/Graphics):00020                 CheckSpritesRefresh
                      (./Engine/Graphics):00021                 
7987                  (./Engine/Graphics):00022                 CSR_Start
7987 CC78CF           (./Engine/Graphics):00023 [3]     1712            ldd   #Tbl_Sub_Object_Erase
798A DDF7             (./Engine/Graphics):00024 [5]     1717            std   <glb_cur_ptr_sub_obj_erase
798C CC792B           (./Engine/Graphics):00025 [3]     1720            ldd   #Tbl_Sub_Object_Draw
798F DDF5             (./Engine/Graphics):00026 [5]     1725            std   <glb_cur_ptr_sub_obj_draw
7991 B67605           (./Engine/Graphics):00027 [5]     1730            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7994 2666             (./Engine/Graphics):00028 [3]     1733            bne   CSR_SetBuffer1
                      (./Engine/Graphics):00029                         
7996                  (./Engine/Graphics):00030                 CSR_SetBuffer0        
7996 8635             (./Engine/Graphics):00031 [2]     1735            lda   #rsv_buffer_0                 ; set offset to object variables that belongs to screen buffer 0
7998 B77A64           (./Engine/Graphics):00032 [5]     1740            sta   CSR_ProcessEachPriorityLevel+2    
799B                  (./Engine/Graphics):00033                 CSR_P8B0
799B FE77DB           (./Engine/Graphics):00034 [6]     1746            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
799E 2707             (./Engine/Graphics):00035 [3]     1749            beq   CSR_P7B0
79A0 8608             (./Engine/Graphics):00036 [2]     1751            lda   #$08
79A2 97F9             (./Engine/Graphics):00037 [4]     1755            sta   <glb_cur_priority        
79A4 BD7A62           (./Engine/Graphics):00038 [8]     1763            jsr   CSR_ProcessEachPriorityLevel   
79A7                  (./Engine/Graphics):00039                 CSR_P7B0
79A7 FE77D9           (./Engine/Graphics):00040 [6]     1769            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
79AA 2707             (./Engine/Graphics):00041 [3]     1772            beq   CSR_P6B0
79AC 8607             (./Engine/Graphics):00042 [2]     1774            lda   #$07
79AE 97F9             (./Engine/Graphics):00043 [4]     1778            sta   <glb_cur_priority        
79B0 BD7A62           (./Engine/Graphics):00044 [8]     1786            jsr   CSR_ProcessEachPriorityLevel   
79B3                  (./Engine/Graphics):00045                 CSR_P6B0
79B3 FE77D7           (./Engine/Graphics):00046 [6]     1792            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
79B6 2707             (./Engine/Graphics):00047 [3]     1795            beq   CSR_P5B0
79B8 8606             (./Engine/Graphics):00048 [2]     1797            lda   #$06
79BA 97F9             (./Engine/Graphics):00049 [4]     1801            sta   <glb_cur_priority        
79BC BD7A62           (./Engine/Graphics):00050 [8]     1809            jsr   CSR_ProcessEachPriorityLevel   
79BF                  (./Engine/Graphics):00051                 CSR_P5B0
79BF FE77D5           (./Engine/Graphics):00052 [6]     1815            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
79C2 2707             (./Engine/Graphics):00053 [3]     1818            beq   CSR_P4B0
79C4 8605             (./Engine/Graphics):00054 [2]     1820            lda   #$05
79C6 97F9             (./Engine/Graphics):00055 [4]     1824            sta   <glb_cur_priority                       
79C8 BD7A62           (./Engine/Graphics):00056 [8]     1832            jsr   CSR_ProcessEachPriorityLevel   
79CB                  (./Engine/Graphics):00057                 CSR_P4B0
79CB FE77D3           (./Engine/Graphics):00058 [6]     1838            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
79CE 2707             (./Engine/Graphics):00059 [3]     1841            beq   CSR_P3B0
79D0 8604             (./Engine/Graphics):00060 [2]     1843            lda   #$04
79D2 97F9             (./Engine/Graphics):00061 [4]     1847            sta   <glb_cur_priority                       
79D4 BD7A62           (./Engine/Graphics):00062 [8]     1855            jsr   CSR_ProcessEachPriorityLevel               
79D7                  (./Engine/Graphics):00063                 CSR_P3B0
79D7 FE77D1           (./Engine/Graphics):00064 [6]     1861            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
79DA 2707             (./Engine/Graphics):00065 [3]     1864            beq   CSR_P2B0
79DC 8603             (./Engine/Graphics):00066 [2]     1866            lda   #$03
79DE 97F9             (./Engine/Graphics):00067 [4]     1870            sta   <glb_cur_priority                       
79E0 BD7A62           (./Engine/Graphics):00068 [8]     1878            jsr   CSR_ProcessEachPriorityLevel      
79E3                  (./Engine/Graphics):00069                 CSR_P2B0
79E3 FE77CF           (./Engine/Graphics):00070 [6]     1884            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
79E6 2707             (./Engine/Graphics):00071 [3]     1887            beq   CSR_P1B0
79E8 8602             (./Engine/Graphics):00072 [2]     1889            lda   #$02
79EA 97F9             (./Engine/Graphics):00073 [4]     1893            sta   <glb_cur_priority                       
79EC BD7A62           (./Engine/Graphics):00074 [8]     1901            jsr   CSR_ProcessEachPriorityLevel  
79EF                  (./Engine/Graphics):00075                 CSR_P1B0
79EF FE77CD           (./Engine/Graphics):00076 [6]     1907            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
79F2 2707             (./Engine/Graphics):00077 [3]     1910            beq   CSR_rtsB0
79F4 8601             (./Engine/Graphics):00078 [2]     1912            lda   #$01
79F6 97F9             (./Engine/Graphics):00079 [4]     1916            sta   <glb_cur_priority                       
79F8 BD7A62           (./Engine/Graphics):00080 [8]     1924            jsr   CSR_ProcessEachPriorityLevel
79FB                  (./Engine/Graphics):00081                 CSR_rtsB0        
79FB 39               (./Engine/Graphics):00082 [5]     1929            rts
                      (./Engine/Graphics):00083                         
79FC                  (./Engine/Graphics):00084                 CSR_SetBuffer1       
79FC 8649             (./Engine/Graphics):00085 [2]     1931            lda   #rsv_buffer_1                 ; set offset to object variables that belongs to screen buffer 1
79FE B77A64           (./Engine/Graphics):00086 [5]     1936            sta   CSR_ProcessEachPriorityLevel+2        
7A01                  (./Engine/Graphics):00087                 CSR_P8B1
7A01 FE785D           (./Engine/Graphics):00088 [6]     1942            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
7A04 2707             (./Engine/Graphics):00089 [3]     1945            beq   CSR_P7B1
7A06 8608             (./Engine/Graphics):00090 [2]     1947            lda   #$08
7A08 97F9             (./Engine/Graphics):00091 [4]     1951            sta   <glb_cur_priority        
7A0A BD7A62           (./Engine/Graphics):00092 [8]     1959            jsr   CSR_ProcessEachPriorityLevel   
7A0D                  (./Engine/Graphics):00093                 CSR_P7B1
7A0D FE785B           (./Engine/Graphics):00094 [6]     1965            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
7A10 2707             (./Engine/Graphics):00095 [3]     1968            beq   CSR_P6B1
7A12 8607             (./Engine/Graphics):00096 [2]     1970            lda   #$07
7A14 97F9             (./Engine/Graphics):00097 [4]     1974            sta   <glb_cur_priority                       
7A16 BD7A62           (./Engine/Graphics):00098 [8]     1982            jsr   CSR_ProcessEachPriorityLevel   
7A19                  (./Engine/Graphics):00099                 CSR_P6B1
7A19 FE7859           (./Engine/Graphics):00100 [6]     1988            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
7A1C 2707             (./Engine/Graphics):00101 [3]     1991            beq   CSR_P5B1
7A1E 8606             (./Engine/Graphics):00102 [2]     1993            lda   #$06
7A20 97F9             (./Engine/Graphics):00103 [4]     1997            sta   <glb_cur_priority                       
7A22 BD7A62           (./Engine/Graphics):00104 [8]     2005            jsr   CSR_ProcessEachPriorityLevel   
7A25                  (./Engine/Graphics):00105                 CSR_P5B1
7A25 FE7857           (./Engine/Graphics):00106 [6]     2011            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
7A28 2707             (./Engine/Graphics):00107 [3]     2014            beq   CSR_P4B1
7A2A 8605             (./Engine/Graphics):00108 [2]     2016            lda   #$05
7A2C 97F9             (./Engine/Graphics):00109 [4]     2020            sta   <glb_cur_priority                       
7A2E BD7A62           (./Engine/Graphics):00110 [8]     2028            jsr   CSR_ProcessEachPriorityLevel   
7A31                  (./Engine/Graphics):00111                 CSR_P4B1
7A31 FE7855           (./Engine/Graphics):00112 [6]     2034            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
7A34 2707             (./Engine/Graphics):00113 [3]     2037            beq   CSR_P3B1
7A36 8604             (./Engine/Graphics):00114 [2]     2039            lda   #$04
7A38 97F9             (./Engine/Graphics):00115 [4]     2043            sta   <glb_cur_priority
7A3A BD7A62           (./Engine/Graphics):00116 [8]     2051            jsr   CSR_ProcessEachPriorityLevel               
7A3D                  (./Engine/Graphics):00117                 CSR_P3B1
7A3D FE7853           (./Engine/Graphics):00118 [6]     2057            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
7A40 2707             (./Engine/Graphics):00119 [3]     2060            beq   CSR_P2B1
7A42 8603             (./Engine/Graphics):00120 [2]     2062            lda   #$03
7A44 97F9             (./Engine/Graphics):00121 [4]     2066            sta   <glb_cur_priority                       
7A46 BD7A62           (./Engine/Graphics):00122 [8]     2074            jsr   CSR_ProcessEachPriorityLevel      
7A49                  (./Engine/Graphics):00123                 CSR_P2B1
7A49 FE7851           (./Engine/Graphics):00124 [6]     2080            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
7A4C 2707             (./Engine/Graphics):00125 [3]     2083            beq   CSR_P1B1
7A4E 8602             (./Engine/Graphics):00126 [2]     2085            lda   #$02
7A50 97F9             (./Engine/Graphics):00127 [4]     2089            sta   <glb_cur_priority                       
7A52 BD7A62           (./Engine/Graphics):00128 [8]     2097            jsr   CSR_ProcessEachPriorityLevel  
7A55                  (./Engine/Graphics):00129                 CSR_P1B1
7A55 FE784F           (./Engine/Graphics):00130 [6]     2103            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
7A58 2707             (./Engine/Graphics):00131 [3]     2106            beq   CSR_rtsB1
7A5A 8601             (./Engine/Graphics):00132 [2]     2108            lda   #$01
7A5C 97F9             (./Engine/Graphics):00133 [4]     2112            sta   <glb_cur_priority                       
7A5E BD7A62           (./Engine/Graphics):00134 [8]     2120            jsr   CSR_ProcessEachPriorityLevel
7A61                  (./Engine/Graphics):00135                 CSR_rtsB1        
7A61 39               (./Engine/Graphics):00136 [5]     2125            rts
                      (./Engine/Graphics):00137                 
7A62                  (./Engine/Graphics):00138                 CSR_ProcessEachPriorityLevel
7A62 30C810           (./Engine/Graphics):00139 [5]     2130            leax  16,u                          ; dynamic offset, x point to object variables relative to current writable buffer (beware that rsv_buffer_0 and rsv_buffer_1 should be equ >=16)
                      (./Engine/Graphics):00140                         
7A65                  (./Engine/Graphics):00141                 CSR_CheckDelHide
7A65 A642             (./Engine/Graphics):00142 [5]     2135            lda   render_flags,u
7A67 8460             (./Engine/Graphics):00143 [2]     2137            anda  #render_hide_mask|render_todelete_mask
7A69 1026005B         (./Engine/Graphics):00144 [5+?]   2142            lbne  CSR_DoNotDisplaySprite      
                      (./Engine/Graphics):00145                 
7A6D                  (./Engine/Graphics):00146                 CSR_CheckRefresh        
7A6D A6C822           (./Engine/Graphics):00147 [5]     2147            lda   rsv_render_flags,u
7A70 8401             (./Engine/Graphics):00148 [2]     2149            anda  #rsv_render_checkrefresh_mask ; branch if checkrefresh is true
7A72 1026014F         (./Engine/Graphics):00149 [5+?]   2154            lbne  CSR_CheckErase
                      (./Engine/Graphics):00150                 
7A76                  (./Engine/Graphics):00151                 CSR_UpdSpriteImageBasedOnMirror
                      (./Engine/Graphics):00152                 
                      (./Engine/Graphics):00153                         ; an image set is made of 1 to 4 image subsets
                      (./Engine/Graphics):00154                         ; each subset represent a mirrored version of the image (N: normal, X: x mirror, Y: y mirror, XY: xy mirror)
                      (./Engine/Graphics):00155                         ; this code set the active image subset based on mirror flags
                      (./Engine/Graphics):00156                 
7A76 A6C822           (./Engine/Graphics):00157 [5]     2159            lda   rsv_render_flags,u
7A79 8A01             (./Engine/Graphics):00158 [2]     2161            ora   #rsv_render_checkrefresh_mask
7A7B A7C822           (./Engine/Graphics):00159 [5]     2166            sta   rsv_render_flags,u            ; set checkrefresh flag to true
                      (./Engine/Graphics):00160                         
7A7E 108E9855         (./Engine/Graphics):00161 [4]     2170            ldy   #Img_Page_Index               ; call page that store imageset for this object
7A82 8600             (./Engine/Graphics):00162 [2]     2172            lda   #$00
7A84 E6C4             (./Engine/Graphics):00163 [4]     2176            ldb   id,u
7A86 A6AB             (./Engine/Graphics):00164 [8]     2184            lda   d,y
                      (./Engine/Graphics):00165                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
7A88 B7E7E6           (    _SetCartPageA):00004 [5]     2189            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Graphics):00166                         
7A8B A642             (./Engine/Graphics):00167 [5]     2194            lda   render_flags,u                ; set image to display based on x and y mirror flags
7A8D 8403             (./Engine/Graphics):00168 [2]     2196            anda  #render_xmirror_mask|render_ymirror_mask
7A8F 10AE4C           (./Engine/Graphics):00169 [7]     2203            ldy   image_set,u
7A92 E626             (./Engine/Graphics):00170 [5]     2208            ldb   image_center_offset,y
7A94 E7C825           (./Engine/Graphics):00171 [5]     2213            stb   rsv_image_center_offset,u        
7A97 E6A6             (./Engine/Graphics):00172 [5]     2218            ldb   a,y
7A99 31A5             (./Engine/Graphics):00173 [5]     2223            leay  b,y                           ; read image set index
7A9B 10AFC826         (./Engine/Graphics):00174 [7]     2230            sty   rsv_image_subset,u
                      (./Engine/Graphics):00175                         
7A9F                  (./Engine/Graphics):00176                 CSR_CheckPlayFieldCoord
7A9F A642             (./Engine/Graphics):00177 [5]     2235            lda   render_flags,u
7AA1 8410             (./Engine/Graphics):00178 [2]     2237            anda  #render_playfieldcoord_mask
7AA3 274A             (./Engine/Graphics):00179 [3]     2240            beq   CSR_ComputeMappingFrame       ; branch if position is already expressed in screen coordinate
                      (./Engine/Graphics):00180                 
                      (./Engine/Graphics):00181                         ; purpose here is to check if image coordinate in the playfield
                      (./Engine/Graphics):00182                         ; can be converted to screen position, if not it is flagged out of range
                      (./Engine/Graphics):00183                 
7AA5 EC4E             (./Engine/Graphics):00184 [6]     2246            ldd   x_pos,u
7AA7 93F3             (./Engine/Graphics):00185 [6]     2252            subd  <glb_camera_x_pos
7AA9 10250110         (./Engine/Graphics):00186 [5+?]   2257            lblo  CSR_SetOutOfRange             ; out of range if x_pos < glb_camera_x_pos
7AAD 4D               (./Engine/Graphics):00187 [2]     2259            tsta 
7AAE 1026010B         (./Engine/Graphics):00188 [5+?]   2264            lbne  CSR_SetOutOfRange             ; out of range if x_pos + 256 > glb_camera_x_pos
7AB2 E7C814           (./Engine/Graphics):00189 [5]     2269            stb   x_pixel,u
                      (./Engine/Graphics):00190                 
7AB5 ECC811           (./Engine/Graphics):00191 [6]     2275            ldd   y_pos,u
7AB8 93F1             (./Engine/Graphics):00192 [6]     2281            subd  <glb_camera_y_pos
7ABA 102500FF         (./Engine/Graphics):00193 [5+?]   2286            lblo  CSR_SetOutOfRange             ; out of range if y_pos < glb_camera_y_pos
7ABE 4D               (./Engine/Graphics):00194 [2]     2288            tsta 
7ABF 102600FA         (./Engine/Graphics):00195 [5+?]   2293            lbne  CSR_SetOutOfRange             ; out of range if y_pos + 256 > glb_camera_y_pos
7AC3 E7C815           (./Engine/Graphics):00196 [5]     2298            stb   y_pixel,u
7AC6 2027             (./Engine/Graphics):00197 [3]     2301            bra   CSR_ComputeMappingFrame
                      (./Engine/Graphics):00198                         
7AC8                  (./Engine/Graphics):00199                 CSR_DoNotDisplaySprite
7AC8 A643             (./Engine/Graphics):00200 [5]     2306            lda   priority,u                     
7ACA 91F9             (./Engine/Graphics):00201 [4]     2310            cmpa  <glb_cur_priority 
7ACC 261A             (./Engine/Graphics):00202 [3]     2313            bne   CSR_NextObject                ; next object if this one is a new priority record (no need to erase) 
                      (./Engine/Graphics):00203                         
7ACE A6C822           (./Engine/Graphics):00204 [5]     2318            lda   rsv_render_flags,u
7AD1 84F9             (./Engine/Graphics):00205 [2]     2320            anda  #^rsv_render_erasesprite_mask&^rsv_render_displaysprite_mask ; set erase and display flag to false
7AD3 A7C822           (./Engine/Graphics):00206 [5]     2325            sta   rsv_render_flags,u
                      (./Engine/Graphics):00207                                 
7AD6 E68813           (./Engine/Graphics):00208 [5]     2330            ldb   buf_prev_render_flags,x
7AD9 2A0D             (./Engine/Graphics):00209 [3]     2333            bpl   CSR_NextObject                ; branch if not on screen
                      (./Engine/Graphics):00210                         
7ADB 8A02             (./Engine/Graphics):00211 [2]     2335            ora   #rsv_render_erasesprite_mask  ; set erase flag to true if on screen                  
7ADD A7C822           (./Engine/Graphics):00212 [5]     2340            sta   rsv_render_flags,u
                      (./Engine/Graphics):00213                         
7AE0 109EF7           (./Engine/Graphics):00214 [6]     2346            ldy   <glb_cur_ptr_sub_obj_erase         ; maintain list of changing sprites to erase
7AE3 EFA1             (./Engine/Graphics):00215 [8]     2354            stu   ,y++
7AE5 109FF7           (./Engine/Graphics):00216 [6]     2360            sty   <glb_cur_ptr_sub_obj_erase 
                      (./Engine/Graphics):00217                         
7AE8                  (./Engine/Graphics):00218                 CSR_NextObject
7AE8 EE03             (./Engine/Graphics):00219 [6]     2366            ldu   buf_priority_next_obj,x
7AEA 1026FF74         (./Engine/Graphics):00220 [5+?]   2371            lbne  CSR_ProcessEachPriorityLevel   
7AEE 39               (./Engine/Graphics):00221 [5]     2376            rts
                      (./Engine/Graphics):00222                 
7AEF                  (./Engine/Graphics):00223                 CSR_ComputeMappingFrame
                      (./Engine/Graphics):00224                 
                      (./Engine/Graphics):00225                         ; The image subset reference up to 4 version of an image
                      (./Engine/Graphics):00226                         ; Draw/Erase, Draw routines and shifted version by 1 pixel of these two routines
                      (./Engine/Graphics):00227                         ; The following code set the appropriate routine that will draw the image
                      (./Engine/Graphics):00228                         ; First thing is to check if the image position is odd or even
                      (./Engine/Graphics):00229                         ; and select the appropriate routine. If no routine is found, it will select the avaible routine.
                      (./Engine/Graphics):00230                         ; The selected image will also be based on image type overlay or not (Simple Draw or Draw/Erase)
                      (./Engine/Graphics):00231                 
7AEF E6C814           (./Engine/Graphics):00232 [5]     2381    @a      ldb   x_pixel,u                     ; compute mapping_frame 
7AF2 E8C825           (./Engine/Graphics):00233 [5]     2386    @b      eorb  rsv_image_center_offset,u     ; case of odd image center switch shifted image with normal
7AF5 C401             (./Engine/Graphics):00234 [2]     2388            andb  #1                            ; index of sub image is encoded in two bits: 00|B0, 01|D0, 10|B1, 11|D1         
7AF7 58               (./Engine/Graphics):00235 [2]     2390            aslb                                ; set bit2 for 1px shifted image  
7AF8 A642             (./Engine/Graphics):00236 [5]     2395            lda   render_flags,u            
7AFA 8404             (./Engine/Graphics):00237 [2]     2397            anda  #render_overlay_mask          ; set bit1 for normal (background save) or overlay sprite (no background save)
7AFC 2701             (./Engine/Graphics):00238 [3]     2400            beq   @c
7AFE 5C               (./Engine/Graphics):00239 [2]     2402            incb
7AFF                  (./Engine/Graphics):00240                 @c
7AFF A6A5             (./Engine/Graphics):00241 [5]     2407            lda   b,y
7B01 2708             (./Engine/Graphics):00242 [3]     2410            beq   CSR_NoDefinedFrame
7B03 31A6             (./Engine/Graphics):00243 [5]     2415            leay  a,y                           ; read image subset index
7B05 10AFC828         (./Engine/Graphics):00244 [7]     2422            sty   rsv_mapping_frame,u
7B09 2021             (./Engine/Graphics):00245 [3]     2425            bra   CSR_UpdateMetadata
7B0B                  (./Engine/Graphics):00246                 CSR_NoDefinedFrame
7B0B C802             (./Engine/Graphics):00247 [2]     2427            eorb  #%00000010                    ; check if there is an alternate shifted image available
7B0D 2705             (./Engine/Graphics):00248 [3]     2430            beq   @e
7B0F 6CC825           (./Engine/Graphics):00249 [7]     2437            inc   rsv_image_center_offset,u     ; ajust offset for alternate
7B12 2003             (./Engine/Graphics):00250 [3]     2440            bra   @f
7B14 6AC825           (./Engine/Graphics):00251 [7]     2447    @e      dec   rsv_image_center_offset,u
7B17 6DA5             (./Engine/Graphics):00252 [7]     2454    @f      tst   b,y
7B19 26E4             (./Engine/Graphics):00253 [3]     2457            bne   @c        
                      (./Engine/Graphics):00254                 
7B1B 108E0000         (./Engine/Graphics):00255 [4]     2461            ldy   #0                            ; no defined frame, nothing will be displayed
7B1F 10AFC828         (./Engine/Graphics):00256 [7]     2468            sty   rsv_mapping_frame,u
7B23 A642             (./Engine/Graphics):00257 [5]     2473            lda   render_flags,u
7B25 8A20             (./Engine/Graphics):00258 [2]     2475            ora   #render_hide_mask             ; set hide flag
7B27 A742             (./Engine/Graphics):00259 [5]     2480            sta   render_flags,u
7B29 7E7BC5           (./Engine/Graphics):00260 [4]     2484            jmp   CSR_CheckErase
                      (./Engine/Graphics):00261                                 
7B2C                  (./Engine/Graphics):00262                 CSR_UpdateMetadata
7B2C A626             (./Engine/Graphics):00263 [5]     2489            lda   erase_nb_cell,y               ; copy current image metadata into object data
7B2E A7C82A           (./Engine/Graphics):00264 [5]     2494            sta   rsv_erase_nb_cell,u           ; this is needed to avoid a lot of page switch 
7B31 A6A4             (./Engine/Graphics):00265 [4]     2498            lda   page_draw_routine,y           ; during following routines
7B33 A7C82B           (./Engine/Graphics):00266 [5]     2503            sta   rsv_page_draw_routine,u
7B36 EC21             (./Engine/Graphics):00267 [6]     2509            ldd   draw_routine,y
7B38 EDC82C           (./Engine/Graphics):00268 [6]     2515            std   rsv_draw_routine,u
7B3B A623             (./Engine/Graphics):00269 [5]     2520            lda   page_erase_routine,y
7B3D A7C82E           (./Engine/Graphics):00270 [5]     2525            sta   rsv_page_erase_routine,u
7B40 EC24             (./Engine/Graphics):00271 [6]     2531            ldd   erase_routine,y
7B42 EDC82F           (./Engine/Graphics):00272 [6]     2537            std   rsv_erase_routine,u
                      (./Engine/Graphics):00273                         
7B45                  (./Engine/Graphics):00274                 CSR_CheckPosition        
7B45 E6C815           (./Engine/Graphics):00275 [5]     2542            ldb   y_pixel,u                     ; check if sprite is fully in screen vertical range
7B48 10AEC826         (./Engine/Graphics):00276 [7]     2549            ldy   rsv_image_subset,u
7B4C EB25             (./Engine/Graphics):00277 [5]     2554            addb  image_subset_y1_offset,y
7B4E C1E3             (./Engine/Graphics):00278 [2]     2556            cmpb  #screen_bottom
7B50 226B             (./Engine/Graphics):00279 [3]     2559            bhi   CSR_SetOutOfRange
7B52 C11C             (./Engine/Graphics):00280 [2]     2561            cmpb  #screen_top
7B54 2567             (./Engine/Graphics):00281 [3]     2564            blo   CSR_SetOutOfRange        
7B56 E7C832           (./Engine/Graphics):00282 [5]     2569            stb   rsv_y1_pixel,u
7B59 10AE4C           (./Engine/Graphics):00283 [7]     2576            ldy   image_set,u
7B5C EB25             (./Engine/Graphics):00284 [5]     2581            addb  image_y_size,y
7B5E C1E3             (./Engine/Graphics):00285 [2]     2583            cmpb  #screen_bottom
7B60 225B             (./Engine/Graphics):00286 [3]     2586            bhi   CSR_SetOutOfRange
7B62 C11C             (./Engine/Graphics):00287 [2]     2588            cmpb  #screen_top
7B64 2557             (./Engine/Graphics):00288 [3]     2591            blo   CSR_SetOutOfRange        
7B66 E7C834           (./Engine/Graphics):00289 [5]     2596            stb   rsv_y2_pixel,u
7B69 E1C832           (./Engine/Graphics):00290 [5]     2601            cmpb  rsv_y1_pixel,u                ; check wrapping
7B6C 254F             (./Engine/Graphics):00291 [3]     2604            blo   CSR_SetOutOfRange
                      (./Engine/Graphics):00292                                 
7B6E A642             (./Engine/Graphics):00293 [5]     2609            lda   render_flags,u                ; check if sprite is fully in screen horizontal range
7B70 8580             (./Engine/Graphics):00294 [2]     2611            bita  #render_xloop_mask
7B72 262B             (./Engine/Graphics):00295 [3]     2614            bne   CSR_DontCheckXFrontier   
                      (./Engine/Graphics):00296                         
7B74 E6C814           (./Engine/Graphics):00297 [5]     2619            ldb   x_pixel,u
7B77 10AEC826         (./Engine/Graphics):00298 [7]     2626            ldy   rsv_image_subset,u
7B7B EB24             (./Engine/Graphics):00299 [5]     2631            addb  image_subset_x1_offset,y
7B7D C1CF             (./Engine/Graphics):00300 [2]     2633            cmpb  #screen_right
7B7F 223C             (./Engine/Graphics):00301 [3]     2636            bhi   CSR_SetOutOfRange
7B81 C130             (./Engine/Graphics):00302 [2]     2638            cmpb  #screen_left
7B83 2538             (./Engine/Graphics):00303 [3]     2641            blo   CSR_SetOutOfRange
7B85 E7C831           (./Engine/Graphics):00304 [5]     2646            stb   rsv_x1_pixel,u
7B88 10AE4C           (./Engine/Graphics):00305 [7]     2653            ldy   image_set,u
7B8B EB24             (./Engine/Graphics):00306 [5]     2658            addb  image_x_size,y
7B8D C1CF             (./Engine/Graphics):00307 [2]     2660            cmpb  #screen_right
7B8F 222C             (./Engine/Graphics):00308 [3]     2663            bhi   CSR_SetOutOfRange
7B91 C130             (./Engine/Graphics):00309 [2]     2665            cmpb  #screen_left
7B93 2528             (./Engine/Graphics):00310 [3]     2668            blo   CSR_SetOutOfRange
7B95 E7C833           (./Engine/Graphics):00311 [5]     2673            stb   rsv_x2_pixel,u
7B98 E1C831           (./Engine/Graphics):00312 [5]     2678            cmpb  rsv_x1_pixel,u                ; check wrapping
7B9B 2520             (./Engine/Graphics):00313 [3]     2681            blo   CSR_SetOutOfRange 
                      (./Engine/Graphics):00314                                 
7B9D 2014             (./Engine/Graphics):00315 [3]     2684            bra   CSR_DontCheckXFrontier_end        
                      (./Engine/Graphics):00316                         
7B9F                  (./Engine/Graphics):00317                 CSR_DontCheckXFrontier  
7B9F E6C814           (./Engine/Graphics):00318 [5]     2689            ldb   x_pixel,u
7BA2 10AEC826         (./Engine/Graphics):00319 [7]     2696            ldy   rsv_image_subset,u
7BA6 EB24             (./Engine/Graphics):00320 [5]     2701            addb  image_subset_x1_offset,y
7BA8 E7C831           (./Engine/Graphics):00321 [5]     2706            stb   rsv_x1_pixel,u
                      (./Engine/Graphics):00322                         
7BAB 10AE4C           (./Engine/Graphics):00323 [7]     2713            ldy   image_set,u
7BAE EB24             (./Engine/Graphics):00324 [5]     2718            addb  image_x_size,y
7BB0 E7C833           (./Engine/Graphics):00325 [5]     2723            stb   rsv_x2_pixel,u      
                      (./Engine/Graphics):00326                 
7BB3                  (./Engine/Graphics):00327                 CSR_DontCheckXFrontier_end        
7BB3 A6C822           (./Engine/Graphics):00328 [5]     2728            lda   rsv_render_flags,u
7BB6 84F7             (./Engine/Graphics):00329 [2]     2730            anda  #^rsv_render_outofrange_mask  ; unset out of range flag
7BB8 A7C822           (./Engine/Graphics):00330 [5]     2735            sta   rsv_render_flags,u
7BBB 2008             (./Engine/Graphics):00331 [3]     2738            bra   CSR_CheckErase
                      (./Engine/Graphics):00332                                 
7BBD                  (./Engine/Graphics):00333                 CSR_SetOutOfRange
7BBD A6C822           (./Engine/Graphics):00334 [5]     2743            lda   rsv_render_flags,u
7BC0 8A08             (./Engine/Graphics):00335 [2]     2745            ora   #rsv_render_outofrange_mask   ; set out of range flag
7BC2 A7C822           (./Engine/Graphics):00336 [5]     2750            sta   rsv_render_flags,u
                      (./Engine/Graphics):00337                 
7BC5                  (./Engine/Graphics):00338                 CSR_CheckErase
7BC5 BF7C9F           (./Engine/Graphics):00339 [6]     2756            stx   CSR_CheckDraw+1
7BC8 A684             (./Engine/Graphics):00340 [4]     2760            lda   buf_priority,x
7BCA 91F9             (./Engine/Graphics):00341 [4]     2764            cmpa  <glb_cur_priority 
7BCC 102600CE         (./Engine/Graphics):00342 [5+?]   2769            lbne  CSR_CheckDraw
                      (./Engine/Graphics):00343                         
7BD0 109EF7           (./Engine/Graphics):00344 [6]     2775            ldy   <glb_cur_ptr_sub_obj_erase
                      (./Engine/Graphics):00345                         
7BD3 A6C822           (./Engine/Graphics):00346 [5]     2780            lda   rsv_render_flags,u
7BD6 8408             (./Engine/Graphics):00347 [2]     2782            anda  #rsv_render_outofrange_mask
7BD8 2709             (./Engine/Graphics):00348 [3]     2785            beq   CSR_CheckErase_InRange
7BDA A68813           (./Engine/Graphics):00349 [5]     2790            lda   buf_prev_render_flags,x
7BDD 102A0109         (./Engine/Graphics):00350 [5+?]   2795            lbpl  CSR_SetEraseDrawFalse         ; branch if object is not on screen    
7BE1 2024             (./Engine/Graphics):00351 [3]     2798            bra   CSR_SetEraseTrue
                      (./Engine/Graphics):00352                                 
7BE3                  (./Engine/Graphics):00353                 CSR_CheckErase_InRange        
7BE3 A68813           (./Engine/Graphics):00354 [5]     2803            lda   buf_prev_render_flags,x
7BE6 102A00AC         (./Engine/Graphics):00355 [5+?]   2808            lbpl  CSR_SetEraseFalse             ; branch if object is not on screen
7BEA 96E8             (./Engine/Graphics):00356 [4]     2812            lda   <glb_force_sprite_refresh
7BEC 2619             (./Engine/Graphics):00357 [3]     2815            bne   CSR_SetEraseTrue
7BEE ECC814           (./Engine/Graphics):00358 [6]     2821            ldd   xy_pixel,u
7BF1 44               (./Engine/Graphics):00359 [2]     2823            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit, y position precision is y_pixel  
7BF2 10A30D           (./Engine/Graphics):00360 [8]     2831            cmpd  buf_prev_xy_pixel,x
7BF5 2610             (./Engine/Graphics):00361 [3]     2834            bne   CSR_SetEraseTrue              ; branch if object moved since last frame
7BF7 ECC828           (./Engine/Graphics):00362 [6]     2840            ldd   rsv_mapping_frame,u
7BFA 10A305           (./Engine/Graphics):00363 [8]     2848            cmpd  buf_prev_mapping_frame,x
7BFD 2608             (./Engine/Graphics):00364 [3]     2851            bne   CSR_SetEraseTrue              ; branch if object image changed since last frame
7BFF A643             (./Engine/Graphics):00365 [5]     2856            lda   priority,u
7C01 A184             (./Engine/Graphics):00366 [4]     2860            cmpa  buf_priority,x
7C03 2602             (./Engine/Graphics):00367 [3]     2863            bne   CSR_SetEraseTrue              ; branch if object priority changed since last frame
7C05 2010             (./Engine/Graphics):00368 [3]     2866            bra   CSR_SubEraseSpriteSearchInit  ; branch if object is on screen but unchanged since last frame
                      (./Engine/Graphics):00369                         
7C07                  (./Engine/Graphics):00370                 CSR_SetEraseTrue        
7C07 A6C822           (./Engine/Graphics):00371 [5]     2871            lda   rsv_render_flags,u
7C0A 8A02             (./Engine/Graphics):00372 [2]     2873            ora   #rsv_render_erasesprite_mask
7C0C A7C822           (./Engine/Graphics):00373 [5]     2878            sta   rsv_render_flags,u
                      (./Engine/Graphics):00374                         
7C0F EFA1             (./Engine/Graphics):00375 [8]     2886            stu   ,y++
7C11 109FF7           (./Engine/Graphics):00376 [6]     2892            sty   <glb_cur_ptr_sub_obj_erase
                      (./Engine/Graphics):00377                                 
7C14 7E7C9E           (./Engine/Graphics):00378 [4]     2896            jmp   CSR_CheckDraw
                      (./Engine/Graphics):00379                         
7C17                  (./Engine/Graphics):00380                 CSR_SubEraseSpriteSearchInit
                      (./Engine/Graphics):00381                 
                      (./Engine/Graphics):00382                         * search a collision with a sprite under the current sprite
                      (./Engine/Graphics):00383                         * the sprite under should have to be erased or displayed
                      (./Engine/Graphics):00384                         * in this case it forces the refresh of the current sprite that was not supposed to be refreshed
                      (./Engine/Graphics):00385                         * as a sub loop, this should be optimized as much as possible ... I hope it is
                      (./Engine/Graphics):00386                         * there are two lists because a sprite can be erased at a position
                      (./Engine/Graphics):00387                         * and displayed at another position : both cases should be tested !
                      (./Engine/Graphics):00388                 
7C17 9EF7             (./Engine/Graphics):00389 [5]     2901            ldx   <glb_cur_ptr_sub_obj_erase       
7C19 B67605           (./Engine/Graphics):00390 [5]     2906            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
7C1C 2627             (./Engine/Graphics):00391 [3]     2909            bne   CSR_SubEraseSearchB1
                      (./Engine/Graphics):00392                         
7C1E                  (./Engine/Graphics):00393                 CSR_SubEraseSearchB0
7C1E 8C78CF           (./Engine/Graphics):00394 [4]     2913            cmpx  #Tbl_Sub_Object_Erase
7C21 2749             (./Engine/Graphics):00395 [3]     2916            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
7C23 10AE83           (./Engine/Graphics):00396 [9]     2925            ldy   ,--x
                      (./Engine/Graphics):00397                         
7C26                  (./Engine/Graphics):00398                 CSR_SubEraseCheckCollisionB0
7C26 ECA844           (./Engine/Graphics):00399 [6]     2931            ldd   rsv_prev_xy1_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 and rsv_prev_y_pixel_0 in one instruction
7C29 A1C833           (./Engine/Graphics):00400 [5]     2936            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
7C2C 22F0             (./Engine/Graphics):00401 [3]     2939            bhi   CSR_SubEraseSearchB0
7C2E E1C834           (./Engine/Graphics):00402 [5]     2944            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
7C31 22EB             (./Engine/Graphics):00403 [3]     2947            bhi   CSR_SubEraseSearchB0
7C33 ECA846           (./Engine/Graphics):00404 [6]     2953            ldd   rsv_prev_xy2_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 + rsv_prev_mapping_frame_0.x_size and rsv_prev_y_pixel_0 + rsv_prev_mapping_frame_0.y_size in one instruction
7C36 A1C831           (./Engine/Graphics):00405 [5]     2958            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
7C39 25E3             (./Engine/Graphics):00406 [3]     2961            blo   CSR_SubEraseSearchB0
7C3B E1C832           (./Engine/Graphics):00407 [5]     2966            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
7C3E 25DE             (./Engine/Graphics):00408 [3]     2969            blo   CSR_SubEraseSearchB0
                      (./Engine/Graphics):00409                         
7C40 109EF7           (./Engine/Graphics):00410 [6]     2975            ldy   <glb_cur_ptr_sub_obj_erase
7C43 20C2             (./Engine/Graphics):00411 [3]     2978            bra   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00412                 
7C45                  (./Engine/Graphics):00413                 CSR_SubEraseSearchB1
7C45 8C78CF           (./Engine/Graphics):00414 [4]     2982            cmpx  #Tbl_Sub_Object_Erase
7C48 2722             (./Engine/Graphics):00415 [3]     2985            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
7C4A 10AE83           (./Engine/Graphics):00416 [9]     2994            ldy   ,--x
                      (./Engine/Graphics):00417                         
7C4D                  (./Engine/Graphics):00418                 CSR_SubEraseCheckCollisionB1
7C4D ECA858           (./Engine/Graphics):00419 [6]     3000            ldd   rsv_prev_xy1_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 and rsv_prev_y_pixel_1 in one instruction
7C50 A1C833           (./Engine/Graphics):00420 [5]     3005            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
7C53 22F0             (./Engine/Graphics):00421 [3]     3008            bhi   CSR_SubEraseSearchB1
7C55 E1C834           (./Engine/Graphics):00422 [5]     3013            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
7C58 22EB             (./Engine/Graphics):00423 [3]     3016            bhi   CSR_SubEraseSearchB1
7C5A ECA85A           (./Engine/Graphics):00424 [6]     3022            ldd   rsv_prev_xy2_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 + rsv_prev_mapping_frame_1.x_size and rsv_prev_y_pixel_1 + rsv_prev_mapping_frame_1.y_size in one instruction
7C5D A1C831           (./Engine/Graphics):00425 [5]     3027            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
7C60 25E3             (./Engine/Graphics):00426 [3]     3030            blo   CSR_SubEraseSearchB1
7C62 E1C832           (./Engine/Graphics):00427 [5]     3035            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
7C65 25DE             (./Engine/Graphics):00428 [3]     3038            blo   CSR_SubEraseSearchB1
                      (./Engine/Graphics):00429                         
7C67 109EF7           (./Engine/Graphics):00430 [6]     3044            ldy   <glb_cur_ptr_sub_obj_erase
7C6A 209B             (./Engine/Graphics):00431 [3]     3047            bra   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00432                 
7C6C                  (./Engine/Graphics):00433                 CSR_SubDrawSpriteSearchInit
7C6C 9EF5             (./Engine/Graphics):00434 [5]     3052            ldx   <glb_cur_ptr_sub_obj_draw
                      (./Engine/Graphics):00435                         
7C6E                  (./Engine/Graphics):00436                 CSR_SubDrawSearch
7C6E 8C792B           (./Engine/Graphics):00437 [4]     3056            cmpx  #Tbl_Sub_Object_Draw
7C71 2723             (./Engine/Graphics):00438 [3]     3059            beq   CSR_SetEraseFalse             ; branch if no more sub objects
7C73 10AE83           (./Engine/Graphics):00439 [9]     3068            ldy   ,--x
                      (./Engine/Graphics):00440                 
7C76                  (./Engine/Graphics):00441                 CSR_SubDrawCheckCollision
7C76 ECA831           (./Engine/Graphics):00442 [6]     3074            ldd   rsv_xy1_pixel,y               ; sub entry : x_pixel and y_pixel in one instruction
7C79 A1C833           (./Engine/Graphics):00443 [5]     3079            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
7C7C 22F0             (./Engine/Graphics):00444 [3]     3082            bhi   CSR_SubDrawSearch
7C7E E1C834           (./Engine/Graphics):00445 [5]     3087            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
7C81 22EB             (./Engine/Graphics):00446 [3]     3090            bhi   CSR_SubDrawSearch
7C83 ECA833           (./Engine/Graphics):00447 [6]     3096            ldd   rsv_xy2_pixel,y               ; sub entry : x_pixel + rsv_mapping_frame.x_size and y_pixel + rsv_mapping_frame.y_size in one instruction
7C86 A1C831           (./Engine/Graphics):00448 [5]     3101            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
7C89 25E3             (./Engine/Graphics):00449 [3]     3104            blo   CSR_SubDrawSearch
7C8B E1C832           (./Engine/Graphics):00450 [5]     3109            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
7C8E 25DE             (./Engine/Graphics):00451 [3]     3112            blo   CSR_SubDrawSearch
                      (./Engine/Graphics):00452                         
7C90 109EF7           (./Engine/Graphics):00453 [6]     3118            ldy   <glb_cur_ptr_sub_obj_erase
7C93 7E7C07           (./Engine/Graphics):00454 [4]     3122            jmp   CSR_SetEraseTrue              ; found a collision
                      (./Engine/Graphics):00455                 
7C96                  (./Engine/Graphics):00456                 CSR_SetEraseFalse
7C96 A6C822           (./Engine/Graphics):00457 [5]     3127            lda   rsv_render_flags,u 
7C99 84FD             (./Engine/Graphics):00458 [2]     3129            anda  #^rsv_render_erasesprite_mask
7C9B A7C822           (./Engine/Graphics):00459 [5]     3134            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00460                                
7C9E                  (./Engine/Graphics):00461                 CSR_CheckDraw
7C9E 8EFFFF           (./Engine/Graphics):00462 [3]     3137            ldx   #$FFFF                        ; dynamic restore x
7CA1 A643             (./Engine/Graphics):00463 [5]     3142            lda   priority,u
7CA3 91F9             (./Engine/Graphics):00464 [4]     3146            cmpa  <glb_cur_priority 
7CA5 1026FE3F         (./Engine/Graphics):00465 [5+?]   3151            lbne  CSR_NextObject
                      (./Engine/Graphics):00466                         
7CA9 109EF5           (./Engine/Graphics):00467 [6]     3157            ldy   <glb_cur_ptr_sub_obj_draw
                      (./Engine/Graphics):00468                         
7CAC A6C822           (./Engine/Graphics):00469 [5]     3162            lda   rsv_render_flags,u
7CAF 8408             (./Engine/Graphics):00470 [2]     3164            anda  #rsv_render_outofrange_mask
7CB1 263F             (./Engine/Graphics):00471 [3]     3167            bne   CSR_SetDrawFalse              ; branch if object image is out of range
7CB3 ECC828           (./Engine/Graphics):00472 [6]     3173            ldd   rsv_mapping_frame,u
7CB6 273A             (./Engine/Graphics):00473 [3]     3176            beq   CSR_SetDrawFalse              ; branch if object have no image
7CB8 A642             (./Engine/Graphics):00474 [5]     3181            lda   render_flags,u
7CBA 8420             (./Engine/Graphics):00475 [2]     3183            anda  #render_hide_mask
7CBC 2634             (./Engine/Graphics):00476 [3]     3186            bne   CSR_SetDrawFalse              ; branch if object is hidden
                      (./Engine/Graphics):00477                         
7CBE                  (./Engine/Graphics):00478                 CSR_SetDrawTrue 
7CBE A6C822           (./Engine/Graphics):00479 [5]     3191            lda   rsv_render_flags,u
7CC1 8A04             (./Engine/Graphics):00480 [2]     3193            ora   #rsv_render_displaysprite_mask ; set displaysprite flag   
7CC3 A7C822           (./Engine/Graphics):00481 [5]     3198            sta   rsv_render_flags,u         
                      (./Engine/Graphics):00482                         
7CC6 8502             (./Engine/Graphics):00483 [2]     3200            bita  #rsv_render_erasesprite_mask
7CC8 2702             (./Engine/Graphics):00484 [3]     3203            beq   CSR_SDT1
7CCA 2007             (./Engine/Graphics):00485 [3]     3206            bra   CSR_SDT2
7CCC                  (./Engine/Graphics):00486                 CSR_SDT1                      
7CCC E68813           (./Engine/Graphics):00487 [5]     3211            ldb   buf_prev_render_flags,x
7CCF 2B0C             (./Engine/Graphics):00488 [3]     3214            bmi   CSR_SetHide
7CD1 2005             (./Engine/Graphics):00489 [3]     3217            bra   CSR_SDT3      
7CD3                  (./Engine/Graphics):00490                 CSR_SDT2                      
7CD3 E68813           (./Engine/Graphics):00491 [5]     3222            ldb   buf_prev_render_flags,x
7CD6 2A05             (./Engine/Graphics):00492 [3]     3225            bpl   CSR_SetHide
7CD8                  (./Engine/Graphics):00493                 CSR_SDT3
7CD8 EFA1             (./Engine/Graphics):00494 [8]     3233            stu   ,y++
7CDA 109FF5           (./Engine/Graphics):00495 [6]     3239            sty   <glb_cur_ptr_sub_obj_draw          ; maintain list of changing sprites to draw, should be to draw and ((on screen and to erase) or (not on screen and not to erase)) 
                      (./Engine/Graphics):00496                 
7CDD                  (./Engine/Graphics):00497                 CSR_SetHide        
7CDD A642             (./Engine/Graphics):00498 [5]     3244            lda   render_flags,u
7CDF 8A20             (./Engine/Graphics):00499 [2]     3246            ora   #render_hide_mask             ; set hide flag
7CE1 A742             (./Engine/Graphics):00500 [5]     3251            sta   render_flags,u        
                      (./Engine/Graphics):00501                         
7CE3 EE03             (./Engine/Graphics):00502 [6]     3257            ldu   buf_priority_next_obj,x
7CE5 1026FD79         (./Engine/Graphics):00503 [5+?]   3262            lbne  CSR_ProcessEachPriorityLevel   
7CE9 39               (./Engine/Graphics):00504 [5]     3267            rts
                      (./Engine/Graphics):00505                 
7CEA                  (./Engine/Graphics):00506                 CSR_SetEraseDrawFalse 
7CEA A6C822           (./Engine/Graphics):00507 [5]     3272            lda   rsv_render_flags,u 
7CED 84FD             (./Engine/Graphics):00508 [2]     3274            anda  #^rsv_render_erasesprite_mask
7CEF A7C822           (./Engine/Graphics):00509 [5]     3279            sta   rsv_render_flags,u 
                      (./Engine/Graphics):00510                 
7CF2                  (./Engine/Graphics):00511                 CSR_SetDrawFalse 
7CF2 A6C822           (./Engine/Graphics):00512 [5]     3284            lda   rsv_render_flags,u
7CF5 84FB             (./Engine/Graphics):00513 [2]     3286            anda  #^rsv_render_displaysprite_mask
7CF7 A7C822           (./Engine/Graphics):00514 [5]     3291            sta   rsv_render_flags,u
                      (./Engine/Graphics):00515                         
7CFA EE03             (./Engine/Graphics):00516 [6]     3297            ldu   buf_priority_next_obj,x
7CFC 1026FD62         (./Engine/Graphics):00517 [5+?]   3302            lbne   CSR_ProcessEachPriorityLevel   
7D00 39               (./Engine/Graphics):00518 [5]     3307            rts      
                      (C:\Users\bhrou\gi):00055                         INCLUDE "./Engine/Graphics/EraseSprites.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * EraseSprites
                      (./Engine/Graphics):00003                 * ------------
                      (./Engine/Graphics):00004                 * Subroutine to erase sprites on screen
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (front to back)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                                                 
                      (./Engine/Graphics):00013                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00014                 * Background Backup Cells - BBC
                      (./Engine/Graphics):00015                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00016                 
                      (./Engine/Graphics):00017                 * ----- Cell variables
     0000             (./Engine/Graphics):00018                 nb_cells                      equ   0
     0001             (./Engine/Graphics):00019                 cell_start                    equ   1
     0003             (./Engine/Graphics):00020                 cell_end                      equ   3
     0005             (./Engine/Graphics):00021                 next_entry                    equ   5
     0007             (./Engine/Graphics):00022                 entry_size                    equ   7
                      (./Engine/Graphics):00023                 
                      (./Engine/Graphics):00024                 * ----- Cells List
     0080             (./Engine/Graphics):00025                 nb_free_cells                 equ   128
     0040             (./Engine/Graphics):00026                 cell_size                     equ   64     ; 64 bytes x 128 from $4000 to $5FFF
     6000             (./Engine/Graphics):00027                 cell_start_adr                equ   $6000
                      (./Engine/Graphics):00028                 
7D01 7D03             (./Engine/Graphics):00029                 Lst_FreeCellFirstEntry_0      fdb   Lst_FreeCell_0 ; Pointer to first entry in free cell list (buffer 0)
7D03 80               (./Engine/Graphics):00030                 Lst_FreeCell_0                fcb   nb_free_cells ; init of first free cell
7D04 4000             (./Engine/Graphics):00031                                               fdb   cell_start_adr-cell_size*nb_free_cells
7D06 6000             (./Engine/Graphics):00032                                               fdb   cell_start_adr
7D08 0000             (./Engine/Graphics):00033                                               fdb   $0000
7D0A 0000000000000000 (./Engine/Graphics):00034                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 0)
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./Engine/Graphics):00035                                               
7EC9 7ECB             (./Engine/Graphics):00036                 Lst_FreeCellFirstEntry_1      fdb   Lst_FreeCell_1 ; Pointer to first entry in free cell list (buffer 1)
7ECB 80               (./Engine/Graphics):00037                 Lst_FreeCell_1                fcb   nb_free_cells ; init of first free cell
7ECC 4000             (./Engine/Graphics):00038                                               fdb   cell_start_adr-cell_size*nb_free_cells
7ECE 6000             (./Engine/Graphics):00039                                               fdb   cell_start_adr
7ED0 0000             (./Engine/Graphics):00040                                               fdb   $0000
7ED2 0000000000000000 (./Engine/Graphics):00041                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 1)                                                
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./Engine/Graphics):00042                                                                                            
8091                  (./Engine/Graphics):00043                 EraseSprites
8091 8600             (./Engine/Graphics):00044 [2]     3309            lda   #0
8093 97E8             (./Engine/Graphics):00045 [4]     3313            sta   <glb_force_sprite_refresh
                      (./Engine/Graphics):00046                 
8095                  (./Engine/Graphics):00047                 ESP_Start
8095 B67605           (./Engine/Graphics):00048 [5]     3318            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
8098 2669             (./Engine/Graphics):00049 [3]     3321            bne   ESP_P1B1
                      (./Engine/Graphics):00050                 
809A                  (./Engine/Graphics):00051                 ESP_P1B0
809A FE77DF           (./Engine/Graphics):00052 [6]     3327            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
809D 2708             (./Engine/Graphics):00053 [3]     3330            beq   ESP_P2B0
809F 8601             (./Engine/Graphics):00054 [2]     3332            lda   #$01
80A1 B78170           (./Engine/Graphics):00055 [5]     3337            sta   ESP_CheckPriorityB0+1        
80A4 BD816C           (./Engine/Graphics):00056 [8]     3345            jsr   ESP_ProcessEachPriorityLevelB0
80A7                  (./Engine/Graphics):00057                 ESP_P2B0
80A7 FE77E1           (./Engine/Graphics):00058 [6]     3351            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+4
80AA 2708             (./Engine/Graphics):00059 [3]     3354            beq   ESP_P3B0
80AC 8602             (./Engine/Graphics):00060 [2]     3356            lda   #$02
80AE B78170           (./Engine/Graphics):00061 [5]     3361            sta   ESP_CheckPriorityB0+1        
80B1 BD816C           (./Engine/Graphics):00062 [8]     3369            jsr   ESP_ProcessEachPriorityLevelB0   
80B4                  (./Engine/Graphics):00063                 ESP_P3B0
80B4 FE77E3           (./Engine/Graphics):00064 [6]     3375            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+6
80B7 2708             (./Engine/Graphics):00065 [3]     3378            beq   ESP_P4B0
80B9 8603             (./Engine/Graphics):00066 [2]     3380            lda   #$03
80BB B78170           (./Engine/Graphics):00067 [5]     3385            sta   ESP_CheckPriorityB0+1        
80BE BD816C           (./Engine/Graphics):00068 [8]     3393            jsr   ESP_ProcessEachPriorityLevelB0   
80C1                  (./Engine/Graphics):00069                 ESP_P4B0
80C1 FE77E5           (./Engine/Graphics):00070 [6]     3399            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+8
80C4 2708             (./Engine/Graphics):00071 [3]     3402            beq   ESP_P5B0
80C6 8604             (./Engine/Graphics):00072 [2]     3404            lda   #$04
80C8 B78170           (./Engine/Graphics):00073 [5]     3409            sta   ESP_CheckPriorityB0+1        
80CB BD816C           (./Engine/Graphics):00074 [8]     3417            jsr   ESP_ProcessEachPriorityLevelB0   
80CE                  (./Engine/Graphics):00075                 ESP_P5B0
80CE FE77E7           (./Engine/Graphics):00076 [6]     3423            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+10
80D1 2708             (./Engine/Graphics):00077 [3]     3426            beq   ESP_P6B0
80D3 8605             (./Engine/Graphics):00078 [2]     3428            lda   #$05
80D5 B78170           (./Engine/Graphics):00079 [5]     3433            sta   ESP_CheckPriorityB0+1        
80D8 BD816C           (./Engine/Graphics):00080 [8]     3441            jsr   ESP_ProcessEachPriorityLevelB0               
80DB                  (./Engine/Graphics):00081                 ESP_P6B0
80DB FE77E9           (./Engine/Graphics):00082 [6]     3447            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+12
80DE 2708             (./Engine/Graphics):00083 [3]     3450            beq   ESP_P7B0
80E0 8606             (./Engine/Graphics):00084 [2]     3452            lda   #$06
80E2 B78170           (./Engine/Graphics):00085 [5]     3457            sta   ESP_CheckPriorityB0+1        
80E5 BD816C           (./Engine/Graphics):00086 [8]     3465            jsr   ESP_ProcessEachPriorityLevelB0      
80E8                  (./Engine/Graphics):00087                 ESP_P7B0
80E8 FE77EB           (./Engine/Graphics):00088 [6]     3471            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+14
80EB 2708             (./Engine/Graphics):00089 [3]     3474            beq   ESP_P8B0
80ED 8607             (./Engine/Graphics):00090 [2]     3476            lda   #$07
80EF B78170           (./Engine/Graphics):00091 [5]     3481            sta   ESP_CheckPriorityB0+1        
80F2 BD816C           (./Engine/Graphics):00092 [8]     3489            jsr   ESP_ProcessEachPriorityLevelB0  
80F5                  (./Engine/Graphics):00093                 ESP_P8B0
80F5 FE77ED           (./Engine/Graphics):00094 [6]     3495            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+16
80F8 2708             (./Engine/Graphics):00095 [3]     3498            beq   ESP_rtsB0
80FA 8608             (./Engine/Graphics):00096 [2]     3500            lda   #$08
80FC B78170           (./Engine/Graphics):00097 [5]     3505            sta   ESP_CheckPriorityB0+1                   
80FF BD816C           (./Engine/Graphics):00098 [8]     3513            jsr   ESP_ProcessEachPriorityLevelB0
8102                  (./Engine/Graphics):00099                 ESP_rtsB0        
8102 39               (./Engine/Graphics):00100 [5]     3518            rts
                      (./Engine/Graphics):00101                         
8103                  (./Engine/Graphics):00102                 ESP_P1B1
8103 FE7861           (./Engine/Graphics):00103 [6]     3524            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
8106 2708             (./Engine/Graphics):00104 [3]     3527            beq   ESP_P2B1
8108 8601             (./Engine/Graphics):00105 [2]     3529            lda   #$01
810A B781E9           (./Engine/Graphics):00106 [5]     3534            sta   ESP_CheckPriorityB1+1        
810D BD81E5           (./Engine/Graphics):00107 [8]     3542            jsr   ESP_ProcessEachPriorityLevelB1
8110                  (./Engine/Graphics):00108                 ESP_P2B1
8110 FE7863           (./Engine/Graphics):00109 [6]     3548            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+4
8113 2708             (./Engine/Graphics):00110 [3]     3551            beq   ESP_P3B1
8115 8602             (./Engine/Graphics):00111 [2]     3553            lda   #$02
8117 B781E9           (./Engine/Graphics):00112 [5]     3558            sta   ESP_CheckPriorityB1+1        
811A BD81E5           (./Engine/Graphics):00113 [8]     3566            jsr   ESP_ProcessEachPriorityLevelB1   
811D                  (./Engine/Graphics):00114                 ESP_P3B1
811D FE7865           (./Engine/Graphics):00115 [6]     3572            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+6
8120 2708             (./Engine/Graphics):00116 [3]     3575            beq   ESP_P4B1
8122 8603             (./Engine/Graphics):00117 [2]     3577            lda   #$03
8124 B781E9           (./Engine/Graphics):00118 [5]     3582            sta   ESP_CheckPriorityB1+1        
8127 BD81E5           (./Engine/Graphics):00119 [8]     3590            jsr   ESP_ProcessEachPriorityLevelB1   
812A                  (./Engine/Graphics):00120                 ESP_P4B1
812A FE7867           (./Engine/Graphics):00121 [6]     3596            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+8
812D 2708             (./Engine/Graphics):00122 [3]     3599            beq   ESP_P5B1
812F 8604             (./Engine/Graphics):00123 [2]     3601            lda   #$04
8131 B781E9           (./Engine/Graphics):00124 [5]     3606            sta   ESP_CheckPriorityB1+1        
8134 BD81E5           (./Engine/Graphics):00125 [8]     3614            jsr   ESP_ProcessEachPriorityLevelB1   
8137                  (./Engine/Graphics):00126                 ESP_P5B1
8137 FE7869           (./Engine/Graphics):00127 [6]     3620            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+10
813A 2708             (./Engine/Graphics):00128 [3]     3623            beq   ESP_P6B1
813C 8605             (./Engine/Graphics):00129 [2]     3625            lda   #$05
813E B781E9           (./Engine/Graphics):00130 [5]     3630            sta   ESP_CheckPriorityB1+1        
8141 BD81E5           (./Engine/Graphics):00131 [8]     3638            jsr   ESP_ProcessEachPriorityLevelB1               
8144                  (./Engine/Graphics):00132                 ESP_P6B1
8144 FE786B           (./Engine/Graphics):00133 [6]     3644            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+12
8147 2708             (./Engine/Graphics):00134 [3]     3647            beq   ESP_P7B1
8149 8606             (./Engine/Graphics):00135 [2]     3649            lda   #$06
814B B781E9           (./Engine/Graphics):00136 [5]     3654            sta   ESP_CheckPriorityB1+1        
814E BD81E5           (./Engine/Graphics):00137 [8]     3662            jsr   ESP_ProcessEachPriorityLevelB1      
8151                  (./Engine/Graphics):00138                 ESP_P7B1
8151 FE786D           (./Engine/Graphics):00139 [6]     3668            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+14
8154 2708             (./Engine/Graphics):00140 [3]     3671            beq   ESP_P8B1
8156 8607             (./Engine/Graphics):00141 [2]     3673            lda   #$07
8158 B781E9           (./Engine/Graphics):00142 [5]     3678            sta   ESP_CheckPriorityB1+1        
815B BD81E5           (./Engine/Graphics):00143 [8]     3686            jsr   ESP_ProcessEachPriorityLevelB1  
815E                  (./Engine/Graphics):00144                 ESP_P8B1
815E FE786F           (./Engine/Graphics):00145 [6]     3692            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+16
8161 2708             (./Engine/Graphics):00146 [3]     3695            beq   ESP_rtsB1
8163 8608             (./Engine/Graphics):00147 [2]     3697            lda   #$08
8165 B781E9           (./Engine/Graphics):00148 [5]     3702            sta   ESP_CheckPriorityB1+1        
8168 BD81E5           (./Engine/Graphics):00149 [8]     3710            jsr   ESP_ProcessEachPriorityLevelB1
816B                  (./Engine/Graphics):00150                 ESP_rtsB1        
816B 39               (./Engine/Graphics):00151 [5]     3715            rts
                      (./Engine/Graphics):00152                 
                      (./Engine/Graphics):00153                 * -----------------------------------------------
                      (./Engine/Graphics):00154                 * BUFFER0
                      (./Engine/Graphics):00155                 * -----------------------------------------------
                      (./Engine/Graphics):00156                 
816C                  (./Engine/Graphics):00157                 ESP_ProcessEachPriorityLevelB0
816C A6C835           (./Engine/Graphics):00158 [5]     3720            lda   rsv_priority_0,u
                      (./Engine/Graphics):00159                         
816F                  (./Engine/Graphics):00160                 ESP_CheckPriorityB0
816F 8100             (./Engine/Graphics):00161 [2]     3722            cmpa  #0                            ; dynamic current priority
8171 10260068         (./Engine/Graphics):00162 [5+?]   3727            lbne   ESP_NextObjectB0             ; do not process this entry (case of priority change)
                      (./Engine/Graphics):00163                         
8175                  (./Engine/Graphics):00164                 ESP_UnsetCheckRefreshB0
8175 A6C822           (./Engine/Graphics):00165 [5]     3732            lda   rsv_render_flags,u
8178 E642             (./Engine/Graphics):00166 [5]     3737            ldb   render_flags,u
817A C408             (./Engine/Graphics):00167 [2]     3739            andb  #render_motionless_mask
817C 2605             (./Engine/Graphics):00168 [3]     3742            bne   ESP_CheckEraseB0
817E 84FE             (./Engine/Graphics):00169 [2]     3744            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag
8180 A7C822           (./Engine/Graphics):00170 [5]     3749            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00171                         
8183                  (./Engine/Graphics):00172                 ESP_CheckEraseB0
8183 8402             (./Engine/Graphics):00173 [2]     3751            anda  #rsv_render_erasesprite_mask
8185 10270054         (./Engine/Graphics):00174 [5+?]   3756            lbeq   ESP_NextObjectB0
8189 E6C848           (./Engine/Graphics):00175 [5]     3761            ldb   rsv_prev_render_flags_0,u
818C C401             (./Engine/Graphics):00176 [2]     3763            andb  #rsv_prev_render_overlay_mask
818E 263D             (./Engine/Graphics):00177 [3]     3766            bne   ESP_UnsetOnScreenFlagB0
                      (./Engine/Graphics):00178                         
8190                  (./Engine/Graphics):00179                 ESP_CallEraseRoutineB0
8190 A6C83D           (./Engine/Graphics):00180 [5]     3771            lda   rsv_prev_page_erase_routine_0,u
                      (./Engine/Graphics):00181                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8193 B7E7E6           (    _SetCartPageA):00004 [5]     3776            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8196 AEC83E           (./Engine/Graphics):00182 [6]     3782            ldx   rsv_prev_erase_routine_0,u
8199 FF81A5           (./Engine/Graphics):00183 [6]     3788            stu   ESP_CallEraseRoutineB0_00+1   ; backup u (pointer to object)                
819C EEC840           (./Engine/Graphics):00184 [6]     3794            ldu   rsv_bgdata_0,u                ; cell_start background data        
819F AD84             (./Engine/Graphics):00185 [7]     3801            jsr   ,x                            ; erase sprite on working screen buffer
81A1 FF8261           (./Engine/Graphics):00186 [6]     3807            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
81A4                  (./Engine/Graphics):00187                 ESP_CallEraseRoutineB0_00        
81A4 CE0000           (./Engine/Graphics):00188 [3]     3810            ldu   #$0000                        ; restore u (pointer to object)
81A7 ECC840           (./Engine/Graphics):00189 [6]     3816            ldd   rsv_bgdata_0,u                ; cell_start
81AA 830010           (./Engine/Graphics):00190 [4]     3820            subd  #16
81AD C4C0             (./Engine/Graphics):00191 [2]     3822            andb  #256-cell_size                ; round cell_start to cell size
81AF FD825F           (./Engine/Graphics):00192 [6]     3828            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./Engine/Graphics):00193                                         
81B2                  (./Engine/Graphics):00194                 ESP_FreeEraseBufferB0
81B2 A6C83C           (./Engine/Graphics):00195 [5]     3833            lda   rsv_prev_erase_nb_cell_0,u     ; get nb of cell to free
81B5 B7825E           (./Engine/Graphics):00196 [5]     3838            sta   BBF_nb_cells
81B8 FF82F4           (./Engine/Graphics):00197 [6]     3844            stu   BBF_rts+1
81BB CE7D03           (./Engine/Graphics):00198 [3]     3847            ldu   #Lst_FreeCell_0
81BE FF82D2           (./Engine/Graphics):00199 [6]     3853            stu   BBF_AddNewEntry+1
81C1 CE7D01           (./Engine/Graphics):00200 [3]     3856            ldu   #Lst_FreeCellFirstEntry_0        
81C4 FF82F1           (./Engine/Graphics):00201 [6]     3862            stu   BBF_SetNewEntryPrevLink+1     ; init prev address destination as Lst_FreeCellFirstEntry                
81C7 FE7D01           (./Engine/Graphics):00202 [6]     3868            ldu   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
81CA BD8265           (./Engine/Graphics):00203 [8]     3876            jsr   BgBufferFree                  ; free background data in memory
                      (./Engine/Graphics):00204                         
81CD                  (./Engine/Graphics):00205                 ESP_UnsetOnScreenFlagB0
81CD A6C848           (./Engine/Graphics):00206 [5]     3881            lda   rsv_prev_render_flags_0,u
81D0 847F             (./Engine/Graphics):00207 [2]     3883            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen
81D2 A7C848           (./Engine/Graphics):00208 [5]     3888            sta   rsv_prev_render_flags_0,u
81D5 A6C822           (./Engine/Graphics):00209 [5]     3893            lda   rsv_render_flags,u
81D8 847F             (./Engine/Graphics):00210 [2]     3895            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
81DA A7C822           (./Engine/Graphics):00211 [5]     3900            sta   rsv_render_flags,u
                      (./Engine/Graphics):00212                 
81DD                  (./Engine/Graphics):00213                 ESP_NextObjectB0
81DD EEC836           (./Engine/Graphics):00214 [6]     3906            ldu   rsv_priority_prev_obj_0,u
81E0 1026FF88         (./Engine/Graphics):00215 [5+?]   3911            lbne   ESP_ProcessEachPriorityLevelB0   
81E4 39               (./Engine/Graphics):00216 [5]     3916            rts      
                      (./Engine/Graphics):00217                 
                      (./Engine/Graphics):00218                 * -----------------------------------------------        
                      (./Engine/Graphics):00219                 * BUFFER1
                      (./Engine/Graphics):00220                 * -----------------------------------------------        
                      (./Engine/Graphics):00221                                 
81E5                  (./Engine/Graphics):00222                 ESP_ProcessEachPriorityLevelB1
81E5 A6C849           (./Engine/Graphics):00223 [5]     3921            lda   rsv_priority_1,u
                      (./Engine/Graphics):00224                         
81E8                  (./Engine/Graphics):00225                 ESP_CheckPriorityB1
81E8 8100             (./Engine/Graphics):00226 [2]     3923            cmpa  #0                            ; dynamic current priority
81EA 10260068         (./Engine/Graphics):00227 [5+?]   3928            lbne   ESP_NextObjectB1             ; do not process this entry (case of priority change)
                      (./Engine/Graphics):00228                         
81EE                  (./Engine/Graphics):00229                 ESP_UnsetCheckRefreshB1
81EE A6C822           (./Engine/Graphics):00230 [5]     3933            lda   rsv_render_flags,u
81F1 E642             (./Engine/Graphics):00231 [5]     3938            ldb   render_flags,u
81F3 C408             (./Engine/Graphics):00232 [2]     3940            andb  #render_motionless_mask
81F5 2605             (./Engine/Graphics):00233 [3]     3943            bne   ESP_CheckEraseB1
81F7 84FE             (./Engine/Graphics):00234 [2]     3945            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag (CheckSpriteRefresh)
81F9 A7C822           (./Engine/Graphics):00235 [5]     3950            sta   rsv_render_flags,u        
                      (./Engine/Graphics):00236                         
81FC                  (./Engine/Graphics):00237                 ESP_CheckEraseB1
81FC 8402             (./Engine/Graphics):00238 [2]     3952            anda  #rsv_render_erasesprite_mask
81FE 10270054         (./Engine/Graphics):00239 [5+?]   3957            lbeq   ESP_NextObjectB1
8202 E6C85C           (./Engine/Graphics):00240 [5]     3962            ldb   rsv_prev_render_flags_1,u
8205 C401             (./Engine/Graphics):00241 [2]     3964            andb  #rsv_prev_render_overlay_mask
8207 263D             (./Engine/Graphics):00242 [3]     3967            bne   ESP_UnsetOnScreenFlagB1        
                      (./Engine/Graphics):00243                         
8209                  (./Engine/Graphics):00244                 ESP_CallEraseRoutineB1
8209 A6C851           (./Engine/Graphics):00245 [5]     3972            lda   rsv_prev_page_erase_routine_1,u
                      (./Engine/Graphics):00246                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
820C B7E7E6           (    _SetCartPageA):00004 [5]     3977            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
820F AEC852           (./Engine/Graphics):00247 [6]     3983            ldx   rsv_prev_erase_routine_1,u
8212 FF821E           (./Engine/Graphics):00248 [6]     3989            stu   ESP_CallEraseRoutineB1_00+1   ; backup u (pointer to object)                
8215 EEC854           (./Engine/Graphics):00249 [6]     3995            ldu   rsv_bgdata_1,u                ; cell_start background data        
8218 AD84             (./Engine/Graphics):00250 [7]     4002            jsr   ,x                            ; erase sprite on working screen buffer
821A FF8261           (./Engine/Graphics):00251 [6]     4008            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
821D                  (./Engine/Graphics):00252                 ESP_CallEraseRoutineB1_00        
821D CE0000           (./Engine/Graphics):00253 [3]     4011            ldu   #$0000                        ; restore u (pointer to object)
8220 ECC854           (./Engine/Graphics):00254 [6]     4017            ldd   rsv_bgdata_1,u                ; cell_start
8223 830010           (./Engine/Graphics):00255 [4]     4021            subd  #16
8226 C4C0             (./Engine/Graphics):00256 [2]     4023            andb  #256-cell_size                ; round cell_start to cell size
8228 FD825F           (./Engine/Graphics):00257 [6]     4029            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./Engine/Graphics):00258                                         
822B                  (./Engine/Graphics):00259                 ESP_FreeEraseBufferB1
822B A6C850           (./Engine/Graphics):00260 [5]     4034            lda   rsv_prev_erase_nb_cell_1,u       
822E B7825E           (./Engine/Graphics):00261 [5]     4039            sta   BBF_nb_cells         
8231 FF82F4           (./Engine/Graphics):00262 [6]     4045            stu   BBF_rts+1
8234 CE7ECB           (./Engine/Graphics):00263 [3]     4048            ldu   #Lst_FreeCell_1
8237 FF82D2           (./Engine/Graphics):00264 [6]     4054            stu   BBF_AddNewEntry+1
823A CE7EC9           (./Engine/Graphics):00265 [3]     4057            ldu   #Lst_FreeCellFirstEntry_1        
823D FF82F1           (./Engine/Graphics):00266 [6]     4063            stu   BBF_SetNewEntryPrevLink+1          
8240 FE7EC9           (./Engine/Graphics):00267 [6]     4069            ldu   Lst_FreeCellFirstEntry_1
8243 BD8265           (./Engine/Graphics):00268 [8]     4077            jsr   BgBufferFree                  ; free background data in memory
                      (./Engine/Graphics):00269                         
8246                  (./Engine/Graphics):00270                 ESP_UnsetOnScreenFlagB1
8246 A6C85C           (./Engine/Graphics):00271 [5]     4082            lda   rsv_prev_render_flags_1,u
8249 847F             (./Engine/Graphics):00272 [2]     4084            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen 
824B A7C85C           (./Engine/Graphics):00273 [5]     4089            sta   rsv_prev_render_flags_1,u
824E A6C822           (./Engine/Graphics):00274 [5]     4094            lda   rsv_render_flags,u
8251 847F             (./Engine/Graphics):00275 [2]     4096            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
8253 A7C822           (./Engine/Graphics):00276 [5]     4101            sta   rsv_render_flags,u
                      (./Engine/Graphics):00277                         
8256                  (./Engine/Graphics):00278                 ESP_NextObjectB1
8256 EEC84A           (./Engine/Graphics):00279 [6]     4107            ldu   rsv_priority_prev_obj_1,u
8259 1026FF88         (./Engine/Graphics):00280 [5+?]   4112            lbne   ESP_ProcessEachPriorityLevelB1   
825D 39               (./Engine/Graphics):00281 [5]     4117            rts
                      (./Engine/Graphics):00282                         
                      (./Engine/Graphics):00283                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00284                 * BgBufferFree
                      (./Engine/Graphics):00285                 * ------------
                      (./Engine/Graphics):00286                 * Subroutine to free memory from background buffer
                      (./Engine/Graphics):00287                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00288                      
825E 00               (./Engine/Graphics):00289                 BBF_nb_cells   fcb   $00
825F 0000             (./Engine/Graphics):00290                 BBF_cell_start fdb   $0000
8261 0000             (./Engine/Graphics):00291                 BBF_cell_end   fdb   $0000       
8263 0000             (./Engine/Graphics):00292                 BBF_prev       fdb   $0000
                      (./Engine/Graphics):00293                 
                      (./Engine/Graphics):00294                         ; search position of the new free cells in the linked list
                      (./Engine/Graphics):00295                         ; linked list is ordered by cell_end (address) descending
                      (./Engine/Graphics):00296                         ; starting at Lst_FreeCellFirstEntry_x
                      (./Engine/Graphics):00297                         ; ----------------------------------------------------------
                      (./Engine/Graphics):00298                 
8265                  (./Engine/Graphics):00299                 BgBufferFree        
8265 2764             (./Engine/Graphics):00300 [3]     4120            beq   BBF_AddLastEntry
8267                  (./Engine/Graphics):00301                 BBF_SearchPos 
8267 AE43             (./Engine/Graphics):00302 [6]     4126            ldx   cell_end,u
8269 BC8261           (./Engine/Graphics):00303 [7]     4133            cmpx  BBF_cell_end
826C 2510             (./Engine/Graphics):00304 [3]     4136            blo   BBF_CombineNext
826E FF8263           (./Engine/Graphics):00305 [6]     4142            stu   BBF_prev
8271 EC45             (./Engine/Graphics):00306 [6]     4148            ldd   next_entry,u                  ; test next entry
8273 273B             (./Engine/Graphics):00307 [3]     4151            beq   BBF_CombinePrevNoNext
8275 3045             (./Engine/Graphics):00308 [5]     4156            leax  next_entry,u                  ; there is a next entry, save next_entry position
8277 BF82F1           (./Engine/Graphics):00309 [6]     4162            stx   BBF_SetNewEntryPrevLink+1   
827A EE45             (./Engine/Graphics):00310 [6]     4168            ldu   next_entry,u                  ; move to next entry        
827C 20E9             (./Engine/Graphics):00311 [3]     4171            bra   BBF_SearchPos        
                      (./Engine/Graphics):00312                         
                      (./Engine/Graphics):00313                         ; try to combine with next block
                      (./Engine/Graphics):00314                         ; ----------------------------------------------------------        
                      (./Engine/Graphics):00315                         
827E                  (./Engine/Graphics):00316                 BBF_CombineNext
827E FF82EC           (./Engine/Graphics):00317 [6]     4177            stu   BBF_SetNewEntryNextentry+1
8281 BE825F           (./Engine/Graphics):00318 [6]     4183            ldx   BBF_cell_start
8284 AC43             (./Engine/Graphics):00319 [7]     4190            cmpx  cell_end,u
8286 262E             (./Engine/Graphics):00320 [3]     4193            bne   BBF_CombinePrev
8288 BE8261           (./Engine/Graphics):00321 [6]     4199            ldx   BBF_cell_end
828B AF43             (./Engine/Graphics):00322 [6]     4205            stx   cell_end,u
828D A6C4             (./Engine/Graphics):00323 [4]     4209            lda   nb_cells,u
828F BB825E           (./Engine/Graphics):00324 [5]     4214            adda  BBF_nb_cells
8292 A7C4             (./Engine/Graphics):00325 [4]     4218            sta   nb_cells,u
                      (./Engine/Graphics):00326                         
8294                  (./Engine/Graphics):00327                 BBF_CombineNextAndPrev
8294 10BE8263         (./Engine/Graphics):00328 [7]     4225            ldy   BBF_prev
8298 AC21             (./Engine/Graphics):00329 [7]     4232            cmpx  cell_start,y
829A 2657             (./Engine/Graphics):00330 [3]     4235            bne   BBF_rts
829C AE41             (./Engine/Graphics):00331 [6]     4241            ldx   cell_start,u
829E AF21             (./Engine/Graphics):00332 [6]     4247            stx   cell_start,y
82A0 A6C4             (./Engine/Graphics):00333 [4]     4251            lda   nb_cells,u        
82A2 ABA4             (./Engine/Graphics):00334 [4]     4255            adda  nb_cells,y
82A4 A7A4             (./Engine/Graphics):00335 [4]     4259            sta   nb_cells,y
82A6 EC45             (./Engine/Graphics):00336 [6]     4265            ldd   next_entry,u
82A8 ED25             (./Engine/Graphics):00337 [6]     4271            std   next_entry,y
82AA 8600             (./Engine/Graphics):00338 [2]     4273            lda   #$00
82AC A7C4             (./Engine/Graphics):00339 [4]     4277            sta   nb_cells,u                    ; delete the entry
82AE 2043             (./Engine/Graphics):00340 [3]     4280            bra   BBF_rts
                      (./Engine/Graphics):00341                                 
                      (./Engine/Graphics):00342                         ; try to combine with prev block 
                      (./Engine/Graphics):00343                         ; ----------------------------------------------------------      
                      (./Engine/Graphics):00344                         
82B0                  (./Engine/Graphics):00345                 BBF_CombinePrevNoNext
82B0 CC0000           (./Engine/Graphics):00346 [3]     4283            ldd   #$0000
82B3 FD82EC           (./Engine/Graphics):00347 [6]     4289            std   BBF_SetNewEntryNextentry+1
82B6                  (./Engine/Graphics):00348                 BBF_CombinePrev
82B6 BE8261           (./Engine/Graphics):00349 [6]     4295            ldx   BBF_cell_end
82B9 AC41             (./Engine/Graphics):00350 [7]     4302            cmpx  cell_start,u
82BB 2614             (./Engine/Graphics):00351 [3]     4305            bne   BBF_AddNewEntry
82BD BE825F           (./Engine/Graphics):00352 [6]     4311            ldx   BBF_cell_start
82C0 AF41             (./Engine/Graphics):00353 [6]     4317            stx   cell_start,u
82C2 A6C4             (./Engine/Graphics):00354 [4]     4321            lda   nb_cells,u        
82C4 BB825E           (./Engine/Graphics):00355 [5]     4326            adda  BBF_nb_cells
82C7 A7C4             (./Engine/Graphics):00356 [4]     4330            sta   nb_cells,u
82C9 2028             (./Engine/Graphics):00357 [3]     4333            bra   BBF_rts   
                      (./Engine/Graphics):00358                 
                      (./Engine/Graphics):00359                         ; Add New Entry
                      (./Engine/Graphics):00360                         ; ----------------------------------------------------------
                      (./Engine/Graphics):00361                         
82CB                  (./Engine/Graphics):00362                 BBF_AddLastEntry
82CB CC0000           (./Engine/Graphics):00363 [3]     4336            ldd   #$0000
82CE FD82EC           (./Engine/Graphics):00364 [6]     4342            std   BBF_SetNewEntryNextentry+1        
82D1                  (./Engine/Graphics):00365                 BBF_AddNewEntry
82D1 CE0000           (./Engine/Graphics):00366 [3]     4345            ldu   #$0000                        ; (dynamic) start of linked list data index
82D4                  (./Engine/Graphics):00367                 BBF_FindFreeSlot
82D4 E6C4             (./Engine/Graphics):00368 [4]     4349            ldb   nb_cells,u                    ; read Lst_FreeCell as a table (not a linked list)
82D6 2704             (./Engine/Graphics):00369 [3]     4352            beq   BBF_SetNewEntry               ; branch if empty entry
82D8 3347             (./Engine/Graphics):00370 [5]     4357            leau  entry_size,u                  ; move to next entry
82DA 20F8             (./Engine/Graphics):00371 [3]     4360            bra   BBF_FindFreeSlot              ; loop             
                      (./Engine/Graphics):00372                 
82DC                  (./Engine/Graphics):00373                 BBF_SetNewEntry        
82DC B6825E           (./Engine/Graphics):00374 [5]     4365            lda   BBF_nb_cells              
82DF A7C4             (./Engine/Graphics):00375 [4]     4369            sta   nb_cells,u                    ; store released cells
82E1 FC825F           (./Engine/Graphics):00376 [6]     4375            ldd   BBF_cell_start
82E4 ED41             (./Engine/Graphics):00377 [6]     4381            std   cell_start,u                  ; store cell start adress
82E6 FC8261           (./Engine/Graphics):00378 [6]     4387            ldd   BBF_cell_end
82E9 ED43             (./Engine/Graphics):00379 [6]     4393            std   cell_end,u                    ; store cell end adress
                      (./Engine/Graphics):00380                         
82EB                  (./Engine/Graphics):00381                 BBF_SetNewEntryNextentry        
82EB CC0000           (./Engine/Graphics):00382 [3]     4396            ldd   #$0000                        ; (dynamic) value is dynamically set
82EE ED45             (./Engine/Graphics):00383 [6]     4402            std   next_entry,u                  ; link to 0000 if no more entry or next_entry
                      (./Engine/Graphics):00384                         
82F0                  (./Engine/Graphics):00385                 BBF_SetNewEntryPrevLink        
82F0 FFFFFF           (./Engine/Graphics):00386 [6]     4408            stu   $FFFF                         ; (dynamic) set Lst_FreeCellFirstEntry or prev_entry.next_entry with new entry
                      (./Engine/Graphics):00387                         
82F3                  (./Engine/Graphics):00388                 BBF_rts
82F3 CE0000           (./Engine/Graphics):00389 [3]     4411            ldu   #$0000
82F6 39               (./Engine/Graphics):00390 [5]     4416            rts
                      (./Engine/Graphics):00391                                 
                      (C:\Users\bhrou\gi):00056                         INCLUDE "./Engine/Graphics/UnsetDisplayPriority.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * UnsetDisplayPriority
                      (./Engine/Graphics):00003                 * --------------------
                      (./Engine/Graphics):00004                 * Subroutine to unset sprites in Display Sprite Priority structure
                      (./Engine/Graphics):00005                 * Read Lst_Priority_Unset_0/1
                      (./Engine/Graphics):00006                 *
                      (./Engine/Graphics):00007                 * input REG : none
                      (./Engine/Graphics):00008                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                                                                                            
82F7                  (./Engine/Graphics):00010                 UnsetDisplayPriority
                      (./Engine/Graphics):00011                 
82F7                  (./Engine/Graphics):00012                 UDP_Start
82F7 B67605           (./Engine/Graphics):00013 [5]     4421            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
82FA 266D             (./Engine/Graphics):00014 [3]     4424            bne   UDP_B1
                      (./Engine/Graphics):00015                         
82FC                  (./Engine/Graphics):00016                 UDP_B0                                    
82FC 8E77F1           (./Engine/Graphics):00017 [3]     4427            ldx   #Lst_Priority_Unset_0+2
                      (./Engine/Graphics):00018                         
82FF                  (./Engine/Graphics):00019                 UDP_CheckEndB0        
82FF BC77EF           (./Engine/Graphics):00020 [7]     4434            cmpx  Lst_Priority_Unset_0          ; end of priority unset list
8302 2607             (./Engine/Graphics):00021 [3]     4437            bne   UDP_CheckPrioPrevB0
                      (./Engine/Graphics):00022                         
8304                  (./Engine/Graphics):00023                 UDP_InitListB0      
8304 8E77F1           (./Engine/Graphics):00024 [3]     4440            ldx   #Lst_Priority_Unset_0+2 
8307 BF77EF           (./Engine/Graphics):00025 [6]     4446            stx   Lst_Priority_Unset_0          ; set Lst_Priority_Unset_0 index
830A 39               (./Engine/Graphics):00026 [5]     4451            rts
                      (./Engine/Graphics):00027                         
830B                  (./Engine/Graphics):00028                 UDP_CheckPrioPrevB0
830B EE81             (./Engine/Graphics):00029 [8]     4459            ldu   ,x++
830D ECC836           (./Engine/Graphics):00030 [6]     4465            ldd   rsv_priority_prev_obj_0,u
8310 2611             (./Engine/Graphics):00031 [3]     4468            bne   UDP_ChainPrevB0
                      (./Engine/Graphics):00032                         
8312 A6C835           (./Engine/Graphics):00033 [5]     4473            lda   rsv_priority_0,u
8315 48               (./Engine/Graphics):00034 [2]     4475            lsla
8316 108E77CB         (./Engine/Graphics):00035 [4]     4479            ldy   #Tbl_Priority_First_Entry_0
831A 31A6             (./Engine/Graphics):00036 [5]     4484            leay  a,y
831C ECC838           (./Engine/Graphics):00037 [6]     4490            ldd   rsv_priority_next_obj_0,u
831F EDA4             (./Engine/Graphics):00038 [5]     4495            std   ,y
8321 200A             (./Engine/Graphics):00039 [3]     4498            bra   UDP_CheckPrioNextB0
                      (./Engine/Graphics):00040                                 
8323                  (./Engine/Graphics):00041                 UDP_ChainPrevB0
8323 ECC838           (./Engine/Graphics):00042 [6]     4504            ldd   rsv_priority_next_obj_0,u
8326 10AEC836         (./Engine/Graphics):00043 [7]     4511            ldy   rsv_priority_prev_obj_0,u        
832A EDA838           (./Engine/Graphics):00044 [6]     4517            std   rsv_priority_next_obj_0,y        
                      (./Engine/Graphics):00045                 
832D                  (./Engine/Graphics):00046                 UDP_CheckPrioNextB0       
832D ECC838           (./Engine/Graphics):00047 [6]     4523            ldd   rsv_priority_next_obj_0,u
8330 2611             (./Engine/Graphics):00048 [3]     4526            bne   UDP_ChainNextB0
                      (./Engine/Graphics):00049                 
8332 A6C835           (./Engine/Graphics):00050 [5]     4531            lda   rsv_priority_0,u
8335 48               (./Engine/Graphics):00051 [2]     4533            lsla
8336 108E77DD         (./Engine/Graphics):00052 [4]     4537            ldy   #Tbl_Priority_Last_Entry_0
833A 31A6             (./Engine/Graphics):00053 [5]     4542            leay  a,y
833C ECC836           (./Engine/Graphics):00054 [6]     4548            ldd   rsv_priority_prev_obj_0,u
833F EDA4             (./Engine/Graphics):00055 [5]     4553            std   ,y
8341 200A             (./Engine/Graphics):00056 [3]     4556            bra   UDP_CheckDeleteB0
                      (./Engine/Graphics):00057                                 
8343                  (./Engine/Graphics):00058                 UDP_ChainNextB0
8343 ECC836           (./Engine/Graphics):00059 [6]     4562            ldd   rsv_priority_prev_obj_0,u
8346 10AEC838         (./Engine/Graphics):00060 [7]     4569            ldy   rsv_priority_next_obj_0,u        
834A EDA836           (./Engine/Graphics):00061 [6]     4575            std   rsv_priority_prev_obj_0,y
                      (./Engine/Graphics):00062                         
834D                  (./Engine/Graphics):00063                 UDP_CheckDeleteB0
834D A642             (./Engine/Graphics):00064 [5]     4580            lda   render_flags,u
834F 8440             (./Engine/Graphics):00065 [2]     4582            anda  #render_todelete_mask
8351 270F             (./Engine/Graphics):00066 [3]     4585            beq   UDP_SetNewPrioB0
8353 A6C848           (./Engine/Graphics):00067 [5]     4590            lda   rsv_prev_render_flags_0,u
8356 2B0A             (./Engine/Graphics):00068 [3]     4593            bmi   UDP_SetNewPrioB0
8358 A6C85C           (./Engine/Graphics):00069 [5]     4598            lda   rsv_prev_render_flags_1,u
835B 2B05             (./Engine/Graphics):00070 [3]     4601            bmi   UDP_SetNewPrioB0
835D BD8721           (./Engine/Graphics):00071 [8]     4609            jsr   ClearObj
8360 209D             (./Engine/Graphics):00072 [3]     4612            bra   UDP_CheckEndB0
                      (./Engine/Graphics):00073                         
8362                  (./Engine/Graphics):00074                 UDP_SetNewPrioB0
8362 A643             (./Engine/Graphics):00075 [5]     4617            lda   priority,u
8364 A7C835           (./Engine/Graphics):00076 [5]     4622            sta   rsv_priority_0,u
8367 2096             (./Engine/Graphics):00077 [3]     4625            bra   UDP_CheckEndB0        
                      (./Engine/Graphics):00078                 
8369                  (./Engine/Graphics):00079                 UDP_B1                                    
8369 8E7873           (./Engine/Graphics):00080 [3]     4628            ldx   #Lst_Priority_Unset_1+2
                      (./Engine/Graphics):00081                         
836C                  (./Engine/Graphics):00082                 UDP_CheckEndB1        
836C BC7871           (./Engine/Graphics):00083 [7]     4635            cmpx  Lst_Priority_Unset_1          ; end of priority unset list
836F 2607             (./Engine/Graphics):00084 [3]     4638            bne   UDP_CheckPrioPrevB1
                      (./Engine/Graphics):00085                         
8371                  (./Engine/Graphics):00086                 UDP_InitListB1      
8371 8E7873           (./Engine/Graphics):00087 [3]     4641            ldx   #Lst_Priority_Unset_1+2 
8374 BF7871           (./Engine/Graphics):00088 [6]     4647            stx   Lst_Priority_Unset_1          ; set Lst_Priority_Unset_0 index
8377 39               (./Engine/Graphics):00089 [5]     4652            rts
                      (./Engine/Graphics):00090                         
8378                  (./Engine/Graphics):00091                 UDP_CheckPrioPrevB1
8378 EE81             (./Engine/Graphics):00092 [8]     4660            ldu   ,x++
837A ECC84A           (./Engine/Graphics):00093 [6]     4666            ldd   rsv_priority_prev_obj_1,u
837D 2611             (./Engine/Graphics):00094 [3]     4669            bne   UDP_ChainPrevB1
                      (./Engine/Graphics):00095                         
837F A6C849           (./Engine/Graphics):00096 [5]     4674            lda   rsv_priority_1,u
8382 48               (./Engine/Graphics):00097 [2]     4676            lsla
8383 108E784D         (./Engine/Graphics):00098 [4]     4680            ldy   #Tbl_Priority_First_Entry_1
8387 31A6             (./Engine/Graphics):00099 [5]     4685            leay  a,y
8389 ECC84C           (./Engine/Graphics):00100 [6]     4691            ldd   rsv_priority_next_obj_1,u
838C EDA4             (./Engine/Graphics):00101 [5]     4696            std   ,y
838E 200A             (./Engine/Graphics):00102 [3]     4699            bra   UDP_CheckPrioNextB1
                      (./Engine/Graphics):00103                                 
8390                  (./Engine/Graphics):00104                 UDP_ChainPrevB1
8390 ECC84C           (./Engine/Graphics):00105 [6]     4705            ldd   rsv_priority_next_obj_1,u
8393 10AEC84A         (./Engine/Graphics):00106 [7]     4712            ldy   rsv_priority_prev_obj_1,u        
8397 EDA84C           (./Engine/Graphics):00107 [6]     4718            std   rsv_priority_next_obj_1,y        
                      (./Engine/Graphics):00108                 
839A                  (./Engine/Graphics):00109                 UDP_CheckPrioNextB1       
839A ECC84C           (./Engine/Graphics):00110 [6]     4724            ldd   rsv_priority_next_obj_1,u
839D 2611             (./Engine/Graphics):00111 [3]     4727            bne   UDP_ChainNextB1
                      (./Engine/Graphics):00112                 
839F A6C849           (./Engine/Graphics):00113 [5]     4732            lda   rsv_priority_1,u
83A2 48               (./Engine/Graphics):00114 [2]     4734            lsla
83A3 108E785F         (./Engine/Graphics):00115 [4]     4738            ldy   #Tbl_Priority_Last_Entry_1
83A7 31A6             (./Engine/Graphics):00116 [5]     4743            leay  a,y
83A9 ECC84A           (./Engine/Graphics):00117 [6]     4749            ldd   rsv_priority_prev_obj_1,u
83AC EDA4             (./Engine/Graphics):00118 [5]     4754            std   ,y
83AE 200A             (./Engine/Graphics):00119 [3]     4757            bra   UDP_CheckDeleteB1
                      (./Engine/Graphics):00120                                 
83B0                  (./Engine/Graphics):00121                 UDP_ChainNextB1
83B0 ECC84A           (./Engine/Graphics):00122 [6]     4763            ldd   rsv_priority_prev_obj_1,u
83B3 10AEC84C         (./Engine/Graphics):00123 [7]     4770            ldy   rsv_priority_next_obj_1,u        
83B7 EDA84A           (./Engine/Graphics):00124 [6]     4776            std   rsv_priority_prev_obj_1,y
                      (./Engine/Graphics):00125                         
83BA                  (./Engine/Graphics):00126                 UDP_CheckDeleteB1
83BA A642             (./Engine/Graphics):00127 [5]     4781            lda   render_flags,u
83BC 8440             (./Engine/Graphics):00128 [2]     4783            anda  #render_todelete_mask
83BE 270F             (./Engine/Graphics):00129 [3]     4786            beq   UDP_SetNewPrioB1
83C0 A6C848           (./Engine/Graphics):00130 [5]     4791            lda   rsv_prev_render_flags_0,u
83C3 2B0A             (./Engine/Graphics):00131 [3]     4794            bmi   UDP_SetNewPrioB1
83C5 A6C85C           (./Engine/Graphics):00132 [5]     4799            lda   rsv_prev_render_flags_1,u
83C8 2B05             (./Engine/Graphics):00133 [3]     4802            bmi   UDP_SetNewPrioB1
83CA BD8721           (./Engine/Graphics):00134 [8]     4810            jsr   ClearObj
83CD 209D             (./Engine/Graphics):00135 [3]     4813            bra   UDP_CheckEndB1
                      (./Engine/Graphics):00136                         
83CF                  (./Engine/Graphics):00137                 UDP_SetNewPrioB1
83CF A643             (./Engine/Graphics):00138 [5]     4818            lda   priority,u
83D1 A7C849           (./Engine/Graphics):00139 [5]     4823            sta   rsv_priority_1,u
83D4 2096             (./Engine/Graphics):00140 [3]     4826            bra   UDP_CheckEndB1
                      (C:\Users\bhrou\gi):00057                         INCLUDE "./Engine/Graphics/DrawSprites.asm"
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * DrawSprites
                      (./Engine/Graphics):00003                 * ------------
                      (./Engine/Graphics):00004                 * Subroutine to draw sprites on screen
                      (./Engine/Graphics):00005                 * Read Display Priority Structure (back to front)
                      (./Engine/Graphics):00006                 * priority: 0 - unregistred
                      (./Engine/Graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./Engine/Graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./Engine/Graphics):00009                 *
                      (./Engine/Graphics):00010                 * input REG : none
                      (./Engine/Graphics):00011                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00012                                                                                            
83D6                  (./Engine/Graphics):00013                 DrawSprites
                      (./Engine/Graphics):00014                 
83D6                  (./Engine/Graphics):00015                 DRS_Start
83D6 B67605           (./Engine/Graphics):00016 [5]     4831            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
83D9 2641             (./Engine/Graphics):00017 [3]     4834            bne   DRS_P8B1
                      (./Engine/Graphics):00018                         
83DB                  (./Engine/Graphics):00019                 DRS_P8B0                                    
83DB BE77DB           (./Engine/Graphics):00020 [6]     4840            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
83DE 2703             (./Engine/Graphics):00021 [3]     4843            beq   DRS_P7B0
83E0 BD845D           (./Engine/Graphics):00022 [8]     4851            jsr   DRS_ProcessEachPriorityLevelB0   
83E3                  (./Engine/Graphics):00023                 DRS_P7B0
83E3 BE77D9           (./Engine/Graphics):00024 [6]     4857            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
83E6 2703             (./Engine/Graphics):00025 [3]     4860            beq   DRS_P6B0
83E8 BD845D           (./Engine/Graphics):00026 [8]     4868            jsr   DRS_ProcessEachPriorityLevelB0  
83EB                  (./Engine/Graphics):00027                 DRS_P6B0
83EB BE77D7           (./Engine/Graphics):00028 [6]     4874            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
83EE 2703             (./Engine/Graphics):00029 [3]     4877            beq   DRS_P5B0
83F0 BD845D           (./Engine/Graphics):00030 [8]     4885            jsr   DRS_ProcessEachPriorityLevelB0  
83F3                  (./Engine/Graphics):00031                 DRS_P5B0
83F3 BE77D5           (./Engine/Graphics):00032 [6]     4891            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
83F6 2703             (./Engine/Graphics):00033 [3]     4894            beq   DRS_P4B0
83F8 BD845D           (./Engine/Graphics):00034 [8]     4902            jsr   DRS_ProcessEachPriorityLevelB0  
83FB                  (./Engine/Graphics):00035                 DRS_P4B0
83FB BE77D3           (./Engine/Graphics):00036 [6]     4908            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
83FE 2703             (./Engine/Graphics):00037 [3]     4911            beq   DRS_P3B0
8400 BD845D           (./Engine/Graphics):00038 [8]     4919            jsr   DRS_ProcessEachPriorityLevelB0              
8403                  (./Engine/Graphics):00039                 DRS_P3B0
8403 BE77D1           (./Engine/Graphics):00040 [6]     4925            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
8406 2703             (./Engine/Graphics):00041 [3]     4928            beq   DRS_P2B0
8408 BD845D           (./Engine/Graphics):00042 [8]     4936            jsr   DRS_ProcessEachPriorityLevelB0     
840B                  (./Engine/Graphics):00043                 DRS_P2B0
840B BE77CF           (./Engine/Graphics):00044 [6]     4942            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
840E 2703             (./Engine/Graphics):00045 [3]     4945            beq   DRS_P1B0
8410 BD845D           (./Engine/Graphics):00046 [8]     4953            jsr   DRS_ProcessEachPriorityLevelB0 
8413                  (./Engine/Graphics):00047                 DRS_P1B0
8413 BE77CD           (./Engine/Graphics):00048 [6]     4959            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
8416 2703             (./Engine/Graphics):00049 [3]     4962            beq   DRS_rtsB0
8418 BD845D           (./Engine/Graphics):00050 [8]     4970            jsr   DRS_ProcessEachPriorityLevelB0
841B                  (./Engine/Graphics):00051                 DRS_rtsB0        
841B 39               (./Engine/Graphics):00052 [5]     4975            rts
                      (./Engine/Graphics):00053                         
841C                  (./Engine/Graphics):00054                 DRS_P8B1
841C BE785D           (./Engine/Graphics):00055 [6]     4981            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
841F 2703             (./Engine/Graphics):00056 [3]     4984            beq   DRS_P7B1
8421 BD851C           (./Engine/Graphics):00057 [8]     4992            jsr   DRS_ProcessEachPriorityLevelB1   
8424                  (./Engine/Graphics):00058                 DRS_P7B1
8424 BE785B           (./Engine/Graphics):00059 [6]     4998            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
8427 2703             (./Engine/Graphics):00060 [3]     5001            beq   DRS_P6B1
8429 BD851C           (./Engine/Graphics):00061 [8]     5009            jsr   DRS_ProcessEachPriorityLevelB1   
842C                  (./Engine/Graphics):00062                 DRS_P6B1
842C BE7859           (./Engine/Graphics):00063 [6]     5015            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
842F 2703             (./Engine/Graphics):00064 [3]     5018            beq   DRS_P5B1
8431 BD851C           (./Engine/Graphics):00065 [8]     5026            jsr   DRS_ProcessEachPriorityLevelB1   
8434                  (./Engine/Graphics):00066                 DRS_P5B1
8434 BE7857           (./Engine/Graphics):00067 [6]     5032            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
8437 2703             (./Engine/Graphics):00068 [3]     5035            beq   DRS_P4B1
8439 BD851C           (./Engine/Graphics):00069 [8]     5043            jsr   DRS_ProcessEachPriorityLevelB1   
843C                  (./Engine/Graphics):00070                 DRS_P4B1
843C BE7855           (./Engine/Graphics):00071 [6]     5049            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
843F 2703             (./Engine/Graphics):00072 [3]     5052            beq   DRS_P3B1
8441 BD851C           (./Engine/Graphics):00073 [8]     5060            jsr   DRS_ProcessEachPriorityLevelB1             
8444                  (./Engine/Graphics):00074                 DRS_P3B1
8444 BE7853           (./Engine/Graphics):00075 [6]     5066            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
8447 2703             (./Engine/Graphics):00076 [3]     5069            beq   DRS_P2B1
8449 BD851C           (./Engine/Graphics):00077 [8]     5077            jsr   DRS_ProcessEachPriorityLevelB1    
844C                  (./Engine/Graphics):00078                 DRS_P2B1
844C BE7851           (./Engine/Graphics):00079 [6]     5083            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
844F 2703             (./Engine/Graphics):00080 [3]     5086            beq   DRS_P1B1
8451 BD851C           (./Engine/Graphics):00081 [8]     5094            jsr   DRS_ProcessEachPriorityLevelB1
8454                  (./Engine/Graphics):00082                 DRS_P1B1
8454 BE784F           (./Engine/Graphics):00083 [6]     5100            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
8457 2703             (./Engine/Graphics):00084 [3]     5103            beq   DRS_rtsB1
8459 BD851C           (./Engine/Graphics):00085 [8]     5111            jsr   DRS_ProcessEachPriorityLevelB1
845C                  (./Engine/Graphics):00086                 DRS_rtsB1        
845C 39               (./Engine/Graphics):00087 [5]     5116            rts
                      (./Engine/Graphics):00088                 
845D                  (./Engine/Graphics):00089                 DRS_ProcessEachPriorityLevelB0    
845D A68822           (./Engine/Graphics):00090 [5]     5121            lda   rsv_render_flags,x
8460 8404             (./Engine/Graphics):00091 [2]     5123            anda  #rsv_render_displaysprite_mask
8462 1027007F         (./Engine/Graphics):00092 [5+?]   5128            lbeq  DRS_NextObjectB0
                      (./Engine/Graphics):00093                         
8466 A68848           (./Engine/Graphics):00094 [5]     5133            lda   rsv_prev_render_flags_0,x
8469 102B0078         (./Engine/Graphics):00095 [5+?]   5138            lbmi  DRS_NextObjectB0
846D A602             (./Engine/Graphics):00096 [5]     5143            lda   render_flags,x
846F 8404             (./Engine/Graphics):00097 [2]     5145            anda  #render_overlay_mask
8471 260E             (./Engine/Graphics):00098 [3]     5148            bne   DRS_DrawWithoutBackupB0
8473 A6882A           (./Engine/Graphics):00099 [5]     5153            lda   rsv_erase_nb_cell,x        
8476 BD85AC           (./Engine/Graphics):00100 [8]     5161            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
8479 108C0000         (./Engine/Graphics):00101 [5]     5166            cmpy  #$0000                        ; y contains cell_end of allocated space 
847D 10270064         (./Engine/Graphics):00102 [5+?]   5171            lbeq   DRS_NextObjectB0             ; branch if no more free space
8481                  (./Engine/Graphics):00103                 DRS_DrawWithoutBackupB0        
8481 EC8814           (./Engine/Graphics):00104 [6]     5177            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
8484 A08825           (./Engine/Graphics):00105 [5]     5182            suba  rsv_image_center_offset,x
8487 BD84ED           (./Engine/Graphics):00106 [8]     5190            jsr   DRS_XYToAddress
848A EC8828           (./Engine/Graphics):00107 [6]     5196            ldd   rsv_mapping_frame,x
848D ED883A           (./Engine/Graphics):00108 [6]     5202            std   rsv_prev_mapping_frame_0,x    ; save previous mapping_frame
8490 A6882B           (./Engine/Graphics):00109 [5]     5207            lda   rsv_page_draw_routine,x
                      (./Engine/Graphics):00110                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8493 B7E7E6           (    _SetCartPageA):00004 [5]     5212            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8496 BF849F           (./Engine/Graphics):00111 [6]     5218            stx   DRS_dyn3B0+1                  ; save x reg
8499 DEFA             (./Engine/Graphics):00112 [5]     5223            ldu   <glb_screen_location_2
849B AD982C           (./Engine/Graphics):00113 [11]    5234            jsr   [rsv_draw_routine,x]          ; backup background and draw sprite on working screen buffer
849E                  (./Engine/Graphics):00114                 DRS_dyn3B0        
849E 8E0000           (./Engine/Graphics):00115 [3]     5237            ldx   #$0000                        ; (dynamic) restore x reg
84A1 EF8840           (./Engine/Graphics):00116 [6]     5243            stu   rsv_bgdata_0,x                ; store pointer to saved background data
84A4 EC8814           (./Engine/Graphics):00117 [6]     5249            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
84A7 44               (./Engine/Graphics):00118 [2]     5251            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
84A8 ED8842           (./Engine/Graphics):00119 [6]     5257            std   rsv_prev_xy_pixel_0,x         ; save previous x_pixel and y_pixel in one operation             
84AB EC8831           (./Engine/Graphics):00120 [6]     5263            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
84AE ED8844           (./Engine/Graphics):00121 [6]     5269            std   rsv_prev_xy1_pixel_0,x        ; save as previous x' and y'        
84B1 EC8833           (./Engine/Graphics):00122 [6]     5275            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
84B4 ED8846           (./Engine/Graphics):00123 [6]     5281            std   rsv_prev_xy2_pixel_0,x        ; save as previous x'' and y''
84B7 A6882A           (./Engine/Graphics):00124 [5]     5286            lda   rsv_erase_nb_cell,x
84BA A7883C           (./Engine/Graphics):00125 [5]     5291            sta   rsv_prev_erase_nb_cell_0,x
84BD A6882E           (./Engine/Graphics):00126 [5]     5296            lda   rsv_page_erase_routine,x
84C0 A7883D           (./Engine/Graphics):00127 [5]     5301            sta   rsv_prev_page_erase_routine_0,x
84C3 EC882F           (./Engine/Graphics):00128 [6]     5307            ldd   rsv_erase_routine,x
84C6 ED883E           (./Engine/Graphics):00129 [6]     5313            std   rsv_prev_erase_routine_0,x
84C9 A68848           (./Engine/Graphics):00130 [5]     5318            lda   rsv_prev_render_flags_0,x
84CC 8A80             (./Engine/Graphics):00131 [2]     5320            ora   #rsv_prev_render_onscreen_mask
84CE E602             (./Engine/Graphics):00132 [5]     5325            ldb   render_flags,x
84D0 C504             (./Engine/Graphics):00133 [2]     5327            bitb  #render_overlay_mask
84D2 2704             (./Engine/Graphics):00134 [3]     5330            beq   DRS_NoOverlayB0
84D4 8A01             (./Engine/Graphics):00135 [2]     5332            ora   #rsv_prev_render_overlay_mask
84D6 2002             (./Engine/Graphics):00136 [3]     5335            bra   DRS_UpdateRenderFlagB0
                      (./Engine/Graphics):00137                         
84D8                  (./Engine/Graphics):00138                 DRS_NoOverlayB0
84D8 84FE             (./Engine/Graphics):00139 [2]     5337            anda   #^rsv_prev_render_overlay_mask
                      (./Engine/Graphics):00140                 
84DA                  (./Engine/Graphics):00141                 DRS_UpdateRenderFlagB0        
84DA A78848           (./Engine/Graphics):00142 [5]     5342            sta   rsv_prev_render_flags_0,x     ; set the onscreen flag and save overlay flag
84DD A68822           (./Engine/Graphics):00143 [5]     5347            lda   rsv_render_flags,x
84E0 8A80             (./Engine/Graphics):00144 [2]     5349            ora   #rsv_render_onscreen_mask     ; sprite is on screen
84E2 A78822           (./Engine/Graphics):00145 [5]     5354            sta   rsv_render_flags,x
                      (./Engine/Graphics):00146                         
84E5                  (./Engine/Graphics):00147                 DRS_NextObjectB0        
84E5 AE8838           (./Engine/Graphics):00148 [6]     5360            ldx   rsv_priority_next_obj_0,x
84E8 1026FF71         (./Engine/Graphics):00149 [5+?]   5365            lbne  DRS_ProcessEachPriorityLevelB0   
84EC 39               (./Engine/Graphics):00150 [5]     5370            rts
                      (./Engine/Graphics):00151                 
                      (./Engine/Graphics):00152                 ********************************************************************************
                      (./Engine/Graphics):00153                 * x_pixel and y_pixel coordinate system
                      (./Engine/Graphics):00154                 * x coordinates:
                      (./Engine/Graphics):00155                 *    - off-screen left 00-2F (0-47)
                      (./Engine/Graphics):00156                 *    - on screen 30-CF (48-207)
                      (./Engine/Graphics):00157                 *    - off-screen right D0-FF (208-255)
                      (./Engine/Graphics):00158                 *
                      (./Engine/Graphics):00159                 * y coordinates:
                      (./Engine/Graphics):00160                 *    - off-screen top 00-1B (0-27)
                      (./Engine/Graphics):00161                 *    - on screen 1C-E3 (28-227)
                      (./Engine/Graphics):00162                 *    - off-screen bottom E4-FF (228-255)
                      (./Engine/Graphics):00163                 ********************************************************************************
                      (./Engine/Graphics):00164                 
84ED                  (./Engine/Graphics):00165                 DRS_XYToAddress
84ED 8030             (./Engine/Graphics):00166 [2]     5372            suba  #$30
84EF 2403             (./Engine/Graphics):00167 [3]     5375            bcc   DRS_XYToAddressPositive
84F1 8060             (./Engine/Graphics):00168 [2]     5377            suba  #$60                          ; get x position one line up, skipping (160-255)
84F3 5A               (./Engine/Graphics):00169 [2]     5379            decb
84F4                  (./Engine/Graphics):00170                 DRS_XYToAddressPositive        
84F4 C01C             (./Engine/Graphics):00171 [2]     5381            subb  #$1C                          ; TODO same thing as x for negative case
84F6 44               (./Engine/Graphics):00172 [2]     5383            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
84F7 44               (./Engine/Graphics):00173 [2]     5385            lsra                                ; x=x/2, RAMA RAMB enterlace  
84F8 2511             (./Engine/Graphics):00174 [3]     5388            bcs   DRS_XYToAddressRAM2First      ; Branch if write must begin in RAM2 first
84FA                  (./Engine/Graphics):00175                 DRS_XYToAddressRAM1First
84FA B78502           (./Engine/Graphics):00176 [5]     5393            sta   DRS_dyn1+2
84FD 8628             (./Engine/Graphics):00177 [2]     5395            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
84FF 3D               (./Engine/Graphics):00178 [11]    5406            mul
8500                  (./Engine/Graphics):00179                 DRS_dyn1        
8500 C3C000           (./Engine/Graphics):00180 [4]     5410            addd  #$C000                        ; (dynamic)
8503 DDFA             (./Engine/Graphics):00181 [5]     5415            std   <glb_screen_location_2
8505 832000           (./Engine/Graphics):00182 [4]     5419            subd  #$2000
8508 DDFC             (./Engine/Graphics):00183 [5]     5424            std   <glb_screen_location_1     
850A 39               (./Engine/Graphics):00184 [5]     5429            rts
850B                  (./Engine/Graphics):00185                 DRS_XYToAddressRAM2First
850B B78513           (./Engine/Graphics):00186 [5]     5434            sta   DRS_dyn2+2
850E 8628             (./Engine/Graphics):00187 [2]     5436            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
8510 3D               (./Engine/Graphics):00188 [11]    5447            mul
8511                  (./Engine/Graphics):00189                 DRS_dyn2        
8511 C3A000           (./Engine/Graphics):00190 [4]     5451            addd  #$A000                        ; (dynamic)
8514 DDFA             (./Engine/Graphics):00191 [5]     5456            std   <glb_screen_location_2
8516 C32001           (./Engine/Graphics):00192 [4]     5460            addd  #$2001
8519 DDFC             (./Engine/Graphics):00193 [5]     5465            std   <glb_screen_location_1
851B 39               (./Engine/Graphics):00194 [5]     5470            rts
                      (./Engine/Graphics):00195                         
851C                  (./Engine/Graphics):00196                 DRS_ProcessEachPriorityLevelB1
851C A68822           (./Engine/Graphics):00197 [5]     5475            lda   rsv_render_flags,x
851F 8404             (./Engine/Graphics):00198 [2]     5477            anda  #rsv_render_displaysprite_mask
8521 1027007F         (./Engine/Graphics):00199 [5+?]   5482            lbeq  DRS_NextObjectB1
                      (./Engine/Graphics):00200                         
8525 A6885C           (./Engine/Graphics):00201 [5]     5487            lda   rsv_prev_render_flags_1,x
8528 102B0078         (./Engine/Graphics):00202 [5+?]   5492            lbmi  DRS_NextObjectB1
852C A602             (./Engine/Graphics):00203 [5]     5497            lda   render_flags,x
852E 8404             (./Engine/Graphics):00204 [2]     5499            anda  #render_overlay_mask
8530 260E             (./Engine/Graphics):00205 [3]     5502            bne   DRS_DrawWithoutBackupB1
8532 A6882A           (./Engine/Graphics):00206 [5]     5507            lda   rsv_erase_nb_cell,x        
8535 BD85AC           (./Engine/Graphics):00207 [8]     5515            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
8538 108C0000         (./Engine/Graphics):00208 [5]     5520            cmpy  #$0000                        ; y contains cell_end of allocated space
853C 10270064         (./Engine/Graphics):00209 [5+?]   5525            lbeq   DRS_NextObjectB1             ; branch if no more free space
8540                  (./Engine/Graphics):00210                 DRS_DrawWithoutBackupB1        
8540 EC8814           (./Engine/Graphics):00211 [6]     5531            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
8543 A08825           (./Engine/Graphics):00212 [5]     5536            suba  rsv_image_center_offset,x
8546 BD84ED           (./Engine/Graphics):00213 [8]     5544            jsr   DRS_XYToAddress
8549 EC8828           (./Engine/Graphics):00214 [6]     5550            ldd   rsv_mapping_frame,x
854C ED884E           (./Engine/Graphics):00215 [6]     5556            std   rsv_prev_mapping_frame_1,x    ; save previous mapping_frame
854F A6882B           (./Engine/Graphics):00216 [5]     5561            lda   rsv_page_draw_routine,x
                      (./Engine/Graphics):00217                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8552 B7E7E6           (    _SetCartPageA):00004 [5]     5566            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8555 BF855E           (./Engine/Graphics):00218 [6]     5572            stx   DRS_dyn3B1+1                  ; save x reg
8558 DEFA             (./Engine/Graphics):00219 [5]     5577            ldu   <glb_screen_location_2
855A AD982C           (./Engine/Graphics):00220 [11]    5588            jsr   [rsv_draw_routine,x]
855D                  (./Engine/Graphics):00221                 DRS_dyn3B1        
855D 8E0000           (./Engine/Graphics):00222 [3]     5591            ldx   #$0000                        ; (dynamic) restore x reg
8560 EF8854           (./Engine/Graphics):00223 [6]     5597            stu   rsv_bgdata_1,x                ; store pointer to saved background data
8563 EC8814           (./Engine/Graphics):00224 [6]     5603            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
8566 44               (./Engine/Graphics):00225 [2]     5605            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
8567 ED8856           (./Engine/Graphics):00226 [6]     5611            std   rsv_prev_xy_pixel_1,x         ; save previous x_pixel and y_pixel in one operation         
856A EC8831           (./Engine/Graphics):00227 [6]     5617            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
856D ED8858           (./Engine/Graphics):00228 [6]     5623            std   rsv_prev_xy1_pixel_1,x        ; save as previous x' and y'        
8570 EC8833           (./Engine/Graphics):00229 [6]     5629            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
8573 ED885A           (./Engine/Graphics):00230 [6]     5635            std   rsv_prev_xy2_pixel_1,x        ; save as previous x'' and y''
8576 A6882A           (./Engine/Graphics):00231 [5]     5640            lda   rsv_erase_nb_cell,x
8579 A78850           (./Engine/Graphics):00232 [5]     5645            sta   rsv_prev_erase_nb_cell_1,x
857C A6882E           (./Engine/Graphics):00233 [5]     5650            lda   rsv_page_erase_routine,x
857F A78851           (./Engine/Graphics):00234 [5]     5655            sta   rsv_prev_page_erase_routine_1,x
8582 EC882F           (./Engine/Graphics):00235 [6]     5661            ldd   rsv_erase_routine,x
8585 ED8852           (./Engine/Graphics):00236 [6]     5667            std   rsv_prev_erase_routine_1,x                        
8588 A6885C           (./Engine/Graphics):00237 [5]     5672            lda   rsv_prev_render_flags_1,x
858B 8A80             (./Engine/Graphics):00238 [2]     5674            ora   #rsv_prev_render_onscreen_mask
858D E602             (./Engine/Graphics):00239 [5]     5679            ldb   render_flags,x
858F C504             (./Engine/Graphics):00240 [2]     5681            bitb  #render_overlay_mask
8591 2704             (./Engine/Graphics):00241 [3]     5684            beq   DRS_NoOverlayB1
8593 8A01             (./Engine/Graphics):00242 [2]     5686            ora   #rsv_prev_render_overlay_mask
8595 2002             (./Engine/Graphics):00243 [3]     5689            bra   DRS_UpdateRenderFlagB1
                      (./Engine/Graphics):00244                         
8597                  (./Engine/Graphics):00245                 DRS_NoOverlayB1
8597 84FE             (./Engine/Graphics):00246 [2]     5691            anda   #^rsv_prev_render_overlay_mask
                      (./Engine/Graphics):00247                 
8599                  (./Engine/Graphics):00248                 DRS_UpdateRenderFlagB1
8599 A7885C           (./Engine/Graphics):00249 [5]     5696            sta   rsv_prev_render_flags_1,x     ; set the onscreen flag and save overlay flag
859C A68822           (./Engine/Graphics):00250 [5]     5701            lda   rsv_render_flags,x
859F 8A80             (./Engine/Graphics):00251 [2]     5703            ora   #rsv_render_onscreen_mask     ; sprite is on screen
85A1 A78822           (./Engine/Graphics):00252 [5]     5708            sta   rsv_render_flags,x        
                      (./Engine/Graphics):00253                                 
85A4                  (./Engine/Graphics):00254                 DRS_NextObjectB1        
85A4 AE884C           (./Engine/Graphics):00255 [6]     5714            ldx   rsv_priority_next_obj_1,x
85A7 1026FF71         (./Engine/Graphics):00256 [5+?]   5719            lbne  DRS_ProcessEachPriorityLevelB1   
85AB 39               (./Engine/Graphics):00257 [5]     5724            rts
                      (C:\Users\bhrou\gi):00058                         INCLUDE "./Engine/Graphics/BgBufferAlloc.asm"   
                      (./Engine/Graphics):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00002                 * BgBufferAlloc
                      (./Engine/Graphics):00003                 * -------------
                      (./Engine/Graphics):00004                 * Subroutine to allocate memory into background buffer
                      (./Engine/Graphics):00005                 *
                      (./Engine/Graphics):00006                 * input  REG : [a] number of requested cells
                      (./Engine/Graphics):00007                 * output REG : [y] cell_end or 0000 if no more space
                      (./Engine/Graphics):00008                 * ---------------------------------------------------------------------------
                      (./Engine/Graphics):00009                 
85AC                  (./Engine/Graphics):00010                 BgBufferAlloc
85AC 3414             (./Engine/Graphics):00011 [8]     5732            pshs  b,x
85AE F67605           (./Engine/Graphics):00012 [5]     5737            ldb   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
85B1 2609             (./Engine/Graphics):00013 [3]     5740            bne   BBA1                          ; branch if buffer 1 is current
                      (./Engine/Graphics):00014                         
85B3                  (./Engine/Graphics):00015                 BBA0        
85B3 8E7D01           (./Engine/Graphics):00016 [3]     5743            ldx   #Lst_FreeCellFirstEntry_0     ; save previous cell.next_entry into x for future update
85B6 10BE7D01         (./Engine/Graphics):00017 [7]     5750            ldy   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
85BA 2007             (./Engine/Graphics):00018 [3]     5753            bra   BBA_Next
                      (./Engine/Graphics):00019                         
85BC                  (./Engine/Graphics):00020                 BBA1        
85BC 8E7EC9           (./Engine/Graphics):00021 [3]     5756            ldx   #Lst_FreeCellFirstEntry_1     ; save previous cell.next_entry into x for future update
85BF 10BE7EC9         (./Engine/Graphics):00022 [7]     5763            ldy   Lst_FreeCellFirstEntry_1      ; load first cell for screen buffer 1
                      (./Engine/Graphics):00023                         
85C3                  (./Engine/Graphics):00024                 BBA_Next
85C3 2740             (./Engine/Graphics):00025 [3]     5766            beq   BBA_rts                       ; loop thru all entries, branch if no more free space
85C5 A1A4             (./Engine/Graphics):00026 [4]     5770            cmpa  nb_cells,y                    ; compare current nb of free cells with requested
85C7 2709             (./Engine/Graphics):00027 [3]     5773            beq   BBA_FitCell                   ; branch if current free cells is the same size than requested
85C9 231D             (./Engine/Graphics):00028 [3]     5776            bls   BBA_DivideCell                ; branch if current free cells are greater than requested
85CB 3025             (./Engine/Graphics):00029 [5]     5781            leax  next_entry,y                  ; save previous cell.next_entry into x for future update        
85CD 10AE25           (./Engine/Graphics):00030 [7]     5788            ldy   next_entry,y                  ; move to next entry
85D0 20F1             (./Engine/Graphics):00031 [3]     5791            bra   BBA_Next
                      (./Engine/Graphics):00032                           
85D2                  (./Engine/Graphics):00033                 BBA_FitCell
85D2 EC25             (./Engine/Graphics):00034 [6]     5797            ldd   next_entry,y
85D4 ED84             (./Engine/Graphics):00035 [5]     5802            std   ,x                            ; chain previous cell with next cell
85D6 EC23             (./Engine/Graphics):00036 [6]     5808            ldd   cell_end,y                    ; return cell_end
85D8 FD8603           (./Engine/Graphics):00037 [6]     5814            std   cell_end_return+2
                      (./Engine/Graphics):00038                 
85DB CC0000           (./Engine/Graphics):00039 [3]     5817            ldd   #0
85DE A7A4             (./Engine/Graphics):00040 [4]     5821            sta   nb_cells,y                    ; clean current cell
85E0 ED21             (./Engine/Graphics):00041 [6]     5827            std   cell_start,y                  ;
85E2 ED23             (./Engine/Graphics):00042 [6]     5833            std   cell_end,y                    ;
85E4 ED25             (./Engine/Graphics):00043 [6]     5839            std   next_entry,y                  ;
                      (./Engine/Graphics):00044                 
85E6 2019             (./Engine/Graphics):00045 [3]     5842            bra   cell_end_return
                      (./Engine/Graphics):00046                         
85E8                  (./Engine/Graphics):00047                 BBA_DivideCell
85E8 B785EE           (./Engine/Graphics):00048 [5]     5847            sta   BBA_dyn+1
85EB E6A4             (./Engine/Graphics):00049 [4]     5851            ldb   nb_cells,y
85ED                  (./Engine/Graphics):00050                 BBA_dyn
85ED C000             (./Engine/Graphics):00051 [2]     5853            subb  #$00                          ; substract requested cells to nb_cells
85EF E7A4             (./Engine/Graphics):00052 [4]     5857            stb   nb_cells,y                    ; update nb_cells
                      (./Engine/Graphics):00053                         
85F1 C640             (./Engine/Graphics):00054 [2]     5859            ldb   #cell_size
85F3 3D               (./Engine/Graphics):00055 [11]    5870            mul
                      (./Engine/Graphics):00056                         _negd
85F4 40               (            _negd):00001 [2]     5872            nega
85F5 50               (            _negd):00002 [2]     5874            negb
85F6 8200             (            _negd):00003 [2]     5876            sbca  #0
85F8 AE23             (./Engine/Graphics):00057 [6]     5882            ldx   cell_end,y
85FA BF8603           (./Engine/Graphics):00058 [6]     5888            stx   cell_end_return+2        
85FD 308B             (./Engine/Graphics):00059 [8]     5896            leax  d,x                           ; cell_end = cell_end - (number of requested cells * nb of bytes in a cell)
85FF AF23             (./Engine/Graphics):00060 [6]     5902            stx   cell_end,y                    ; update cell_end
8601                  (./Engine/Graphics):00061                 cell_end_return        
8601 108E0000         (./Engine/Graphics):00062 [4]     5906            ldy   #$0000
8605                  (./Engine/Graphics):00063                 BBA_rts
8605 3594             (./Engine/Graphics):00064 [10]    5916            puls  b,x,pc
                      (C:\Users\bhrou\gi):00059                         INCLUDE "./Engine/Joypad/ReadJoypads.asm"
                      (./Engine/Joypad/R):00001                 ********************************************************************************
                      (./Engine/Joypad/R):00002                 * Get joystick parameters (Version 1)
                      (./Engine/Joypad/R):00003                 *
                      (./Engine/Joypad/R):00004                 * Read Joypads and store result as Press and Help values :
                      (./Engine/Joypad/R):00005                 * One byte with direction for player 1 and player 2
                      (./Engine/Joypad/R):00006                 * One byte with button for player 1 and player 2
                      (./Engine/Joypad/R):00007                 *
                      (./Engine/Joypad/R):00008                 * Note : to have one byte for each player, use V2
                      (./Engine/Joypad/R):00009                 * ------------------------------------------------------------------------------
                      (./Engine/Joypad/R):00010                 *
                      (./Engine/Joypad/R):00011                 * Joypads Direction
                      (./Engine/Joypad/R):00012                 * -----------------
                      (./Engine/Joypad/R):00013                 * Register: $E7CC (8bits)
                      (./Engine/Joypad/R):00014                 *
                      (./Engine/Joypad/R):00015                 * Joypad2     Joypad1
                      (./Engine/Joypad/R):00016                 * 1111        1111 (0: press | 1: release)  
                      (./Engine/Joypad/R):00017                 * ||||_Up     ||||_Up
                      (./Engine/Joypad/R):00018                 * |||__Down   |||__Down
                      (./Engine/Joypad/R):00019                 * ||___Left   ||___Left
                      (./Engine/Joypad/R):00020                 * |____Right  |____Right
                      (./Engine/Joypad/R):00021                 *
                      (./Engine/Joypad/R):00022                 * Joypads Bouttons
                      (./Engine/Joypad/R):00023                 * ----------------
                      (./Engine/Joypad/R):00024                 * Register: $E7CD (8bits)
                      (./Engine/Joypad/R):00025                 *
                      (./Engine/Joypad/R):00026                 *   [------] 6 bits DAC
                      (./Engine/Joypad/R):00027                 * 11 001100 (0: press | 1: release) 
                      (./Engine/Joypad/R):00028                 * ||   ||
                      (./Engine/Joypad/R):00029                 * ||   ||_ Btn B Joypad1
                      (./Engine/Joypad/R):00030                 * ||   |__ Btn B Joypad2
                      (./Engine/Joypad/R):00031                 * ||
                      (./Engine/Joypad/R):00032                 * ||______ Btn A Joypad1
                      (./Engine/Joypad/R):00033                 * |_______ Btn A Joypad2
                      (./Engine/Joypad/R):00034                 *
                      (./Engine/Joypad/R):00035                 * Result values: Joypads_Held, Joypads_Press
                      (./Engine/Joypad/R):00036                 * -----------------------------------------------
                      (./Engine/Joypad/R):00037                 * (16 bits)
                      (./Engine/Joypad/R):00038                 * Joypad2     Joypad1                                                          
                      (./Engine/Joypad/R):00039                 * 0000        0000 (0: release | 1: press) 00 000000 (0: release | 1: press)  
                      (./Engine/Joypad/R):00040                 * ||||_Up     ||||_Up                       ||  ||         
                      (./Engine/Joypad/R):00041                 * |||__Down   |||__Down                     ||  ||_ Btn B Joypad1
                      (./Engine/Joypad/R):00042                 * ||___Left   ||___Left                     ||  |__ Btn B Joypad2                   
                      (./Engine/Joypad/R):00043                 * |____Right  |____Right                    ||_____ Btn A Joypad1                 
                      (./Engine/Joypad/R):00044                 *                                           |______ Btn A Joypad2
                      (./Engine/Joypad/R):00045                 ********************************************************************************
                      (./Engine/Joypad/R):00046                 
                      (./Engine/Joypad/R):00047                 ; dedicated mask
     0001             (./Engine/Joypad/R):00048                 c1_button_up_mask            equ   %00000001 
     0002             (./Engine/Joypad/R):00049                 c1_button_down_mask          equ   %00000010 
     0004             (./Engine/Joypad/R):00050                 c1_button_left_mask          equ   %00000100 
     0008             (./Engine/Joypad/R):00051                 c1_button_right_mask         equ   %00001000 
     0040             (./Engine/Joypad/R):00052                 c1_button_A_mask             equ   %01000000 
     0004             (./Engine/Joypad/R):00053                 c1_button_B_mask             equ   %00000100 
                      (./Engine/Joypad/R):00054                 
     0010             (./Engine/Joypad/R):00055                 c2_button_up_mask            equ   %00010000 
     0020             (./Engine/Joypad/R):00056                 c2_button_down_mask          equ   %00100000  
     0040             (./Engine/Joypad/R):00057                 c2_button_left_mask          equ   %01000000 
     0080             (./Engine/Joypad/R):00058                 c2_button_right_mask         equ   %10000000 
     0080             (./Engine/Joypad/R):00059                 c2_button_A_mask             equ   %10000000 
     0008             (./Engine/Joypad/R):00060                 c2_button_B_mask             equ   %00001000 
                      (./Engine/Joypad/R):00061                 
                      (./Engine/Joypad/R):00062                 ; common mask
     0011             (./Engine/Joypad/R):00063                 c_button_up_mask             equ   %00010001 
     0022             (./Engine/Joypad/R):00064                 c_button_down_mask           equ   %00100010 
     0044             (./Engine/Joypad/R):00065                 c_button_left_mask           equ   %01000100 
     0088             (./Engine/Joypad/R):00066                 c_button_right_mask          equ   %10001000 
     00C0             (./Engine/Joypad/R):00067                 c_button_A_mask              equ   %11000000 
     000C             (./Engine/Joypad/R):00068                 c_button_B_mask              equ   %00001100 
                      (./Engine/Joypad/R):00069                 
                      (./Engine/Joypad/R):00070                 ; player mask
     000F             (./Engine/Joypad/R):00071                 c1_dpad                      equ   %00001111 
     00F0             (./Engine/Joypad/R):00072                 c2_dpad                      equ   %11110000
     0044             (./Engine/Joypad/R):00073                 c1_butn                      equ   %01000100 
     0088             (./Engine/Joypad/R):00074                 c2_butn                      equ   %10001000 
                      (./Engine/Joypad/R):00075                 
8607                  (./Engine/Joypad/R):00076                 Joypads_Read
8607 00               (./Engine/Joypad/R):00077                 Dpad_Read                    fcb   $00
8608 00               (./Engine/Joypad/R):00078                 Fire_Read                    fcb   $00
                      (./Engine/Joypad/R):00079                    
8609                  (./Engine/Joypad/R):00080                 Joypads
8609                  (./Engine/Joypad/R):00081                 Joypads_Held                           
8609 00               (./Engine/Joypad/R):00082                 Dpad_Held                    fcb   $00 
860A 00               (./Engine/Joypad/R):00083                 Fire_Held                    fcb   $00 
860B                  (./Engine/Joypad/R):00084                 Joypads_Press                          
860B 00               (./Engine/Joypad/R):00085                 Dpad_Press                   fcb   $00 
860C 00               (./Engine/Joypad/R):00086                 Fire_Press                   fcb   $00 
                      (./Engine/Joypad/R):00087                 
                      (./Engine/Joypad/R):00088                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Joypad/R):00089                                                        *; Subroutine to read joypad input, and send it to the RAM
                      (./Engine/Joypad/R):00090                                                        *; ---------------------------------------------------------------------------
                      (./Engine/Joypad/R):00091                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/Joypad/R):00092                                                        *
                      (./Engine/Joypad/R):00093                                                        *; sub_111C:
860D                  (./Engine/Joypad/R):00094                 ReadJoypads                            *ReadJoypads:
                      (./Engine/Joypad/R):00095                                                        *    lea (Ctrl_1).w,a0         ; address where joypad states are written
                      (./Engine/Joypad/R):00096                                                        *    lea (HW_Port_1_Data).l,a1 ; first joypad port
                      (./Engine/Joypad/R):00097                                                        *    bsr.s   Joypad_Read       ; do the first joypad
                      (./Engine/Joypad/R):00098                                                        *    addq.w  #2,a1             ; do the second joypad
                      (./Engine/Joypad/R):00099                                                        *
                      (./Engine/Joypad/R):00100                                                        *; sub_112A:
                      (./Engine/Joypad/R):00101                                                        *Joypad_Read:
                      (./Engine/Joypad/R):00102                                                        *    move.b  #0,(a1)           ; Poll controller data port
                      (./Engine/Joypad/R):00103                                                        *    nop
                      (./Engine/Joypad/R):00104                                                        *    nop
                      (./Engine/Joypad/R):00105                                                        *    move.b  (a1),d0           ; Get controller port data (start/A)
                      (./Engine/Joypad/R):00106                                                        *    lsl.b   #2,d0
                      (./Engine/Joypad/R):00107                                                        *    andi.b  #$C0,d0
                      (./Engine/Joypad/R):00108                                                        *    move.b  #$40,(a1)         ; Poll controller data port again
                      (./Engine/Joypad/R):00109                                                        *    nop
                      (./Engine/Joypad/R):00110                                                        *    nop
                      (./Engine/Joypad/R):00111                                                        *    move.b  (a1),d1           ; Get controller port data (B/C/Dpad)
                      (./Engine/Joypad/R):00112                                                        *    andi.b  #$3F,d1
                      (./Engine/Joypad/R):00113                                                        *    or.b    d1,d0             ; Fuse together into one controller bit array
860D FCE7CC           (./Engine/Joypad/R):00114 [6]     5922            ldd   $E7CC
8610 43               (./Engine/Joypad/R):00115 [2]     5924            coma
8611 53               (./Engine/Joypad/R):00116 [2]     5926            comb                           *    not.b   d0
8612 FD8607           (./Engine/Joypad/R):00117 [6]     5932            std   Joypads_Read        
8615 FC8609           (./Engine/Joypad/R):00118 [6]     5938            ldd   Joypads_Held             *    move.b  (a0),d1           ; Get held button data
8618 B88607           (./Engine/Joypad/R):00119 [5]     5943            eora  Dpad_Read                *    eor.b   d0,d1             ; Toggle off buttons that are being held                       
861B F88608           (./Engine/Joypad/R):00120 [5]     5948            eorb  Fire_Read
                      (./Engine/Joypad/R):00121                                                        *    move.b  d0,(a0)+          ; Put raw controller input (for held buttons) in F604/F606
861E B48607           (./Engine/Joypad/R):00122 [5]     5953            anda  Dpad_Read                *    and.b   d0,d1
8621 F48608           (./Engine/Joypad/R):00123 [5]     5958            andb  Fire_Read
8624 FD860B           (./Engine/Joypad/R):00124 [6]     5964            std   Joypads_Press            *    move.b  d1,(a0)+          ; Put pressed controller input in F605/F607
8627 FC8607           (./Engine/Joypad/R):00125 [6]     5970            ldd   Joypads_Read
862A FD8609           (./Engine/Joypad/R):00126 [6]     5976            std   Joypads_Held
862D 39               (./Engine/Joypad/R):00127 [5]     5981            rts                            *    rts
                      (./Engine/Joypad/R):00128                                                        *; End of function Joypad_Read
                      (C:\Users\bhrou\gi):00060                         INCLUDE "./Engine/ObjectManagement/RunObjects.asm"
                      (./Engine/ObjectMa):00001                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00002                 * RunObjects
                      (./Engine/ObjectMa):00003                 * ------------
                      (./Engine/ObjectMa):00004                 * Subroutine to run objects code
                      (./Engine/ObjectMa):00005                 *
                      (./Engine/ObjectMa):00006                 * input REG : none
                      (./Engine/ObjectMa):00007                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00008                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00009                                                             *; This runs the code of all the objects that are in Object_RAM
                      (./Engine/ObjectMa):00010                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00011                                                             *
                      (./Engine/ObjectMa):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00013                                                             *
                      (./Engine/ObjectMa):00014                                                             *; sub_15F9C: ObjectsLoad:
862E                  (./Engine/ObjectMa):00015                 RunObjects                                  *RunObjects:
                      (./Engine/ObjectMa):00016                                                             *    tst.b   (Teleport_flag).w
                      (./Engine/ObjectMa):00017                                                             *    bne.s   RunObjects_End  ; rts
862E CE627F           (./Engine/ObjectMa):00018 [3]     5984            ldu   #Object_RAM                   *    lea (Object_RAM).w,a0 ; a0=object
8631 2017             (./Engine/ObjectMa):00019 [3]     5987            bra   am_RunNextObject
                      (./Engine/ObjectMa):00020                                                             *    moveq   #(Dynamic_Object_RAM_End-Object_RAM)/object_size-1,d7 ; run the first $80 objects out of levels
                      (./Engine/ObjectMa):00021                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00022                                                             *    cmpi.b  #GameModeID_Demo,(Game_Mode).w  ; demo mode?
                      (./Engine/ObjectMa):00023                                                             *    beq.s   +   ; if in a level in a demo, branch
                      (./Engine/ObjectMa):00024                                                             *    cmpi.b  #GameModeID_Level,(Game_Mode).w ; regular level mode?
                      (./Engine/ObjectMa):00025                                                             *    bne.s   RunObject ; if not in a level, branch to RunObject
8633                  (./Engine/ObjectMa):00026                 RunObjects_01                               *+
                      (./Engine/ObjectMa):00027                                                             *    move.w  #(Object_RAM_End-Object_RAM)/object_size-1,d7   ; run the first $90 objects in levels
                      (./Engine/ObjectMa):00028                                                             *    tst.w   (Two_player_mode).w
                      (./Engine/ObjectMa):00029                                                             *    bne.s   RunObject ; if in 2 player competition mode, branch to RunObject
                      (./Engine/ObjectMa):00030                                                             *
                      (./Engine/ObjectMa):00031                         ;tst   glb_MainCharacter_Is_Dead     *    cmpi.b  #6,(MainCharacter+routine).w
                      (./Engine/ObjectMa):00032                         ;bne   RunObjectsWhenPlayerIsDead    *    bhs.s   RunObjectsWhenPlayerIsDead ; if dead, branch
                      (./Engine/ObjectMa):00033                                                             *    ; continue straight to RunObject
                      (./Engine/ObjectMa):00034                                                             *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00035                                                             *
                      (./Engine/ObjectMa):00036                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00037                                                             *; This is THE place where each individual object's code gets called from
                      (./Engine/ObjectMa):00038                                                             *; -------------------------------------------------------------------------------
                      (./Engine/ObjectMa):00039                                                             *
                      (./Engine/ObjectMa):00040                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00041                                                             *
                      (./Engine/ObjectMa):00042                                                             *; sub_15FCC:
8633                  (./Engine/ObjectMa):00043                 RunObject                                   *RunObject:
8633 E6C4             (./Engine/ObjectMa):00044 [4]     5991            ldb   id,u                          *    move.b  id(a0),d0   ; get the object's ID
8635 2710             (./Engine/ObjectMa):00045 [3]     5994            beq   RunNextObject                 *    beq.s   RunNextObject ; if it's obj00, skip it
                      (./Engine/ObjectMa):00046                 
8637 8E9846           (./Engine/ObjectMa):00047 [3]     5997            ldx   #Obj_Index_Page
863A 3A               (./Engine/ObjectMa):00048 [3]     6000            abx
863B A684             (./Engine/ObjectMa):00049 [4]     6004            lda   ,x                            ; page memoire
                      (./Engine/ObjectMa):00050                         _SetCartPageA                       ; selection de la page en RAM (0000-3FFF)
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
863D B7E7E6           (    _SetCartPageA):00004 [5]     6009            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8640 58               (./Engine/ObjectMa):00051 [2]     6011            aslb                                *    add.w   d0,d0
                      (./Engine/ObjectMa):00052                                                             *    add.w   d0,d0   ; d0 = object ID * 4
8641 8E9849           (./Engine/ObjectMa):00053 [3]     6014            ldx   #Obj_Index_Address            *    movea.l Obj_Index-4(pc,d0.w),a1 ; load the address of the object's code
8644 3A               (./Engine/ObjectMa):00054 [3]     6017            abx
8645 AD94             (./Engine/ObjectMa):00055 [10]    6027            jsr   [,x]                          *    jsr (a1)    ; dynamic call! to one of the the entries in Obj_Index
                      (./Engine/ObjectMa):00056                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00057                                                             *
                      (./Engine/ObjectMa):00058                                                             *; loc_15FDC:
8647                  (./Engine/ObjectMa):00059                 RunNextObject                               *RunNextObject:
8647 33C86B           (./Engine/ObjectMa):00060 [5]     6032            leau  next_object,u                 *    lea next_object(a0),a0 ; load 0bj address
864A                  (./Engine/ObjectMa):00061                 am_RunNextObject                            
864A 11837478         (./Engine/ObjectMa):00062 [5]     6037            cmpu  #Object_RAM_End               *    dbf d7,RunObject
864E 26E3             (./Engine/ObjectMa):00063 [3]     6040            bne   RunObject                     *; return_15FE4:
8650                  (./Engine/ObjectMa):00064                 RunObjects_End                              *RunObjects_End:
8650 39               (./Engine/ObjectMa):00065 [5]     6045            rts                                 *    rts
                      (./Engine/ObjectMa):00066                                                             *
                      (./Engine/ObjectMa):00067                                                             *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00068                                                             *; this skips certain objects to make enemies and things pause when Sonic dies
                      (./Engine/ObjectMa):00069                                                             *; loc_15FE6:
8651                  (./Engine/ObjectMa):00070                 RunObjectsWhenPlayerIsDead                  *RunObjectsWhenPlayerIsDead:
                      (./Engine/ObjectMa):00071                         ;ldu   #Reserved_Object_RAM
                      (./Engine/ObjectMa):00072                         ;ldx   #Reserved_Object_RAM_End
                      (./Engine/ObjectMa):00073                         ;stx   am_RunNextObject+2            *    moveq   #(Reserved_Object_RAM_End-Reserved_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00074                         ;bsr   RunObject                     *    bsr.s   RunObject   ; run the first $10 objects normally
                      (./Engine/ObjectMa):00075                                                             *    moveq   #(Dynamic_Object_RAM_End-Dynamic_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00076                                                             *    bsr.s   RunObjectDisplayOnly ; all objects in this range are paused      
                      (./Engine/ObjectMa):00077                         ;ldu   #LevelOnly_Object_RAM 
                      (./Engine/ObjectMa):00078                         ;ldx   #LevelOnly_Object_RAM_End
                      (./Engine/ObjectMa):00079                         ;stx   am_RunNextObject+2            *    moveq   #(LevelOnly_Object_RAM_End-LevelOnly_Object_RAM)/object_size-1,d7
                      (./Engine/ObjectMa):00080                         ;bsr   RunObject                     *    bra.s   RunObject   ; run the last $10 objects normally
                      (./Engine/ObjectMa):00081                                                             *
                      (./Engine/ObjectMa):00082                         ;ldx   #Object_RAM_End               * repositionne la fin du RunObject avec sa valeur par d�faut
                      (./Engine/ObjectMa):00083                         ;stx   am_RunNextObject+2
                      (./Engine/ObjectMa):00084                         ;rts            
                      (./Engine/ObjectMa):00085                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00086                                                             *
                      (./Engine/ObjectMa):00087                                                             *; sub_15FF2:
                      (./Engine/ObjectMa):00088                                                             *RunObjectDisplayOnly:
                      (./Engine/ObjectMa):00089                                                             *    moveq   #0,d0
                      (./Engine/ObjectMa):00090                                                             *    move.b  id(a0),d0   ; get the object's ID
                      (./Engine/ObjectMa):00091                                                             *    beq.s   +   ; if it's obj00, skip it
                      (./Engine/ObjectMa):00092                                                             *    tst.b   render_flags(a0)    ; should we render it?
                      (./Engine/ObjectMa):00093                                                             *    bpl.s   +           ; if not, skip it
                      (./Engine/ObjectMa):00094                                                             *    bsr.w   DisplaySprite
                      (./Engine/ObjectMa):00095                                                             *+
                      (./Engine/ObjectMa):00096                                                             *    lea next_object(a0),a0 ; load 0bj address
                      (./Engine/ObjectMa):00097                                                             *    dbf d7,RunObjectDisplayOnly
                      (./Engine/ObjectMa):00098                                                             
                      (./Engine/ObjectMa):00099                                                             *    rts
                      (./Engine/ObjectMa):00100                                                             *; End of function RunObjectDisplayOnly
                      (./Engine/ObjectMa):00101                                                             *
                      (./Engine/ObjectMa):00102                                                             *; ===========================================================================
                      (C:\Users\bhrou\gi):00061                         INCLUDE "./Engine/ObjectManagement/DeleteObject.asm"
                      (./Engine/ObjectMa):00001                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00002                 * DeleteObject
                      (./Engine/ObjectMa):00003                 * ------------
                      (./Engine/ObjectMa):00004                 * Subroutine to delete an object.
                      (./Engine/ObjectMa):00005                 * If the object is rendered as a sprite it will be deleted by EraseSprites
                      (./Engine/ObjectMa):00006                 * routine
                      (./Engine/ObjectMa):00007                 *
                      (./Engine/ObjectMa):00008                 * DeleteObject
                      (./Engine/ObjectMa):00009                 * input REG : [u] object pointer (OST)
                      (./Engine/ObjectMa):00010                 *
                      (./Engine/ObjectMa):00011                 * DeleteObject_x
                      (./Engine/ObjectMa):00012                 * input REG : [x] object pointer (OST)
                      (./Engine/ObjectMa):00013                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00014                 
                      (./Engine/ObjectMa):00015                                                        *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00016                                                        *; Subroutine to delete an object
                      (./Engine/ObjectMa):00017                                                        *; ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00018                                                        *
                      (./Engine/ObjectMa):00019                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./Engine/ObjectMa):00020                                                        *
                      (./Engine/ObjectMa):00021                                                        *; freeObject:
8651                  (./Engine/ObjectMa):00022                 DeleteObject_x                *DeleteObject:
8651 3456             (./Engine/ObjectMa):00023 [11]    6056            pshs  d,x,u                    *    movea.l a0,a1
8653 3384             (./Engine/ObjectMa):00024 [4]     6060            leau  ,x                       *; sub_164E8:
8655 200A             (./Engine/ObjectMa):00025 [3]     6063            bra   DOB_Start
8657                  (./Engine/ObjectMa):00026                 DeleteObject_return
8657 35D6             (./Engine/ObjectMa):00027 [13]    6076            puls  d,x,u,pc                      ; rts
                      (./Engine/ObjectMa):00028                         
8659                  (./Engine/ObjectMa):00029                 DeleteObject                  *DeleteObject2:
8659 3456             (./Engine/ObjectMa):00030 [11]    6087            pshs  d,x,u
                      (./Engine/ObjectMa):00031                         
865B A642             (./Engine/ObjectMa):00032 [5]     6092            lda   render_flags,u
865D 8440             (./Engine/ObjectMa):00033 [2]     6094            anda  #render_todelete_mask
865F 26F6             (./Engine/ObjectMa):00034 [3]     6097            bne   DeleteObject_return           ; branch if already registred for deletion        
                      (./Engine/ObjectMa):00035                         
8661                  (./Engine/ObjectMa):00036                 DOB_Start
8661 A6C848           (./Engine/ObjectMa):00037 [5]     6102            lda   rsv_prev_render_flags_0,u
8664 2A27             (./Engine/ObjectMa):00038 [3]     6105            bpl   DOB_RemoveFromDPSB0           ; branch if not onscreen on buffer 0
                      (./Engine/ObjectMa):00039                 
8666                  (./Engine/ObjectMa):00040                 DOB_ToDeleteFlag0
8666 A642             (./Engine/ObjectMa):00041 [5]     6110            lda   render_flags,u
8668 8A40             (./Engine/ObjectMa):00042 [2]     6112            ora   #render_todelete_mask
866A A742             (./Engine/ObjectMa):00043 [5]     6117            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./Engine/ObjectMa):00044                         
866C                  (./Engine/ObjectMa):00045                 DOB_Unset0        
866C BE77EF           (./Engine/ObjectMa):00046 [6]     6123            ldx   Lst_Priority_Unset_0          ; add object to unset list on buffer 0
866F EF84             (./Engine/ObjectMa):00047 [5]     6128            stu   ,x
8671 3002             (./Engine/ObjectMa):00048 [5]     6133            leax  2,x
8673 BF77EF           (./Engine/ObjectMa):00049 [6]     6139            stx   Lst_Priority_Unset_0
                      (./Engine/ObjectMa):00050                         
8676                  (./Engine/ObjectMa):00051                 DOB_TestOnscreen1
8676 A6C85C           (./Engine/ObjectMa):00052 [5]     6144            lda   rsv_prev_render_flags_1,u
8679 2A54             (./Engine/ObjectMa):00053 [3]     6147            bpl   DOB_RemoveFromDPSB1           ; branch if not onscreen on buffer 1
                      (./Engine/ObjectMa):00054                         
867B                  (./Engine/ObjectMa):00055                 DOB_ToDeleteFlag1
867B A642             (./Engine/ObjectMa):00056 [5]     6152            lda   render_flags,u
867D 8A40             (./Engine/ObjectMa):00057 [2]     6154            ora   #render_todelete_mask
867F A742             (./Engine/ObjectMa):00058 [5]     6159            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./Engine/ObjectMa):00059                         
8681                  (./Engine/ObjectMa):00060                 DOB_Unset1
8681 BE7871           (./Engine/ObjectMa):00061 [6]     6165            ldx   Lst_Priority_Unset_1          ; add object to unset list on buffer 1                       
8684 EF84             (./Engine/ObjectMa):00062 [5]     6170            stu   ,x
8686 3002             (./Engine/ObjectMa):00063 [5]     6175            leax  2,x
8688 BF7871           (./Engine/ObjectMa):00064 [6]     6181            stx   Lst_Priority_Unset_1
868B 35D6             (./Engine/ObjectMa):00065 [13]    6194            puls  d,x,u,pc                      ; rts
                      (./Engine/ObjectMa):00066                 
868D                  (./Engine/ObjectMa):00067                 DOB_RemoveFromDPSB0
868D ECC836           (./Engine/ObjectMa):00068 [6]     6200            ldd   rsv_priority_prev_obj_0,u     ; remove object from DSP on buffer 0
8690 2611             (./Engine/ObjectMa):00069 [3]     6203            bne   DOB_ChainPrevB0
                      (./Engine/ObjectMa):00070                         
8692 A6C835           (./Engine/ObjectMa):00071 [5]     6208            lda   rsv_priority_0,u
8695 48               (./Engine/ObjectMa):00072 [2]     6210            lsla
8696 108E77CB         (./Engine/ObjectMa):00073 [4]     6214            ldy   #Tbl_Priority_First_Entry_0
869A 31A6             (./Engine/ObjectMa):00074 [5]     6219            leay  a,y
869C ECC838           (./Engine/ObjectMa):00075 [6]     6225            ldd   rsv_priority_next_obj_0,u
869F EDA4             (./Engine/ObjectMa):00076 [5]     6230            std   ,y
86A1 200A             (./Engine/ObjectMa):00077 [3]     6233            bra   DOB_CheckPrioNextB0
                      (./Engine/ObjectMa):00078                                 
86A3                  (./Engine/ObjectMa):00079                 DOB_ChainPrevB0
86A3 ECC838           (./Engine/ObjectMa):00080 [6]     6239            ldd   rsv_priority_next_obj_0,u
86A6 10AEC836         (./Engine/ObjectMa):00081 [7]     6246            ldy   rsv_priority_prev_obj_0,u        
86AA EDA838           (./Engine/ObjectMa):00082 [6]     6252            std   rsv_priority_next_obj_0,y        
                      (./Engine/ObjectMa):00083                 
86AD                  (./Engine/ObjectMa):00084                 DOB_CheckPrioNextB0       
86AD ECC838           (./Engine/ObjectMa):00085 [6]     6258            ldd   rsv_priority_next_obj_0,u
86B0 2611             (./Engine/ObjectMa):00086 [3]     6261            bne   DOB_ChainNextB0
                      (./Engine/ObjectMa):00087                 
86B2 A6C835           (./Engine/ObjectMa):00088 [5]     6266            lda   rsv_priority_0,u
86B5 48               (./Engine/ObjectMa):00089 [2]     6268            lsla
86B6 108E77DD         (./Engine/ObjectMa):00090 [4]     6272            ldy   #Tbl_Priority_Last_Entry_0
86BA 31A6             (./Engine/ObjectMa):00091 [5]     6277            leay  a,y
86BC ECC836           (./Engine/ObjectMa):00092 [6]     6283            ldd   rsv_priority_prev_obj_0,u
86BF EDA4             (./Engine/ObjectMa):00093 [5]     6288            std   ,y
86C1 20B3             (./Engine/ObjectMa):00094 [3]     6291            bra   DOB_TestOnscreen1
                      (./Engine/ObjectMa):00095                                 
86C3                  (./Engine/ObjectMa):00096                 DOB_ChainNextB0
86C3 ECC836           (./Engine/ObjectMa):00097 [6]     6297            ldd   rsv_priority_prev_obj_0,u
86C6 10AEC838         (./Engine/ObjectMa):00098 [7]     6304            ldy   rsv_priority_next_obj_0,u        
86CA EDA836           (./Engine/ObjectMa):00099 [6]     6310            std   rsv_priority_prev_obj_0,y
86CD 20A7             (./Engine/ObjectMa):00100 [3]     6313            bra   DOB_TestOnscreen1        
                      (./Engine/ObjectMa):00101                 
86CF                  (./Engine/ObjectMa):00102                 DOB_RemoveFromDPSB1
86CF ECC84A           (./Engine/ObjectMa):00103 [6]     6319            ldd   rsv_priority_prev_obj_1,u
86D2 2611             (./Engine/ObjectMa):00104 [3]     6322            bne   DOB_ChainPrevB1
                      (./Engine/ObjectMa):00105                         
86D4 A6C849           (./Engine/ObjectMa):00106 [5]     6327            lda   rsv_priority_1,u
86D7 48               (./Engine/ObjectMa):00107 [2]     6329            lsla
86D8 108E784D         (./Engine/ObjectMa):00108 [4]     6333            ldy   #Tbl_Priority_First_Entry_1
86DC 31A6             (./Engine/ObjectMa):00109 [5]     6338            leay  a,y
86DE ECC84C           (./Engine/ObjectMa):00110 [6]     6344            ldd   rsv_priority_next_obj_1,u
86E1 EDA4             (./Engine/ObjectMa):00111 [5]     6349            std   ,y
86E3 200A             (./Engine/ObjectMa):00112 [3]     6352            bra   DOB_CheckPrioNextB1
                      (./Engine/ObjectMa):00113                                 
86E5                  (./Engine/ObjectMa):00114                 DOB_ChainPrevB1
86E5 ECC84C           (./Engine/ObjectMa):00115 [6]     6358            ldd   rsv_priority_next_obj_1,u
86E8 10AEC84A         (./Engine/ObjectMa):00116 [7]     6365            ldy   rsv_priority_prev_obj_1,u        
86EC EDA84C           (./Engine/ObjectMa):00117 [6]     6371            std   rsv_priority_next_obj_1,y        
                      (./Engine/ObjectMa):00118                 
86EF                  (./Engine/ObjectMa):00119                 DOB_CheckPrioNextB1       
86EF ECC84C           (./Engine/ObjectMa):00120 [6]     6377            ldd   rsv_priority_next_obj_1,u
86F2 2619             (./Engine/ObjectMa):00121 [3]     6380            bne   DOB_ChainNextB1
                      (./Engine/ObjectMa):00122                 
86F4 A6C849           (./Engine/ObjectMa):00123 [5]     6385            lda   rsv_priority_1,u
86F7 48               (./Engine/ObjectMa):00124 [2]     6387            lsla
86F8 108E785F         (./Engine/ObjectMa):00125 [4]     6391            ldy   #Tbl_Priority_Last_Entry_1
86FC 31A6             (./Engine/ObjectMa):00126 [5]     6396            leay  a,y
86FE ECC84A           (./Engine/ObjectMa):00127 [6]     6402            ldd   rsv_priority_prev_obj_1,u
8701 EDA4             (./Engine/ObjectMa):00128 [5]     6407            std   ,y
8703 A6C848           (./Engine/ObjectMa):00129 [5]     6412            lda   rsv_prev_render_flags_0,u
8706 2B03             (./Engine/ObjectMa):00130 [3]     6415            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
8708 BD8721           (./Engine/ObjectMa):00131 [8]     6423            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
870B                  (./Engine/ObjectMa):00132                 DOB_rts                                *
870B 35D6             (./Engine/ObjectMa):00133 [13]    6436            puls  d,x,u,pc        
                      (./Engine/ObjectMa):00134                                 
870D                  (./Engine/ObjectMa):00135                 DOB_ChainNextB1
870D ECC84A           (./Engine/ObjectMa):00136 [6]     6442            ldd   rsv_priority_prev_obj_1,u
8710 10AEC84C         (./Engine/ObjectMa):00137 [7]     6449            ldy   rsv_priority_next_obj_1,u        
8714 EDA84A           (./Engine/ObjectMa):00138 [6]     6455            std   rsv_priority_prev_obj_1,y
8717 A6C848           (./Engine/ObjectMa):00139 [5]     6460            lda   rsv_prev_render_flags_0,u
871A 2BEF             (./Engine/ObjectMa):00140 [3]     6463            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
871C BD8721           (./Engine/ObjectMa):00141 [8]     6471            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
871F 35D6             (./Engine/ObjectMa):00142 [13]    6484            puls  d,x,u,pc        
                      (./Engine/ObjectMa):00143                 
                      (./Engine/ObjectMa):00144                                                        *    moveq   #0,d1
                      (./Engine/ObjectMa):00145                                                        *
                      (./Engine/ObjectMa):00146                                                        *    moveq   #bytesToLcnt(next_object),d0 ; we want to clear up to the next object
                      (./Engine/ObjectMa):00147                                                        *    ; delete the object by setting all of its bytes to 0
                      (./Engine/ObjectMa):00148                                                        *-   move.l  d1,(a1)+
                      (./Engine/ObjectMa):00149                                                        *    dbf d0,-
                      (./Engine/ObjectMa):00150                                                        *    if object_size&3
                      (./Engine/ObjectMa):00151                                                        *    move.w  d1,(a1)+
                      (./Engine/ObjectMa):00152                                                        *    endif
                      (./Engine/ObjectMa):00153                                                        *
                      (./Engine/ObjectMa):00154                                                        *    rts
                      (./Engine/ObjectMa):00155                                                        *; End of function DeleteObject2                                            
                      (C:\Users\bhrou\gi):00062                         INCLUDE "./engine/object-management/clear-obj-107.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * ClearObj107
                      (./engine/object-m):00003                 * -----------
                      (./engine/object-m):00004                 * Subroutine to clear an object data in OST and ext_variables
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * input REG : [u] pointer on objet (OST)
                      (./engine/object-m):00007                 * clear REG : [d,y]
                      (./engine/object-m):00008                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00009                 
8721                  (./engine/object-m):00010                 ClearObj
8721 3476             (./engine/object-m):00011 [13]    6497            pshs  d,x,y,u
8723 10FF8750         (./engine/object-m):00012 [7]     6504            sts   CLO_1+2
8727 32C86B           (./engine/object-m):00013 [5]     6509            leas  107,u        
872A CC0000           (./engine/object-m):00014 [3]     6512            ldd   #$0000
872D 8E0000           (./engine/object-m):00015 [3]     6515            ldx   #$0000
8730 3184             (./engine/object-m):00016 [4]     6519            leay  ,x
8732 3384             (./engine/object-m):00017 [4]     6523            leau  ,x
8734 3476             (./engine/object-m):00018 [13]    6536            pshs  d,x,y,u
8736 3476             (./engine/object-m):00019 [13]    6549            pshs  d,x,y,u
8738 3476             (./engine/object-m):00020 [13]    6562            pshs  d,x,y,u
873A 3476             (./engine/object-m):00021 [13]    6575            pshs  d,x,y,u
873C 3476             (./engine/object-m):00022 [13]    6588            pshs  d,x,y,u
873E 3476             (./engine/object-m):00023 [13]    6601            pshs  d,x,y,u
8740 3476             (./engine/object-m):00024 [13]    6614            pshs  d,x,y,u
8742 3476             (./engine/object-m):00025 [13]    6627            pshs  d,x,y,u
8744 3476             (./engine/object-m):00026 [13]    6640            pshs  d,x,y,u
8746 3476             (./engine/object-m):00027 [13]    6653            pshs  d,x,y,u
8748 3476             (./engine/object-m):00028 [13]    6666            pshs  d,x,y,u
874A 3402             (./engine/object-m):00029 [6]     6672            pshs  a
874C 33E4             (./engine/object-m):00030 [4]     6676            leau  ,s
874E                  (./engine/object-m):00031                 CLO_1        
874E 10CE0000         (./engine/object-m):00032 [4]     6680            lds   #$0000        ; start of object should not be written with S as an index because of IRQ        
8752 3636             (./engine/object-m):00033 [11]    6691            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
8754 3636             (./engine/object-m):00034 [11]    6702            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine  (here 18 bytes of margin)
8756 3636             (./engine/object-m):00035 [11]    6713            pshu  d,x,y         ; DEPENDENCY on object_size definition
8758                  (./engine/object-m):00036                 CLO_2        
8758 35F6             (./engine/object-m):00037 [15]    6728            puls  d,x,y,u,pc
                      (C:\Users\bhrou\gi):00063                         INCLUDE "./Engine/ObjectManagement/RunPgSubRoutine.asm" 
                      (./Engine/ObjectMa):00001                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00002                 * RunPgSubRoutine
                      (./Engine/ObjectMa):00003                 * ------------
                      (./Engine/ObjectMa):00004                 * Subroutine to run a another Sub Routine in a different Memory Page
                      (./Engine/ObjectMa):00005                 *
                      (./Engine/ObjectMa):00006                 * input REG : [A] Memory Page of Sub Routine
                      (./Engine/ObjectMa):00007                 * ---------------------------------------------------------------------------
                      (./Engine/ObjectMa):00008                 
875A                  (./Engine/ObjectMa):00009                 RunPgSubRoutine 
                      (./Engine/ObjectMa):00010                         _GetCartPageB
                      (    _GetCartPageB):00001                  IFDEF T2
                      (    _GetCartPageB):00002                         jsr   GetCartPageB
                      (    _GetCartPageB):00003                  ELSE
875A F6E7E6           (    _GetCartPageB):00004 [5]     6733            ldb   $E7E6
                      (    _GetCartPageB):00005                  ENDC
875D F78768           (./Engine/ObjectMa):00011 [5]     6738            stb   RunPgSubRoutine_return+1 ; backup data page
                      (./Engine/ObjectMa):00012                         
                      (./Engine/ObjectMa):00013                         _SetCartPageA                  ; set data page for sub routine to call
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8760 B7E7E6           (    _SetCartPageA):00004 [5]     6743            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8763 AD9F876D         (./Engine/ObjectMa):00014 [12]    6755            jsr   [glb_Address]
                      (./Engine/ObjectMa):00015                 
8767                  (./Engine/ObjectMa):00016                 RunPgSubRoutine_return        
8767 8600             (./Engine/ObjectMa):00017 [2]     6757            lda   #$00
                      (./Engine/ObjectMa):00018                         _SetCartPageA                  ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8769 B7E7E6           (    _SetCartPageA):00004 [5]     6762            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
876C 39               (./Engine/ObjectMa):00019 [5]     6767            rts
                      (./Engine/ObjectMa):00020                 
876D 0000             (./Engine/ObjectMa):00021                 glb_Address                   fdb   $0000
                      (C:\Users\bhrou\gi):00064                         INCLUDE "./Engine/LevelManagement/LoadGameMode.asm"     
                      (./Engine/LevelMan):00001                 ********************************************************************************
                      (./Engine/LevelMan):00002                 * LoadGameMode - Charge un nouveau niveau de jeu si requis
                      (./Engine/LevelMan):00003                 * ------------------------------------------------------------------------------
                      (./Engine/LevelMan):00004                 * 
                      (./Engine/LevelMan):00005                 *
                      (./Engine/LevelMan):00006                 ********************************************************************************
                      (./Engine/LevelMan):00007                 
876F 00               (./Engine/LevelMan):00008                 GameMode           fcb   $00
8770 00               (./Engine/LevelMan):00009                 ChangeGameMode     fcb   $00
8771 00               (./Engine/LevelMan):00010                 glb_Cur_Game_Mode  fcb   $00
8772 00               (./Engine/LevelMan):00011                 glb_Next_Game_Mode fcb   $00
                      (./Engine/LevelMan):00012                 
8773                  (./Engine/LevelMan):00013                 LoadGameMode
8773 B68770           (./Engine/LevelMan):00014 [5]     6772            lda   ChangeGameMode
8776 2601             (./Engine/LevelMan):00015 [3]     6775            bne   LoadGameModeNow
8778 39               (./Engine/LevelMan):00016 [5]     6780            rts
                      (./Engine/LevelMan):00017                         
8779                  (./Engine/LevelMan):00018                 LoadGameModeNow
                      (./Engine/LevelMan):00019                 
                      (./Engine/LevelMan):00020                  IFDEF T2
                      (./Engine/LevelMan):00021                         lda   #$80                     ; ROM page 0
                      (./Engine/LevelMan):00022                         _SetCartPageA
                      (./Engine/LevelMan):00023                                
                      (./Engine/LevelMan):00024                         lda   GameMode
                      (./Engine/LevelMan):00025                         ldb   glb_Cur_Game_Mode
                      (./Engine/LevelMan):00026                         jmp   Build_RAMLoaderManager          
                      (./Engine/LevelMan):00027                  ELSE
8779 C664             (./Engine/LevelMan):00028 [2]     6782            ldb   #$64                     ; Page 4 contains RAMLoaderManager
877B F7E7E6           (./Engine/LevelMan):00029 [5]     6787            stb   $E7E6
877E B6876F           (./Engine/LevelMan):00030 [5]     6792            lda   GameMode
8781 F68771           (./Engine/LevelMan):00031 [5]     6797            ldb   glb_Cur_Game_Mode
8784 7E0000           (./Engine/LevelMan):00032 [4]     6801            jmp   >$0000          
                      (./Engine/LevelMan):00033                  ENDC
                      (./Engine/LevelMan):00034                             
                      (C:\Users\bhrou\gi):00065                         INCLUDE "./Engine/Graphics/ClearInterlacedDataMemory.asm"
                      (./Engine/Graphics):00001                 ********************************************************************************
                      (./Engine/Graphics):00002                 * Clear memory in data area
                      (./Engine/Graphics):00003                 * !!! IRQ should be disabled !!!
                      (./Engine/Graphics):00004                 *
                      (./Engine/Graphics):00005                 * input  REG : [x] color for 4 pixels
                      (./Engine/Graphics):00006                 ********************************************************************************
                      (./Engine/Graphics):00007                 
8787                  (./Engine/Graphics):00008                 ClearInterlacedEvenDataMemory
8787 C618             (./Engine/Graphics):00009 [2]     6803            ldb   #$18
8789 F787B2           (./Engine/Graphics):00010 [5]     6808            stb   CIDM_a_start+3
878C F787D1           (./Engine/Graphics):00011 [5]     6813            stb   CIDM_b_start+3
878F C600             (./Engine/Graphics):00012 [2]     6815            ldb   #0
8791 F787C8           (./Engine/Graphics):00013 [5]     6820            stb   CIDM_a_end+3
8794 F787DF           (./Engine/Graphics):00014 [5]     6825            stb   CIDM_b_end+3        
8797 2010             (./Engine/Graphics):00015 [3]     6828            bra   ClearInterlacedDataMemory
                      (./Engine/Graphics):00016                 
8799                  (./Engine/Graphics):00017                 ClearInterlacedOddDataMemory
8799 C640             (./Engine/Graphics):00018 [2]     6830            ldb   #$40
879B F787B2           (./Engine/Graphics):00019 [5]     6835            stb   CIDM_a_start+3
879E F787D1           (./Engine/Graphics):00020 [5]     6840            stb   CIDM_b_start+3        
87A1 C628             (./Engine/Graphics):00021 [2]     6842            ldb   #$28
87A3 F787C8           (./Engine/Graphics):00022 [5]     6847            stb   CIDM_a_end+3
87A6 F787DF           (./Engine/Graphics):00023 [5]     6852            stb   CIDM_b_end+3        
                      (./Engine/Graphics):00024                         
87A9                  (./Engine/Graphics):00025                 ClearInterlacedDataMemory 
87A9 3448             (./Engine/Graphics):00026 [8]     6860            pshs  u,dp
87AB 10FF87E7         (./Engine/Graphics):00027 [7]     6867            sts   CIDM_end+2
                      (./Engine/Graphics):00028                         
87AF                  (./Engine/Graphics):00029                 CIDM_a_start
87AF 10CEDF40         (./Engine/Graphics):00030 [4]     6871            lds   #$DF40                   ; (dynamic)
87B3 3384             (./Engine/Graphics):00031 [4]     6875            leau  ,x
87B5 3184             (./Engine/Graphics):00032 [4]     6879            leay  ,x
87B7 1F10             (./Engine/Graphics):00033 [6]     6885            tfr   x,d
87B9 1F8B             (./Engine/Graphics):00034 [6]     6891            tfr   a,dp
87BB                  (./Engine/Graphics):00035                 CIDM_a
87BB 347E             (./Engine/Graphics):00036 [14]    6905            pshs  u,y,x,dp,b,a
87BD 347E             (./Engine/Graphics):00037 [14]    6919            pshs  u,y,x,dp,b,a
87BF 347E             (./Engine/Graphics):00038 [14]    6933            pshs  u,y,x,dp,b,a
87C1 347E             (./Engine/Graphics):00039 [14]    6947            pshs  u,y,x,dp,b,a        
87C3 3460             (./Engine/Graphics):00040 [9]     6956            pshs  u,y
87C5                  (./Engine/Graphics):00041                 CIDM_a_end         
87C5 118CC000         (./Engine/Graphics):00042 [5]     6961            cmps  #$C000
87C9 32E8D8           (./Engine/Graphics):00043 [5]     6966            leas  -40,s                                
87CC 26ED             (./Engine/Graphics):00044 [3]     6969            bne   CIDM_a  
                      (./Engine/Graphics):00045                       
87CE                  (./Engine/Graphics):00046                 CIDM_b_start
87CE 10CEBF40         (./Engine/Graphics):00047 [4]     6973            lds   #$BF40                   ; (dynamic)
87D2                  (./Engine/Graphics):00048                 CIDM_b
87D2 347E             (./Engine/Graphics):00049 [14]    6987            pshs  u,y,x,dp,b,a
87D4 347E             (./Engine/Graphics):00050 [14]    7001            pshs  u,y,x,dp,b,a
87D6 347E             (./Engine/Graphics):00051 [14]    7015            pshs  u,y,x,dp,b,a
87D8 347E             (./Engine/Graphics):00052 [14]    7029            pshs  u,y,x,dp,b,a        
87DA 3460             (./Engine/Graphics):00053 [9]     7038            pshs  u,y
87DC                  (./Engine/Graphics):00054                 CIDM_b_end         
87DC 118CA000         (./Engine/Graphics):00055 [5]     7043            cmps  #$A000
87E0 32E8D8           (./Engine/Graphics):00056 [5]     7048            leas  -40,s                                
87E3 26ED             (./Engine/Graphics):00057 [3]     7051            bne   CIDM_b          
                      (./Engine/Graphics):00058                              
87E5                  (./Engine/Graphics):00059                 CIDM_end        
87E5 10CE0000         (./Engine/Graphics):00060 [4]     7055            lds   #$0000        
87E9 35C8             (./Engine/Graphics):00061 [10]    7065            puls  dp,u,pc
                      (C:\Users\bhrou\gi):00066                         INCLUDE "./Engine/Palette/UpdatePalette.asm"
                      (./Engine/Palette/):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Palette/):00002                 * UpdatePalette
                      (./Engine/Palette/):00003                 * -------------
                      (./Engine/Palette/):00004                 * Subroutine to update palette
                      (./Engine/Palette/):00005                 * should be called just after WaitVBL
                      (./Engine/Palette/):00006                 *
                      (./Engine/Palette/):00007                 * input REG : none
                      (./Engine/Palette/):00008                 * reset REG : [d] [x] [y]
                      (./Engine/Palette/):00009                 * ---------------------------------------------------------------------------
                      (./Engine/Palette/):00010                 
87EB FF               (./Engine/Palette/):00011                 Refresh_palette fcb   $FF            
87EC 87EE             (./Engine/Palette/):00012                 Cur_palette     fdb   Dyn_palette    
87EE 0000000000000000 (./Engine/Palette/):00013                 Dyn_palette     fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
880E 0000000000000000 (./Engine/Palette/):00014                 Black_palette   fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
882E FF0F             (./Engine/Palette/):00015                 White_palette   fdb   $ff0f          
8830 FF0F             (./Engine/Palette/):00016                                 fdb   $ff0f
8832 FF0F             (./Engine/Palette/):00017                                 fdb   $ff0f
8834 FF0F             (./Engine/Palette/):00018                                 fdb   $ff0f
8836 FF0F             (./Engine/Palette/):00019                                 fdb   $ff0f
8838 FF0F             (./Engine/Palette/):00020                                 fdb   $ff0f
883A FF0F             (./Engine/Palette/):00021                                 fdb   $ff0f
883C FF0F             (./Engine/Palette/):00022                                 fdb   $ff0f
883E FF0F             (./Engine/Palette/):00023                                 fdb   $ff0f               
8840 FF0F             (./Engine/Palette/):00024                                 fdb   $ff0f
8842 FF0F             (./Engine/Palette/):00025                                 fdb   $ff0f
8844 FF0F             (./Engine/Palette/):00026                                 fdb   $ff0f
8846 FF0F             (./Engine/Palette/):00027                                 fdb   $ff0f
8848 FF0F             (./Engine/Palette/):00028                                 fdb   $ff0f
884A FF0F             (./Engine/Palette/):00029                                 fdb   $ff0f
884C FF0F             (./Engine/Palette/):00030                                 fdb   $ff0f
                      (./Engine/Palette/):00031                 
884E                  (./Engine/Palette/):00032                 UpdatePalette 
884E 7D87EB           (./Engine/Palette/):00033 [7]     7072            tst   Refresh_palette
8851 2701             (./Engine/Palette/):00034 [3]     7075            beq   @a
8853 39               (./Engine/Palette/):00035 [5]     7080            rts
8854 3408             (./Engine/Palette/):00036 [6]     7086    @a      pshs  dp        
8856 108E0195         (./Engine/Palette/):00037 [4]     7090            ldy   #0405                    * 3328 (52 lignes) - 88 (cycles apres VBL)
885A                  (./Engine/Palette/):00038                 UPP_Tempo        
885A 313F             (./Engine/Palette/):00039 [5]     7095            leay  -1,y
885C 26FC             (./Engine/Palette/):00040 [3]     7098            bne   UPP_Tempo                * tempo pour etre dans la bordure invisible
885E C6E7             (./Engine/Palette/):00041 [2]     7100            ldb   #$E7
8860 1F9B             (./Engine/Palette/):00042 [6]     7106            tfr   b,dp        
8862 BE87EC           (./Engine/Palette/):00043 [6]     7112            ldx   Cur_palette
8865 0FDB             (./Engine/Palette/):00044 [6]     7118            clr   <$DB                     * indice couleur a 0
8867 108E0010         (./Engine/Palette/):00045 [4]     7122            ldy   #$0010                   * init cpt
886B                  (./Engine/Palette/):00046                 UPP_SetColor
886B EC81             (./Engine/Palette/):00047 [8]     7130            ldd   ,x++                     * chargement de la couleur et increment du poiteur x
886D 97DA             (./Engine/Palette/):00048 [4]     7134            sta   <$DA                     * set de la couleur Vert et Rouge
886F D7DA             (./Engine/Palette/):00049 [4]     7138            stb   <$DA                     * set de la couleur Bleu
8871 313F             (./Engine/Palette/):00050 [5]     7143            leay  -1,y
8873 26F6             (./Engine/Palette/):00051 [3]     7146            bne   UPP_SetColor             * on reboucle si fin de liste pas atteinte
8875 7387EB           (./Engine/Palette/):00052 [7]     7153            com   Refresh_palette          * update flag, next run this routine will be ignored if no pal update is requested
8878                  (./Engine/Palette/):00053                 UPP_return
8878 3588             (./Engine/Palette/):00054 [8]     7161            puls dp,pc
                      (./Engine/Palette/):00055                 
                      (./Engine/Palette/):00056                         
                      (./Engine/Palette/):00057                         
                      (C:\Users\bhrou\gi):00067                         INCLUDE "./Engine/Sound/Smps.asm"
                      (./Engine/Sound/Sm):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Sm):00002                 * SMPS 6809 - Sample Music Playback System for 6809 (LWASM)
                      (./Engine/Sound/Sm):00003                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Sm):00004                 * by Bentoc June 2021, based on
                      (./Engine/Sound/Sm):00005                 * Sonic the Hedgehog 2 disassembled Z80 sound driver
                      (./Engine/Sound/Sm):00006                 * Disassembled by Xenowhirl for AS
                      (./Engine/Sound/Sm):00007                 * Additional disassembly work by RAS Oct 2008
                      (./Engine/Sound/Sm):00008                 * RAS' work merged into SVN by Flamewing
                      (./Engine/Sound/Sm):00009                 *
                      (./Engine/Sound/Sm):00010                 * TODO
                      (./Engine/Sound/Sm):00011                 * - Test real hardware wait time and adjust the code
                      (./Engine/Sound/Sm):00012                 * ---------------------------------------------------------------------------
                      (./Engine/Sound/Sm):00013                 
                      (./Engine/Sound/Sm):00014                 ; SMPS Header
     0000             (./Engine/Sound/Sm):00015                 SMPS_VOICE                   equ   0
     0002             (./Engine/Sound/Sm):00016                 SMPS_NB_FM                   equ   2
     0003             (./Engine/Sound/Sm):00017                 SMPS_NB_PSG                  equ   3
     0004             (./Engine/Sound/Sm):00018                 SMPS_TEMPO                   equ   4
     0004             (./Engine/Sound/Sm):00019                 SMPS_TEMPO_DELAY             equ   4
     0005             (./Engine/Sound/Sm):00020                 SMPS_DELAY                   equ   5
     0006             (./Engine/Sound/Sm):00021                 SMPS_TRK_HEADER              equ   6
     0008             (./Engine/Sound/Sm):00022                 SMPS_DAC_FLAG                equ   8
                      (./Engine/Sound/Sm):00023                 
                      (./Engine/Sound/Sm):00024                 ; SMPS Header (each track)
     0000             (./Engine/Sound/Sm):00025                 SMPS_TRK_DATA_PTR            equ   0 
     0002             (./Engine/Sound/Sm):00026                 SMPS_TRK_TR_VOL_PTR          equ   2
     0005             (./Engine/Sound/Sm):00027                 SMPS_TRK_ENV_PTR             equ   5
     0004             (./Engine/Sound/Sm):00028                 SMPS_TRK_FM_HDR_LEN          equ   4
     0006             (./Engine/Sound/Sm):00029                 SMPS_TRK_PSG_HDR_LEN         equ   6
                      (./Engine/Sound/Sm):00030                 
                      (./Engine/Sound/Sm):00031                 ; SMPS SFX Header
     0000             (./Engine/Sound/Sm):00032                 SMPS_SFX_VOICE               equ   0
     0002             (./Engine/Sound/Sm):00033                 SMPS_SFX_TEMPO               equ   2
     0002             (./Engine/Sound/Sm):00034                 SMPS_SFX_TEMPO_NB_CH         equ   2
     0003             (./Engine/Sound/Sm):00035                 SMPS_SFX_NB_CH               equ   3
     0004             (./Engine/Sound/Sm):00036                 SMPS_SFX_HDR_LEN             equ   4
                      (./Engine/Sound/Sm):00037                 
                      (./Engine/Sound/Sm):00038                 ; SMPS SFX Header (each track)
     0000             (./Engine/Sound/Sm):00039                 SMPS_SFX_TRK_CH              equ   0
     0002             (./Engine/Sound/Sm):00040                 SMPS_SFX_TRK_DATA_PTR        equ   2 
     0004             (./Engine/Sound/Sm):00041                 SMPS_SFX_TRK_TR_VOL_PTR      equ   4
     0006             (./Engine/Sound/Sm):00042                 SMPS_SFX_TRK_HDR_LEN         equ   6
                      (./Engine/Sound/Sm):00043                 
                      (./Engine/Sound/Sm):00044                 ; Hardware Addresses
     E7FF             (./Engine/Sound/Sm):00045                 PSG                          equ   $E7FF
     E7FC             (./Engine/Sound/Sm):00046                 YM2413_A0                    equ   $E7FC
     E7FD             (./Engine/Sound/Sm):00047                 YM2413_D0                    equ   $E7FD
                      (./Engine/Sound/Sm):00048                 
                      (./Engine/Sound/Sm):00049                 ******************************************************************************
                      (./Engine/Sound/Sm):00050                 
                      (./Engine/Sound/Sm):00051                 Track STRUCT
                      (./Engine/Sound/Sm):00052                                                                       ;         "playback control"; bits 
                      (./Engine/Sound/Sm):00053                                                                       ;         1 (02h)  seems to be "track is at rest"
                      (./Engine/Sound/Sm):00054                                                                       ;         2 (04h)  SFX is overriding this track
                      (./Engine/Sound/Sm):00055                                                                       ;         3 (08h)  modulation on
                      (./Engine/Sound/Sm):00056                                                                       ;         4 (10h)  do not attack next note
                      (./Engine/Sound/Sm):00057                                                                       ;         7 (80h)  track is playing
0000s                 (./Engine/Sound/Sm):00058                 PlaybackControl                rmb   1
                      (./Engine/Sound/Sm):00059                                                                       ;         "voice control"; bits 
                      (./Engine/Sound/Sm):00060                                                                       ;         0-3 (00h-0Fh) Channel number
                      (./Engine/Sound/Sm):00061                                                                       ;         7   (80h) PSG Track
                      (./Engine/Sound/Sm):00062                                                                       ;         PSG    Chn    |a| |00000|
                      (./Engine/Sound/Sm):00063                                                                       ;         Voice1 0x80 = 100  00000
                      (./Engine/Sound/Sm):00064                                                                       ;         Voice2 0xa0 = 101  00000
                      (./Engine/Sound/Sm):00065                                                                       ;         Voice3 0xc0 = 110  00000                                                      
                      (./Engine/Sound/Sm):00066                                                                       ;         Voice4 0xe0 = 111  00000                                                      
0001s                 (./Engine/Sound/Sm):00067                 VoiceControl                   rmb   1
                      (./Engine/Sound/Sm):00068                                                                       ;         "note control"; bits
                      (./Engine/Sound/Sm):00069                                                                       ;         0-3 (00h-0Fh) Current Block(0-2) and FNum(8)
                      (./Engine/Sound/Sm):00070                                                                       ;         4   (10h) Key On
                      (./Engine/Sound/Sm):00071                                                                       ;         5   (20h) Sustain On
0002s                 (./Engine/Sound/Sm):00072                 NoteControl                    rmb   1
0003s                 (./Engine/Sound/Sm):00073                 TempoDivider                   rmb   1                ; timing divisor; 1 = Normal, 2 = Half, 3 = Third...
0004s                 (./Engine/Sound/Sm):00074                 DataPointer                    rmb   2                ; Track's position
0006s                 (./Engine/Sound/Sm):00075                 Transpose                      rmb   1                ; Transpose (from coord flag E9)
0007s                 (./Engine/Sound/Sm):00076                 Volume                         rmb   1                ; Attenuation - (Dependency) Should follow Transpose
0008s                 (./Engine/Sound/Sm):00077                 VoiceIndex                     rmb   1                ; Current voice in use OR current PSG tone
0009s                 (./Engine/Sound/Sm):00078                 VolFlutter                     rmb   1                ; PSG flutter (dynamically effects PSG volume for decay effects)
000As                 (./Engine/Sound/Sm):00079                 StackPointer                   rmb   1                ; "Gosub" stack position offset (starts at 2Ah, i.e. end of track, and each jump decrements by 2)
000Bs                 (./Engine/Sound/Sm):00080                 DurationTimeout                rmb   1                ; current duration timeout; counting down to zero
000Cs                 (./Engine/Sound/Sm):00081                 SavedDuration                  rmb   1                ; last set duration (if a note follows a note, this is reapplied to 0Bh)
                      (./Engine/Sound/Sm):00082                                                                       ; 0Dh / 0Eh change a little depending on track -- essentially they hold data relevant to the next note to play
000Ds                 (./Engine/Sound/Sm):00083                 NextData                       rmb   2                ; DAC Next drum to play - FM/PSG  frequency
000Fs                 (./Engine/Sound/Sm):00084                 NoteFillTimeout                rmb   1                ; Currently set note fill; counts down to zero and then cuts off note
0010s                 (./Engine/Sound/Sm):00085                 NoteFillMaster                 rmb   1                ; Reset value for current note fill
0011s                 (./Engine/Sound/Sm):00086                 ModulationPtr                  rmb   2                ; address of current modulation setting
0013s                 (./Engine/Sound/Sm):00087                 ModulationWait                 rmb   1                ; Wait for ww period of time before modulation starts
0014s                 (./Engine/Sound/Sm):00088                 ModulationSpeed                rmb   1                ; Modulation Speed
0015s                 (./Engine/Sound/Sm):00089                 ModulationDelta                rmb   1                ; Modulation change per Mod. Step
0016s                 (./Engine/Sound/Sm):00090                 ModulationSteps                rmb   1                ; Number of steps in modulation (divided by 2)
0017s                 (./Engine/Sound/Sm):00091                 ModulationVal                  rmb   2                ; Current modulation value
0019s                 (./Engine/Sound/Sm):00092                 Detune                         rmb   1                ; Set by detune coord flag E1; used to add directly to FM/PSG frequency
001As                 (./Engine/Sound/Sm):00093                 VolTLMask                      rmb   1                ; zVolTLMaskTbl value set during voice setting (value based on algorithm indexing zGain table)
001Bs                 (./Engine/Sound/Sm):00094                 PSGNoise                       rmb   1                ; PSG noise setting
001Cs                 (./Engine/Sound/Sm):00095                 TLPtr                          rmb   2                ; where TL bytes of current voice begin (set during voice setting)
001Es                 (./Engine/Sound/Sm):00096                 InstrTranspose                 rmb   1                ; instrument transpose
                      (./Engine/Sound/Sm):00097                                                                       ;         "InstrAndVolume"; bits
                      (./Engine/Sound/Sm):00098                                                                       ;          FM Instr.  Attnenuation
                      (./Engine/Sound/Sm):00099                                                                       ; FM       0000       xxxx
                      (./Engine/Sound/Sm):00100                                                                       ; FM       0001       xxxx 
                      (./Engine/Sound/Sm):00101                                                                       ; ...  
                      (./Engine/Sound/Sm):00102                                                                       ; PSG      Chn    |a| |1Fh|
                      (./Engine/Sound/Sm):00103                                                                       ; VOL1     0x90 = 100 1xxxx        vol 4b xxxx = attenuation value
                      (./Engine/Sound/Sm):00104                                                                       ; VOL2     0xb0 = 101 1xxxx        vol 4b
                      (./Engine/Sound/Sm):00105                                                                       ; VOL3     0xd0 = 110 1xxxx        vol 4b
                      (./Engine/Sound/Sm):00106                                                                       ; VOL4     0xf0 = 111 1xxxx        vol 4b       
001Fs                 (./Engine/Sound/Sm):00107                 InstrAndVolume                 rmb   1                ; current instrument and volume
0020s                 (./Engine/Sound/Sm):00108                 LoopCounters                   rmb   $A               ; Loop counter index 0
                      (./Engine/Sound/Sm):00109                                                                       ;   ... open ...
                      (./Engine/Sound/Sm):00110                                                                       ; start of next track, every two bytes below this is a coord flag "gosub" (F8h) return stack
                      (./Engine/Sound/Sm):00111                                                                       ;
                      (./Engine/Sound/Sm):00112                                                                       ;        The bytes between +20h and +29h are "open"; starting at +20h and going up are possible loop counters
                      (./Engine/Sound/Sm):00113                                                                       ;        (for coord flag F7) while +2Ah going down (never AT 2Ah though) are stacked return addresses going
                      (./Engine/Sound/Sm):00114                                                                       ;        down after calling coord flag F8h.  Of course, this does mean collisions are possible with either
                      (./Engine/Sound/Sm):00115                                                                       ;        or other track memory if you're not careful with these!  No range checking is performed!
                      (./Engine/Sound/Sm):00116                                                                       ;
                      (./Engine/Sound/Sm):00117                                                                       ;        All tracks are 2Ah bytes long
002As                 (./Engine/Sound/Sm):00118                  ENDSTRUCT
                      (./Engine/Sound/Sm):00119                 
                      (./Engine/Sound/Sm):00120                 ; Track STRUCT Constants
     0000             (./Engine/Sound/Sm):00121                 PlaybackControl              equ   0
     0001             (./Engine/Sound/Sm):00122                 VoiceControl                 equ   1
     0002             (./Engine/Sound/Sm):00123                 NoteControl                  equ   2
     0003             (./Engine/Sound/Sm):00124                 TempoDivider                 equ   3
     0004             (./Engine/Sound/Sm):00125                 DataPointer                  equ   4
     0006             (./Engine/Sound/Sm):00126                 TranspAndVolume              equ   6
     0006             (./Engine/Sound/Sm):00127                 Transpose                    equ   6
     0007             (./Engine/Sound/Sm):00128                 Volume                       equ   7
     0008             (./Engine/Sound/Sm):00129                 VoiceIndex                   equ   8
     0009             (./Engine/Sound/Sm):00130                 VolFlutter                   equ   9
     000A             (./Engine/Sound/Sm):00131                 StackPointer                 equ   10
     000B             (./Engine/Sound/Sm):00132                 DurationTimeout              equ   11
     000C             (./Engine/Sound/Sm):00133                 SavedDuration                equ   12
     000D             (./Engine/Sound/Sm):00134                 NextData                     equ   13
     000F             (./Engine/Sound/Sm):00135                 NoteFillTimeout              equ   15
     0010             (./Engine/Sound/Sm):00136                 NoteFillMaster               equ   16
     0011             (./Engine/Sound/Sm):00137                 ModulationPtr                equ   17
     0013             (./Engine/Sound/Sm):00138                 ModulationWait               equ   19
     0014             (./Engine/Sound/Sm):00139                 ModulationSpeed              equ   20
     0015             (./Engine/Sound/Sm):00140                 ModulationDelta              equ   21
     0016             (./Engine/Sound/Sm):00141                 ModulationSteps              equ   22
     0017             (./Engine/Sound/Sm):00142                 ModulationVal                equ   23
     0019             (./Engine/Sound/Sm):00143                 Detune                       equ   25
     001A             (./Engine/Sound/Sm):00144                 VolTLMask                    equ   26
     001B             (./Engine/Sound/Sm):00145                 PSGNoise                     equ   27
     001C             (./Engine/Sound/Sm):00146                 TLPtr                        equ   28
     001E             (./Engine/Sound/Sm):00147                 InstrTranspose               equ   30 
     001F             (./Engine/Sound/Sm):00148                 InstrAndVolume               equ   31 
     0020             (./Engine/Sound/Sm):00149                 LoopCounters                 equ   32   
     002A             (./Engine/Sound/Sm):00150                 GoSubStack                   equ   42
                      (./Engine/Sound/Sm):00151                 
                      (./Engine/Sound/Sm):00152                 ******************************************************************************
                      (./Engine/Sound/Sm):00153                 
                      (./Engine/Sound/Sm):00154                 SmpsVar STRUCT
0000s                 (./Engine/Sound/Sm):00155                 SFXPriorityVal                 rmb   1        
0001s                 (./Engine/Sound/Sm):00156                 TempoTimeout                   rmb   1        
0002s                 (./Engine/Sound/Sm):00157                 CurrentTempo                   rmb   1                ; Stores current tempo value here
0003s                 (./Engine/Sound/Sm):00158                 StopMusic                      rmb   1                ; Set to 7Fh to pause music, set to 80h to unpause. Otherwise 00h
0004s                 (./Engine/Sound/Sm):00159                 FadeOutCounter                 rmb   1        
0005s                 (./Engine/Sound/Sm):00160                 FadeOutDelay                   rmb   1        
0006s                 (./Engine/Sound/Sm):00161                 QueueToPlay                    rmb   1                ; if NOT set to 80h, means new index was requested by 68K
0007s                 (./Engine/Sound/Sm):00162                 SFXToPlay                      rmb   2                ; When Genesis wants to play "normal" sound, it writes it here
0009s                 (./Engine/Sound/Sm):00163                 VoiceTblPtr                    rmb   2                ; address of the voices
000Bs                 (./Engine/Sound/Sm):00164                 SFXVoiceTblPtr                 rmb   2                ; address of the SFX voices
000Ds                 (./Engine/Sound/Sm):00165                 FadeInFlag                     rmb   1        
000Es                 (./Engine/Sound/Sm):00166                 FadeInDelay                    rmb   1        
000Fs                 (./Engine/Sound/Sm):00167                 FadeInCounter                  rmb   1        
0010s                 (./Engine/Sound/Sm):00168                 1upPlaying                     rmb   1        
0011s                 (./Engine/Sound/Sm):00169                 TempoMod                       rmb   1        
0012s                 (./Engine/Sound/Sm):00170                 TempoTurbo                     rmb   1                ; Stores the tempo if speed shoes are acquired (or 7Bh is played anywho)
0013s                 (./Engine/Sound/Sm):00171                 SpeedUpFlag                    rmb   1        
0014s                 (./Engine/Sound/Sm):00172                 DACEnabled                     rmb   1                
0015s                 (./Engine/Sound/Sm):00173                 60HzData                       rmb   1                ; 1: play 60hz track at 50hz, 0: do not skip frames
0016s                 (./Engine/Sound/Sm):00174                  ENDSTRUCT
                      (./Engine/Sound/Sm):00175                 
                      (./Engine/Sound/Sm):00176                 ******************************************************************************
                      (./Engine/Sound/Sm):00177                 
887A                  (./Engine/Sound/Sm):00178                 StructStart
887A                  (./Engine/Sound/Sm):00179                 Smps          SmpsVar
                      (./Engine/Sound/Sm):00180                 
8890                  (./Engine/Sound/Sm):00181                 tracksStart                ; This is the beginning of all BGM track memory
8890                  (./Engine/Sound/Sm):00182                 SongDACFMStart
8890                  (./Engine/Sound/Sm):00183                 SongDAC         Track
88BA                  (./Engine/Sound/Sm):00184                 SongFMStart
88BA                  (./Engine/Sound/Sm):00185                 SongFM1         Track
88E4                  (./Engine/Sound/Sm):00186                 SongFM2         Track
890E                  (./Engine/Sound/Sm):00187                 SongFM3         Track
8938                  (./Engine/Sound/Sm):00188                 SongFM4         Track
8962                  (./Engine/Sound/Sm):00189                 SongFM5         Track
898C                  (./Engine/Sound/Sm):00190                 SongFM6         Track
89B6                  (./Engine/Sound/Sm):00191                 SongFM7         Track
89E0                  (./Engine/Sound/Sm):00192                 SongFM8         Track
8A0A                  (./Engine/Sound/Sm):00193                 SongFM9         Track
8A34                  (./Engine/Sound/Sm):00194                 SongFMEnd
8A34                  (./Engine/Sound/Sm):00195                 SongDACFMEnd
8A34                  (./Engine/Sound/Sm):00196                 SongPSGStart
8A34                  (./Engine/Sound/Sm):00197                 SongPSG1        Track
8A5E                  (./Engine/Sound/Sm):00198                 SongPSG2        Track
8A88                  (./Engine/Sound/Sm):00199                 SongPSG3        Track
                      (./Engine/Sound/Sm):00200                 ;SongPSG4        Track
8AB2                  (./Engine/Sound/Sm):00201                 SongPSGEnd
8AB2                  (./Engine/Sound/Sm):00202                 tracksEnd
                      (./Engine/Sound/Sm):00203                 
8AB2                  (./Engine/Sound/Sm):00204                 tracksSFXStart
8AB2                  (./Engine/Sound/Sm):00205                 SFXFMStart
8AB2                  (./Engine/Sound/Sm):00206                 SFXFM3          Track
8ADC                  (./Engine/Sound/Sm):00207                 SFXFM4          Track
8B06                  (./Engine/Sound/Sm):00208                 SFXFM5          Track
8B30                  (./Engine/Sound/Sm):00209                 SFXFMEnd
8B30                  (./Engine/Sound/Sm):00210                 SFXPSGStart
8B30                  (./Engine/Sound/Sm):00211                 SFXPSG1         Track
8B5A                  (./Engine/Sound/Sm):00212                 SFXPSG2         Track
8B84                  (./Engine/Sound/Sm):00213                 SFXPSG3         Track
8BAE                  (./Engine/Sound/Sm):00214                 SFXPSGEnd
8BAE                  (./Engine/Sound/Sm):00215                 tracksSFXEnd
8BAE                  (./Engine/Sound/Sm):00216                 StructEnd
                      (./Engine/Sound/Sm):00217                 
                      (./Engine/Sound/Sm):00218                         ; I want struct data to be in binary please ...
                      (./Engine/Sound/Sm):00219                         ; VoiceControl is hardcoded
                      (./Engine/Sound/Sm):00220                         
                      (./Engine/Sound/Sm):00221                         org   StructStart                
887A 0000000000000000 (./Engine/Sound/Sm):00222                         fill  0,sizeof{SmpsVar}
     0000000000000000
     000000000000
8890 0006             (./Engine/Sound/Sm):00223                         fdb   $0006
8892 0000000000000000 (./Engine/Sound/Sm):00224                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
88BA 0000             (./Engine/Sound/Sm):00225                         fdb   $0000
88BC 0000000000000000 (./Engine/Sound/Sm):00226                         fill  0,sizeof{Track}-2        
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
88E4 0001             (./Engine/Sound/Sm):00227                         fdb   $0001
88E6 0000000000000000 (./Engine/Sound/Sm):00228                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
890E 0002             (./Engine/Sound/Sm):00229                         fdb   $0002
8910 0000000000000000 (./Engine/Sound/Sm):00230                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8938 0003             (./Engine/Sound/Sm):00231                         fdb   $0003
893A 0000000000000000 (./Engine/Sound/Sm):00232                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8962 0004             (./Engine/Sound/Sm):00233                         fdb   $0004
8964 0000000000000000 (./Engine/Sound/Sm):00234                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
898C 0005             (./Engine/Sound/Sm):00235                         fdb   $0005
898E 0000000000000000 (./Engine/Sound/Sm):00236                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
89B6 0006             (./Engine/Sound/Sm):00237                         fdb   $0006
89B8 0000000000000000 (./Engine/Sound/Sm):00238                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
89E0 0007             (./Engine/Sound/Sm):00239                         fdb   $0007
89E2 0000000000000000 (./Engine/Sound/Sm):00240                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8A0A 0008             (./Engine/Sound/Sm):00241                         fdb   $0008
8A0C 0000000000000000 (./Engine/Sound/Sm):00242                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8A34 0080             (./Engine/Sound/Sm):00243                         fdb   $0080
8A36 0000000000000000 (./Engine/Sound/Sm):00244                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8A5E 00A0             (./Engine/Sound/Sm):00245                         fdb   $00A0
8A60 0000000000000000 (./Engine/Sound/Sm):00246                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8A88 00C0             (./Engine/Sound/Sm):00247                         fdb   $00C0
8A8A 0000000000000000 (./Engine/Sound/Sm):00248                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8AB2 00E0             (./Engine/Sound/Sm):00249                         fdb   $00E0
8AB4 0000000000000000 (./Engine/Sound/Sm):00250                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8ADC 0003             (./Engine/Sound/Sm):00251                         fdb   $0003
8ADE 0000000000000000 (./Engine/Sound/Sm):00252                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8B06 0004             (./Engine/Sound/Sm):00253                         fdb   $0004
8B08 0000000000000000 (./Engine/Sound/Sm):00254                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8B30 0005             (./Engine/Sound/Sm):00255                         fdb   $0005
8B32 0000000000000000 (./Engine/Sound/Sm):00256                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8B5A 0080             (./Engine/Sound/Sm):00257                         fdb   $0080
8B5C 0000000000000000 (./Engine/Sound/Sm):00258                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8B84 00A0             (./Engine/Sound/Sm):00259                         fdb   $00A0
8B86 0000000000000000 (./Engine/Sound/Sm):00260                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (./Engine/Sound/Sm):00261                         ;fdb   $00C0
                      (./Engine/Sound/Sm):00262                         ;fill  0,sizeof{Track}-2
                      (./Engine/Sound/Sm):00263                                 
                      (./Engine/Sound/Sm):00264                 ******************************************************************************
                      (./Engine/Sound/Sm):00265                 
8BAE 00               (./Engine/Sound/Sm):00266                 PALUpdTick      fcb   0     ; this counts from 0 to 5 to periodically "double update" for PAL systems (basically every 6 frames you need to update twice to keep up)
8BAF 00               (./Engine/Sound/Sm):00267                 DoSFXFlag       fcb   0     ; flag to indicate we're updating SFX (and thus use custom voice table); set to FFh while doing SFX, 0 when not.
8BB0 00               (./Engine/Sound/Sm):00268                 Paused          fcb   0     ; 0 = normal, -1 = pause all sound and music
8BB1 00               (./Engine/Sound/Sm):00269                 SongDelay       fcb   0     ; song header delay
                      (./Engine/Sound/Sm):00270                 
8BB2 00               (./Engine/Sound/Sm):00271                 MusicPage       fcb   0     ; memory page of music data
8BB3 00               (./Engine/Sound/Sm):00272                 SoundPage       fcb   0     ; memory page of sound data
8BB4 0000             (./Engine/Sound/Sm):00273                 MusicData       fdb   0     ; address of song data
8BB6 0000             (./Engine/Sound/Sm):00274                 SoundData       fdb   0     ; address of sound data
                      (./Engine/Sound/Sm):00275                 
                      (./Engine/Sound/Sm):00276                 
     000D             (./Engine/Sound/Sm):00277                 MUSIC_TRACK_COUNT = (tracksEnd-tracksStart)/sizeof{Track}
     000A             (./Engine/Sound/Sm):00278                 MUSIC_DAC_FM_TRACK_COUNT = (SongDACFMEnd-SongDACFMStart)/sizeof{Track}
     0009             (./Engine/Sound/Sm):00279                 MUSIC_FM_TRACK_COUNT = (SongFMEnd-SongFMStart)/sizeof{Track}
     0003             (./Engine/Sound/Sm):00280                 MUSIC_PSG_TRACK_COUNT = (SongPSGEnd-SongPSGStart)/sizeof{Track}
                      (./Engine/Sound/Sm):00281                 
     0006             (./Engine/Sound/Sm):00282                 SFX_TRACK_COUNT = (tracksSFXEnd-tracksSFXStart)/sizeof{Track}
     0003             (./Engine/Sound/Sm):00283                 SFXFM_TRACK_COUNT = (SFXFMEnd-SFXFMStart)/sizeof{Track}
     0003             (./Engine/Sound/Sm):00284                 SFXPSG_TRACK_COUNT = (SFXPSGEnd-SFXPSGStart)/sizeof{Track}
                      (./Engine/Sound/Sm):00285                 
                      (./Engine/Sound/Sm):00286                 ******************************************************************************
                      (./Engine/Sound/Sm):00287                 * writes to YM2413 with required waits
                      (./Engine/Sound/Sm):00288                 ******************************************************************************
                      (./Engine/Sound/Sm):00289                 
8BB8                  (./Engine/Sound/Sm):00290                 _WriteYM MACRO
                      (./Engine/Sound/Sm):00291                         sta   YM2413_A0
                      (./Engine/Sound/Sm):00292                         nop
                      (./Engine/Sound/Sm):00293                         nop
                      (./Engine/Sound/Sm):00294                         stb   YM2413_D0
                      (./Engine/Sound/Sm):00295                  ENDM  
                      (./Engine/Sound/Sm):00296                 
8BB8                  (./Engine/Sound/Sm):00297                 _YMBusyWait5 MACRO
                      (./Engine/Sound/Sm):00298                         nop                                        
                      (./Engine/Sound/Sm):00299                         brn   *
                      (./Engine/Sound/Sm):00300                  ENDM
                      (./Engine/Sound/Sm):00301                 
8BB8                  (./Engine/Sound/Sm):00302                 _YMBusyWait9 MACRO
                      (./Engine/Sound/Sm):00303                         nop
                      (./Engine/Sound/Sm):00304                         nop
                      (./Engine/Sound/Sm):00305                         nop
                      (./Engine/Sound/Sm):00306                         brn   *
                      (./Engine/Sound/Sm):00307                  ENDM
                      (./Engine/Sound/Sm):00308                  
8BB8                  (./Engine/Sound/Sm):00309                 _YMBusyWait11 MACRO
                      (./Engine/Sound/Sm):00310                         nop
                      (./Engine/Sound/Sm):00311                         nop
                      (./Engine/Sound/Sm):00312                         nop
                      (./Engine/Sound/Sm):00313                         nop
                      (./Engine/Sound/Sm):00314                         brn   *
                      (./Engine/Sound/Sm):00315                  ENDM
                      (./Engine/Sound/Sm):00316                  
8BB8                  (./Engine/Sound/Sm):00317                 _YMBusyWait19 MACRO
                      (./Engine/Sound/Sm):00318                         exg   a,b
                      (./Engine/Sound/Sm):00319                         exg   a,b
                      (./Engine/Sound/Sm):00320                         brn   *
                      (./Engine/Sound/Sm):00321                  ENDM
                      (./Engine/Sound/Sm):00322                 
                      (./Engine/Sound/Sm):00323                 ******************************************************************************
                      (./Engine/Sound/Sm):00324                 * Setup YM2413 for Drum Mode
                      (./Engine/Sound/Sm):00325                 * destroys A, B
                      (./Engine/Sound/Sm):00326                 ******************************************************************************
                      (./Engine/Sound/Sm):00327                 
8BB8                  (./Engine/Sound/Sm):00328                 YM2413_DrumModeOn
8BB8 3416             (./Engine/Sound/Sm):00329 [9]     7170            pshs  d,x
8BBA 8E8BDF           (./Engine/Sound/Sm):00330 [3]     7173            ldx   #@data
8BBD EC81             (./Engine/Sound/Sm):00331 [8]     7181    @a      ldd   ,x++
8BBF 2B0D             (./Engine/Sound/Sm):00332 [3]     7184            bmi   @end
                      (./Engine/Sound/Sm):00333                         _WriteYM
8BC1 B7E7FC           (         _WriteYM):00001 [5]     7189            sta   YM2413_A0
8BC4 12               (         _WriteYM):00002 [2]     7191            nop
8BC5 12               (         _WriteYM):00003 [2]     7193            nop
8BC6 F7E7FD           (         _WriteYM):00004 [5]     7198            stb   YM2413_D0
                      (./Engine/Sound/Sm):00334                         _YMBusyWait5
8BC9 12               (     _YMBusyWait5):00001 [2]     7200            nop                                        
8BCA 21FE             (     _YMBusyWait5):00002 [3]     7203            brn   *
8BCC 20EF             (./Engine/Sound/Sm):00335 [3]     7206            bra   @a
8BCE 8605             (./Engine/Sound/Sm):00336 [2]     7208    @end    lda   #$05                     ; saves values for FMSilenceAll routine
8BD0 B789B8           (./Engine/Sound/Sm):00337 [5]     7213            sta   SongFM7.NoteControl 
8BD3 8605             (./Engine/Sound/Sm):00338 [2]     7215            lda   #$05
8BD5 B789E2           (./Engine/Sound/Sm):00339 [5]     7220            sta   SongFM8.NoteControl
8BD8 8601             (./Engine/Sound/Sm):00340 [2]     7222            lda   #$01
8BDA B78A0C           (./Engine/Sound/Sm):00341 [5]     7227            sta   SongFM9.NoteControl                
8BDD 3596             (./Engine/Sound/Sm):00342 [11]    7238            puls  d,x,pc       
8BDF                  (./Engine/Sound/Sm):00343                 @data
8BDF 0E20             (./Engine/Sound/Sm):00344                         fdb   $0E20
8BE1 1620             (./Engine/Sound/Sm):00345                         fdb   $1620
8BE3 1750             (./Engine/Sound/Sm):00346                         fdb   $1750 ; recommended setting is $1750 and $2705 for snare but $1700 and $2700 gives better SD sound (noise), affects HH that will sound more like a cowbell 
8BE5 18C0             (./Engine/Sound/Sm):00347                         fdb   $18C0
8BE7 2605             (./Engine/Sound/Sm):00348                         fdb   $2605 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
8BE9 2705             (./Engine/Sound/Sm):00349                         fdb   $2705 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
8BEB 2801             (./Engine/Sound/Sm):00350                         fdb   $2801 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
8BED 36F2             (./Engine/Sound/Sm):00351                         fdb   $36F2 ; drum at max vol        
8BEF 3762             (./Engine/Sound/Sm):00352                         fdb   $3762 ; drum at max vol
8BF1 3844             (./Engine/Sound/Sm):00353                         fdb   $3844 ; drum at max vol
8BF3 FF               (./Engine/Sound/Sm):00354                         fcb   $FF
                      (./Engine/Sound/Sm):00355                         
                      (./Engine/Sound/Sm):00356                 ******************************************************************************
                      (./Engine/Sound/Sm):00357                 * InitMusicPlayback
                      (./Engine/Sound/Sm):00358                 * 
                      (./Engine/Sound/Sm):00359                 ******************************************************************************
                      (./Engine/Sound/Sm):00360                 
8BF4                  (./Engine/Sound/Sm):00361                 InitMusicPlayback
8BF4 BD8BFB           (./Engine/Sound/Sm):00362 [8]     7246            jsr   FMSilenceAll
8BF7 BD8C24           (./Engine/Sound/Sm):00363 [8]     7254            jsr   PSGSilenceAll
8BFA 39               (./Engine/Sound/Sm):00364 [5]     7259            rts
                      (./Engine/Sound/Sm):00365                 
                      (./Engine/Sound/Sm):00366                 ******************************************************************************
                      (./Engine/Sound/Sm):00367                 * FMSilenceAll
                      (./Engine/Sound/Sm):00368                 * destroys A, B, Y
                      (./Engine/Sound/Sm):00369                 ******************************************************************************
                      (./Engine/Sound/Sm):00370                 
8BFB                  (./Engine/Sound/Sm):00371                 FMSilenceAll
8BFB CC200E           (./Engine/Sound/Sm):00372 [3]     7262            ldd   #$200E
8BFE F7E7FC           (./Engine/Sound/Sm):00373 [5]     7267            stb   YM2413_A0
8C01 108E88BC         (./Engine/Sound/Sm):00374 [4]     7271            ldy   #SongFM1.NoteControl
8C05 B7E7FD           (./Engine/Sound/Sm):00375 [5]     7276            sta   YM2413_D0                ; note off for all drums     
                      (./Engine/Sound/Sm):00376                         _YMBusyWait5
8C08 12               (     _YMBusyWait5):00001 [2]     7278            nop                                        
8C09 21FE             (     _YMBusyWait5):00002 [3]     7281            brn   *
                      (./Engine/Sound/Sm):00377                         _YMBusyWait5        
8C0B 12               (     _YMBusyWait5):00001 [2]     7283            nop                                        
8C0C 21FE             (     _YMBusyWait5):00002 [3]     7286            brn   *
                      (./Engine/Sound/Sm):00378                                 
8C0E                  (./Engine/Sound/Sm):00379                 @a      _YMBusyWait5                   ; total wait btw two notes : 20 cycles
8C0E 12               (     _YMBusyWait5):00001 [2]     7288            nop                                        
8C0F 21FE             (     _YMBusyWait5):00002 [3]     7291            brn   *
8C11 E6A4             (./Engine/Sound/Sm):00380 [4]     7295            ldb   ,y                       ; (wait of 4 cycles)
8C13 B7E7FC           (./Engine/Sound/Sm):00381 [5]     7300            sta   YM2413_A0
8C16 C4EF             (./Engine/Sound/Sm):00382 [2]     7302            andb  #$EF                     ; note off for each track
8C18 4C               (./Engine/Sound/Sm):00383 [2]     7304            inca
8C19 F7E7FD           (./Engine/Sound/Sm):00384 [5]     7309            stb   YM2413_D0
8C1C 31A82A           (./Engine/Sound/Sm):00385 [5]     7314            leay  sizeof{Track},y          ; (wait of 5 cycles)        
8C1F 8129             (./Engine/Sound/Sm):00386 [2]     7316            cmpa  #$29                     ; (wait of 2 cycles)
8C21 26EB             (./Engine/Sound/Sm):00387 [3]     7319            bne   @a                       ; (wait of 3 cycles)
8C23 39               (./Engine/Sound/Sm):00388 [5]     7324            rts
                      (./Engine/Sound/Sm):00389                 
                      (./Engine/Sound/Sm):00390                 ******************************************************************************
                      (./Engine/Sound/Sm):00391                 * PSGSilenceAll
                      (./Engine/Sound/Sm):00392                 * destroys A
                      (./Engine/Sound/Sm):00393                 ******************************************************************************
                      (./Engine/Sound/Sm):00394                         
8C24                  (./Engine/Sound/Sm):00395                 PSGSilenceAll
8C24 869F             (./Engine/Sound/Sm):00396 [2]     7326            lda   #$9F
8C26 B7E7FF           (./Engine/Sound/Sm):00397 [5]     7331            sta   PSG
8C29 86BF             (./Engine/Sound/Sm):00398 [2]     7333            lda   #$BF
8C2B B7E7FF           (./Engine/Sound/Sm):00399 [5]     7338            sta   PSG       
8C2E 86DF             (./Engine/Sound/Sm):00400 [2]     7340            lda   #$DF
8C30 B7E7FF           (./Engine/Sound/Sm):00401 [5]     7345            sta   PSG
8C33 86FF             (./Engine/Sound/Sm):00402 [2]     7347            lda   #$FF
8C35 B7E7FF           (./Engine/Sound/Sm):00403 [5]     7352            sta   PSG                               
8C38 39               (./Engine/Sound/Sm):00404 [5]     7357            rts        
                      (./Engine/Sound/Sm):00405                 
                      (./Engine/Sound/Sm):00406                 ******************************************************************************
                      (./Engine/Sound/Sm):00407                 * PlayMusic - Load a new music and init all tracks
                      (./Engine/Sound/Sm):00408                 *
                      (./Engine/Sound/Sm):00409                 * receives in X the address of the song
                      (./Engine/Sound/Sm):00410                 * destroys X
                      (./Engine/Sound/Sm):00411                 ******************************************************************************
                      (./Engine/Sound/Sm):00412                 
8C39                  (./Engine/Sound/Sm):00413                 PlayMusic
8C39                  (./Engine/Sound/Sm):00414                 BGMLoad
8C39 3466             (./Engine/Sound/Sm):00415 [11]    7368            pshs  d,y,u
                      (./Engine/Sound/Sm):00416                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
8C3B B6E7E6           (    _GetCartPageA):00004 [5]     7373            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
8C3E B78CAC           (./Engine/Sound/Sm):00417 [5]     7378            sta   BGMLoad_end+1            ; backup data page
                      (./Engine/Sound/Sm):00418                                 
8C41 A684             (./Engine/Sound/Sm):00419 [4]     7382            lda   ,x                       ; get memory page that contains track data
8C43 B78BB2           (./Engine/Sound/Sm):00420 [5]     7387            sta   MusicPage
8C46 AE01             (./Engine/Sound/Sm):00421 [6]     7393            ldx   1,x                      ; get ptr to track data
8C48 BF8BB4           (./Engine/Sound/Sm):00422 [6]     7399            stx   MusicData
                      (./Engine/Sound/Sm):00423                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8C4B B7E7E6           (    _SetCartPageA):00004 [5]     7404            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Sound/Sm):00424                 
8C4E BD8BF4           (./Engine/Sound/Sm):00425 [8]     7412            jsr   InitMusicPlayback
8C51 EC84             (./Engine/Sound/Sm):00426 [5]     7417            ldd   SMPS_VOICE,x
8C53 F38BB4           (./Engine/Sound/Sm):00427 [7]     7424            addd  MusicData   
8C56 FD8883           (./Engine/Sound/Sm):00428 [6]     7430            std   Smps.VoiceTblPtr
                      (./Engine/Sound/Sm):00429                         
8C59 EC04             (./Engine/Sound/Sm):00430 [6]     7436            ldd   SMPS_TEMPO_DELAY,x
8C5B B78BB1           (./Engine/Sound/Sm):00431 [5]     7441            sta   SongDelay
8C5E F7888B           (./Engine/Sound/Sm):00432 [5]     7446            stb   Smps.TempoMod
8C61 F7887C           (./Engine/Sound/Sm):00433 [5]     7451            stb   Smps.CurrentTempo
8C64 F7887B           (./Engine/Sound/Sm):00434 [5]     7456            stb   Smps.TempoTimeout
                      (./Engine/Sound/Sm):00435                         
8C67 8605             (./Engine/Sound/Sm):00436 [2]     7458            lda   #$05
8C69 B78BAE           (./Engine/Sound/Sm):00437 [5]     7463            sta   PALUpdTick
                      (./Engine/Sound/Sm):00438                         
8C6C A602             (./Engine/Sound/Sm):00439 [5]     7468            lda   SMPS_NB_FM,x
8C6E B78C82           (./Engine/Sound/Sm):00440 [5]     7473            sta   @fm+1
8C71 3306             (./Engine/Sound/Sm):00441 [5]     7478            leau  SMPS_TRK_HEADER,x
8C73 EC08             (./Engine/Sound/Sm):00442 [6]     7484            ldd   SMPS_DAC_FLAG,x
8C75 260A             (./Engine/Sound/Sm):00443 [3]     7487            bne   @fm                      ; no DRUM track found (should be $0000 to be DRUM)
8C77 108E8890         (./Engine/Sound/Sm):00444 [4]     7491            ldy   #SongDAC
8C7B BD8CB2           (./Engine/Sound/Sm):00445 [8]     7499            jsr   InitTrackFM              ; DRUM mode use channel 6-8
8C7E 7A8C82           (./Engine/Sound/Sm):00446 [7]     7506            dec   @fm+1                    ; DAC track is part of FM nb channel count
8C81                  (./Engine/Sound/Sm):00447                 @fm      
8C81 8600             (./Engine/Sound/Sm):00448 [2]     7508            lda   #$00                     ; (dynamic) nb of FM tracks to init
8C83 108E88BA         (./Engine/Sound/Sm):00449 [4]     7512            ldy   #SongFM1                 ; Init all FM tracks
8C87 7A8C82           (./Engine/Sound/Sm):00450 [7]     7519    @fmlp   dec   @fm+1
8C8A 2B05             (./Engine/Sound/Sm):00451 [3]     7522            bmi   @psg     
8C8C BD8CB2           (./Engine/Sound/Sm):00452 [8]     7530            jsr   InitTrackFM
8C8F 20F6             (./Engine/Sound/Sm):00453 [3]     7533            bra   @fmlp
8C91                  (./Engine/Sound/Sm):00454                 @psg    
8C91 86C0             (./Engine/Sound/Sm):00455 [2]     7535            lda   #$C0                     ; set back Tone channel for PSG3 (can be switched to noise by cfSetPSGNoise)
8C93 B78A89           (./Engine/Sound/Sm):00456 [5]     7540            sta   SongPSG3.VoiceControl
8C96 A603             (./Engine/Sound/Sm):00457 [5]     7545            lda   SMPS_NB_PSG,x
8C98 B78C9C           (./Engine/Sound/Sm):00458 [5]     7550            sta   >*+4
8C9B 8600             (./Engine/Sound/Sm):00459 [2]     7552    @dyn    lda   #$00                     ; (dynamic) nb of PSG tracks to init
8C9D 108E8A34         (./Engine/Sound/Sm):00460 [4]     7556            ldy   #SongPSG1                ; Init all PSG tracks
8CA1 7A8C9C           (./Engine/Sound/Sm):00461 [7]     7563    @psglp  dec   @dyn+1
8CA4 2B05             (./Engine/Sound/Sm):00462 [3]     7566            bmi   BGMLoad_end     
8CA6 BD8CD3           (./Engine/Sound/Sm):00463 [8]     7574            jsr   InitTrackPSG
8CA9 20F6             (./Engine/Sound/Sm):00464 [3]     7577            bra   @psglp
                      (./Engine/Sound/Sm):00465                 
8CAB                  (./Engine/Sound/Sm):00466                 BGMLoad_end
8CAB 8600             (./Engine/Sound/Sm):00467 [2]     7579            lda   #0                       ; (dynamic) set back data page
                      (./Engine/Sound/Sm):00468                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8CAD B7E7E6           (    _SetCartPageA):00004 [5]     7584            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8CB0 35E6             (./Engine/Sound/Sm):00469 [13]    7597            puls  d,y,u,pc
                      (./Engine/Sound/Sm):00470                 
8CB2                  (./Engine/Sound/Sm):00471                 InitTrackFM
8CB2 B68BB1           (./Engine/Sound/Sm):00472 [5]     7602            lda   SongDelay        
8CB5 A723             (./Engine/Sound/Sm):00473 [5]     7607            sta   TempoDivider,y
8CB7 CC8201           (./Engine/Sound/Sm):00474 [3]     7610            ldd   #$8201
8CBA A7A4             (./Engine/Sound/Sm):00475 [4]     7614            sta   PlaybackControl,y
8CBC E72B             (./Engine/Sound/Sm):00476 [5]     7619            stb   DurationTimeout,y
8CBE C62A             (./Engine/Sound/Sm):00477 [2]     7621            ldb   #GoSubStack
8CC0 E72A             (./Engine/Sound/Sm):00478 [5]     7626            stb   StackPointer,y
8CC2 ECC4             (./Engine/Sound/Sm):00479 [5]     7631            ldd   SMPS_TRK_DATA_PTR,u
8CC4 F38BB4           (./Engine/Sound/Sm):00480 [7]     7638            addd  MusicData
8CC7 ED24             (./Engine/Sound/Sm):00481 [6]     7644            std   DataPointer,y
8CC9 EC42             (./Engine/Sound/Sm):00482 [6]     7650            ldd   SMPS_TRK_TR_VOL_PTR,u
8CCB ED26             (./Engine/Sound/Sm):00483 [6]     7656            std   TranspAndVolume,y
8CCD 3344             (./Engine/Sound/Sm):00484 [5]     7661            leau  SMPS_TRK_FM_HDR_LEN,u
8CCF 31A82A           (./Engine/Sound/Sm):00485 [5]     7666            leay  sizeof{Track},y
8CD2 39               (./Engine/Sound/Sm):00486 [5]     7671            rts       
                      (./Engine/Sound/Sm):00487                  
8CD3                  (./Engine/Sound/Sm):00488                 InitTrackPSG
8CD3 B68BB1           (./Engine/Sound/Sm):00489 [5]     7676            lda   SongDelay        
8CD6 A723             (./Engine/Sound/Sm):00490 [5]     7681            sta   TempoDivider,y
8CD8 CC8201           (./Engine/Sound/Sm):00491 [3]     7684            ldd   #$8201
8CDB A7A4             (./Engine/Sound/Sm):00492 [4]     7688            sta   PlaybackControl,y
8CDD E72B             (./Engine/Sound/Sm):00493 [5]     7693            stb   DurationTimeout,y
8CDF C62A             (./Engine/Sound/Sm):00494 [2]     7695            ldb   #GoSubStack
8CE1 E72A             (./Engine/Sound/Sm):00495 [5]     7700            stb   StackPointer,y        
8CE3 ECC4             (./Engine/Sound/Sm):00496 [5]     7705            ldd   SMPS_TRK_DATA_PTR,u
8CE5 F38BB4           (./Engine/Sound/Sm):00497 [7]     7712            addd  MusicData
8CE8 ED24             (./Engine/Sound/Sm):00498 [6]     7718            std   DataPointer,y
8CEA EC42             (./Engine/Sound/Sm):00499 [6]     7724            ldd   SMPS_TRK_TR_VOL_PTR,u
8CEC ED26             (./Engine/Sound/Sm):00500 [6]     7730            std   TranspAndVolume,y
8CEE A645             (./Engine/Sound/Sm):00501 [5]     7735            lda   SMPS_TRK_ENV_PTR,u
8CF0 A728             (./Engine/Sound/Sm):00502 [5]     7740            sta   VoiceIndex,y
8CF2 3346             (./Engine/Sound/Sm):00503 [5]     7745            leau  SMPS_TRK_PSG_HDR_LEN,u
8CF4 31A82A           (./Engine/Sound/Sm):00504 [5]     7750            leay  sizeof{Track},y
8CF7 39               (./Engine/Sound/Sm):00505 [5]     7755            rts        
                      (./Engine/Sound/Sm):00506                         
                      (./Engine/Sound/Sm):00507                 ******************************************************************************
                      (./Engine/Sound/Sm):00508                 * MusicFrame - processes a music frame (VInt)
                      (./Engine/Sound/Sm):00509                 *
                      (./Engine/Sound/Sm):00510                 * SMPS Song Data
                      (./Engine/Sound/Sm):00511                 * --------------
                      (./Engine/Sound/Sm):00512                 * value in range [$00, $7F] : Duration value
                      (./Engine/Sound/Sm):00513                 * value in range [$80]      : Rest (counts as a note value)
                      (./Engine/Sound/Sm):00514                 * value in range [$81, $DF] : Note value
                      (./Engine/Sound/Sm):00515                 * value in range [$E0, $FF] : Coordination flag
                      (./Engine/Sound/Sm):00516                 *
                      (./Engine/Sound/Sm):00517                 * destroys A,B,X,Y
                      (./Engine/Sound/Sm):00518                 ******************************************************************************
                      (./Engine/Sound/Sm):00519                 
8CF8                  (./Engine/Sound/Sm):00520                 _UpdateTrack MACRO
                      (./Engine/Sound/Sm):00521                         lda   \1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
                      (./Engine/Sound/Sm):00522                         bpl   a@
                      (./Engine/Sound/Sm):00523                         ldy   #\1                               
                      (./Engine/Sound/Sm):00524                         jsr   \2                       ; If so, UpdateTrack
8CF8                  (./Engine/Sound/Sm):00525                 a@      equ   *        
                      (./Engine/Sound/Sm):00526                  ENDM
                      (./Engine/Sound/Sm):00527                         
8CF8                  (./Engine/Sound/Sm):00528                 MusicFrame 
                      (./Engine/Sound/Sm):00529                         
                      (./Engine/Sound/Sm):00530                         ; simple sound fx implementation with no priority
                      (./Engine/Sound/Sm):00531                         ; TODO upgrade to a queue system like original code
8CF8 BE8881           (./Engine/Sound/Sm):00532 [6]     7761            ldx   Smps.SFXToPlay           ; get last requested sound effect to play
8CFB 2709             (./Engine/Sound/Sm):00533 [3]     7764            beq   @a                       ; 0 means no sound effect to play
8CFD BD94BB           (./Engine/Sound/Sm):00534 [8]     7772            jsr   PlaySound
8D00 CC0000           (./Engine/Sound/Sm):00535 [3]     7775            ldd   #0                       ; reset to be able to play another effect from now
8D03 FD8881           (./Engine/Sound/Sm):00536 [6]     7781            std   Smps.SFXToPlay
8D06                  (./Engine/Sound/Sm):00537                 @a       
8D06 B68BB2           (./Engine/Sound/Sm):00538 [5]     7786            lda   MusicPage                ; page switch to the music
8D09 10270095         (./Engine/Sound/Sm):00539 [5+?]   7791            lbeq  UpdateSound              ; no music to play
                      (./Engine/Sound/Sm):00540                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8D0D B7E7E6           (    _SetCartPageA):00004 [5]     7796            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8D10 7F8BAF           (./Engine/Sound/Sm):00541 [7]     7803            clr   DoSFXFlag
                      (./Engine/Sound/Sm):00542                 
8D13                  (./Engine/Sound/Sm):00543                 UpdateEverything        
8D13 B6888F           (./Engine/Sound/Sm):00544 [5]     7808            lda   Smps.60HzData            ; TODO use SMPS relocate to convert timings
8D16 270D             (./Engine/Sound/Sm):00545 [3]     7811            beq   @a                       ; to play 60hz songs at 50hz at normal speed
8D18 7A8BAE           (./Engine/Sound/Sm):00546 [7]     7818            dec   PALUpdTick               ; this will allow to throw away this code
8D1B 2608             (./Engine/Sound/Sm):00547 [3]     7821            bne   @a
8D1D 8605             (./Engine/Sound/Sm):00548 [2]     7823            lda   #5
8D1F B78BAE           (./Engine/Sound/Sm):00549 [5]     7828            sta   PALUpdTick
8D22 BD8D2A           (./Engine/Sound/Sm):00550 [8]     7836            jsr   UpdateMusic              ; play 2 frames in one to keep original speed
8D25 BD8D2A           (./Engine/Sound/Sm):00551 [8]     7844    @a      jsr   UpdateMusic              ; play 2 frames in one to keep original speed
8D28 2078             (./Engine/Sound/Sm):00552 [3]     7847            bra   UpdateSound
                      (./Engine/Sound/Sm):00553                 
8D2A                  (./Engine/Sound/Sm):00554                 UpdateMusic
                      (./Engine/Sound/Sm):00555                         * jsr   TempoWait              ; optim : do not call TempoWait, instead skip update
8D2A B6887C           (./Engine/Sound/Sm):00556 [5]     7852            lda   Smps.CurrentTempo        ; tempo value
8D2D BB887B           (./Engine/Sound/Sm):00557 [5]     7857            adda  Smps.TempoTimeout        ; Adds previous value to
8D30 B7887B           (./Engine/Sound/Sm):00558 [5]     7862            sta   Smps.TempoTimeout        ; Store this as new
8D33 246C             (./Engine/Sound/Sm):00559 [3]     7865            bcc   @rts                     ; skip update if tempo need more waits
                      (./Engine/Sound/Sm):00560                         _UpdateTrack SongDAC,DACUpdateTrack
8D35 B68890           (     _UpdateTrack):00001 [5]     7870            lda   SongDAC.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D38 2A07             (     _UpdateTrack):00002 [3]     7873            bpl   a@
8D3A 108E8890         (     _UpdateTrack):00003 [4]     7877            ldy   #SongDAC                               
8D3E BD8DF9           (     _UpdateTrack):00004 [8]     7885            jsr   DACUpdateTrack                       ; If so, UpdateTrack
     8D41             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00561                         _UpdateTrack SongFM1,FMUpdateTrack
8D41 B688BA           (     _UpdateTrack):00001 [5]     7890            lda   SongFM1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D44 2A07             (     _UpdateTrack):00002 [3]     7893            bpl   a@
8D46 108E88BA         (     _UpdateTrack):00003 [4]     7897            ldy   #SongFM1                               
8D4A BD8E58           (     _UpdateTrack):00004 [8]     7905            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8D4D             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00562                         _UpdateTrack SongFM2,FMUpdateTrack
8D4D B688E4           (     _UpdateTrack):00001 [5]     7910            lda   SongFM2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D50 2A07             (     _UpdateTrack):00002 [3]     7913            bpl   a@
8D52 108E88E4         (     _UpdateTrack):00003 [4]     7917            ldy   #SongFM2                               
8D56 BD8E58           (     _UpdateTrack):00004 [8]     7925            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8D59             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00563                         _UpdateTrack SongFM3,FMUpdateTrack
8D59 B6890E           (     _UpdateTrack):00001 [5]     7930            lda   SongFM3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D5C 2A07             (     _UpdateTrack):00002 [3]     7933            bpl   a@
8D5E 108E890E         (     _UpdateTrack):00003 [4]     7937            ldy   #SongFM3                               
8D62 BD8E58           (     _UpdateTrack):00004 [8]     7945            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8D65             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00564                         _UpdateTrack SongFM4,FMUpdateTrack
8D65 B68938           (     _UpdateTrack):00001 [5]     7950            lda   SongFM4.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D68 2A07             (     _UpdateTrack):00002 [3]     7953            bpl   a@
8D6A 108E8938         (     _UpdateTrack):00003 [4]     7957            ldy   #SongFM4                               
8D6E BD8E58           (     _UpdateTrack):00004 [8]     7965            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8D71             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00565                         _UpdateTrack SongFM5,FMUpdateTrack
8D71 B68962           (     _UpdateTrack):00001 [5]     7970            lda   SongFM5.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D74 2A07             (     _UpdateTrack):00002 [3]     7973            bpl   a@
8D76 108E8962         (     _UpdateTrack):00003 [4]     7977            ldy   #SongFM5                               
8D7A BD8E58           (     _UpdateTrack):00004 [8]     7985            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8D7D             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00566                         ;_UpdateTrack SongFM6,FMUpdateTrack      ; uncomment to use this channel
                      (./Engine/Sound/Sm):00567                         ;_UpdateTrack SongFM7,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit
                      (./Engine/Sound/Sm):00568                         ;_UpdateTrack SongFM8,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit
                      (./Engine/Sound/Sm):00569                         ;_UpdateTrack SongFM9,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit        
                      (./Engine/Sound/Sm):00570                         ;_UpdateTrack SongPSG4,PSGUpdateTrack    ; uncomment to use noise channel as an independent channel from tone 3
                      (./Engine/Sound/Sm):00571                         _UpdateTrack SongPSG1,PSGUpdateTrack
8D7D B68A34           (     _UpdateTrack):00001 [5]     7990            lda   SongPSG1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D80 2A07             (     _UpdateTrack):00002 [3]     7993            bpl   a@
8D82 108E8A34         (     _UpdateTrack):00003 [4]     7997            ldy   #SongPSG1                               
8D86 BD90D6           (     _UpdateTrack):00004 [8]     8005            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8D89             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00572                         _UpdateTrack SongPSG2,PSGUpdateTrack        
8D89 B68A5E           (     _UpdateTrack):00001 [5]     8010            lda   SongPSG2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D8C 2A07             (     _UpdateTrack):00002 [3]     8013            bpl   a@
8D8E 108E8A5E         (     _UpdateTrack):00003 [4]     8017            ldy   #SongPSG2                               
8D92 BD90D6           (     _UpdateTrack):00004 [8]     8025            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8D95             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00573                         _UpdateTrack SongPSG3,PSGUpdateTrack
8D95 B68A88           (     _UpdateTrack):00001 [5]     8030            lda   SongPSG3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8D98 2A07             (     _UpdateTrack):00002 [3]     8033            bpl   a@
8D9A 108E8A88         (     _UpdateTrack):00003 [4]     8037            ldy   #SongPSG3                               
8D9E BD90D6           (     _UpdateTrack):00004 [8]     8045            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8DA1             (     _UpdateTrack):00005                 a@      equ   *        
8DA1 39               (./Engine/Sound/Sm):00574 [5]     8050    @rts    rts
                      (./Engine/Sound/Sm):00575                 
8DA2                  (./Engine/Sound/Sm):00576                 UpdateSound        
8DA2 B68BB3           (./Engine/Sound/Sm):00577 [5]     8055            lda   SoundPage                ; page switch to the sound
8DA5 2601             (./Engine/Sound/Sm):00578 [3]     8058            bne   @a
8DA7 39               (./Engine/Sound/Sm):00579 [5]     8063            rts
8DA8                  (./Engine/Sound/Sm):00580                 @a      _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
8DA8 B7E7E6           (    _SetCartPageA):00004 [5]     8068            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8DAB 8680             (./Engine/Sound/Sm):00581 [2]     8070            lda   #$80
8DAD B78BAF           (./Engine/Sound/Sm):00582 [5]     8075            sta   DoSFXFlag                ; Set zDoSFXFlag = 80h (updating sound effects)
                      (./Engine/Sound/Sm):00583                         _UpdateTrack SFXFM3,FMUpdateTrack
8DB0 B68AB2           (     _UpdateTrack):00001 [5]     8080            lda   SFXFM3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8DB3 2A07             (     _UpdateTrack):00002 [3]     8083            bpl   a@
8DB5 108E8AB2         (     _UpdateTrack):00003 [4]     8087            ldy   #SFXFM3                               
8DB9 BD8E58           (     _UpdateTrack):00004 [8]     8095            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8DBC             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00584                         _UpdateTrack SFXFM4,FMUpdateTrack
8DBC B68ADC           (     _UpdateTrack):00001 [5]     8100            lda   SFXFM4.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8DBF 2A07             (     _UpdateTrack):00002 [3]     8103            bpl   a@
8DC1 108E8ADC         (     _UpdateTrack):00003 [4]     8107            ldy   #SFXFM4                               
8DC5 BD8E58           (     _UpdateTrack):00004 [8]     8115            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8DC8             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00585                         _UpdateTrack SFXFM5,FMUpdateTrack
8DC8 B68B06           (     _UpdateTrack):00001 [5]     8120            lda   SFXFM5.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8DCB 2A07             (     _UpdateTrack):00002 [3]     8123            bpl   a@
8DCD 108E8B06         (     _UpdateTrack):00003 [4]     8127            ldy   #SFXFM5                               
8DD1 BD8E58           (     _UpdateTrack):00004 [8]     8135            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8DD4             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00586                         _UpdateTrack SFXPSG1,PSGUpdateTrack
8DD4 B68B30           (     _UpdateTrack):00001 [5]     8140            lda   SFXPSG1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8DD7 2A07             (     _UpdateTrack):00002 [3]     8143            bpl   a@
8DD9 108E8B30         (     _UpdateTrack):00003 [4]     8147            ldy   #SFXPSG1                               
8DDD BD90D6           (     _UpdateTrack):00004 [8]     8155            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8DE0             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00587                         _UpdateTrack SFXPSG2,PSGUpdateTrack        
8DE0 B68B5A           (     _UpdateTrack):00001 [5]     8160            lda   SFXPSG2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8DE3 2A07             (     _UpdateTrack):00002 [3]     8163            bpl   a@
8DE5 108E8B5A         (     _UpdateTrack):00003 [4]     8167            ldy   #SFXPSG2                               
8DE9 BD90D6           (     _UpdateTrack):00004 [8]     8175            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8DEC             (     _UpdateTrack):00005                 a@      equ   *        
                      (./Engine/Sound/Sm):00588                         _UpdateTrack SFXPSG3,PSGUpdateTrack
8DEC B68B84           (     _UpdateTrack):00001 [5]     8180            lda   SFXPSG3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8DEF 2A07             (     _UpdateTrack):00002 [3]     8183            bpl   a@
8DF1 108E8B84         (     _UpdateTrack):00003 [4]     8187            ldy   #SFXPSG3                               
8DF5 BD90D6           (     _UpdateTrack):00004 [8]     8195            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8DF8             (     _UpdateTrack):00005                 a@      equ   *        
8DF8 39               (./Engine/Sound/Sm):00589 [5]     8200    @rts    rts
                      (./Engine/Sound/Sm):00590                 
                      (./Engine/Sound/Sm):00591                 * * ************************************************************************************
                      (./Engine/Sound/Sm):00592                 * * 
                      (./Engine/Sound/Sm):00593                 * TempoWait
                      (./Engine/Sound/Sm):00594                 *         ; Tempo works as divisions of the 60Hz clock (there is a fix supplied for
                      (./Engine/Sound/Sm):00595                 *         ; PAL that "kind of" keeps it on track.)  Every time the internal music clock
                      (./Engine/Sound/Sm):00596                 *         ; overflows, it will update.  So a tempo of 80h will update every other
                      (./Engine/Sound/Sm):00597                 *         ; frame, or 30 times a second.
                      (./Engine/Sound/Sm):00598                 
                      (./Engine/Sound/Sm):00599                 *         lda   Smps.CurrentTempo  ; tempo value
                      (./Engine/Sound/Sm):00600                 *         adda  Smps.TempoTimeout  ; Adds previous value to
                      (./Engine/Sound/Sm):00601                 *         sta   Smps.TempoTimeout  ; Store this as new
                      (./Engine/Sound/Sm):00602                 *         bcc   @a
                      (./Engine/Sound/Sm):00603                 *         rts                     ; If addition overflowed (answer greater than FFh), return
                      (./Engine/Sound/Sm):00604                 * @a
                      (./Engine/Sound/Sm):00605                 *         ; So if adding tempo value did NOT overflow, then we add 1 to all durations
                      (./Engine/Sound/Sm):00606                 *         inc   SongDAC.DurationTimeout
                      (./Engine/Sound/Sm):00607                 *         inc   SongFM1.DurationTimeout
                      (./Engine/Sound/Sm):00608                 *         inc   SongFM2.DurationTimeout
                      (./Engine/Sound/Sm):00609                 *         inc   SongFM3.DurationTimeout
                      (./Engine/Sound/Sm):00610                 *         inc   SongFM4.DurationTimeout
                      (./Engine/Sound/Sm):00611                 *         inc   SongFM5.DurationTimeout
                      (./Engine/Sound/Sm):00612                 *         ;inc   SongFM6.DurationTimeout
                      (./Engine/Sound/Sm):00613                 *         ;inc   SongFM7.DurationTimeout
                      (./Engine/Sound/Sm):00614                 *         ;inc   SongFM8.DurationTimeout                
                      (./Engine/Sound/Sm):00615                 *         ;inc   SongFM9.DurationTimeout                        
                      (./Engine/Sound/Sm):00616                 *         ;inc   SongPSG4.DurationTimeout
                      (./Engine/Sound/Sm):00617                 *         inc   SongPSG1.DurationTimeout
                      (./Engine/Sound/Sm):00618                 *         inc   SongPSG2.DurationTimeout
                      (./Engine/Sound/Sm):00619                 *         inc   SongPSG3.DurationTimeout
                      (./Engine/Sound/Sm):00620                 *         rts
                      (./Engine/Sound/Sm):00621                 
                      (./Engine/Sound/Sm):00622                 ******************************************************************************
                      (./Engine/Sound/Sm):00623                 * DACUpdateTrack
                      (./Engine/Sound/Sm):00624                 * input Y (ptr to SONGDAC, is used by CoordFlag)
                      (./Engine/Sound/Sm):00625                 * destroys A,B,X
                      (./Engine/Sound/Sm):00626                 ******************************************************************************
                      (./Engine/Sound/Sm):00627                 
8DF9                  (./Engine/Sound/Sm):00628                 DACUpdateTrack        
8DF9 7A889B           (./Engine/Sound/Sm):00629 [7]     8207            dec   SongDAC.DurationTimeout
8DFC 2701             (./Engine/Sound/Sm):00630 [3]     8210            beq   @a
8DFE 39               (./Engine/Sound/Sm):00631 [5]     8215            rts
8DFF                  (./Engine/Sound/Sm):00632                 @a
8DFF CC0E20           (./Engine/Sound/Sm):00633 [3]     8218            ldd   #$0E20                   ; note has ended, so note off
8E02 97FC             (./Engine/Sound/Sm):00634 [4]     8222            sta   <YM2413_A0
8E04 BE8894           (./Engine/Sound/Sm):00635 [6]     8228            ldx   SongDAC.DataPointer
8E07 D7FD             (./Engine/Sound/Sm):00636 [4]     8232            stb   <YM2413_D0        
                      (./Engine/Sound/Sm):00637                                  
8E09 E680             (./Engine/Sound/Sm):00638 [6]     8238    @b      ldb   ,x+                      ; read DAC song data
8E0B C1E0             (./Engine/Sound/Sm):00639 [2]     8240            cmpb  #$E0
8E0D 2505             (./Engine/Sound/Sm):00640 [3]     8243            blo   @a                       ; test for >= E0h, which is a coordination flag
8E0F BD957B           (./Engine/Sound/Sm):00641 [8]     8251            jsr   CoordFlag
8E12 20F5             (./Engine/Sound/Sm):00642 [3]     8254            bra   @b                       ; read all consecutive coordination flags 
8E14                  (./Engine/Sound/Sm):00643                 @a        
8E14 2A0E             (./Engine/Sound/Sm):00644 [3]     8257            bpl   SetDuration              ; test for 80h not set, which is a note duration
8E16 F7889D           (./Engine/Sound/Sm):00645 [5]     8262            stb   SongDAC.NextData               ; This is a note; store it here
8E19 E684             (./Engine/Sound/Sm):00646 [4]     8266            ldb   ,x
8E1B 2A05             (./Engine/Sound/Sm):00647 [3]     8269            bpl   SetDurationAndForward    ; test for 80h not set, which is a note duration
8E1D F6889C           (./Engine/Sound/Sm):00648 [5]     8274            ldb   SongDAC.SavedDuration
8E20 2009             (./Engine/Sound/Sm):00649 [3]     8277            bra   DACAfterDur
                      (./Engine/Sound/Sm):00650                 
8E22                  (./Engine/Sound/Sm):00651                 SetDurationAndForward
8E22 3001             (./Engine/Sound/Sm):00652 [5]     8282            leax  1,x
8E24                  (./Engine/Sound/Sm):00653                 SetDuration
8E24 B68893           (./Engine/Sound/Sm):00654 [5]     8287            lda   SongDAC.TempoDivider
8E27 3D               (./Engine/Sound/Sm):00655 [11]    8298            mul
8E28 F7889C           (./Engine/Sound/Sm):00656 [5]     8303            stb   SongDAC.SavedDuration
8E2B                  (./Engine/Sound/Sm):00657                 DACAfterDur
8E2B F7889B           (./Engine/Sound/Sm):00658 [5]     8308            stb   SongDAC.DurationTimeout
8E2E BF8894           (./Engine/Sound/Sm):00659 [6]     8314            stx   SongDAC.DataPointer
8E31 F6889D           (./Engine/Sound/Sm):00660 [5]     8319            ldb   SongDAC.NextData
8E34 C180             (./Engine/Sound/Sm):00661 [2]     8321            cmpb  #$80
8E36 2601             (./Engine/Sound/Sm):00662 [3]     8324            bne   @a
8E38 39               (./Engine/Sound/Sm):00663 [5]     8329            rts                            ; if a rest, quit
8E39                  (./Engine/Sound/Sm):00664                 @a
8E39 8E8E47           (./Engine/Sound/Sm):00665 [3]     8332            ldx   #@data            
8E3C C081             (./Engine/Sound/Sm):00666 [2]     8334            subb  #$81                     ; transform note into an index...      
8E3E 860E             (./Engine/Sound/Sm):00667 [2]     8336            lda   #$0E
8E40 97FC             (./Engine/Sound/Sm):00668 [4]     8340            sta   <YM2413_A0
8E42 E685             (./Engine/Sound/Sm):00669 [5]     8345            ldb   b,x
8E44 D7FD             (./Engine/Sound/Sm):00670 [4]     8349            stb   <YM2413_D0      
8E46 39               (./Engine/Sound/Sm):00671 [5]     8354            rts
8E47                  (./Engine/Sound/Sm):00672                 @data
8E47 30               (./Engine/Sound/Sm):00673                         fcb   $30 ; $81 - Kick  (BD+TOM) 34
8E48 28               (./Engine/Sound/Sm):00674                         fcb   $28 ; $82 - Snare (SNARE noise+TOM) 2C
8E49 21               (./Engine/Sound/Sm):00675                         fcb   $21 ; $83 - Clap 21
8E4A 22               (./Engine/Sound/Sm):00676                         fcb   $22 ; $84 - Scratch 22
8E4B 24               (./Engine/Sound/Sm):00677                         fcb   $24 ; $85 - Timpani 22
8E4C 24               (./Engine/Sound/Sm):00678                         fcb   $24 ; $86 - Hi Tom
8E4D 24               (./Engine/Sound/Sm):00679                         fcb   $24 ; $87 - Bongo
8E4E 24               (./Engine/Sound/Sm):00680                         fcb   $24 ; $88 - Hi Timpani
8E4F 30               (./Engine/Sound/Sm):00681                         fcb   $30 ; $89 - Mid Timpani
8E50 30               (./Engine/Sound/Sm):00682                         fcb   $30 ; $8A - Mid Low Timpani
8E51 34               (./Engine/Sound/Sm):00683                         fcb   $34 ; $8B - Low Timpani
8E52 28               (./Engine/Sound/Sm):00684                         fcb   $28 ; $8C - Mid Tom
8E53 30               (./Engine/Sound/Sm):00685                         fcb   $30 ; $8D - Low Tom
8E54 34               (./Engine/Sound/Sm):00686                         fcb   $34 ; $8E - Floor Tom
8E55 24               (./Engine/Sound/Sm):00687                         fcb   $24 ; $8F - Hi Bongo
8E56 28               (./Engine/Sound/Sm):00688                         fcb   $28 ; $90 - Mid Bongo
8E57 30               (./Engine/Sound/Sm):00689                         fcb   $30 ; $91 - Low Bongo
                      (./Engine/Sound/Sm):00690                 
                      (./Engine/Sound/Sm):00691                 ******************************************************************************
                      (./Engine/Sound/Sm):00692                 * FM Track Update
                      (./Engine/Sound/Sm):00693                 ******************************************************************************
                      (./Engine/Sound/Sm):00694                 
8E58                  (./Engine/Sound/Sm):00695                 _FMNoteOff MACRO                       ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
                      (./Engine/Sound/Sm):00696                         bita  #$04                     ; Is SFX overriding set?
                      (./Engine/Sound/Sm):00697                         bne   @skip                    ; if true skip note off, sfx is playing        
                      (./Engine/Sound/Sm):00698                         addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
                      (./Engine/Sound/Sm):00699                         stb   <YM2413_A0
                      (./Engine/Sound/Sm):00700                         ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
                      (./Engine/Sound/Sm):00701                         andb  #$EF                     ; clear bit 4 (10h) Key Off
                      (./Engine/Sound/Sm):00702                         stb   <YM2413_D0               ; send to YM
                      (./Engine/Sound/Sm):00703                         stb   NoteControl,y               
8E58                  (./Engine/Sound/Sm):00704                 @skip   equ   *        
                      (./Engine/Sound/Sm):00705                  ENDM        
                      (./Engine/Sound/Sm):00706                 
8E58                  (./Engine/Sound/Sm):00707                 FMUpdateTrack
8E58 6A2B             (./Engine/Sound/Sm):00708 [7]     8361            dec   DurationTimeout,y        ; Decrement duration
8E5A 2663             (./Engine/Sound/Sm):00709 [3]     8364            bne   NoteFillUpdate           ; If not time-out yet, go do updates only
8E5C A6A4             (./Engine/Sound/Sm):00710 [4]     8368            lda   PlaybackControl,y
8E5E 84EF             (./Engine/Sound/Sm):00711 [2]     8370            anda  #$EF
8E60 A7A4             (./Engine/Sound/Sm):00712 [4]     8374            sta   PlaybackControl,y        ; When duration over, clear "do not attack" bit 4 (0x10) of track's play control
                      (./Engine/Sound/Sm):00713                         
8E62                  (./Engine/Sound/Sm):00714                 FMDoNext
8E62 AE24             (./Engine/Sound/Sm):00715 [6]     8380            ldx   DataPointer,y
8E64 A6A4             (./Engine/Sound/Sm):00716 [4]     8384            lda   PlaybackControl,y        ; Clear bit 1 (02h) "track is rest" from track
8E66 84FD             (./Engine/Sound/Sm):00717 [2]     8386            anda  #$FD
8E68 A7A4             (./Engine/Sound/Sm):00718 [4]     8390            sta   PlaybackControl,y        
                      (./Engine/Sound/Sm):00719                        
8E6A                  (./Engine/Sound/Sm):00720                 FMReadCoordFlag        
8E6A E680             (./Engine/Sound/Sm):00721 [6]     8396            ldb   ,x+                      ; Read song data
8E6C F78E91           (./Engine/Sound/Sm):00722 [5]     8401            stb   NoteDyn+1
8E6F C1E0             (./Engine/Sound/Sm):00723 [2]     8403            cmpb  #$E0
8E71 2505             (./Engine/Sound/Sm):00724 [3]     8406            blo   FMNoteOff                ; Test for >= E0h, which is a coordination flag
8E73 BD957B           (./Engine/Sound/Sm):00725 [8]     8414            jsr   CoordFlag
8E76 20F2             (./Engine/Sound/Sm):00726 [3]     8417            bra   FMReadCoordFlag          ; Read all consecutive coordination flags
                      (./Engine/Sound/Sm):00727                 
8E78                  (./Engine/Sound/Sm):00728                 FMNoteOff
8E78 A6A4             (./Engine/Sound/Sm):00729 [4]     8421            lda   PlaybackControl,y
8E7A 8414             (./Engine/Sound/Sm):00730 [2]     8423            anda  #$14                     ; Are bits 4 (no attack) or 2 (SFX overriding) set?
8E7C 2612             (./Engine/Sound/Sm):00731 [3]     8426            bne   NoteDyn                  ; If they are, skip
8E7E E621             (./Engine/Sound/Sm):00732 [5]     8431            ldb   VoiceControl,y           ; Otherwise, send a Key Off
                      (./Engine/Sound/Sm):00733                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
8E80 8504             (       _FMNoteOff):00001 [2]     8433            bita  #$04                     ; Is SFX overriding set?
8E82 260C             (       _FMNoteOff):00002 [3]     8436            bne   @skip                    ; if true skip note off, sfx is playing        
8E84 CB20             (       _FMNoteOff):00003 [2]     8438            addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
8E86 D7FC             (       _FMNoteOff):00004 [4]     8442            stb   <YM2413_A0
8E88 E622             (       _FMNoteOff):00005 [5]     8447            ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
8E8A C4EF             (       _FMNoteOff):00006 [2]     8449            andb  #$EF                     ; clear bit 4 (10h) Key Off
8E8C D7FD             (       _FMNoteOff):00007 [4]     8453            stb   <YM2413_D0               ; send to YM
8E8E E722             (       _FMNoteOff):00008 [5]     8458            stb   NoteControl,y               
     8E90             (       _FMNoteOff):00009                 @skip   equ   *        
8E90 C600             (./Engine/Sound/Sm):00734 [2]     8460    NoteDyn ldb   #0                       ; (dynamic) retore note value   
8E92 2A50             (./Engine/Sound/Sm):00735 [3]     8463            bpl   FMSetDuration            ; Test for 80h not set, which is a note duration
                      (./Engine/Sound/Sm):00736                         
8E94                  (./Engine/Sound/Sm):00737                 FMSetFreq
8E94 C080             (./Engine/Sound/Sm):00738 [2]     8465            subb  #$80                     ; Test for a rest
8E96 2608             (./Engine/Sound/Sm):00739 [3]     8468            bne   @a
8E98 A6A4             (./Engine/Sound/Sm):00740 [4]     8472            lda   PlaybackControl,y        ; Set bit 1 (track is at rest)
8E9A 8A02             (./Engine/Sound/Sm):00741 [2]     8474            ora   #$02
8E9C A7A4             (./Engine/Sound/Sm):00742 [4]     8478            sta   PlaybackControl,y
8E9E 2017             (./Engine/Sound/Sm):00743 [3]     8481            bra   @b        
8EA0 CB0B             (./Engine/Sound/Sm):00744 [2]     8483    @a      addb  #$0B                     ; Add FMFrequencies offet for C0 Note, access lower notes with transpose
8EA2 EB26             (./Engine/Sound/Sm):00745 [5]     8488            addb  Transpose,y              ; Add current channel transpose (coord flag E9)
8EA4 EBA81E           (./Engine/Sound/Sm):00746 [5]     8493            addb  InstrTranspose,y         ; Add Instrument (Voice) offset (coord flag EF)
8EA7 C15F             (./Engine/Sound/Sm):00747 [2]     8495            cmpb  #95                      ; array bound check
8EA9 2502             (./Engine/Sound/Sm):00748 [3]     8498            blo   @c
8EAB C65E             (./Engine/Sound/Sm):00749 [2]     8500            ldb   #94         
8EAD 58               (./Engine/Sound/Sm):00750 [2]     8502    @c      aslb                           ; Transform note into an index...
8EAE CE8FB9           (./Engine/Sound/Sm):00751 [3]     8505            ldu   #FMFrequencies
8EB1 8600             (./Engine/Sound/Sm):00752 [2]     8507            lda   #0    
8EB3 ECCB             (./Engine/Sound/Sm):00753 [9]     8516            ldd   d,u
8EB5 ED2D             (./Engine/Sound/Sm):00754 [6]     8522            std   NextData,y               ; Store Frequency
8EB7 E684             (./Engine/Sound/Sm):00755 [4]     8526    @b      ldb   ,x                       ; Get next byte
8EB9 2A27             (./Engine/Sound/Sm):00756 [3]     8529            bpl   FMSetDurationAndForward  ; Test for 80h not set, which is a note duration
8EBB E62C             (./Engine/Sound/Sm):00757 [5]     8534            ldb   SavedDuration,y        
8EBD 202A             (./Engine/Sound/Sm):00758 [3]     8537            bra   FinishTrackUpdate
                      (./Engine/Sound/Sm):00759                         
8EBF                  (./Engine/Sound/Sm):00760                 NoteFillUpdate
8EBF A62F             (./Engine/Sound/Sm):00761 [5]     8542            lda   NoteFillTimeout,y        ; Get current note fill value
8EC1 10270072         (./Engine/Sound/Sm):00762 [5+?]   8547            lbeq  DoModulation             ; If zero, return!
8EC5 6A2F             (./Engine/Sound/Sm):00763 [7]     8554            dec   NoteFillTimeout,y        ; Decrement note fill
8EC7 266E             (./Engine/Sound/Sm):00764 [3]     8557            bne   DoModulation             ; If not zero, return
                      (./Engine/Sound/Sm):00765                         
8EC9 A6A4             (./Engine/Sound/Sm):00766 [4]     8561            lda   PlaybackControl,y
8ECB 8A02             (./Engine/Sound/Sm):00767 [2]     8563            ora   #$02                     ; Set bit 1 (track is at rest)
8ECD A7A4             (./Engine/Sound/Sm):00768 [4]     8567            sta   PlaybackControl,y        
8ECF E621             (./Engine/Sound/Sm):00769 [5]     8572            ldb   VoiceControl,y
                      (./Engine/Sound/Sm):00770                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y         
8ED1 8504             (       _FMNoteOff):00001 [2]     8574            bita  #$04                     ; Is SFX overriding set?
8ED3 260C             (       _FMNoteOff):00002 [3]     8577            bne   @skip                    ; if true skip note off, sfx is playing        
8ED5 CB20             (       _FMNoteOff):00003 [2]     8579            addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
8ED7 D7FC             (       _FMNoteOff):00004 [4]     8583            stb   <YM2413_A0
8ED9 E622             (       _FMNoteOff):00005 [5]     8588            ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
8EDB C4EF             (       _FMNoteOff):00006 [2]     8590            andb  #$EF                     ; clear bit 4 (10h) Key Off
8EDD D7FD             (       _FMNoteOff):00007 [4]     8594            stb   <YM2413_D0               ; send to YM
8EDF E722             (       _FMNoteOff):00008 [5]     8599            stb   NoteControl,y               
     8EE1             (       _FMNoteOff):00009                 @skip   equ   *        
8EE1 39               (./Engine/Sound/Sm):00771 [5]     8604            rts         
                      (./Engine/Sound/Sm):00772                 
8EE2                  (./Engine/Sound/Sm):00773                 FMSetDurationAndForward
8EE2 3001             (./Engine/Sound/Sm):00774 [5]     8609            leax  1,x
                      (./Engine/Sound/Sm):00775                         
8EE4                  (./Engine/Sound/Sm):00776                 FMSetDuration
8EE4 A623             (./Engine/Sound/Sm):00777 [5]     8614            lda   TempoDivider,y
8EE6 3D               (./Engine/Sound/Sm):00778 [11]    8625            mul
8EE7 E72C             (./Engine/Sound/Sm):00779 [5]     8630            stb   SavedDuration,y
                      (./Engine/Sound/Sm):00780                         
8EE9                  (./Engine/Sound/Sm):00781                 FinishTrackUpdate
8EE9 E72B             (./Engine/Sound/Sm):00782 [5]     8635            stb   DurationTimeout,y        ; Last set duration ... put into ticker
8EEB AF24             (./Engine/Sound/Sm):00783 [6]     8641            stx   DataPointer,y            ; Stores to the track pointer memory
8EED A6A4             (./Engine/Sound/Sm):00784 [4]     8645            lda   PlaybackControl,y
8EEF 8510             (./Engine/Sound/Sm):00785 [2]     8647            bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
8EF1 2702             (./Engine/Sound/Sm):00786 [3]     8650            beq   @a                       
8EF3 2011             (./Engine/Sound/Sm):00787 [3]     8653            bra   FMPrepareNote            ; If so, quit
8EF5 E6A810           (./Engine/Sound/Sm):00788 [5]     8658    @a      ldb   NoteFillMaster,y
8EF8 E72F             (./Engine/Sound/Sm):00789 [5]     8663            stb   NoteFillTimeout,y        ; Reset 0Fh "note fill" value to master
8EFA 8508             (./Engine/Sound/Sm):00790 [2]     8665            bita  #$08                     ; Is bit 3 (08h) modulation turned on?
8EFC 2602             (./Engine/Sound/Sm):00791 [3]     8668            bne   @b
8EFE 2006             (./Engine/Sound/Sm):00792 [3]     8671            bra   FMPrepareNote            ; if not, quit
8F00 AEA811           (./Engine/Sound/Sm):00793 [6]     8677    @b      ldx   ModulationPtr,y
8F03 BD96A5           (./Engine/Sound/Sm):00794 [8]     8685            jsr   SetModulation            ; reload modulation settings for the new note
                      (./Engine/Sound/Sm):00795                         
8F06                  (./Engine/Sound/Sm):00796                 FMPrepareNote
8F06 A6A4             (./Engine/Sound/Sm):00797 [4]     8689            lda   PlaybackControl,y
8F08 8504             (./Engine/Sound/Sm):00798 [2]     8691            bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8F0A 262B             (./Engine/Sound/Sm):00799 [3]     8694            bne   DoModulation             ; If so skip freq update                                                 
8F0C 8502             (./Engine/Sound/Sm):00800 [2]     8696            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8F0E 2701             (./Engine/Sound/Sm):00801 [3]     8699            beq   FMUpdateFreqAndNoteOn
8F10 39               (./Engine/Sound/Sm):00802 [5]     8704            rts                            ; If so, quit
8F11                  (./Engine/Sound/Sm):00803                 FMUpdateFreqAndNoteOn
8F11 E6A819           (./Engine/Sound/Sm):00804 [5]     8709            ldb   Detune,y
8F14 1D               (./Engine/Sound/Sm):00805 [2]     8711            sex
8F15 E32D             (./Engine/Sound/Sm):00806 [7]     8718            addd  NextData,y               ; Apply detune but don't update stored frequency
8F17 B78F30           (./Engine/Sound/Sm):00807 [5]     8723            sta   @dyn+1
8F1A 8610             (./Engine/Sound/Sm):00808 [2]     8725            lda   #$10                     ; set LSB Frequency Command
8F1C AB21             (./Engine/Sound/Sm):00809 [5]     8730            adda  VoiceControl,y
8F1E 97FC             (./Engine/Sound/Sm):00810 [4]     8734            sta   <YM2413_A0
8F20 8B10             (./Engine/Sound/Sm):00811 [2]     8736            adda  #$10                     ; set Sus/Key/Block/FNum(MSB) Command
8F22 D7FD             (./Engine/Sound/Sm):00812 [4]     8740            stb   <YM2413_D0
                      (./Engine/Sound/Sm):00813                         _YMBusyWait9
8F24 12               (     _YMBusyWait9):00001 [2]     8742            nop
8F25 12               (     _YMBusyWait9):00002 [2]     8744            nop
8F26 12               (     _YMBusyWait9):00003 [2]     8746            nop
8F27 21FE             (     _YMBusyWait9):00004 [3]     8749            brn   *
8F29 E622             (./Engine/Sound/Sm):00814 [5]     8754            ldb   NoteControl,y            ; load current value (do not erase FNum MSB) (and used as 5 cycles tempo)
8F2B CA10             (./Engine/Sound/Sm):00815 [2]     8756            orb   #$10                     ; Set bit 4 (10h) Key On
8F2D C4F0             (./Engine/Sound/Sm):00816 [2]     8758            andb  #$F0                     ; Clear FNum MSB (and used as 2 cycles tempo)
8F2F CB00             (./Engine/Sound/Sm):00817 [2]     8760    @dyn    addb  #0                       ; (dynamic) Set Fnum MSB (and used as 2 cycles tempo)                
8F31 97FC             (./Engine/Sound/Sm):00818 [4]     8764            sta   <YM2413_A0
8F33 E722             (./Engine/Sound/Sm):00819 [5]     8769            stb   NoteControl,y
8F35 D7FD             (./Engine/Sound/Sm):00820 [4]     8773            stb   <YM2413_D0   
                      (./Engine/Sound/Sm):00821                         
8F37                  (./Engine/Sound/Sm):00822                 DoModulation  
8F37 A6A4             (./Engine/Sound/Sm):00823 [4]     8777            lda   PlaybackControl,y
8F39 8502             (./Engine/Sound/Sm):00824 [2]     8779            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8F3B 2701             (./Engine/Sound/Sm):00825 [3]     8782            beq   @a
8F3D 39               (./Engine/Sound/Sm):00826 [5]     8787            rts                            ; If so, quit        
8F3E 8508             (./Engine/Sound/Sm):00827 [2]     8789    @a      bita  #$08                     ; Is bit 3 (08h) "modulation on" set on playback?
8F40 2601             (./Engine/Sound/Sm):00828 [3]     8792            bne   @b
8F42 39               (./Engine/Sound/Sm):00829 [5]     8797            rts                            ; If not, quit        
8F43 A6A813           (./Engine/Sound/Sm):00830 [5]     8802    @b      lda   ModulationWait,y         ; 'ww' period of time before modulation starts
8F46 2704             (./Engine/Sound/Sm):00831 [3]     8805            beq   @c                       ; if zero, go to it!
8F48 6AA813           (./Engine/Sound/Sm):00832 [7]     8812            dec   ModulationWait,y         ; Otherwise, decrement timer
8F4B 39               (./Engine/Sound/Sm):00833 [5]     8817            rts                            ; return if decremented
8F4C 6AA814           (./Engine/Sound/Sm):00834 [7]     8824    @c      dec   ModulationSpeed,y        ; Decrement modulation speed counter
8F4F 2701             (./Engine/Sound/Sm):00835 [3]     8827            beq   @d
8F51 39               (./Engine/Sound/Sm):00836 [5]     8832            rts                            ; Return if not yet zero
8F52 AEA811           (./Engine/Sound/Sm):00837 [6]     8838    @d      ldx   ModulationPtr,y
8F55 A601             (./Engine/Sound/Sm):00838 [5]     8843            lda   1,x
8F57 A7A814           (./Engine/Sound/Sm):00839 [5]     8848            sta   ModulationSpeed,y
8F5A A6A816           (./Engine/Sound/Sm):00840 [5]     8853            lda   ModulationSteps,y
8F5D 2609             (./Engine/Sound/Sm):00841 [3]     8856            bne   @e
8F5F A603             (./Engine/Sound/Sm):00842 [5]     8861            lda   3,x
8F61 A7A816           (./Engine/Sound/Sm):00843 [5]     8866            sta   ModulationSteps,y     
8F64 60A815           (./Engine/Sound/Sm):00844 [7]     8873            neg   ModulationDelta,y
8F67 39               (./Engine/Sound/Sm):00845 [5]     8878            rts                
8F68 6AA816           (./Engine/Sound/Sm):00846 [7]     8885    @e      dec   ModulationSteps,y
8F6B E6A815           (./Engine/Sound/Sm):00847 [5]     8890            ldb   ModulationDelta,y
8F6E 1D               (./Engine/Sound/Sm):00848 [2]     8892            sex
8F6F E3A817           (./Engine/Sound/Sm):00849 [7]     8899            addd  ModulationVal,y
8F72 EDA817           (./Engine/Sound/Sm):00850 [6]     8905            std   ModulationVal,y        
                      (./Engine/Sound/Sm):00851                               
8F75                  (./Engine/Sound/Sm):00852                 FMUpdateFreq
8F75 A6A4             (./Engine/Sound/Sm):00853 [4]     8909            lda   PlaybackControl,y
8F77 8504             (./Engine/Sound/Sm):00854 [2]     8911            bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8F79 263D             (./Engine/Sound/Sm):00855 [3]     8914            bne   @rts
8F7B E6A819           (./Engine/Sound/Sm):00856 [5]     8919            ldb   Detune,y
8F7E 1D               (./Engine/Sound/Sm):00857 [2]     8921            sex
8F7F FD8F97           (./Engine/Sound/Sm):00858 [6]     8927            std   @dyna+1
8F82 ECA817           (./Engine/Sound/Sm):00859 [6]     8933            ldd   ModulationVal,y          ; get modulation effect
8F85 2B06             (./Engine/Sound/Sm):00860 [3]     8936            bmi   @a
                      (./Engine/Sound/Sm):00861                         _asrd                          ; modulation is divided by four
8F87 47               (            _asrd):00001 [2]     8938            asra
8F88 56               (            _asrd):00002 [2]     8940            rorb
                      (./Engine/Sound/Sm):00862                         _asrd                          ; used for better precision of delta
8F89 47               (            _asrd):00001 [2]     8942            asra
8F8A 56               (            _asrd):00002 [2]     8944            rorb
8F8B 2007             (./Engine/Sound/Sm):00863 [3]     8947            bra   @b
8F8D                  (./Engine/Sound/Sm):00864                 @a      _asrd                          ; modulation is divided by four
8F8D 47               (            _asrd):00001 [2]     8949            asra
8F8E 56               (            _asrd):00002 [2]     8951            rorb
                      (./Engine/Sound/Sm):00865                         _asrd                          ; used for better precision of delta        
8F8F 47               (            _asrd):00001 [2]     8953            asra
8F90 56               (            _asrd):00002 [2]     8955            rorb
8F91 C30001           (./Engine/Sound/Sm):00866 [4]     8959            addd  #1                       ; negative value need +1 when div 
8F94 E32D             (./Engine/Sound/Sm):00867 [7]     8966    @b      addd  NextData,y               ; apply detune but don't update stored frequency
8F96 C30000           (./Engine/Sound/Sm):00868 [4]     8970    @dyna   addd  #0                       ; (dynamic) apply detune        
8F99 B78FB1           (./Engine/Sound/Sm):00869 [5]     8975            sta   @dynb+1
8F9C 8610             (./Engine/Sound/Sm):00870 [2]     8977            lda   #$10                     ; set LSB Frequency Command
8F9E AB21             (./Engine/Sound/Sm):00871 [5]     8982            adda  VoiceControl,y           ; get channel number
8FA0 97FC             (./Engine/Sound/Sm):00872 [4]     8986            sta   <YM2413_A0               ; send Fnum update Command
8FA2 8B10             (./Engine/Sound/Sm):00873 [2]     8988            adda  #$10                     ; set Sus/Key/Block/FNum(MSB) Command
8FA4 D7FD             (./Engine/Sound/Sm):00874 [4]     8992            stb   <YM2413_D0               ; send FNum (b0-b7)
                      (./Engine/Sound/Sm):00875                         _YMBusyWait11                  ; total wait 20 cycles
8FA6 12               (    _YMBusyWait11):00001 [2]     8994            nop
8FA7 12               (    _YMBusyWait11):00002 [2]     8996            nop
8FA8 12               (    _YMBusyWait11):00003 [2]     8998            nop
8FA9 12               (    _YMBusyWait11):00004 [2]     9000            nop
8FAA 21FE             (    _YMBusyWait11):00005 [3]     9003            brn   *
8FAC E622             (./Engine/Sound/Sm):00876 [5]     9008            ldb   NoteControl,y            ; load current value (do not erase FNum MSB) (and used as 5 cycles tempo)
8FAE C4F0             (./Engine/Sound/Sm):00877 [2]     9010            andb  #$F0                     ; clear FNum MSB (and used as 2 cycles tempo)
8FB0 CB00             (./Engine/Sound/Sm):00878 [2]     9012    @dynb   addb  #0                       ; (dynamic) Set Fnum MSB (and used as 2 cycles tempo)        
8FB2 97FC             (./Engine/Sound/Sm):00879 [4]     9016            sta   <YM2413_A0               ; send command
8FB4 E722             (./Engine/Sound/Sm):00880 [5]     9021            stb   NoteControl,y
8FB6 D7FD             (./Engine/Sound/Sm):00881 [4]     9025            stb   <YM2413_D0               ; send FNum (b8) and Block (b0-b2)
8FB8 39               (./Engine/Sound/Sm):00882 [5]     9030    @rts    rts        
                      (./Engine/Sound/Sm):00883                  
                      (./Engine/Sound/Sm):00884                 ; 95 notes (Note value $81=C0 $DF=A#7) with direct access
                      (./Engine/Sound/Sm):00885                 ; Other notes can be accessed by transpose
8FB9                  (./Engine/Sound/Sm):00886                 FMFrequencies
8FB9 0056005B00610067 (./Engine/Sound/Sm):00887                         fdb   $0056,$005B,$0061,$0067,$006D,$0073,$007A,$0081,$0089,$0091,$009A,$00A2 ; C-1 - B-1
     006D0073007A0081
     00890091009A00A2
8FD1 00AD00B700C200CD (./Engine/Sound/Sm):00888                         fdb   $00AD,$00B7,$00C2,$00CD,$00DA,$00E6,$00F4,$0102,$0112,$0122,$0133,$0146 ; C0 - B0
     00DA00E600F40102
     0112012201330146
8FE9 0159016D0183019A (./Engine/Sound/Sm):00889                         fdb   $0159,$016D,$0183,$019A,$01B3,$01CC,$01E8,$0302,$0312,$0322,$0333,$0346 ; C1 - B1
     01B301CC01E80302
     0312032203330346
9001 0359036D0383039A (./Engine/Sound/Sm):00890                         fdb   $0359,$036D,$0383,$039A,$03B3,$03CC,$03E8,$0502,$0512,$0522,$0533,$0546 ; C2 - B2
     03B303CC03E80502
     0512052205330546
9019 0559056D0583059A (./Engine/Sound/Sm):00891                         fdb   $0559,$056D,$0583,$059A,$05B3,$05CC,$05E8,$0702,$0712,$0722,$0733,$0746 ; C3 - B3
     05B305CC05E80702
     0712072207330746
9031 0759076D0783079A (./Engine/Sound/Sm):00892                         fdb   $0759,$076D,$0783,$079A,$07B3,$07CC,$07E8,$0902,$0912,$0922,$0933,$0946 ; C4 - B4
     07B307CC07E80902
     0912092209330946
9049 0959096D0983099A (./Engine/Sound/Sm):00893                         fdb   $0959,$096D,$0983,$099A,$09B3,$09CC,$09E8,$0B02,$0B12,$0B22,$0B33,$0B46 ; C5 - B5
     09B309CC09E80B02
     0B120B220B330B46
9061 0B590B6D0B830B9A (./Engine/Sound/Sm):00894                         fdb   $0B59,$0B6D,$0B83,$0B9A,$0BB3,$0BCC,$0BE8,$0D02,$0D12,$0D22,$0D33,$0D46 ; C6 - B6
     0BB30BCC0BE80D02
     0D120D220D330D46
9079 0D590D6D0D830D9A (./Engine/Sound/Sm):00895                         fdb   $0D59,$0D6D,$0D83,$0D9A,$0DB3,$0DCC,$0DE8,$0F02,$0F12,$0F22,$0F33,$0F46 ; C7 - B7        
     0DB30DCC0DE80F02
     0F120F220F330F46
9091 0F590F6D0F830F9A (./Engine/Sound/Sm):00896                         fdb   $0F59,$0F6D,$0F83,$0F9A,$0FB3,$0FCC,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8 ; C8 - F#8
     0FB30FCC0FE80FE8
     0FE80FE80FE80FE8
90A9 0FE80FE80FE80FE8 (./Engine/Sound/Sm):00897                         fdb   $0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8                         ; F#8
     0FE80FE80FE80FE8
                      (./Engine/Sound/Sm):00898                         
                      (./Engine/Sound/Sm):00899                 ******************************************************************************
                      (./Engine/Sound/Sm):00900                 * PSG Update Track
                      (./Engine/Sound/Sm):00901                 ******************************************************************************
                      (./Engine/Sound/Sm):00902                 
90B9                  (./Engine/Sound/Sm):00903                 _PSGNoteOff MACRO                      ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
                      (./Engine/Sound/Sm):00904                         bita  #$04                     ; Is SFX overriding set?
                      (./Engine/Sound/Sm):00905                         bne   @skip                    ; if true skip note off, sfx is playing               
                      (./Engine/Sound/Sm):00906                         orb   #$1F                     ; Volume Off
                      (./Engine/Sound/Sm):00907                         stb   <PSG
90B9                  (./Engine/Sound/Sm):00908                 @skip   equ   *        
                      (./Engine/Sound/Sm):00909                  ENDM
                      (./Engine/Sound/Sm):00910                  
90B9                  (./Engine/Sound/Sm):00911                 PSGNoteFillUpdate
90B9 A62F             (./Engine/Sound/Sm):00912 [5]     9035            lda   NoteFillTimeout,y        ; Get current note fill value
90BB 102700BD         (./Engine/Sound/Sm):00913 [5+?]   9040            lbeq  PSGUpdateVolFX           ; If zero, return!
90BF 6A2F             (./Engine/Sound/Sm):00914 [7]     9047            dec   NoteFillTimeout,y        ; Decrement note fill
90C1 102600B7         (./Engine/Sound/Sm):00915 [5+?]   9052            lbne  PSGUpdateVolFX           ; If not zero, return
                      (./Engine/Sound/Sm):00916                         
90C5 A6A4             (./Engine/Sound/Sm):00917 [4]     9056            lda   PlaybackControl,y
90C7 8A02             (./Engine/Sound/Sm):00918 [2]     9058            ora   #$02                     ; Set bit 1 (track is at rest)
90C9 A7A4             (./Engine/Sound/Sm):00919 [4]     9062            sta   PlaybackControl,y    
90CB E621             (./Engine/Sound/Sm):00920 [5]     9067            ldb   VoiceControl,y           ; Get "voice control" byte (loads upper bits which specify attenuation setting)
                      (./Engine/Sound/Sm):00921                         _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
90CD 8504             (      _PSGNoteOff):00001 [2]     9069            bita  #$04                     ; Is SFX overriding set?
90CF 2604             (      _PSGNoteOff):00002 [3]     9072            bne   @skip                    ; if true skip note off, sfx is playing               
90D1 CA1F             (      _PSGNoteOff):00003 [2]     9074            orb   #$1F                     ; Volume Off
90D3 D7FF             (      _PSGNoteOff):00004 [4]     9078            stb   <PSG
     90D5             (      _PSGNoteOff):00005                 @skip   equ   *        
90D5 39               (./Engine/Sound/Sm):00922 [5]     9083            rts 
                      (./Engine/Sound/Sm):00923                  
90D6                  (./Engine/Sound/Sm):00924                 PSGUpdateTrack
90D6 6A2B             (./Engine/Sound/Sm):00925 [7]     9090            dec   DurationTimeout,y        ; Decrement duration
90D8 26DF             (./Engine/Sound/Sm):00926 [3]     9093            bne   PSGNoteFillUpdate        ; If not time-out yet, go do updates only
90DA A6A4             (./Engine/Sound/Sm):00927 [4]     9097            lda   PlaybackControl,y
90DC 84EF             (./Engine/Sound/Sm):00928 [2]     9099            anda  #$EF
90DE A7A4             (./Engine/Sound/Sm):00929 [4]     9103            sta   PlaybackControl,y        ; When duration over, clear "do not attack" bit 4 (0x10) of track's play control
                      (./Engine/Sound/Sm):00930                         
90E0                  (./Engine/Sound/Sm):00931                 PSGDoNext
90E0 AE24             (./Engine/Sound/Sm):00932 [6]     9109            ldx   DataPointer,y
90E2 A6A4             (./Engine/Sound/Sm):00933 [4]     9113            lda   PlaybackControl,y        ; Clear bit 1 (02h) "track is rest" from track
90E4 84FD             (./Engine/Sound/Sm):00934 [2]     9115            anda  #$FD
90E6 A7A4             (./Engine/Sound/Sm):00935 [4]     9119            sta   PlaybackControl,y        
                      (./Engine/Sound/Sm):00936                        
90E8                  (./Engine/Sound/Sm):00937                 PSGReadCoordFlag        
90E8 E680             (./Engine/Sound/Sm):00938 [6]     9125            ldb   ,x+                      ; Read song data
90EA C1E0             (./Engine/Sound/Sm):00939 [2]     9127            cmpb  #$E0
90EC 2505             (./Engine/Sound/Sm):00940 [3]     9130            blo   @a                       ; Test for >= E0h, which is a coordination flag
90EE BD957B           (./Engine/Sound/Sm):00941 [8]     9138            jsr   CoordFlag
90F1 20F5             (./Engine/Sound/Sm):00942 [3]     9141            bra   PSGReadCoordFlag         ; Read all consecutive coordination flags
90F3 2A34             (./Engine/Sound/Sm):00943 [3]     9144    @a      bpl   PSGSetDuration           ; Test for 80h not set, which is a note duration
                      (./Engine/Sound/Sm):00944                         
90F5                  (./Engine/Sound/Sm):00945                 PSGSetFreq
90F5 C081             (./Engine/Sound/Sm):00946 [2]     9146            subb  #$81                     ; Test for a rest
90F7 2412             (./Engine/Sound/Sm):00947 [3]     9149            bcc   @a                       ; If a note branch
90F9 A6A4             (./Engine/Sound/Sm):00948 [4]     9153            lda   PlaybackControl,y        ; If carry (only time that happens if 80h because of earlier logic) this is a rest!
90FB 8A02             (./Engine/Sound/Sm):00949 [2]     9155            ora   #$02
90FD A7A4             (./Engine/Sound/Sm):00950 [4]     9159            sta   PlaybackControl,y        ; Set bit 1 (track is at rest)
90FF E621             (./Engine/Sound/Sm):00951 [5]     9164            ldb   VoiceControl,y           ; Get "voice control" byte (loads upper bits which specify attenuation setting)        
                      (./Engine/Sound/Sm):00952                         _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
9101 8504             (      _PSGNoteOff):00001 [2]     9166            bita  #$04                     ; Is SFX overriding set?
9103 2604             (      _PSGNoteOff):00002 [3]     9169            bne   @skip                    ; if true skip note off, sfx is playing               
9105 CA1F             (      _PSGNoteOff):00003 [2]     9171            orb   #$1F                     ; Volume Off
9107 D7FF             (      _PSGNoteOff):00004 [4]     9175            stb   <PSG
     9109             (      _PSGNoteOff):00005                 @skip   equ   *        
9109 2014             (./Engine/Sound/Sm):00953 [3]     9178            bra   @b
910B CB03             (./Engine/Sound/Sm):00954 [2]     9180    @a      addb  #$03                     ; Add Frequencies offet for C0 Note, access lower notes with transpose
910D EB26             (./Engine/Sound/Sm):00955 [5]     9185            addb  Transpose,y              ; Add current channel transpose (coord flag E9)
910F C146             (./Engine/Sound/Sm):00956 [2]     9187            cmpb  #70                      ; array bound check
9111 2502             (./Engine/Sound/Sm):00957 [3]     9190            blo   @c
9113 C645             (./Engine/Sound/Sm):00958 [2]     9192            ldb   #69                      
9115 58               (./Engine/Sound/Sm):00959 [2]     9194    @c      aslb                           ; Transform note into an index...
9116 CE923B           (./Engine/Sound/Sm):00960 [3]     9197            ldu   #PSGFrequencies
9119 8600             (./Engine/Sound/Sm):00961 [2]     9199            lda   #0    
911B ECCB             (./Engine/Sound/Sm):00962 [9]     9208            ldd   d,u
911D ED2D             (./Engine/Sound/Sm):00963 [6]     9214            std   NextData,y                ; Store Frequency
911F E684             (./Engine/Sound/Sm):00964 [4]     9218    @b      ldb   ,x                        ; Get next byte
9121 2A04             (./Engine/Sound/Sm):00965 [3]     9221            bpl   PSGSetDurationAndForward  ; Test for 80h not set, which is a note duration
9123 E62C             (./Engine/Sound/Sm):00966 [5]     9226            ldb   SavedDuration,y        
9125 2007             (./Engine/Sound/Sm):00967 [3]     9229            bra   PSGFinishTrackUpdate
                      (./Engine/Sound/Sm):00968                 
9127                  (./Engine/Sound/Sm):00969                 PSGSetDurationAndForward
9127 3001             (./Engine/Sound/Sm):00970 [5]     9234            leax  1,x
                      (./Engine/Sound/Sm):00971                         
9129                  (./Engine/Sound/Sm):00972                 PSGSetDuration
9129 A623             (./Engine/Sound/Sm):00973 [5]     9239            lda   TempoDivider,y
912B 3D               (./Engine/Sound/Sm):00974 [11]    9250            mul
912C E72C             (./Engine/Sound/Sm):00975 [5]     9255            stb   SavedDuration,y
                      (./Engine/Sound/Sm):00976                 
912E                  (./Engine/Sound/Sm):00977                 PSGFinishTrackUpdate
912E E72B             (./Engine/Sound/Sm):00978 [5]     9260            stb   DurationTimeout,y        ; Last set duration ... put into ticker
9130 AF24             (./Engine/Sound/Sm):00979 [6]     9266            stx   DataPointer,y            ; Stores to the track pointer memory
9132 A6A4             (./Engine/Sound/Sm):00980 [4]     9270            lda   PlaybackControl,y
9134 8510             (./Engine/Sound/Sm):00981 [2]     9272            bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
9136 2702             (./Engine/Sound/Sm):00982 [3]     9275            beq   @a                       
9138 2013             (./Engine/Sound/Sm):00983 [3]     9278            bra   PSGDoNoteOn              ; If so, quit
913A E6A810           (./Engine/Sound/Sm):00984 [5]     9283    @a      ldb   NoteFillMaster,y
913D E72F             (./Engine/Sound/Sm):00985 [5]     9288            stb   NoteFillTimeout,y        ; Reset 0Fh "note fill" value to master
913F 6F29             (./Engine/Sound/Sm):00986 [7]     9295            clr   VolFlutter,y             ; Reset PSG flutter byte
9141 8508             (./Engine/Sound/Sm):00987 [2]     9297            bita  #$08                     ; Is bit 3 (08h) modulation turned on?
9143 2602             (./Engine/Sound/Sm):00988 [3]     9300            bne   @b
9145 2006             (./Engine/Sound/Sm):00989 [3]     9303            bra   PSGDoNoteOn              ; if not, quit
9147 AEA811           (./Engine/Sound/Sm):00990 [6]     9309    @b      ldx   ModulationPtr,y
914A BD96A5           (./Engine/Sound/Sm):00991 [8]     9317            jsr   SetModulation            ; reload modulation settings for the new note
                      (./Engine/Sound/Sm):00992                         
914D                  (./Engine/Sound/Sm):00993                 PSGDoNoteOn
914D A6A4             (./Engine/Sound/Sm):00994 [4]     9321            lda   PlaybackControl,y
914F 8502             (./Engine/Sound/Sm):00995 [2]     9323            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
9151 2701             (./Engine/Sound/Sm):00996 [3]     9326            beq   PSGUpdateFreq                       
9153 39               (./Engine/Sound/Sm):00997 [5]     9331            rts                            ; If so, quit
9154                  (./Engine/Sound/Sm):00998                 PSGUpdateFreq
9154 E6A819           (./Engine/Sound/Sm):00999 [5]     9336            ldb   Detune,y
9157 1D               (./Engine/Sound/Sm):01000 [2]     9338            sex
9158 E32D             (./Engine/Sound/Sm):01001 [7]     9345            addd  NextData,y               ; Apply detune but don't update stored frequency
915A FD916E           (./Engine/Sound/Sm):01002 [6]     9351            std   @dyn+1
915D C40F             (./Engine/Sound/Sm):01003 [2]     9353            andb  #$0F                     ; Keep only lower four bits (first PSG reg write only applies d0-d3 of freq)
915F A621             (./Engine/Sound/Sm):01004 [5]     9358            lda   VoiceControl,y
9161 81E0             (./Engine/Sound/Sm):01005 [2]     9360            cmpa  #$E0
9163 2604             (./Engine/Sound/Sm):01006 [3]     9363            bne   @a
9165 CBC0             (./Engine/Sound/Sm):01007 [2]     9365            addb  #$C0
9167 2002             (./Engine/Sound/Sm):01008 [3]     9368            bra   @b
9169 EB21             (./Engine/Sound/Sm):01009 [5]     9373    @a      addb  VoiceControl,y           ; Get "voice control" byte...
916B D7FF             (./Engine/Sound/Sm):01010 [4]     9377    @b      stb   <PSG
916D CC0000           (./Engine/Sound/Sm):01011 [3]     9380    @dyn    ldd   #0
                      (./Engine/Sound/Sm):01012                         _lsrd
9170 44               (            _lsrd):00001 [2]     9382            lsra
9171 56               (            _lsrd):00002 [2]     9384            rorb
                      (./Engine/Sound/Sm):01013                         _lsrd
9172 44               (            _lsrd):00001 [2]     9386            lsra
9173 56               (            _lsrd):00002 [2]     9388            rorb
                      (./Engine/Sound/Sm):01014                         _lsrd
9174 44               (            _lsrd):00001 [2]     9390            lsra
9175 56               (            _lsrd):00002 [2]     9392            rorb
                      (./Engine/Sound/Sm):01015                         _lsrd              
9176 44               (            _lsrd):00001 [2]     9394            lsra
9177 56               (            _lsrd):00002 [2]     9396            rorb
9178 D7FF             (./Engine/Sound/Sm):01016 [4]     9400            stb   <PSG
917A 2011             (./Engine/Sound/Sm):01017 [3]     9403            bra   PSGDoVolFX
                      (./Engine/Sound/Sm):01018                         
917C                  (./Engine/Sound/Sm):01019                 PSGUpdateVolFX
917C A628             (./Engine/Sound/Sm):01020 [5]     9408            lda   VoiceIndex,y
917E 2753             (./Engine/Sound/Sm):01021 [3]     9411            beq   PSGDoModulation
9180 E627             (./Engine/Sound/Sm):01022 [5]     9416            ldb   Volume,y
9182 F791BB           (./Engine/Sound/Sm):01023 [5]     9421            stb   DynVol+1          
9185 200F             (./Engine/Sound/Sm):01024 [3]     9424            bra   PSGFlutter
                      (./Engine/Sound/Sm):01025                 
9187                  (./Engine/Sound/Sm):01026                 VolEnvHold
9187 A629             (./Engine/Sound/Sm):01027 [5]     9429            lda   VolFlutter,y             ; This just decrements the flutter to keep it in place; no more volume changes in this list
9189 8002             (./Engine/Sound/Sm):01028 [2]     9431            suba  #2                       ; Put index back (before final volume value)
918B A729             (./Engine/Sound/Sm):01029 [5]     9436            sta   VolFlutter,y             ; Loop back and update volume
                      (./Engine/Sound/Sm):01030                         
918D                  (./Engine/Sound/Sm):01031                 PSGDoVolFX
918D E627             (./Engine/Sound/Sm):01032 [5]     9441            ldb   Volume,y
918F F791BB           (./Engine/Sound/Sm):01033 [5]     9446            stb   DynVol+1
9192 A628             (./Engine/Sound/Sm):01034 [5]     9451            lda   VoiceIndex,y
9194 271A             (./Engine/Sound/Sm):01035 [3]     9454            beq   PSGUpdateVol             ; If tone is zero, jump to PSGUpdateVol
                      (./Engine/Sound/Sm):01036                                 
9196                  (./Engine/Sound/Sm):01037                 PSGFlutter
9196 48               (./Engine/Sound/Sm):01038 [2]     9456            asla
9197 8E92CD           (./Engine/Sound/Sm):01039 [3]     9459            ldx   #PSG_FlutterTbl
919A AE86             (./Engine/Sound/Sm):01040 [6]     9465            ldx   a,x
919C A629             (./Engine/Sound/Sm):01041 [5]     9470            lda   VolFlutter,y
919E 6C29             (./Engine/Sound/Sm):01042 [7]     9477            inc   VolFlutter,y        
91A0 A686             (./Engine/Sound/Sm):01043 [5]     9482            lda   a,x
91A2 2A04             (./Engine/Sound/Sm):01044 [3]     9485            bpl   @a
91A4 8180             (./Engine/Sound/Sm):01045 [2]     9487            cmpa  #$80
91A6 27DF             (./Engine/Sound/Sm):01046 [3]     9490            beq   VolEnvHold
91A8 B791AC           (./Engine/Sound/Sm):01047 [5]     9495    @a      sta   >*+4
91AB CB00             (./Engine/Sound/Sm):01048 [2]     9497            addb  #0
91AD F791BB           (./Engine/Sound/Sm):01049 [5]     9502            stb   DynVol+1
                      (./Engine/Sound/Sm):01050                                 
91B0                  (./Engine/Sound/Sm):01051                 PSGUpdateVol                
91B0 A6A4             (./Engine/Sound/Sm):01052 [4]     9506            lda   PlaybackControl,y
91B2 8502             (./Engine/Sound/Sm):01053 [2]     9508            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
91B4 261D             (./Engine/Sound/Sm):01054 [3]     9511            bne   PSGDoModulation          ; If so, branch           
91B6 8510             (./Engine/Sound/Sm):01055 [2]     9513            bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
91B8 2610             (./Engine/Sound/Sm):01056 [3]     9516            bne   @b                       ; If so, branch
91BA C600             (./Engine/Sound/Sm):01057 [2]     9518    DynVol  ldb   #0                       ; (dynamic) volume
91BC C110             (./Engine/Sound/Sm):01058 [2]     9520            cmpb  #$10
91BE 2502             (./Engine/Sound/Sm):01059 [3]     9523            blo   @a
91C0 C60F             (./Engine/Sound/Sm):01060 [2]     9525            ldb   #$0F
91C2 EB21             (./Engine/Sound/Sm):01061 [5]     9530    @a      addb  VoiceControl,y
91C4 CA10             (./Engine/Sound/Sm):01062 [2]     9532            orb   #$10
91C6 D7FF             (./Engine/Sound/Sm):01063 [4]     9536            stb   <PSG
91C8 2009             (./Engine/Sound/Sm):01064 [3]     9539            bra   PSGDoModulation        
91CA A6A810           (./Engine/Sound/Sm):01065 [5]     9544    @b      lda   NoteFillMaster,y         ; If you get here, then "do not attack next note" was set...
91CD 27EB             (./Engine/Sound/Sm):01066 [3]     9547            beq   DynVol                   ; If it's zero, then just process normally
91CF A62F             (./Engine/Sound/Sm):01067 [5]     9552            lda   NoteFillTimeout,y        
91D1 26E7             (./Engine/Sound/Sm):01068 [3]     9555            bne   DynVol                   ; If it's not zero, then just process normally
                      (./Engine/Sound/Sm):01069                         
91D3                  (./Engine/Sound/Sm):01070                 PSGDoModulation  
91D3 A6A4             (./Engine/Sound/Sm):01071 [4]     9559            lda   PlaybackControl,y
91D5 8502             (./Engine/Sound/Sm):01072 [2]     9561            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
91D7 2701             (./Engine/Sound/Sm):01073 [3]     9564            beq   @a
91D9 39               (./Engine/Sound/Sm):01074 [5]     9569            rts                            ; If so, quit        
91DA 8508             (./Engine/Sound/Sm):01075 [2]     9571    @a      bita  #$08                     ; Is bit 3 (08h) "modulation on" set on playback?
91DC 2601             (./Engine/Sound/Sm):01076 [3]     9574            bne   @b
91DE 39               (./Engine/Sound/Sm):01077 [5]     9579            rts                            ; If not, quit        
91DF A6A813           (./Engine/Sound/Sm):01078 [5]     9584    @b      lda   ModulationWait,y         ; 'ww' period of time before modulation starts
91E2 2704             (./Engine/Sound/Sm):01079 [3]     9587            beq   @c                       ; if zero, go to it!
91E4 6AA813           (./Engine/Sound/Sm):01080 [7]     9594            dec   ModulationWait,y         ; Otherwise, decrement timer
91E7 39               (./Engine/Sound/Sm):01081 [5]     9599            rts                            ; return if decremented
91E8 6AA814           (./Engine/Sound/Sm):01082 [7]     9606    @c      dec   ModulationSpeed,y        ; Decrement modulation speed counter
91EB 2701             (./Engine/Sound/Sm):01083 [3]     9609            beq   @d
91ED 39               (./Engine/Sound/Sm):01084 [5]     9614            rts                            ; Return if not yet zero
91EE AEA811           (./Engine/Sound/Sm):01085 [6]     9620    @d      ldx   ModulationPtr,y
91F1 A601             (./Engine/Sound/Sm):01086 [5]     9625            lda   1,x
91F3 A7A814           (./Engine/Sound/Sm):01087 [5]     9630            sta   ModulationSpeed,y
91F6 A6A816           (./Engine/Sound/Sm):01088 [5]     9635            lda   ModulationSteps,y
91F9 2609             (./Engine/Sound/Sm):01089 [3]     9638            bne   @e
91FB A603             (./Engine/Sound/Sm):01090 [5]     9643            lda   3,x
91FD A7A816           (./Engine/Sound/Sm):01091 [5]     9648            sta   ModulationSteps,y     
9200 60A815           (./Engine/Sound/Sm):01092 [7]     9655            neg   ModulationDelta,y
9203 39               (./Engine/Sound/Sm):01093 [5]     9660            rts                
9204 6AA816           (./Engine/Sound/Sm):01094 [7]     9667    @e      dec   ModulationSteps,y
9207 E6A815           (./Engine/Sound/Sm):01095 [5]     9672            ldb   ModulationDelta,y
920A 1D               (./Engine/Sound/Sm):01096 [2]     9674            sex
920B E3A817           (./Engine/Sound/Sm):01097 [7]     9681            addd  ModulationVal,y
920E EDA817           (./Engine/Sound/Sm):01098 [6]     9687            std   ModulationVal,y        
                      (./Engine/Sound/Sm):01099                               
9211                  (./Engine/Sound/Sm):01100                 PSGUpdateFreq2
9211 E6A819           (./Engine/Sound/Sm):01101 [5]     9692            ldb   Detune,y
9214 1D               (./Engine/Sound/Sm):01102 [2]     9694            sex
9215 E32D             (./Engine/Sound/Sm):01103 [7]     9701            addd  NextData,y               ; apply detune but don't update stored frequency
9217 E3A817           (./Engine/Sound/Sm):01104 [7]     9708            addd  ModulationVal,y          ; add modulation effect
921A FD922E           (./Engine/Sound/Sm):01105 [6]     9714            std   @dyn+1
921D C40F             (./Engine/Sound/Sm):01106 [2]     9716            andb  #$0F                     ; Keep only lower four bits (first PSG reg write only applies d0-d3 of freq)
921F A621             (./Engine/Sound/Sm):01107 [5]     9721            lda   VoiceControl,y
9221 81E0             (./Engine/Sound/Sm):01108 [2]     9723            cmpa  #$E0
9223 2604             (./Engine/Sound/Sm):01109 [3]     9726            bne   @a
9225 CBC0             (./Engine/Sound/Sm):01110 [2]     9728            addb  #$C0
9227 2002             (./Engine/Sound/Sm):01111 [3]     9731            bra   @b
9229 EB21             (./Engine/Sound/Sm):01112 [5]     9736    @a      addb  VoiceControl,y           ; Get "voice control" byte...
922B D7FF             (./Engine/Sound/Sm):01113 [4]     9740    @b      stb   <PSG
922D CC0000           (./Engine/Sound/Sm):01114 [3]     9743    @dyn    ldd   #0
                      (./Engine/Sound/Sm):01115                         _lsrd
9230 44               (            _lsrd):00001 [2]     9745            lsra
9231 56               (            _lsrd):00002 [2]     9747            rorb
                      (./Engine/Sound/Sm):01116                         _lsrd
9232 44               (            _lsrd):00001 [2]     9749            lsra
9233 56               (            _lsrd):00002 [2]     9751            rorb
                      (./Engine/Sound/Sm):01117                         _lsrd
9234 44               (            _lsrd):00001 [2]     9753            lsra
9235 56               (            _lsrd):00002 [2]     9755            rorb
                      (./Engine/Sound/Sm):01118                         _lsrd              
9236 44               (            _lsrd):00001 [2]     9757            lsra
9237 56               (            _lsrd):00002 [2]     9759            rorb
9238 D7FF             (./Engine/Sound/Sm):01119 [4]     9763            stb   <PSG
923A 39               (./Engine/Sound/Sm):01120 [5]     9768            rts        
                      (./Engine/Sound/Sm):01121                  
                      (./Engine/Sound/Sm):01122                 ; 70 notes (Note value $81=C3 $C7=G#8) with direct access
                      (./Engine/Sound/Sm):01123                 ; (Note value $C8 is reserved for PSG3 to drive noise PSG4)
                      (./Engine/Sound/Sm):01124                 ; Other notes can be accessed by transpose
923B                  (./Engine/Sound/Sm):01125                 PSGFrequencies
923B 03F803C00388     (./Engine/Sound/Sm):01126                         fdb                                                         $03F8,$03C0,$0388 ; A2 - B2
9241 0356032702FA02CF (./Engine/Sound/Sm):01127                         fdb   $0356,$0327,$02FA,$02CF,$02A5,$0281,$025C,$023B,$021A,$01FC,$01E0,$01C4 ; C3 - B3
     02A50281025C023B
     021A01FC01E001C4
9259 01AB0193017D0167 (./Engine/Sound/Sm):01128                         fdb   $01AB,$0193,$017D,$0167,$0152,$0140,$012E,$011D,$010D,$00FE,$00F0,$00E2 ; C4 - B4
     01520140012E011D
     010D00FE00F000E2
9271 00D500C900BE00B3 (./Engine/Sound/Sm):01129                         fdb   $00D5,$00C9,$00BE,$00B3,$00A9,$00A0,$0097,$008E,$0086,$007F,$0078,$0071 ; C5 - B5
     00A900A00097008E
     0086007F00780071
9289 006A0064005F0059 (./Engine/Sound/Sm):01130                         fdb   $006A,$0064,$005F,$0059,$0054,$0050,$004B,$0047,$0043,$0040,$003C,$0039 ; C6 - B6
     00540050004B0047
     00430040003C0039
92A1 00350032002F002C (./Engine/Sound/Sm):01131                         fdb   $0035,$0032,$002F,$002C,$002A,$0028,$0025,$0023,$0022,$0020,$001F,$001D ; C7 - B7
     002A002800250023
     00220020001F001D
92B9 001A001900170016 (./Engine/Sound/Sm):01132                         fdb   $001A,$0019,$0017,$0016,$0015,$0014,$0012,$0011,$0010,$0001             ; C8 - G#8
     0015001400120011
     00100001
                      (./Engine/Sound/Sm):01133                         ; (Last 3 values are also used for channel 3 when driving noise channel. $0000 doesn't work for real SN76489 chip, so was replaced by $0001 value)
                      (./Engine/Sound/Sm):01134                 
92CD                  (./Engine/Sound/Sm):01135                 PSG_FlutterTbl
                      (./Engine/Sound/Sm):01136                     ; Basically, for any tone 0-11, dynamic volume adjustments are applied to produce a pseudo-decay,
                      (./Engine/Sound/Sm):01137                     ; or sometimes a ramp up for "soft" sounds, or really any other volume effect you might want!
                      (./Engine/Sound/Sm):01138                 
                      (./Engine/Sound/Sm):01139                     ; Remember on PSG that the higher the value, the quieter it gets (it's attenuation, not volume);
                      (./Engine/Sound/Sm):01140                     ; 0 is thus loudest, and increasing values decay, until level $F (silent)
92CD 0000             (./Engine/Sound/Sm):01141                         fdb   0 ; saves a dec instruction in table lookup
92CF 92E9930093079318 (./Engine/Sound/Sm):01142                         fdb   Flutter1,Flutter2,Flutter3,Flutter4
92D7 93239332935C9378 (./Engine/Sound/Sm):01143                         fdb   Flutter5,Flutter6,Flutter7,Flutter8
92DF 93A093B193EF940B (./Engine/Sound/Sm):01144                         fdb   Flutter9,Flutter10,Flutter11,Flutter12
92E7 948B             (./Engine/Sound/Sm):01145                         fdb   Flutter13
92E9                  (./Engine/Sound/Sm):01146                 Flutter1
92E9 0000000101010202 (./Engine/Sound/Sm):01147                         fcb   0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5
     0203030304040405
92F9 05050606060780   (./Engine/Sound/Sm):01148                         fcb   5,5,6,6,6,7,$80
9300                  (./Engine/Sound/Sm):01149                 Flutter2
9300 00020406081080   (./Engine/Sound/Sm):01150                         fcb   0,2,4,6,8,$10,$80
9307                  (./Engine/Sound/Sm):01151                 Flutter3
9307 0000010102020303 (./Engine/Sound/Sm):01152                         fcb   0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,$80
     0404050506060707
     80
9318                  (./Engine/Sound/Sm):01153                 Flutter4
9318 0000020304040505 (./Engine/Sound/Sm):01154                         fcb   0,0,2,3,4,4,5,5,5,6,$80
     050680
9323                  (./Engine/Sound/Sm):01155                 Flutter5
9323 0303030202020201 (./Engine/Sound/Sm):01156                         fcb   3,3,3,2,2,2,2,1,1,1,0,0,0,0,$80
     01010000000080
9332                  (./Engine/Sound/Sm):01157                 Flutter6
9332 0000000000000000 (./Engine/Sound/Sm):01158                         fcb   0,0,0,0,0,0,0,0,0,0,1,1
     00000101
933E 0101010101010101 (./Engine/Sound/Sm):01159                         fcb   1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2
     0101010102020202
934E 0202020203030303 (./Engine/Sound/Sm):01160                         fcb   2,2,2,2,3,3,3,3,3,3,3,3,4,$80
     030303030480
935C                  (./Engine/Sound/Sm):01161                 Flutter7
935C 0000000000000101 (./Engine/Sound/Sm):01162                         fcb   0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,2
     0101010202020202
936C 0303030404040505 (./Engine/Sound/Sm):01163                         fcb   3,3,3,4,4,4,5,5,5,6,7,$80
     05060780
9378                  (./Engine/Sound/Sm):01164                 Flutter8
9378 0000000000010101 (./Engine/Sound/Sm):01165                         fcb   0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,2
     0101020202020202
9388 0303030303040404 (./Engine/Sound/Sm):01166                         fcb   3,3,3,3,3,4,4,4,4,4,5,5,5,5,5,6
     0404050505050506
9398 0606060607070780 (./Engine/Sound/Sm):01167                         fcb   6,6,6,6,7,7,7,$80
93A0                  (./Engine/Sound/Sm):01168                 Flutter9
93A0 0001020304050607 (./Engine/Sound/Sm):01169                         fcb   0,1,2,3,4,5,6,7,8,9,$0A,$0B,$0C,$0D,$0E,$0F,$80
     08090A0B0C0D0E0F
     80
93B1                  (./Engine/Sound/Sm):01170                 Flutter10
93B1 0000000000000000 (./Engine/Sound/Sm):01171                         fcb   0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1
     0000010101010101
93C1 0101010101010101 (./Engine/Sound/Sm):01172                         fcb   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     0101010101010101
93D1 0101010101010101 (./Engine/Sound/Sm):01173                         fcb   1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2
     0202020202020202
93E1 0202030303030303 (./Engine/Sound/Sm):01174                         fcb   2,2,3,3,3,3,3,3,3,3,3,3,4,$80
     030303030480
93EF                  (./Engine/Sound/Sm):01175                 Flutter11
93EF 0404040303030202 (./Engine/Sound/Sm):01176                         fcb   4,4,4,3,3,3,2,2,2,1,1,1,1,1,1,1
     0201010101010101
93FF 0202020202030303 (./Engine/Sound/Sm):01177                         fcb   2,2,2,2,2,3,3,3,3,3,4,$80
     03030480
940B                  (./Engine/Sound/Sm):01178                 Flutter12
940B 0404030302020101 (./Engine/Sound/Sm):01179                         fcb   4,4,3,3,2,2,1,1,1,1,1,1,1,1,1,1
     0101010101010101
941B 0101010101010101 (./Engine/Sound/Sm):01180                         fcb   1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2
     0101020202020202
942B 0202020202020202 (./Engine/Sound/Sm):01181                         fcb   2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3
     0202020202020303
943B 0303030303030303 (./Engine/Sound/Sm):01182                         fcb   3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
     0303030303030303
944B 0303040404040404 (./Engine/Sound/Sm):01183                         fcb   3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4
     0404040404040404
945B 0404040404040505 (./Engine/Sound/Sm):01184                         fcb   4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5
     0505050505050505
946B 0505050505050505 (./Engine/Sound/Sm):01185                         fcb   5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6
     0505060606060606
947B 0606060606060606 (./Engine/Sound/Sm):01186                         fcb   6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,$80
     0606060606060780
948B                  (./Engine/Sound/Sm):01187                 Flutter13
948B 0E0D0C0B0A090807 (./Engine/Sound/Sm):01188                         fcb   $0E,$0D,$0C,$0B,$0A,9,8,7,6,5,4,3,2,1,0,$80
     0605040302010080
                      (./Engine/Sound/Sm):01189                 
                      (./Engine/Sound/Sm):01190                 ;   END of PSG_FlutterTbl ---------------------------                 
                      (./Engine/Sound/Sm):01191                           
                      (./Engine/Sound/Sm):01192                 ******************************************************************************
                      (./Engine/Sound/Sm):01193                 * PlaySound - Load and play a new sound effect
                      (./Engine/Sound/Sm):01194                 *
                      (./Engine/Sound/Sm):01195                 * receives in X the address of the sound
                      (./Engine/Sound/Sm):01196                 * destroys X
                      (./Engine/Sound/Sm):01197                 ******************************************************************************          
                      (./Engine/Sound/Sm):01198                 
949B                  (./Engine/Sound/Sm):01199                 SFXTrackOffs        
949B 8AB2             (./Engine/Sound/Sm):01200                         fdb   SFXFM3                   ; identified by Track id 8002 in smps sfx file (for Sonic 2 compatibility)
949D 8AB2             (./Engine/Sound/Sm):01201                         fdb   SFXFM3                   ; identified by Track id 8003 in smps sfx file        
949F 8ADC             (./Engine/Sound/Sm):01202                         fdb   SFXFM4                   ; identified by Track id 8004 in smps sfx file        
94A1 8B06             (./Engine/Sound/Sm):01203                         fdb   SFXFM5                   ; identified by Track id 8005 in smps sfx file
94A3 8B30             (./Engine/Sound/Sm):01204                         fdb   SFXPSG1                  ; identified by Track id 8080 in smps sfx file
94A5 8B5A             (./Engine/Sound/Sm):01205                         fdb   SFXPSG2                  ; identified by Track id 80A0 in smps sfx file
94A7 8B84             (./Engine/Sound/Sm):01206                         fdb   SFXPSG3                  ; identified by Track id 80C0 in smps sfx file
94A9 8B84             (./Engine/Sound/Sm):01207                         fdb   SFXPSG3                  ; identified by Track id 80E0 in smps sfx file
                      (./Engine/Sound/Sm):01208                 
94AB                  (./Engine/Sound/Sm):01209                 MusicTrackOffs
94AB 890E             (./Engine/Sound/Sm):01210                         fdb   SongFM3
94AD 890E             (./Engine/Sound/Sm):01211                         fdb   SongFM3        
94AF 8938             (./Engine/Sound/Sm):01212                         fdb   SongFM4        
94B1 8962             (./Engine/Sound/Sm):01213                         fdb   SongFM5
94B3 8A34             (./Engine/Sound/Sm):01214                         fdb   SongPSG1
94B5 8A5E             (./Engine/Sound/Sm):01215                         fdb   SongPSG2
94B7 8A88             (./Engine/Sound/Sm):01216                         fdb   SongPSG3
94B9 8A88             (./Engine/Sound/Sm):01217                         fdb   SongPSG3
                      (./Engine/Sound/Sm):01218                 
94BB                  (./Engine/Sound/Sm):01219                 PlaySound
94BB 3466             (./Engine/Sound/Sm):01220 [11]    9779            pshs  d,y,u
                      (./Engine/Sound/Sm):01221                 
                      (./Engine/Sound/Sm):01222                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
94BD B6E7E6           (    _GetCartPageA):00004 [5]     9784            lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
94C0 B79574           (./Engine/Sound/Sm):01223 [5]     9789            sta   PlaySound_end+1          ; backup data page
94C3 A684             (./Engine/Sound/Sm):01224 [4]     9793            lda   ,x                       ; get memory page that contains track data
94C5 B78BB3           (./Engine/Sound/Sm):01225 [5]     9798            sta   SoundPage
94C8 AE01             (./Engine/Sound/Sm):01226 [6]     9804            ldx   1,x                      ; get ptr to track data
94CA BF8BB6           (./Engine/Sound/Sm):01227 [6]     9810            stx   SoundData
                      (./Engine/Sound/Sm):01228                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
94CD B7E7E6           (    _SetCartPageA):00004 [5]     9815            sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./Engine/Sound/Sm):01229                         
94D0 EC84             (./Engine/Sound/Sm):01230 [5]     9820            ldd   SMPS_SFX_VOICE,x
94D2 F38BB6           (./Engine/Sound/Sm):01231 [7]     9827            addd  SoundData   
94D5 FD8885           (./Engine/Sound/Sm):01232 [6]     9833            std   Smps.SFXVoiceTblPtr
                      (./Engine/Sound/Sm):01233                 
94D8 EC02             (./Engine/Sound/Sm):01234 [6]     9839            ldd   SMPS_SFX_TEMPO_NB_CH,x   ; init process for each track
94DA B7954F           (./Engine/Sound/Sm):01235 [5]     9844            sta   @dyna+2        
94DD F7957A           (./Engine/Sound/Sm):01236 [5]     9849            stb   PS_cnt
94E0 3004             (./Engine/Sound/Sm):01237 [5]     9854            leax  SMPS_SFX_HDR_LEN,x        
94E2 CE94AB           (./Engine/Sound/Sm):01238 [3]     9857    @a      ldu   #MusicTrackOffs
94E5 EC84             (./Engine/Sound/Sm):01239 [5]     9862            ldd   SMPS_SFX_TRK_CH,x        ; read playbackcontrol and voice id
94E7 FD9555           (./Engine/Sound/Sm):01240 [6]     9868            std   @dynb+1
94EA 5D               (./Engine/Sound/Sm):01241 [2]     9870            tstb
94EB 2B08             (./Engine/Sound/Sm):01242 [3]     9873            bmi   @psg
94ED C002             (./Engine/Sound/Sm):01243 [2]     9875            subb  #2                       ; this is an fm track
94EF 58               (./Engine/Sound/Sm):01244 [2]     9877            aslb                           ; transform track ref to an index: $02,$04,$05 => 0,4,6
94F0 10AEC5           (./Engine/Sound/Sm):01245 [7]     9884            ldy   b,u    
94F3 2013             (./Engine/Sound/Sm):01246 [3]     9887            bra   @c
94F5 C1C0             (./Engine/Sound/Sm):01247 [2]     9889    @psg    cmpb  #$C0
94F7 2608             (./Engine/Sound/Sm):01248 [3]     9892            bne   @b
94F9 86DF             (./Engine/Sound/Sm):01249 [2]     9894            lda   #$DF                     ; set silence on PSG3
94FB 97FF             (./Engine/Sound/Sm):01250 [4]     9898            sta   <PSG
94FD 86FF             (./Engine/Sound/Sm):01251 [2]     9900            lda   #$FF
94FF 97FF             (./Engine/Sound/Sm):01252 [4]     9904            sta   <PSG
9501 54               (./Engine/Sound/Sm):01253 [2]     9906    @b      lsrb                           ; this is a psg track
9502 54               (./Engine/Sound/Sm):01254 [2]     9908            lsrb
9503 54               (./Engine/Sound/Sm):01255 [2]     9910            lsrb
9504 54               (./Engine/Sound/Sm):01256 [2]     9912            lsrb                           ; transform track ref to an index: $80,$A0,$C0,$E0 => 8,10,12,14
9505 10AEC5           (./Engine/Sound/Sm):01257 [7]     9919            ldy   b,u    
9508 A6A4             (./Engine/Sound/Sm):01258 [4]     9923    @c      lda   PlaybackControl,y        ; y (hl) ptr to Music Track
950A 8A04             (./Engine/Sound/Sm):01259 [2]     9925            ora   #$04                     ; Set "SFX is overriding this track!" bit
950C A7A4             (./Engine/Sound/Sm):01260 [4]     9929            sta   PlaybackControl,y
950E CE949B           (./Engine/Sound/Sm):01261 [3]     9932            ldu   #SFXTrackOffs
9511 EEC5             (./Engine/Sound/Sm):01262 [6]     9938            ldu   b,u                      ; u (ix) ptr to SFX Track
9513 CC0000           (./Engine/Sound/Sm):01263 [3]     9941            ldd   #0                       ; clear SFX Track
9516 EDC4             (./Engine/Sound/Sm):01264 [5]     9946            std   ,u
9518 ED42             (./Engine/Sound/Sm):01265 [6]     9952            std   2,u
951A ED44             (./Engine/Sound/Sm):01266 [6]     9958            std   4,u
951C ED46             (./Engine/Sound/Sm):01267 [6]     9964            std   6,u
951E ED48             (./Engine/Sound/Sm):01268 [6]     9970            std   8,u
9520 ED4A             (./Engine/Sound/Sm):01269 [6]     9976            std   10,u
9522 ED4C             (./Engine/Sound/Sm):01270 [6]     9982            std   12,u
9524 ED4E             (./Engine/Sound/Sm):01271 [6]     9988            std   14,u
9526 EDC810           (./Engine/Sound/Sm):01272 [6]     9994            std   16,u
9529 EDC812           (./Engine/Sound/Sm):01273 [6]     10000           std   18,u
952C EDC814           (./Engine/Sound/Sm):01274 [6]     10006           std   20,u
952F EDC816           (./Engine/Sound/Sm):01275 [6]     10012           std   22,u
9532 EDC818           (./Engine/Sound/Sm):01276 [6]     10018           std   24,u
9535 EDC81A           (./Engine/Sound/Sm):01277 [6]     10024           std   26,u
9538 EDC81C           (./Engine/Sound/Sm):01278 [6]     10030           std   28,u
953B EDC81E           (./Engine/Sound/Sm):01279 [6]     10036           std   30,u
953E EDC820           (./Engine/Sound/Sm):01280 [6]     10042           std   32,u
9541 EDC822           (./Engine/Sound/Sm):01281 [6]     10048           std   34,u
9544 EDC824           (./Engine/Sound/Sm):01282 [6]     10054           std   36,u
9547 EDC826           (./Engine/Sound/Sm):01283 [6]     10060           std   38,u
954A EDC828           (./Engine/Sound/Sm):01284 [6]     10066           std   40,u
954D CC0100           (./Engine/Sound/Sm):01285 [3]     10069   @dyna   ldd   #$0100                   ; (dynamic) TempoDivider
9550 A74B             (./Engine/Sound/Sm):01286 [5]     10074           sta   DurationTimeout,u        ; current duration timeout to 1 (will expire immediately and thus update)
9552 E743             (./Engine/Sound/Sm):01287 [5]     10079           stb   TempoDivider,u
9554 CC0000           (./Engine/Sound/Sm):01288 [3]     10082   @dynb   ldd   #0                       ; (dynamic)
9557 A7C4             (./Engine/Sound/Sm):01289 [4]     10086           sta   PlaybackControl,u
9559 E741             (./Engine/Sound/Sm):01290 [5]     10091           stb   VoiceControl,u
955B C62A             (./Engine/Sound/Sm):01291 [2]     10093           ldb   #GoSubStack
955D E74A             (./Engine/Sound/Sm):01292 [5]     10098           stb   StackPointer,u           ; Reset track "gosub" stack
955F EC02             (./Engine/Sound/Sm):01293 [6]     10104           ldd   SMPS_SFX_TRK_DATA_PTR,x 
9561 F38BB6           (./Engine/Sound/Sm):01294 [7]     10111           addd  SoundData
9564 ED44             (./Engine/Sound/Sm):01295 [6]     10117           std   DataPointer,u
9566 EC04             (./Engine/Sound/Sm):01296 [6]     10123           ldd   SMPS_SFX_TRK_TR_VOL_PTR,x
9568 ED46             (./Engine/Sound/Sm):01297 [6]     10129           std   TranspAndVolume,u        
956A 3006             (./Engine/Sound/Sm):01298 [5]     10134           leax  SMPS_SFX_TRK_HDR_LEN,x
956C 7A957A           (./Engine/Sound/Sm):01299 [7]     10141           dec   PS_cnt    
956F 1026FF6F         (./Engine/Sound/Sm):01300 [5+?]   10146           lbne  @a  
                      (./Engine/Sound/Sm):01301                 
9573                  (./Engine/Sound/Sm):01302                 PlaySound_end
9573 8600             (./Engine/Sound/Sm):01303 [2]     10148           lda   #0
                      (./Engine/Sound/Sm):01304                         _SetCartPageA          
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
9575 B7E7E6           (    _SetCartPageA):00004 [5]     10153           sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
9578 35E6             (./Engine/Sound/Sm):01305 [13]    10166           puls  d,y,u,pc
                      (./Engine/Sound/Sm):01306                 
957A 00               (./Engine/Sound/Sm):01307                 PS_cnt  fcb   0
                      (./Engine/Sound/Sm):01308                         
                      (./Engine/Sound/Sm):01309                 ******************************************************************************
                      (./Engine/Sound/Sm):01310                 * CoordFlag
                      (./Engine/Sound/Sm):01311                 ******************************************************************************
                      (./Engine/Sound/Sm):01312                 
957B                  (./Engine/Sound/Sm):01313                 CoordFlag
957B C0E0             (./Engine/Sound/Sm):01314 [2]     10168           subb  #$E0
957D 58               (./Engine/Sound/Sm):01315 [2]     10170           aslb
957E CE9583           (./Engine/Sound/Sm):01316 [3]     10173           ldu   #CoordFlagLookup
9581 6ED5             (./Engine/Sound/Sm):01317 [7]     10180           jmp   [b,u] 
                      (./Engine/Sound/Sm):01318                 
9583                  (./Engine/Sound/Sm):01319                 CoordFlagLookup
9583 97B2             (./Engine/Sound/Sm):01320                         fdb   cfSkip1               ; E0 -- unsupported (panning)
9585 95C3             (./Engine/Sound/Sm):01321                         fdb   cfDetune              ; E1 -- done
9587 97B2             (./Engine/Sound/Sm):01322                         fdb   cfSkip1               ; E2 -- unsupported
9589 95D9             (./Engine/Sound/Sm):01323                         fdb   cfJumpReturn          ; E3 -- done
958B 95E2             (./Engine/Sound/Sm):01324                         fdb   cfFadeInToPrevious    ; E4 --todo
958D 95E3             (./Engine/Sound/Sm):01325                         fdb   cfSetTempoDivider     ; E5 -- done
958F 95E8             (./Engine/Sound/Sm):01326                         fdb   cfChangeFMVolume      ; E6 -- done
9591 9615             (./Engine/Sound/Sm):01327                         fdb   cfPreventAttack       ; E7 -- done
9593 961C             (./Engine/Sound/Sm):01328                         fdb   cfNoteFill            ; E8 -- done
9595 9624             (./Engine/Sound/Sm):01329                         fdb   cfChangeTransposition ; E9 -- done
9597 962B             (./Engine/Sound/Sm):01330                         fdb   cfSetTempo            ; EA -- done
9599 9631             (./Engine/Sound/Sm):01331                         fdb   cfSetTempoMod         ; EB -- done
959B 964F             (./Engine/Sound/Sm):01332                         fdb   cfChangePSGVolume     ; EC -- done
959D 97B4             (./Engine/Sound/Sm):01333                         fdb   cfNop                 ; ED -- unsupported
959F 97B4             (./Engine/Sound/Sm):01334                         fdb   cfNop                 ; EE -- unsupported
95A1 9656             (./Engine/Sound/Sm):01335                         fdb   cfSetVoice            ; EF -- done
95A3 969C             (./Engine/Sound/Sm):01336                         fdb   cfModulation          ; F0 -- done
95A5 96C0             (./Engine/Sound/Sm):01337                         fdb   cfEnableModulation    ; F1 -- done
95A7 96C7             (./Engine/Sound/Sm):01338                         fdb   cfStopTrack           ; F2 -- done
95A9 9768             (./Engine/Sound/Sm):01339                         fdb   cfSetPSGNoise         ; F3 -- done
95AB 977A             (./Engine/Sound/Sm):01340                         fdb   cfDisableModulation   ; F4 -- done
95AD 9781             (./Engine/Sound/Sm):01341                         fdb   cfSetPSGTone          ; F5 -- done
95AF 9786             (./Engine/Sound/Sm):01342                         fdb   cfJumpTo              ; F6 -- done
95B1 978B             (./Engine/Sound/Sm):01343                         fdb   cfRepeatAtPos         ; F7 -- done
95B3 97A3             (./Engine/Sound/Sm):01344                         fdb   cfJumpToGosub         ; F8 -- done
95B5 97B4             (./Engine/Sound/Sm):01345                         fdb   cfNop                 ; F9 -- unsupported
95B7 97B4             (./Engine/Sound/Sm):01346                         fdb   cfNop                 ; FA -- free
95B9 97B4             (./Engine/Sound/Sm):01347                         fdb   cfNop                 ; FB -- free
95BB 97B4             (./Engine/Sound/Sm):01348                         fdb   cfNop                 ; FC -- free
95BD 97B4             (./Engine/Sound/Sm):01349                         fdb   cfNop                 ; FD -- free
95BF 97B4             (./Engine/Sound/Sm):01350                         fdb   cfNop                 ; FE -- free
95C1 97B4             (./Engine/Sound/Sm):01351                         fdb   cfNop                 ; FF -- free
                      (./Engine/Sound/Sm):01352                 
                      (./Engine/Sound/Sm):01353                 ; (via Saxman's doc): Alter note values by xx
                      (./Engine/Sound/Sm):01354                 ; More or less a pitch bend; this is applied to the frequency as a signed value
                      (./Engine/Sound/Sm):01355                 ;              
95C3                  (./Engine/Sound/Sm):01356                 cfDetune
95C3 A680             (./Engine/Sound/Sm):01357 [6]     10186           lda   ,x+
                      (./Engine/Sound/Sm):01358                         ; this should be replaced by a conversion of the smps music file
                      (./Engine/Sound/Sm):01359                         ; here to play sonic2 files only
95C5 E621             (./Engine/Sound/Sm):01360 [5]     10191           ldb   VoiceControl,y           ; read channel nb
95C7 2B0C             (./Engine/Sound/Sm):01361 [3]     10194           bmi   @a                       ; Is voice control bit 7 (80h) a PSG track set?        
95C9 47               (./Engine/Sound/Sm):01362 [2]     10196           asra                           ; ratio freq btw YM2612 and YM2413 is 3.73, so tame a bit (/3)
95CA B795D2           (./Engine/Sound/Sm):01363 [5]     10201           sta   @dyna+1
95CD 47               (./Engine/Sound/Sm):01364 [2]     10203           asra        
95CE B795D4           (./Engine/Sound/Sm):01365 [5]     10208           sta   @dynb+1
95D1 8600             (./Engine/Sound/Sm):01366 [2]     10210   @dyna   lda   #0           
95D3 8000             (./Engine/Sound/Sm):01367 [2]     10212   @dynb   suba  #0         
                      (./Engine/Sound/Sm):01368                         ; end of tmp code
95D5 A7A819           (./Engine/Sound/Sm):01369 [5]     10217   @a      sta   Detune,y
95D8 39               (./Engine/Sound/Sm):01370 [5]     10222           rts           
                      (./Engine/Sound/Sm):01371                 
                      (./Engine/Sound/Sm):01372                 ; Return (Sonic 1 & 2)
                      (./Engine/Sound/Sm):01373                 ;
95D9                  (./Engine/Sound/Sm):01374                 cfJumpReturn
95D9 A62A             (./Engine/Sound/Sm):01375 [5]     10227           lda   StackPointer,y           ; retrieve stack ptr
95DB AEA6             (./Engine/Sound/Sm):01376 [6]     10233           ldx   a,y                      ; load return address
95DD 8B02             (./Engine/Sound/Sm):01377 [2]     10235           adda  #2                       
95DF A72A             (./Engine/Sound/Sm):01378 [5]     10240           sta   StackPointer,y           ; free stack position
95E1 39               (./Engine/Sound/Sm):01379 [5]     10245           rts         
                      (./Engine/Sound/Sm):01380                         
95E2                  (./Engine/Sound/Sm):01381                 cfFadeInToPrevious
95E2 39               (./Engine/Sound/Sm):01382 [5]     10250           rts   
                      (./Engine/Sound/Sm):01383                 
                      (./Engine/Sound/Sm):01384                 ; Change tempo divider to xx
                      (./Engine/Sound/Sm):01385                 ;        
95E3                  (./Engine/Sound/Sm):01386                 cfSetTempoDivider
95E3 A680             (./Engine/Sound/Sm):01387 [6]     10256           lda   ,x+
95E5 A723             (./Engine/Sound/Sm):01388 [5]     10261           sta   TempoDivider,y
95E7 39               (./Engine/Sound/Sm):01389 [5]     10266           rts    
                      (./Engine/Sound/Sm):01390                         
                      (./Engine/Sound/Sm):01391                 ; (via Saxman's doc): Change channel volume BY xx; xx is signed
                      (./Engine/Sound/Sm):01392                 ;
95E8                  (./Engine/Sound/Sm):01393                 cfChangeFMVolume
95E8 A627             (./Engine/Sound/Sm):01394 [5]     10271           lda   Volume,y                 ; apply volume attenuation change
95EA AB80             (./Engine/Sound/Sm):01395 [6]     10277           adda  ,x+
95EC A727             (./Engine/Sound/Sm):01396 [5]     10282           sta   Volume,y
95EE E6A4             (./Engine/Sound/Sm):01397 [4]     10286           ldb   PlaybackControl,y
95F0 C504             (./Engine/Sound/Sm):01398 [2]     10288           bitb  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
95F2 2620             (./Engine/Sound/Sm):01399 [3]     10291           bne   @rts        
95F4 44               (./Engine/Sound/Sm):01400 [2]     10293           lsra                           ; volume attenuation is unsigned
95F5 44               (./Engine/Sound/Sm):01401 [2]     10295           lsra
95F6 44               (./Engine/Sound/Sm):01402 [2]     10297           lsra
95F7 B7960B           (./Engine/Sound/Sm):01403 [5]     10302           sta   @dyn1+1
95FA 8630             (./Engine/Sound/Sm):01404 [2]     10304           lda   #$30
95FC AB21             (./Engine/Sound/Sm):01405 [5]     10309           adda  VoiceControl,y
95FE 97FC             (./Engine/Sound/Sm):01406 [4]     10313           sta   <YM2413_A0
9600 E6A81F           (./Engine/Sound/Sm):01407 [5]     10318           ldb   InstrAndVolume,y         
9603 1F98             (./Engine/Sound/Sm):01408 [6]     10324           tfr   b,a
9605 8A0F             (./Engine/Sound/Sm):01409 [2]     10326           ora   #$0F                     ; set maximum attenuation for compare        
9607 B7960D           (./Engine/Sound/Sm):01410 [5]     10331           sta   @dyn2+1
960A CB00             (./Engine/Sound/Sm):01411 [2]     10333   @dyn1   addb  #0                       ; (dynamic) add global volume attenuation to actual voice
960C C100             (./Engine/Sound/Sm):01412 [2]     10335   @dyn2   cmpb  #0                       ; (dynamic) test if overflow of attenuation value
960E 2502             (./Engine/Sound/Sm):01413 [3]     10338           blo   @write                   ; attenuation < F and no overflow
9610 1F89             (./Engine/Sound/Sm):01414 [6]     10344           tfr   a,b                      ; set maximum attenuation (F)
9612 D7FD             (./Engine/Sound/Sm):01415 [4]     10348   @write  stb   <YM2413_D0        
9614 39               (./Engine/Sound/Sm):01416 [5]     10353   @rts    rts     
                      (./Engine/Sound/Sm):01417                 
9615                  (./Engine/Sound/Sm):01418                 cfPreventAttack
9615 A6A4             (./Engine/Sound/Sm):01419 [4]     10357           lda   PlaybackControl,y
9617 8A10             (./Engine/Sound/Sm):01420 [2]     10359           ora   #$10
9619 A7A4             (./Engine/Sound/Sm):01421 [4]     10363           sta   PlaybackControl,y        ; Set bit 4 (10h) on playback control; do not attack next note
961B 39               (./Engine/Sound/Sm):01422 [5]     10368           rts      
                      (./Engine/Sound/Sm):01423                 
                      (./Engine/Sound/Sm):01424                 ; (via Saxman's doc): set note fill amount to xx
                      (./Engine/Sound/Sm):01425                 ;
961C                  (./Engine/Sound/Sm):01426                 cfNoteFill 
961C A680             (./Engine/Sound/Sm):01427 [6]     10374           lda   ,x+
961E A72F             (./Engine/Sound/Sm):01428 [5]     10379           sta   NoteFillTimeout,y
9620 A7A810           (./Engine/Sound/Sm):01429 [5]     10384           sta   NoteFillMaster,y
9623 39               (./Engine/Sound/Sm):01430 [5]     10389           rts          
                      (./Engine/Sound/Sm):01431                 
                      (./Engine/Sound/Sm):01432                 ; (via Saxman's doc): add xx to channel key
                      (./Engine/Sound/Sm):01433                 ;
9624                  (./Engine/Sound/Sm):01434                 cfChangeTransposition
9624 A626             (./Engine/Sound/Sm):01435 [5]     10394           lda   Transpose,y
9626 AB80             (./Engine/Sound/Sm):01436 [6]     10400           adda  ,x+
9628 A726             (./Engine/Sound/Sm):01437 [5]     10405           sta   Transpose,y
962A 39               (./Engine/Sound/Sm):01438 [5]     10410           rts
                      (./Engine/Sound/Sm):01439                 
                      (./Engine/Sound/Sm):01440                 ; (via Saxman's doc): set music tempo to xx
                      (./Engine/Sound/Sm):01441                 ;
962B                  (./Engine/Sound/Sm):01442                 cfSetTempo 
962B A680             (./Engine/Sound/Sm):01443 [6]     10416           lda   ,x+
962D B7887C           (./Engine/Sound/Sm):01444 [5]     10421           sta   Smps.CurrentTempo
9630 39               (./Engine/Sound/Sm):01445 [5]     10426           rts          
                      (./Engine/Sound/Sm):01446                 
                      (./Engine/Sound/Sm):01447                 ; (via Saxman's doc): Change Tempo Modifier to xx for ALL channels
                      (./Engine/Sound/Sm):01448                 ;
9631                  (./Engine/Sound/Sm):01449                 cfSetTempoMod
9631 A680             (./Engine/Sound/Sm):01450 [6]     10432           lda   ,x+
9633 B78893           (./Engine/Sound/Sm):01451 [5]     10437           sta   SongDAC.TempoDivider
9636 B788BD           (./Engine/Sound/Sm):01452 [5]     10442           sta   SongFM1.TempoDivider
9639 B788E7           (./Engine/Sound/Sm):01453 [5]     10447           sta   SongFM2.TempoDivider
963C B78911           (./Engine/Sound/Sm):01454 [5]     10452           sta   SongFM3.TempoDivider
963F B7893B           (./Engine/Sound/Sm):01455 [5]     10457           sta   SongFM4.TempoDivider
9642 B78965           (./Engine/Sound/Sm):01456 [5]     10462           sta   SongFM5.TempoDivider
                      (./Engine/Sound/Sm):01457                         ;sta   SongFM6.TempoDivider
                      (./Engine/Sound/Sm):01458                         ;sta   SongFM7.TempoDivider
                      (./Engine/Sound/Sm):01459                         ;sta   SongFM8.TempoDivider
                      (./Engine/Sound/Sm):01460                         ;sta   SongFM9.TempoDivider        
9645 B78A37           (./Engine/Sound/Sm):01461 [5]     10467           sta   SongPSG1.TempoDivider
9648 B78A61           (./Engine/Sound/Sm):01462 [5]     10472           sta   SongPSG2.TempoDivider
964B B78A8B           (./Engine/Sound/Sm):01463 [5]     10477           sta   SongPSG3.TempoDivider
                      (./Engine/Sound/Sm):01464                         ;sta   SongPSG4.TempoDivider        
964E 39               (./Engine/Sound/Sm):01465 [5]     10482           rts        
                      (./Engine/Sound/Sm):01466                 
964F                  (./Engine/Sound/Sm):01467                 cfChangePSGVolume
964F A627             (./Engine/Sound/Sm):01468 [5]     10487           lda   Volume,y
9651 AB80             (./Engine/Sound/Sm):01469 [6]     10493           adda  ,x+
9653 A727             (./Engine/Sound/Sm):01470 [5]     10498           sta   Volume,y
9655 39               (./Engine/Sound/Sm):01471 [5]     10503           rts    
                      (./Engine/Sound/Sm):01472                         
                      (./Engine/Sound/Sm):01473                 ; (via Saxman's doc): set voice selection to xx
                      (./Engine/Sound/Sm):01474                 ;
9656                  (./Engine/Sound/Sm):01475                 cfSetVoice
9656 E680             (./Engine/Sound/Sm):01476 [6]     10509           ldb   ,x+
9658 E728             (./Engine/Sound/Sm):01477 [5]     10514           stb   VoiceIndex,y             ; save voice index to restore voice after sfx        
965A A6A4             (./Engine/Sound/Sm):01478 [4]     10518           lda   PlaybackControl,y
965C 8504             (./Engine/Sound/Sm):01479 [2]     10520           bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
965E 263B             (./Engine/Sound/Sm):01480 [3]     10523           bne   @rts                     ; yes skip YM command
9660 B68BAF           (./Engine/Sound/Sm):01481 [5]     10528           lda   DoSFXFlag
9663 2B05             (./Engine/Sound/Sm):01482 [3]     10531           bmi   @a
9665 FE8883           (./Engine/Sound/Sm):01483 [6]     10537           ldu   Smps.VoiceTblPtr
9668 2003             (./Engine/Sound/Sm):01484 [3]     10540           bra   @b
966A FE8885           (./Engine/Sound/Sm):01485 [6]     10546   @a      ldu   Smps.SFXVoiceTblPtr
966D                  (./Engine/Sound/Sm):01486                 @b        
966D A621             (./Engine/Sound/Sm):01487 [5]     10551           lda   VoiceControl,y           ; read channel nb   
966F 8B30             (./Engine/Sound/Sm):01488 [2]     10553           adda  #$30
9671 97FC             (./Engine/Sound/Sm):01489 [4]     10557           sta   <YM2413_A0
9673 58               (./Engine/Sound/Sm):01490 [2]     10559           aslb
9674 ECC5             (./Engine/Sound/Sm):01491 [6]     10565           ldd   b,u
9676 A7A81F           (./Engine/Sound/Sm):01492 [5]     10570           sta   InstrAndVolume,y        
9679 E7A81E           (./Engine/Sound/Sm):01493 [5]     10575           stb   InstrTranspose,y
967C E627             (./Engine/Sound/Sm):01494 [5]     10580           ldb   Volume,y                 ; apply current track attenuation to voice
967E 54               (./Engine/Sound/Sm):01495 [2]     10582           lsrb                           ; volume attenuation is unsigned
967F 54               (./Engine/Sound/Sm):01496 [2]     10584           lsrb
9680 54               (./Engine/Sound/Sm):01497 [2]     10586           lsrb
9681 F79692           (./Engine/Sound/Sm):01498 [5]     10591           stb   @dyn1+1
9684 C630             (./Engine/Sound/Sm):01499 [2]     10593           ldb   #$30
9686 EB21             (./Engine/Sound/Sm):01500 [5]     10598           addb  VoiceControl,y
9688 D7FC             (./Engine/Sound/Sm):01501 [4]     10602           stb   <YM2413_A0
968A 1F89             (./Engine/Sound/Sm):01502 [6]     10608           tfr   a,b
968C CA0F             (./Engine/Sound/Sm):01503 [2]     10610           orb   #$0F                     ; set maximum attenuation for compare        
968E F79694           (./Engine/Sound/Sm):01504 [5]     10615           stb   @dyn2+1
9691 8B00             (./Engine/Sound/Sm):01505 [2]     10617   @dyn1   adda  #0                       ; (dynamic) add global volume attenuation
9693 8100             (./Engine/Sound/Sm):01506 [2]     10619   @dyn2   cmpa  #0                       ; (dynamic) test if overflow of attenuation value
9695 2502             (./Engine/Sound/Sm):01507 [3]     10622           blo   @write                   ; attenuation < F and no overflow
9697 1F98             (./Engine/Sound/Sm):01508 [6]     10628           tfr   b,a                      ; set maximum attenuation (F)
9699 97FD             (./Engine/Sound/Sm):01509 [4]     10632   @write  sta   <YM2413_D0     
969B 39               (./Engine/Sound/Sm):01510 [5]     10637   @rts    rts
                      (./Engine/Sound/Sm):01511                 
                      (./Engine/Sound/Sm):01512                 ; (via Saxman's doc): F0wwxxyyzz - modulation
                      (./Engine/Sound/Sm):01513                 ; o        ww - Wait for ww period of time before modulation starts
                      (./Engine/Sound/Sm):01514                 ; o        xx - Modulation Speed
                      (./Engine/Sound/Sm):01515                 ; o        yy - Modulation change per Mod. Step
                      (./Engine/Sound/Sm):01516                 ; o        zz - Number of steps in modulation
                      (./Engine/Sound/Sm):01517                 ;
969C                  (./Engine/Sound/Sm):01518                 cfModulation
969C A6A4             (./Engine/Sound/Sm):01519 [4]     10641           lda   PlaybackControl,y
969E 8A08             (./Engine/Sound/Sm):01520 [2]     10643           ora   #$08
96A0 A7A4             (./Engine/Sound/Sm):01521 [4]     10647           sta   PlaybackControl,y        ; Set bit 3 (08h) of "playback control" byte (modulation on)
96A2 AFA811           (./Engine/Sound/Sm):01522 [6]     10653           stx   ModulationPtr,y          ; Back up modulation setting address
96A5                  (./Engine/Sound/Sm):01523                 SetModulation
96A5 EC81             (./Engine/Sound/Sm):01524 [8]     10661           ldd   ,x++                     ; also read ModulationSpeed
96A7 EDA813           (./Engine/Sound/Sm):01525 [6]     10667           std   ModulationWait,y         ; also write ModulationSpeed
96AA EC81             (./Engine/Sound/Sm):01526 [8]     10675           ldd   ,x++                     ; also read ModulationSteps
96AC A7A815           (./Engine/Sound/Sm):01527 [5]     10680           sta   ModulationDelta,y        
96AF 54               (./Engine/Sound/Sm):01528 [2]     10682           lsrb                           ; divide number of steps by 2
96B0 E7A816           (./Engine/Sound/Sm):01529 [5]     10687           stb   ModulationSteps,y
96B3 A6A4             (./Engine/Sound/Sm):01530 [4]     10691           lda   PlaybackControl,y
96B5 8510             (./Engine/Sound/Sm):01531 [2]     10693           bita  #$10                     ; Is bit 4 "do not attack next note" (10h) set?
96B7 2606             (./Engine/Sound/Sm):01532 [3]     10696           bne   @a                       ; If so, quit!
96B9 CC0000           (./Engine/Sound/Sm):01533 [3]     10699           ldd   #0
96BC EDA817           (./Engine/Sound/Sm):01534 [6]     10705           std   ModulationVal,y          ; Clear modulation value
96BF 39               (./Engine/Sound/Sm):01535 [5]     10710   @a      rts         
                      (./Engine/Sound/Sm):01536                 
                      (./Engine/Sound/Sm):01537                 ; (via Saxman's doc): Turn on modulation
                      (./Engine/Sound/Sm):01538                 ;
96C0                  (./Engine/Sound/Sm):01539                 cfEnableModulation
96C0 A6A4             (./Engine/Sound/Sm):01540 [4]     10714           lda   PlaybackControl,y
96C2 8A08             (./Engine/Sound/Sm):01541 [2]     10716           ora   #$08
96C4 A7A4             (./Engine/Sound/Sm):01542 [4]     10720           sta   PlaybackControl,y        ; Set bit 3 (08h) of "playback control" byte (modulation on)
96C6 39               (./Engine/Sound/Sm):01543 [5]     10725           rts   
                      (./Engine/Sound/Sm):01544                 
                      (./Engine/Sound/Sm):01545                 ; (via Saxman's doc): stop the track
                      (./Engine/Sound/Sm):01546                 ;
96C7                  (./Engine/Sound/Sm):01547                 cfStopTrack
96C7 A6A4             (./Engine/Sound/Sm):01548 [4]     10729           lda   PlaybackControl,y
96C9 846F             (./Engine/Sound/Sm):01549 [2]     10731           anda  #$6F                     ; clear playback byte bit 7 (80h) -- currently playing (not anymore)
96CB A7A4             (./Engine/Sound/Sm):01550 [4]     10735           sta   PlaybackControl,y        ; clear playback byte bit 4 (10h) -- do not attack
                      (./Engine/Sound/Sm):01551                         
96CD E621             (./Engine/Sound/Sm):01552 [5]     10740           ldb   VoiceControl,y           ; read channel nb
96CF 2B12             (./Engine/Sound/Sm):01553 [3]     10743           bmi   @a                       ; Is voice control bit 7 (80h) a PSG track set?
                      (./Engine/Sound/Sm):01554                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y               
96D1 8504             (       _FMNoteOff):00001 [2]     10745           bita  #$04                     ; Is SFX overriding set?
96D3 260C             (       _FMNoteOff):00002 [3]     10748           bne   @skip                    ; if true skip note off, sfx is playing        
96D5 CB20             (       _FMNoteOff):00003 [2]     10750           addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
96D7 D7FC             (       _FMNoteOff):00004 [4]     10754           stb   <YM2413_A0
96D9 E622             (       _FMNoteOff):00005 [5]     10759           ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
96DB C4EF             (       _FMNoteOff):00006 [2]     10761           andb  #$EF                     ; clear bit 4 (10h) Key Off
96DD D7FD             (       _FMNoteOff):00007 [4]     10765           stb   <YM2413_D0               ; send to YM
96DF E722             (       _FMNoteOff):00008 [5]     10770           stb   NoteControl,y               
     96E1             (       _FMNoteOff):00009                 @skip   equ   *        
96E1 2008             (./Engine/Sound/Sm):01555 [3]     10773           bra   @b
96E3                  (./Engine/Sound/Sm):01556                 @a      _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
96E3 8504             (      _PSGNoteOff):00001 [2]     10775           bita  #$04                     ; Is SFX overriding set?
96E5 2604             (      _PSGNoteOff):00002 [3]     10778           bne   @skip                    ; if true skip note off, sfx is playing               
96E7 CA1F             (      _PSGNoteOff):00003 [2]     10780           orb   #$1F                     ; Volume Off
96E9 D7FF             (      _PSGNoteOff):00004 [4]     10784           stb   <PSG
     96EB             (      _PSGNoteOff):00005                 @skip   equ   *        
96EB B68BAF           (./Engine/Sound/Sm):01557 [5]     10789   @b      lda   DoSFXFlag
96EE 2B03             (./Engine/Sound/Sm):01558 [3]     10792           bmi   @d
96F0 3540             (./Engine/Sound/Sm):01559 [7]     10799   @rts    puls  u                        ; removing return address from stack; will not return to coord flag loop
96F2 39               (./Engine/Sound/Sm):01560 [5]     10804           rts
96F3 A621             (./Engine/Sound/Sm):01561 [5]     10809   @d      lda   VoiceControl,y           ; this is SFX Track
96F5 102B0050         (./Engine/Sound/Sm):01562 [5+?]   10814           lbmi  @psgsfx
96F9 CE94AB           (./Engine/Sound/Sm):01563 [3]     10817           ldu   #MusicTrackOffs          ; get back the overriden music track
96FC 8002             (./Engine/Sound/Sm):01564 [2]     10819           suba  #2
96FE 48               (./Engine/Sound/Sm):01565 [2]     10821           asla                           ; transform track ref to an index: $02,$04,$05 => 0,4,6
96FF EEC6             (./Engine/Sound/Sm):01566 [6]     10827           ldu   a,u                      ; U ptr to same FM track ID than SFX but for Music, Y still for FM SFX Track
9701 A6C4             (./Engine/Sound/Sm):01567 [4]     10831           lda   PlaybackControl,u
9703 8504             (./Engine/Sound/Sm):01568 [2]     10833           bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
9705 27E9             (./Engine/Sound/Sm):01569 [3]     10836           beq   @rts                     ; if not skip this part (i.e. if SFX was not overriding this track, then nothing to restore)
9707 84FB             (./Engine/Sound/Sm):01570 [2]     10838           anda  #$FB                     ; Clear SFX is overriding this track from playback control
9709 8A02             (./Engine/Sound/Sm):01571 [2]     10840           ora   #$02                     ; Set bit 1 (track is at rest)
970B A7C4             (./Engine/Sound/Sm):01572 [4]     10844           sta   PlaybackControl,u
970D B68BB2           (./Engine/Sound/Sm):01573 [5]     10849           lda   MusicPage
                      (./Engine/Sound/Sm):01574                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
9710 B7E7E6           (    _SetCartPageA):00004 [5]     10854           sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
9713 BE8883           (./Engine/Sound/Sm):01575 [6]     10860           ldx   Smps.VoiceTblPtr       ; Restore Voice to music channel (x can be erased because we are stopping track read)        
9716 E648             (./Engine/Sound/Sm):01576 [5]     10865           ldb   VoiceIndex,u
9718 A641             (./Engine/Sound/Sm):01577 [5]     10870           lda   VoiceControl,u           ; read channel nb  
971A 8B30             (./Engine/Sound/Sm):01578 [2]     10872           adda  #$30
971C 97FC             (./Engine/Sound/Sm):01579 [4]     10876           sta   <YM2413_A0
971E 58               (./Engine/Sound/Sm):01580 [2]     10878           aslb
971F EC85             (./Engine/Sound/Sm):01581 [6]     10884           ldd   b,x
9721 A7C81F           (./Engine/Sound/Sm):01582 [5]     10889           sta   InstrAndVolume,u        
9724 E7C81E           (./Engine/Sound/Sm):01583 [5]     10894           stb   InstrTranspose,u
9727 E647             (./Engine/Sound/Sm):01584 [5]     10899           ldb   Volume,u                 ; apply current track attenuation to voice
9729 54               (./Engine/Sound/Sm):01585 [2]     10901           lsrb                           ; volume attenuation is unsigned
972A 54               (./Engine/Sound/Sm):01586 [2]     10903           lsrb
972B 54               (./Engine/Sound/Sm):01587 [2]     10905           lsrb
972C F79737           (./Engine/Sound/Sm):01588 [5]     10910           stb   @dyn1+1
972F 1F89             (./Engine/Sound/Sm):01589 [6]     10916           tfr   a,b
9731 CA0F             (./Engine/Sound/Sm):01590 [2]     10918           orb   #$0F                     ; set maximum attenuation for compare        
9733 F79739           (./Engine/Sound/Sm):01591 [5]     10923           stb   @dyn2+1
9736 8B00             (./Engine/Sound/Sm):01592 [2]     10925   @dyn1   adda  #0                       ; (dynamic) add global volume attenuation
9738 8100             (./Engine/Sound/Sm):01593 [2]     10927   @dyn2   cmpa  #0                       ; (dynamic) test if overflow of attenuation value
973A 2502             (./Engine/Sound/Sm):01594 [3]     10930           blo   @write                   ; attenuation < F and no overflow
973C 1F98             (./Engine/Sound/Sm):01595 [6]     10936           tfr   b,a                      ; set maximum attenuation (F)
973E 97FD             (./Engine/Sound/Sm):01596 [4]     10940   @write  sta   <YM2413_D0   
9740 B68BB3           (./Engine/Sound/Sm):01597 [5]     10945           lda   SoundPage
                      (./Engine/Sound/Sm):01598                         _SetCartPageA  
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
9743 B7E7E6           (    _SetCartPageA):00004 [5]     10950           sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
9746 3540             (./Engine/Sound/Sm):01599 [7]     10957           puls  u                        ; removing return address from stack; will not return to coord flag loop
9748 39               (./Engine/Sound/Sm):01600 [5]     10962           rts                   
9749 CE94AB           (./Engine/Sound/Sm):01601 [3]     10965   @psgsfx ldu   #MusicTrackOffs
974C 44               (./Engine/Sound/Sm):01602 [2]     10967           lsra                           ; this is a psg fx track
974D 44               (./Engine/Sound/Sm):01603 [2]     10969           lsra
974E 44               (./Engine/Sound/Sm):01604 [2]     10971           lsra
974F 44               (./Engine/Sound/Sm):01605 [2]     10973           lsra                           ; transform track ref to an index: $80,$A0,$C0,$E0 => 8,10,12,14
9750 EEC6             (./Engine/Sound/Sm):01606 [6]     10979           ldu   a,u                      ; U ptr to same FM track ID than SFX but for Music, Y still for FM SFX Track
9752 A6C4             (./Engine/Sound/Sm):01607 [4]     10983           lda   PlaybackControl,u
9754 84FB             (./Engine/Sound/Sm):01608 [2]     10985           anda  #$FB                     ; Clear SFX is overriding this track from playback control
9756 8A02             (./Engine/Sound/Sm):01609 [2]     10987           ora   #$02                     ; Set bit 1 (track is at rest)
9758 A7C4             (./Engine/Sound/Sm):01610 [4]     10991           sta   PlaybackControl,u
975A A641             (./Engine/Sound/Sm):01611 [5]     10996           lda   VoiceControl,u           ; read channel nb
975C 81E0             (./Engine/Sound/Sm):01612 [2]     10998           cmpa  #$E0                     ; Is this a PSG 3 noise (not tone) track?
975E 2605             (./Engine/Sound/Sm):01613 [3]     11001           bne   @c                       ; If it isn't, don't do next part (non-PSG Noise doesn't restore)
9760 A6C81B           (./Engine/Sound/Sm):01614 [5]     11006           lda   PSGNoise,u               ; Get PSG noise setting
9763 97FF             (./Engine/Sound/Sm):01615 [4]     11010           sta   <PSG                     ; Write it to PSG
9765 3540             (./Engine/Sound/Sm):01616 [7]     11017   @c      puls  u                        ; removing return address from stack; will not return to coord flag loop                        
9767 39               (./Engine/Sound/Sm):01617 [5]     11022           rts
                      (./Engine/Sound/Sm):01618                 
                      (./Engine/Sound/Sm):01619                 ; (via Saxman's doc): Change current PSG noise to xx (For noise channel, E0-E7)
                      (./Engine/Sound/Sm):01620                 ;
9768                  (./Engine/Sound/Sm):01621                 cfSetPSGNoise
9768 86E0             (./Engine/Sound/Sm):01622 [2]     11024           lda   #$E0
976A A721             (./Engine/Sound/Sm):01623 [5]     11029           sta   VoiceControl,y
976C A680             (./Engine/Sound/Sm):01624 [6]     11035           lda   ,x+
976E A7A81B           (./Engine/Sound/Sm):01625 [5]     11040           sta   PSGNoise,y
9771 E6A4             (./Engine/Sound/Sm):01626 [4]     11044           ldb   PlaybackControl,y
9773 C504             (./Engine/Sound/Sm):01627 [2]     11046           bitb  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
9775 2602             (./Engine/Sound/Sm):01628 [3]     11049           bne   @rts        
9777 97FF             (./Engine/Sound/Sm):01629 [4]     11053           sta   <PSG
9779 39               (./Engine/Sound/Sm):01630 [5]     11058   @rts    rts        
                      (./Engine/Sound/Sm):01631                 
977A                  (./Engine/Sound/Sm):01632                 cfDisableModulation
977A A6A4             (./Engine/Sound/Sm):01633 [4]     11062           lda   PlaybackControl,y
977C 84F7             (./Engine/Sound/Sm):01634 [2]     11064           anda  #$F7
977E A7A4             (./Engine/Sound/Sm):01635 [4]     11068           sta   PlaybackControl,y        ; Clear bit 3 (08h) of "playback control" byte (modulation off)        
9780 39               (./Engine/Sound/Sm):01636 [5]     11073           rts  
                      (./Engine/Sound/Sm):01637                 
                      (./Engine/Sound/Sm):01638                 ; (via Saxman's doc): Change current PSG tone to xx
                      (./Engine/Sound/Sm):01639                 ;
9781                  (./Engine/Sound/Sm):01640                 cfSetPSGTone
9781 A680             (./Engine/Sound/Sm):01641 [6]     11079           lda   ,x+
9783 A728             (./Engine/Sound/Sm):01642 [5]     11084           sta   VoiceIndex,y
9785 39               (./Engine/Sound/Sm):01643 [5]     11089           rts         
                      (./Engine/Sound/Sm):01644                 
                      (./Engine/Sound/Sm):01645                 ; (via Saxman's doc):  $F6zzzz - jump to position
                      (./Engine/Sound/Sm):01646                 ;    * zzzz - position to loop back to (negative offset)
                      (./Engine/Sound/Sm):01647                 ;
9786                  (./Engine/Sound/Sm):01648                 cfJumpTo
9786 EC84             (./Engine/Sound/Sm):01649 [5]     11094           ldd   ,x
9788 308B             (./Engine/Sound/Sm):01650 [8]     11102           leax  d,x
978A 39               (./Engine/Sound/Sm):01651 [5]     11107           rts             
                      (./Engine/Sound/Sm):01652                 
                      (./Engine/Sound/Sm):01653                 ; (via Saxman's doc): $F7xxyyzzzz - repeat section of music
                      (./Engine/Sound/Sm):01654                 ;    * xx - loop index, for loops within loops without confusing the engine.
                      (./Engine/Sound/Sm):01655                 ;          o EXAMPLE: Some notes, then a section that is looped twice, then some more notes, and finally the whole thing is looped three times.
                      (./Engine/Sound/Sm):01656                 ;            The "inner" loop (the section that is looped twice) would have an xx of 01, looking something along the lines of F70102zzzz, whereas the "outside" loop (the whole thing loop) would have an xx of 00, looking something like F70003zzzz.
                      (./Engine/Sound/Sm):01657                 ;    * yy - number of times to repeat
                      (./Engine/Sound/Sm):01658                 ;          o NOTE: This includes the initial encounter of the F7 flag, not number of times to repeat AFTER hitting the flag.
                      (./Engine/Sound/Sm):01659                 ;    * zzzz - position to loop back to (negative offset)
                      (./Engine/Sound/Sm):01660                 ;
978B                  (./Engine/Sound/Sm):01661                 cfRepeatAtPos
978B EC81             (./Engine/Sound/Sm):01662 [8]     11115           ldd   ,x++                     ; Loop index is in 'a'
978D 8B20             (./Engine/Sound/Sm):01663 [2]     11117           adda  #LoopCounters            ; Add to make loop index offset
978F 33A6             (./Engine/Sound/Sm):01664 [5]     11122           leau  a,y
9791 6DC4             (./Engine/Sound/Sm):01665 [6]     11128           tst   ,u
9793 2602             (./Engine/Sound/Sm):01666 [3]     11131           bne   @a
9795 E7C4             (./Engine/Sound/Sm):01667 [4]     11135           stb   ,u                       ; Otherwise, set it to the new number of repeats  
9797 6AC4             (./Engine/Sound/Sm):01668 [6]     11141   @a      dec   ,u                       ; One less loop
9799 2705             (./Engine/Sound/Sm):01669 [3]     11144           beq   @b                       ; If counted to zero, skip the rest of this (hence start loop count of 1 terminates the loop without ever looping)
979B EC84             (./Engine/Sound/Sm):01670 [5]     11149           ldd   ,x
979D 308B             (./Engine/Sound/Sm):01671 [8]     11157           leax  d,x                      ; loop back
979F 39               (./Engine/Sound/Sm):01672 [5]     11162           rts
97A0 3002             (./Engine/Sound/Sm):01673 [5]     11167   @b      leax  2,x
97A2 39               (./Engine/Sound/Sm):01674 [5]     11172           rts        
                      (./Engine/Sound/Sm):01675                 
                      (./Engine/Sound/Sm):01676                 ; (via Saxman's doc): jump to position yyyy (keep previous position in memory for returning)
97A3                  (./Engine/Sound/Sm):01677                 cfJumpToGosub
97A3 A62A             (./Engine/Sound/Sm):01678 [5]     11177           lda   StackPointer,y
97A5 8002             (./Engine/Sound/Sm):01679 [2]     11179           suba  #2
97A7 A72A             (./Engine/Sound/Sm):01680 [5]     11184           sta   StackPointer,y           ; move stack backward
97A9 3302             (./Engine/Sound/Sm):01681 [5]     11189           leau  2,x                      ; move x to return address
97AB EFA6             (./Engine/Sound/Sm):01682 [6]     11195           stu   a,y                      ; store return address to stack
97AD EC84             (./Engine/Sound/Sm):01683 [5]     11200           ldd   ,x                       ; read sub address
97AF 308B             (./Engine/Sound/Sm):01684 [8]     11208           leax  d,x                      ; gosub
97B1 39               (./Engine/Sound/Sm):01685 [5]     11213           rts        
                      (./Engine/Sound/Sm):01686                 
97B2                  (./Engine/Sound/Sm):01687                 cfSkip1
97B2 3001             (./Engine/Sound/Sm):01688 [5]     11218           leax  1,x
97B4                  (./Engine/Sound/Sm):01689                 cfNop 
97B4 39               (./Engine/Sound/Sm):01690 [5]     11223           rts                                                 
                      (./Engine/Sound/Sm):01691                 
                      (./Engine/Sound/Sm):01692                 * YM2413 Instrument presets
                      (./Engine/Sound/Sm):01693                 * -------------------------
                      (./Engine/Sound/Sm):01694                 *
                      (./Engine/Sound/Sm):01695                 * /* Order of array = { modulator, carrier } */
                      (./Engine/Sound/Sm):01696                 * typedef struct {
                      (./Engine/Sound/Sm):01697                 *     Bit8u tl;
                      (./Engine/Sound/Sm):01698                 *     Bit8u dc;
                      (./Engine/Sound/Sm):01699                 *     Bit8u dm;
                      (./Engine/Sound/Sm):01700                 *     Bit8u fb;
                      (./Engine/Sound/Sm):01701                 *     Bit8u am[2];
                      (./Engine/Sound/Sm):01702                 *     Bit8u vib[2];
                      (./Engine/Sound/Sm):01703                 *     Bit8u et[2];
                      (./Engine/Sound/Sm):01704                 *     Bit8u ksr[2];
                      (./Engine/Sound/Sm):01705                 *     Bit8u multi[2];
                      (./Engine/Sound/Sm):01706                 *     Bit8u ksl[2];
                      (./Engine/Sound/Sm):01707                 *     Bit8u ar[2];
                      (./Engine/Sound/Sm):01708                 *     Bit8u dr[2];
                      (./Engine/Sound/Sm):01709                 *     Bit8u sl[2];
                      (./Engine/Sound/Sm):01710                 *     Bit8u rr[2];
                      (./Engine/Sound/Sm):01711                 * } opll_patch_t;
                      (./Engine/Sound/Sm):01712                 
                      (./Engine/Sound/Sm):01713                 * static const opll_patch_t patch_ds1001[opll_patch_max] = {
                      (./Engine/Sound/Sm):01714                 *     { 0x05, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0e, 0x08 },{ 0x08, 0x01 },{ 0x04, 0x02 },{ 0x02, 0x07 } }, * 1 : Violin
                      (./Engine/Sound/Sm):01715                 *     { 0x14, 0x00, 0x01, 0x05,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0d, 0x0f },{ 0x08, 0x06 },{ 0x02, 0x01 },{ 0x03, 0x02 } }, * 2 : Guitar
                      (./Engine/Sound/Sm):01716                 *     { 0x08, 0x00, 0x01, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x0f, 0x0b },{ 0x0a, 0x02 },{ 0x02, 0x01 },{ 0x00, 0x02 } }, * 3 : Piano
                      (./Engine/Sound/Sm):01717                 *     { 0x0c, 0x00, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x06 },{ 0x08, 0x04 },{ 0x06, 0x02 },{ 0x01, 0x07 } }, * 4 : Flute
                      (./Engine/Sound/Sm):01718                 *     { 0x1e, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x02, 0x01 },{ 0x00, 0x00 },{ 0x0e, 0x07 },{ 0x01, 0x06 },{ 0x00, 0x02 },{ 0x01, 0x08 } }, * 5 : Clarinet
                      (./Engine/Sound/Sm):01719                 *     { 0x06, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x02, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x0e },{ 0x03, 0x02 },{ 0x0f, 0x0f },{ 0x04, 0x04 } }, * 6 : Oboe
                      (./Engine/Sound/Sm):01720                 *     { 0x1d, 0x00, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x08, 0x08 },{ 0x02, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x07 } }, * 7 : Trumpet
                      (./Engine/Sound/Sm):01721                 *     { 0x22, 0x01, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x07 },{ 0x02, 0x02 },{ 0x00, 0x01 },{ 0x01, 0x07 } }, * 8 : Organ
                      (./Engine/Sound/Sm):01722                 *     { 0x25, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x05, 0x01 },{ 0x00, 0x00 },{ 0x04, 0x07 },{ 0x00, 0x03 },{ 0x07, 0x00 },{ 0x02, 0x01 } }, * 9 : Horn
                      (./Engine/Sound/Sm):01723                 *     { 0x0f, 0x00, 0x01, 0x07,{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x00 },{ 0x05, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x0a },{ 0x08, 0x05 },{ 0x05, 0x00 },{ 0x01, 0x02 } }, * A : Synthesizer
                      (./Engine/Sound/Sm):01724                 *     { 0x24, 0x00, 0x00, 0x07,{ 0x00, 0x01 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x07, 0x01 },{ 0x00, 0x00 },{ 0x0f, 0x0f },{ 0x08, 0x08 },{ 0x02, 0x01 },{ 0x02, 0x02 } }, * B : Harpsichord
                      (./Engine/Sound/Sm):01725                 *     { 0x11, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x03 },{ 0x00, 0x00 },{ 0x06, 0x07 },{ 0x05, 0x04 },{ 0x01, 0x01 },{ 0x08, 0x06 } }, * C : Vibraphone
                      (./Engine/Sound/Sm):01726                 *     { 0x13, 0x00, 0x00, 0x05,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x02 },{ 0x03, 0x00 },{ 0x0c, 0x09 },{ 0x09, 0x05 },{ 0x00, 0x00 },{ 0x03, 0x02 } }, * D : Synthesizer Bass
                      (./Engine/Sound/Sm):01727                 *     { 0x0c, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x03 },{ 0x00, 0x00 },{ 0x09, 0x0c },{ 0x04, 0x00 },{ 0x03, 0x0f },{ 0x03, 0x06 } }, * E : Acoustic Bass
                      (./Engine/Sound/Sm):01728                 *     { 0x0d, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x01 },{ 0x01, 0x02 },{ 0x00, 0x00 },{ 0x0c, 0x0d },{ 0x01, 0x05 },{ 0x05, 0x00 },{ 0x06, 0x06 } }, * F : Electric Guitar
                      (./Engine/Sound/Sm):01729                 *     /* Rhythm Patches: rows 1 and 4 are bass drum, 2 and 5 are Snare Drum & Hi-Hat, 3 and 6 are Tom and Top Cymbal */
                      (./Engine/Sound/Sm):01730                 *     { 0x18, 0x00, 0x01, 0x07,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x0d, 0x00 },{ 0x0f, 0x00 },{ 0x06, 0x00 },{ 0x0a, 0x00 } },
                      (./Engine/Sound/Sm):01731                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x0c, 0x00 },{ 0x08, 0x00 },{ 0x0a, 0x00 },{ 0x07, 0x00 } },
                      (./Engine/Sound/Sm):01732                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x05, 0x00 },{ 0x00, 0x00 },{ 0x0f, 0x00 },{ 0x08, 0x00 },{ 0x05, 0x00 },{ 0x09, 0x00 } },
                      (./Engine/Sound/Sm):01733                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0f },{ 0x00, 0x08 },{ 0x00, 0x06 },{ 0x00, 0x0d } },
                      (./Engine/Sound/Sm):01734                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0d },{ 0x00, 0x08 },{ 0x00, 0x06 },{ 0x00, 0x08 } },
                      (./Engine/Sound/Sm):01735                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0a },{ 0x00, 0x0a },{ 0x00, 0x05 },{ 0x00, 0x05 } }
                      (./Engine/Sound/Sm):01736                 * };             
                      (C:\Users\bhrou\gi):00068                         INCLUDE "./Engine/Irq/IrqSmps.asm"      
                      (./Engine/Irq/IrqS):00001                 * ---------------------------------------------------------------------------
                      (./Engine/Irq/IrqS):00002                 * IrqSmps
                      (./Engine/Irq/IrqS):00003                 * -------
                      (./Engine/Irq/IrqS):00004                 * IRQ Subroutine to play sound with SN76489/YM2413
                      (./Engine/Irq/IrqS):00005                 *
                      (./Engine/Irq/IrqS):00006                 * input REG : [dp] with value E7 (from Monitor ROM)
                      (./Engine/Irq/IrqS):00007                 * reset REG : none
                      (./Engine/Irq/IrqS):00008                 *
                      (./Engine/Irq/IrqS):00009                 * IrqOn
                      (./Engine/Irq/IrqS):00010                 * reset REG : [a]
                      (./Engine/Irq/IrqS):00011                 *
                      (./Engine/Irq/IrqS):00012                 * IrqOff
                      (./Engine/Irq/IrqS):00013                 * reset REG : [a]
                      (./Engine/Irq/IrqS):00014                 * ---------------------------------------------------------------------------
                      (./Engine/Irq/IrqS):00015                 
     6027             (./Engine/Irq/IrqS):00016                 irq_routine       equ $6027 
     E7C5             (./Engine/Irq/IrqS):00017                 irq_timer_ctrl    equ $E7C5 
     E7C6             (./Engine/Irq/IrqS):00018                 irq_timer         equ $E7C6
     4DFF             (./Engine/Irq/IrqS):00019                 irq_one_frame     equ 312*64-1               ; one frame timer (lines*cycles_per_lines-1), timer launch at -1
                      (./Engine/Irq/IrqS):00020                        
97B5                  (./Engine/Irq/IrqS):00021                 IrqSet50Hz
97B5 C642             (./Engine/Irq/IrqS):00022 [2]     11225           ldb   #$42
97B7 F7E7C5           (./Engine/Irq/IrqS):00023 [5]     11230           stb   irq_timer_ctrl                     ; timer precision x8
97BA CC97E0           (./Engine/Irq/IrqS):00024 [3]     11233           ldd   #IrqSmps
97BD FD6027           (./Engine/Irq/IrqS):00025 [6]     11239           std   irq_routine
97C0 8E4DFF           (./Engine/Irq/IrqS):00026 [3]     11242           ldx   #irq_one_frame                     ; on every frame
97C3 BFE7C6           (./Engine/Irq/IrqS):00027 [6]     11248           stx   irq_timer
97C6 BD97CA           (./Engine/Irq/IrqS):00028 [8]     11256           jsr   IrqOn   
97C9 39               (./Engine/Irq/IrqS):00029 [5]     11261           rts
                      (./Engine/Irq/IrqS):00030                        
97CA                  (./Engine/Irq/IrqS):00031                 IrqOn         
97CA B66019           (./Engine/Irq/IrqS):00032 [5]     11266           lda   $6019                           
97CD 8A20             (./Engine/Irq/IrqS):00033 [2]     11268           ora   #$20
97CF B76019           (./Engine/Irq/IrqS):00034 [5]     11273           sta   $6019                                   ; STATUS register
97D2 1CEF             (./Engine/Irq/IrqS):00035 [3]     11276           andcc #$EF                                    ; tell 6809 to activate irq
97D4 39               (./Engine/Irq/IrqS):00036 [5]     11281           rts
                      (./Engine/Irq/IrqS):00037                         
97D5                  (./Engine/Irq/IrqS):00038                 IrqOff 
97D5 B66019           (./Engine/Irq/IrqS):00039 [5]     11286           lda   $6019                           
97D8 84DF             (./Engine/Irq/IrqS):00040 [2]     11288           anda  #$DF
97DA B76019           (./Engine/Irq/IrqS):00041 [5]     11293           sta   $6019                                   ; STATUS register
97DD 1A10             (./Engine/Irq/IrqS):00042 [3]     11296           orcc  #$10                                    ; tell 6809 to activate irq
97DF 39               (./Engine/Irq/IrqS):00043 [5]     11301           rts
                      (./Engine/Irq/IrqS):00044                         
97E0                  (./Engine/Irq/IrqS):00045                 IrqSmps 
                      (./Engine/Irq/IrqS):00046                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
                      (    _GetCartPageA):00002                         jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
97E0 B6E7E6           (    _GetCartPageA):00004 [5]     11306           lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
97E3 B797FF           (./Engine/Irq/IrqS):00047 [5]     11311           sta   IrqSmps_end+1                           ; backup data page
                      (./Engine/Irq/IrqS):00048                         
97E6 FC75FE           (./Engine/Irq/IrqS):00049 [6]     11317           ldd   Vint_runcount
97E9 C30001           (./Engine/Irq/IrqS):00050 [4]     11321           addd  #1
97EC FD75FE           (./Engine/Irq/IrqS):00051 [6]     11327           std   Vint_runcount
                      (./Engine/Irq/IrqS):00052                         
97EF 10FF97FC         (./Engine/Irq/IrqS):00053 [7]     11334           sts   @a+2                                    ; backup system stack
97F3 10CE9826         (./Engine/Irq/IrqS):00054 [4]     11338           lds   #IRQSysStack                            ; set tmp system stack for IRQ 
97F7 BD8CF8           (./Engine/Irq/IrqS):00055 [8]     11346           jsr   MusicFrame
97FA 10CE0000         (./Engine/Irq/IrqS):00056 [4]     11350   @a      lds   #0                                      ; (dynamic) restore system stack   
                      (./Engine/Irq/IrqS):00057                         
97FE                  (./Engine/Irq/IrqS):00058                 IrqSmps_end        
97FE 8600             (./Engine/Irq/IrqS):00059 [2]     11352           lda   #$00                                    ; (dynamic)
                      (./Engine/Irq/IrqS):00060                         _SetCartPageA                                 ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
                      (    _SetCartPageA):00002                         jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
9800 B7E7E6           (    _SetCartPageA):00004 [5]     11357           sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
9803 7EE830           (./Engine/Irq/IrqS):00061 [4]     11361           jmp   $E830                                   ; return to caller
                      (./Engine/Irq/IrqS):00062                 
                      (./Engine/Irq/IrqS):00063                 ; This space allow the use of system stack inside IRQ calls
                      (./Engine/Irq/IrqS):00064                 ; otherwise the writes in sys stack will erase data when S is in use
                      (./Engine/Irq/IrqS):00065                 ; (outside of IRQ) for another task than sys stack, ex: stack blast copy 
9806 0000000000000000 (./Engine/Irq/IrqS):00066                               fill  0,32
     0000000000000000
     0000000000000000
     0000000000000000
9826                  (./Engine/Irq/IrqS):00067                 IRQSysStack
                      (C:\Users\bhrou\gi):00069                         INCLUDE "./generated-code/SpecialStage/BuilderMainGenCode.asm"
                      (./generated-code/):00001                 * Generated Code
                      (./generated-code/):00002                 
9826                  (./generated-code/):00003                 Pal_HalfPipe
9826 FF0F             (./generated-code/):00004                         fdb   $ff0f
9828 3300             (./generated-code/):00005                         fdb   $3300
982A 1101             (./generated-code/):00006                         fdb   $1101
982C 0000             (./generated-code/):00007                         fdb   $0000
982E 0300             (./generated-code/):00008                         fdb   $0300
9830 0F00             (./generated-code/):00009                         fdb   $0f00
9832 6F03             (./generated-code/):00010                         fdb   $6f03
9834 1600             (./generated-code/):00011                         fdb   $1600
9836 3A00             (./generated-code/):00012                         fdb   $3a00
9838 6F00             (./generated-code/):00013                         fdb   $6f00
983A FF00             (./generated-code/):00014                         fdb   $ff00
983C 600A             (./generated-code/):00015                         fdb   $600a
983E 3006             (./generated-code/):00016                         fdb   $3006
9840 2004             (./generated-code/):00017                         fdb   $2004
9842 310E             (./generated-code/):00018                         fdb   $310e
9844 0008             (./generated-code/):00019                         fdb   $0008
                      (./generated-code/):00020                 
9846                  (./generated-code/):00021                 Obj_Index_Page
9846 00               (./generated-code/):00022                         fcb   $00
9847 60               (./generated-code/):00023                         fcb   $60
9848 60               (./generated-code/):00024                         fcb   $60
9849                  (./generated-code/):00025                 Obj_Index_Address
9849 0000             (./generated-code/):00026                         fcb   $00,$00
984B 0000             (./generated-code/):00027                         fcb   $00,$00
984D 0000             (./generated-code/):00028                         fcb   $00,$00
984F                  (./generated-code/):00029                 Smps_SpecialStage 
984F 0000000000       (./generated-code/):00030                         fcb   0,0,0,0,0
9854 00               (./generated-code/):00031                         fcb   $00
9855                  (./generated-code/):00032                 Img_Page_Index
9855 00               (./generated-code/):00033                         fcb   $00
9856 00               (./generated-code/):00034                         fcb   $00
9857 00               (./generated-code/):00035                         fcb   $00
9858                  (./generated-code/):00036                 Ani_Page_Index
9858 00               (./generated-code/):00037                         fcb   $00
9859 00               (./generated-code/):00038                         fcb   $00
985A 00               (./generated-code/):00039                         fcb   $00
985B                  (./generated-code/):00040                 Ani_Asd_Index
985B 0000             (./generated-code/):00041                         fdb   $0000
985D 0000             (./generated-code/):00042                         fdb   $0000
985F 0000             (./generated-code/):00043                         fdb   $0000
9861                  (./generated-code/):00044                 Bgi_specialStage 
9861 000000           (./generated-code/):00045                         fcb   0,0,0
9864                  (./generated-code/):00046                 LoadAct
9864 C602             (./generated-code/):00047 [2]     11363           ldb   #$02                     * load page 2
9866 F7E7E5           (./generated-code/):00048 [5]     11368           stb   $E7E5                    * in data space ($A000-$DFFF)
9869 8E9861           (./generated-code/):00049 [3]     11371           ldx   #Bgi_specialStage
986C BD7606           (./generated-code/):00050 [8]     11379           jsr   DrawFullscreenImage
986F B6E7DD           (./generated-code/):00051 [5]     11384           lda   $E7DD                    * set border color
9872 84F0             (./generated-code/):00052 [2]     11386           anda  #$F0
9874 8B03             (./generated-code/):00053 [2]     11388           adda  #$03                     * color ref
9876 B7E7DD           (./generated-code/):00054 [5]     11393           sta   $E7DD
9879 840F             (./generated-code/):00055 [2]     11395           anda  #$0F
987B 8B80             (./generated-code/):00056 [2]     11397           adda  #$80
987D B775C1           (./generated-code/):00057 [5]     11402           sta   glb_screen_border_color+1    * maj WaitVBL
9880 BD75A7           (./generated-code/):00058 [8]     11410           jsr   WaitVBL
9883 C603             (./generated-code/):00059 [2]     11412           ldb   #$03                     * load page 3
9885 F7E7E5           (./generated-code/):00060 [5]     11417           stb   $E7E5                    * data space ($A000-$DFFF)
9888 8E9861           (./generated-code/):00061 [3]     11420           ldx   #Bgi_specialStage
988B BD7606           (./generated-code/):00062 [8]     11428           jsr   DrawFullscreenImage
988E CC9826           (./generated-code/):00063 [3]     11431           ldd   #Pal_HalfPipe
9891 FD87EC           (./generated-code/):00064 [6]     11437           std   Cur_palette
9894 7F87EB           (./generated-code/):00065 [7]     11444           clr   Refresh_palette
9897 39               (./generated-code/):00066 [5]     11449           rts
