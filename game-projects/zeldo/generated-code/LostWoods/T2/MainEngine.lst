                      (C:\Users\bhrou\gi):00001                 INCLUDE "./generated-code/LostWoods/ObjectId.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0001             (./generated-code/):00003         ObjID_Link equ 1
     0002             (./generated-code/):00004         ObjID_PaletteFade equ 2
     0003             (./generated-code/):00005         ObjID_Sword equ 3
     0004             (./generated-code/):00006         ObjID_Tilemap equ 4
     0005             (./generated-code/):00007         ObjID_Triangle equ 5
     0006             (./generated-code/):00008         ObjID_Castle equ 6
     0007             (./generated-code/):00009         ObjID_Title equ 7
     0008             (./generated-code/):00010         ObjID_Nindendo equ 8
                      (C:\Users\bhrou\gi):00002                 INCLUDE "./generated-code/Game.glb"
                      (./generated-code/):00001         * Generated Code
                      (./generated-code/):00002         
     0112             (./generated-code/):00003         Build_RAMLoaderManager equ $0112
     0000             (./generated-code/):00004         GmID_LostWoods equ 0
     0000             (./generated-code/):00005         gmboot equ 0
                      (C:\Users\bhrou\gi):00003         
                      (C:\Users\bhrou\gi):00004                 opt   c,ct
                      (C:\Users\bhrou\gi):00005                 
                      (C:\Users\bhrou\gi):00006                 ********************************************************************************
                      (C:\Users\bhrou\gi):00007                 * Game Engine (TO8 Thomson) - Benoit Rousseau 2020-2021
                      (C:\Users\bhrou\gi):00008                 * ------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00009                 *
                      (C:\Users\bhrou\gi):00010                 *
                      (C:\Users\bhrou\gi):00011                 ********************************************************************************
                      (C:\Users\bhrou\gi):00012                         INCLUDE "./game-mode/LostWoods/LostWoodsRamData.equ"    
                      (./game-mode/LostW):00001                 ; ext_variables_size is for dynamic objects
     000A             (./game-mode/LostW):00002                 ext_variables_size                 equ 10
                      (./game-mode/LostW):00003                 
                      (./game-mode/LostW):00004                 ;nb_reserved_objects               equ 1
     000A             (./game-mode/LostW):00005                 nb_dynamic_objects                 equ 10 ; dynamic allocation
                      (./game-mode/LostW):00006                 ;nb_level_objects                  equ 1
     000E             (./game-mode/LostW):00007                 nb_graphical_objects               equ 14 ; only count objects that will be rendered on screen (max 64 total)
                      (C:\Users\bhrou\gi):00013                         INCLUDE "./engine/constants.asm"
                      (./engine/constant):00001                 * ---------------------------------------------------------------------------
                      (./engine/constant):00002                 * Constants
                      (./engine/constant):00003                 *
                      (./engine/constant):00004                 * Naming convention
                      (./engine/constant):00005                 * -----------------
                      (./engine/constant):00006                 * - lower case
                      (./engine/constant):00007                 * - underscore-separated names
                      (./engine/constant):00008                 *
                      (./engine/constant):00009                 * ---------------------------------------------------------------------------
                      (./engine/constant):00010                 
                      (./engine/constant):00011                  ifndef CONSTANTS_ASM
     0001             (./engine/constant):00012                 CONSTANTS_ASM equ 1
                      (./engine/constant):00013                 
                      (./engine/constant):00014                 * ===========================================================================
                      (./engine/constant):00015                 * TO8 Registers
                      (./engine/constant):00016                 * ===========================================================================
                      (./engine/constant):00017                 
                      (./engine/constant):00018                 ; Disk routine registers (ROM)
                      (./engine/constant):00019                 
     6049             (./engine/constant):00020                 dk_drive                      equ $6049
     604A             (./engine/constant):00021                 dk_track                      equ $604A
     604B             (./engine/constant):00022                 dk_track_lsb                  equ $604B
     604C             (./engine/constant):00023                 dk_sector                     equ $604C
     604F             (./engine/constant):00024                 dk_write_location             equ $604F
                      (./engine/constant):00025                 
                      (./engine/constant):00026                 * ===========================================================================
                      (./engine/constant):00027                 * Globals
                      (./engine/constant):00028                 * ===========================================================================
                      (./engine/constant):00029                 
                      (./engine/constant):00030                 ; compilated sprite
     9FFE             (./engine/constant):00031                 glb_register_s                equ $9FFE  ; reverved space to store S from ROM routines
                      (./engine/constant):00032                 
                      (./engine/constant):00033                 ; DrawSprites
     9FFC             (./engine/constant):00034                 glb_screen_location_1         equ $9FFC  ; start address for rendering of current sprite Part1     
     9FFA             (./engine/constant):00035                 glb_screen_location_2         equ $9FFA  ; start address for rendering of current sprite Part2 (Must follow Part1)
                      (./engine/constant):00036                 
                      (./engine/constant):00037                 ; CheckSpritesRefresh
     9FF9             (./engine/constant):00038                 glb_cur_priority              equ $9FF9
     9FF7             (./engine/constant):00039                 glb_cur_ptr_sub_obj_erase     equ $9FF7
     9FF5             (./engine/constant):00040                 glb_cur_ptr_sub_obj_draw      equ $9FF5
                      (./engine/constant):00041                 
     9FF3             (./engine/constant):00042                 glb_camera_x_pos              equ $9FF3 ; camera x position in palyfield coordinates
     9FF1             (./engine/constant):00043                 glb_camera_y_pos              equ $9FF1 ; camera y position in palyfield coordinates
     9FEF             (./engine/constant):00044                 glb_camera_x_min_pos          equ $9FEF
     9FED             (./engine/constant):00045                 glb_camera_y_min_pos          equ $9FED
     9FEB             (./engine/constant):00046                 glb_camera_x_max_pos          equ $9FEB
     9FE9             (./engine/constant):00047                 glb_camera_y_max_pos          equ $9FE9
     9FE8             (./engine/constant):00048                 glb_camera_x_offset           equ $9FE8
     9FE7             (./engine/constant):00049                 glb_camera_y_offset           equ $9FE7 
     9FE6             (./engine/constant):00050                 glb_force_sprite_refresh      equ $9FE6
     9FE5             (./engine/constant):00051                 glb_camera_move               equ $9FE5
     9FE4             (./engine/constant):00052                 glb_alphaTiles                equ $9FE4
     9FE3             (./engine/constant):00053                 glb_timer_second              equ $9FE3
     9FE2             (./engine/constant):00054                 glb_timer_minute              equ $9FE2
     9FE2             (./engine/constant):00055                 glb_timer                     equ $9FE2 
     9FE1             (./engine/constant):00056                 glb_timer_frame               equ $9FE1
                      (./engine/constant):00057                 
                      (./engine/constant):00058                 ; BankSwitch
     9FE0             (./engine/constant):00059                 glb_Page                      equ $9FE0
     9FB0             (./engine/constant):00060                 dp_engine                     equ $9FB0 ; engine and user routines tmp var space
     9F00             (./engine/constant):00061                 dp                            equ $9F00 ; free user tmp var space
     9F00             (./engine/constant):00062                 glb_system_stack              equ $9F00
                      (./engine/constant):00063                 
                      (./engine/constant):00064                 * ===========================================================================
                      (./engine/constant):00065                 * Display Constants
                      (./engine/constant):00066                 * ===========================================================================
                      (./engine/constant):00067                 
     00A0             (./engine/constant):00068                 screen_width                  equ 160    ; in pixel
     001C             (./engine/constant):00069                 screen_top                    equ 28     ; in pixel
     00E3             (./engine/constant):00070                 screen_bottom                 equ 28+199 ; in pixel
     0030             (./engine/constant):00071                 screen_left                   equ 48     ; in pixel
     00CF             (./engine/constant):00072                 screen_right                  equ 48+159 ; in pixel
     0008             (./engine/constant):00073                 nb_priority_levels            equ 8      ; number of priority levels (need code change if modified)
                      (./engine/constant):00074                 
                      (./engine/constant):00075                 * ===========================================================================
                      (./engine/constant):00076                 * Images Constants
                      (./engine/constant):00077                 * ===========================================================================
                      (./engine/constant):00078                 
     0004             (./engine/constant):00079                 image_x_size                  equ 4
     0005             (./engine/constant):00080                 image_y_size                  equ 5
     0006             (./engine/constant):00081                 image_center_offset           equ 6
                      (./engine/constant):00082                 
     0004             (./engine/constant):00083                 image_subset_x1_offset        equ 4
     0005             (./engine/constant):00084                 image_subset_y1_offset        equ 5
                      (./engine/constant):00085                 
     0000             (./engine/constant):00086                 page_draw_routine             equ 0
     0001             (./engine/constant):00087                 draw_routine                  equ 1
     0003             (./engine/constant):00088                 page_erase_routine            equ 3
     0004             (./engine/constant):00089                 erase_routine                 equ 4
     0006             (./engine/constant):00090                 erase_nb_cell                 equ 6
                      (./engine/constant):00091                 
                      (./engine/constant):00092                 * ===========================================================================
                      (./engine/constant):00093                 * Sound Constants
                      (./engine/constant):00094                 * ===========================================================================
                      (./engine/constant):00095                 
     0000             (./engine/constant):00096                 sound_page        equ 0
     0001             (./engine/constant):00097                 sound_start_addr  equ 1
     0003             (./engine/constant):00098                 sound_end_addr    equ 3
     0005             (./engine/constant):00099                 sound_meta_size   equ 5
                      (./engine/constant):00100                 
                      (./engine/constant):00101                 * ===========================================================================
                      (./engine/constant):00102                 * Object Constants
                      (./engine/constant):00103                 * ===========================================================================
                      (./engine/constant):00104                 
                      (./engine/constant):00105                 ; ext_variables_size should be declared in game source code
                      (./engine/constant):00106                 
     0022             (./engine/constant):00107                 object_base_size              equ 34  ; the size of an object without ext_vars - DEPENDENCY ClearObj routine
     003B             (./engine/constant):00108                 object_rsvd_size              equ 59  ; the size of an object without ext_vars - DEPENDENCY ClearObj routine
     002C             (./engine/constant):00109                 object_rsvd                   equ object_base_size+ext_variables_size
     0067             (./engine/constant):00110                 object_size                   equ object_base_size+ext_variables_size+object_rsvd_size ; the size of a dynamic object
     0067             (./engine/constant):00111                 next_object                   equ object_size
     0022             (./engine/constant):00112                 ext_variables                 equ object_base_size ; start of reserved space for additionnal variables
                      (./engine/constant):00113                 
     0000             (./engine/constant):00114                 id                            equ 0           ; reference to object model id (ObjID_) (0: free slot)
     0001             (./engine/constant):00115                 subtype                       equ 1           ; reference to object subtype (Sub_) DEPENDENCY subtype must follow id
     0002             (./engine/constant):00116                 render_flags                  equ 2
                      (./engine/constant):00117                 
                      (./engine/constant):00118                 ; bit 7 = onscreen flag, bit 0 = x mirror, bit 1 = y mirror, bit 2 = coordinate system, bit 6 = render subobjects
                      (./engine/constant):00119                 
                      (./engine/constant):00120                 * --- render_flags bitfield variables ---
     0001             (./engine/constant):00121                 render_xmirror_mask           equ $01 ; (bit 0) DEPENDENCY should be bit 0 - tell display engine to mirror sprite on horizontal axis
     0002             (./engine/constant):00122                 render_ymirror_mask           equ $02 ; (bit 1) DEPENDENCY should be bit 1 - tell display engine to mirror sprite on vertical axis
     0004             (./engine/constant):00123                 render_overlay_mask           equ $04 ; (bit 2) DEPENDENCY should be bit 2 - compilated sprite with no background save
     0008             (./engine/constant):00124                 render_playfieldcoord_mask    equ $08 ; (bit 3) tell display engine to use playfield (1) or screen (0) coordinates
     0010             (./engine/constant):00125                 render_xloop_mask             equ $10 ; (bit 4) (in screen coordinate) tell display engine to hide sprite when x is out of screen (0) or to display (1)  
     0020             (./engine/constant):00126                 render_todelete_mask          equ $20 ; (bit 5) tell display engine to delete sprite and clear OST for this object
     0040             (./engine/constant):00127                 render_subobjects             equ $40 ; (bit 6) tell display engine to render subobjects for this object
     0080             (./engine/constant):00128                 render_hide_mask              equ $80 ; (bit 7) tell display engine to hide sprite (keep priority and mapping_frame)
                      (./engine/constant):00129                 
     0003             (./engine/constant):00130                 priority                      equ 3           ; display priority (0: nothing to display, 1:front, ..., 8:back)
     0004             (./engine/constant):00131                 anim                          equ 4  ; and 5  ; reference to current animation (Ani_)
     0006             (./engine/constant):00132                 prev_anim                     equ 6  ; and 7  ; reference to previous animation (Ani_)
     0008             (./engine/constant):00133                 anim_frame                    equ 8           ; index of current frame in animation
     0009             (./engine/constant):00134                 anim_frame_duration           equ 9           ; number of frames for each image in animation, range: 00-7F (0-127), 0 means display only during one frame
     000A             (./engine/constant):00135                 anim_flags                    equ 10          ; byte offset to reference an anim_flags LUT (adv) / store a link flag (non adv)
                      (./engine/constant):00136                 
                      (./engine/constant):00137                 * --- anim_flags bitfield variables ---
     0001             (./engine/constant):00138                 anim_link_mask                equ $01 ; (bit 0) if set, allow the load of a new animation without reseting anim_frame and anim_frame_duration
                      (./engine/constant):00139                 
     000B             (./engine/constant):00140                 status_flags                  equ 11          ; orientation of sprite, is applied to animation xmirror flag during AnimateSprite
                      (./engine/constant):00141                 
                      (./engine/constant):00142                 * --- status_flags bitfield variables ---
     0001             (./engine/constant):00143                 status_xflip_mask             equ $01 ; (bit 0) X Flip
     0002             (./engine/constant):00144                 status_yflip_mask             equ $02 ; (bit 1) Y Flip
                      (./engine/constant):00145                 
     000C             (./engine/constant):00146                 image_set                     equ 12 ; and 13 ; reference to current image (Img_) (0000 if no image)
     000E             (./engine/constant):00147                 x_pos                         equ 14 ; and 15 ; x playfield coordinate
     0010             (./engine/constant):00148                 x_sub                         equ 16          ; x subpixel (1/256 of a pixel), must follow x_pos in data structure
     0011             (./engine/constant):00149                 y_pos                         equ 17 ; and 18 ; y playfield coordinate
     0013             (./engine/constant):00150                 y_sub                         equ 19          ; y subpixel (1/256 of a pixel), must follow y_pos in data structure
     0014             (./engine/constant):00151                 xy_pixel                      equ 20          ; x and y screen coordinate
     0014             (./engine/constant):00152                 x_pixel                       equ 20          ; x screen coordinate
     0015             (./engine/constant):00153                 y_pixel                       equ 21          ; y screen coordinate, must follow x_pixel
     0016             (./engine/constant):00154                 x_vel                         equ 22 ; and 23 ; horizontal velocity
     0018             (./engine/constant):00155                 y_vel                         equ 24 ; and 25 ; vertical velocity
     001A             (./engine/constant):00156                 x_acl                         equ 26 ; and 27 ; horizontal gravity
     001C             (./engine/constant):00157                 y_acl                         equ 28 ; and 29 ; vertical gravity
     001E             (./engine/constant):00158                 routine                       equ 30          ; index of current object routine
     001F             (./engine/constant):00159                 routine_secondary             equ 31          ; index of current secondary routine
     0020             (./engine/constant):00160                 routine_tertiary              equ 32          ; index of current tertiary routine
     0021             (./engine/constant):00161                 routine_quaternary            equ 33          ; index of current quaternary routine
                      (./engine/constant):00162                 
                      (./engine/constant):00163                 * ---------------------------------------------------------------------------
                      (./engine/constant):00164                 * reserved variables (read/write by engine)
                      (./engine/constant):00165                 
     002C             (./engine/constant):00166                 rsv_render_flags              equ object_rsvd
                      (./engine/constant):00167                 
                      (./engine/constant):00168                 * --- rsv_render_flags bitfield variables ---
     0001             (./engine/constant):00169                 rsv_render_checkrefresh_mask  equ $01 ; (bit 0) if erasesprite and display sprite flag are processed for this frame
     0002             (./engine/constant):00170                 rsv_render_erasesprite_mask   equ $02 ; (bit 1) if a sprite need to be cleared on screen
     0004             (./engine/constant):00171                 rsv_render_displaysprite_mask equ $04 ; (bit 2) if a sprite need to be rendered on screen
     0008             (./engine/constant):00172                 rsv_render_outofrange_mask    equ $08 ; (bit 3) if a sprite is out of range for full rendering in screen
     0080             (./engine/constant):00173                 rsv_render_onscreen_mask      equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on last screen buffer (may be 0 or 1)
                      (./engine/constant):00174                 
     002D             (./engine/constant):00175                 rsv_prev_anim                 equ object_rsvd+1 ; and +2 ; reference to previous animation (Ani_) w * UTILE ?
     002F             (./engine/constant):00176                 rsv_image_center_offset       equ object_rsvd+3 ; 0 or 1 offset that indicate if image center is even or odd (DRS_XYToAddress)
     0030             (./engine/constant):00177                 rsv_image_subset              equ object_rsvd+4 ; and +5 ; reference to current image regarding mirror flags w
     0032             (./engine/constant):00178                 rsv_mapping_frame             equ object_rsvd+6 ; and +7 ; reference to current image regarding mirror flags, overlay flag and x precision w
     0034             (./engine/constant):00179                 rsv_erase_nb_cell             equ object_rsvd+8 ; b 
     0035             (./engine/constant):00180                 rsv_page_draw_routine         equ object_rsvd+9 ; b
     0036             (./engine/constant):00181                 rsv_draw_routine              equ object_rsvd+10 ; and +11 ; w
     0038             (./engine/constant):00182                 rsv_page_erase_routine        equ object_rsvd+12 ; b
     0039             (./engine/constant):00183                 rsv_erase_routine             equ object_rsvd+13 ; and +14 ; w 
     003B             (./engine/constant):00184                 rsv_xy1_pixel                 equ object_rsvd+15 ;
     003B             (./engine/constant):00185                 rsv_x1_pixel                  equ object_rsvd+15 ; x+x_offset-(x_size/2) screen coordinate
     003C             (./engine/constant):00186                 rsv_y1_pixel                  equ object_rsvd+16 ; y+y_offset-(y_size/2) screen coordinate, must follow rsv_x1_pixel
     003D             (./engine/constant):00187                 rsv_xy2_pixel                 equ object_rsvd+17 ;
     003D             (./engine/constant):00188                 rsv_x2_pixel                  equ object_rsvd+17 ; x+x_offset+(x_size/2) screen coordinate
     003E             (./engine/constant):00189                 rsv_y2_pixel                  equ object_rsvd+18 ; y+y_offset+(y_size/2) screen coordinate, must follow rsv_x2_pixel
                      (./engine/constant):00190                 
                      (./engine/constant):00191                 * ---------------------------------------------------------------------------
                      (./engine/constant):00192                 * reserved variables (engine) - buffer specific
                      (./engine/constant):00193                 
     003F             (./engine/constant):00194                 rsv_buffer_0                  equ object_rsvd+19 ; Start index of buffer 0 variables
     003F             (./engine/constant):00195                 rsv_priority_0                equ object_rsvd+19 ; internal value that hold priority in video buffer 0
     0040             (./engine/constant):00196                 rsv_priority_prev_obj_0       equ object_rsvd+20 ; and +21 ; previous object (OST address) in display priority list for video buffer 0 (0000 if none) w
     0042             (./engine/constant):00197                 rsv_priority_next_obj_0       equ object_rsvd+22 ; and +23 ; next object (OST address) in display priority list for video buffer 0 (0000 if none) w
     0044             (./engine/constant):00198                 rsv_prev_mapping_frame_0      equ object_rsvd+24 ; and object_rsvd+25 ; reference to previous image in video buffer 0 w
     0046             (./engine/constant):00199                 rsv_prev_erase_nb_cell_0      equ object_rsvd+26 : b
     0047             (./engine/constant):00200                 rsv_prev_page_erase_routine_0 equ object_rsvd+27 ; b
     0048             (./engine/constant):00201                 rsv_prev_erase_routine_0      equ object_rsvd+28 ; and object_rsvd+29 ; w
     004A             (./engine/constant):00202                 rsv_bgdata_0                  equ object_rsvd+30 ; and +31 ; address of background data in screen 0 w
     004C             (./engine/constant):00203                 rsv_prev_xy_pixel_0           equ object_rsvd+32 ;
     004C             (./engine/constant):00204                 rsv_prev_x_pixel_0            equ object_rsvd+32 ; previous x screen coordinate b
     004D             (./engine/constant):00205                 rsv_prev_y_pixel_0            equ object_rsvd+33 ; previous y screen coordinate b, must follow x_pixel
     004E             (./engine/constant):00206                 rsv_prev_xy1_pixel_0          equ object_rsvd+34 ;
     004E             (./engine/constant):00207                 rsv_prev_x1_pixel_0           equ object_rsvd+34 ; previous x+x_offset-(x_size/2) screen coordinate b
     004F             (./engine/constant):00208                 rsv_prev_y1_pixel_0           equ object_rsvd+35 ; previous y+y_offset-(y_size/2) screen coordinate b, must follow x1_pixel
     0050             (./engine/constant):00209                 rsv_prev_xy2_pixel_0          equ object_rsvd+36 ;
     0050             (./engine/constant):00210                 rsv_prev_x2_pixel_0           equ object_rsvd+36 ; previous x+x_offset+(x_size/2) screen coordinate b
     0051             (./engine/constant):00211                 rsv_prev_y2_pixel_0           equ object_rsvd+37 ; previous y+y_offset+(y_size/2) screen coordinate b, must follow x2_pixel
     0052             (./engine/constant):00212                 rsv_prev_render_flags_0       equ object_rsvd+38 ;
                      (./engine/constant):00213                 * --- rsv_prev_render_flags_0 bitfield variables ---
     0001             (./engine/constant):00214                 rsv_prev_render_overlay_mask  equ $01 ; (bit 0) if a sprite has been rendered with compilated sprite and no background save on screen buffer 0/1
     0080             (./engine/constant):00215                 rsv_prev_render_onscreen_mask equ $80 ; (bit 7) DEPENDENCY should be bit 7 - has been rendered on screen buffer 0/1
                      (./engine/constant):00216                 
     0053             (./engine/constant):00217                 rsv_buffer_1                  equ object_rsvd+39 ; Start index of buffer 1 variables
     0053             (./engine/constant):00218                 rsv_priority_1                equ object_rsvd+39 ; internal value that hold priority in video buffer 1
     0054             (./engine/constant):00219                 rsv_priority_prev_obj_1       equ object_rsvd+40 ; and +41 ; previous object (OST address) in display priority list for video buffer 1 (0000 if none) w
     0056             (./engine/constant):00220                 rsv_priority_next_obj_1       equ object_rsvd+42 ; and +43 ; next object (OST address) in display priority list for video buffer 1 (0000 if none) w
     0058             (./engine/constant):00221                 rsv_prev_mapping_frame_1      equ object_rsvd+44 ; and +45 ; reference to previous image in video buffer 1 w
     005A             (./engine/constant):00222                 rsv_prev_erase_nb_cell_1      equ object_rsvd+46 ; b
     005B             (./engine/constant):00223                 rsv_prev_page_erase_routine_1 equ object_rsvd+47 ; b
     005C             (./engine/constant):00224                 rsv_prev_erase_routine_1      equ object_rsvd+48 ; and +49 ; w
     005E             (./engine/constant):00225                 rsv_bgdata_1                  equ object_rsvd+50 ; and +51 ; address of background data in screen 1 w
     0060             (./engine/constant):00226                 rsv_prev_xy_pixel_1           equ object_rsvd+52 ;
     0060             (./engine/constant):00227                 rsv_prev_x_pixel_1            equ object_rsvd+52 ; previous x screen coordinate b
     0061             (./engine/constant):00228                 rsv_prev_y_pixel_1            equ object_rsvd+53 ; previous y screen coordinate b, must follow x_pixel
     0062             (./engine/constant):00229                 rsv_prev_xy1_pixel_1          equ object_rsvd+54 ;
     0062             (./engine/constant):00230                 rsv_prev_x1_pixel_1           equ object_rsvd+54 ; previous x+x_size screen coordinate b
     0063             (./engine/constant):00231                 rsv_prev_y1_pixel_1           equ object_rsvd+55 ; previous y+y_size screen coordinate b, must follow x_pixel
     0064             (./engine/constant):00232                 rsv_prev_xy2_pixel_1          equ object_rsvd+56 ;
     0064             (./engine/constant):00233                 rsv_prev_x2_pixel_1           equ object_rsvd+56 ; previous x+x_size screen coordinate b
     0065             (./engine/constant):00234                 rsv_prev_y2_pixel_1           equ object_rsvd+57 ; previous y+y_size screen coordinate b, must follow x_pixel
     0066             (./engine/constant):00235                 rsv_prev_render_flags_1       equ object_rsvd+58 ;
                      (./engine/constant):00236                 
     0000             (./engine/constant):00237                 buf_priority                  equ 0  ; offset for each rsv_buffer variables
     0001             (./engine/constant):00238                 buf_priority_prev_obj         equ 1  ;
     0003             (./engine/constant):00239                 buf_priority_next_obj         equ 3  ;
     0005             (./engine/constant):00240                 buf_prev_mapping_frame        equ 5  ;
     0007             (./engine/constant):00241                 buf_erase_nb_cell             equ 7  ;
     0008             (./engine/constant):00242                 buf_page_erase_routine        equ 8 ;
     0009             (./engine/constant):00243                 buf_erase_routine             equ 9 ;
     000B             (./engine/constant):00244                 buf_bgdata                    equ 11 ;
     000D             (./engine/constant):00245                 buf_prev_xy_pixel             equ 13 ;
     000D             (./engine/constant):00246                 buf_prev_x_pixel              equ 13 ;
     000E             (./engine/constant):00247                 buf_prev_y_pixel              equ 14 ;
     000F             (./engine/constant):00248                 buf_prev_xy1_pixel            equ 15 ;
     000F             (./engine/constant):00249                 buf_prev_x1_pixel             equ 15 ;
     0010             (./engine/constant):00250                 buf_prev_y1_pixel             equ 16 ;
     0011             (./engine/constant):00251                 buf_prev_xy2_pixel            equ 17 ;
     0011             (./engine/constant):00252                 buf_prev_x2_pixel             equ 17 ;
     0012             (./engine/constant):00253                 buf_prev_y2_pixel             equ 18 ;
     0013             (./engine/constant):00254                 buf_prev_render_flags         equ 19 ;
                      (./engine/constant):00255                 
                      (./engine/constant):00256                  endc
                      (C:\Users\bhrou\gi):00014                         INCLUDE "./engine/macros.asm"        
0000                  (./engine/macros.a):00001                 _ldd MACRO
                      (./engine/macros.a):00002                         ldd   #((\1)*256)+\2
                      (./engine/macros.a):00003                  ENDM
                      (./engine/macros.a):00004                  
0000                  (./engine/macros.a):00005                 _ldx MACRO
                      (./engine/macros.a):00006                         ldx   #((\1)*256)+\2
                      (./engine/macros.a):00007                  ENDM
                      (./engine/macros.a):00008                  
0000                  (./engine/macros.a):00009                 _ldy MACRO
                      (./engine/macros.a):00010                         ldy   #((\1)*256)+\2
                      (./engine/macros.a):00011                  ENDM
                      (./engine/macros.a):00012                  
0000                  (./engine/macros.a):00013                 _ldu MACRO
                      (./engine/macros.a):00014                         ldu   #((\1)*256)+\2
                      (./engine/macros.a):00015                  ENDM  
                      (./engine/macros.a):00016                  
0000                  (./engine/macros.a):00017                 _lds MACRO
                      (./engine/macros.a):00018                         lds   #((\1)*256)+\2
                      (./engine/macros.a):00019                  ENDM   
                      (./engine/macros.a):00020                  
0000                  (./engine/macros.a):00021                 _SetCartPageA MACRO
                      (./engine/macros.a):00022                  IFDEF T2
                      (./engine/macros.a):00023                         jsr   SetCartPageA
                      (./engine/macros.a):00024                  ELSE
                      (./engine/macros.a):00025                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00026                  ENDC
                      (./engine/macros.a):00027                  ENDM      
                      (./engine/macros.a):00028                  
0000                  (./engine/macros.a):00029                 _GetCartPageA MACRO
                      (./engine/macros.a):00030                  IFDEF T2
                      (./engine/macros.a):00031                         jsr   GetCartPageA
                      (./engine/macros.a):00032                  ELSE
                      (./engine/macros.a):00033                         lda   $E7E6
                      (./engine/macros.a):00034                  ENDC
                      (./engine/macros.a):00035                  ENDM
                      (./engine/macros.a):00036                 
0000                  (./engine/macros.a):00037                 _SetCartPageB MACRO
                      (./engine/macros.a):00038                  IFDEF T2
                      (./engine/macros.a):00039                         jsr   SetCartPageB
                      (./engine/macros.a):00040                  ELSE
                      (./engine/macros.a):00041                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (./engine/macros.a):00042                  ENDC
                      (./engine/macros.a):00043                  ENDM      
                      (./engine/macros.a):00044                  
0000                  (./engine/macros.a):00045                 _GetCartPageB MACRO
                      (./engine/macros.a):00046                  IFDEF T2
                      (./engine/macros.a):00047                         jsr   GetCartPageB
                      (./engine/macros.a):00048                  ELSE
                      (./engine/macros.a):00049                         ldb   $E7E6
                      (./engine/macros.a):00050                  ENDC
                      (./engine/macros.a):00051                  ENDM     
                      (./engine/macros.a):00052                 
0000                  (./engine/macros.a):00053                 _RunObjectSwap MACRO
                      (./engine/macros.a):00054                         ; param 1 : ObjID_
                      (./engine/macros.a):00055                         ; param 2 : Object data RAM address
                      (./engine/macros.a):00056                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00057                         lda   Obj_Index_Page+\1
                      (./engine/macros.a):00058                         sta   PSR_Page   
                      (./engine/macros.a):00059                         ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00060                         std   PSR_Address       
                      (./engine/macros.a):00061                         ldu   \2             
                      (./engine/macros.a):00062                         jsr   RunPgSubRoutine
                      (./engine/macros.a):00063                  ENDM    
                      (./engine/macros.a):00064                 
0000                  (./engine/macros.a):00065                 _RunObjectSwapRoutine MACRO
                      (./engine/macros.a):00066                         ; param 1 : ObjID_
                      (./engine/macros.a):00067                         ; param 2 : Object routine
                      (./engine/macros.a):00068                         ; manual launch of an object from a different dynamic memory page and not from the resident page 1
                      (./engine/macros.a):00069                         lda   Obj_Index_Page+\1   
                      (./engine/macros.a):00070                         sta   PSR_Page   
                      (./engine/macros.a):00071                         ldd   Obj_Index_Address+2*\1
                      (./engine/macros.a):00072                         std   PSR_Address       
                      (./engine/macros.a):00073                         ldb   \2        
                      (./engine/macros.a):00074                         jsr   RunPgSubRoutine
                      (./engine/macros.a):00075                  ENDM 
                      (./engine/macros.a):00076                  
0000                  (./engine/macros.a):00077                 _MountObject MACRO 
                      (./engine/macros.a):00078                         ; param 1 : ObjID_
                      (./engine/macros.a):00079                         ; manual mount of an object from the resident page 1
                      (./engine/macros.a):00080                         lda   Obj_Index_Page+\1
                      (./engine/macros.a):00081                         _SetCartPageA
                      (./engine/macros.a):00082                         ldx   Obj_Index_Address+2*\1
                      (./engine/macros.a):00083                  ENDM
                      (./engine/macros.a):00084                 
0000                  (./engine/macros.a):00085                 _RunObject MACRO 
                      (./engine/macros.a):00086                         ; param 1 : ObjID_
                      (./engine/macros.a):00087                         ; param 2 : Object data RAM address
                      (./engine/macros.a):00088                         ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00089                         _MountObject \1
                      (./engine/macros.a):00090                         ldu   \2        
                      (./engine/macros.a):00091                         jsr   ,x
                      (./engine/macros.a):00092                  ENDM
                      (./engine/macros.a):00093                 
0000                  (./engine/macros.a):00094                 _RunObjectRoutineA MACRO 
                      (./engine/macros.a):00095                         ; param 1 : ObjID_
                      (./engine/macros.a):00096                         ; param 2 : Object routine
                      (./engine/macros.a):00097                         ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00098                         ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00099                         _MountObject \1
                      (./engine/macros.a):00100                         lda   \2        
                      (./engine/macros.a):00101                         jsr   ,x
                      (./engine/macros.a):00102                  ENDM
                      (./engine/macros.a):00103                 
0000                  (./engine/macros.a):00104                 _RunObjectRoutineB MACRO 
                      (./engine/macros.a):00105                         ; param 1 : ObjID_
                      (./engine/macros.a):00106                         ; param 2 : Object routine
                      (./engine/macros.a):00107                         ; manual launch of an object from the resident page 1
                      (./engine/macros.a):00108                         ; this object does not need or have a data structure for this routine
                      (./engine/macros.a):00109                         _MountObject \1
                      (./engine/macros.a):00110                         ldb   \2        
                      (./engine/macros.a):00111                         jsr   ,x
                      (./engine/macros.a):00112                  ENDM
                      (./engine/macros.a):00113                 
0000                  (./engine/macros.a):00114                 _asld MACRO
                      (./engine/macros.a):00115                         aslb
                      (./engine/macros.a):00116                         rola
                      (./engine/macros.a):00117                  ENDM        
                      (./engine/macros.a):00118                  
0000                  (./engine/macros.a):00119                 _asrd MACRO
                      (./engine/macros.a):00120                         asra
                      (./engine/macros.a):00121                         rorb
                      (./engine/macros.a):00122                  ENDM      
                      (./engine/macros.a):00123                  
0000                  (./engine/macros.a):00124                 _lsld MACRO
                      (./engine/macros.a):00125                         lslb
                      (./engine/macros.a):00126                         rola
                      (./engine/macros.a):00127                  ENDM        
                      (./engine/macros.a):00128                  
0000                  (./engine/macros.a):00129                 _lsrd MACRO
                      (./engine/macros.a):00130                         lsra
                      (./engine/macros.a):00131                         rorb
                      (./engine/macros.a):00132                  ENDM
                      (./engine/macros.a):00133                  
0000                  (./engine/macros.a):00134                 _rold MACRO
                      (./engine/macros.a):00135                         rolb
                      (./engine/macros.a):00136                         rola
                      (./engine/macros.a):00137                  ENDM    
                      (./engine/macros.a):00138                  
0000                  (./engine/macros.a):00139                 _rord MACRO
                      (./engine/macros.a):00140                         rora
                      (./engine/macros.a):00141                         rorb
                      (./engine/macros.a):00142                  ENDM
                      (./engine/macros.a):00143                 
0000                  (./engine/macros.a):00144                 _negd MACRO
                      (./engine/macros.a):00145                         nega
                      (./engine/macros.a):00146                         negb
                      (./engine/macros.a):00147                         sbca  #0
                      (./engine/macros.a):00148                  ENDM
                      (./engine/macros.a):00149                 
0000                  (./engine/macros.a):00150                 _cba MACRO
                      (./engine/macros.a):00151                         pshs  b
                      (./engine/macros.a):00152                         cmpa  ,s+
                      (./engine/macros.a):00153                  ENDM
                      (./engine/macros.a):00154                 
0000                  (./engine/macros.a):00155                 _aba MACRO
                      (./engine/macros.a):00156                         pshs  b
                      (./engine/macros.a):00157                         adda  ,s+
                      (./engine/macros.a):00158                  ENDM
                      (./engine/macros.a):00159                 
0000                  (./engine/macros.a):00160                 _sba MACRO
                      (./engine/macros.a):00161                         pshs  b
                      (./engine/macros.a):00162                         suba  ,s+
                      (./engine/macros.a):00163                  ENDM
                      (./engine/macros.a):00164                 
0000                  (./engine/macros.a):00165                 _cab MACRO
                      (./engine/macros.a):00166                         pshs  a
                      (./engine/macros.a):00167                         cmpb  ,s+
                      (./engine/macros.a):00168                  ENDM
                      (./engine/macros.a):00169                 
0000                  (./engine/macros.a):00170                 _aab MACRO
                      (./engine/macros.a):00171                         pshs  a
                      (./engine/macros.a):00172                         addb  ,s+
                      (./engine/macros.a):00173                  ENDM
                      (./engine/macros.a):00174                 
0000                  (./engine/macros.a):00175                 _sab MACRO
                      (./engine/macros.a):00176                         pshs  a
                      (./engine/macros.a):00177                         subb  ,s+
                      (./engine/macros.a):00178                  ENDM
                      (C:\Users\bhrou\gi):00015                         org   $6100
                      (C:\Users\bhrou\gi):00016                         
6100 BD7839           (C:\Users\bhrou\gi):00017 [8]     8               jsr   InitGlobals       
6103 BD8DEF           (C:\Users\bhrou\gi):00018 [8]     16              jsr   LoadAct
                      (C:\Users\bhrou\gi):00019                 
6106 BD806D           (C:\Users\bhrou\gi):00020 [8]     24              jsr   YM2413_DrumModeOn
6109 BD7CBE           (C:\Users\bhrou\gi):00021 [8]     32              jsr   IrqSet50Hz
610C 8E8DC5           (C:\Users\bhrou\gi):00022 [3]     35              ldx   #Smps_Zelda
610F BD80EE           (C:\Users\bhrou\gi):00023 [8]     43              jsr   PlayMusic 
                      (C:\Users\bhrou\gi):00024                 
                      (C:\Users\bhrou\gi):00025                 * ==============================================================================
                      (C:\Users\bhrou\gi):00026                 * Intro
                      (C:\Users\bhrou\gi):00027                 * ==============================================================================
6112                  (C:\Users\bhrou\gi):00028                 IntroMainLoop
6112 BD7892           (C:\Users\bhrou\gi):00029 [8]     51              jsr   WaitVBL   
6115 BD79F7           (C:\Users\bhrou\gi):00030 [8]     59              jsr   UpdatePalette
6118 BD7973           (C:\Users\bhrou\gi):00031 [8]     67              jsr   ReadJoypads
611B F67972           (C:\Users\bhrou\gi):00032 [5]     72              ldb   Fire_Press
611E C540             (C:\Users\bhrou\gi):00033 [2]     74              bitb  #c1_button_A_mask
6120 2611             (C:\Users\bhrou\gi):00034 [3]     77              bne   InitLevelMainLoop
6122 BD77F7           (C:\Users\bhrou\gi):00035 [8]     85              jsr   RunObjects
6125 BD6A65           (C:\Users\bhrou\gi):00036 [8]     93              jsr   CheckSpritesRefresh
6128 BD7175           (C:\Users\bhrou\gi):00037 [8]     101             jsr   EraseSprites
612B BD73CF           (C:\Users\bhrou\gi):00038 [8]     109             jsr   UnsetDisplayPriority
612E BD74AE           (C:\Users\bhrou\gi):00039 [8]     117             jsr   DrawSprites        
6131 20DF             (C:\Users\bhrou\gi):00040 [3]     120             bra   IntroMainLoop
                      (C:\Users\bhrou\gi):00041                 
6133                  (C:\Users\bhrou\gi):00042                 InitLevelMainLoop
                      (C:\Users\bhrou\gi):00043                 
6133 CC79B7           (C:\Users\bhrou\gi):00044 [3]     123             ldd   #Black_palette
6136 FD7995           (C:\Users\bhrou\gi):00045 [6]     129             std   Cur_palette
6139 7F7994           (C:\Users\bhrou\gi):00046 [7]     136             clr   Refresh_palette
613C BD7892           (C:\Users\bhrou\gi):00047 [8]     144             jsr   WaitVBL   
613F BD79F7           (C:\Users\bhrou\gi):00048 [8]     152             jsr   UpdatePalette             
                      (C:\Users\bhrou\gi):00049                 
6142 C602             (C:\Users\bhrou\gi):00050 [2]     154             ldb   #$02                     * load page 2
6144 F7E7E5           (C:\Users\bhrou\gi):00051 [5]     159             stb   $E7E5                    * in data space ($A000-$DFFF)
6147 8EEEEE           (C:\Users\bhrou\gi):00052 [3]     162             ldx   #$EEEE                   * set Background solid color
614A BD7858           (C:\Users\bhrou\gi):00053 [8]     170             jsr   ClearDataMem
614D B6E7DD           (C:\Users\bhrou\gi):00054 [5]     175             lda   $E7DD                    * set border color
6150 84F0             (C:\Users\bhrou\gi):00055 [2]     177             anda  #$F0
6152 8B0E             (C:\Users\bhrou\gi):00056 [2]     179             adda  #$0E                     * color ref
6154 B7E7DD           (C:\Users\bhrou\gi):00057 [5]     184             sta   $E7DD
6157 840F             (C:\Users\bhrou\gi):00058 [2]     186             anda  #$0F
6159 8B80             (C:\Users\bhrou\gi):00059 [2]     188             adda  #$80
615B B778AC           (C:\Users\bhrou\gi):00060 [5]     193             sta   glb_screen_border_color+1    * maj WaitVBL
615E BD7892           (C:\Users\bhrou\gi):00061 [8]     201             jsr   WaitVBL
6161 C603             (C:\Users\bhrou\gi):00062 [2]     203             ldb   #$03                     * load page 3
6163 F7E7E5           (C:\Users\bhrou\gi):00063 [5]     208             stb   $E7E5                    * data space ($A000-$DFFF)
6166 8EEEEE           (C:\Users\bhrou\gi):00064 [3]     211             ldx   #$EEEE                   * set Background solid color
6169 BD7858           (C:\Users\bhrou\gi):00065 [8]     219             jsr   ClearDataMem
                      (C:\Users\bhrou\gi):00066                 
                      (C:\Users\bhrou\gi):00067                         ; TODO put this as two routines in engine, one for cleaning all objects, another for cleaning Display priority data
616C CE61DF           (C:\Users\bhrou\gi):00068 [3]     222             ldu   #Object_RAM
616F BD77C4           (C:\Users\bhrou\gi):00069 [8]     230     @a      jsr   ClearObj
6172 33C867           (C:\Users\bhrou\gi):00070 [5]     235             leau  object_size,u
6175 118368B6         (C:\Users\bhrou\gi):00071 [5]     240             cmpu  #Object_RAM_End
6179 26F4             (C:\Users\bhrou\gi):00072 [3]     243             bne   @a
617B 8601             (C:\Users\bhrou\gi):00073 [2]     245             lda   #ObjID_Link       
617D B76449           (C:\Users\bhrou\gi):00074 [5]     250             sta   LinkData
6180 CE69A3           (C:\Users\bhrou\gi):00075 [3]     253             ldu   #Tbl_Priority_First_Entry_0
6183 CC0000           (C:\Users\bhrou\gi):00076 [3]     256             ldd   #0
6186 EDC1             (C:\Users\bhrou\gi):00077 [8]     264     @b      std   ,u++
6188 11836A27         (C:\Users\bhrou\gi):00078 [5]     269             cmpu  #DPS_buffer_end
618C 26F8             (C:\Users\bhrou\gi):00079 [3]     272             bne   @b
618E CC69C9           (C:\Users\bhrou\gi):00080 [3]     275             ldd   #Lst_Priority_Unset_0+2
6191 FD69C7           (C:\Users\bhrou\gi):00081 [6]     281             std   Lst_Priority_Unset_0
6194 CC6A0B           (C:\Users\bhrou\gi):00082 [3]     284             ldd   #Lst_Priority_Unset_1+2
6197 FD6A09           (C:\Users\bhrou\gi):00083 [6]     290             std   Lst_Priority_Unset_1
                      (C:\Users\bhrou\gi):00084                 
619A CC8D8A           (C:\Users\bhrou\gi):00085 [3]     293             ldd   #Pal_LostWoods1
619D FD7995           (C:\Users\bhrou\gi):00086 [6]     299             std   Cur_palette
61A0 7F7994           (C:\Users\bhrou\gi):00087 [7]     306             clr   Refresh_palette   
                      (C:\Users\bhrou\gi):00088                 
                      (C:\Users\bhrou\gi):00089                         _RunObjectRoutineA ObjID_Tilemap,glb_current_submap       
                      (_RunObjectRoutine):00001                         _MountObject ObjID_Tilemap
61A3 B68DAE           (     _MountObject):00001 [5]     311             lda   Obj_Index_Page+ObjID_Tilemap
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
61A6 BD78F1           (    _SetCartPageA):00002 [8]     319             jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
61A9 BE8DBB           (     _MountObject):00003 [6]     325             ldx   Obj_Index_Address+2*ObjID_Tilemap
61AC B668B6           (_RunObjectRoutine):00002 [5]     330             lda   glb_current_submap        
61AF AD84             (_RunObjectRoutine):00003 [7]     337             jsr   ,x
                      (C:\Users\bhrou\gi):00090                 
                      (C:\Users\bhrou\gi):00091                 * ==============================================================================
                      (C:\Users\bhrou\gi):00092                 * Main Loop
                      (C:\Users\bhrou\gi):00093                 * ==============================================================================
61B1                  (C:\Users\bhrou\gi):00094                 LevelMainLoop
61B1 BD7892           (C:\Users\bhrou\gi):00095 [8]     345             jsr   WaitVBL   
61B4 BD79F7           (C:\Users\bhrou\gi):00096 [8]     353             jsr   UpdatePalette
61B7 BD7973           (C:\Users\bhrou\gi):00097 [8]     361             jsr   ReadJoypads
61BA BD7B01           (C:\Users\bhrou\gi):00098 [8]     369             jsr   AutoScroll
61BD BD77F7           (C:\Users\bhrou\gi):00099 [8]     377             jsr   RunObjects
                      (C:\Users\bhrou\gi):00100                         _RunObjectRoutineA ObjID_Tilemap,glb_current_submap
                      (_RunObjectRoutine):00001                         _MountObject ObjID_Tilemap
61C0 B68DAE           (     _MountObject):00001 [5]     382             lda   Obj_Index_Page+ObjID_Tilemap
                      (     _MountObject):00002                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
61C3 BD78F1           (    _SetCartPageA):00002 [8]     390             jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
61C6 BE8DBB           (     _MountObject):00003 [6]     396             ldx   Obj_Index_Address+2*ObjID_Tilemap
61C9 B668B6           (_RunObjectRoutine):00002 [5]     401             lda   glb_current_submap        
61CC AD84             (_RunObjectRoutine):00003 [7]     408             jsr   ,x
61CE BD6A65           (C:\Users\bhrou\gi):00101 [8]     416             jsr   CheckSpritesRefresh
61D1 BD7175           (C:\Users\bhrou\gi):00102 [8]     424             jsr   EraseSprites
61D4 BD73CF           (C:\Users\bhrou\gi):00103 [8]     432             jsr   UnsetDisplayPriority
61D7 BD7BA2           (C:\Users\bhrou\gi):00104 [8]     440             jsr   DrawTilemap
61DA BD74AE           (C:\Users\bhrou\gi):00105 [8]     448             jsr   DrawSprites        
61DD 20D2             (C:\Users\bhrou\gi):00106 [3]     451             bra   LevelMainLoop
                      (C:\Users\bhrou\gi):00107                 
                      (C:\Users\bhrou\gi):00108                 * ==============================================================================
                      (C:\Users\bhrou\gi):00109                 * Game Mode RAM variables
                      (C:\Users\bhrou\gi):00110                 * ==============================================================================
                      (C:\Users\bhrou\gi):00111                         
                      (C:\Users\bhrou\gi):00112                         INCLUDE "./game-mode/LostWoods/LostWoodsRamData.asm"       
                      (./game-mode/LostW):00001                 ; RAM variables
                      (./game-mode/LostW):00002                 
                      (./game-mode/LostW):00003                 * ===========================================================================
                      (./game-mode/LostW):00004                 * Object Constants
                      (./game-mode/LostW):00005                 * ===========================================================================
                      (./game-mode/LostW):00006                 
                      (./game-mode/LostW):00007                 * ---------------------------------------------------------------------------
                      (./game-mode/LostW):00008                 * Object Status Table - OST
                      (./game-mode/LostW):00009                 * ---------------------------------------------------------------------------
                      (./game-mode/LostW):00010                 
61DF                  (./game-mode/LostW):00011                 Object_RAM 
61DF 05               (./game-mode/LostW):00012                                               fcb   ObjID_Triangle
61E0 0000000000000000 (./game-mode/LostW):00013                                               fill  0,object_size-1
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
                      (./game-mode/LostW):00014                 
6246 08               (./game-mode/LostW):00015                                               fcb   ObjID_Nindendo
6247 0000000000000000 (./game-mode/LostW):00016                                               fill  0,object_size-1
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
                      (./game-mode/LostW):00017                 
62AD 07               (./game-mode/LostW):00018                                               fcb   ObjID_Title
62AE 0000000000000000 (./game-mode/LostW):00019                                               fill  0,object_size-1
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
                      (./game-mode/LostW):00020                 
6314 0000000000000000 (./game-mode/LostW):00021                 Obj_PaletteFade               fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./game-mode/LostW):00022                 
637B 03               (./game-mode/LostW):00023                                               fcb   ObjID_Sword
637C 0000000000000000 (./game-mode/LostW):00024                                               fill  0,object_size-1
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
                      (./game-mode/LostW):00025                 
63E2 06               (./game-mode/LostW):00026                                               fcb   ObjID_Castle
63E3 0000000000000000 (./game-mode/LostW):00027                                               fill  0,object_size-1
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
                      (./game-mode/LostW):00028                 
6449 0000000000000000 (./game-mode/LostW):00029                 LinkData                      fill  0,object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./game-mode/LostW):00030                 
64B0                  (./game-mode/LostW):00031                 Reserved_Object_RAM
                      (./game-mode/LostW):00032                 ;                             fill  0,nb_reserved_objects*object_size
64B0                  (./game-mode/LostW):00033                 Reserved_Object_RAM_End
                      (./game-mode/LostW):00034                 
64B0                  (./game-mode/LostW):00035                 Dynamic_Object_RAM
64B0 0000000000000000 (./game-mode/LostW):00036                                               fill  0,nb_dynamic_objects*object_size
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     000000000000
68B6                  (./game-mode/LostW):00037                 Dynamic_Object_RAM_End
                      (./game-mode/LostW):00038                 
68B6                  (./game-mode/LostW):00039                 LevelOnly_Object_RAM
                      (./game-mode/LostW):00040                 ;                             fill  0,nb_level_objects*object_size
68B6                  (./game-mode/LostW):00041                 LevelOnly_Object_RAM_End
68B6                  (./game-mode/LostW):00042                 Object_RAM_End
                      (./game-mode/LostW):00043                 
68B6 00               (./game-mode/LostW):00044                 glb_current_submap   fcb   0
                      (C:\Users\bhrou\gi):00113                 
                      (C:\Users\bhrou\gi):00114                 * ==============================================================================
                      (C:\Users\bhrou\gi):00115                 * Routines
                      (C:\Users\bhrou\gi):00116                 * ==============================================================================
                      (C:\Users\bhrou\gi):00117                 
                      (C:\Users\bhrou\gi):00118                         ; gfx rendering
                      (C:\Users\bhrou\gi):00119                         INCLUDE "./engine/graphics/Codec/DecRLE00.asm"
                      (./engine/graphics):00001                 *------------------------------------------------------------------------------*
                      (./engine/graphics):00002                 *                                                                              *
                      (./engine/graphics):00003                 * Decode RLE image data with transparency                                      *
                      (./engine/graphics):00004                 * Samuel Devulder (01/10/2021)                                                 *
                      (./engine/graphics):00005                 *                                                                              *
                      (./engine/graphics):00006                 *------------------------------------------------------------------------------*
                      (./engine/graphics):00007                 * Data :                                                                       *
                      (./engine/graphics):00008                 * ------                                                                       *
                      (./engine/graphics):00009                 * 00 000000              => end of data                                        *
                      (./engine/graphics):00010                 * 00 nnnnnn              => write ptr offset n:1,63 (unsigned)                 *
                      (./engine/graphics):00011                 * 01 000000 vvvvvvvv     => right pixel is transparent, v : byte to add        *
                      (./engine/graphics):00012                 * 01 nnnnnn vvvvvvvv     => n: nb of byte to repeat (unsigned), value          *
                      (./engine/graphics):00013                 * 10 000000 vvvvvvvv     => left pixel is transparent, v: byte to add          *
                      (./engine/graphics):00014                 * 10 nnnnnn vvvvvvvv ... => n: nb of bytes to write (unsigned), values         *
                      (./engine/graphics):00015                 * 11 nnnnnn nnnnnnnn     => write ptr offset n:-8192,8191 (14 bits signed)     *
                      (./engine/graphics):00016                 *                                                                              *
                      (./engine/graphics):00017                 * Registers :                                                                  *
                      (./engine/graphics):00018                 * -----------                                                                  *
                      (./engine/graphics):00019                 * y  : Ptr to data part 1                                                      *
                      (./engine/graphics):00020                 * u  : Ptr to data part 2                                                      *
                      (./engine/graphics):00021                 * glb_screen_location_1 : Ptr to screen part 1                                 *
                      (./engine/graphics):00022                 * glb_screen_location_2 : Ptr to screen part 2                                 *
                      (./engine/graphics):00023                 *------------------------------------------------------------------------------*
                      (./engine/graphics):00024                 
                      (./engine/graphics):00025                 
68B7                  (./engine/graphics):00026                 DecMapAlpha
68B7 9EFC             (./engine/graphics):00027 [5]     456             ldx   <glb_screen_location_1
68B9 FF690B           (./engine/graphics):00028 [6]     462             stu   @end+2
68BC 108C0000         (./engine/graphics):00029 [5]     467             cmpy  #0                       
68C0 2747             (./engine/graphics):00030 [3]     470             beq   @end                     ; branch if no data part 1
68C2 2008             (./engine/graphics):00031 [3]     473             bra   @loop
68C4                  (./engine/graphics):00032                 @l10x
68C4 E6A0             (./engine/graphics):00033 [6]     479             ldb   ,y+                      ; non-identical bytes
68C6 E780             (./engine/graphics):00034 [6]     485             stb   ,x+
68C8 8002             (./engine/graphics):00035 [2]     487             suba  #2
68CA 26F8             (./engine/graphics):00036 [3]     490             bne   @l10x
68CC                  (./engine/graphics):00037                 @loop
68CC A6A0             (./engine/graphics):00038 [6]     496             lda   ,y+                      ; new chunk
68CE 48               (./engine/graphics):00039 [2]     498             lsla
68CF 240D             (./engine/graphics):00040 [3]     501             bcc   @l0x
68D1 272C             (./engine/graphics):00041 [3]     504             beq   @maskl        
68D3 2AEF             (./engine/graphics):00042 [3]     507             bpl   @l10x
68D5                  (./engine/graphics):00043                 @l11x
68D5 48               (./engine/graphics):00044 [2]     509             lsla                           ; 14 bits offset
68D6 47               (./engine/graphics):00045 [2]     511             asra
68D7 47               (./engine/graphics):00046 [2]     513             asra 
68D8 E6A0             (./engine/graphics):00047 [6]     519             ldb   ,y+
68DA 308B             (./engine/graphics):00048 [8]     527             leax  d,x
68DC 20EE             (./engine/graphics):00049 [3]     530             bra   @loop
68DE                  (./engine/graphics):00050                 @l0x
68DE 2729             (./engine/graphics):00051 [3]     533             beq   @end
68E0 2B05             (./engine/graphics):00052 [3]     536             bmi   @l01x
68E2                  (./engine/graphics):00053                 @skip
68E2 E63F             (./engine/graphics):00054 [5]     541             ldb   -1,y                     ; 6 bits offset
68E4 3A               (./engine/graphics):00055 [3]     544             abx
68E5 20E5             (./engine/graphics):00056 [3]     547             bra   @loop
68E7                  (./engine/graphics):00057                 @l01x
68E7 847F             (./engine/graphics):00058 [2]     549             anda  #%01111111
68E9 270A             (./engine/graphics):00059 [3]     552             beq   @maskr
68EB E6A0             (./engine/graphics):00060 [6]     558             ldb   ,y+
68ED                  (./engine/graphics):00061                 @repeat
68ED E780             (./engine/graphics):00062 [6]     564             stb   ,x+                      ; repeat identical bytes
68EF 8002             (./engine/graphics):00063 [2]     566             suba  #2
68F1 26FA             (./engine/graphics):00064 [3]     569             bne   @repeat
68F3 20D7             (./engine/graphics):00065 [3]     572             bra   @loop
68F5                  (./engine/graphics):00066                 @maskr
68F5 C60F             (./engine/graphics):00067 [2]     574             ldb   #$0f                     ; write half byte (transparency px on right)
68F7 E484             (./engine/graphics):00068 [4]     578             andb  ,x
68F9 EAA0             (./engine/graphics):00069 [6]     584             orb   ,y+
68FB E780             (./engine/graphics):00070 [6]     590             stb   ,x+
68FD 20CD             (./engine/graphics):00071 [3]     593             bra   @loop
68FF                  (./engine/graphics):00072                 @maskl
68FF C6F0             (./engine/graphics):00073 [2]     595             ldb   #$f0                     ; write half byte (transparency px on left)
6901 E484             (./engine/graphics):00074 [4]     599             andb  ,x
6903 EAA0             (./engine/graphics):00075 [6]     605             orb   ,y+
6905 E780             (./engine/graphics):00076 [6]     611             stb   ,x+
6907 20C3             (./engine/graphics):00077 [3]     614             bra   @loop
6909                  (./engine/graphics):00078                 @end    
6909 108E0000         (./engine/graphics):00079 [4]     618             ldy   #0                       ; (dynamic) load next data ptr
690D 270A             (./engine/graphics):00080 [3]     621             beq   @rts
690F CC0000           (./engine/graphics):00081 [3]     624             ldd   #0                       
6912 FD690B           (./engine/graphics):00082 [6]     630             std   @end+2                   ; clear exit flag for second pass
6915 9EFA             (./engine/graphics):00083 [5]     635             ldx   <glb_screen_location_2
6917 20B3             (./engine/graphics):00084 [3]     638             bra   @loop
6919 39               (./engine/graphics):00085 [5]     643     @rts    rts
                      (C:\Users\bhrou\gi):00120                         INCLUDE "./engine/graphics/sprite/sprite-background-erase-ext-pack.asm" 
                      (./engine/graphics):00001                         INCLUDE "./engine/graphics/sprite/background-erase-mode/DisplaySprite.asm"      
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * DisplaySprite
                      (./engine/graphics):00003                 * -------------
                      (./engine/graphics):00004                 * Subroutine to manage sprite priority.
                      (./engine/graphics):00005                 * Object's priority is read and object is (un)registred in display engine.
                      (./engine/graphics):00006                 * priority: 0 - unregister
                      (./engine/graphics):00007                 * priority: 1-8 - register sprite (2:front, ..., 8:back)  
                      (./engine/graphics):00008                 *
                      (./engine/graphics):00009                 * Sprite priority is stored in an open doubly linked list
                      (./engine/graphics):00010                 * it allows to keep an exact sprite order for each screen buffer 
                      (./engine/graphics):00011                 *
                      (./engine/graphics):00012                 * DisplaySprite
                      (./engine/graphics):00013                 * input REG : [u] object pointer (OST)
                      (./engine/graphics):00014                 *
                      (./engine/graphics):00015                 * DisplaySprite_x / DisplaySprite2
                      (./engine/graphics):00016                 * input REG : [x] object pointer (OST)
                      (./engine/graphics):00017                 *
                      (./engine/graphics):00018                 * DisplaySprite_priority / DisplaySprite3
                      (./engine/graphics):00019                 * input REG : [u] object pointer (OST)
                      (./engine/graphics):00020                 * input REG : [a] priority
                      (./engine/graphics):00021                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00022                 
691A                  (./engine/graphics):00023                 DisplaySprite_priority
691A                  (./engine/graphics):00024                 DisplaySprite3                              ; u : ptr object RAM, a : priority
691A 3456             (./engine/graphics):00025 [11]    654             pshs  d,x,u
691C 200A             (./engine/graphics):00026 [3]     657             bra   DSP_Start
                      (./engine/graphics):00027                 
691E                  (./engine/graphics):00028                 DisplaySprite_x                             ; x : ptr object RAM
691E                  (./engine/graphics):00029                 DisplaySprite2
691E 3456             (./engine/graphics):00030 [11]    668             pshs  d,x,u
6920 1F13             (./engine/graphics):00031 [6]     674             tfr   x,u
6922 2004             (./engine/graphics):00032 [3]     677             bra   DSP_Start
                      (./engine/graphics):00033                         
6924                  (./engine/graphics):00034                 DisplaySprite                               ; u : ptr object RAM
6924 3456             (./engine/graphics):00035 [11]    688             pshs  d,x,u
6926 A643             (./engine/graphics):00036 [5]     693             lda   priority,u                    ; read priority set for this object
                      (./engine/graphics):00037                         
6928                  (./engine/graphics):00038                 DSP_Start
6928 E642             (./engine/graphics):00039 [5]     698             ldb   render_flags,u
692A C47F             (./engine/graphics):00040 [2]     700             andb  #^render_hide_mask            ; unset hide flag
692C E742             (./engine/graphics):00041 [5]     705             stb   render_flags,u
                      (./engine/graphics):00042                 
692E F678F0           (./engine/graphics):00043 [5]     710             ldb   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
6931 2609             (./engine/graphics):00044 [3]     713             bne   DSP_SetBuffer1
                      (./engine/graphics):00045                         
6933                  (./engine/graphics):00046                 DSP_SetBuffer0        
6933 30C83F           (./engine/graphics):00047 [5]     718             leax  rsv_buffer_0,u                ; set x pointer to object variables that belongs to screen buffer 0
6936 108E69A3         (./engine/graphics):00048 [4]     722             ldy   #DPS_buffer_0                 ; set y pointer to Display Priority Structure that belongs to screen buffer 0
693A 2007             (./engine/graphics):00049 [3]     725             bra   DSP_BufferPositionned
                      (./engine/graphics):00050                         
693C                  (./engine/graphics):00051                 DSP_SetBuffer1       
693C 30C853           (./engine/graphics):00052 [5]     730             leax  rsv_buffer_1,u                ; set x pointer to object variables that belongs to screen buffer 1
693F 108E69E5         (./engine/graphics):00053 [4]     734             ldy   #DPS_buffer_1                 ; set y pointer to Display Priority Structure that belongs to screen buffer 1        
                      (./engine/graphics):00054                         
6943                  (./engine/graphics):00055                 DSP_BufferPositionned       
6943 A184             (./engine/graphics):00056 [4]     738             cmpa  buf_priority,x
6945 271E             (./engine/graphics):00057 [3]     741             beq   DSP_rts                       ; priority and current priority are the same: nothing to do
6947 E684             (./engine/graphics):00058 [4]     745             ldb   buf_priority,x   
6949 2641             (./engine/graphics):00059 [3]     748             bne   DSP_ChangePriority
                      (./engine/graphics):00060                         
694B                  (./engine/graphics):00061                 DSP_InitPriority
694B A784             (./engine/graphics):00062 [4]     752             sta   buf_priority,x                ; init priority for this screen buffer with priority from object
                      (./engine/graphics):00063                         
694D                  (./engine/graphics):00064                 DSP_CheckLastEntry
694D 31A90012         (./engine/graphics):00065 [8]     760             leay  buf_Tbl_Priority_Last_Entry,y
6951 48               (./engine/graphics):00066 [2]     762             asla                                ; change priority number to priority index (value x2)        
6952 6DA6             (./engine/graphics):00067 [7]     769             tst   a,y                           ; test left byte only is ok, no object will be stored at $00__ address
6954 2611             (./engine/graphics):00068 [3]     772             bne   DSP_addToExistingNode         ; not the first object at this priority level, branch
                      (./engine/graphics):00069                         
6956                  (./engine/graphics):00070                 DSP_addFirstNode        
6956 EFA6             (./engine/graphics):00071 [6]     778             stu   a,y                           ; save object as last entry in linked list
6958 31A9FFEE         (./engine/graphics):00072 [8]     786             leay  buf_Tbl_Priority_First_Entry-buf_Tbl_Priority_Last_Entry,y
695C EFA6             (./engine/graphics):00073 [6]     792             stu   a,y                           ; save object as first entry in linked list
695E CC0000           (./engine/graphics):00074 [3]     795             ldd   #0
6961 ED01             (./engine/graphics):00075 [6]     801             std   buf_priority_prev_obj,x       ; clear object prev and next link, it's the only object at this priority level
6963 ED03             (./engine/graphics):00076 [6]     807             std   buf_priority_next_obj,x
                      (./engine/graphics):00077                         
6965                  (./engine/graphics):00078                 DSP_rts
6965 35D6             (./engine/graphics):00079 [13]    820             puls  d,x,u,pc                      ; rts        
                      (./engine/graphics):00080                         
6967                  (./engine/graphics):00081                 DSP_addToExistingNode
6967 AEA6             (./engine/graphics):00082 [6]     826             ldx   a,y                           ; x register now store last object at the priority level of current object
6969 F678F0           (./engine/graphics):00083 [5]     831             ldb   glb_Cur_Wrk_Screen_Id
696C 260E             (./engine/graphics):00084 [3]     834             bne   DSP_LinkBuffer1
696E EF8842           (./engine/graphics):00085 [6]     840             stu   rsv_priority_next_obj_0,x     ; link last object with current object if active screen buffer 0
6971 AFC840           (./engine/graphics):00086 [6]     846             stx   rsv_priority_prev_obj_0,u     ; link current object with previous object
6974 6FC842           (./engine/graphics):00087 [7]     853             clr   rsv_priority_next_obj_0,u     ; clear object next link        
6977 6FC843           (./engine/graphics):00088 [7]     860             clr   rsv_priority_next_obj_0+1,u   ; clear object next link        
697A 200C             (./engine/graphics):00089 [3]     863             bra   DSP_LinkCurWithPrev        
697C                  (./engine/graphics):00090                 DSP_LinkBuffer1        
697C EF8856           (./engine/graphics):00091 [6]     869             stu   rsv_priority_next_obj_1,x     ; link last object with current object if active screen buffer 1
697F AFC854           (./engine/graphics):00092 [6]     875             stx   rsv_priority_prev_obj_1,u     ; link current object with previous object
6982 6FC856           (./engine/graphics):00093 [7]     882             clr   rsv_priority_next_obj_1,u     ; clear object next link        
6985 6FC857           (./engine/graphics):00094 [7]     889             clr   rsv_priority_next_obj_1+1,u   ; clear object next link        
                      (./engine/graphics):00095                         
6988                  (./engine/graphics):00096                 DSP_LinkCurWithPrev        
6988 EFA6             (./engine/graphics):00097 [6]     895             stu   a,y                           ; update last object in index
698A 35D6             (./engine/graphics):00098 [13]    908             puls  d,x,u,pc                      ; rts
                      (./engine/graphics):00099                         
698C                  (./engine/graphics):00100                 DSP_ChangePriority
698C 3426             (./engine/graphics):00101 [9]     917             pshs  d,y
698E 31A90024         (./engine/graphics):00102 [8]     925             leay  buf_Lst_Priority_Unset,y
6992 EFB4             (./engine/graphics):00103 [8]     933             stu   [,y]                          ; add current object address to last free unset list cell
6994 ECA4             (./engine/graphics):00104 [5]     938             ldd   ,y
6996 C30002           (./engine/graphics):00105 [4]     942             addd  #2
6999 EDA4             (./engine/graphics):00106 [5]     947             std   ,y                            ; set unset list free index to next free cell of unset list
699B 3526             (./engine/graphics):00107 [9]     956             puls  d,y                           ; get back DSP_buffer in y
699D 8100             (./engine/graphics):00108 [2]     958             cmpa  #0
699F 26AC             (./engine/graphics):00109 [3]     961             bne   DSP_CheckLastEntry            ; priority is != 0, branch to add object to display priority list
69A1 35D6             (./engine/graphics):00110 [13]    974             puls  d,x,u,pc                      ; rts
                      (./engine/graphics):00111                 
                      (./engine/graphics):00112                         
                      (./engine/graphics):00113                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00114                                                                       *; Subroutine to display a sprite/object, when a0 is the object RAM
                      (./engine/graphics):00115                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00116                                                                       *
                      (./engine/graphics):00117                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00118                                                                       *
                      (./engine/graphics):00119                                                                       *; sub_164F4:
                      (./engine/graphics):00120                                                                       *DisplaySprite:
                      (./engine/graphics):00121                                                                       *        lea     (Sprite_Table_Input).w,a1
                      (./engine/graphics):00122                                                                       *        move.w  priority(a0),d0
                      (./engine/graphics):00123                                                                       *        lsr.w   #1,d0
                      (./engine/graphics):00124                                                                       *        andi.w  #$380,d0
                      (./engine/graphics):00125                                                                       *        adda.w  d0,a1
                      (./engine/graphics):00126                                                                       *        cmpi.w  #$7E,(a1)
                      (./engine/graphics):00127                                                                       *        bhs.s   return_16510
                      (./engine/graphics):00128                                                                       *        addq.w  #2,(a1)
                      (./engine/graphics):00129                                                                       *        adda.w  (a1),a1
                      (./engine/graphics):00130                                                                       *        move.w  a0,(a1)
                      (./engine/graphics):00131                                                                       *
                      (./engine/graphics):00132                                                                       *return_16510:
                      (./engine/graphics):00133                                                                       *        rts
                      (./engine/graphics):00134                                                                       *; End of function DisplaySprite
                      (./engine/graphics):00135                                                                       *
                      (./engine/graphics):00136                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00137                                                                       *; Subroutine to display a sprite/object, when a1 is the object RAM
                      (./engine/graphics):00138                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00139                                                                       *
                      (./engine/graphics):00140                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00141                                                                       *
                      (./engine/graphics):00142                                                                       *; sub_16512:
                      (./engine/graphics):00143                                                                       *DisplaySprite2:
                      (./engine/graphics):00144                                                                       *        lea     (Sprite_Table_Input).w,a2
                      (./engine/graphics):00145                                                                       *        move.w  priority(a1),d0
                      (./engine/graphics):00146                                                                       *        lsr.w   #1,d0
                      (./engine/graphics):00147                                                                       *        andi.w  #$380,d0
                      (./engine/graphics):00148                                                                       *        adda.w  d0,a2
                      (./engine/graphics):00149                                                                       *        cmpi.w  #$7E,(a2)
                      (./engine/graphics):00150                                                                       *        bhs.s   return_1652E
                      (./engine/graphics):00151                                                                       *        addq.w  #2,(a2)
                      (./engine/graphics):00152                                                                       *        adda.w  (a2),a2
                      (./engine/graphics):00153                                                                       *        move.w  a1,(a2)
                      (./engine/graphics):00154                                                                       *
                      (./engine/graphics):00155                                                                       *return_1652E:
                      (./engine/graphics):00156                                                                       *        rts
                      (./engine/graphics):00157                                                                       *; End of function DisplaySprite2
                      (./engine/graphics):00158                                                                       *
                      (./engine/graphics):00159                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00160                                                                       *; Subroutine to display a sprite/object, when a0 is the object RAM
                      (./engine/graphics):00161                                                                       *; and d0 is already (priority/2)&$380
                      (./engine/graphics):00162                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00163                                                                       *
                      (./engine/graphics):00164                                                                       *; loc_16530:
                      (./engine/graphics):00165                                                                       *DisplaySprite3:
                      (./engine/graphics):00166                                                                       *        lea     (Sprite_Table_Input).w,a1
                      (./engine/graphics):00167                                                                       *        adda.w  d0,a1
                      (./engine/graphics):00168                                                                       *        cmpi.w  #$7E,(a1)
                      (./engine/graphics):00169                                                                       *        bhs.s   return_16542
                      (./engine/graphics):00170                                                                       *        addq.w  #2,(a1)
                      (./engine/graphics):00171                                                                       *        adda.w  (a1),a1
                      (./engine/graphics):00172                                                                       *        move.w  a0,(a1)
                      (./engine/graphics):00173                                                                       *
                      (./engine/graphics):00174                                                                       *return_16542:
                      (./engine/graphics):00175                                                                       *        rts   
                      (./engine/graphics):00176                 
                      (./engine/graphics):00177                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00178                 * Display Priority Structure - DPS
                      (./engine/graphics):00179                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00180                 
69A3                  (./engine/graphics):00181                 DPS_buffer_0
69A3 0000000000000000 (./engine/graphics):00182                 Tbl_Priority_First_Entry_0    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
69B5 0000000000000000 (./engine/graphics):00183                 Tbl_Priority_Last_Entry_0     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 0) index 0 unused
     0000000000000000
     0000
69C7 69C9             (./engine/graphics):00184                 Lst_Priority_Unset_0          fdb   Lst_Priority_Unset_0+2     ; pointer to end of list (initialized to its own address+2) (buffer 0)
69C9 0000000000000000 (./engine/graphics):00185                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     00000000
69E5                  (./engine/graphics):00186                 DPS_buffer_1                              
69E5 0000000000000000 (./engine/graphics):00187                 Tbl_Priority_First_Entry_1    fill  0,2+(nb_priority_levels*2) ; first address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
69F7 0000000000000000 (./engine/graphics):00188                 Tbl_Priority_Last_Entry_1     fill  0,2+(nb_priority_levels*2) ; last address of object in linked list for each priority index (buffer 1) index 0 unused
     0000000000000000
     0000
6A09 6A0B             (./engine/graphics):00189                 Lst_Priority_Unset_1          fdb   Lst_Priority_Unset_1+2     ; pointer to end of list (initialized to its own address+2) (buffer 1)
6A0B 0000000000000000 (./engine/graphics):00190                                               fill  0,(nb_graphical_objects*2) ; objects to delete from priority list
     0000000000000000
     0000000000000000
     00000000
6A27                  (./engine/graphics):00191                 DPS_buffer_end                              
                      (./engine/graphics):00192                 
     0000             (./engine/graphics):00193                 buf_Tbl_Priority_First_Entry  equ   0                                                            
     0012             (./engine/graphics):00194                 buf_Tbl_Priority_Last_Entry   equ   Tbl_Priority_Last_Entry_0-DPS_buffer_0          
     0024             (./engine/graphics):00195                 buf_Lst_Priority_Unset        equ   Lst_Priority_Unset_0-DPS_buffer_0                                       
                      (./engine/graphics):00002                         INCLUDE "./engine/graphics/sprite/background-erase-mode/MarkObjGone.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * MarkObjGone
                      (./engine/graphics):00003                 * -----------
                      (./engine/graphics):00004                 * Subroutine to destroy an object that is outside of destroy/respawn limit
                      (./engine/graphics):00005                 *
                      (./engine/graphics):00006                 * input REG : none
                      (./engine/graphics):00007                 * clear REG : none
                      (./engine/graphics):00008                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00009                 
                      (./engine/graphics):00010                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00011                                                                       *; Routines to mark an enemy/monitor/ring/platform as destroyed
                      (./engine/graphics):00012                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00013                                                                       *
                      (./engine/graphics):00014                                                                       *; ===========================================================================
                      (./engine/graphics):00015                                                                       *; input: a0 = the object
                      (./engine/graphics):00016                                                                       *; loc_163D2:
6A27                  (./engine/graphics):00017                 MarkObjGone                                           *MarkObjGone:
                      (./engine/graphics):00018                                                                       *        tst.w   (Two_player_mode).w     ; is it two player mode?
                      (./engine/graphics):00019                                                                       *        beq.s   +                       ; if not, branch
                      (./engine/graphics):00020                                                                       *        bra.w   DisplaySprite
                      (./engine/graphics):00021                                                                       *+
                      (./engine/graphics):00022                                                                       *        move.w  x_pos(a0),d0
                      (./engine/graphics):00023                                                                       *        andi.w  #$FF80,d0
                      (./engine/graphics):00024                                                                       *        sub.w   (Camera_X_pos_coarse).w,d0
                      (./engine/graphics):00025                                                                       *        cmpi.w  #$80+320+$40+$80,d0     ; This gives an object $80 pixels of room offscreen before being unloaded (the $40 is there to round up 320 to a multiple of $80)
                      (./engine/graphics):00026                                                                       *        bhi.w   +
6A27 7E6924           (./engine/graphics):00027 [4]     978             jmp   DisplaySprite                           *        bra.w   DisplaySprite
                      (./engine/graphics):00028                                                                       *
                      (./engine/graphics):00029                                                                       *+       lea     (Object_Respawn_Table).w,a2
                      (./engine/graphics):00030                                                                       *        moveq   #0,d0
                      (./engine/graphics):00031                                                                       *        move.b  respawn_index(a0),d0
                      (./engine/graphics):00032                                                                       *        beq.s   +
                      (./engine/graphics):00033                                                                       *        bclr    #7,2(a2,d0.w)
                      (./engine/graphics):00034                                                                       *+
6A2A 7E76FC           (./engine/graphics):00035 [4]     982             jmp   DeleteObject                            *        bra.w   DeleteObject
                      (./engine/graphics):00036                                                                       *; ===========================================================================
                      (./engine/graphics):00037                                                                       *; input: d0 = the object's x position
                      (./engine/graphics):00038                                                                       *; loc_1640A:
                      (./engine/graphics):00039                                                                       *MarkObjGone2:
                      (./engine/graphics):00040                                                                       *        tst.w   (Two_player_mode).w
                      (./engine/graphics):00041                                                                       *        beq.s   +
                      (./engine/graphics):00042                                                                       *        bra.w   DisplaySprite
                      (./engine/graphics):00043                                                                       *+
                      (./engine/graphics):00044                                                                       *        andi.w  #$FF80,d0
                      (./engine/graphics):00045                                                                       *        sub.w   (Camera_X_pos_coarse).w,d0
                      (./engine/graphics):00046                                                                       *        cmpi.w  #$80+320+$40+$80,d0     ; This gives an object $80 pixels of room offscreen before being unloaded (the $40 is there to round up 320 to a multiple of $80)
                      (./engine/graphics):00047                                                                       *        bhi.w   +
                      (./engine/graphics):00048                                                                       *        bra.w   DisplaySprite
                      (./engine/graphics):00049                                                                       *+
                      (./engine/graphics):00050                                                                       *        lea     (Object_Respawn_Table).w,a2
                      (./engine/graphics):00051                                                                       *        moveq   #0,d0
                      (./engine/graphics):00052                                                                       *        move.b  respawn_index(a0),d0
                      (./engine/graphics):00053                                                                       *        beq.s   +
                      (./engine/graphics):00054                                                                       *        bclr    #7,2(a2,d0.w)
                      (./engine/graphics):00055                                                                       *+
                      (./engine/graphics):00056                                                                       *        bra.w   DeleteObject
                      (./engine/graphics):00057                                                                       *; ===========================================================================
                      (./engine/graphics):00058                                                                       *; input: a0 = the object
                      (./engine/graphics):00059                                                                       *; does nothing instead of calling DisplaySprite in the case of no deletion
                      (./engine/graphics):00060                                                                       *; loc_1643E:
                      (./engine/graphics):00061                                                                       *MarkObjGone3:
                      (./engine/graphics):00062                                                                       *        tst.w   (Two_player_mode).w
                      (./engine/graphics):00063                                                                       *        beq.s   +
                      (./engine/graphics):00064                                                                       *        rts
                      (./engine/graphics):00065                                                                       *+
                      (./engine/graphics):00066                                                                       *        move.w  x_pos(a0),d0
                      (./engine/graphics):00067                                                                       *        andi.w  #$FF80,d0
                      (./engine/graphics):00068                                                                       *        sub.w   (Camera_X_pos_coarse).w,d0
                      (./engine/graphics):00069                                                                       *        cmpi.w  #$80+320+$40+$80,d0     ; This gives an object $80 pixels of room offscreen before being unloaded (the $40 is there to round up 320 to a multiple of $80)
                      (./engine/graphics):00070                                                                       *        bhi.w   +
                      (./engine/graphics):00071                                                                       *        rts
                      (./engine/graphics):00072                                                                       *+
                      (./engine/graphics):00073                                                                       *        lea     (Object_Respawn_Table).w,a2
                      (./engine/graphics):00074                                                                       *        moveq   #0,d0
                      (./engine/graphics):00075                                                                       *        move.b  respawn_index(a0),d0
                      (./engine/graphics):00076                                                                       *        beq.s   +
                      (./engine/graphics):00077                                                                       *        bclr    #7,2(a2,d0.w)
                      (./engine/graphics):00078                                                                       *+
                      (./engine/graphics):00079                                                                       *        bra.w   DeleteObject
                      (./engine/graphics):00080                                                                       *; ===========================================================================
                      (./engine/graphics):00081                                                                       *; input: a0 = the object
                      (./engine/graphics):00082                                                                       *; loc_16472:
                      (./engine/graphics):00083                                                                       *MarkObjGone_P1:
                      (./engine/graphics):00084                                                                       *        tst.w   (Two_player_mode).w
                      (./engine/graphics):00085                                                                       *        bne.s   MarkObjGone_P2
                      (./engine/graphics):00086                                                                       *        move.w  x_pos(a0),d0
                      (./engine/graphics):00087                                                                       *        andi.w  #$FF80,d0
                      (./engine/graphics):00088                                                                       *        sub.w   (Camera_X_pos_coarse).w,d0
                      (./engine/graphics):00089                                                                       *        cmpi.w  #$80+320+$40+$80,d0     ; This gives an object $80 pixels of room offscreen before being unloaded (the $40 is there to round up 320 to a multiple of $80)
                      (./engine/graphics):00090                                                                       *        bhi.w   +
                      (./engine/graphics):00091                                                                       *        bra.w   DisplaySprite
                      (./engine/graphics):00092                                                                       *+
                      (./engine/graphics):00093                                                                       *        lea     (Object_Respawn_Table).w,a2
                      (./engine/graphics):00094                                                                       *        moveq   #0,d0
                      (./engine/graphics):00095                                                                       *        move.b  respawn_index(a0),d0
                      (./engine/graphics):00096                                                                       *        beq.s   +
                      (./engine/graphics):00097                                                                       *        bclr    #7,2(a2,d0.w)
                      (./engine/graphics):00098                                                                       *+
                      (./engine/graphics):00099                                                                       *        bra.w   DeleteObject
                      (./engine/graphics):00100                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00101                                                                       *; input: a0 = the object
                      (./engine/graphics):00102                                                                       *; loc_164A6:
                      (./engine/graphics):00103                                                                       *MarkObjGone_P2:
                      (./engine/graphics):00104                                                                       *        move.w  x_pos(a0),d0
                      (./engine/graphics):00105                                                                       *        andi.w  #$FF00,d0
                      (./engine/graphics):00106                                                                       *        move.w  d0,d1
                      (./engine/graphics):00107                                                                       *        sub.w   (Camera_X_pos_coarse).w,d0
                      (./engine/graphics):00108                                                                       *        cmpi.w  #$300,d0
                      (./engine/graphics):00109                                                                       *        bhi.w   +
                      (./engine/graphics):00110                                                                       *        bra.w   DisplaySprite
                      (./engine/graphics):00111                                                                       *+
                      (./engine/graphics):00112                                                                       *        sub.w   (Camera_X_pos_coarse_P2).w,d1
                      (./engine/graphics):00113                                                                       *        cmpi.w  #$300,d1
                      (./engine/graphics):00114                                                                       *        bhi.w   +
                      (./engine/graphics):00115                                                                       *        bra.w   DisplaySprite
                      (./engine/graphics):00116                                                                       *+
                      (./engine/graphics):00117                                                                       *        lea     (Object_Respawn_Table).w,a2
                      (./engine/graphics):00118                                                                       *        moveq   #0,d0
                      (./engine/graphics):00119                                                                       *        move.b  respawn_index(a0),d0
                      (./engine/graphics):00120                                                                       *        beq.s   +
                      (./engine/graphics):00121                                                                       *        bclr    #7,2(a2,d0.w)
                      (./engine/graphics):00122                                                                       *+
                      (./engine/graphics):00123                                                                       *        bra.w   DeleteObject ; useless branch...
                      (./engine/graphics):00124                                                                       *
                      (./engine/graphics):00125                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00126                                                                       *; Subroutine to delete an object
                      (./engine/graphics):00127                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00128                                                                       *
                      (./engine/graphics):00129                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00130                                                                       *
                      (./engine/graphics):00131                                                                       *; freeObject:
                      (./engine/graphics):00132                 ; loaded in main                                      *DeleteObject:
                      (./engine/graphics):00133                                                                       *        movea.l a0,a1
                      (./engine/graphics):00134                                                                       *
                      (./engine/graphics):00135                                                                       *; sub_164E8:
                      (./engine/graphics):00136                                                                       *DeleteObject2:
                      (./engine/graphics):00137                                                                       *        moveq   #0,d1
                      (./engine/graphics):00138                                                                       *
                      (./engine/graphics):00139                                                                       *        moveq   #bytesToLcnt(next_object),d0 ; we want to clear up to the next object
                      (./engine/graphics):00140                                                                       *        ; delete the object by setting all of its bytes to 0
                      (./engine/graphics):00141                                                                       *-       move.l  d1,(a1)+
                      (./engine/graphics):00142                                                                       *        dbf     d0,-
                      (./engine/graphics):00143                                                                       *    if object_size&3
                      (./engine/graphics):00144                                                                       *        move.w  d1,(a1)+
                      (./engine/graphics):00145                                                                       *    endif
                      (./engine/graphics):00146                                                                       *
                      (./engine/graphics):00147                                                                       *        rts
                      (./engine/graphics):00148                                                                       *; End of function DeleteObject2
                      (./engine/graphics):00003                         INCLUDE "./engine/graphics/sprite/background-erase-mode/CheckSpritesRefresh.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * CheckSpritesRefresh
                      (./engine/graphics):00003                 * -------------------
                      (./engine/graphics):00004                 * Subroutine to determine if sprites are gonna be erased and/or drawn
                      (./engine/graphics):00005                 * Read Display Priority Structure (back to front)
                      (./engine/graphics):00006                 * priority: 0 - unregistred
                      (./engine/graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./engine/graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./engine/graphics):00009                 *
                      (./engine/graphics):00010                 * input REG : none
                      (./engine/graphics):00011                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00012                                                 
                      (./engine/graphics):00013                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00014                 * Sub Priority Objects List - SOL
                      (./engine/graphics):00015                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00016                 
6A2D 0000000000000000 (./engine/graphics):00017                 Tbl_Sub_Object_Erase          fill  0,nb_graphical_objects*2    ; entries of objects that have erase flag in the order back to front
     0000000000000000
     0000000000000000
     00000000
6A49 0000000000000000 (./engine/graphics):00018                 Tbl_Sub_Object_Draw           fill  0,nb_graphical_objects*2    ; entries of objects that have draw flag in the order back to front                                
     0000000000000000
     0000000000000000
     00000000
                      (./engine/graphics):00019                                                            
6A65                  (./engine/graphics):00020                 CheckSpritesRefresh
                      (./engine/graphics):00021                 
6A65                  (./engine/graphics):00022                 CSR_Start
6A65 CC6A2D           (./engine/graphics):00023 [3]     985             ldd   #Tbl_Sub_Object_Erase
6A68 DDF7             (./engine/graphics):00024 [5]     990             std   <glb_cur_ptr_sub_obj_erase
6A6A CC6A49           (./engine/graphics):00025 [3]     993             ldd   #Tbl_Sub_Object_Draw
6A6D DDF5             (./engine/graphics):00026 [5]     998             std   <glb_cur_ptr_sub_obj_draw
6A6F B678F0           (./engine/graphics):00027 [5]     1003            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
6A72 2666             (./engine/graphics):00028 [3]     1006            bne   CSR_SetBuffer1
                      (./engine/graphics):00029                         
6A74                  (./engine/graphics):00030                 CSR_SetBuffer0        
6A74 863F             (./engine/graphics):00031 [2]     1008            lda   #rsv_buffer_0                 ; set offset to object variables that belongs to screen buffer 0
6A76 B76B42           (./engine/graphics):00032 [5]     1013            sta   CSR_ProcessEachPriorityLevel+2    
6A79                  (./engine/graphics):00033                 CSR_P8B0
6A79 FE69B3           (./engine/graphics):00034 [6]     1019            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
6A7C 2707             (./engine/graphics):00035 [3]     1022            beq   CSR_P7B0
6A7E 8608             (./engine/graphics):00036 [2]     1024            lda   #$08
6A80 97F9             (./engine/graphics):00037 [4]     1028            sta   <glb_cur_priority        
6A82 BD6B40           (./engine/graphics):00038 [8]     1036            jsr   CSR_ProcessEachPriorityLevel   
6A85                  (./engine/graphics):00039                 CSR_P7B0
6A85 FE69B1           (./engine/graphics):00040 [6]     1042            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
6A88 2707             (./engine/graphics):00041 [3]     1045            beq   CSR_P6B0
6A8A 8607             (./engine/graphics):00042 [2]     1047            lda   #$07
6A8C 97F9             (./engine/graphics):00043 [4]     1051            sta   <glb_cur_priority        
6A8E BD6B40           (./engine/graphics):00044 [8]     1059            jsr   CSR_ProcessEachPriorityLevel   
6A91                  (./engine/graphics):00045                 CSR_P6B0
6A91 FE69AF           (./engine/graphics):00046 [6]     1065            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
6A94 2707             (./engine/graphics):00047 [3]     1068            beq   CSR_P5B0
6A96 8606             (./engine/graphics):00048 [2]     1070            lda   #$06
6A98 97F9             (./engine/graphics):00049 [4]     1074            sta   <glb_cur_priority        
6A9A BD6B40           (./engine/graphics):00050 [8]     1082            jsr   CSR_ProcessEachPriorityLevel   
6A9D                  (./engine/graphics):00051                 CSR_P5B0
6A9D FE69AD           (./engine/graphics):00052 [6]     1088            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
6AA0 2707             (./engine/graphics):00053 [3]     1091            beq   CSR_P4B0
6AA2 8605             (./engine/graphics):00054 [2]     1093            lda   #$05
6AA4 97F9             (./engine/graphics):00055 [4]     1097            sta   <glb_cur_priority                       
6AA6 BD6B40           (./engine/graphics):00056 [8]     1105            jsr   CSR_ProcessEachPriorityLevel   
6AA9                  (./engine/graphics):00057                 CSR_P4B0
6AA9 FE69AB           (./engine/graphics):00058 [6]     1111            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
6AAC 2707             (./engine/graphics):00059 [3]     1114            beq   CSR_P3B0
6AAE 8604             (./engine/graphics):00060 [2]     1116            lda   #$04
6AB0 97F9             (./engine/graphics):00061 [4]     1120            sta   <glb_cur_priority                       
6AB2 BD6B40           (./engine/graphics):00062 [8]     1128            jsr   CSR_ProcessEachPriorityLevel               
6AB5                  (./engine/graphics):00063                 CSR_P3B0
6AB5 FE69A9           (./engine/graphics):00064 [6]     1134            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
6AB8 2707             (./engine/graphics):00065 [3]     1137            beq   CSR_P2B0
6ABA 8603             (./engine/graphics):00066 [2]     1139            lda   #$03
6ABC 97F9             (./engine/graphics):00067 [4]     1143            sta   <glb_cur_priority                       
6ABE BD6B40           (./engine/graphics):00068 [8]     1151            jsr   CSR_ProcessEachPriorityLevel      
6AC1                  (./engine/graphics):00069                 CSR_P2B0
6AC1 FE69A7           (./engine/graphics):00070 [6]     1157            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
6AC4 2707             (./engine/graphics):00071 [3]     1160            beq   CSR_P1B0
6AC6 8602             (./engine/graphics):00072 [2]     1162            lda   #$02
6AC8 97F9             (./engine/graphics):00073 [4]     1166            sta   <glb_cur_priority                       
6ACA BD6B40           (./engine/graphics):00074 [8]     1174            jsr   CSR_ProcessEachPriorityLevel  
6ACD                  (./engine/graphics):00075                 CSR_P1B0
6ACD FE69A5           (./engine/graphics):00076 [6]     1180            ldu   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
6AD0 2707             (./engine/graphics):00077 [3]     1183            beq   CSR_rtsB0
6AD2 8601             (./engine/graphics):00078 [2]     1185            lda   #$01
6AD4 97F9             (./engine/graphics):00079 [4]     1189            sta   <glb_cur_priority                       
6AD6 BD6B40           (./engine/graphics):00080 [8]     1197            jsr   CSR_ProcessEachPriorityLevel
6AD9                  (./engine/graphics):00081                 CSR_rtsB0        
6AD9 39               (./engine/graphics):00082 [5]     1202            rts
                      (./engine/graphics):00083                         
6ADA                  (./engine/graphics):00084                 CSR_SetBuffer1       
6ADA 8653             (./engine/graphics):00085 [2]     1204            lda   #rsv_buffer_1                 ; set offset to object variables that belongs to screen buffer 1
6ADC B76B42           (./engine/graphics):00086 [5]     1209            sta   CSR_ProcessEachPriorityLevel+2        
6ADF                  (./engine/graphics):00087                 CSR_P8B1
6ADF FE69F5           (./engine/graphics):00088 [6]     1215            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
6AE2 2707             (./engine/graphics):00089 [3]     1218            beq   CSR_P7B1
6AE4 8608             (./engine/graphics):00090 [2]     1220            lda   #$08
6AE6 97F9             (./engine/graphics):00091 [4]     1224            sta   <glb_cur_priority        
6AE8 BD6B40           (./engine/graphics):00092 [8]     1232            jsr   CSR_ProcessEachPriorityLevel   
6AEB                  (./engine/graphics):00093                 CSR_P7B1
6AEB FE69F3           (./engine/graphics):00094 [6]     1238            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
6AEE 2707             (./engine/graphics):00095 [3]     1241            beq   CSR_P6B1
6AF0 8607             (./engine/graphics):00096 [2]     1243            lda   #$07
6AF2 97F9             (./engine/graphics):00097 [4]     1247            sta   <glb_cur_priority                       
6AF4 BD6B40           (./engine/graphics):00098 [8]     1255            jsr   CSR_ProcessEachPriorityLevel   
6AF7                  (./engine/graphics):00099                 CSR_P6B1
6AF7 FE69F1           (./engine/graphics):00100 [6]     1261            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
6AFA 2707             (./engine/graphics):00101 [3]     1264            beq   CSR_P5B1
6AFC 8606             (./engine/graphics):00102 [2]     1266            lda   #$06
6AFE 97F9             (./engine/graphics):00103 [4]     1270            sta   <glb_cur_priority                       
6B00 BD6B40           (./engine/graphics):00104 [8]     1278            jsr   CSR_ProcessEachPriorityLevel   
6B03                  (./engine/graphics):00105                 CSR_P5B1
6B03 FE69EF           (./engine/graphics):00106 [6]     1284            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
6B06 2707             (./engine/graphics):00107 [3]     1287            beq   CSR_P4B1
6B08 8605             (./engine/graphics):00108 [2]     1289            lda   #$05
6B0A 97F9             (./engine/graphics):00109 [4]     1293            sta   <glb_cur_priority                       
6B0C BD6B40           (./engine/graphics):00110 [8]     1301            jsr   CSR_ProcessEachPriorityLevel   
6B0F                  (./engine/graphics):00111                 CSR_P4B1
6B0F FE69ED           (./engine/graphics):00112 [6]     1307            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
6B12 2707             (./engine/graphics):00113 [3]     1310            beq   CSR_P3B1
6B14 8604             (./engine/graphics):00114 [2]     1312            lda   #$04
6B16 97F9             (./engine/graphics):00115 [4]     1316            sta   <glb_cur_priority
6B18 BD6B40           (./engine/graphics):00116 [8]     1324            jsr   CSR_ProcessEachPriorityLevel               
6B1B                  (./engine/graphics):00117                 CSR_P3B1
6B1B FE69EB           (./engine/graphics):00118 [6]     1330            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
6B1E 2707             (./engine/graphics):00119 [3]     1333            beq   CSR_P2B1
6B20 8603             (./engine/graphics):00120 [2]     1335            lda   #$03
6B22 97F9             (./engine/graphics):00121 [4]     1339            sta   <glb_cur_priority                       
6B24 BD6B40           (./engine/graphics):00122 [8]     1347            jsr   CSR_ProcessEachPriorityLevel      
6B27                  (./engine/graphics):00123                 CSR_P2B1
6B27 FE69E9           (./engine/graphics):00124 [6]     1353            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
6B2A 2707             (./engine/graphics):00125 [3]     1356            beq   CSR_P1B1
6B2C 8602             (./engine/graphics):00126 [2]     1358            lda   #$02
6B2E 97F9             (./engine/graphics):00127 [4]     1362            sta   <glb_cur_priority                       
6B30 BD6B40           (./engine/graphics):00128 [8]     1370            jsr   CSR_ProcessEachPriorityLevel  
6B33                  (./engine/graphics):00129                 CSR_P1B1
6B33 FE69E7           (./engine/graphics):00130 [6]     1376            ldu   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
6B36 2707             (./engine/graphics):00131 [3]     1379            beq   CSR_rtsB1
6B38 8601             (./engine/graphics):00132 [2]     1381            lda   #$01
6B3A 97F9             (./engine/graphics):00133 [4]     1385            sta   <glb_cur_priority                       
6B3C BD6B40           (./engine/graphics):00134 [8]     1393            jsr   CSR_ProcessEachPriorityLevel
6B3F                  (./engine/graphics):00135                 CSR_rtsB1        
6B3F 39               (./engine/graphics):00136 [5]     1398            rts
                      (./engine/graphics):00137                 
6B40                  (./engine/graphics):00138                 CSR_ProcessEachPriorityLevel
6B40 30C810           (./engine/graphics):00139 [5]     1403            leax  16,u                          ; dynamic offset, x point to object variables relative to current writable buffer (beware that rsv_buffer_0 and rsv_buffer_1 should be equ >=16)
                      (./engine/graphics):00140                         
6B43                  (./engine/graphics):00141                 CSR_CheckDelHide
6B43 A642             (./engine/graphics):00142 [5]     1408            lda   render_flags,u
6B45 84A0             (./engine/graphics):00143 [2]     1410            anda  #render_hide_mask|render_todelete_mask
6B47 10260061         (./engine/graphics):00144 [5+?]   1415            lbne  CSR_DoNotDisplaySprite      
                      (./engine/graphics):00145                 
6B4B                  (./engine/graphics):00146                 CSR_CheckRefresh        
6B4B A6C82C           (./engine/graphics):00147 [5]     1420            lda   rsv_render_flags,u
6B4E 8401             (./engine/graphics):00148 [2]     1422            anda  #rsv_render_checkrefresh_mask ; branch if checkrefresh is true
6B50 10260155         (./engine/graphics):00149 [5+?]   1427            lbne  CSR_CheckErase
                      (./engine/graphics):00150                 
6B54                  (./engine/graphics):00151                 CSR_UpdSpriteImageBasedOnMirror
                      (./engine/graphics):00152                 
                      (./engine/graphics):00153                         ; an image set is made of 1 to 4 image subsets
                      (./engine/graphics):00154                         ; each subset represent a mirrored version of the image (N: normal, X: x mirror, Y: y mirror, XY: xy mirror)
                      (./engine/graphics):00155                         ; this code set the active image subset based on mirror flags
                      (./engine/graphics):00156                 
6B54 A6C82C           (./engine/graphics):00157 [5]     1432            lda   rsv_render_flags,u
6B57 8A01             (./engine/graphics):00158 [2]     1434            ora   #rsv_render_checkrefresh_mask
6B59 A7C82C           (./engine/graphics):00159 [5]     1439            sta   rsv_render_flags,u            ; set checkrefresh flag to true
                      (./engine/graphics):00160                         
6B5C 108E8DCB         (./engine/graphics):00161 [4]     1443            ldy   #Img_Page_Index               ; call page that store imageset for this object
6B60 8600             (./engine/graphics):00162 [2]     1445            lda   #$00
6B62 E6C4             (./engine/graphics):00163 [4]     1449            ldb   id,u
6B64 A6AB             (./engine/graphics):00164 [8]     1457            lda   d,y
                      (./engine/graphics):00165                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
6B66 BD78F1           (    _SetCartPageA):00002 [8]     1465            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/graphics):00166                         
6B69 A642             (./engine/graphics):00167 [5]     1470            lda   render_flags,u                ; set image to display based on x and y mirror flags
6B6B 8403             (./engine/graphics):00168 [2]     1472            anda  #render_xmirror_mask|render_ymirror_mask
6B6D 10AE4C           (./engine/graphics):00169 [7]     1479            ldy   image_set,u
6B70 E626             (./engine/graphics):00170 [5]     1484            ldb   image_center_offset,y
6B72 E7C82F           (./engine/graphics):00171 [5]     1489            stb   rsv_image_center_offset,u        
6B75 E6A6             (./engine/graphics):00172 [5]     1494            ldb   a,y
6B77 31A5             (./engine/graphics):00173 [5]     1499            leay  b,y                           ; read image set index
6B79 10AFC830         (./engine/graphics):00174 [7]     1506            sty   rsv_image_subset,u
                      (./engine/graphics):00175                         
6B7D                  (./engine/graphics):00176                 CSR_CheckPlayFieldCoord
6B7D A642             (./engine/graphics):00177 [5]     1511            lda   render_flags,u
6B7F 8408             (./engine/graphics):00178 [2]     1513            anda  #render_playfieldcoord_mask
6B81 2750             (./engine/graphics):00179 [3]     1516            beq   CSR_ComputeMappingFrame       ; branch if position is already expressed in screen coordinate
                      (./engine/graphics):00180                 
                      (./engine/graphics):00181                         ; purpose here is to check if image coordinate in the playfield
                      (./engine/graphics):00182                         ; can be converted to screen position, if not it is flagged out of range
                      (./engine/graphics):00183                 
6B83 EC4E             (./engine/graphics):00184 [6]     1522            ldd   x_pos,u
6B85 93F3             (./engine/graphics):00185 [6]     1528            subd  <glb_camera_x_pos
6B87 10250116         (./engine/graphics):00186 [5+?]   1533            lblo  CSR_SetOutOfRange             ; out of range if x_pos < glb_camera_x_pos
6B8B 4D               (./engine/graphics):00187 [2]     1535            tsta 
6B8C 10260111         (./engine/graphics):00188 [5+?]   1540            lbne  CSR_SetOutOfRange             ; out of range if x_pos + 256 > glb_camera_x_pos
6B90 FB9FE8           (./engine/graphics):00189 [5]     1545            addb  glb_camera_x_offset
6B93 E7C814           (./engine/graphics):00190 [5]     1550            stb   x_pixel,u
                      (./engine/graphics):00191                 
6B96 ECC811           (./engine/graphics):00192 [6]     1556            ldd   y_pos,u
6B99 93F1             (./engine/graphics):00193 [6]     1562            subd  <glb_camera_y_pos
6B9B 10250102         (./engine/graphics):00194 [5+?]   1567            lblo  CSR_SetOutOfRange             ; out of range if y_pos < glb_camera_y_pos
6B9F 4D               (./engine/graphics):00195 [2]     1569            tsta 
6BA0 102600FD         (./engine/graphics):00196 [5+?]   1574            lbne  CSR_SetOutOfRange             ; out of range if y_pos + 256 > glb_camera_y_pos
6BA4 FB9FE7           (./engine/graphics):00197 [5]     1579            addb  glb_camera_y_offset
6BA7 E7C815           (./engine/graphics):00198 [5]     1584            stb   y_pixel,u
6BAA 2027             (./engine/graphics):00199 [3]     1587            bra   CSR_ComputeMappingFrame
                      (./engine/graphics):00200                         
6BAC                  (./engine/graphics):00201                 CSR_DoNotDisplaySprite
6BAC A643             (./engine/graphics):00202 [5]     1592            lda   priority,u                     
6BAE 91F9             (./engine/graphics):00203 [4]     1596            cmpa  <glb_cur_priority 
6BB0 261A             (./engine/graphics):00204 [3]     1599            bne   CSR_NextObject                ; next object if this one is a new priority record (no need to erase) 
                      (./engine/graphics):00205                         
6BB2 A6C82C           (./engine/graphics):00206 [5]     1604            lda   rsv_render_flags,u
6BB5 84F9             (./engine/graphics):00207 [2]     1606            anda  #^rsv_render_erasesprite_mask&^rsv_render_displaysprite_mask ; set erase and display flag to false
6BB7 A7C82C           (./engine/graphics):00208 [5]     1611            sta   rsv_render_flags,u
                      (./engine/graphics):00209                                 
6BBA E68813           (./engine/graphics):00210 [5]     1616            ldb   buf_prev_render_flags,x
6BBD 2A0D             (./engine/graphics):00211 [3]     1619            bpl   CSR_NextObject                ; branch if not on screen
                      (./engine/graphics):00212                         
6BBF 8A02             (./engine/graphics):00213 [2]     1621            ora   #rsv_render_erasesprite_mask  ; set erase flag to true if on screen                  
6BC1 A7C82C           (./engine/graphics):00214 [5]     1626            sta   rsv_render_flags,u
                      (./engine/graphics):00215                         
6BC4 109EF7           (./engine/graphics):00216 [6]     1632            ldy   <glb_cur_ptr_sub_obj_erase         ; maintain list of changing sprites to erase
6BC7 EFA1             (./engine/graphics):00217 [8]     1640            stu   ,y++
6BC9 109FF7           (./engine/graphics):00218 [6]     1646            sty   <glb_cur_ptr_sub_obj_erase 
                      (./engine/graphics):00219                         
6BCC                  (./engine/graphics):00220                 CSR_NextObject
6BCC EE03             (./engine/graphics):00221 [6]     1652            ldu   buf_priority_next_obj,x
6BCE 1026FF6E         (./engine/graphics):00222 [5+?]   1657            lbne  CSR_ProcessEachPriorityLevel   
6BD2 39               (./engine/graphics):00223 [5]     1662            rts
                      (./engine/graphics):00224                 
6BD3                  (./engine/graphics):00225                 CSR_ComputeMappingFrame
                      (./engine/graphics):00226                 
                      (./engine/graphics):00227                         ; The image subset reference up to 4 version of an image
                      (./engine/graphics):00228                         ; Draw/Erase, Draw routines and shifted version by 1 pixel of these two routines
                      (./engine/graphics):00229                         ; The following code set the appropriate routine that will draw the image
                      (./engine/graphics):00230                         ; First thing is to check if the image position is odd or even
                      (./engine/graphics):00231                         ; and select the appropriate routine. If no routine is found, it will select the avaible routine.
                      (./engine/graphics):00232                         ; The selected image will also be based on image type overlay or not (Simple Draw or Draw/Erase)
                      (./engine/graphics):00233                 
6BD3 E6C814           (./engine/graphics):00234 [5]     1667    @a      ldb   x_pixel,u                     ; compute mapping_frame 
6BD6 E8C82F           (./engine/graphics):00235 [5]     1672    @b      eorb  rsv_image_center_offset,u     ; case of odd image center switch shifted image with normal
6BD9 C401             (./engine/graphics):00236 [2]     1674            andb  #1                            ; index of sub image is encoded in two bits: 00|B0, 01|D0, 10|B1, 11|D1         
6BDB 58               (./engine/graphics):00237 [2]     1676            aslb                                ; set bit2 for 1px shifted image  
6BDC A642             (./engine/graphics):00238 [5]     1681            lda   render_flags,u            
6BDE 8404             (./engine/graphics):00239 [2]     1683            anda  #render_overlay_mask          ; set bit1 for normal (background save) or overlay sprite (no background save)
6BE0 2701             (./engine/graphics):00240 [3]     1686            beq   @c
6BE2 5C               (./engine/graphics):00241 [2]     1688            incb
6BE3                  (./engine/graphics):00242                 @c
6BE3 A6A5             (./engine/graphics):00243 [5]     1693            lda   b,y
6BE5 2708             (./engine/graphics):00244 [3]     1696            beq   CSR_NoDefinedFrame
6BE7 31A6             (./engine/graphics):00245 [5]     1701            leay  a,y                           ; read image subset index
6BE9 10AFC832         (./engine/graphics):00246 [7]     1708            sty   rsv_mapping_frame,u
6BED 2021             (./engine/graphics):00247 [3]     1711            bra   CSR_UpdateMetadata
6BEF                  (./engine/graphics):00248                 CSR_NoDefinedFrame
6BEF C802             (./engine/graphics):00249 [2]     1713            eorb  #%00000010                    ; check if there is an alternate shifted image available
6BF1 2705             (./engine/graphics):00250 [3]     1716            beq   @e
6BF3 6CC82F           (./engine/graphics):00251 [7]     1723            inc   rsv_image_center_offset,u     ; ajust offset for alternate
6BF6 2003             (./engine/graphics):00252 [3]     1726            bra   @f
6BF8 6AC82F           (./engine/graphics):00253 [7]     1733    @e      dec   rsv_image_center_offset,u
6BFB 6DA5             (./engine/graphics):00254 [7]     1740    @f      tst   b,y
6BFD 26E4             (./engine/graphics):00255 [3]     1743            bne   @c        
                      (./engine/graphics):00256                 
6BFF 108E0000         (./engine/graphics):00257 [4]     1747            ldy   #0                            ; no defined frame, nothing will be displayed
6C03 10AFC832         (./engine/graphics):00258 [7]     1754            sty   rsv_mapping_frame,u
6C07 A642             (./engine/graphics):00259 [5]     1759            lda   render_flags,u
6C09 8A80             (./engine/graphics):00260 [2]     1761            ora   #render_hide_mask             ; set hide flag
6C0B A742             (./engine/graphics):00261 [5]     1766            sta   render_flags,u
6C0D 7E6CA9           (./engine/graphics):00262 [4]     1770            jmp   CSR_CheckErase
                      (./engine/graphics):00263                                 
6C10                  (./engine/graphics):00264                 CSR_UpdateMetadata
6C10 A626             (./engine/graphics):00265 [5]     1775            lda   erase_nb_cell,y               ; copy current image metadata into object data
6C12 A7C834           (./engine/graphics):00266 [5]     1780            sta   rsv_erase_nb_cell,u           ; this is needed to avoid a lot of page switch 
6C15 A6A4             (./engine/graphics):00267 [4]     1784            lda   page_draw_routine,y           ; during following routines
6C17 A7C835           (./engine/graphics):00268 [5]     1789            sta   rsv_page_draw_routine,u
6C1A EC21             (./engine/graphics):00269 [6]     1795            ldd   draw_routine,y
6C1C EDC836           (./engine/graphics):00270 [6]     1801            std   rsv_draw_routine,u
6C1F A623             (./engine/graphics):00271 [5]     1806            lda   page_erase_routine,y
6C21 A7C838           (./engine/graphics):00272 [5]     1811            sta   rsv_page_erase_routine,u
6C24 EC24             (./engine/graphics):00273 [6]     1817            ldd   erase_routine,y
6C26 EDC839           (./engine/graphics):00274 [6]     1823            std   rsv_erase_routine,u
                      (./engine/graphics):00275                         
6C29                  (./engine/graphics):00276                 CSR_CheckPosition        
6C29 E6C815           (./engine/graphics):00277 [5]     1828            ldb   y_pixel,u                     ; check if sprite is fully in screen vertical range
6C2C 10AEC830         (./engine/graphics):00278 [7]     1835            ldy   rsv_image_subset,u
6C30 EB25             (./engine/graphics):00279 [5]     1840            addb  image_subset_y1_offset,y
6C32 C1E3             (./engine/graphics):00280 [2]     1842            cmpb  #screen_bottom
6C34 226B             (./engine/graphics):00281 [3]     1845            bhi   CSR_SetOutOfRange
6C36 C11C             (./engine/graphics):00282 [2]     1847            cmpb  #screen_top
6C38 2567             (./engine/graphics):00283 [3]     1850            blo   CSR_SetOutOfRange        
6C3A E7C83C           (./engine/graphics):00284 [5]     1855            stb   rsv_y1_pixel,u
6C3D 10AE4C           (./engine/graphics):00285 [7]     1862            ldy   image_set,u
6C40 EB25             (./engine/graphics):00286 [5]     1867            addb  image_y_size,y
6C42 C1E3             (./engine/graphics):00287 [2]     1869            cmpb  #screen_bottom
6C44 225B             (./engine/graphics):00288 [3]     1872            bhi   CSR_SetOutOfRange
6C46 C11C             (./engine/graphics):00289 [2]     1874            cmpb  #screen_top
6C48 2557             (./engine/graphics):00290 [3]     1877            blo   CSR_SetOutOfRange        
6C4A E7C83E           (./engine/graphics):00291 [5]     1882            stb   rsv_y2_pixel,u
6C4D E1C83C           (./engine/graphics):00292 [5]     1887            cmpb  rsv_y1_pixel,u                ; check wrapping
6C50 254F             (./engine/graphics):00293 [3]     1890            blo   CSR_SetOutOfRange
                      (./engine/graphics):00294                                 
6C52 A642             (./engine/graphics):00295 [5]     1895            lda   render_flags,u                ; check if sprite is fully in screen horizontal range
6C54 8510             (./engine/graphics):00296 [2]     1897            bita  #render_xloop_mask
6C56 262B             (./engine/graphics):00297 [3]     1900            bne   CSR_DontCheckXFrontier   
                      (./engine/graphics):00298                         
6C58 E6C814           (./engine/graphics):00299 [5]     1905            ldb   x_pixel,u
6C5B 10AEC830         (./engine/graphics):00300 [7]     1912            ldy   rsv_image_subset,u
6C5F EB24             (./engine/graphics):00301 [5]     1917            addb  image_subset_x1_offset,y
6C61 C1CF             (./engine/graphics):00302 [2]     1919            cmpb  #screen_right
6C63 223C             (./engine/graphics):00303 [3]     1922            bhi   CSR_SetOutOfRange
6C65 C130             (./engine/graphics):00304 [2]     1924            cmpb  #screen_left
6C67 2538             (./engine/graphics):00305 [3]     1927            blo   CSR_SetOutOfRange
6C69 E7C83B           (./engine/graphics):00306 [5]     1932            stb   rsv_x1_pixel,u
6C6C 10AE4C           (./engine/graphics):00307 [7]     1939            ldy   image_set,u
6C6F EB24             (./engine/graphics):00308 [5]     1944            addb  image_x_size,y
6C71 C1CF             (./engine/graphics):00309 [2]     1946            cmpb  #screen_right
6C73 222C             (./engine/graphics):00310 [3]     1949            bhi   CSR_SetOutOfRange
6C75 C130             (./engine/graphics):00311 [2]     1951            cmpb  #screen_left
6C77 2528             (./engine/graphics):00312 [3]     1954            blo   CSR_SetOutOfRange
6C79 E7C83D           (./engine/graphics):00313 [5]     1959            stb   rsv_x2_pixel,u
6C7C E1C83B           (./engine/graphics):00314 [5]     1964            cmpb  rsv_x1_pixel,u                ; check wrapping
6C7F 2520             (./engine/graphics):00315 [3]     1967            blo   CSR_SetOutOfRange 
                      (./engine/graphics):00316                                 
6C81 2014             (./engine/graphics):00317 [3]     1970            bra   CSR_DontCheckXFrontier_end        
                      (./engine/graphics):00318                         
6C83                  (./engine/graphics):00319                 CSR_DontCheckXFrontier  
6C83 E6C814           (./engine/graphics):00320 [5]     1975            ldb   x_pixel,u
6C86 10AEC830         (./engine/graphics):00321 [7]     1982            ldy   rsv_image_subset,u
6C8A EB24             (./engine/graphics):00322 [5]     1987            addb  image_subset_x1_offset,y
6C8C E7C83B           (./engine/graphics):00323 [5]     1992            stb   rsv_x1_pixel,u
                      (./engine/graphics):00324                         
6C8F 10AE4C           (./engine/graphics):00325 [7]     1999            ldy   image_set,u
6C92 EB24             (./engine/graphics):00326 [5]     2004            addb  image_x_size,y
6C94 E7C83D           (./engine/graphics):00327 [5]     2009            stb   rsv_x2_pixel,u      
                      (./engine/graphics):00328                 
6C97                  (./engine/graphics):00329                 CSR_DontCheckXFrontier_end        
6C97 A6C82C           (./engine/graphics):00330 [5]     2014            lda   rsv_render_flags,u
6C9A 84F7             (./engine/graphics):00331 [2]     2016            anda  #^rsv_render_outofrange_mask  ; unset out of range flag
6C9C A7C82C           (./engine/graphics):00332 [5]     2021            sta   rsv_render_flags,u
6C9F 2008             (./engine/graphics):00333 [3]     2024            bra   CSR_CheckErase
                      (./engine/graphics):00334                                 
6CA1                  (./engine/graphics):00335                 CSR_SetOutOfRange
6CA1 A6C82C           (./engine/graphics):00336 [5]     2029            lda   rsv_render_flags,u
6CA4 8A08             (./engine/graphics):00337 [2]     2031            ora   #rsv_render_outofrange_mask   ; set out of range flag
6CA6 A7C82C           (./engine/graphics):00338 [5]     2036            sta   rsv_render_flags,u
                      (./engine/graphics):00339                 
6CA9                  (./engine/graphics):00340                 CSR_CheckErase
6CA9 BF6D83           (./engine/graphics):00341 [6]     2042            stx   CSR_CheckDraw+1
6CAC A684             (./engine/graphics):00342 [4]     2046            lda   buf_priority,x
6CAE 91F9             (./engine/graphics):00343 [4]     2050            cmpa  <glb_cur_priority 
6CB0 102600CE         (./engine/graphics):00344 [5+?]   2055            lbne  CSR_CheckDraw
                      (./engine/graphics):00345                         
6CB4 109EF7           (./engine/graphics):00346 [6]     2061            ldy   <glb_cur_ptr_sub_obj_erase
                      (./engine/graphics):00347                         
6CB7 A6C82C           (./engine/graphics):00348 [5]     2066            lda   rsv_render_flags,u
6CBA 8408             (./engine/graphics):00349 [2]     2068            anda  #rsv_render_outofrange_mask
6CBC 2709             (./engine/graphics):00350 [3]     2071            beq   CSR_CheckErase_InRange
6CBE A68813           (./engine/graphics):00351 [5]     2076            lda   buf_prev_render_flags,x
6CC1 102A0109         (./engine/graphics):00352 [5+?]   2081            lbpl  CSR_SetEraseDrawFalse         ; branch if object is not on screen    
6CC5 2024             (./engine/graphics):00353 [3]     2084            bra   CSR_SetEraseTrue
                      (./engine/graphics):00354                                 
6CC7                  (./engine/graphics):00355                 CSR_CheckErase_InRange        
6CC7 A68813           (./engine/graphics):00356 [5]     2089            lda   buf_prev_render_flags,x
6CCA 102A00AC         (./engine/graphics):00357 [5+?]   2094            lbpl  CSR_SetEraseFalse             ; branch if object is not on screen
6CCE 96E6             (./engine/graphics):00358 [4]     2098            lda   <glb_force_sprite_refresh
6CD0 2619             (./engine/graphics):00359 [3]     2101            bne   CSR_SetEraseTrue
6CD2 ECC814           (./engine/graphics):00360 [6]     2107            ldd   xy_pixel,u
6CD5 44               (./engine/graphics):00361 [2]     2109            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit, y position precision is y_pixel  
6CD6 10A30D           (./engine/graphics):00362 [8]     2117            cmpd  buf_prev_xy_pixel,x
6CD9 2610             (./engine/graphics):00363 [3]     2120            bne   CSR_SetEraseTrue              ; branch if object moved since last frame
6CDB ECC832           (./engine/graphics):00364 [6]     2126            ldd   rsv_mapping_frame,u
6CDE 10A305           (./engine/graphics):00365 [8]     2134            cmpd  buf_prev_mapping_frame,x
6CE1 2608             (./engine/graphics):00366 [3]     2137            bne   CSR_SetEraseTrue              ; branch if object image changed since last frame
6CE3 A643             (./engine/graphics):00367 [5]     2142            lda   priority,u
6CE5 A184             (./engine/graphics):00368 [4]     2146            cmpa  buf_priority,x
6CE7 2602             (./engine/graphics):00369 [3]     2149            bne   CSR_SetEraseTrue              ; branch if object priority changed since last frame
6CE9 2010             (./engine/graphics):00370 [3]     2152            bra   CSR_SubEraseSpriteSearchInit  ; branch if object is on screen but unchanged since last frame
                      (./engine/graphics):00371                         
6CEB                  (./engine/graphics):00372                 CSR_SetEraseTrue        
6CEB A6C82C           (./engine/graphics):00373 [5]     2157            lda   rsv_render_flags,u
6CEE 8A02             (./engine/graphics):00374 [2]     2159            ora   #rsv_render_erasesprite_mask
6CF0 A7C82C           (./engine/graphics):00375 [5]     2164            sta   rsv_render_flags,u
                      (./engine/graphics):00376                         
6CF3 EFA1             (./engine/graphics):00377 [8]     2172            stu   ,y++
6CF5 109FF7           (./engine/graphics):00378 [6]     2178            sty   <glb_cur_ptr_sub_obj_erase
                      (./engine/graphics):00379                                 
6CF8 7E6D82           (./engine/graphics):00380 [4]     2182            jmp   CSR_CheckDraw
                      (./engine/graphics):00381                         
6CFB                  (./engine/graphics):00382                 CSR_SubEraseSpriteSearchInit
                      (./engine/graphics):00383                 
                      (./engine/graphics):00384                         * search a collision with a sprite under the current sprite
                      (./engine/graphics):00385                         * the sprite under should have to be erased or displayed
                      (./engine/graphics):00386                         * in this case it forces the refresh of the current sprite that was not supposed to be refreshed
                      (./engine/graphics):00387                         * as a sub loop, this should be optimized as much as possible ... I hope it is
                      (./engine/graphics):00388                         * there are two lists because a sprite can be erased at a position
                      (./engine/graphics):00389                         * and displayed at another position : both cases should be tested !
                      (./engine/graphics):00390                 
6CFB 9EF7             (./engine/graphics):00391 [5]     2187            ldx   <glb_cur_ptr_sub_obj_erase       
6CFD B678F0           (./engine/graphics):00392 [5]     2192            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
6D00 2627             (./engine/graphics):00393 [3]     2195            bne   CSR_SubEraseSearchB1
                      (./engine/graphics):00394                         
6D02                  (./engine/graphics):00395                 CSR_SubEraseSearchB0
6D02 8C6A2D           (./engine/graphics):00396 [4]     2199            cmpx  #Tbl_Sub_Object_Erase
6D05 2749             (./engine/graphics):00397 [3]     2202            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
6D07 10AE83           (./engine/graphics):00398 [9]     2211            ldy   ,--x
                      (./engine/graphics):00399                         
6D0A                  (./engine/graphics):00400                 CSR_SubEraseCheckCollisionB0
6D0A ECA84E           (./engine/graphics):00401 [6]     2217            ldd   rsv_prev_xy1_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 and rsv_prev_y_pixel_0 in one instruction
6D0D A1C83D           (./engine/graphics):00402 [5]     2222            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
6D10 22F0             (./engine/graphics):00403 [3]     2225            bhi   CSR_SubEraseSearchB0
6D12 E1C83E           (./engine/graphics):00404 [5]     2230            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
6D15 22EB             (./engine/graphics):00405 [3]     2233            bhi   CSR_SubEraseSearchB0
6D17 ECA850           (./engine/graphics):00406 [6]     2239            ldd   rsv_prev_xy2_pixel_0,y        ; sub entry : rsv_prev_x_pixel_0 + rsv_prev_mapping_frame_0.x_size and rsv_prev_y_pixel_0 + rsv_prev_mapping_frame_0.y_size in one instruction
6D1A A1C83B           (./engine/graphics):00407 [5]     2244            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
6D1D 25E3             (./engine/graphics):00408 [3]     2247            blo   CSR_SubEraseSearchB0
6D1F E1C83C           (./engine/graphics):00409 [5]     2252            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
6D22 25DE             (./engine/graphics):00410 [3]     2255            blo   CSR_SubEraseSearchB0
                      (./engine/graphics):00411                         
6D24 109EF7           (./engine/graphics):00412 [6]     2261            ldy   <glb_cur_ptr_sub_obj_erase
6D27 20C2             (./engine/graphics):00413 [3]     2264            bra   CSR_SetEraseTrue              ; found a collision
                      (./engine/graphics):00414                 
6D29                  (./engine/graphics):00415                 CSR_SubEraseSearchB1
6D29 8C6A2D           (./engine/graphics):00416 [4]     2268            cmpx  #Tbl_Sub_Object_Erase
6D2C 2722             (./engine/graphics):00417 [3]     2271            beq   CSR_SubDrawSpriteSearchInit   ; branch if no more sub objects
6D2E 10AE83           (./engine/graphics):00418 [9]     2280            ldy   ,--x
                      (./engine/graphics):00419                         
6D31                  (./engine/graphics):00420                 CSR_SubEraseCheckCollisionB1
6D31 ECA862           (./engine/graphics):00421 [6]     2286            ldd   rsv_prev_xy1_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 and rsv_prev_y_pixel_1 in one instruction
6D34 A1C83D           (./engine/graphics):00422 [5]     2291            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
6D37 22F0             (./engine/graphics):00423 [3]     2294            bhi   CSR_SubEraseSearchB1
6D39 E1C83E           (./engine/graphics):00424 [5]     2299            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
6D3C 22EB             (./engine/graphics):00425 [3]     2302            bhi   CSR_SubEraseSearchB1
6D3E ECA864           (./engine/graphics):00426 [6]     2308            ldd   rsv_prev_xy2_pixel_1,y        ; sub entry : rsv_prev_x_pixel_1 + rsv_prev_mapping_frame_1.x_size and rsv_prev_y_pixel_1 + rsv_prev_mapping_frame_1.y_size in one instruction
6D41 A1C83B           (./engine/graphics):00427 [5]     2313            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
6D44 25E3             (./engine/graphics):00428 [3]     2316            blo   CSR_SubEraseSearchB1
6D46 E1C83C           (./engine/graphics):00429 [5]     2321            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
6D49 25DE             (./engine/graphics):00430 [3]     2324            blo   CSR_SubEraseSearchB1
                      (./engine/graphics):00431                         
6D4B 109EF7           (./engine/graphics):00432 [6]     2330            ldy   <glb_cur_ptr_sub_obj_erase
6D4E 209B             (./engine/graphics):00433 [3]     2333            bra   CSR_SetEraseTrue              ; found a collision
                      (./engine/graphics):00434                 
6D50                  (./engine/graphics):00435                 CSR_SubDrawSpriteSearchInit
6D50 9EF5             (./engine/graphics):00436 [5]     2338            ldx   <glb_cur_ptr_sub_obj_draw
                      (./engine/graphics):00437                         
6D52                  (./engine/graphics):00438                 CSR_SubDrawSearch
6D52 8C6A49           (./engine/graphics):00439 [4]     2342            cmpx  #Tbl_Sub_Object_Draw
6D55 2723             (./engine/graphics):00440 [3]     2345            beq   CSR_SetEraseFalse             ; branch if no more sub objects
6D57 10AE83           (./engine/graphics):00441 [9]     2354            ldy   ,--x
                      (./engine/graphics):00442                 
6D5A                  (./engine/graphics):00443                 CSR_SubDrawCheckCollision
6D5A ECA83B           (./engine/graphics):00444 [6]     2360            ldd   rsv_xy1_pixel,y               ; sub entry : x_pixel and y_pixel in one instruction
6D5D A1C83D           (./engine/graphics):00445 [5]     2365            cmpa  rsv_x2_pixel,u                ;     entry : x_pixel + rsv_mapping_frame.x_size
6D60 22F0             (./engine/graphics):00446 [3]     2368            bhi   CSR_SubDrawSearch
6D62 E1C83E           (./engine/graphics):00447 [5]     2373            cmpb  rsv_y2_pixel,u                ;     entry : y_pixel + rsv_mapping_frame.y_size
6D65 22EB             (./engine/graphics):00448 [3]     2376            bhi   CSR_SubDrawSearch
6D67 ECA83D           (./engine/graphics):00449 [6]     2382            ldd   rsv_xy2_pixel,y               ; sub entry : x_pixel + rsv_mapping_frame.x_size and y_pixel + rsv_mapping_frame.y_size in one instruction
6D6A A1C83B           (./engine/graphics):00450 [5]     2387            cmpa  rsv_x1_pixel,u                ;     entry : x_pixel
6D6D 25E3             (./engine/graphics):00451 [3]     2390            blo   CSR_SubDrawSearch
6D6F E1C83C           (./engine/graphics):00452 [5]     2395            cmpb  rsv_y1_pixel,u                ;     entry : y_pixel
6D72 25DE             (./engine/graphics):00453 [3]     2398            blo   CSR_SubDrawSearch
                      (./engine/graphics):00454                         
6D74 109EF7           (./engine/graphics):00455 [6]     2404            ldy   <glb_cur_ptr_sub_obj_erase
6D77 7E6CEB           (./engine/graphics):00456 [4]     2408            jmp   CSR_SetEraseTrue              ; found a collision
                      (./engine/graphics):00457                 
6D7A                  (./engine/graphics):00458                 CSR_SetEraseFalse
6D7A A6C82C           (./engine/graphics):00459 [5]     2413            lda   rsv_render_flags,u 
6D7D 84FD             (./engine/graphics):00460 [2]     2415            anda  #^rsv_render_erasesprite_mask
6D7F A7C82C           (./engine/graphics):00461 [5]     2420            sta   rsv_render_flags,u        
                      (./engine/graphics):00462                                
6D82                  (./engine/graphics):00463                 CSR_CheckDraw
6D82 8EFFFF           (./engine/graphics):00464 [3]     2423            ldx   #$FFFF                        ; dynamic restore x
6D85 A643             (./engine/graphics):00465 [5]     2428            lda   priority,u
6D87 91F9             (./engine/graphics):00466 [4]     2432            cmpa  <glb_cur_priority 
6D89 1026FE3F         (./engine/graphics):00467 [5+?]   2437            lbne  CSR_NextObject
                      (./engine/graphics):00468                         
6D8D 109EF5           (./engine/graphics):00469 [6]     2443            ldy   <glb_cur_ptr_sub_obj_draw
                      (./engine/graphics):00470                         
6D90 A6C82C           (./engine/graphics):00471 [5]     2448            lda   rsv_render_flags,u
6D93 8408             (./engine/graphics):00472 [2]     2450            anda  #rsv_render_outofrange_mask
6D95 263F             (./engine/graphics):00473 [3]     2453            bne   CSR_SetDrawFalse              ; branch if object image is out of range
6D97 ECC832           (./engine/graphics):00474 [6]     2459            ldd   rsv_mapping_frame,u
6D9A 273A             (./engine/graphics):00475 [3]     2462            beq   CSR_SetDrawFalse              ; branch if object have no image
6D9C A642             (./engine/graphics):00476 [5]     2467            lda   render_flags,u
6D9E 8480             (./engine/graphics):00477 [2]     2469            anda  #render_hide_mask
6DA0 2634             (./engine/graphics):00478 [3]     2472            bne   CSR_SetDrawFalse              ; branch if object is hidden
                      (./engine/graphics):00479                         
6DA2                  (./engine/graphics):00480                 CSR_SetDrawTrue 
6DA2 A6C82C           (./engine/graphics):00481 [5]     2477            lda   rsv_render_flags,u
6DA5 8A04             (./engine/graphics):00482 [2]     2479            ora   #rsv_render_displaysprite_mask ; set displaysprite flag   
6DA7 A7C82C           (./engine/graphics):00483 [5]     2484            sta   rsv_render_flags,u         
                      (./engine/graphics):00484                         
6DAA 8502             (./engine/graphics):00485 [2]     2486            bita  #rsv_render_erasesprite_mask
6DAC 2702             (./engine/graphics):00486 [3]     2489            beq   CSR_SDT1
6DAE 2007             (./engine/graphics):00487 [3]     2492            bra   CSR_SDT2
6DB0                  (./engine/graphics):00488                 CSR_SDT1                      
6DB0 E68813           (./engine/graphics):00489 [5]     2497            ldb   buf_prev_render_flags,x
6DB3 2B0C             (./engine/graphics):00490 [3]     2500            bmi   CSR_SetHide
6DB5 2005             (./engine/graphics):00491 [3]     2503            bra   CSR_SDT3      
6DB7                  (./engine/graphics):00492                 CSR_SDT2                      
6DB7 E68813           (./engine/graphics):00493 [5]     2508            ldb   buf_prev_render_flags,x
6DBA 2A05             (./engine/graphics):00494 [3]     2511            bpl   CSR_SetHide
6DBC                  (./engine/graphics):00495                 CSR_SDT3
6DBC EFA1             (./engine/graphics):00496 [8]     2519            stu   ,y++
6DBE 109FF5           (./engine/graphics):00497 [6]     2525            sty   <glb_cur_ptr_sub_obj_draw          ; maintain list of changing sprites to draw, should be to draw and ((on screen and to erase) or (not on screen and not to erase)) 
                      (./engine/graphics):00498                 
6DC1                  (./engine/graphics):00499                 CSR_SetHide        
6DC1 A642             (./engine/graphics):00500 [5]     2530            lda   render_flags,u
6DC3 8A80             (./engine/graphics):00501 [2]     2532            ora   #render_hide_mask             ; set hide flag
6DC5 A742             (./engine/graphics):00502 [5]     2537            sta   render_flags,u        
                      (./engine/graphics):00503                         
6DC7 EE03             (./engine/graphics):00504 [6]     2543            ldu   buf_priority_next_obj,x
6DC9 1026FD73         (./engine/graphics):00505 [5+?]   2548            lbne  CSR_ProcessEachPriorityLevel   
6DCD 39               (./engine/graphics):00506 [5]     2553            rts
                      (./engine/graphics):00507                 
6DCE                  (./engine/graphics):00508                 CSR_SetEraseDrawFalse 
6DCE A6C82C           (./engine/graphics):00509 [5]     2558            lda   rsv_render_flags,u 
6DD1 84FD             (./engine/graphics):00510 [2]     2560            anda  #^rsv_render_erasesprite_mask
6DD3 A7C82C           (./engine/graphics):00511 [5]     2565            sta   rsv_render_flags,u 
                      (./engine/graphics):00512                 
6DD6                  (./engine/graphics):00513                 CSR_SetDrawFalse 
6DD6 A6C82C           (./engine/graphics):00514 [5]     2570            lda   rsv_render_flags,u
6DD9 84FB             (./engine/graphics):00515 [2]     2572            anda  #^rsv_render_displaysprite_mask
6DDB A7C82C           (./engine/graphics):00516 [5]     2577            sta   rsv_render_flags,u
                      (./engine/graphics):00517                         
6DDE EE03             (./engine/graphics):00518 [6]     2583            ldu   buf_priority_next_obj,x
6DE0 1026FD5C         (./engine/graphics):00519 [5+?]   2588            lbne   CSR_ProcessEachPriorityLevel   
6DE4 39               (./engine/graphics):00520 [5]     2593            rts      
                      (./engine/graphics):00004                         INCLUDE "./engine/graphics/sprite/background-erase-mode/EraseSprites.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * EraseSprites
                      (./engine/graphics):00003                 * ------------
                      (./engine/graphics):00004                 * Subroutine to erase sprites on screen
                      (./engine/graphics):00005                 * Read Display Priority Structure (front to back)
                      (./engine/graphics):00006                 * priority: 0 - unregistred
                      (./engine/graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./engine/graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./engine/graphics):00009                 *
                      (./engine/graphics):00010                 * input REG : none
                      (./engine/graphics):00011                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00012                                                                                 
                      (./engine/graphics):00013                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00014                 * Background Backup Cells - BBC
                      (./engine/graphics):00015                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00016                 
                      (./engine/graphics):00017                 * ----- Cell variables
     0000             (./engine/graphics):00018                 nb_cells                      equ   0
     0001             (./engine/graphics):00019                 cell_start                    equ   1
     0003             (./engine/graphics):00020                 cell_end                      equ   3
     0005             (./engine/graphics):00021                 next_entry                    equ   5
     0007             (./engine/graphics):00022                 entry_size                    equ   7
                      (./engine/graphics):00023                 
                      (./engine/graphics):00024                 * ----- Cells List
     0080             (./engine/graphics):00025                 nb_free_cells                 equ   128
     0040             (./engine/graphics):00026                 cell_size                     equ   64     ; 64 bytes x 128 from $4000 to $5FFF
     6000             (./engine/graphics):00027                 cell_start_adr                equ   $6000
                      (./engine/graphics):00028                 
6DE5 6DE7             (./engine/graphics):00029                 Lst_FreeCellFirstEntry_0      fdb   Lst_FreeCell_0 ; Pointer to first entry in free cell list (buffer 0)
6DE7 80               (./engine/graphics):00030                 Lst_FreeCell_0                fcb   nb_free_cells ; init of first free cell
6DE8 4000             (./engine/graphics):00031                                               fdb   cell_start_adr-cell_size*nb_free_cells
6DEA 6000             (./engine/graphics):00032                                               fdb   cell_start_adr
6DEC 0000             (./engine/graphics):00033                                               fdb   $0000
6DEE 0000000000000000 (./engine/graphics):00034                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 0)
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./engine/graphics):00035                                               
6FAD 6FAF             (./engine/graphics):00036                 Lst_FreeCellFirstEntry_1      fdb   Lst_FreeCell_1 ; Pointer to first entry in free cell list (buffer 1)
6FAF 80               (./engine/graphics):00037                 Lst_FreeCell_1                fcb   nb_free_cells ; init of first free cell
6FB0 4000             (./engine/graphics):00038                                               fdb   cell_start_adr-cell_size*nb_free_cells
6FB2 6000             (./engine/graphics):00039                                               fdb   cell_start_adr
6FB4 0000             (./engine/graphics):00040                                               fdb   $0000
6FB6 0000000000000000 (./engine/graphics):00041                                               fill  0,(entry_size*(nb_free_cells/2))-1 ; (buffer 1)                                                
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000000000
                      (./engine/graphics):00042                                                                                            
7175                  (./engine/graphics):00043                 EraseSprites
7175 8600             (./engine/graphics):00044 [2]     2595            lda   #0
7177 97E6             (./engine/graphics):00045 [4]     2599            sta   <glb_force_sprite_refresh
                      (./engine/graphics):00046                 
7179                  (./engine/graphics):00047                 ESP_Start
7179 B678F0           (./engine/graphics):00048 [5]     2604            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
717C 2669             (./engine/graphics):00049 [3]     2607            bne   ESP_P1B1
                      (./engine/graphics):00050                 
717E                  (./engine/graphics):00051                 ESP_P1B0
717E FE69B7           (./engine/graphics):00052 [6]     2613            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
7181 2708             (./engine/graphics):00053 [3]     2616            beq   ESP_P2B0
7183 8601             (./engine/graphics):00054 [2]     2618            lda   #$01
7185 B77254           (./engine/graphics):00055 [5]     2623            sta   ESP_CheckPriorityB0+1        
7188 BD7250           (./engine/graphics):00056 [8]     2631            jsr   ESP_ProcessEachPriorityLevelB0
718B                  (./engine/graphics):00057                 ESP_P2B0
718B FE69B9           (./engine/graphics):00058 [6]     2637            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+4
718E 2708             (./engine/graphics):00059 [3]     2640            beq   ESP_P3B0
7190 8602             (./engine/graphics):00060 [2]     2642            lda   #$02
7192 B77254           (./engine/graphics):00061 [5]     2647            sta   ESP_CheckPriorityB0+1        
7195 BD7250           (./engine/graphics):00062 [8]     2655            jsr   ESP_ProcessEachPriorityLevelB0   
7198                  (./engine/graphics):00063                 ESP_P3B0
7198 FE69BB           (./engine/graphics):00064 [6]     2661            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+6
719B 2708             (./engine/graphics):00065 [3]     2664            beq   ESP_P4B0
719D 8603             (./engine/graphics):00066 [2]     2666            lda   #$03
719F B77254           (./engine/graphics):00067 [5]     2671            sta   ESP_CheckPriorityB0+1        
71A2 BD7250           (./engine/graphics):00068 [8]     2679            jsr   ESP_ProcessEachPriorityLevelB0   
71A5                  (./engine/graphics):00069                 ESP_P4B0
71A5 FE69BD           (./engine/graphics):00070 [6]     2685            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+8
71A8 2708             (./engine/graphics):00071 [3]     2688            beq   ESP_P5B0
71AA 8604             (./engine/graphics):00072 [2]     2690            lda   #$04
71AC B77254           (./engine/graphics):00073 [5]     2695            sta   ESP_CheckPriorityB0+1        
71AF BD7250           (./engine/graphics):00074 [8]     2703            jsr   ESP_ProcessEachPriorityLevelB0   
71B2                  (./engine/graphics):00075                 ESP_P5B0
71B2 FE69BF           (./engine/graphics):00076 [6]     2709            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+10
71B5 2708             (./engine/graphics):00077 [3]     2712            beq   ESP_P6B0
71B7 8605             (./engine/graphics):00078 [2]     2714            lda   #$05
71B9 B77254           (./engine/graphics):00079 [5]     2719            sta   ESP_CheckPriorityB0+1        
71BC BD7250           (./engine/graphics):00080 [8]     2727            jsr   ESP_ProcessEachPriorityLevelB0               
71BF                  (./engine/graphics):00081                 ESP_P6B0
71BF FE69C1           (./engine/graphics):00082 [6]     2733            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+12
71C2 2708             (./engine/graphics):00083 [3]     2736            beq   ESP_P7B0
71C4 8606             (./engine/graphics):00084 [2]     2738            lda   #$06
71C6 B77254           (./engine/graphics):00085 [5]     2743            sta   ESP_CheckPriorityB0+1        
71C9 BD7250           (./engine/graphics):00086 [8]     2751            jsr   ESP_ProcessEachPriorityLevelB0      
71CC                  (./engine/graphics):00087                 ESP_P7B0
71CC FE69C3           (./engine/graphics):00088 [6]     2757            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+14
71CF 2708             (./engine/graphics):00089 [3]     2760            beq   ESP_P8B0
71D1 8607             (./engine/graphics):00090 [2]     2762            lda   #$07
71D3 B77254           (./engine/graphics):00091 [5]     2767            sta   ESP_CheckPriorityB0+1        
71D6 BD7250           (./engine/graphics):00092 [8]     2775            jsr   ESP_ProcessEachPriorityLevelB0  
71D9                  (./engine/graphics):00093                 ESP_P8B0
71D9 FE69C5           (./engine/graphics):00094 [6]     2781            ldu   DPS_buffer_0+buf_Tbl_Priority_Last_Entry+16
71DC 2708             (./engine/graphics):00095 [3]     2784            beq   ESP_rtsB0
71DE 8608             (./engine/graphics):00096 [2]     2786            lda   #$08
71E0 B77254           (./engine/graphics):00097 [5]     2791            sta   ESP_CheckPriorityB0+1                   
71E3 BD7250           (./engine/graphics):00098 [8]     2799            jsr   ESP_ProcessEachPriorityLevelB0
71E6                  (./engine/graphics):00099                 ESP_rtsB0        
71E6 39               (./engine/graphics):00100 [5]     2804            rts
                      (./engine/graphics):00101                         
71E7                  (./engine/graphics):00102                 ESP_P1B1
71E7 FE69F9           (./engine/graphics):00103 [6]     2810            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+2 ; read DPS from priority 1 to priority 8
71EA 2708             (./engine/graphics):00104 [3]     2813            beq   ESP_P2B1
71EC 8601             (./engine/graphics):00105 [2]     2815            lda   #$01
71EE B772C7           (./engine/graphics):00106 [5]     2820            sta   ESP_CheckPriorityB1+1        
71F1 BD72C3           (./engine/graphics):00107 [8]     2828            jsr   ESP_ProcessEachPriorityLevelB1
71F4                  (./engine/graphics):00108                 ESP_P2B1
71F4 FE69FB           (./engine/graphics):00109 [6]     2834            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+4
71F7 2708             (./engine/graphics):00110 [3]     2837            beq   ESP_P3B1
71F9 8602             (./engine/graphics):00111 [2]     2839            lda   #$02
71FB B772C7           (./engine/graphics):00112 [5]     2844            sta   ESP_CheckPriorityB1+1        
71FE BD72C3           (./engine/graphics):00113 [8]     2852            jsr   ESP_ProcessEachPriorityLevelB1   
7201                  (./engine/graphics):00114                 ESP_P3B1
7201 FE69FD           (./engine/graphics):00115 [6]     2858            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+6
7204 2708             (./engine/graphics):00116 [3]     2861            beq   ESP_P4B1
7206 8603             (./engine/graphics):00117 [2]     2863            lda   #$03
7208 B772C7           (./engine/graphics):00118 [5]     2868            sta   ESP_CheckPriorityB1+1        
720B BD72C3           (./engine/graphics):00119 [8]     2876            jsr   ESP_ProcessEachPriorityLevelB1   
720E                  (./engine/graphics):00120                 ESP_P4B1
720E FE69FF           (./engine/graphics):00121 [6]     2882            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+8
7211 2708             (./engine/graphics):00122 [3]     2885            beq   ESP_P5B1
7213 8604             (./engine/graphics):00123 [2]     2887            lda   #$04
7215 B772C7           (./engine/graphics):00124 [5]     2892            sta   ESP_CheckPriorityB1+1        
7218 BD72C3           (./engine/graphics):00125 [8]     2900            jsr   ESP_ProcessEachPriorityLevelB1   
721B                  (./engine/graphics):00126                 ESP_P5B1
721B FE6A01           (./engine/graphics):00127 [6]     2906            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+10
721E 2708             (./engine/graphics):00128 [3]     2909            beq   ESP_P6B1
7220 8605             (./engine/graphics):00129 [2]     2911            lda   #$05
7222 B772C7           (./engine/graphics):00130 [5]     2916            sta   ESP_CheckPriorityB1+1        
7225 BD72C3           (./engine/graphics):00131 [8]     2924            jsr   ESP_ProcessEachPriorityLevelB1               
7228                  (./engine/graphics):00132                 ESP_P6B1
7228 FE6A03           (./engine/graphics):00133 [6]     2930            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+12
722B 2708             (./engine/graphics):00134 [3]     2933            beq   ESP_P7B1
722D 8606             (./engine/graphics):00135 [2]     2935            lda   #$06
722F B772C7           (./engine/graphics):00136 [5]     2940            sta   ESP_CheckPriorityB1+1        
7232 BD72C3           (./engine/graphics):00137 [8]     2948            jsr   ESP_ProcessEachPriorityLevelB1      
7235                  (./engine/graphics):00138                 ESP_P7B1
7235 FE6A05           (./engine/graphics):00139 [6]     2954            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+14
7238 2708             (./engine/graphics):00140 [3]     2957            beq   ESP_P8B1
723A 8607             (./engine/graphics):00141 [2]     2959            lda   #$07
723C B772C7           (./engine/graphics):00142 [5]     2964            sta   ESP_CheckPriorityB1+1        
723F BD72C3           (./engine/graphics):00143 [8]     2972            jsr   ESP_ProcessEachPriorityLevelB1  
7242                  (./engine/graphics):00144                 ESP_P8B1
7242 FE6A07           (./engine/graphics):00145 [6]     2978            ldu   DPS_buffer_1+buf_Tbl_Priority_Last_Entry+16
7245 2708             (./engine/graphics):00146 [3]     2981            beq   ESP_rtsB1
7247 8608             (./engine/graphics):00147 [2]     2983            lda   #$08
7249 B772C7           (./engine/graphics):00148 [5]     2988            sta   ESP_CheckPriorityB1+1        
724C BD72C3           (./engine/graphics):00149 [8]     2996            jsr   ESP_ProcessEachPriorityLevelB1
724F                  (./engine/graphics):00150                 ESP_rtsB1        
724F 39               (./engine/graphics):00151 [5]     3001            rts
                      (./engine/graphics):00152                 
                      (./engine/graphics):00153                 * -----------------------------------------------
                      (./engine/graphics):00154                 * BUFFER0
                      (./engine/graphics):00155                 * -----------------------------------------------
                      (./engine/graphics):00156                 
7250                  (./engine/graphics):00157                 ESP_ProcessEachPriorityLevelB0
7250 A6C83F           (./engine/graphics):00158 [5]     3006            lda   rsv_priority_0,u
                      (./engine/graphics):00159                         
7253                  (./engine/graphics):00160                 ESP_CheckPriorityB0
7253 8100             (./engine/graphics):00161 [2]     3008            cmpa  #0                            ; dynamic current priority
7255 10260062         (./engine/graphics):00162 [5+?]   3013            lbne   ESP_NextObjectB0             ; do not process this entry (case of priority change)
                      (./engine/graphics):00163                         
7259                  (./engine/graphics):00164                 ESP_UnsetCheckRefreshB0
7259 A6C82C           (./engine/graphics):00165 [5]     3018            lda   rsv_render_flags,u
                      (./engine/graphics):00166                         ;ldb   render_flags,u               ; this option is deprecated, may be activated in future 
                      (./engine/graphics):00167                         ;andb  #render_motionless_mask      ; tell display engine to compute sub image and position check only once until the flag is removed
                      (./engine/graphics):00168                         ;bne   ESP_CheckEraseB0
725C 84FE             (./engine/graphics):00169 [2]     3020            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag
725E A7C82C           (./engine/graphics):00170 [5]     3025            sta   rsv_render_flags,u        
                      (./engine/graphics):00171                         
7261                  (./engine/graphics):00172                 ESP_CheckEraseB0
7261 8402             (./engine/graphics):00173 [2]     3027            anda  #rsv_render_erasesprite_mask
7263 10270054         (./engine/graphics):00174 [5+?]   3032            lbeq   ESP_NextObjectB0
7267 E6C852           (./engine/graphics):00175 [5]     3037            ldb   rsv_prev_render_flags_0,u
726A C401             (./engine/graphics):00176 [2]     3039            andb  #rsv_prev_render_overlay_mask
726C 263D             (./engine/graphics):00177 [3]     3042            bne   ESP_UnsetOnScreenFlagB0
                      (./engine/graphics):00178                         
726E                  (./engine/graphics):00179                 ESP_CallEraseRoutineB0
726E A6C847           (./engine/graphics):00180 [5]     3047            lda   rsv_prev_page_erase_routine_0,u
                      (./engine/graphics):00181                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
7271 BD78F1           (    _SetCartPageA):00002 [8]     3055            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7274 AEC848           (./engine/graphics):00182 [6]     3061            ldx   rsv_prev_erase_routine_0,u
7277 FF7283           (./engine/graphics):00183 [6]     3067            stu   ESP_CallEraseRoutineB0_00+1   ; backup u (pointer to object)                
727A EEC84A           (./engine/graphics):00184 [6]     3073            ldu   rsv_bgdata_0,u                ; cell_start background data        
727D AD84             (./engine/graphics):00185 [7]     3080            jsr   ,x                            ; erase sprite on working screen buffer
727F FF7339           (./engine/graphics):00186 [6]     3086            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
7282                  (./engine/graphics):00187                 ESP_CallEraseRoutineB0_00        
7282 CE0000           (./engine/graphics):00188 [3]     3089            ldu   #$0000                        ; restore u (pointer to object)
7285 ECC84A           (./engine/graphics):00189 [6]     3095            ldd   rsv_bgdata_0,u                ; cell_start
7288 830010           (./engine/graphics):00190 [4]     3099            subd  #16
728B C4C0             (./engine/graphics):00191 [2]     3101            andb  #256-cell_size                ; round cell_start to cell size
728D FD7337           (./engine/graphics):00192 [6]     3107            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./engine/graphics):00193                                         
7290                  (./engine/graphics):00194                 ESP_FreeEraseBufferB0
7290 A6C846           (./engine/graphics):00195 [5]     3112            lda   rsv_prev_erase_nb_cell_0,u     ; get nb of cell to free
7293 B77336           (./engine/graphics):00196 [5]     3117            sta   BBF_nb_cells
7296 FF73CC           (./engine/graphics):00197 [6]     3123            stu   BBF_rts+1
7299 CE6DE7           (./engine/graphics):00198 [3]     3126            ldu   #Lst_FreeCell_0
729C FF73AA           (./engine/graphics):00199 [6]     3132            stu   BBF_AddNewEntry+1
729F CE6DE5           (./engine/graphics):00200 [3]     3135            ldu   #Lst_FreeCellFirstEntry_0        
72A2 FF73C9           (./engine/graphics):00201 [6]     3141            stu   BBF_SetNewEntryPrevLink+1     ; init prev address destination as Lst_FreeCellFirstEntry                
72A5 FE6DE5           (./engine/graphics):00202 [6]     3147            ldu   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
72A8 BD733D           (./engine/graphics):00203 [8]     3155            jsr   BgBufferFree                  ; free background data in memory
                      (./engine/graphics):00204                         
72AB                  (./engine/graphics):00205                 ESP_UnsetOnScreenFlagB0
72AB A6C852           (./engine/graphics):00206 [5]     3160            lda   rsv_prev_render_flags_0,u
72AE 847F             (./engine/graphics):00207 [2]     3162            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen
72B0 A7C852           (./engine/graphics):00208 [5]     3167            sta   rsv_prev_render_flags_0,u
72B3 A6C82C           (./engine/graphics):00209 [5]     3172            lda   rsv_render_flags,u
72B6 847F             (./engine/graphics):00210 [2]     3174            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
72B8 A7C82C           (./engine/graphics):00211 [5]     3179            sta   rsv_render_flags,u
                      (./engine/graphics):00212                 
72BB                  (./engine/graphics):00213                 ESP_NextObjectB0
72BB EEC840           (./engine/graphics):00214 [6]     3185            ldu   rsv_priority_prev_obj_0,u
72BE 1026FF8E         (./engine/graphics):00215 [5+?]   3190            lbne   ESP_ProcessEachPriorityLevelB0   
72C2 39               (./engine/graphics):00216 [5]     3195            rts      
                      (./engine/graphics):00217                 
                      (./engine/graphics):00218                 * -----------------------------------------------        
                      (./engine/graphics):00219                 * BUFFER1
                      (./engine/graphics):00220                 * -----------------------------------------------        
                      (./engine/graphics):00221                                 
72C3                  (./engine/graphics):00222                 ESP_ProcessEachPriorityLevelB1
72C3 A6C853           (./engine/graphics):00223 [5]     3200            lda   rsv_priority_1,u
                      (./engine/graphics):00224                         
72C6                  (./engine/graphics):00225                 ESP_CheckPriorityB1
72C6 8100             (./engine/graphics):00226 [2]     3202            cmpa  #0                            ; dynamic current priority
72C8 10260062         (./engine/graphics):00227 [5+?]   3207            lbne   ESP_NextObjectB1             ; do not process this entry (case of priority change)
                      (./engine/graphics):00228                         
72CC                  (./engine/graphics):00229                 ESP_UnsetCheckRefreshB1
72CC A6C82C           (./engine/graphics):00230 [5]     3212            lda   rsv_render_flags,u
                      (./engine/graphics):00231                         ;ldb   render_flags,u               ; this option is deprecated, may be activated in future 
                      (./engine/graphics):00232                         ;andb  #render_motionless_mask      ; tell display engine to compute sub image and position check only once until the flag is removed
                      (./engine/graphics):00233                         ;bne   ESP_CheckEraseB1
72CF 84FE             (./engine/graphics):00234 [2]     3214            anda  #^rsv_render_checkrefresh_mask ; unset checkrefresh flag (CheckSpriteRefresh)
72D1 A7C82C           (./engine/graphics):00235 [5]     3219            sta   rsv_render_flags,u        
                      (./engine/graphics):00236                         
72D4                  (./engine/graphics):00237                 ESP_CheckEraseB1
72D4 8402             (./engine/graphics):00238 [2]     3221            anda  #rsv_render_erasesprite_mask
72D6 10270054         (./engine/graphics):00239 [5+?]   3226            lbeq   ESP_NextObjectB1
72DA E6C866           (./engine/graphics):00240 [5]     3231            ldb   rsv_prev_render_flags_1,u
72DD C401             (./engine/graphics):00241 [2]     3233            andb  #rsv_prev_render_overlay_mask
72DF 263D             (./engine/graphics):00242 [3]     3236            bne   ESP_UnsetOnScreenFlagB1        
                      (./engine/graphics):00243                         
72E1                  (./engine/graphics):00244                 ESP_CallEraseRoutineB1
72E1 A6C85B           (./engine/graphics):00245 [5]     3241            lda   rsv_prev_page_erase_routine_1,u
                      (./engine/graphics):00246                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
72E4 BD78F1           (    _SetCartPageA):00002 [8]     3249            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
72E7 AEC85C           (./engine/graphics):00247 [6]     3255            ldx   rsv_prev_erase_routine_1,u
72EA FF72F6           (./engine/graphics):00248 [6]     3261            stu   ESP_CallEraseRoutineB1_00+1   ; backup u (pointer to object)                
72ED EEC85E           (./engine/graphics):00249 [6]     3267            ldu   rsv_bgdata_1,u                ; cell_start background data        
72F0 AD84             (./engine/graphics):00250 [7]     3274            jsr   ,x                            ; erase sprite on working screen buffer
72F2 FF7339           (./engine/graphics):00251 [6]     3280            stu   BBF_cell_end                  ; cell_end background data as parameter to BBF
72F5                  (./engine/graphics):00252                 ESP_CallEraseRoutineB1_00        
72F5 CE0000           (./engine/graphics):00253 [3]     3283            ldu   #$0000                        ; restore u (pointer to object)
72F8 ECC85E           (./engine/graphics):00254 [6]     3289            ldd   rsv_bgdata_1,u                ; cell_start
72FB 830010           (./engine/graphics):00255 [4]     3293            subd  #16
72FE C4C0             (./engine/graphics):00256 [2]     3295            andb  #256-cell_size                ; round cell_start to cell size
7300 FD7337           (./engine/graphics):00257 [6]     3301            std   BBF_cell_start                ; cell_start rounded stored in x
                      (./engine/graphics):00258                                         
7303                  (./engine/graphics):00259                 ESP_FreeEraseBufferB1
7303 A6C85A           (./engine/graphics):00260 [5]     3306            lda   rsv_prev_erase_nb_cell_1,u       
7306 B77336           (./engine/graphics):00261 [5]     3311            sta   BBF_nb_cells         
7309 FF73CC           (./engine/graphics):00262 [6]     3317            stu   BBF_rts+1
730C CE6FAF           (./engine/graphics):00263 [3]     3320            ldu   #Lst_FreeCell_1
730F FF73AA           (./engine/graphics):00264 [6]     3326            stu   BBF_AddNewEntry+1
7312 CE6FAD           (./engine/graphics):00265 [3]     3329            ldu   #Lst_FreeCellFirstEntry_1        
7315 FF73C9           (./engine/graphics):00266 [6]     3335            stu   BBF_SetNewEntryPrevLink+1          
7318 FE6FAD           (./engine/graphics):00267 [6]     3341            ldu   Lst_FreeCellFirstEntry_1
731B BD733D           (./engine/graphics):00268 [8]     3349            jsr   BgBufferFree                  ; free background data in memory
                      (./engine/graphics):00269                         
731E                  (./engine/graphics):00270                 ESP_UnsetOnScreenFlagB1
731E A6C866           (./engine/graphics):00271 [5]     3354            lda   rsv_prev_render_flags_1,u
7321 847F             (./engine/graphics):00272 [2]     3356            anda  #^rsv_prev_render_onscreen_mask ; sprite is no longer on screen 
7323 A7C866           (./engine/graphics):00273 [5]     3361            sta   rsv_prev_render_flags_1,u
7326 A6C82C           (./engine/graphics):00274 [5]     3366            lda   rsv_render_flags,u
7329 847F             (./engine/graphics):00275 [2]     3368            anda  #^rsv_render_onscreen_mask      ; sprite is no longer on screen
732B A7C82C           (./engine/graphics):00276 [5]     3373            sta   rsv_render_flags,u
                      (./engine/graphics):00277                         
732E                  (./engine/graphics):00278                 ESP_NextObjectB1
732E EEC854           (./engine/graphics):00279 [6]     3379            ldu   rsv_priority_prev_obj_1,u
7331 1026FF8E         (./engine/graphics):00280 [5+?]   3384            lbne   ESP_ProcessEachPriorityLevelB1   
7335 39               (./engine/graphics):00281 [5]     3389            rts
                      (./engine/graphics):00282                         
                      (./engine/graphics):00283                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00284                 * BgBufferFree
                      (./engine/graphics):00285                 * ------------
                      (./engine/graphics):00286                 * Subroutine to free memory from background buffer
                      (./engine/graphics):00287                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00288                      
7336 00               (./engine/graphics):00289                 BBF_nb_cells   fcb   $00
7337 0000             (./engine/graphics):00290                 BBF_cell_start fdb   $0000
7339 0000             (./engine/graphics):00291                 BBF_cell_end   fdb   $0000       
733B 0000             (./engine/graphics):00292                 BBF_prev       fdb   $0000
                      (./engine/graphics):00293                 
                      (./engine/graphics):00294                         ; search position of the new free cells in the linked list
                      (./engine/graphics):00295                         ; linked list is ordered by cell_end (address) descending
                      (./engine/graphics):00296                         ; starting at Lst_FreeCellFirstEntry_x
                      (./engine/graphics):00297                         ; ----------------------------------------------------------
                      (./engine/graphics):00298                 
733D                  (./engine/graphics):00299                 BgBufferFree        
733D 2764             (./engine/graphics):00300 [3]     3392            beq   BBF_AddLastEntry
733F                  (./engine/graphics):00301                 BBF_SearchPos 
733F AE43             (./engine/graphics):00302 [6]     3398            ldx   cell_end,u
7341 BC7339           (./engine/graphics):00303 [7]     3405            cmpx  BBF_cell_end
7344 2510             (./engine/graphics):00304 [3]     3408            blo   BBF_CombineNext
7346 FF733B           (./engine/graphics):00305 [6]     3414            stu   BBF_prev
7349 EC45             (./engine/graphics):00306 [6]     3420            ldd   next_entry,u                  ; test next entry
734B 273B             (./engine/graphics):00307 [3]     3423            beq   BBF_CombinePrevNoNext
734D 3045             (./engine/graphics):00308 [5]     3428            leax  next_entry,u                  ; there is a next entry, save next_entry position
734F BF73C9           (./engine/graphics):00309 [6]     3434            stx   BBF_SetNewEntryPrevLink+1   
7352 EE45             (./engine/graphics):00310 [6]     3440            ldu   next_entry,u                  ; move to next entry        
7354 20E9             (./engine/graphics):00311 [3]     3443            bra   BBF_SearchPos        
                      (./engine/graphics):00312                         
                      (./engine/graphics):00313                         ; try to combine with next block
                      (./engine/graphics):00314                         ; ----------------------------------------------------------        
                      (./engine/graphics):00315                         
7356                  (./engine/graphics):00316                 BBF_CombineNext
7356 FF73C4           (./engine/graphics):00317 [6]     3449            stu   BBF_SetNewEntryNextentry+1
7359 BE7337           (./engine/graphics):00318 [6]     3455            ldx   BBF_cell_start
735C AC43             (./engine/graphics):00319 [7]     3462            cmpx  cell_end,u
735E 262E             (./engine/graphics):00320 [3]     3465            bne   BBF_CombinePrev
7360 BE7339           (./engine/graphics):00321 [6]     3471            ldx   BBF_cell_end
7363 AF43             (./engine/graphics):00322 [6]     3477            stx   cell_end,u
7365 A6C4             (./engine/graphics):00323 [4]     3481            lda   nb_cells,u
7367 BB7336           (./engine/graphics):00324 [5]     3486            adda  BBF_nb_cells
736A A7C4             (./engine/graphics):00325 [4]     3490            sta   nb_cells,u
                      (./engine/graphics):00326                         
736C                  (./engine/graphics):00327                 BBF_CombineNextAndPrev
736C 10BE733B         (./engine/graphics):00328 [7]     3497            ldy   BBF_prev
7370 AC21             (./engine/graphics):00329 [7]     3504            cmpx  cell_start,y
7372 2657             (./engine/graphics):00330 [3]     3507            bne   BBF_rts
7374 AE41             (./engine/graphics):00331 [6]     3513            ldx   cell_start,u
7376 AF21             (./engine/graphics):00332 [6]     3519            stx   cell_start,y
7378 A6C4             (./engine/graphics):00333 [4]     3523            lda   nb_cells,u        
737A ABA4             (./engine/graphics):00334 [4]     3527            adda  nb_cells,y
737C A7A4             (./engine/graphics):00335 [4]     3531            sta   nb_cells,y
737E EC45             (./engine/graphics):00336 [6]     3537            ldd   next_entry,u
7380 ED25             (./engine/graphics):00337 [6]     3543            std   next_entry,y
7382 8600             (./engine/graphics):00338 [2]     3545            lda   #$00
7384 A7C4             (./engine/graphics):00339 [4]     3549            sta   nb_cells,u                    ; delete the entry
7386 2043             (./engine/graphics):00340 [3]     3552            bra   BBF_rts
                      (./engine/graphics):00341                                 
                      (./engine/graphics):00342                         ; try to combine with prev block 
                      (./engine/graphics):00343                         ; ----------------------------------------------------------      
                      (./engine/graphics):00344                         
7388                  (./engine/graphics):00345                 BBF_CombinePrevNoNext
7388 CC0000           (./engine/graphics):00346 [3]     3555            ldd   #$0000
738B FD73C4           (./engine/graphics):00347 [6]     3561            std   BBF_SetNewEntryNextentry+1
738E                  (./engine/graphics):00348                 BBF_CombinePrev
738E BE7339           (./engine/graphics):00349 [6]     3567            ldx   BBF_cell_end
7391 AC41             (./engine/graphics):00350 [7]     3574            cmpx  cell_start,u
7393 2614             (./engine/graphics):00351 [3]     3577            bne   BBF_AddNewEntry
7395 BE7337           (./engine/graphics):00352 [6]     3583            ldx   BBF_cell_start
7398 AF41             (./engine/graphics):00353 [6]     3589            stx   cell_start,u
739A A6C4             (./engine/graphics):00354 [4]     3593            lda   nb_cells,u        
739C BB7336           (./engine/graphics):00355 [5]     3598            adda  BBF_nb_cells
739F A7C4             (./engine/graphics):00356 [4]     3602            sta   nb_cells,u
73A1 2028             (./engine/graphics):00357 [3]     3605            bra   BBF_rts   
                      (./engine/graphics):00358                 
                      (./engine/graphics):00359                         ; Add New Entry
                      (./engine/graphics):00360                         ; ----------------------------------------------------------
                      (./engine/graphics):00361                         
73A3                  (./engine/graphics):00362                 BBF_AddLastEntry
73A3 CC0000           (./engine/graphics):00363 [3]     3608            ldd   #$0000
73A6 FD73C4           (./engine/graphics):00364 [6]     3614            std   BBF_SetNewEntryNextentry+1        
73A9                  (./engine/graphics):00365                 BBF_AddNewEntry
73A9 CE0000           (./engine/graphics):00366 [3]     3617            ldu   #$0000                        ; (dynamic) start of linked list data index
73AC                  (./engine/graphics):00367                 BBF_FindFreeSlot
73AC E6C4             (./engine/graphics):00368 [4]     3621            ldb   nb_cells,u                    ; read Lst_FreeCell as a table (not a linked list)
73AE 2704             (./engine/graphics):00369 [3]     3624            beq   BBF_SetNewEntry               ; branch if empty entry
73B0 3347             (./engine/graphics):00370 [5]     3629            leau  entry_size,u                  ; move to next entry
73B2 20F8             (./engine/graphics):00371 [3]     3632            bra   BBF_FindFreeSlot              ; loop             
                      (./engine/graphics):00372                 
73B4                  (./engine/graphics):00373                 BBF_SetNewEntry        
73B4 B67336           (./engine/graphics):00374 [5]     3637            lda   BBF_nb_cells              
73B7 A7C4             (./engine/graphics):00375 [4]     3641            sta   nb_cells,u                    ; store released cells
73B9 FC7337           (./engine/graphics):00376 [6]     3647            ldd   BBF_cell_start
73BC ED41             (./engine/graphics):00377 [6]     3653            std   cell_start,u                  ; store cell start adress
73BE FC7339           (./engine/graphics):00378 [6]     3659            ldd   BBF_cell_end
73C1 ED43             (./engine/graphics):00379 [6]     3665            std   cell_end,u                    ; store cell end adress
                      (./engine/graphics):00380                         
73C3                  (./engine/graphics):00381                 BBF_SetNewEntryNextentry        
73C3 CC0000           (./engine/graphics):00382 [3]     3668            ldd   #$0000                        ; (dynamic) value is dynamically set
73C6 ED45             (./engine/graphics):00383 [6]     3674            std   next_entry,u                  ; link to 0000 if no more entry or next_entry
                      (./engine/graphics):00384                         
73C8                  (./engine/graphics):00385                 BBF_SetNewEntryPrevLink        
73C8 FFFFFF           (./engine/graphics):00386 [6]     3680            stu   $FFFF                         ; (dynamic) set Lst_FreeCellFirstEntry or prev_entry.next_entry with new entry
                      (./engine/graphics):00387                         
73CB                  (./engine/graphics):00388                 BBF_rts
73CB CE0000           (./engine/graphics):00389 [3]     3683            ldu   #$0000
73CE 39               (./engine/graphics):00390 [5]     3688            rts
                      (./engine/graphics):00391                                 
                      (./engine/graphics):00005                         INCLUDE "./engine/graphics/sprite/background-erase-mode/UnsetDisplayPriority.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * UnsetDisplayPriority
                      (./engine/graphics):00003                 * --------------------
                      (./engine/graphics):00004                 * Subroutine to unset sprites in Display Sprite Priority structure
                      (./engine/graphics):00005                 * Read Lst_Priority_Unset_0/1
                      (./engine/graphics):00006                 *
                      (./engine/graphics):00007                 * input REG : none
                      (./engine/graphics):00008                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00009                                                                                            
73CF                  (./engine/graphics):00010                 UnsetDisplayPriority
                      (./engine/graphics):00011                 
73CF                  (./engine/graphics):00012                 UDP_Start
73CF B678F0           (./engine/graphics):00013 [5]     3693            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
73D2 266D             (./engine/graphics):00014 [3]     3696            bne   UDP_B1
                      (./engine/graphics):00015                         
73D4                  (./engine/graphics):00016                 UDP_B0                                    
73D4 8E69C9           (./engine/graphics):00017 [3]     3699            ldx   #Lst_Priority_Unset_0+2
                      (./engine/graphics):00018                         
73D7                  (./engine/graphics):00019                 UDP_CheckEndB0        
73D7 BC69C7           (./engine/graphics):00020 [7]     3706            cmpx  Lst_Priority_Unset_0          ; end of priority unset list
73DA 2607             (./engine/graphics):00021 [3]     3709            bne   UDP_CheckPrioPrevB0
                      (./engine/graphics):00022                         
73DC                  (./engine/graphics):00023                 UDP_InitListB0      
73DC 8E69C9           (./engine/graphics):00024 [3]     3712            ldx   #Lst_Priority_Unset_0+2 
73DF BF69C7           (./engine/graphics):00025 [6]     3718            stx   Lst_Priority_Unset_0          ; set Lst_Priority_Unset_0 index
73E2 39               (./engine/graphics):00026 [5]     3723            rts
                      (./engine/graphics):00027                         
73E3                  (./engine/graphics):00028                 UDP_CheckPrioPrevB0
73E3 EE81             (./engine/graphics):00029 [8]     3731            ldu   ,x++
73E5 ECC840           (./engine/graphics):00030 [6]     3737            ldd   rsv_priority_prev_obj_0,u
73E8 2611             (./engine/graphics):00031 [3]     3740            bne   UDP_ChainPrevB0
                      (./engine/graphics):00032                         
73EA A6C83F           (./engine/graphics):00033 [5]     3745            lda   rsv_priority_0,u
73ED 48               (./engine/graphics):00034 [2]     3747            lsla
73EE 108E69A3         (./engine/graphics):00035 [4]     3751            ldy   #Tbl_Priority_First_Entry_0
73F2 31A6             (./engine/graphics):00036 [5]     3756            leay  a,y
73F4 ECC842           (./engine/graphics):00037 [6]     3762            ldd   rsv_priority_next_obj_0,u
73F7 EDA4             (./engine/graphics):00038 [5]     3767            std   ,y
73F9 200A             (./engine/graphics):00039 [3]     3770            bra   UDP_CheckPrioNextB0
                      (./engine/graphics):00040                                 
73FB                  (./engine/graphics):00041                 UDP_ChainPrevB0
73FB ECC842           (./engine/graphics):00042 [6]     3776            ldd   rsv_priority_next_obj_0,u
73FE 10AEC840         (./engine/graphics):00043 [7]     3783            ldy   rsv_priority_prev_obj_0,u        
7402 EDA842           (./engine/graphics):00044 [6]     3789            std   rsv_priority_next_obj_0,y        
                      (./engine/graphics):00045                 
7405                  (./engine/graphics):00046                 UDP_CheckPrioNextB0       
7405 ECC842           (./engine/graphics):00047 [6]     3795            ldd   rsv_priority_next_obj_0,u
7408 2611             (./engine/graphics):00048 [3]     3798            bne   UDP_ChainNextB0
                      (./engine/graphics):00049                 
740A A6C83F           (./engine/graphics):00050 [5]     3803            lda   rsv_priority_0,u
740D 48               (./engine/graphics):00051 [2]     3805            lsla
740E 108E69B5         (./engine/graphics):00052 [4]     3809            ldy   #Tbl_Priority_Last_Entry_0
7412 31A6             (./engine/graphics):00053 [5]     3814            leay  a,y
7414 ECC840           (./engine/graphics):00054 [6]     3820            ldd   rsv_priority_prev_obj_0,u
7417 EDA4             (./engine/graphics):00055 [5]     3825            std   ,y
7419 200A             (./engine/graphics):00056 [3]     3828            bra   UDP_CheckDeleteB0
                      (./engine/graphics):00057                                 
741B                  (./engine/graphics):00058                 UDP_ChainNextB0
741B ECC840           (./engine/graphics):00059 [6]     3834            ldd   rsv_priority_prev_obj_0,u
741E 10AEC842         (./engine/graphics):00060 [7]     3841            ldy   rsv_priority_next_obj_0,u        
7422 EDA840           (./engine/graphics):00061 [6]     3847            std   rsv_priority_prev_obj_0,y
                      (./engine/graphics):00062                         
7425                  (./engine/graphics):00063                 UDP_CheckDeleteB0
7425 A642             (./engine/graphics):00064 [5]     3852            lda   render_flags,u
7427 8420             (./engine/graphics):00065 [2]     3854            anda  #render_todelete_mask
7429 270F             (./engine/graphics):00066 [3]     3857            beq   UDP_SetNewPrioB0
742B A6C852           (./engine/graphics):00067 [5]     3862            lda   rsv_prev_render_flags_0,u
742E 2B0A             (./engine/graphics):00068 [3]     3865            bmi   UDP_SetNewPrioB0
7430 A6C866           (./engine/graphics):00069 [5]     3870            lda   rsv_prev_render_flags_1,u
7433 2B05             (./engine/graphics):00070 [3]     3873            bmi   UDP_SetNewPrioB0
7435 BD77C4           (./engine/graphics):00071 [8]     3881            jsr   ClearObj
7438 209D             (./engine/graphics):00072 [3]     3884            bra   UDP_CheckEndB0
                      (./engine/graphics):00073                         
743A                  (./engine/graphics):00074                 UDP_SetNewPrioB0
743A A643             (./engine/graphics):00075 [5]     3889            lda   priority,u
743C A7C83F           (./engine/graphics):00076 [5]     3894            sta   rsv_priority_0,u
743F 2096             (./engine/graphics):00077 [3]     3897            bra   UDP_CheckEndB0        
                      (./engine/graphics):00078                 
7441                  (./engine/graphics):00079                 UDP_B1                                    
7441 8E6A0B           (./engine/graphics):00080 [3]     3900            ldx   #Lst_Priority_Unset_1+2
                      (./engine/graphics):00081                         
7444                  (./engine/graphics):00082                 UDP_CheckEndB1        
7444 BC6A09           (./engine/graphics):00083 [7]     3907            cmpx  Lst_Priority_Unset_1          ; end of priority unset list
7447 2607             (./engine/graphics):00084 [3]     3910            bne   UDP_CheckPrioPrevB1
                      (./engine/graphics):00085                         
7449                  (./engine/graphics):00086                 UDP_InitListB1      
7449 8E6A0B           (./engine/graphics):00087 [3]     3913            ldx   #Lst_Priority_Unset_1+2 
744C BF6A09           (./engine/graphics):00088 [6]     3919            stx   Lst_Priority_Unset_1          ; set Lst_Priority_Unset_0 index
744F 39               (./engine/graphics):00089 [5]     3924            rts
                      (./engine/graphics):00090                         
7450                  (./engine/graphics):00091                 UDP_CheckPrioPrevB1
7450 EE81             (./engine/graphics):00092 [8]     3932            ldu   ,x++
7452 ECC854           (./engine/graphics):00093 [6]     3938            ldd   rsv_priority_prev_obj_1,u
7455 2611             (./engine/graphics):00094 [3]     3941            bne   UDP_ChainPrevB1
                      (./engine/graphics):00095                         
7457 A6C853           (./engine/graphics):00096 [5]     3946            lda   rsv_priority_1,u
745A 48               (./engine/graphics):00097 [2]     3948            lsla
745B 108E69E5         (./engine/graphics):00098 [4]     3952            ldy   #Tbl_Priority_First_Entry_1
745F 31A6             (./engine/graphics):00099 [5]     3957            leay  a,y
7461 ECC856           (./engine/graphics):00100 [6]     3963            ldd   rsv_priority_next_obj_1,u
7464 EDA4             (./engine/graphics):00101 [5]     3968            std   ,y
7466 200A             (./engine/graphics):00102 [3]     3971            bra   UDP_CheckPrioNextB1
                      (./engine/graphics):00103                                 
7468                  (./engine/graphics):00104                 UDP_ChainPrevB1
7468 ECC856           (./engine/graphics):00105 [6]     3977            ldd   rsv_priority_next_obj_1,u
746B 10AEC854         (./engine/graphics):00106 [7]     3984            ldy   rsv_priority_prev_obj_1,u        
746F EDA856           (./engine/graphics):00107 [6]     3990            std   rsv_priority_next_obj_1,y        
                      (./engine/graphics):00108                 
7472                  (./engine/graphics):00109                 UDP_CheckPrioNextB1       
7472 ECC856           (./engine/graphics):00110 [6]     3996            ldd   rsv_priority_next_obj_1,u
7475 2611             (./engine/graphics):00111 [3]     3999            bne   UDP_ChainNextB1
                      (./engine/graphics):00112                 
7477 A6C853           (./engine/graphics):00113 [5]     4004            lda   rsv_priority_1,u
747A 48               (./engine/graphics):00114 [2]     4006            lsla
747B 108E69F7         (./engine/graphics):00115 [4]     4010            ldy   #Tbl_Priority_Last_Entry_1
747F 31A6             (./engine/graphics):00116 [5]     4015            leay  a,y
7481 ECC854           (./engine/graphics):00117 [6]     4021            ldd   rsv_priority_prev_obj_1,u
7484 EDA4             (./engine/graphics):00118 [5]     4026            std   ,y
7486 200A             (./engine/graphics):00119 [3]     4029            bra   UDP_CheckDeleteB1
                      (./engine/graphics):00120                                 
7488                  (./engine/graphics):00121                 UDP_ChainNextB1
7488 ECC854           (./engine/graphics):00122 [6]     4035            ldd   rsv_priority_prev_obj_1,u
748B 10AEC856         (./engine/graphics):00123 [7]     4042            ldy   rsv_priority_next_obj_1,u        
748F EDA854           (./engine/graphics):00124 [6]     4048            std   rsv_priority_prev_obj_1,y
                      (./engine/graphics):00125                         
7492                  (./engine/graphics):00126                 UDP_CheckDeleteB1
7492 A642             (./engine/graphics):00127 [5]     4053            lda   render_flags,u
7494 8420             (./engine/graphics):00128 [2]     4055            anda  #render_todelete_mask
7496 270F             (./engine/graphics):00129 [3]     4058            beq   UDP_SetNewPrioB1
7498 A6C852           (./engine/graphics):00130 [5]     4063            lda   rsv_prev_render_flags_0,u
749B 2B0A             (./engine/graphics):00131 [3]     4066            bmi   UDP_SetNewPrioB1
749D A6C866           (./engine/graphics):00132 [5]     4071            lda   rsv_prev_render_flags_1,u
74A0 2B05             (./engine/graphics):00133 [3]     4074            bmi   UDP_SetNewPrioB1
74A2 BD77C4           (./engine/graphics):00134 [8]     4082            jsr   ClearObj
74A5 209D             (./engine/graphics):00135 [3]     4085            bra   UDP_CheckEndB1
                      (./engine/graphics):00136                         
74A7                  (./engine/graphics):00137                 UDP_SetNewPrioB1
74A7 A643             (./engine/graphics):00138 [5]     4090            lda   priority,u
74A9 A7C853           (./engine/graphics):00139 [5]     4095            sta   rsv_priority_1,u
74AC 2096             (./engine/graphics):00140 [3]     4098            bra   UDP_CheckEndB1
                      (./engine/graphics):00006                         INCLUDE "./engine/graphics/sprite/background-erase-mode/DrawSpritesExtEnc.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * DrawSprites
                      (./engine/graphics):00003                 * ------------
                      (./engine/graphics):00004                 * Subroutine to draw sprites on screen
                      (./engine/graphics):00005                 * Read Display Priority Structure (back to front)
                      (./engine/graphics):00006                 * priority: 0 - unregistred
                      (./engine/graphics):00007                 * priority: 1 - register non moving overlay sprite
                      (./engine/graphics):00008                 * priority; 2-8 - register moving sprite (2:front, ..., 8:back)  
                      (./engine/graphics):00009                 *
                      (./engine/graphics):00010                 * input REG : none
                      (./engine/graphics):00011                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00012                 
74AE                  (./engine/graphics):00013                 DrawSprites
                      (./engine/graphics):00014                 
74AE                  (./engine/graphics):00015                 DRS_Start
74AE B678F0           (./engine/graphics):00016 [5]     4103            lda   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
74B1 2641             (./engine/graphics):00017 [3]     4106            bne   DRS_P8B1
                      (./engine/graphics):00018                         
74B3                  (./engine/graphics):00019                 DRS_P8B0                                    
74B3 BE69B3           (./engine/graphics):00020 [6]     4112            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
74B6 2703             (./engine/graphics):00021 [3]     4115            beq   DRS_P7B0
74B8 BD7535           (./engine/graphics):00022 [8]     4123            jsr   DRS_ProcessEachPriorityLevelB0   
74BB                  (./engine/graphics):00023                 DRS_P7B0
74BB BE69B1           (./engine/graphics):00024 [6]     4129            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+14
74BE 2703             (./engine/graphics):00025 [3]     4132            beq   DRS_P6B0
74C0 BD7535           (./engine/graphics):00026 [8]     4140            jsr   DRS_ProcessEachPriorityLevelB0  
74C3                  (./engine/graphics):00027                 DRS_P6B0
74C3 BE69AF           (./engine/graphics):00028 [6]     4146            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+12
74C6 2703             (./engine/graphics):00029 [3]     4149            beq   DRS_P5B0
74C8 BD7535           (./engine/graphics):00030 [8]     4157            jsr   DRS_ProcessEachPriorityLevelB0  
74CB                  (./engine/graphics):00031                 DRS_P5B0
74CB BE69AD           (./engine/graphics):00032 [6]     4163            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+10
74CE 2703             (./engine/graphics):00033 [3]     4166            beq   DRS_P4B0
74D0 BD7535           (./engine/graphics):00034 [8]     4174            jsr   DRS_ProcessEachPriorityLevelB0  
74D3                  (./engine/graphics):00035                 DRS_P4B0
74D3 BE69AB           (./engine/graphics):00036 [6]     4180            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+8
74D6 2703             (./engine/graphics):00037 [3]     4183            beq   DRS_P3B0
74D8 BD7535           (./engine/graphics):00038 [8]     4191            jsr   DRS_ProcessEachPriorityLevelB0              
74DB                  (./engine/graphics):00039                 DRS_P3B0
74DB BE69A9           (./engine/graphics):00040 [6]     4197            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+6
74DE 2703             (./engine/graphics):00041 [3]     4200            beq   DRS_P2B0
74E0 BD7535           (./engine/graphics):00042 [8]     4208            jsr   DRS_ProcessEachPriorityLevelB0     
74E3                  (./engine/graphics):00043                 DRS_P2B0
74E3 BE69A7           (./engine/graphics):00044 [6]     4214            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+4
74E6 2703             (./engine/graphics):00045 [3]     4217            beq   DRS_P1B0
74E8 BD7535           (./engine/graphics):00046 [8]     4225            jsr   DRS_ProcessEachPriorityLevelB0 
74EB                  (./engine/graphics):00047                 DRS_P1B0
74EB BE69A5           (./engine/graphics):00048 [6]     4231            ldx   DPS_buffer_0+buf_Tbl_Priority_First_Entry+2
74EE 2703             (./engine/graphics):00049 [3]     4234            beq   DRS_rtsB0
74F0 BD7535           (./engine/graphics):00050 [8]     4242            jsr   DRS_ProcessEachPriorityLevelB0
74F3                  (./engine/graphics):00051                 DRS_rtsB0        
74F3 39               (./engine/graphics):00052 [5]     4247            rts
                      (./engine/graphics):00053                         
74F4                  (./engine/graphics):00054                 DRS_P8B1
74F4 BE69F5           (./engine/graphics):00055 [6]     4253            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+16 ; read DPS from priority 8 to priority 1
74F7 2703             (./engine/graphics):00056 [3]     4256            beq   DRS_P7B1
74F9 BD75FE           (./engine/graphics):00057 [8]     4264            jsr   DRS_ProcessEachPriorityLevelB1   
74FC                  (./engine/graphics):00058                 DRS_P7B1
74FC BE69F3           (./engine/graphics):00059 [6]     4270            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+14
74FF 2703             (./engine/graphics):00060 [3]     4273            beq   DRS_P6B1
7501 BD75FE           (./engine/graphics):00061 [8]     4281            jsr   DRS_ProcessEachPriorityLevelB1   
7504                  (./engine/graphics):00062                 DRS_P6B1
7504 BE69F1           (./engine/graphics):00063 [6]     4287            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+12
7507 2703             (./engine/graphics):00064 [3]     4290            beq   DRS_P5B1
7509 BD75FE           (./engine/graphics):00065 [8]     4298            jsr   DRS_ProcessEachPriorityLevelB1   
750C                  (./engine/graphics):00066                 DRS_P5B1
750C BE69EF           (./engine/graphics):00067 [6]     4304            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+10
750F 2703             (./engine/graphics):00068 [3]     4307            beq   DRS_P4B1
7511 BD75FE           (./engine/graphics):00069 [8]     4315            jsr   DRS_ProcessEachPriorityLevelB1   
7514                  (./engine/graphics):00070                 DRS_P4B1
7514 BE69ED           (./engine/graphics):00071 [6]     4321            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+8
7517 2703             (./engine/graphics):00072 [3]     4324            beq   DRS_P3B1
7519 BD75FE           (./engine/graphics):00073 [8]     4332            jsr   DRS_ProcessEachPriorityLevelB1             
751C                  (./engine/graphics):00074                 DRS_P3B1
751C BE69EB           (./engine/graphics):00075 [6]     4338            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+6
751F 2703             (./engine/graphics):00076 [3]     4341            beq   DRS_P2B1
7521 BD75FE           (./engine/graphics):00077 [8]     4349            jsr   DRS_ProcessEachPriorityLevelB1    
7524                  (./engine/graphics):00078                 DRS_P2B1
7524 BE69E9           (./engine/graphics):00079 [6]     4355            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+4
7527 2703             (./engine/graphics):00080 [3]     4358            beq   DRS_P1B1
7529 BD75FE           (./engine/graphics):00081 [8]     4366            jsr   DRS_ProcessEachPriorityLevelB1
752C                  (./engine/graphics):00082                 DRS_P1B1
752C BE69E7           (./engine/graphics):00083 [6]     4372            ldx   DPS_buffer_1+buf_Tbl_Priority_First_Entry+2
752F 2703             (./engine/graphics):00084 [3]     4375            beq   DRS_rtsB1
7531 BD75FE           (./engine/graphics):00085 [8]     4383            jsr   DRS_ProcessEachPriorityLevelB1
7534                  (./engine/graphics):00086                 DRS_rtsB1        
7534 39               (./engine/graphics):00087 [5]     4388            rts
                      (./engine/graphics):00088                 
7535                  (./engine/graphics):00089                 DRS_ProcessEachPriorityLevelB0    
7535 A6882C           (./engine/graphics):00090 [5]     4393            lda   rsv_render_flags,x
7538 8404             (./engine/graphics):00091 [2]     4395            anda  #rsv_render_displaysprite_mask
753A 10270089         (./engine/graphics):00092 [5+?]   4400            lbeq  DRS_NextObjectB0
                      (./engine/graphics):00093                         
753E A68852           (./engine/graphics):00094 [5]     4405            lda   rsv_prev_render_flags_0,x
7541 102B0082         (./engine/graphics):00095 [5+?]   4410            lbmi  DRS_NextObjectB0
7545 A602             (./engine/graphics):00096 [5]     4415            lda   render_flags,x
7547 8404             (./engine/graphics):00097 [2]     4417            anda  #render_overlay_mask
7549 260E             (./engine/graphics):00098 [3]     4420            bne   DRS_DrawWithoutBackupB0
754B A68834           (./engine/graphics):00099 [5]     4425            lda   rsv_erase_nb_cell,x        
754E BD7699           (./engine/graphics):00100 [8]     4433            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
7551 108C0000         (./engine/graphics):00101 [5]     4438            cmpy  #$0000                        ; y contains cell_end of allocated space 
7555 1027006E         (./engine/graphics):00102 [5+?]   4443            lbeq   DRS_NextObjectB0             ; branch if no more free space
7559                  (./engine/graphics):00103                 DRS_DrawWithoutBackupB0        
7559 EC8814           (./engine/graphics):00104 [6]     4449            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
755C A0882F           (./engine/graphics):00105 [5]     4454            suba  rsv_image_center_offset,x
755F BD75CF           (./engine/graphics):00106 [8]     4462            jsr   DRS_XYToAddress
7562 EC8832           (./engine/graphics):00107 [6]     4468            ldd   rsv_mapping_frame,x
7565 ED8844           (./engine/graphics):00108 [6]     4474            std   rsv_prev_mapping_frame_0,x    ; save previous mapping_frame
7568 A68835           (./engine/graphics):00109 [5]     4479            lda   rsv_page_draw_routine,x
                      (./engine/graphics):00110                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
756B BD78F1           (    _SetCartPageA):00002 [8]     4487            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
756E BF7581           (./engine/graphics):00111 [6]     4493            stx   DRS_dyn3B0+1                  ; save x reg
7571 DEFA             (./engine/graphics):00112 [5]     4498            ldu   <glb_screen_location_2
7573 AD9836           (./engine/graphics):00113 [11]    4509            jsr   [rsv_draw_routine,x]          ; backup background and draw sprite on working screen buffer
7576 2008             (./engine/graphics):00114 [3]     4512            bra   DRS_dyn3B0
7578 BD68B7           (./engine/graphics):00115 [8]     4520            jsr   DecMapAlpha
757B 2003             (./engine/graphics):00116 [3]     4523            bra   DRS_dyn3B0       
757D BD7698           (./engine/graphics):00117 [8]     4531            jsr   zx0_6809_mega_wrap        
7580                  (./engine/graphics):00118                 DRS_dyn3B0        
7580 8E0000           (./engine/graphics):00119 [3]     4534            ldx   #$0000                        ; (dynamic) restore x reg
7583 EF884A           (./engine/graphics):00120 [6]     4540            stu   rsv_bgdata_0,x                ; store pointer to saved background data
7586 EC8814           (./engine/graphics):00121 [6]     4546            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
7589 44               (./engine/graphics):00122 [2]     4548            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
758A ED884C           (./engine/graphics):00123 [6]     4554            std   rsv_prev_xy_pixel_0,x         ; save previous x_pixel and y_pixel in one operation             
758D EC883B           (./engine/graphics):00124 [6]     4560            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
7590 ED884E           (./engine/graphics):00125 [6]     4566            std   rsv_prev_xy1_pixel_0,x        ; save as previous x' and y'        
7593 EC883D           (./engine/graphics):00126 [6]     4572            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
7596 ED8850           (./engine/graphics):00127 [6]     4578            std   rsv_prev_xy2_pixel_0,x        ; save as previous x'' and y''
7599 A68834           (./engine/graphics):00128 [5]     4583            lda   rsv_erase_nb_cell,x
759C A78846           (./engine/graphics):00129 [5]     4588            sta   rsv_prev_erase_nb_cell_0,x
759F A68838           (./engine/graphics):00130 [5]     4593            lda   rsv_page_erase_routine,x
75A2 A78847           (./engine/graphics):00131 [5]     4598            sta   rsv_prev_page_erase_routine_0,x
75A5 EC8839           (./engine/graphics):00132 [6]     4604            ldd   rsv_erase_routine,x
75A8 ED8848           (./engine/graphics):00133 [6]     4610            std   rsv_prev_erase_routine_0,x
75AB A68852           (./engine/graphics):00134 [5]     4615            lda   rsv_prev_render_flags_0,x
75AE 8A80             (./engine/graphics):00135 [2]     4617            ora   #rsv_prev_render_onscreen_mask
75B0 E602             (./engine/graphics):00136 [5]     4622            ldb   render_flags,x
75B2 C504             (./engine/graphics):00137 [2]     4624            bitb  #render_overlay_mask
75B4 2704             (./engine/graphics):00138 [3]     4627            beq   DRS_NoOverlayB0
75B6 8A01             (./engine/graphics):00139 [2]     4629            ora   #rsv_prev_render_overlay_mask
75B8 2002             (./engine/graphics):00140 [3]     4632            bra   DRS_UpdateRenderFlagB0
                      (./engine/graphics):00141                         
75BA                  (./engine/graphics):00142                 DRS_NoOverlayB0
75BA 84FE             (./engine/graphics):00143 [2]     4634            anda   #^rsv_prev_render_overlay_mask
                      (./engine/graphics):00144                 
75BC                  (./engine/graphics):00145                 DRS_UpdateRenderFlagB0        
75BC A78852           (./engine/graphics):00146 [5]     4639            sta   rsv_prev_render_flags_0,x     ; set the onscreen flag and save overlay flag
75BF A6882C           (./engine/graphics):00147 [5]     4644            lda   rsv_render_flags,x
75C2 8A80             (./engine/graphics):00148 [2]     4646            ora   #rsv_render_onscreen_mask     ; sprite is on screen
75C4 A7882C           (./engine/graphics):00149 [5]     4651            sta   rsv_render_flags,x
                      (./engine/graphics):00150                         
75C7                  (./engine/graphics):00151                 DRS_NextObjectB0        
75C7 AE8842           (./engine/graphics):00152 [6]     4657            ldx   rsv_priority_next_obj_0,x
75CA 1026FF67         (./engine/graphics):00153 [5+?]   4662            lbne  DRS_ProcessEachPriorityLevelB0   
75CE 39               (./engine/graphics):00154 [5]     4667            rts
                      (./engine/graphics):00155                 
                      (./engine/graphics):00156                 ********************************************************************************
                      (./engine/graphics):00157                 * x_pixel and y_pixel coordinate system
                      (./engine/graphics):00158                 * x coordinates:
                      (./engine/graphics):00159                 *    - off-screen left 00-2F (0-47)
                      (./engine/graphics):00160                 *    - on screen 30-CF (48-207)
                      (./engine/graphics):00161                 *    - off-screen right D0-FF (208-255)
                      (./engine/graphics):00162                 *
                      (./engine/graphics):00163                 * y coordinates:
                      (./engine/graphics):00164                 *    - off-screen top 00-1B (0-27)
                      (./engine/graphics):00165                 *    - on screen 1C-E3 (28-227)
                      (./engine/graphics):00166                 *    - off-screen bottom E4-FF (228-255)
                      (./engine/graphics):00167                 ********************************************************************************
                      (./engine/graphics):00168                 
75CF                  (./engine/graphics):00169                 DRS_XYToAddress
75CF 8030             (./engine/graphics):00170 [2]     4669            suba  #$30
75D1 2403             (./engine/graphics):00171 [3]     4672            bcc   DRS_XYToAddressPositive
75D3 8060             (./engine/graphics):00172 [2]     4674            suba  #$60                          ; get x position one line up, skipping (160-255)
75D5 5A               (./engine/graphics):00173 [2]     4676            decb
75D6                  (./engine/graphics):00174                 DRS_XYToAddressPositive        
75D6 C01C             (./engine/graphics):00175 [2]     4678            subb  #$1C                          ; TODO same thing as x for negative case
75D8 44               (./engine/graphics):00176 [2]     4680            lsra                                ; x=x/2, sprites moves by 2 pixels on x axis
75D9 44               (./engine/graphics):00177 [2]     4682            lsra                                ; x=x/2, RAMA RAMB enterlace  
75DA 2511             (./engine/graphics):00178 [3]     4685            bcs   DRS_XYToAddressRAM2First      ; Branch if write must begin in RAM2 first
75DC                  (./engine/graphics):00179                 DRS_XYToAddressRAM1First
75DC B775E4           (./engine/graphics):00180 [5]     4690            sta   DRS_dyn1+2
75DF 8628             (./engine/graphics):00181 [2]     4692            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
75E1 3D               (./engine/graphics):00182 [11]    4703            mul
75E2                  (./engine/graphics):00183                 DRS_dyn1        
75E2 C3C000           (./engine/graphics):00184 [4]     4707            addd  #$C000                        ; (dynamic)
75E5 DDFA             (./engine/graphics):00185 [5]     4712            std   <glb_screen_location_2
75E7 832000           (./engine/graphics):00186 [4]     4716            subd  #$2000
75EA DDFC             (./engine/graphics):00187 [5]     4721            std   <glb_screen_location_1     
75EC 39               (./engine/graphics):00188 [5]     4726            rts
75ED                  (./engine/graphics):00189                 DRS_XYToAddressRAM2First
75ED B775F5           (./engine/graphics):00190 [5]     4731            sta   DRS_dyn2+2
75F0 8628             (./engine/graphics):00191 [2]     4733            lda   #$28                          ; 40 bytes per line in RAMA or RAMB
75F2 3D               (./engine/graphics):00192 [11]    4744            mul
75F3                  (./engine/graphics):00193                 DRS_dyn2        
75F3 C3A000           (./engine/graphics):00194 [4]     4748            addd  #$A000                        ; (dynamic)
75F6 DDFA             (./engine/graphics):00195 [5]     4753            std   <glb_screen_location_2
75F8 C32001           (./engine/graphics):00196 [4]     4757            addd  #$2001
75FB DDFC             (./engine/graphics):00197 [5]     4762            std   <glb_screen_location_1
75FD 39               (./engine/graphics):00198 [5]     4767            rts
                      (./engine/graphics):00199                         
75FE                  (./engine/graphics):00200                 DRS_ProcessEachPriorityLevelB1
75FE A6882C           (./engine/graphics):00201 [5]     4772            lda   rsv_render_flags,x
7601 8404             (./engine/graphics):00202 [2]     4774            anda  #rsv_render_displaysprite_mask
7603 10270089         (./engine/graphics):00203 [5+?]   4779            lbeq  DRS_NextObjectB1
                      (./engine/graphics):00204                         
7607 A68866           (./engine/graphics):00205 [5]     4784            lda   rsv_prev_render_flags_1,x
760A 102B0082         (./engine/graphics):00206 [5+?]   4789            lbmi  DRS_NextObjectB1
760E A602             (./engine/graphics):00207 [5]     4794            lda   render_flags,x
7610 8404             (./engine/graphics):00208 [2]     4796            anda  #render_overlay_mask
7612 260E             (./engine/graphics):00209 [3]     4799            bne   DRS_DrawWithoutBackupB1
7614 A68834           (./engine/graphics):00210 [5]     4804            lda   rsv_erase_nb_cell,x        
7617 BD7699           (./engine/graphics):00211 [8]     4812            jsr   BgBufferAlloc                 ; allocate free space to store sprite background data
761A 108C0000         (./engine/graphics):00212 [5]     4817            cmpy  #$0000                        ; y contains cell_end of allocated space
761E 1027006E         (./engine/graphics):00213 [5+?]   4822            lbeq   DRS_NextObjectB1             ; branch if no more free space
7622                  (./engine/graphics):00214                 DRS_DrawWithoutBackupB1        
7622 EC8814           (./engine/graphics):00215 [6]     4828            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
7625 A0882F           (./engine/graphics):00216 [5]     4833            suba  rsv_image_center_offset,x
7628 BD75CF           (./engine/graphics):00217 [8]     4841            jsr   DRS_XYToAddress
762B EC8832           (./engine/graphics):00218 [6]     4847            ldd   rsv_mapping_frame,x
762E ED8858           (./engine/graphics):00219 [6]     4853            std   rsv_prev_mapping_frame_1,x    ; save previous mapping_frame
7631 A68835           (./engine/graphics):00220 [5]     4858            lda   rsv_page_draw_routine,x
                      (./engine/graphics):00221                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
7634 BD78F1           (    _SetCartPageA):00002 [8]     4866            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7637 BF764A           (./engine/graphics):00222 [6]     4872            stx   DRS_dyn3B1+1                  ; save x reg
763A DEFA             (./engine/graphics):00223 [5]     4877            ldu   <glb_screen_location_2
763C AD9836           (./engine/graphics):00224 [11]    4888            jsr   [rsv_draw_routine,x]
763F 2008             (./engine/graphics):00225 [3]     4891            bra   DRS_dyn3B1        
7641 BD68B7           (./engine/graphics):00226 [8]     4899            jsr   DecMapAlpha
7644 2003             (./engine/graphics):00227 [3]     4902            bra   DRS_dyn3B1        
7646 BD7698           (./engine/graphics):00228 [8]     4910            jsr   zx0_6809_mega_wrap        
7649                  (./engine/graphics):00229                 DRS_dyn3B1        
7649 8E0000           (./engine/graphics):00230 [3]     4913            ldx   #$0000                        ; (dynamic) restore x reg
764C EF885E           (./engine/graphics):00231 [6]     4919            stu   rsv_bgdata_1,x                ; store pointer to saved background data
764F EC8814           (./engine/graphics):00232 [6]     4925            ldd   xy_pixel,x                    ; load x position (48-207) and y position (28-227) in one operation
7652 44               (./engine/graphics):00233 [2]     4927            lsra                                ; x position precision is x_pixel/2 and mapping_frame with or without 1px shit
7653 ED8860           (./engine/graphics):00234 [6]     4933            std   rsv_prev_xy_pixel_1,x         ; save previous x_pixel and y_pixel in one operation         
7656 EC883B           (./engine/graphics):00235 [6]     4939            ldd   rsv_xy1_pixel,x               ; load x' and y' in one operation
7659 ED8862           (./engine/graphics):00236 [6]     4945            std   rsv_prev_xy1_pixel_1,x        ; save as previous x' and y'        
765C EC883D           (./engine/graphics):00237 [6]     4951            ldd   rsv_xy2_pixel,x               ; load x'' and y'' in one operation
765F ED8864           (./engine/graphics):00238 [6]     4957            std   rsv_prev_xy2_pixel_1,x        ; save as previous x'' and y''
7662 A68834           (./engine/graphics):00239 [5]     4962            lda   rsv_erase_nb_cell,x
7665 A7885A           (./engine/graphics):00240 [5]     4967            sta   rsv_prev_erase_nb_cell_1,x
7668 A68838           (./engine/graphics):00241 [5]     4972            lda   rsv_page_erase_routine,x
766B A7885B           (./engine/graphics):00242 [5]     4977            sta   rsv_prev_page_erase_routine_1,x
766E EC8839           (./engine/graphics):00243 [6]     4983            ldd   rsv_erase_routine,x
7671 ED885C           (./engine/graphics):00244 [6]     4989            std   rsv_prev_erase_routine_1,x                        
7674 A68866           (./engine/graphics):00245 [5]     4994            lda   rsv_prev_render_flags_1,x
7677 8A80             (./engine/graphics):00246 [2]     4996            ora   #rsv_prev_render_onscreen_mask
7679 E602             (./engine/graphics):00247 [5]     5001            ldb   render_flags,x
767B C504             (./engine/graphics):00248 [2]     5003            bitb  #render_overlay_mask
767D 2704             (./engine/graphics):00249 [3]     5006            beq   DRS_NoOverlayB1
767F 8A01             (./engine/graphics):00250 [2]     5008            ora   #rsv_prev_render_overlay_mask
7681 2002             (./engine/graphics):00251 [3]     5011            bra   DRS_UpdateRenderFlagB1
                      (./engine/graphics):00252                         
7683                  (./engine/graphics):00253                 DRS_NoOverlayB1
7683 84FE             (./engine/graphics):00254 [2]     5013            anda   #^rsv_prev_render_overlay_mask
                      (./engine/graphics):00255                 
7685                  (./engine/graphics):00256                 DRS_UpdateRenderFlagB1
7685 A78866           (./engine/graphics):00257 [5]     5018            sta   rsv_prev_render_flags_1,x     ; set the onscreen flag and save overlay flag
7688 A6882C           (./engine/graphics):00258 [5]     5023            lda   rsv_render_flags,x
768B 8A80             (./engine/graphics):00259 [2]     5025            ora   #rsv_render_onscreen_mask     ; sprite is on screen
768D A7882C           (./engine/graphics):00260 [5]     5030            sta   rsv_render_flags,x        
                      (./engine/graphics):00261                                 
7690                  (./engine/graphics):00262                 DRS_NextObjectB1        
7690 AE8856           (./engine/graphics):00263 [6]     5036            ldx   rsv_priority_next_obj_1,x
7693 1026FF67         (./engine/graphics):00264 [5+?]   5041            lbne  DRS_ProcessEachPriorityLevelB1   
7697 39               (./engine/graphics):00265 [5]     5046            rts
                      (./engine/graphics):00266                 
                      (./engine/graphics):00267                         ifndef DecMapAlpha
7698                  (./engine/graphics):00268                 DecMapAlpha
                      (./engine/graphics):00269                         rts
                      (./engine/graphics):00270                         endc
                      (./engine/graphics):00271                 
                      (./engine/graphics):00272                         ifndef zx0_6809_mega_wrap
7698                  (./engine/graphics):00273                 zx0_6809_mega_wrap
7698 39               (./engine/graphics):00274 [5]     5051            rts
                      (./engine/graphics):00275                         endc
                      (./engine/graphics):00007                         INCLUDE "./engine/graphics/sprite/background-erase-mode/BgBufferAlloc.asm"      
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * BgBufferAlloc
                      (./engine/graphics):00003                 * -------------
                      (./engine/graphics):00004                 * Subroutine to allocate memory into background buffer
                      (./engine/graphics):00005                 *
                      (./engine/graphics):00006                 * input  REG : [a] number of requested cells
                      (./engine/graphics):00007                 * output REG : [y] cell_end or 0000 if no more space
                      (./engine/graphics):00008                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00009                 
7699                  (./engine/graphics):00010                 BgBufferAlloc
7699 3414             (./engine/graphics):00011 [8]     5059            pshs  b,x
769B F678F0           (./engine/graphics):00012 [5]     5064            ldb   glb_Cur_Wrk_Screen_Id         ; read current screen buffer for write operations
769E 2609             (./engine/graphics):00013 [3]     5067            bne   BBA1                          ; branch if buffer 1 is current
                      (./engine/graphics):00014                         
76A0                  (./engine/graphics):00015                 BBA0        
76A0 8E6DE5           (./engine/graphics):00016 [3]     5070            ldx   #Lst_FreeCellFirstEntry_0     ; save previous cell.next_entry into x for future update
76A3 10BE6DE5         (./engine/graphics):00017 [7]     5077            ldy   Lst_FreeCellFirstEntry_0      ; load first cell for screen buffer 0
76A7 2007             (./engine/graphics):00018 [3]     5080            bra   BBA_Next
                      (./engine/graphics):00019                         
76A9                  (./engine/graphics):00020                 BBA1        
76A9 8E6FAD           (./engine/graphics):00021 [3]     5083            ldx   #Lst_FreeCellFirstEntry_1     ; save previous cell.next_entry into x for future update
76AC 10BE6FAD         (./engine/graphics):00022 [7]     5090            ldy   Lst_FreeCellFirstEntry_1      ; load first cell for screen buffer 1
                      (./engine/graphics):00023                         
76B0                  (./engine/graphics):00024                 BBA_Next
76B0 2740             (./engine/graphics):00025 [3]     5093            beq   BBA_rts                       ; loop thru all entries, branch if no more free space
76B2 A1A4             (./engine/graphics):00026 [4]     5097            cmpa  nb_cells,y                    ; compare current nb of free cells with requested
76B4 2709             (./engine/graphics):00027 [3]     5100            beq   BBA_FitCell                   ; branch if current free cells is the same size than requested
76B6 231D             (./engine/graphics):00028 [3]     5103            bls   BBA_DivideCell                ; branch if current free cells are greater than requested
76B8 3025             (./engine/graphics):00029 [5]     5108            leax  next_entry,y                  ; save previous cell.next_entry into x for future update        
76BA 10AE25           (./engine/graphics):00030 [7]     5115            ldy   next_entry,y                  ; move to next entry
76BD 20F1             (./engine/graphics):00031 [3]     5118            bra   BBA_Next
                      (./engine/graphics):00032                           
76BF                  (./engine/graphics):00033                 BBA_FitCell
76BF EC25             (./engine/graphics):00034 [6]     5124            ldd   next_entry,y
76C1 ED84             (./engine/graphics):00035 [5]     5129            std   ,x                            ; chain previous cell with next cell
76C3 EC23             (./engine/graphics):00036 [6]     5135            ldd   cell_end,y                    ; return cell_end
76C5 FD76F0           (./engine/graphics):00037 [6]     5141            std   cell_end_return+2
                      (./engine/graphics):00038                 
76C8 CC0000           (./engine/graphics):00039 [3]     5144            ldd   #0
76CB A7A4             (./engine/graphics):00040 [4]     5148            sta   nb_cells,y                    ; clean current cell
76CD ED21             (./engine/graphics):00041 [6]     5154            std   cell_start,y                  ;
76CF ED23             (./engine/graphics):00042 [6]     5160            std   cell_end,y                    ;
76D1 ED25             (./engine/graphics):00043 [6]     5166            std   next_entry,y                  ;
                      (./engine/graphics):00044                 
76D3 2019             (./engine/graphics):00045 [3]     5169            bra   cell_end_return
                      (./engine/graphics):00046                         
76D5                  (./engine/graphics):00047                 BBA_DivideCell
76D5 B776DB           (./engine/graphics):00048 [5]     5174            sta   BBA_dyn+1
76D8 E6A4             (./engine/graphics):00049 [4]     5178            ldb   nb_cells,y
76DA                  (./engine/graphics):00050                 BBA_dyn
76DA C000             (./engine/graphics):00051 [2]     5180            subb  #$00                          ; substract requested cells to nb_cells
76DC E7A4             (./engine/graphics):00052 [4]     5184            stb   nb_cells,y                    ; update nb_cells
                      (./engine/graphics):00053                         
76DE C640             (./engine/graphics):00054 [2]     5186            ldb   #cell_size
76E0 3D               (./engine/graphics):00055 [11]    5197            mul
                      (./engine/graphics):00056                         _negd
76E1 40               (            _negd):00001 [2]     5199            nega
76E2 50               (            _negd):00002 [2]     5201            negb
76E3 8200             (            _negd):00003 [2]     5203            sbca  #0
76E5 AE23             (./engine/graphics):00057 [6]     5209            ldx   cell_end,y
76E7 BF76F0           (./engine/graphics):00058 [6]     5215            stx   cell_end_return+2        
76EA 308B             (./engine/graphics):00059 [8]     5223            leax  d,x                           ; cell_end = cell_end - (number of requested cells * nb of bytes in a cell)
76EC AF23             (./engine/graphics):00060 [6]     5229            stx   cell_end,y                    ; update cell_end
76EE                  (./engine/graphics):00061                 cell_end_return        
76EE 108E0000         (./engine/graphics):00062 [4]     5233            ldy   #$0000
76F2                  (./engine/graphics):00063                 BBA_rts
76F2 3594             (./engine/graphics):00064 [10]    5243            puls  b,x,pc
                      (./engine/graphics):00008                         INCLUDE "./engine/graphics/sprite/background-erase-mode/DeleteObject.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * DeleteObject
                      (./engine/graphics):00003                 * ------------
                      (./engine/graphics):00004                 * Subroutine to delete an object.
                      (./engine/graphics):00005                 * If the object is rendered as a sprite it will be deleted by EraseSprites
                      (./engine/graphics):00006                 * routine
                      (./engine/graphics):00007                 *
                      (./engine/graphics):00008                 * DeleteObject
                      (./engine/graphics):00009                 * input REG : [u] object pointer (OST)
                      (./engine/graphics):00010                 *
                      (./engine/graphics):00011                 * DeleteObject_x
                      (./engine/graphics):00012                 * input REG : [x] object pointer (OST)
                      (./engine/graphics):00013                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00014                 
76F4                  (./engine/graphics):00015                 DeleteObject_x
76F4                  (./engine/graphics):00016                 DeleteObject2
76F4 3456             (./engine/graphics):00017 [11]    5254            pshs  d,x,u
76F6 3384             (./engine/graphics):00018 [4]     5258            leau  ,x   
76F8 200A             (./engine/graphics):00019 [3]     5261            bra   DOB_Start
76FA                  (./engine/graphics):00020                 DeleteObject_return
76FA 35D6             (./engine/graphics):00021 [13]    5274            puls  d,x,u,pc
                      (./engine/graphics):00022                         
76FC                  (./engine/graphics):00023                 DeleteObject
76FC 3456             (./engine/graphics):00024 [11]    5285            pshs  d,x,u
                      (./engine/graphics):00025                         
76FE A642             (./engine/graphics):00026 [5]     5290            lda   render_flags,u
7700 8420             (./engine/graphics):00027 [2]     5292            anda  #render_todelete_mask
7702 26F6             (./engine/graphics):00028 [3]     5295            bne   DeleteObject_return           ; branch if already registred for deletion        
                      (./engine/graphics):00029                         
7704                  (./engine/graphics):00030                 DOB_Start
7704 A6C852           (./engine/graphics):00031 [5]     5300            lda   rsv_prev_render_flags_0,u
7707 2A27             (./engine/graphics):00032 [3]     5303            bpl   DOB_RemoveFromDPSB0           ; branch if not onscreen on buffer 0
                      (./engine/graphics):00033                 
7709                  (./engine/graphics):00034                 DOB_ToDeleteFlag0
7709 A642             (./engine/graphics):00035 [5]     5308            lda   render_flags,u
770B 8A20             (./engine/graphics):00036 [2]     5310            ora   #render_todelete_mask
770D A742             (./engine/graphics):00037 [5]     5315            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./engine/graphics):00038                         
770F                  (./engine/graphics):00039                 DOB_Unset0        
770F BE69C7           (./engine/graphics):00040 [6]     5321            ldx   Lst_Priority_Unset_0          ; add object to unset list on buffer 0
7712 EF84             (./engine/graphics):00041 [5]     5326            stu   ,x
7714 3002             (./engine/graphics):00042 [5]     5331            leax  2,x
7716 BF69C7           (./engine/graphics):00043 [6]     5337            stx   Lst_Priority_Unset_0
                      (./engine/graphics):00044                         
7719                  (./engine/graphics):00045                 DOB_TestOnscreen1
7719 A6C866           (./engine/graphics):00046 [5]     5342            lda   rsv_prev_render_flags_1,u
771C 2A54             (./engine/graphics):00047 [3]     5345            bpl   DOB_RemoveFromDPSB1           ; branch if not onscreen on buffer 1
                      (./engine/graphics):00048                         
771E                  (./engine/graphics):00049                 DOB_ToDeleteFlag1
771E A642             (./engine/graphics):00050 [5]     5350            lda   render_flags,u
7720 8A20             (./engine/graphics):00051 [2]     5352            ora   #render_todelete_mask
7722 A742             (./engine/graphics):00052 [5]     5357            sta   render_flags,u                ; set todelete flag, object will be deleted after sprite erase
                      (./engine/graphics):00053                         
7724                  (./engine/graphics):00054                 DOB_Unset1
7724 BE6A09           (./engine/graphics):00055 [6]     5363            ldx   Lst_Priority_Unset_1          ; add object to unset list on buffer 1                       
7727 EF84             (./engine/graphics):00056 [5]     5368            stu   ,x
7729 3002             (./engine/graphics):00057 [5]     5373            leax  2,x
772B BF6A09           (./engine/graphics):00058 [6]     5379            stx   Lst_Priority_Unset_1
772E 35D6             (./engine/graphics):00059 [13]    5392            puls  d,x,u,pc               
                      (./engine/graphics):00060                 
7730                  (./engine/graphics):00061                 DOB_RemoveFromDPSB0
7730 ECC840           (./engine/graphics):00062 [6]     5398            ldd   rsv_priority_prev_obj_0,u     ; remove object from DSP on buffer 0
7733 2611             (./engine/graphics):00063 [3]     5401            bne   DOB_ChainPrevB0
                      (./engine/graphics):00064                         
7735 A6C83F           (./engine/graphics):00065 [5]     5406            lda   rsv_priority_0,u
7738 48               (./engine/graphics):00066 [2]     5408            lsla
7739 108E69A3         (./engine/graphics):00067 [4]     5412            ldy   #Tbl_Priority_First_Entry_0
773D 31A6             (./engine/graphics):00068 [5]     5417            leay  a,y
773F ECC842           (./engine/graphics):00069 [6]     5423            ldd   rsv_priority_next_obj_0,u
7742 EDA4             (./engine/graphics):00070 [5]     5428            std   ,y
7744 200A             (./engine/graphics):00071 [3]     5431            bra   DOB_CheckPrioNextB0
                      (./engine/graphics):00072                                 
7746                  (./engine/graphics):00073                 DOB_ChainPrevB0
7746 ECC842           (./engine/graphics):00074 [6]     5437            ldd   rsv_priority_next_obj_0,u
7749 10AEC840         (./engine/graphics):00075 [7]     5444            ldy   rsv_priority_prev_obj_0,u        
774D EDA842           (./engine/graphics):00076 [6]     5450            std   rsv_priority_next_obj_0,y        
                      (./engine/graphics):00077                 
7750                  (./engine/graphics):00078                 DOB_CheckPrioNextB0       
7750 ECC842           (./engine/graphics):00079 [6]     5456            ldd   rsv_priority_next_obj_0,u
7753 2611             (./engine/graphics):00080 [3]     5459            bne   DOB_ChainNextB0
                      (./engine/graphics):00081                 
7755 A6C83F           (./engine/graphics):00082 [5]     5464            lda   rsv_priority_0,u
7758 48               (./engine/graphics):00083 [2]     5466            lsla
7759 108E69B5         (./engine/graphics):00084 [4]     5470            ldy   #Tbl_Priority_Last_Entry_0
775D 31A6             (./engine/graphics):00085 [5]     5475            leay  a,y
775F ECC840           (./engine/graphics):00086 [6]     5481            ldd   rsv_priority_prev_obj_0,u
7762 EDA4             (./engine/graphics):00087 [5]     5486            std   ,y
7764 20B3             (./engine/graphics):00088 [3]     5489            bra   DOB_TestOnscreen1
                      (./engine/graphics):00089                                 
7766                  (./engine/graphics):00090                 DOB_ChainNextB0
7766 ECC840           (./engine/graphics):00091 [6]     5495            ldd   rsv_priority_prev_obj_0,u
7769 10AEC842         (./engine/graphics):00092 [7]     5502            ldy   rsv_priority_next_obj_0,u        
776D EDA840           (./engine/graphics):00093 [6]     5508            std   rsv_priority_prev_obj_0,y
7770 20A7             (./engine/graphics):00094 [3]     5511            bra   DOB_TestOnscreen1        
                      (./engine/graphics):00095                 
7772                  (./engine/graphics):00096                 DOB_RemoveFromDPSB1
7772 ECC854           (./engine/graphics):00097 [6]     5517            ldd   rsv_priority_prev_obj_1,u
7775 2611             (./engine/graphics):00098 [3]     5520            bne   DOB_ChainPrevB1
                      (./engine/graphics):00099                         
7777 A6C853           (./engine/graphics):00100 [5]     5525            lda   rsv_priority_1,u
777A 48               (./engine/graphics):00101 [2]     5527            lsla
777B 108E69E5         (./engine/graphics):00102 [4]     5531            ldy   #Tbl_Priority_First_Entry_1
777F 31A6             (./engine/graphics):00103 [5]     5536            leay  a,y
7781 ECC856           (./engine/graphics):00104 [6]     5542            ldd   rsv_priority_next_obj_1,u
7784 EDA4             (./engine/graphics):00105 [5]     5547            std   ,y
7786 200A             (./engine/graphics):00106 [3]     5550            bra   DOB_CheckPrioNextB1
                      (./engine/graphics):00107                                 
7788                  (./engine/graphics):00108                 DOB_ChainPrevB1
7788 ECC856           (./engine/graphics):00109 [6]     5556            ldd   rsv_priority_next_obj_1,u
778B 10AEC854         (./engine/graphics):00110 [7]     5563            ldy   rsv_priority_prev_obj_1,u        
778F EDA856           (./engine/graphics):00111 [6]     5569            std   rsv_priority_next_obj_1,y        
                      (./engine/graphics):00112                 
7792                  (./engine/graphics):00113                 DOB_CheckPrioNextB1       
7792 ECC856           (./engine/graphics):00114 [6]     5575            ldd   rsv_priority_next_obj_1,u
7795 2619             (./engine/graphics):00115 [3]     5578            bne   DOB_ChainNextB1
                      (./engine/graphics):00116                 
7797 A6C853           (./engine/graphics):00117 [5]     5583            lda   rsv_priority_1,u
779A 48               (./engine/graphics):00118 [2]     5585            lsla
779B 108E69F7         (./engine/graphics):00119 [4]     5589            ldy   #Tbl_Priority_Last_Entry_1
779F 31A6             (./engine/graphics):00120 [5]     5594            leay  a,y
77A1 ECC854           (./engine/graphics):00121 [6]     5600            ldd   rsv_priority_prev_obj_1,u
77A4 EDA4             (./engine/graphics):00122 [5]     5605            std   ,y
77A6 A6C852           (./engine/graphics):00123 [5]     5610            lda   rsv_prev_render_flags_0,u
77A9 2B03             (./engine/graphics):00124 [3]     5613            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
77AB BD77C4           (./engine/graphics):00125 [8]     5621            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
77AE                  (./engine/graphics):00126                 DOB_rts                                
77AE 35D6             (./engine/graphics):00127 [13]    5634            puls  d,x,u,pc        
                      (./engine/graphics):00128                                 
77B0                  (./engine/graphics):00129                 DOB_ChainNextB1
77B0 ECC854           (./engine/graphics):00130 [6]     5640            ldd   rsv_priority_prev_obj_1,u
77B3 10AEC856         (./engine/graphics):00131 [7]     5647            ldy   rsv_priority_next_obj_1,u        
77B7 EDA854           (./engine/graphics):00132 [6]     5653            std   rsv_priority_prev_obj_1,y
77BA A6C852           (./engine/graphics):00133 [5]     5658            lda   rsv_prev_render_flags_0,u
77BD 2BEF             (./engine/graphics):00134 [3]     5661            bmi   DOB_rts                       ; branch if onscreen on buffer 0 (do not erase object)        
77BF BD77C4           (./engine/graphics):00135 [8]     5669            jsr   ClearObj                      ; this object is not onscreen anymore, clear this object now
77C2 35D6             (./engine/graphics):00136 [13]    5682            puls  d,x,u,pc        
                      (./engine/graphics):00137                 
                      (./engine/graphics):00138                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00139                                                                       *; Subroutine to delete an object
                      (./engine/graphics):00140                                                                       *; ---------------------------------------------------------------------------
                      (./engine/graphics):00141                                                                       *
                      (./engine/graphics):00142                                                                       *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00143                                                                       *
                      (./engine/graphics):00144                                                                       *; freeObject:
                      (./engine/graphics):00145                                                                       *DeleteObject:
                      (./engine/graphics):00146                                                                       *        movea.l a0,a1
                      (./engine/graphics):00147                                                                       *
                      (./engine/graphics):00148                                                                       *; sub_164E8:
                      (./engine/graphics):00149                                                                       *DeleteObject2:
                      (./engine/graphics):00150                                                                       *        moveq   #0,d1
                      (./engine/graphics):00151                                                                       *
                      (./engine/graphics):00152                                                                       *        moveq   #bytesToLcnt(next_object),d0 ; we want to clear up to the next object
                      (./engine/graphics):00153                                                                       *        ; delete the object by setting all of its bytes to 0
                      (./engine/graphics):00154                                                                       *-       move.l  d1,(a1)+
                      (./engine/graphics):00155                                                                       *        dbf     d0,-
                      (./engine/graphics):00156                                                                       *    if object_size&3
                      (./engine/graphics):00157                                                                       *        move.w  d1,(a1)+
                      (./engine/graphics):00158                                                                       *    endif
                      (./engine/graphics):00159                                                                       *
                      (./engine/graphics):00160                                                                       *        rts
                      (./engine/graphics):00161                                                                       *; End of function DeleteObject2                                         
                      (C:\Users\bhrou\gi):00121                         
                      (C:\Users\bhrou\gi):00122                         ; basic object management
                      (C:\Users\bhrou\gi):00123                         INCLUDE "./engine/object-management/ClearObj.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * ClearObj
                      (./engine/object-m):00003                 * --------
                      (./engine/object-m):00004                 * Subroutine to clear an object data in OST
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * input REG : [u] pointer on objet (OST)
                      (./engine/object-m):00007                 * clear REG : none
                      (./engine/object-m):00008                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00009                 
77C4                  (./engine/object-m):00010                 ClearObj 
77C4 3436             (./engine/object-m):00011 [11]    5693            pshs  d,x,y
                      (./engine/object-m):00012                 
77C6 33C867           (./engine/object-m):00013 [5]     5698            leau  object_size,u ; move to end of data object structure
77C9 CC0000           (./engine/object-m):00014 [3]     5701            ldd   #$0000        ; init regs to zero
77CC 8E0000           (./engine/object-m):00015 [3]     5704            ldx   #$0000
77CF 3184             (./engine/object-m):00016 [4]     5708            leay  ,x
                      (./engine/object-m):00017                 
77D1 3636363636363636 (./engine/object-m):00018                         fill $36,(object_size/6)*2 ; generate object_size/6 assembly instructions $3636 (pshu  d,x,y) 
     3636363636363636
     3636363636363636
     3636363636363636
     3636
                      (./engine/object-m):00019                 
                      (./engine/object-m):00020                         IFEQ object_size%6-5
                      (./engine/object-m):00021                         pshu  a,x,y
                      (./engine/object-m):00022                         ENDC
                      (./engine/object-m):00023                 
                      (./engine/object-m):00024                         IFEQ object_size%6-4
                      (./engine/object-m):00025                         pshu  d,x
                      (./engine/object-m):00026                         ENDC
                      (./engine/object-m):00027                 
                      (./engine/object-m):00028                         IFEQ object_size%6-3
                      (./engine/object-m):00029                         pshu  a,x
                      (./engine/object-m):00030                         ENDC
                      (./engine/object-m):00031                 
                      (./engine/object-m):00032                         IFEQ object_size%6-2
                      (./engine/object-m):00033                         pshu  d
                      (./engine/object-m):00034                         ENDC
                      (./engine/object-m):00035                 
                      (./engine/object-m):00036                         IFEQ object_size%6-1
77F3 3602             (./engine/object-m):00037 [6]     5714            pshu  a
                      (./engine/object-m):00038                         ENDC
                      (./engine/object-m):00039                 
77F5 35B6             (./engine/object-m):00040 [13]    5727            puls  d,x,y,pc
                      (C:\Users\bhrou\gi):00124                         INCLUDE "./engine/object-management/RunObjects.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * RunObjects
                      (./engine/object-m):00003                 * ------------
                      (./engine/object-m):00004                 * Subroutine to run objects code
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * input REG : none
                      (./engine/object-m):00007                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00008                                                             *; -------------------------------------------------------------------------------
                      (./engine/object-m):00009                                                             *; This runs the code of all the objects that are in Object_RAM
                      (./engine/object-m):00010                                                             *; -------------------------------------------------------------------------------
                      (./engine/object-m):00011                                                             *
                      (./engine/object-m):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/object-m):00013                                                             *
                      (./engine/object-m):00014                                                             *; sub_15F9C: ObjectsLoad:
77F7                  (./engine/object-m):00015                 RunObjects                                  *RunObjects:
                      (./engine/object-m):00016                                                             *    tst.b   (Teleport_flag).w
                      (./engine/object-m):00017                                                             *    bne.s   RunObjects_End  ; rts
77F7 CE61DF           (./engine/object-m):00018 [3]     5730            ldu   #Object_RAM                   *    lea (Object_RAM).w,a0 ; a0=object
77FA 2017             (./engine/object-m):00019 [3]     5733            bra   am_RunNextObject
                      (./engine/object-m):00020                                                             *    moveq   #(Dynamic_Object_RAM_End-Object_RAM)/object_size-1,d7 ; run the first $80 objects out of levels
                      (./engine/object-m):00021                                                             *    moveq   #0,d0
                      (./engine/object-m):00022                                                             *    cmpi.b  #GameModeID_Demo,(Game_Mode).w  ; demo mode?
                      (./engine/object-m):00023                                                             *    beq.s   +   ; if in a level in a demo, branch
                      (./engine/object-m):00024                                                             *    cmpi.b  #GameModeID_Level,(Game_Mode).w ; regular level mode?
                      (./engine/object-m):00025                                                             *    bne.s   RunObject ; if not in a level, branch to RunObject
77FC                  (./engine/object-m):00026                 RunObjects_01                               *+
                      (./engine/object-m):00027                                                             *    move.w  #(Object_RAM_End-Object_RAM)/object_size-1,d7   ; run the first $90 objects in levels
                      (./engine/object-m):00028                                                             *    tst.w   (Two_player_mode).w
                      (./engine/object-m):00029                                                             *    bne.s   RunObject ; if in 2 player competition mode, branch to RunObject
                      (./engine/object-m):00030                                                             *
                      (./engine/object-m):00031                         ;tst   glb_MainCharacter_Is_Dead     *    cmpi.b  #6,(MainCharacter+routine).w
                      (./engine/object-m):00032                         ;bne   RunObjectsWhenPlayerIsDead    *    bhs.s   RunObjectsWhenPlayerIsDead ; if dead, branch
                      (./engine/object-m):00033                                                             *    ; continue straight to RunObject
                      (./engine/object-m):00034                                                             *; ---------------------------------------------------------------------------
                      (./engine/object-m):00035                                                             *
                      (./engine/object-m):00036                                                             *; -------------------------------------------------------------------------------
                      (./engine/object-m):00037                                                             *; This is THE place where each individual object's code gets called from
                      (./engine/object-m):00038                                                             *; -------------------------------------------------------------------------------
                      (./engine/object-m):00039                                                             *
                      (./engine/object-m):00040                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/object-m):00041                                                             *
                      (./engine/object-m):00042                                                             *; sub_15FCC:
77FC                  (./engine/object-m):00043                 RunObject                                   *RunObject:
77FC E6C4             (./engine/object-m):00044 [4]     5737            ldb   id,u                          *    move.b  id(a0),d0   ; get the object's ID
77FE 2710             (./engine/object-m):00045 [3]     5740            beq   RunNextObject                 *    beq.s   RunNextObject ; if it's obj00, skip it
                      (./engine/object-m):00046                 
7800 8E8DAA           (./engine/object-m):00047 [3]     5743            ldx   #Obj_Index_Page
7803 3A               (./engine/object-m):00048 [3]     5746            abx
7804 A684             (./engine/object-m):00049 [4]     5750            lda   ,x                            ; page memoire
                      (./engine/object-m):00050                         _SetCartPageA                       ; selection de la page en RAM (0000-3FFF)
                      (    _SetCartPageA):00001                  IFDEF T2
7806 BD78F1           (    _SetCartPageA):00002 [8]     5758            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7809 58               (./engine/object-m):00051 [2]     5760            aslb                                *    add.w   d0,d0
                      (./engine/object-m):00052                                                             *    add.w   d0,d0   ; d0 = object ID * 4
780A 8E8DB3           (./engine/object-m):00053 [3]     5763            ldx   #Obj_Index_Address            *    movea.l Obj_Index-4(pc,d0.w),a1 ; load the address of the object's code
780D 3A               (./engine/object-m):00054 [3]     5766            abx
780E AD94             (./engine/object-m):00055 [10]    5776            jsr   [,x]                          *    jsr (a1)    ; dynamic call! to one of the the entries in Obj_Index
                      (./engine/object-m):00056                                                             *    moveq   #0,d0
                      (./engine/object-m):00057                                                             *
                      (./engine/object-m):00058                                                             *; loc_15FDC:
7810                  (./engine/object-m):00059                 RunNextObject                               *RunNextObject:
7810 33C867           (./engine/object-m):00060 [5]     5781            leau  next_object,u                 *    lea next_object(a0),a0 ; load 0bj address
7813                  (./engine/object-m):00061                 am_RunNextObject                            
7813 118368B6         (./engine/object-m):00062 [5]     5786            cmpu  #Object_RAM_End               *    dbf d7,RunObject
7817 26E3             (./engine/object-m):00063 [3]     5789            bne   RunObject                     *; return_15FE4:
7819                  (./engine/object-m):00064                 RunObjects_End                              *RunObjects_End:
7819 39               (./engine/object-m):00065 [5]     5794            rts                                 *    rts
                      (./engine/object-m):00066                                                             *
                      (./engine/object-m):00067                                                             *; ---------------------------------------------------------------------------
                      (./engine/object-m):00068                                                             *; this skips certain objects to make enemies and things pause when Sonic dies
                      (./engine/object-m):00069                                                             *; loc_15FE6:
781A                  (./engine/object-m):00070                 RunObjectsWhenPlayerIsDead                  *RunObjectsWhenPlayerIsDead:
                      (./engine/object-m):00071                         ;ldu   #Reserved_Object_RAM
                      (./engine/object-m):00072                         ;ldx   #Reserved_Object_RAM_End
                      (./engine/object-m):00073                         ;stx   am_RunNextObject+2            *    moveq   #(Reserved_Object_RAM_End-Reserved_Object_RAM)/object_size-1,d7
                      (./engine/object-m):00074                         ;bsr   RunObject                     *    bsr.s   RunObject   ; run the first $10 objects normally
                      (./engine/object-m):00075                                                             *    moveq   #(Dynamic_Object_RAM_End-Dynamic_Object_RAM)/object_size-1,d7
                      (./engine/object-m):00076                                                             *    bsr.s   RunObjectDisplayOnly ; all objects in this range are paused      
                      (./engine/object-m):00077                         ;ldu   #LevelOnly_Object_RAM 
                      (./engine/object-m):00078                         ;ldx   #LevelOnly_Object_RAM_End
                      (./engine/object-m):00079                         ;stx   am_RunNextObject+2            *    moveq   #(LevelOnly_Object_RAM_End-LevelOnly_Object_RAM)/object_size-1,d7
                      (./engine/object-m):00080                         ;bsr   RunObject                     *    bra.s   RunObject   ; run the last $10 objects normally
                      (./engine/object-m):00081                                                             *
                      (./engine/object-m):00082                         ;ldx   #Object_RAM_End               * repositionne la fin du RunObject avec sa valeur par d�faut
                      (./engine/object-m):00083                         ;stx   am_RunNextObject+2
                      (./engine/object-m):00084                         ;rts            
                      (./engine/object-m):00085                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/object-m):00086                                                             *
                      (./engine/object-m):00087                                                             *; sub_15FF2:
                      (./engine/object-m):00088                                                             *RunObjectDisplayOnly:
                      (./engine/object-m):00089                                                             *    moveq   #0,d0
                      (./engine/object-m):00090                                                             *    move.b  id(a0),d0   ; get the object's ID
                      (./engine/object-m):00091                                                             *    beq.s   +   ; if it's obj00, skip it
                      (./engine/object-m):00092                                                             *    tst.b   render_flags(a0)    ; should we render it?
                      (./engine/object-m):00093                                                             *    bpl.s   +           ; if not, skip it
                      (./engine/object-m):00094                                                             *    bsr.w   DisplaySprite
                      (./engine/object-m):00095                                                             *+
                      (./engine/object-m):00096                                                             *    lea next_object(a0),a0 ; load 0bj address
                      (./engine/object-m):00097                                                             *    dbf d7,RunObjectDisplayOnly
                      (./engine/object-m):00098                                                             
                      (./engine/object-m):00099                                                             *    rts
                      (./engine/object-m):00100                                                             *; End of function RunObjectDisplayOnly
                      (./engine/object-m):00101                                                             *
                      (./engine/object-m):00102                                                             *; ===========================================================================
                      (C:\Users\bhrou\gi):00125                         INCLUDE "./engine/object-management/SingleObjLoad.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * Single object loading subroutine
                      (./engine/object-m):00003                 * Find an empty object array, return 0 if memory is full
                      (./engine/object-m):00004                 *
                      (./engine/object-m):00005                 * input  REG : [u] pointeur sur l'objet courant  
                      (./engine/object-m):00006                 * output REG : [x] pointeur sur l'objet libre   
                      (./engine/object-m):00007                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00008                 
                      (./engine/object-m):00009                                                        *; ---------------------------------------------------------------------------
                      (./engine/object-m):00010                                                        *; Single object loading subroutine
                      (./engine/object-m):00011                                                        *; Find an empty object array
                      (./engine/object-m):00012                                                        *; ---------------------------------------------------------------------------
                      (./engine/object-m):00013                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/object-m):00014                                                        *
                      (./engine/object-m):00015                                                        *; loc_17FDA: ; allocObject:
781A                  (./engine/object-m):00016                 SingleObjLoad                          *SingleObjLoad:
781A 8E64B0           (./engine/object-m):00017 [3]     5797            ldx   #Dynamic_Object_RAM      *    lea (Dynamic_Object_RAM).w,a1 ; a1=object
781D 200A             (./engine/object-m):00018 [3]     5800            bra   SOL_loop                 *    move.w  #(Dynamic_Object_RAM_End-Dynamic_Object_RAM)/object_size-1,d0 ; search to end of table
                      (./engine/object-m):00019                                                        *    tst.w   (Two_player_mode).w
                      (./engine/object-m):00020                                                        *    beq.s   +
                      (./engine/object-m):00021                                                        *    move.w  #(Dynamic_Object_RAM_2P_End-Dynamic_Object_RAM)/object_size-1,d0 ; search to $BF00 exclusive
                      (./engine/object-m):00022                                                        *
                      (./engine/object-m):00023                                                        */
                      (./engine/object-m):00024                                                        *    tst.b   id(a1)  ; is object RAM slot empty?
                      (./engine/object-m):00025                                                        *    beq.s   return_17FF8    ; if yes, branch
                      (./engine/object-m):00026                                                        *    lea next_object(a1),a1 ; load obj address ; goto next object RAM slot
                      (./engine/object-m):00027                                                        *    dbf d0,-    ; repeat until end
                      (./engine/object-m):00028                                                        *
                      (./engine/object-m):00029                                                        *return_17FF8:
                      (./engine/object-m):00030                                                        *    rts
                      (./engine/object-m):00031                                                        *; ===========================================================================
                      (./engine/object-m):00032                                                        *; ---------------------------------------------------------------------------
                      (./engine/object-m):00033                                                        *; Single object loading subroutine
                      (./engine/object-m):00034                                                        *; Find an empty object array AFTER the current one in the table
                      (./engine/object-m):00035                                                        *; ---------------------------------------------------------------------------
                      (./engine/object-m):00036                                                        *
                      (./engine/object-m):00037                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/object-m):00038                                                        *
                      (./engine/object-m):00039                                                        *; loc_17FFA: ; allocObjectAfterCurrent:
781F                  (./engine/object-m):00040                 SingleObjLoad2                         *SingleObjLoad2:
781F 1F31             (./engine/object-m):00041 [6]     5806            tfr   u,x                      *    movea.l a0,a1
7821 308867           (./engine/object-m):00042 [5]     5811            leax  next_object,x            *    move.w  #Dynamic_Object_RAM_End,d0  ; $D000
7824 8C68B6           (./engine/object-m):00043 [4]     5815            cmpx  #Dynamic_Object_RAM_End  *    sub.w   a0,d0   ; subtract current object location
7827 270F             (./engine/object-m):00044 [3]     5818            beq   SOL_rts                  *    if object_size=$40
                      (./engine/object-m):00045                                                        *    lsr.w   #6,d0   ; divide by $40
                      (./engine/object-m):00046                                                        *    subq.w  #1,d0   ; keep from going over the object zone
                      (./engine/object-m):00047                                                        *    bcs.s   return_18014
                      (./engine/object-m):00048                                                        *    else
                      (./engine/object-m):00049                                                        *    lsr.w   #6,d0           ; divide by $40
                      (./engine/object-m):00050                                                        *    move.b  +(pc,d0.w),d0       ; load the right number of objects from table
                      (./engine/object-m):00051                                                        *    bmi.s   return_18014        ; if negative, we have failed!
                      (./engine/object-m):00052                                                        *    endif
                      (./engine/object-m):00053                                                        *
7829                  (./engine/object-m):00054                 SOL_loop                               *-
7829 6D84             (./engine/object-m):00055 [6]     5824            tst   ,x                       *    tst.b   id(a1)  ; is object RAM slot empty?
782B 270B             (./engine/object-m):00056 [3]     5827            beq   SOL_rts                  *    beq.s   return_18014    ; if yes, branch
782D 308867           (./engine/object-m):00057 [5]     5832            leax  next_object,x            *    lea next_object(a1),a1 ; load obj address ; goto next object RAM slot
7830 8C68B6           (./engine/object-m):00058 [4]     5836            cmpx  #Dynamic_Object_RAM_End
7833 26F4             (./engine/object-m):00059 [3]     5839            bne   SOL_loop                 *    dbf d0,-    ; repeat until end
7835 8E0000           (./engine/object-m):00060 [3]     5842            ldx   #0
                      (./engine/object-m):00061                                                        *
7838                  (./engine/object-m):00062                 SOL_rts                                *return_18014:
7838 39               (./engine/object-m):00063 [5]     5847            rts                            *    rts
                      (./engine/object-m):00064                                                        *
                      (./engine/object-m):00065                                                        *    if object_size<>$40
                      (./engine/object-m):00066                                                        *+   dc.b -1
                      (./engine/object-m):00067                                                        *.a :=   1       ; .a is the object slot we are currently processing
                      (./engine/object-m):00068                                                        *.b :=   1       ; .b is used to calculate when there will be a conversion error due to object_size being > $40
                      (./engine/object-m):00069                                                        *
                      (./engine/object-m):00070                                                        *    rept (LevelOnly_Object_RAM-Reserved_Object_RAM_End)/object_size-1
                      (./engine/object-m):00071                                                        *        if (object_size * (.a-1)) / $40 > .b+1  ; this line checks, if there would be a conversion error
                      (./engine/object-m):00072                                                        *            dc.b .a-1, .a-1         ; and if is, it generates 2 entries to correct for the error
                      (./engine/object-m):00073                                                        *        else
                      (./engine/object-m):00074                                                        *            dc.b .a-1
                      (./engine/object-m):00075                                                        *        endif
                      (./engine/object-m):00076                                                        *
                      (./engine/object-m):00077                                                        *.b :=       (object_size * (.a-1)) / $40        ; this line adjusts .b based on the iteration count to check
                      (./engine/object-m):00078                                                        *.a :=       .a+1                    ; run interation counter
                      (./engine/object-m):00079                                                        *    endm
                      (./engine/object-m):00080                                                        *    even
                      (./engine/object-m):00081                                                        *    endif
                      (./engine/object-m):00082                                                        *; ===========================================================================
                      (./engine/object-m):00083                                                        *; ---------------------------------------------------------------------------
                      (./engine/object-m):00084                                                        *; Single object loading subroutine
                      (./engine/object-m):00085                                                        *; Find an empty object at or within < 12 slots after a3
                      (./engine/object-m):00086                                                        *; ---------------------------------------------------------------------------
                      (./engine/object-m):00087                                                        *
                      (./engine/object-m):00088                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/object-m):00089                                                        *
                      (./engine/object-m):00090                                                        *; loc_18016:
                      (./engine/object-m):00091                                                        *SingleObjLoad3:
                      (./engine/object-m):00092                                                        *    movea.l a3,a1
                      (./engine/object-m):00093                                                        *    move.w  #$B,d0
                      (./engine/object-m):00094                                                        *
                      (./engine/object-m):00095                                                        *-
                      (./engine/object-m):00096                                                        *    tst.b   id(a1)  ; is object RAM slot empty?
                      (./engine/object-m):00097                                                        *    beq.s   return_18028    ; if yes, branch
                      (./engine/object-m):00098                                                        *    lea next_object(a1),a1 ; load obj address ; goto next object RAM slot
                      (./engine/object-m):00099                                                        *    dbf d0,-    ; repeat until end
                      (./engine/object-m):00100                                                        *
                      (./engine/object-m):00101                                                        *return_18028:
                      (./engine/object-m):00102                                                        *    rts
                      (./engine/object-m):00103                                                        *; ===========================================================================
                      (C:\Users\bhrou\gi):00126                 
                      (C:\Users\bhrou\gi):00127                         ; utilities
                      (C:\Users\bhrou\gi):00128                         INCLUDE "./engine/InitGlobals.asm"
                      (./engine/InitGlob):00001                 
7839                  (./engine/InitGlob):00002                 InitGlobals
7839 CC0000           (./engine/InitGlob):00003 [3]     5850            ldd   #0
                      (./engine/InitGlob):00004                 
                      (./engine/InitGlob):00005                         ; clear direct_page data
783C 8E9F00           (./engine/InitGlob):00006 [3]     5853            ldx   #dp
783F 8600             (./engine/InitGlob):00007 [2]     5855            lda   #0
7841 A780             (./engine/InitGlob):00008 [6]     5861    !       sta   ,x+
7843 8CA000           (./engine/InitGlob):00009 [4]     5865            cmpx  #dp+256
7846 26F9             (./engine/InitGlob):00010 [3]     5868            bne   <
                      (./engine/InitGlob):00011                 
7848 8630             (./engine/InitGlob):00012 [2]     5870            lda   #screen_left
784A B79FE8           (./engine/InitGlob):00013 [5]     5875            sta   glb_camera_x_offset
784D 861C             (./engine/InitGlob):00014 [2]     5877            lda   #screen_top
784F B79FE7           (./engine/InitGlob):00015 [5]     5882            sta   glb_camera_y_offset
                      (./engine/InitGlob):00016                 
7852 8601             (./engine/InitGlob):00017 [2]     5884            lda   #1
7854 B79FE4           (./engine/InitGlob):00018 [5]     5889            sta   glb_alphaTiles
7857 39               (./engine/InitGlob):00019 [5]     5894            rts
                      (C:\Users\bhrou\gi):00129                         INCLUDE "./engine/ram/ClearDataMemory.asm"
                      (./engine/ram/Clea):00001                 ********************************************************************************
                      (./engine/ram/Clea):00002                 * Clear memory in data area (16Ko)
                      (./engine/ram/Clea):00003                 * [X] : word that will be copied in the whole page
                      (./engine/ram/Clea):00004                 ********************************************************************************
                      (./engine/ram/Clea):00005                 
7858                  (./engine/ram/Clea):00006                 ClearDataMem 
7858 3448             (./engine/ram/Clea):00007 [8]     5902            pshs  u,dp
785A 10FF7888         (./engine/ram/Clea):00008 [7]     5909            sts   ClearDataMem_3+2
785E 10CEE000         (./engine/ram/Clea):00009 [4]     5913            lds   #$E000
7862 3384             (./engine/ram/Clea):00010 [4]     5917            leau  ,x
7864 3184             (./engine/ram/Clea):00011 [4]     5921            leay  ,x
7866 1F10             (./engine/ram/Clea):00012 [6]     5927            tfr   x,d
7868 1F8B             (./engine/ram/Clea):00013 [6]     5933            tfr   a,dp
786A                  (./engine/ram/Clea):00014                 ClearDataMem_2
786A 347E             (./engine/ram/Clea):00015 [14]    5947            pshs  u,y,x,dp,b,a
786C 347E             (./engine/ram/Clea):00016 [14]    5961            pshs  u,y,x,dp,b,a
786E 347E             (./engine/ram/Clea):00017 [14]    5975            pshs  u,y,x,dp,b,a
7870 347E             (./engine/ram/Clea):00018 [14]    5989            pshs  u,y,x,dp,b,a
7872 347E             (./engine/ram/Clea):00019 [14]    6003            pshs  u,y,x,dp,b,a
7874 347E             (./engine/ram/Clea):00020 [14]    6017            pshs  u,y,x,dp,b,a
7876 347E             (./engine/ram/Clea):00021 [14]    6031            pshs  u,y,x,dp,b,a
7878 347E             (./engine/ram/Clea):00022 [14]    6045            pshs  u,y,x,dp,b,a
787A 347E             (./engine/ram/Clea):00023 [14]    6059            pshs  u,y,x,dp,b,a
787C 3478             (./engine/ram/Clea):00024 [12]    6071            pshs  u,y,x,dp
787E 118CA010         (./engine/ram/Clea):00025 [5]     6076            cmps  #$A010                        
7882 26E6             (./engine/ram/Clea):00026 [3]     6079            bne   ClearDataMem_2
7884 33E4             (./engine/ram/Clea):00027 [4]     6083            leau  ,s        
7886                  (./engine/ram/Clea):00028                 ClearDataMem_3        
7886 10CE0000         (./engine/ram/Clea):00029 [4]     6087            lds   #$0000        ; start of memory should not be written with S as an index because of IRQ        
788A 3636             (./engine/ram/Clea):00030 [11]    6098            pshu  d,x,y         ; saving 12 bytes + (2 bytes * _sr calls) inside IRQ routine
788C 3636             (./engine/ram/Clea):00031 [11]    6109            pshu  d,x,y         ; DEPENDENCY on nb of _sr calls inside IRQ routine (here 16 bytes of margin)
788E 3616             (./engine/ram/Clea):00032 [9]     6118            pshu  d,x
7890 35C8             (./engine/ram/Clea):00033 [10]    6128            puls  dp,u,pc
                      (C:\Users\bhrou\gi):00130                         INCLUDE "./engine/graphics/vbl/WaitVBL.asm"
                      (./engine/graphics):00001                 ********************************************************************************
                      (./engine/graphics):00002                 * Attente VBL
                      (./engine/graphics):00003                 * Alternance de la page 2 et 3 entre affichage et espace cartouche
                      (./engine/graphics):00004                 * Alternance de la RAMA et RAM B dans l'espace ecran
                      (./engine/graphics):00005                 * ------------------------------------------------------------------------------
                      (./engine/graphics):00006                 *
                      (./engine/graphics):00007                 * Page Affichee par l'automate Video
                      (./engine/graphics):00008                 * ----------------------------------
                      (./engine/graphics):00009                 *   $E7DD determine la page affichee a l'ecran
                      (./engine/graphics):00010                 *   bit7=0 bit6=0 bit5=0 bit4=0 (#$0_) : page 0
                      (./engine/graphics):00011                 *   bit7=0 bit6=1 bit5=0 bit4=0 (#$4_) : page 1
                      (./engine/graphics):00012                 *   bit7=1 bit6=0 bit5=0 bit4=0 (#$8_) : page 2
                      (./engine/graphics):00013                 *   bit7=1 bit6=1 bit5=0 bit4=0 (#$C_) : page 3
                      (./engine/graphics):00014                 *   bit3 bit2 bit1 bit0  (#$_0 a #$_F) : couleur du cadre
                      (./engine/graphics):00015                 *   Remarque : bit5 et bit4 utilisable uniquement en mode MO
                      (./engine/graphics):00016                 *
                      (./engine/graphics):00017                 * Page en espace cartouche
                      (./engine/graphics):00018                 * ------------------------
                      (./engine/graphics):00019                 *   $E7E6 determine la page visible dans l'espace cartouche (0000 a 3FFF)
                      (./engine/graphics):00020                 *   bit7 toujours a 0
                      (./engine/graphics):00021                 *   bit6=1 : ecriture autorisee
                      (./engine/graphics):00022                 *   bit5=1 : espace cartouche recouvert par de la RAM
                      (./engine/graphics):00023                 *   bit4=0 : CAS1N valide : banques 0-15 / 1 = CAS2N valide : banques 16-31
                      (./engine/graphics):00024                 *   bit5=1 bit4=0 bit3=0 bit2=0 bit1=0 bit0=0 (#$60) : page 0
                      (./engine/graphics):00025                 *   ...
                      (./engine/graphics):00026                 *   bit5=1 bit4=0 bit3=1 bit2=1 bit1=1 bit0=1 (#$6F) : page 15
                      (./engine/graphics):00027                 *   bit5=1 bit4=1 bit3=0 bit2=0 bit1=0 bit0=0 (#$70) : page 16
                      (./engine/graphics):00028                 *   ...
                      (./engine/graphics):00029                 *   bit5=1 bit4=1 bit3=1 bit2=1 bit1=1 bit0=1 (#$7F) : page 31
                      (./engine/graphics):00030                 *
                      (./engine/graphics):00031                 * Demi-Page 0 en espace ecran (4000 a 5FFF)
                      (./engine/graphics):00032                 * -----------------------------------------
                      (./engine/graphics):00033                 *   $E7C3 determine la demi-page de la page 0 visible dans l'espace ecran
                      (./engine/graphics):00034                 *   bit0=0 : 8Ko RAMA
                      (./engine/graphics):00035                 *   bit0=1 : 8ko RAMB
                      (./engine/graphics):00036                 *
                      (./engine/graphics):00037                 * Page en espace donnees
                      (./engine/graphics):00038                 * ----------------------
                      (./engine/graphics):00039                 * lda   #$04
                      (./engine/graphics):00040                 * sta   $E7E5                    * selection de la page 04 en RAM Donnees (A000-DFFF)
                      (./engine/graphics):00041                 *
                      (./engine/graphics):00042                 ********************************************************************************
7892                  (./engine/graphics):00043                 WaitVBL
7892 FC78E9           (./engine/graphics):00044 [6]     6134            ldd   Vint_runcount
7895 B378EB           (./engine/graphics):00045 [7]     6141            subd  Vint_Last_runcount
7898 C102             (./engine/graphics):00046 [2]     6143            cmpb  #2
789A 240A             (./engine/graphics):00047 [3]     6146            bhs   SwapVideoPage
789C                  (./engine/graphics):00048                 @a
789C 7DE7E7           (./engine/graphics):00049 [7]     6153            tst   $E7E7              * le faisceau n'est pas dans l'ecran
789F 2AFB             (./engine/graphics):00050 [3]     6156            bpl   @a                 * tant que le bit est a 0 on boucle
78A1                  (./engine/graphics):00051                 @b
78A1 7DE7E7           (./engine/graphics):00052 [7]     6163            tst   $E7E7              * le faisceau est dans l'ecran
78A4 2BFB             (./engine/graphics):00053 [3]     6166            bmi   @b                 * tant que le bit est a 1 on boucle
                      (./engine/graphics):00054                                         
78A6                  (./engine/graphics):00055                 SwapVideoPage
78A6 F678B4           (./engine/graphics):00056 [5]     6171            ldb   am_SwapVideoPage+1 * charge la valeur du ldb suivant am_SwapVideoPage
78A9 C440             (./engine/graphics):00057 [2]     6173            andb  #$40               * alterne bit6=0 et bit6=1 (suivant la valeur B $00 ou $FF)
78AB                  (./engine/graphics):00058                 glb_screen_border_color        
78AB CA80             (./engine/graphics):00059 [2]     6175            orb   #$80               * bit7=1, bit3 a bit0=couleur de cadre (ici 0)
78AD F7E7DD           (./engine/graphics):00060 [5]     6180            stb   $E7DD              * changement page (2 ou 3) affichee a l'ecran
78B0 7378B4           (./engine/graphics):00061 [7]     6187            com   am_SwapVideoPage+1 * alterne $00 et $FF sur le ldb suivant am_SwapVideoPage
78B3                  (./engine/graphics):00062                 am_SwapVideoPage
78B3 C600             (./engine/graphics):00063 [2]     6189            ldb   #$00
78B5 C401             (./engine/graphics):00064 [2]     6191            andb  #$01               * alterne bit0=0 et bit0=1 (suivant la valeur B $00 ou $FF)
78B7 F778F0           (./engine/graphics):00065 [5]     6196            stb   glb_Cur_Wrk_Screen_Id
78BA CA02             (./engine/graphics):00066 [2]     6198            orb   #$02               * bit1=1
78BC F7E7E5           (./engine/graphics):00067 [5]     6203            stb   $E7E5              * changement page (2 ou 3) visible dans l'espace donnees
78BF F6E7C3           (./engine/graphics):00068 [5]     6208            ldb   $E7C3              * charge l'identifiant de la demi-page 0 configuree en espace ecran
78C2 C801             (./engine/graphics):00069 [2]     6210            eorb  #$01               * alterne bit0 = 0 ou 1 changement demi-page de la page 0 visible dans l'espace ecran
78C4 F7E7C3           (./engine/graphics):00070 [5]     6215            stb   $E7C3
                      (./engine/graphics):00071                         
78C7 7C78E8           (./engine/graphics):00072 [7]     6222            inc   glb_Main_runcount+1
78CA 2603             (./engine/graphics):00073 [3]     6225            bne   @a
78CC 7C78E7           (./engine/graphics):00074 [7]     6232            inc   glb_Main_runcount  
78CF                  (./engine/graphics):00075                 @a
                      (./engine/graphics):00076                 
78CF FC78E9           (./engine/graphics):00077 [6]     6238            ldd   Vint_runcount            ; store in Vint_Main_runcount the number of elapsed 50Hz frames
78D2 B378EB           (./engine/graphics):00078 [7]     6245            subd  Vint_Last_runcount       ; used in AnimateSpriteSync
78D5 F178EF           (./engine/graphics):00079 [5]     6250            cmpb  Vint_Main_runcount_cap   ; allow to cap Animation and Mvt Sync
78D8 2303             (./engine/graphics):00080 [3]     6253            bls   @a
78DA F678EF           (./engine/graphics):00081 [5]     6258            ldb   Vint_Main_runcount_cap
78DD F778EE           (./engine/graphics):00082 [5]     6263    @a      stb   Vint_Main_runcount
                      (./engine/graphics):00083                 
78E0 FC78E9           (./engine/graphics):00084 [6]     6269            ldd   Vint_runcount
78E3 FD78EB           (./engine/graphics):00085 [6]     6275            std   Vint_Last_runcount
                      (./engine/graphics):00086                 
78E6 39               (./engine/graphics):00087 [5]     6280            rts
                      (./engine/graphics):00088                         
78E7 0000             (./engine/graphics):00089                 glb_Main_runcount      fdb   0 ; page swap counter
78E9 0000             (./engine/graphics):00090                 Vint_runcount          fdb   0 ; incremented in 50Hz IRQ
78EB 0000             (./engine/graphics):00091                 Vint_Last_runcount     fdb   0
78ED 00               (./engine/graphics):00092                 Vint_Main_runcount_w   fcb   0 ; pad to be able to load Vint_Main_runcount as a word
78EE 00               (./engine/graphics):00093                 Vint_Main_runcount     fcb   0
78EF FF               (./engine/graphics):00094                 Vint_Main_runcount_cap fcb   -1
78F0 00               (./engine/graphics):00095                 glb_Cur_Wrk_Screen_Id  fcb   0 ; screen buffer set to write operations (0 or 1)
                      (C:\Users\bhrou\gi):00131                         INCLUDE "./engine/ram/BankSwitch.asm"
     9F               (./engine/ram/Bank):00001                         SETDP   dp/256
                      (./engine/ram/Bank):00002                 
78F1                  (./engine/ram/Bank):00003                 SetCartPageA
78F1 97E0             (./engine/ram/Bank):00004 [4]     6284            sta   glb_Page
78F3 2A24             (./engine/ram/Bank):00005 [3]     6287            bpl   @RAMPg
78F5 B6E7E6           (./engine/ram/Bank):00006 [5]     6292            lda   $E7E6
78F8 84DF             (./engine/ram/Bank):00007 [2]     6294            anda  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
78FA B7E7E6           (./engine/ram/Bank):00008 [5]     6299            sta   $E7E6
78FD 86F0             (./engine/ram/Bank):00009 [2]     6301            lda   #$F0                     ; sortie du mode commande T.2
78FF B70555           (./engine/ram/Bank):00010 [5]     6306            sta   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
7902 86AA             (./engine/ram/Bank):00011 [2]     6308            lda   #$AA                     ; sequence pour commutation de page T.2
7904 B70555           (./engine/ram/Bank):00012 [5]     6313            sta   $0555
7907 44               (./engine/ram/Bank):00013 [2]     6315            lsra                           ; lda   #$55
7908 B702AA           (./engine/ram/Bank):00014 [5]     6320            sta   $02AA
790B 86C0             (./engine/ram/Bank):00015 [2]     6322            lda   #$C0
790D B70555           (./engine/ram/Bank):00016 [5]     6327            sta   $0555
7910 96E0             (./engine/ram/Bank):00017 [4]     6331            lda   glb_Page
7912 847F             (./engine/ram/Bank):00018 [2]     6333            anda  #$7F                     ; le bit 7 doit etre a 0        
7914 B70555           (./engine/ram/Bank):00019 [5]     6338            sta   $0555                    ; selection de la page T.2 en zone cartouche
7917 2003             (./engine/ram/Bank):00020 [3]     6341            bra   @rts
7919 B7E7E6           (./engine/ram/Bank):00021 [5]     6346    @RAMPg  sta   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
791C 39               (./engine/ram/Bank):00022 [5]     6351    @rts    rts
                      (./engine/ram/Bank):00023                 
791D                  (./engine/ram/Bank):00024                 SetCartPageB
791D D7E0             (./engine/ram/Bank):00025 [4]     6355            stb   glb_Page
791F 2A24             (./engine/ram/Bank):00026 [3]     6358            bpl   @RAMPg
7921 F6E7E6           (./engine/ram/Bank):00027 [5]     6363            ldb   $E7E6
7924 C4DF             (./engine/ram/Bank):00028 [2]     6365            andb  #$DF                     ; passe le bit5 a 0 pour cartouche au lieu de 1 pour RAM
7926 F7E7E6           (./engine/ram/Bank):00029 [5]     6370            stb   $E7E6
7929 C6F0             (./engine/ram/Bank):00030 [2]     6372            ldb   #$F0                     ; sortie du mode commande T.2
792B F70555           (./engine/ram/Bank):00031 [5]     6377            stb   $0555                    ; dans le cas ou l'irq intervient en cours de changement de page
792E C6AA             (./engine/ram/Bank):00032 [2]     6379            ldb   #$AA                     ; sequence pour commutation de page T.2
7930 F70555           (./engine/ram/Bank):00033 [5]     6384            stb   $0555
7933 54               (./engine/ram/Bank):00034 [2]     6386            lsrb                           ; lda   #$55
7934 F702AA           (./engine/ram/Bank):00035 [5]     6391            stb   $02AA
7937 C6C0             (./engine/ram/Bank):00036 [2]     6393            ldb   #$C0
7939 F70555           (./engine/ram/Bank):00037 [5]     6398            stb   $0555
793C D6E0             (./engine/ram/Bank):00038 [4]     6402            ldb   glb_Page
793E C47F             (./engine/ram/Bank):00039 [2]     6404            andb  #$7F                     ; le bit 7 doit etre a 0        
7940 F70555           (./engine/ram/Bank):00040 [5]     6409            stb   $0555                    ; selection de la page T.2 en zone cartouche
7943 2003             (./engine/ram/Bank):00041 [3]     6412            bra   @rts
7945 F7E7E6           (./engine/ram/Bank):00042 [5]     6417    @RAMPg  stb   $E7E6                    ; selection de la page RAM en zone cartouche (bit 5 integre au numero de page)
7948 39               (./engine/ram/Bank):00043 [5]     6422    @rts    rts
                      (./engine/ram/Bank):00044                 
7949                  (./engine/ram/Bank):00045                 GetCartPageA
7949 96E0             (./engine/ram/Bank):00046 [4]     6426            lda   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
794B 2603             (./engine/ram/Bank):00047 [3]     6429            bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
794D B6E7E6           (./engine/ram/Bank):00048 [5]     6434            lda   $E7E6
7950 39               (./engine/ram/Bank):00049 [5]     6439    @rts    rts
                      (./engine/ram/Bank):00050                 
7951                  (./engine/ram/Bank):00051                 GetCartPageB
7951 D6E0             (./engine/ram/Bank):00052 [4]     6443            ldb   glb_Page                 ; glb_page at 0 means that glb_page variable is not in use
7953 2603             (./engine/ram/Bank):00053 [3]     6446            bne   @rts                     ; usefull when we dont work with T2 (ex: optimized tilemap that use only RAM)
7955 F6E7E6           (./engine/ram/Bank):00054 [5]     6451            ldb   $E7E6
7958 39               (./engine/ram/Bank):00055 [5]     6456    @rts   rts
                      (./engine/ram/Bank):00056                 
                      (C:\Users\bhrou\gi):00132                         INCLUDE "./engine/object-management/RunPgSubRoutine.asm"
                      (./engine/object-m):00001                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00002                 * RunPgSubRoutine
                      (./engine/object-m):00003                 * ------------
                      (./engine/object-m):00004                 * Subroutine to run a another Sub Routine in a different Memory Page
                      (./engine/object-m):00005                 *
                      (./engine/object-m):00006                 * input : PSR_Page and PSR_Address
                      (./engine/object-m):00007                 * ---------------------------------------------------------------------------
                      (./engine/object-m):00008                 
7959                  (./engine/object-m):00009                 RunPgSubRoutine 
                      (./engine/object-m):00010                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
7959 BD7949           (    _GetCartPageA):00002 [8]     6464            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
795C B77968           (./engine/object-m):00011 [5]     6469            sta   PSR_RetPage
                      (./engine/object-m):00012                         
795F 8600             (./engine/object-m):00013 [2]     6471            lda   #0
     7960             (./engine/object-m):00014                 PSR_Page equ *-1
                      (./engine/object-m):00015                         _SetCartPageA                  ; set data page for sub routine to call
                      (    _SetCartPageA):00001                  IFDEF T2
7961 BD78F1           (    _SetCartPageA):00002 [8]     6479            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7964 BD0000           (./engine/object-m):00016 [8]     6487            jsr   >0
     7965             (./engine/object-m):00017                 PSR_Address equ *-2
                      (./engine/object-m):00018                 
7967                  (./engine/object-m):00019                 RunPgSubRoutine_return        
7967 8600             (./engine/object-m):00020 [2]     6489            lda   #0
     7968             (./engine/object-m):00021                 PSR_RetPage equ *-1
                      (./engine/object-m):00022                         _SetCartPageA                  ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
7969 BD78F1           (    _SetCartPageA):00002 [8]     6497            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
796C 39               (./engine/object-m):00023 [5]     6502            rts
                      (C:\Users\bhrou\gi):00133                         INCLUDE "./engine/joypad/ReadJoypads.asm"
                      (./engine/joypad/R):00001                 ********************************************************************************
                      (./engine/joypad/R):00002                 * Get joystick parameters (Version 1)
                      (./engine/joypad/R):00003                 *
                      (./engine/joypad/R):00004                 * Read Joypads and store result as Press and Help values :
                      (./engine/joypad/R):00005                 * One byte with direction for player 1 and player 2
                      (./engine/joypad/R):00006                 * One byte with button for player 1 and player 2
                      (./engine/joypad/R):00007                 *
                      (./engine/joypad/R):00008                 * Note : to have one byte for each player, use V2
                      (./engine/joypad/R):00009                 * ------------------------------------------------------------------------------
                      (./engine/joypad/R):00010                 *
                      (./engine/joypad/R):00011                 * Joypads Direction
                      (./engine/joypad/R):00012                 * -----------------
                      (./engine/joypad/R):00013                 * Register: $E7CC (8bits)
                      (./engine/joypad/R):00014                 *
                      (./engine/joypad/R):00015                 * Joypad2     Joypad1
                      (./engine/joypad/R):00016                 * 1111        1111 (0: press | 1: release)  
                      (./engine/joypad/R):00017                 * ||||_Up     ||||_Up
                      (./engine/joypad/R):00018                 * |||__Down   |||__Down
                      (./engine/joypad/R):00019                 * ||___Left   ||___Left
                      (./engine/joypad/R):00020                 * |____Right  |____Right
                      (./engine/joypad/R):00021                 *
                      (./engine/joypad/R):00022                 * Joypads Bouttons
                      (./engine/joypad/R):00023                 * ----------------
                      (./engine/joypad/R):00024                 * Register: $E7CD (8bits)
                      (./engine/joypad/R):00025                 *
                      (./engine/joypad/R):00026                 *   [------] 6 bits DAC
                      (./engine/joypad/R):00027                 * 11 001100 (0: press | 1: release) 
                      (./engine/joypad/R):00028                 * ||   ||
                      (./engine/joypad/R):00029                 * ||   ||_ Btn B Joypad1
                      (./engine/joypad/R):00030                 * ||   |__ Btn B Joypad2
                      (./engine/joypad/R):00031                 * ||
                      (./engine/joypad/R):00032                 * ||______ Btn A Joypad1
                      (./engine/joypad/R):00033                 * |_______ Btn A Joypad2
                      (./engine/joypad/R):00034                 *
                      (./engine/joypad/R):00035                 * Result values: Joypads_Held, Joypads_Press
                      (./engine/joypad/R):00036                 * -----------------------------------------------
                      (./engine/joypad/R):00037                 * (16 bits)
                      (./engine/joypad/R):00038                 * Joypad2     Joypad1                                                          
                      (./engine/joypad/R):00039                 * 0000        0000 (0: release | 1: press) 00 000000 (0: release | 1: press)  
                      (./engine/joypad/R):00040                 * ||||_Up     ||||_Up                       ||  ||         
                      (./engine/joypad/R):00041                 * |||__Down   |||__Down                     ||  ||_ Btn B Joypad1
                      (./engine/joypad/R):00042                 * ||___Left   ||___Left                     ||  |__ Btn B Joypad2                   
                      (./engine/joypad/R):00043                 * |____Right  |____Right                    ||_____ Btn A Joypad1                 
                      (./engine/joypad/R):00044                 *                                           |______ Btn A Joypad2
                      (./engine/joypad/R):00045                 ********************************************************************************
                      (./engine/joypad/R):00046                 
                      (./engine/joypad/R):00047                 ; dedicated mask
     0001             (./engine/joypad/R):00048                 c1_button_up_mask            equ   %00000001 
     0002             (./engine/joypad/R):00049                 c1_button_down_mask          equ   %00000010 
     0004             (./engine/joypad/R):00050                 c1_button_left_mask          equ   %00000100 
     0008             (./engine/joypad/R):00051                 c1_button_right_mask         equ   %00001000 
     0040             (./engine/joypad/R):00052                 c1_button_A_mask             equ   %01000000 
     0004             (./engine/joypad/R):00053                 c1_button_B_mask             equ   %00000100 
                      (./engine/joypad/R):00054                 
     0010             (./engine/joypad/R):00055                 c2_button_up_mask            equ   %00010000 
     0020             (./engine/joypad/R):00056                 c2_button_down_mask          equ   %00100000  
     0040             (./engine/joypad/R):00057                 c2_button_left_mask          equ   %01000000 
     0080             (./engine/joypad/R):00058                 c2_button_right_mask         equ   %10000000 
     0080             (./engine/joypad/R):00059                 c2_button_A_mask             equ   %10000000 
     0008             (./engine/joypad/R):00060                 c2_button_B_mask             equ   %00001000 
                      (./engine/joypad/R):00061                 
                      (./engine/joypad/R):00062                 ; common mask
     0011             (./engine/joypad/R):00063                 c_button_up_mask             equ   %00010001 
     0022             (./engine/joypad/R):00064                 c_button_down_mask           equ   %00100010 
     0044             (./engine/joypad/R):00065                 c_button_left_mask           equ   %01000100 
     0088             (./engine/joypad/R):00066                 c_button_right_mask          equ   %10001000 
     00C0             (./engine/joypad/R):00067                 c_button_A_mask              equ   %11000000 
     000C             (./engine/joypad/R):00068                 c_button_B_mask              equ   %00001100 
                      (./engine/joypad/R):00069                 
                      (./engine/joypad/R):00070                 ; player mask
     000F             (./engine/joypad/R):00071                 c1_dpad                      equ   %00001111 
     00F0             (./engine/joypad/R):00072                 c2_dpad                      equ   %11110000
     0044             (./engine/joypad/R):00073                 c1_butn                      equ   %01000100 
     0088             (./engine/joypad/R):00074                 c2_butn                      equ   %10001000 
                      (./engine/joypad/R):00075                 
796D                  (./engine/joypad/R):00076                 Joypads_Read
796D 00               (./engine/joypad/R):00077                 Dpad_Read                    fcb   $00
796E 00               (./engine/joypad/R):00078                 Fire_Read                    fcb   $00
                      (./engine/joypad/R):00079                    
796F                  (./engine/joypad/R):00080                 Joypads
796F                  (./engine/joypad/R):00081                 Joypads_Held                           
796F 00               (./engine/joypad/R):00082                 Dpad_Held                    fcb   $00 
7970 00               (./engine/joypad/R):00083                 Fire_Held                    fcb   $00 
7971                  (./engine/joypad/R):00084                 Joypads_Press                          
7971 00               (./engine/joypad/R):00085                 Dpad_Press                   fcb   $00 
7972 00               (./engine/joypad/R):00086                 Fire_Press                   fcb   $00 
                      (./engine/joypad/R):00087                 
                      (./engine/joypad/R):00088                                                        *; ---------------------------------------------------------------------------
                      (./engine/joypad/R):00089                                                        *; Subroutine to read joypad input, and send it to the RAM
                      (./engine/joypad/R):00090                                                        *; ---------------------------------------------------------------------------
                      (./engine/joypad/R):00091                                                        *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/joypad/R):00092                                                        *
                      (./engine/joypad/R):00093                                                        *; sub_111C:
7973                  (./engine/joypad/R):00094                 ReadJoypads                            *ReadJoypads:
                      (./engine/joypad/R):00095                                                        *    lea (Ctrl_1).w,a0         ; address where joypad states are written
                      (./engine/joypad/R):00096                                                        *    lea (HW_Port_1_Data).l,a1 ; first joypad port
                      (./engine/joypad/R):00097                                                        *    bsr.s   Joypad_Read       ; do the first joypad
                      (./engine/joypad/R):00098                                                        *    addq.w  #2,a1             ; do the second joypad
                      (./engine/joypad/R):00099                                                        *
                      (./engine/joypad/R):00100                                                        *; sub_112A:
                      (./engine/joypad/R):00101                                                        *Joypad_Read:
                      (./engine/joypad/R):00102                                                        *    move.b  #0,(a1)           ; Poll controller data port
                      (./engine/joypad/R):00103                                                        *    nop
                      (./engine/joypad/R):00104                                                        *    nop
                      (./engine/joypad/R):00105                                                        *    move.b  (a1),d0           ; Get controller port data (start/A)
                      (./engine/joypad/R):00106                                                        *    lsl.b   #2,d0
                      (./engine/joypad/R):00107                                                        *    andi.b  #$C0,d0
                      (./engine/joypad/R):00108                                                        *    move.b  #$40,(a1)         ; Poll controller data port again
                      (./engine/joypad/R):00109                                                        *    nop
                      (./engine/joypad/R):00110                                                        *    nop
                      (./engine/joypad/R):00111                                                        *    move.b  (a1),d1           ; Get controller port data (B/C/Dpad)
                      (./engine/joypad/R):00112                                                        *    andi.b  #$3F,d1
                      (./engine/joypad/R):00113                                                        *    or.b    d1,d0             ; Fuse together into one controller bit array
7973 FCE7CC           (./engine/joypad/R):00114 [6]     6508            ldd   $E7CC
7976 43               (./engine/joypad/R):00115 [2]     6510            coma
7977 53               (./engine/joypad/R):00116 [2]     6512            comb                           *    not.b   d0
7978 FD796D           (./engine/joypad/R):00117 [6]     6518            std   Joypads_Read        
797B FC796F           (./engine/joypad/R):00118 [6]     6524            ldd   Joypads_Held             *    move.b  (a0),d1           ; Get held button data
797E B8796D           (./engine/joypad/R):00119 [5]     6529            eora  Dpad_Read                *    eor.b   d0,d1             ; Toggle off buttons that are being held                       
7981 F8796E           (./engine/joypad/R):00120 [5]     6534            eorb  Fire_Read
                      (./engine/joypad/R):00121                                                        *    move.b  d0,(a0)+          ; Put raw controller input (for held buttons) in F604/F606
7984 B4796D           (./engine/joypad/R):00122 [5]     6539            anda  Dpad_Read                *    and.b   d0,d1
7987 F4796E           (./engine/joypad/R):00123 [5]     6544            andb  Fire_Read
798A FD7971           (./engine/joypad/R):00124 [6]     6550            std   Joypads_Press            *    move.b  d1,(a0)+          ; Put pressed controller input in F605/F607
798D FC796D           (./engine/joypad/R):00125 [6]     6556            ldd   Joypads_Read
7990 FD796F           (./engine/joypad/R):00126 [6]     6562            std   Joypads_Held
7993 39               (./engine/joypad/R):00127 [5]     6567            rts                            *    rts
                      (./engine/joypad/R):00128                                                        *; End of function Joypad_Read
                      (C:\Users\bhrou\gi):00134                         INCLUDE "./engine/palette/UpdatePalette.asm"
                      (./engine/palette/):00001                 * ---------------------------------------------------------------------------
                      (./engine/palette/):00002                 * UpdatePalette
                      (./engine/palette/):00003                 * -------------
                      (./engine/palette/):00004                 * Subroutine to update palette
                      (./engine/palette/):00005                 * should be called just after WaitVBL
                      (./engine/palette/):00006                 *
                      (./engine/palette/):00007                 * input REG : none
                      (./engine/palette/):00008                 * reset REG : [d] [x] [y]
                      (./engine/palette/):00009                 * ---------------------------------------------------------------------------
                      (./engine/palette/):00010                 
7994 FF               (./engine/palette/):00011                 Refresh_palette fcb   $FF            
7995 7997             (./engine/palette/):00012                 Cur_palette     fdb   Dyn_palette    
7997 0000000000000000 (./engine/palette/):00013                 Dyn_palette     fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
79B7 0000000000000000 (./engine/palette/):00014                 Black_palette   fill  0,$20          
     0000000000000000
     0000000000000000
     0000000000000000
79D7 FF0F             (./engine/palette/):00015                 White_palette   fdb   $ff0f          
79D9 FF0F             (./engine/palette/):00016                                 fdb   $ff0f
79DB FF0F             (./engine/palette/):00017                                 fdb   $ff0f
79DD FF0F             (./engine/palette/):00018                                 fdb   $ff0f
79DF FF0F             (./engine/palette/):00019                                 fdb   $ff0f
79E1 FF0F             (./engine/palette/):00020                                 fdb   $ff0f
79E3 FF0F             (./engine/palette/):00021                                 fdb   $ff0f
79E5 FF0F             (./engine/palette/):00022                                 fdb   $ff0f
79E7 FF0F             (./engine/palette/):00023                                 fdb   $ff0f               
79E9 FF0F             (./engine/palette/):00024                                 fdb   $ff0f
79EB FF0F             (./engine/palette/):00025                                 fdb   $ff0f
79ED FF0F             (./engine/palette/):00026                                 fdb   $ff0f
79EF FF0F             (./engine/palette/):00027                                 fdb   $ff0f
79F1 FF0F             (./engine/palette/):00028                                 fdb   $ff0f
79F3 FF0F             (./engine/palette/):00029                                 fdb   $ff0f
79F5 FF0F             (./engine/palette/):00030                                 fdb   $ff0f
                      (./engine/palette/):00031                 
79F7                  (./engine/palette/):00032                 UpdatePalette 
79F7 7D7994           (./engine/palette/):00033 [7]     6574            tst   Refresh_palette
79FA 2701             (./engine/palette/):00034 [3]     6577            beq   @a
79FC 39               (./engine/palette/):00035 [5]     6582            rts
79FD 3408             (./engine/palette/):00036 [6]     6588    @a      pshs  dp        
79FF 108E0195         (./engine/palette/):00037 [4]     6592            ldy   #0405                    * 3328 (52 lignes) - 88 (cycles apres VBL)
7A03                  (./engine/palette/):00038                 UPP_Tempo        
7A03 313F             (./engine/palette/):00039 [5]     6597            leay  -1,y
7A05 26FC             (./engine/palette/):00040 [3]     6600            bne   UPP_Tempo                * tempo pour etre dans la bordure invisible
7A07 C6E7             (./engine/palette/):00041 [2]     6602            ldb   #$E7
7A09 1F9B             (./engine/palette/):00042 [6]     6608            tfr   b,dp        
7A0B BE7995           (./engine/palette/):00043 [6]     6614            ldx   Cur_palette
7A0E 0FDB             (./engine/palette/):00044 [6]     6620            clr   <$DB                     * indice couleur a 0
7A10 108E0010         (./engine/palette/):00045 [4]     6624            ldy   #$0010                   * init cpt
7A14                  (./engine/palette/):00046                 UPP_SetColor
7A14 EC81             (./engine/palette/):00047 [8]     6632            ldd   ,x++                     * chargement de la couleur et increment du poiteur x
7A16 97DA             (./engine/palette/):00048 [4]     6636            sta   <$DA                     * set de la couleur Vert et Rouge
7A18 D7DA             (./engine/palette/):00049 [4]     6640            stb   <$DA                     * set de la couleur Bleu
7A1A 313F             (./engine/palette/):00050 [5]     6645            leay  -1,y
7A1C 26F6             (./engine/palette/):00051 [3]     6648            bne   UPP_SetColor             * on reboucle si fin de liste pas atteinte
7A1E 737994           (./engine/palette/):00052 [7]     6655            com   Refresh_palette          * update flag, next run this routine will be ignored if no pal update is requested
7A21                  (./engine/palette/):00053                 UPP_return
7A21 3588             (./engine/palette/):00054 [8]     6663            puls dp,pc
                      (./engine/palette/):00055                 
                      (./engine/palette/):00056                         
                      (./engine/palette/):00057                         
                      (C:\Users\bhrou\gi):00135                 
                      (C:\Users\bhrou\gi):00136                         ; animation & image
                      (C:\Users\bhrou\gi):00137                         INCLUDE "./engine/graphics/animation/AnimateSprite.asm"     
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * Subroutine to animate a sprite using an animation script
                      (./engine/graphics):00003                 *
                      (./engine/graphics):00004                 * input REG : [u] pointeur sur l'objet
                      (./engine/graphics):00005                 *
                      (./engine/graphics):00006                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00007                 
                      (./engine/graphics):00008                                                             *; ---------------------------------------------------------------------------
                      (./engine/graphics):00009                                                             *; Subroutine to animate a sprite using an animation script
                      (./engine/graphics):00010                                                             *; ---------------------------------------------------------------------------
                      (./engine/graphics):00011                                                             *
                      (./engine/graphics):00012                                                             *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (./engine/graphics):00013                                                             *
                      (./engine/graphics):00014                                                             *; sub_16544:
7A23                  (./engine/graphics):00015                 AnimateSprite                               *AnimateSprite:
                      (./engine/graphics):00016                                                             *    moveq   #0,d0
                      (./engine/graphics):00017                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
7A23 BD7949           (    _GetCartPageA):00002 [8]     6671            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
7A26 B77A80           (./engine/graphics):00018 [5]     6676            sta   Anim_Rts+1                    ; backup cart page     
7A29 8E8DD4           (./engine/graphics):00019 [3]     6679            ldx   #Ani_Page_Index
7A2C E6C4             (./engine/graphics):00020 [4]     6683            ldb   id,u
7A2E 3A               (./engine/graphics):00021 [3]     6686            abx
7A2F A684             (./engine/graphics):00022 [4]     6690            lda   ,x
                      (./engine/graphics):00023                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
7A31 BD78F1           (    _SetCartPageA):00002 [8]     6698            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/graphics):00024                 ;
7A34 AE44             (./engine/graphics):00025 [6]     6704            ldx   anim,u                        *    move.b  anim(a0),d0      ; move animation number to d0
7A36 2A0C             (./engine/graphics):00026 [3]     6707            bpl   @a                       ; branch if anim is an address of anim
7A38 8E8DDD           (./engine/graphics):00027 [3]     6710            ldx   #Ani_Asd_Index           ; negative means anim,u is a signed 8 bit offset for a LUT
                      (./engine/graphics):00028                         ; ldb   id,u                   ; already loaded
7A3B 58               (./engine/graphics):00029 [2]     6712            aslb
7A3C 3A               (./engine/graphics):00030 [3]     6715            abx
7A3D AE94             (./engine/graphics):00031 [8]     6723            ldx   [,x]                     ; load Anim LUT (first entry in Asd LUT)
7A3F E645             (./engine/graphics):00032 [5]     6728            ldb   anim+1,u                 ; load offset
7A41 3A               (./engine/graphics):00033 [3]     6731            abx                            ; apply offset
7A42 AE84             (./engine/graphics):00034 [5]     6736            ldx   ,x                       ; load target anim address
7A44 AC46             (./engine/graphics):00035 [7]     6743    @a      cmpx  prev_anim,u                   *    cmp.b   prev_anim(a0),d0 ; is animation set to change?
7A46 270E             (./engine/graphics):00036 [3]     6746            beq   Anim_Run                      *    beq.s   Anim_Run         ; if not, branch
7A48 AF46             (./engine/graphics):00037 [6]     6752            stx   prev_anim,u                   *    move.b  d0,prev_anim(a0) ; set prev anim to current animation
                      (./engine/graphics):00038                         
7A4A A64A             (./engine/graphics):00039 [5]     6757            lda   anim_flags,u
7A4C 8401             (./engine/graphics):00040 [2]     6759            anda  #anim_link_mask               ; if animation link, when changing animation
7A4E 260E             (./engine/graphics):00041 [3]     6762            bne   Anim_Reload                   ; will skip frame and duration reinit
                      (./engine/graphics):00042                         
7A50 C600             (./engine/graphics):00043 [2]     6764            ldb   #0                            
7A52 E748             (./engine/graphics):00044 [5]     6769            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0)          ; reset animation
7A54 2004             (./engine/graphics):00045 [3]     6772            bra   @b                            *    move.b  #0,anim_frame_duration(a0) ; reset frame duration
                      (./engine/graphics):00046                                                             *; loc_16560:
7A56                  (./engine/graphics):00047                 Anim_Run                                    *Anim_Run:
7A56 6A49             (./engine/graphics):00048 [7]     6779            dec   anim_frame_duration,u         *    subq.b  #1,anim_frame_duration(a0)   ; subtract 1 from frame duration
7A58 2A25             (./engine/graphics):00049 [3]     6782            bpl   Anim_Rts                      *    bpl.s   Anim_Wait                    ; if time remains, branch
                      (./engine/graphics):00050                         * no offset table                   *    add.w   d0,d0
                      (./engine/graphics):00051                         * anim is the address of anim       *    adda.w  (a1,d0.w),a1                 ; calculate address of appropriate animation script
7A5A E61F             (./engine/graphics):00052 [5]     6787    @b      ldb   -1,x                            
7A5C E749             (./engine/graphics):00053 [5]     6792            stb   anim_frame_duration,u         *    move.b  (a1),anim_frame_duration(a0) ; load frame duration
7A5E                  (./engine/graphics):00054                 Anim_Reload                                 *    moveq   #0,d1
7A5E E648             (./engine/graphics):00055 [5]     6797            ldb   anim_frame,u                  *    move.b  anim_frame(a0),d1 ; load current frame number
7A60 8600             (./engine/graphics):00056 [2]     6799            lda   #0
                      (./engine/graphics):00057                         _asld
7A62 58               (            _asld):00001 [2]     6801            aslb
7A63 49               (            _asld):00002 [2]     6803            rola
7A64 318B             (./engine/graphics):00058 [8]     6811            leay  d,x
7A66 ECA4             (./engine/graphics):00059 [5]     6816            ldd   ,y                            *    move.b  1(a1,d1.w),d0 ; read sprite number from script
                      (./engine/graphics):00060                         * bmi   Anim_End_FF                 *    bmi.s   Anim_End_FF   ; if animation is complete, branch MJ: Delete this line
7A68 81FA             (./engine/graphics):00061 [2]     6818            cmpa  #$FA                          *    cmp.b   #$FA,d0       ; MJ: is it a flag from FA to FF?
7A6A 2419             (./engine/graphics):00062 [3]     6821            bhs   Anim_End_FF                   *    bhs     Anim_End_FF   ; MJ: if so, branch to flag routines
                      (./engine/graphics):00063                                                             *; loc_1657C:
7A6C                  (./engine/graphics):00064                 Anim_Next                                   *Anim_Next:
                      (./engine/graphics):00065                                                                 *    andi.b  #$7F,d0               ; clear sign bit
7A6C ED4C             (./engine/graphics):00066 [6]     6827            std   image_set,u                   *    move.b  d0,mapping_frame(a0)  ; load sprite number
7A6E A64B             (./engine/graphics):00067 [5]     6832            lda   status_flags,u
7A70 8403             (./engine/graphics):00068 [2]     6834            anda  #status_xflip_mask|status_yflip_mask
7A72 B77A7A           (./engine/graphics):00069 [5]     6839            sta   @dyn+1
7A75 A642             (./engine/graphics):00070 [5]     6844            lda   render_flags,u
7A77 84FE             (./engine/graphics):00071 [2]     6846            anda  #^render_xmirror_mask
7A79 8A00             (./engine/graphics):00072 [2]     6848    @dyn    ora   #0
7A7B A742             (./engine/graphics):00073 [5]     6853            sta   render_flags,u
                      (./engine/graphics):00074                                                             *    move.b  status(a0),d1         ; match the orientaion dictated by the object
                      (./engine/graphics):00075                                                             *    andi.b  #3,d1                 ; with the orientation used by the object engine
                      (./engine/graphics):00076                                                             *    andi.b  #$FC,render_flags(a0)
                      (./engine/graphics):00077                                                             *    or.b    d1,render_flags(a0)
7A7D 6C48             (./engine/graphics):00078 [7]     6860            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)     ; next frame number
                      (./engine/graphics):00079                                                             *; return_1659A:
7A7F                  (./engine/graphics):00080                 Anim_Rts                                    *Anim_Wait:
7A7F 8600             (./engine/graphics):00081 [2]     6862            lda   #$00                          ; (dynamic)
                      (./engine/graphics):00082                         _SetCartPageA                       ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
7A81 BD78F1           (    _SetCartPageA):00002 [8]     6870            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7A84 39               (./engine/graphics):00083 [5]     6875            rts                                 *    rts 
                      (./engine/graphics):00084                                                             *; ===========================================================================
                      (./engine/graphics):00085                                                             *; loc_1659C:
7A85                  (./engine/graphics):00086                 Anim_End_FF                                 *Anim_End_FF:
7A85 4C               (./engine/graphics):00087 [2]     6877            inca                                *    addq.b  #1,d0       ; is the end flag = $FF ?
7A86 2608             (./engine/graphics):00088 [3]     6880            bne   Anim_End_FE                   *    bne.s   Anim_End_FE ; if not, branch
7A88 C600             (./engine/graphics):00089 [2]     6882            ldb   #0                            
7A8A E748             (./engine/graphics):00090 [5]     6887            stb   anim_frame,u                  *    move.b  #0,anim_frame(a0) ; restart the animation
7A8C EC84             (./engine/graphics):00091 [5]     6892            ldd   ,x                            *    move.b  1(a1),d0          ; read sprite number
7A8E 20DC             (./engine/graphics):00092 [3]     6895            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./engine/graphics):00093                                                             *; ===========================================================================
                      (./engine/graphics):00094                                                             *; loc_165AC:
7A90                  (./engine/graphics):00095                 Anim_End_FE                                 *Anim_End_FE:
7A90 4C               (./engine/graphics):00096 [2]     6897            inca                                *    addq.b  #1,d0             ; is the end flag = $FE ?
7A91 2610             (./engine/graphics):00097 [3]     6900            bne   Anim_End_FD                   *    bne.s   Anim_End_FD       ; if not, branch
7A93 A648             (./engine/graphics):00098 [5]     6905            lda   anim_frame,u                  
7A95 F77A99           (./engine/graphics):00099 [5]     6910            stb   Anim_End_FE_dyn+1             *    move.b  2(a1,d1.w),d0     ; read the next byte in the script
7A98                  (./engine/graphics):00100                 Anim_End_FE_dyn
7A98 8000             (./engine/graphics):00101 [2]     6912            suba  #$00                          ; (dynamic)                          
7A9A A748             (./engine/graphics):00102 [5]     6917            sta   anim_frame,u                  *    sub.b   d0,anim_frame(a0) ; jump back d0 bytes in the script
                      (./engine/graphics):00103                                                             *    sub.b   d0,d1
7A9C C602             (./engine/graphics):00104 [2]     6919            ldb   #2
7A9E 3D               (./engine/graphics):00105 [11]    6930            mul                                            
7A9F EC8B             (./engine/graphics):00106 [9]     6939            ldd   d,x                           *    move.b  1(a1,d1.w),d0     ; read sprite number
7AA1 20C9             (./engine/graphics):00107 [3]     6942            bra   Anim_Next                     *    bra.s   Anim_Next
                      (./engine/graphics):00108                                                             *; ===========================================================================
                      (./engine/graphics):00109                                                             *; loc_165C0:
7AA3                  (./engine/graphics):00110                 Anim_End_FD                                 *Anim_End_FD:
7AA3 4C               (./engine/graphics):00111 [2]     6944            inca                                *    addq.b  #1,d0               ; is the end flag = $FD ?
7AA4 2606             (./engine/graphics):00112 [3]     6947            bne   Anim_End_FC                   *    bne.s   Anim_End_FC         ; if not, branch
7AA6 EC21             (./engine/graphics):00113 [6]     6953            ldd   1,y                           ; read word after FD
7AA8 ED44             (./engine/graphics):00114 [6]     6959            std   anim,u                        *    move.b  2(a1,d1.w),anim(a0) ; read next byte, run that animation
7AAA 20D3             (./engine/graphics):00115 [3]     6962            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00116                                                             *; ===========================================================================
                      (./engine/graphics):00117                                                             *; loc_165CC:
7AAC                  (./engine/graphics):00118                 Anim_End_FC                                 *Anim_End_FC:
7AAC 4C               (./engine/graphics):00119 [2]     6964            inca                                *    addq.b  #1,d0          ; is the end flag = $FC ?
7AAD 260B             (./engine/graphics):00120 [3]     6967            bne   Anim_End_FB                   *    bne.s   Anim_End_FB    ; if not, branch
7AAF 6CC81E           (./engine/graphics):00121 [7]     6974            inc   routine,u                     *    addq.b  #2,routine(a0) ; jump to next routine
7AB2 8600             (./engine/graphics):00122 [2]     6976            lda   #0                            
7AB4 A749             (./engine/graphics):00123 [5]     6981            sta   anim_frame_duration,u         *    move.b  #0,anim_frame_duration(a0)
7AB6 6C48             (./engine/graphics):00124 [7]     6988            inc   anim_frame,u                  *    addq.b  #1,anim_frame(a0)
7AB8 20C5             (./engine/graphics):00125 [3]     6991            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00126                                                             *; ===========================================================================
                      (./engine/graphics):00127                                                             *; loc_165E0:
7ABA                  (./engine/graphics):00128                 Anim_End_FB                                 *Anim_End_FB:
7ABA 4C               (./engine/graphics):00129 [2]     6993            inca                                *    addq.b  #1,d0                 ; is the end flag = $FB ?
7ABB 2609             (./engine/graphics):00130 [3]     6996            bne   Anim_End_FA                   *    bne.s   Anim_End_FA           ; if not, branch
7ABD 8600             (./engine/graphics):00131 [2]     6998            lda   #0                            
7ABF A748             (./engine/graphics):00132 [5]     7003            sta   anim_frame,u                  *    move.b  #0,anim_frame(a0)     ; reset animation
7AC1 A7C81F           (./engine/graphics):00133 [5]     7008            sta   routine_secondary,u           *    clr.b   routine_secondary(a0) ; reset 2nd routine counter
7AC4 20B9             (./engine/graphics):00134 [3]     7011            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00135                                                             *; ===========================================================================
                      (./engine/graphics):00136                                                             *; loc_165F0:
7AC6                  (./engine/graphics):00137                 Anim_End_FA                                 *Anim_End_FA:
7AC6 4C               (./engine/graphics):00138 [2]     7013            inca                                *    addq.b  #1,d0                    ; is the end flag = $FA ?
7AC7 2603             (./engine/graphics):00139 [3]     7016            bne   Anim_End                      *    bne.s   Anim_End_F9              ; if not, branch
7AC9 6CC81F           (./engine/graphics):00140 [7]     7023            inc   routine_secondary,u           *    addq.b  #2,routine_secondary(a0) ; jump to next routine    
7ACC                  (./engine/graphics):00141                 Anim_End               
7ACC 20B1             (./engine/graphics):00142 [3]     7026            bra   Anim_Rts                      *    rts
                      (./engine/graphics):00143                                                             *; ===========================================================================
                      (./engine/graphics):00144                                                             *; loc_165FA:
                      (./engine/graphics):00145                                                             *Anim_End_F9:
                      (./engine/graphics):00146                                                             *    addq.b  #1,d0            ; is the end flag = $F9 ?
                      (./engine/graphics):00147                                                             *    bne.s   Anim_End         ; if not, branch
                      (./engine/graphics):00148                                                             *    addq.b  #2,objoff_2A(a0) ; Actually obj89_arrow_routine
                      (./engine/graphics):00149                                                             *; return_16602:
                      (./engine/graphics):00150                                                             *Anim_End:
                      (./engine/graphics):00151                                                             *    rts
                      (./engine/graphics):00152                                                             *; End of function AnimateSprite
                      (C:\Users\bhrou\gi):00138                         INCLUDE "./engine/graphics/image/GetImgIdA.asm"
7ACE                  (./engine/graphics):00001                 GetImgIdA
                      (./engine/graphics):00002                 
                      (./engine/graphics):00003                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
7ACE BD7949           (    _GetCartPageA):00002 [8]     7034            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
7AD1 B77AE4           (./engine/graphics):00004 [5]     7039            sta   GetImgId_Rts+1                ; backup cart page     
7AD4 8E8DCB           (./engine/graphics):00005 [3]     7042            ldx   #Img_Page_Index               ; call page that store imageset for this object
7AD7 E6C4             (./engine/graphics):00006 [4]     7046            ldb   id,u
7AD9 3A               (./engine/graphics):00007 [3]     7049            abx
7ADA A684             (./engine/graphics):00008 [4]     7053            lda   ,x
                      (./engine/graphics):00009                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
7ADC BD78F1           (    _SetCartPageA):00002 [8]     7061            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/graphics):00010                                 
7ADF AE4C             (./engine/graphics):00011 [6]     7067            ldx   image_set,u
7AE1 A61F             (./engine/graphics):00012 [5]     7072            lda   -1,x
                      (./engine/graphics):00013                 
7AE3                  (./engine/graphics):00014                 GetImgId_Rts
7AE3 C600             (./engine/graphics):00015 [2]     7074            ldb   #$00                          ; (dynamic)
                      (./engine/graphics):00016                         _SetCartPageB                       ; restore data page
                      (    _SetCartPageB):00001                  IFDEF T2
7AE5 BD791D           (    _SetCartPageB):00002 [8]     7082            jsr   SetCartPageB
                      (    _SetCartPageB):00003                  ELSE
                      (    _SetCartPageB):00004                         stb   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageB):00005                  ENDC
7AE8 39               (./engine/graphics):00017 [5]     7087            rts
                      (C:\Users\bhrou\gi):00139                 
                      (C:\Users\bhrou\gi):00140                         ; tilemap
                      (C:\Users\bhrou\gi):00141                         INCLUDE "./engine/graphics/Camera/AutoScroll.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * AutoScroll - Subroutine to automate camera move
                      (./engine/graphics):00003                 *
                      (./engine/graphics):00004                 *   This function move camera and check submap limit.
                      (./engine/graphics):00005                 *
                      (./engine/graphics):00006                 * input REG : none
                      (./engine/graphics):00007                 *
                      (./engine/graphics):00008                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00009                 
                      (./engine/graphics):00010                         INCLUDE "./engine/graphics/camera/AutoScroll.equ" 
     0000             (./engine/graphics):00001                 scroll_state_stop                   equ 0
     0001             (./engine/graphics):00002                 scroll_state_up                     equ 1
     0002             (./engine/graphics):00003                 scroll_state_down                   equ 2
     0003             (./engine/graphics):00004                 scroll_state_left                   equ 3
     0004             (./engine/graphics):00005                 scroll_state_right                  equ 4
                      (./engine/graphics):00011                 
7AE9 0000             (./engine/graphics):00012                 glb_camera_x_min                    fdb   $0000             ; min and max are initialized at submap loading
7AEB 0000             (./engine/graphics):00013                 glb_camera_y_min                    fdb   $0000
7AED 0000             (./engine/graphics):00014                 glb_camera_x_max                    fdb   $0000
7AEF 0000             (./engine/graphics):00015                 glb_camera_y_max                    fdb   $0000  
7AF1 0000             (./engine/graphics):00016                 glb_vp_x_min                        fdb   $0000             ; min and max are initialized at submap loading
7AF3 0000             (./engine/graphics):00017                 glb_vp_y_min                        fdb   $0000
7AF5 0000             (./engine/graphics):00018                 glb_vp_x_max                        fdb   $0000
7AF7 0000             (./engine/graphics):00019                 glb_vp_y_max                        fdb   $0000
                      (./engine/graphics):00020                 
7AF9 00               (./engine/graphics):00021                 glb_auto_scroll_state               fcb   scroll_state_stop ; tell engine to enter a scroll mode
7AFA 0000             (./engine/graphics):00022                 glb_auto_scroll_frames              fdb   $0000             ; number of auto scroll frames
7AFC 0000             (./engine/graphics):00023                 glb_auto_scroll_step                fdb   $0000             ; msb: nb of pixel moves per frame, lsb: nb of sub pixel moves per frame (8 bit decimal, 1/256 resolution)
7AFE 00               (./engine/graphics):00024                 glb_auto_scroll_step_remainder16bit fcb   $00               ; should stay at 0, used for 16bit operation
7AFF 0000             (./engine/graphics):00025                 glb_auto_scroll_step_remainder      fdb   $0000             ; msb: nb of pixel moves per frame, lsb: nb of sub pixel moves per frame (8 bit decimal, 1/256 resolution)
                      (./engine/graphics):00026                 
7B01                  (./engine/graphics):00027                 AutoScroll
7B01 B67AF9           (./engine/graphics):00028 [5]     7092            lda   glb_auto_scroll_state                         ; check if auto scroll is set
7B04 2757             (./engine/graphics):00029 [3]     7095            beq   ATS_Return
7B06 FC7AFA           (./engine/graphics):00030 [6]     7101            ldd   glb_auto_scroll_frames
7B09 830001           (./engine/graphics):00031 [4]     7105            subd  #1
7B0C 2B40             (./engine/graphics):00032 [3]     7108            bmi  ATS_Stop                                      ; check if auto scroll is still running
                      (./engine/graphics):00033                         
7B0E                  (./engine/graphics):00034                 ATS_Up
7B0E FD7AFA           (./engine/graphics):00035 [6]     7114            std   glb_auto_scroll_frames
7B11 B67AF9           (./engine/graphics):00036 [5]     7119            lda   glb_auto_scroll_state
7B14 4A               (./engine/graphics):00037 [2]     7121            deca
7B15 261A             (./engine/graphics):00038 [3]     7124            bne   ATS_Down  
7B17 FC7AFF           (./engine/graphics):00039 [6]     7130            ldd   glb_auto_scroll_step_remainder                ; this code allow
7B1A F37AFC           (./engine/graphics):00040 [7]     7137            addd  glb_auto_scroll_step                          ; sub pixel move by
7B1D FD7AFF           (./engine/graphics):00041 [6]     7143            std   glb_auto_scroll_step_remainder                ; storing remainder
7B20 DCF1             (./engine/graphics):00042 [5]     7148            ldd   <glb_camera_y_pos
7B22 B37AFE           (./engine/graphics):00043 [7]     7155            subd  glb_auto_scroll_step_remainder16bit    
7B25 7F7AFF           (./engine/graphics):00044 [7]     7162            clr   glb_auto_scroll_step_remainder   
7B28 10B37AEB         (./engine/graphics):00045 [8]     7170            cmpd  glb_camera_y_min
7B2C 2D20             (./engine/graphics):00046 [3]     7173            blt   ATS_Stop
7B2E DDF1             (./engine/graphics):00047 [5]     7178            std   <glb_camera_y_pos
7B30 39               (./engine/graphics):00048 [5]     7183            rts
                      (./engine/graphics):00049                         
7B31                  (./engine/graphics):00050                 ATS_Down
7B31 4A               (./engine/graphics):00051 [2]     7185            deca
7B32 262A             (./engine/graphics):00052 [3]     7188            bne   ATS_Left
7B34 FC7AFF           (./engine/graphics):00053 [6]     7194            ldd   glb_auto_scroll_step_remainder
7B37 F37AFC           (./engine/graphics):00054 [7]     7201            addd  glb_auto_scroll_step
7B3A FD7AFF           (./engine/graphics):00055 [6]     7207            std   glb_auto_scroll_step_remainder
7B3D DCF1             (./engine/graphics):00056 [5]     7212            ldd   <glb_camera_y_pos
7B3F F37AFE           (./engine/graphics):00057 [7]     7219            addd  glb_auto_scroll_step_remainder16bit
7B42 7F7AFF           (./engine/graphics):00058 [7]     7226            clr   glb_auto_scroll_step_remainder
7B45 10B37AEF         (./engine/graphics):00059 [8]     7234            cmpd  glb_camera_y_max
7B49 2E03             (./engine/graphics):00060 [3]     7237            bgt   ATS_Stop      
7B4B DDF1             (./engine/graphics):00061 [5]     7242            std   <glb_camera_y_pos    
7B4D 39               (./engine/graphics):00062 [5]     7247            rts
                      (./engine/graphics):00063                 
7B4E                  (./engine/graphics):00064                 ATS_Stop
7B4E CC0000           (./engine/graphics):00065 [3]     7250            ldd   #0
7B51 B77AF9           (./engine/graphics):00066 [5]     7255            sta   glb_auto_scroll_state 
7B54 FD7AFA           (./engine/graphics):00067 [6]     7261            std   glb_auto_scroll_frames        
7B57 FD7AFC           (./engine/graphics):00068 [6]     7267            std   glb_auto_scroll_step       
7B5A FD7AFF           (./engine/graphics):00069 [6]     7273            std   glb_auto_scroll_step_remainder
7B5D                  (./engine/graphics):00070                 ATS_Return
7B5D 39               (./engine/graphics):00071 [5]     7278            rts 
                      (./engine/graphics):00072                 
7B5E                  (./engine/graphics):00073                 ATS_Left
7B5E 4A               (./engine/graphics):00074 [2]     7280            deca
7B5F 261A             (./engine/graphics):00075 [3]     7283            bne   ATS_Right
7B61 FC7AFF           (./engine/graphics):00076 [6]     7289            ldd   glb_auto_scroll_step_remainder
7B64 F37AFC           (./engine/graphics):00077 [7]     7296            addd  glb_auto_scroll_step
7B67 FD7AFF           (./engine/graphics):00078 [6]     7302            std   glb_auto_scroll_step_remainder
7B6A DCF3             (./engine/graphics):00079 [5]     7307            ldd   <glb_camera_x_pos
7B6C B37AFE           (./engine/graphics):00080 [7]     7314            subd  glb_auto_scroll_step_remainder16bit
7B6F 7F7AFF           (./engine/graphics):00081 [7]     7321            clr   glb_auto_scroll_step_remainder
7B72 10B37AE9         (./engine/graphics):00082 [8]     7329            cmpd  glb_camera_x_min
7B76 2DD6             (./engine/graphics):00083 [3]     7332            blt   ATS_Stop      
7B78 DDF3             (./engine/graphics):00084 [5]     7337            std   <glb_camera_x_pos    
7B7A 39               (./engine/graphics):00085 [5]     7342            rts
                      (./engine/graphics):00086                 
7B7B                  (./engine/graphics):00087                 ATS_Right
7B7B 4A               (./engine/graphics):00088 [2]     7344            deca
7B7C 26DF             (./engine/graphics):00089 [3]     7347            bne   ATS_Return
7B7E FC7AFF           (./engine/graphics):00090 [6]     7353            ldd   glb_auto_scroll_step_remainder
7B81 F37AFC           (./engine/graphics):00091 [7]     7360            addd  glb_auto_scroll_step
7B84 FD7AFF           (./engine/graphics):00092 [6]     7366            std   glb_auto_scroll_step_remainder
7B87 DCF3             (./engine/graphics):00093 [5]     7371            ldd   <glb_camera_x_pos
7B89 F37AFE           (./engine/graphics):00094 [7]     7378            addd  glb_auto_scroll_step_remainder16bit
7B8C 7F7AFF           (./engine/graphics):00095 [7]     7385            clr   glb_auto_scroll_step_remainder
7B8F 10B37AED         (./engine/graphics):00096 [8]     7393            cmpd  glb_camera_x_max
7B93 2EB9             (./engine/graphics):00097 [3]     7396            bgt   ATS_Stop      
7B95 DDF3             (./engine/graphics):00098 [5]     7401            std   <glb_camera_x_pos    
7B97 39               (./engine/graphics):00099 [5]     7406            rts                   
                      (./engine/graphics):00100                         
                      (C:\Users\bhrou\gi):00142                         INCLUDE "./engine/graphics/Tilemap/Tilemap.asm"
                      (./engine/graphics):00001                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 * Tilemap - Subroutines to draw a background of tiles
                      (./engine/graphics):00003                 *
                      (./engine/graphics):00004                 * input REG : none
                      (./engine/graphics):00005                 *
                      (./engine/graphics):00006                 * ---------------------------------------------------------------------------
                      (./engine/graphics):00007                 
                      (./engine/graphics):00008                         INCLUDE "./engine/graphics/tilemap/data-types/layer.equ"
                      (./engine/graphics):00001                 ; ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 ; DataType Offsets for tile layer
                      (./engine/graphics):00003                 ; ---------------------------------------------------------------------------
                      (./engine/graphics):00004                 
     0000             (./engine/graphics):00005                 layer_parallax_X          equ   0  ; for one camera pixel move tell how much this layer will move in 8 bit decimal value (n/256)
     0001             (./engine/graphics):00006                 layer_parallax_Y          equ   1  ; ex: $FF is one pixel move, $00 is not moving, $80 is moving half a pixel ...
     0002             (./engine/graphics):00007                 layer_vp_offset           equ   2  ; viewport offset from top of the screen (in linear memory bytes) col: 4 px = 1 byte + row: 1 px = 40 bytes
     0004             (./engine/graphics):00008                 layer_vp_tiles_x          equ   4  ; nb of tiles in viewport rows
     0005             (./engine/graphics):00009                 layer_vp_tiles_y          equ   5  ; nb of tiles in viewport columns
     0006             (./engine/graphics):00010                 layer_vp_x_size           equ   6  ; viewport x size in pixel 
     0008             (./engine/graphics):00011                 layer_vp_y_size           equ   8  ; viewport y size in pixel 
     000A             (./engine/graphics):00012                 layer_mem_step_x          equ   10 ; nb of linear memory bytes between two tiles in a column
     000B             (./engine/graphics):00013                 layer_mem_step_y          equ   11 ; nb of linear memory bytes to go from the last tile of a row to the first tile of the next row
     000D             (./engine/graphics):00014                 layer_tile_size_bitmask_x equ   13 ; bitmask used in sub tile position representation (tile x size : 4px=2, 8px=3, 16px=4, 32px=5, ... 256px=8)
     000E             (./engine/graphics):00015                 layer_tile_size_bitmask_y equ   14 ; bitmask used in sub tile position representation (tile y size : 4px=2, 8px=3, 16px=4, 32px=5, ... 256px=8)
     000F             (./engine/graphics):00016                 layer_tile_size_divider_x equ   15 ; number of byte to branch over in the division routine (tile x size : 4px=14, 8px=12, 16px=10, 32px=8, ... 256px=2)
     0010             (./engine/graphics):00017                 layer_tile_size_divider_y equ   16 ; number of byte to branch over in the division routine (tile y size : 4px=14, 8px=12, 16px=10, 32px=8, ... 256px=2)
     0011             (./engine/graphics):00018                 layer_tiles_location      equ   17 ; location of tiles index (page and adress for each tiles)
     0013             (./engine/graphics):00019                 layer_width               equ   19 ; nb of tiles in this layer map rows
     0014             (./engine/graphics):00020                 layer_height              equ   20 ; nb of tiles in this layer map columns
     0015             (./engine/graphics):00021                 layer_tilemap             equ   21 ; index of a tile [repeated width*height times]
                      (./engine/graphics):00009                         INCLUDE "./engine/graphics/tilemap/data-types/submap.equ"        
                      (./engine/graphics):00001                 ; ---------------------------------------------------------------------------
                      (./engine/graphics):00002                 ; DataType Offsets for tile submap
                      (./engine/graphics):00003                 ; ---------------------------------------------------------------------------
                      (./engine/graphics):00004                 
     0000             (./engine/graphics):00005                 submap_x_pos        equ   0  ; position of submap in the global map including camera border (x_pixel coordinates system)
     0002             (./engine/graphics):00006                 submap_y_pos        equ   2  ; position of submap in the global map including camera border (x_pixel coordinates system)
     0004             (./engine/graphics):00007                 submap_camera_x_min equ   4  ; camera position limit
     0006             (./engine/graphics):00008                 submap_camera_y_min equ   6  ; camera position limit
     0008             (./engine/graphics):00009                 submap_camera_x_max equ   8  ; camera position limit
     000A             (./engine/graphics):00010                 submap_camera_y_max equ   10 ; camera position limit   
     000C             (./engine/graphics):00011                 submap_layers       equ   12 ; table of layer addresses
                      (./engine/graphics):00010                 
     FFFF             (./engine/graphics):00011                 glb_submap_index_inactive equ   $FFFF                     ; force background refresh if used in glb_submap_index_buf0/1
                      (./engine/graphics):00012                 
7B98 0000             (./engine/graphics):00013                 glb_submap                fdb   $0000                     ; location of submap data structure
7B9A 0000             (./engine/graphics):00014                 glb_submap_page           fdb   $00                       ; location of submap data structure
7B9C 0000             (./engine/graphics):00015                 glb_submap_index          fdb   $0000                     ; index in submap tile table that matches camera position
7B9E FFFF             (./engine/graphics):00016                 glb_submap_index_buf0     fdb   glb_submap_index_inactive ; actual submap index that matches screen buffer 0 content
7BA0 FFFF             (./engine/graphics):00017                 glb_submap_index_buf1     fdb   glb_submap_index_inactive ; actual submap index that matches screen buffer 1 content
                      (./engine/graphics):00018                 
7BA2                  (./engine/graphics):00019                 DrawTilemap
                      (./engine/graphics):00020                 
7BA2 B67B9A           (./engine/graphics):00021 [5]     7411            lda   glb_submap_page
7BA5 BE7B98           (./engine/graphics):00022 [6]     7417            ldx   glb_submap        
                      (./engine/graphics):00023                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
7BA8 BD78F1           (    _SetCartPageA):00002 [8]     7425            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/graphics):00024                 
                      (./engine/graphics):00025                         ; TODO loop thru all submap layers        
7BAB EE0C             (./engine/graphics):00026 [6]     7431            ldu   submap_layers,x
                      (./engine/graphics):00027                 
                      (./engine/graphics):00028                         ; Transform a camera position into an index into submap table
                      (./engine/graphics):00029                         ; This routine use a submap layer parameter (layer_tile_size_divider)
                      (./engine/graphics):00030                         ; to make a faster division at runtime
                      (./engine/graphics):00031                         
7BAD 31C815           (./engine/graphics):00032 [5]     7436            leay  layer_tilemap,u
7BB0 10BF7BF6         (./engine/graphics):00033 [7]     7443            sty   @dyn2+1
7BB4 E64F             (./engine/graphics):00034 [5]     7448            ldb   layer_tile_size_divider_x,u
7BB6 F77BBE           (./engine/graphics):00035 [5]     7453            stb   @dynb1+1
7BB9 DCF3             (./engine/graphics):00036 [5]     7458            ldd   <glb_camera_x_pos
7BBB A384             (./engine/graphics):00037 [6]     7464            subd  submap_x_pos,x
7BBD 2000             (./engine/graphics):00038 [3]     7467    @dynb1  bra   *+2
                      (./engine/graphics):00039                         _lsrd
7BBF 44               (            _lsrd):00001 [2]     7469            lsra
7BC0 56               (            _lsrd):00002 [2]     7471            rorb
                      (./engine/graphics):00040                         _lsrd
7BC1 44               (            _lsrd):00001 [2]     7473            lsra
7BC2 56               (            _lsrd):00002 [2]     7475            rorb
                      (./engine/graphics):00041                         _lsrd
7BC3 44               (            _lsrd):00001 [2]     7477            lsra
7BC4 56               (            _lsrd):00002 [2]     7479            rorb
                      (./engine/graphics):00042                         _lsrd
7BC5 44               (            _lsrd):00001 [2]     7481            lsra
7BC6 56               (            _lsrd):00002 [2]     7483            rorb
                      (./engine/graphics):00043                         _lsrd
7BC7 44               (            _lsrd):00001 [2]     7485            lsra
7BC8 56               (            _lsrd):00002 [2]     7487            rorb
                      (./engine/graphics):00044                         _lsrd
7BC9 44               (            _lsrd):00001 [2]     7489            lsra
7BCA 56               (            _lsrd):00002 [2]     7491            rorb
                      (./engine/graphics):00045                         _lsrd
7BCB 44               (            _lsrd):00001 [2]     7493            lsra
7BCC 56               (            _lsrd):00002 [2]     7495            rorb
                      (./engine/graphics):00046                         _lsrd                                                
7BCD 44               (            _lsrd):00001 [2]     7497            lsra
7BCE 56               (            _lsrd):00002 [2]     7499            rorb
7BCF FD7BF3           (./engine/graphics):00047 [6]     7505            std   @dyn1+1
7BD2 E6C810           (./engine/graphics):00048 [5]     7510            ldb   layer_tile_size_divider_y,u
7BD5 F77BDD           (./engine/graphics):00049 [5]     7515            stb   @dynb2+1
7BD8 DCF1             (./engine/graphics):00050 [5]     7520            ldd   <glb_camera_y_pos
7BDA A302             (./engine/graphics):00051 [7]     7527            subd  submap_y_pos,x
7BDC 2000             (./engine/graphics):00052 [3]     7530    @dynb2  bra   *+2
                      (./engine/graphics):00053                         _lsrd
7BDE 44               (            _lsrd):00001 [2]     7532            lsra
7BDF 56               (            _lsrd):00002 [2]     7534            rorb
                      (./engine/graphics):00054                         _lsrd
7BE0 44               (            _lsrd):00001 [2]     7536            lsra
7BE1 56               (            _lsrd):00002 [2]     7538            rorb
                      (./engine/graphics):00055                         _lsrd
7BE2 44               (            _lsrd):00001 [2]     7540            lsra
7BE3 56               (            _lsrd):00002 [2]     7542            rorb
                      (./engine/graphics):00056                         _lsrd
7BE4 44               (            _lsrd):00001 [2]     7544            lsra
7BE5 56               (            _lsrd):00002 [2]     7546            rorb
                      (./engine/graphics):00057                         _lsrd
7BE6 44               (            _lsrd):00001 [2]     7548            lsra
7BE7 56               (            _lsrd):00002 [2]     7550            rorb
                      (./engine/graphics):00058                         _lsrd
7BE8 44               (            _lsrd):00001 [2]     7552            lsra
7BE9 56               (            _lsrd):00002 [2]     7554            rorb
                      (./engine/graphics):00059                         _lsrd
7BEA 44               (            _lsrd):00001 [2]     7556            lsra
7BEB 56               (            _lsrd):00002 [2]     7558            rorb
                      (./engine/graphics):00060                         _lsrd
7BEC 44               (            _lsrd):00001 [2]     7560            lsra
7BED 56               (            _lsrd):00002 [2]     7562            rorb
7BEE A6C813           (./engine/graphics):00061 [5]     7567            lda   layer_width,u
7BF1 3D               (./engine/graphics):00062 [11]    7578            mul                                           ; to use map larger than 256*256 tiles, use tile groups (TODO)
7BF2 C30000           (./engine/graphics):00063 [4]     7582    @dyn1   addd  #0                                      ; (dynamic) add x position to index 
7BF5 C30000           (./engine/graphics):00064 [4]     7586    @dyn2   addd  #0                                      ; (dynamic) add layer map data address to index
                      (./engine/graphics):00065                         
                      (./engine/graphics):00066                         ; now we have to check if this submap index (register d) was the one already rendered (or not) on this buffer
                      (./engine/graphics):00067                         ; the goal is to avoid the full redraw of background if it's already there ...
                      (./engine/graphics):00068                         
7BF8 7D78F0           (./engine/graphics):00069 [7]     7593            tst   glb_Cur_Wrk_Screen_Id                   ; read current screen buffer for write operations
7BFB 260F             (./engine/graphics):00070 [3]     7596            bne   DTM_Buffer1
                      (./engine/graphics):00071                                 
7BFD                  (./engine/graphics):00072                 DTM_Buffer0
7BFD 10B37B9E         (./engine/graphics):00073 [8]     7604            cmpd  glb_submap_index_buf0
7C01 2708             (./engine/graphics):00074 [3]     7607            beq   DTM_Return
7C03 FD7B9E           (./engine/graphics):00075 [6]     7613            std   glb_submap_index_buf0
7C06 FD7B9C           (./engine/graphics):00076 [6]     7619            std   glb_submap_index
7C09 200D             (./engine/graphics):00077 [3]     7622            bra   DrawTileInit
                      (./engine/graphics):00078                 
7C0B                  (./engine/graphics):00079                 DTM_Return
7C0B 39               (./engine/graphics):00080 [5]     7627            rts        
                      (./engine/graphics):00081                         
7C0C                  (./engine/graphics):00082                 DTM_Buffer1        
7C0C 10B37BA0         (./engine/graphics):00083 [8]     7635            cmpd  glb_submap_index_buf1
7C10 27F9             (./engine/graphics):00084 [3]     7638            beq   DTM_Return
7C12 FD7BA0           (./engine/graphics):00085 [6]     7644            std   glb_submap_index_buf1
7C15 FD7B9C           (./engine/graphics):00086 [6]     7650            std   glb_submap_index
                      (./engine/graphics):00087                 
7C18                  (./engine/graphics):00088                 DrawTileInit
7C18 8601             (./engine/graphics):00089 [2]     7652            lda   #1
7C1A 97E5             (./engine/graphics):00090 [4]     7656            sta   glb_camera_move
7C1C EC42             (./engine/graphics):00091 [6]     7662            ldd   layer_vp_offset,u
7C1E C3A000           (./engine/graphics):00092 [4]     7666            addd  #$A000
7C21 DDFC             (./engine/graphics):00093 [5]     7671            std   <glb_screen_location_1
7C23 EC42             (./engine/graphics):00094 [6]     7677            ldd   layer_vp_offset,u        
7C25 C3C000           (./engine/graphics):00095 [4]     7681            addd  #$C000
7C28 DDFA             (./engine/graphics):00096 [5]     7686            std   <glb_screen_location_2
7C2A A644             (./engine/graphics):00097 [5]     7691            lda   layer_vp_tiles_x,u
7C2C B77CA3           (./engine/graphics):00098 [5]     7696            sta   dyn_x+1                                 ; init column counter
7C2F B77C65           (./engine/graphics):00099 [5]     7701            sta   dyn_xi+1                                ; init column counter
7C32 A645             (./engine/graphics):00100 [5]     7706            lda   layer_vp_tiles_y,u
7C34 B77CA8           (./engine/graphics):00101 [5]     7711            sta   dyn_y+1                                 ; init row counter        
7C37 A64A             (./engine/graphics):00102 [5]     7716            lda   layer_mem_step_x,u
7C39 B77C6F           (./engine/graphics):00103 [5]     7721            sta   dyn_sx+1
7C3C EC4B             (./engine/graphics):00104 [6]     7727            ldd   layer_mem_step_y,u
7C3E FD7C56           (./engine/graphics):00105 [6]     7733            std   dyn_sy+1
7C41 A6C813           (./engine/graphics):00106 [5]     7738            lda   layer_width,u
7C44 A044             (./engine/graphics):00107 [5]     7743            suba  layer_vp_tiles_x,u
7C46 4A               (./engine/graphics):00108 [2]     7745            deca
7C47 B77CAA           (./engine/graphics):00109 [5]     7750            sta   dyn_w+1
7C4A EEC811           (./engine/graphics):00110 [6]     7756            ldu   layer_tiles_location,u
7C4D FF7C91           (./engine/graphics):00111 [6]     7762            stu   dyn_Tls+1
7C50 2028             (./engine/graphics):00112 [3]     7765            bra   DrawTileLayer
                      (./engine/graphics):00113                 
7C52                  (./engine/graphics):00114                 DrawTileRow  
7C52 7A7CA8           (./engine/graphics):00115 [7]     7772            dec   dyn_y+1
7C55 CC0000           (./engine/graphics):00116 [3]     7775    dyn_sy  ldd   #$0000                                  ; (dynamic) y memory step
7C58 9EFC             (./engine/graphics):00117 [5]     7780            ldx   <glb_screen_location_1
7C5A 308B             (./engine/graphics):00118 [8]     7788            leax  d,x
7C5C 9FFC             (./engine/graphics):00119 [5]     7793            stx   <glb_screen_location_1
7C5E 9EFA             (./engine/graphics):00120 [5]     7798            ldx   <glb_screen_location_2
7C60 308B             (./engine/graphics):00121 [8]     7806            leax  d,x
7C62 9FFA             (./engine/graphics):00122 [5]     7811            stx   <glb_screen_location_2  
7C64 8600             (./engine/graphics):00123 [2]     7813    dyn_xi  lda   #$00
7C66 B77CA3           (./engine/graphics):00124 [5]     7818            sta   dyn_x+1                                 ; init column counter
7C69 200F             (./engine/graphics):00125 [3]     7821            bra   DrawTileLayer
                      (./engine/graphics):00126                         
7C6B                  (./engine/graphics):00127                 DrawTileColumn        
7C6B 7A7CA3           (./engine/graphics):00128 [7]     7828            dec   dyn_x+1
7C6E C600             (./engine/graphics):00129 [2]     7830    dyn_sx  ldb   #$00                                    ; (dynamic) x memory step
7C70 9EFC             (./engine/graphics):00130 [5]     7835            ldx   <glb_screen_location_1
7C72 3A               (./engine/graphics):00131 [3]     7838            abx
7C73 9FFC             (./engine/graphics):00132 [5]     7843            stx   <glb_screen_location_1
7C75 9EFA             (./engine/graphics):00133 [5]     7848            ldx   <glb_screen_location_2
7C77 3A               (./engine/graphics):00134 [3]     7851            abx
7C78 9FFA             (./engine/graphics):00135 [5]     7856            stx   <glb_screen_location_2                
                      (./engine/graphics):00136                                 
7C7A                  (./engine/graphics):00137                 DrawTileLayer        
7C7A FE7B9C           (./engine/graphics):00138 [6]     7862            ldu   glb_submap_index
7C7D 8600             (./engine/graphics):00139 [2]     7864            lda   #0
7C7F E6C4             (./engine/graphics):00140 [4]     7868            ldb   ,u                                      ; load tile index in b (0-256)
7C81 2734             (./engine/graphics):00141 [3]     7871            beq   skip                                   ; skip empty tile (index 0)
7C83 FD7C89           (./engine/graphics):00142 [6]     7877            std   @dyn+1                                  ; multiply d by 3
                      (./engine/graphics):00143                         _lsld
7C86 58               (            _lsld):00001 [2]     7879            lslb
7C87 49               (            _lsld):00002 [2]     7881            rola
7C88 C30000           (./engine/graphics):00144 [4]     7885    @dyn    addd  #$0000                                  ; (dynamic)
7C8B 3341             (./engine/graphics):00145 [5]     7890            leau  1,u
7C8D FF7B9C           (./engine/graphics):00146 [6]     7896            stu   glb_submap_index
7C90 CE0000           (./engine/graphics):00147 [3]     7899    dyn_Tls ldu   #0000                                   ; (dynamic) Tileset
7C93 33CB             (./engine/graphics):00148 [8]     7907            leau  d,u
7C95 3712             (./engine/graphics):00149 [8]     7915            pulu  a,x                                     ; a: tile routine page, x: tile routine address
                      (./engine/graphics):00150                 
                      (./engine/graphics):00151                         ; draw compilated tile
7C97 DEFA             (./engine/graphics):00152 [5]     7920            ldu   <glb_screen_location_2   
7C99 B77960           (./engine/graphics):00153 [5]     7925            sta   PSR_Page  
7C9C BF7965           (./engine/graphics):00154 [6]     7931            stx   PSR_Address        
7C9F BD7959           (./engine/graphics):00155 [8]     7939            jsr   RunPgSubRoutine        
                      (./engine/graphics):00156                         
7CA2 8600             (./engine/graphics):00157 [2]     7941    dyn_x   lda   #$00                                    ; (dynamic) current column index
7CA4 4D               (./engine/graphics):00158 [2]     7943            tsta
7CA5 26C4             (./engine/graphics):00159 [3]     7946            bne   DrawTileColumn
7CA7 8600             (./engine/graphics):00160 [2]     7948    dyn_y   lda   #$00                                    ; (dynamic) current row index
7CA9 C600             (./engine/graphics):00161 [2]     7950    dyn_w   ldb   #$00
7CAB FE7B9C           (./engine/graphics):00162 [6]     7956            ldu   glb_submap_index
7CAE 33C5             (./engine/graphics):00163 [5]     7961            leau  b,u        
7CB0 FF7B9C           (./engine/graphics):00164 [6]     7967            stu   glb_submap_index        
7CB3 4D               (./engine/graphics):00165 [2]     7969            tsta
7CB4 269C             (./engine/graphics):00166 [3]     7972            bne   DrawTileRow
                      (./engine/graphics):00167                                                                       ; TODO set here the background refresh flag   
7CB6 39               (./engine/graphics):00168 [5]     7977            rts
                      (./engine/graphics):00169                 
7CB7 3341             (./engine/graphics):00170 [5]     7982    skip    leau  1,u
7CB9 FF7B9C           (./engine/graphics):00171 [6]     7988            stu   glb_submap_index
7CBC 20E4             (./engine/graphics):00172 [3]     7991            bra   dyn_x
                      (C:\Users\bhrou\gi):00143                 
                      (C:\Users\bhrou\gi):00144                         ; sound
                      (C:\Users\bhrou\gi):00145                         INCLUDE "./engine/irq/IrqSmps.asm"        
                      (./engine/irq/IrqS):00001                 * ---------------------------------------------------------------------------
                      (./engine/irq/IrqS):00002                 * IrqSmps
                      (./engine/irq/IrqS):00003                 * -------
                      (./engine/irq/IrqS):00004                 * IRQ Subroutine to play sound with SN76489/YM2413
                      (./engine/irq/IrqS):00005                 *
                      (./engine/irq/IrqS):00006                 * input REG : [dp] with value E7 (from Monitor ROM)
                      (./engine/irq/IrqS):00007                 * reset REG : none
                      (./engine/irq/IrqS):00008                 *
                      (./engine/irq/IrqS):00009                 * IrqOn
                      (./engine/irq/IrqS):00010                 * reset REG : [a]
                      (./engine/irq/IrqS):00011                 *
                      (./engine/irq/IrqS):00012                 * IrqOff
                      (./engine/irq/IrqS):00013                 * reset REG : [a]
                      (./engine/irq/IrqS):00014                 * ---------------------------------------------------------------------------
                      (./engine/irq/IrqS):00015                 
     6027             (./engine/irq/IrqS):00016                 irq_routine       equ $6027 
     E7C5             (./engine/irq/IrqS):00017                 irq_timer_ctrl    equ $E7C5 
     E7C6             (./engine/irq/IrqS):00018                 irq_timer         equ $E7C6
     4DFF             (./engine/irq/IrqS):00019                 irq_one_frame     equ 312*64-1               ; one frame timer (lines*cycles_per_lines-1), timer launch at -1
                      (./engine/irq/IrqS):00020                        
7CBE                  (./engine/irq/IrqS):00021                 IrqSet50Hz
7CBE C642             (./engine/irq/IrqS):00022 [2]     7993            ldb   #$42
7CC0 F7E7C5           (./engine/irq/IrqS):00023 [5]     7998            stb   irq_timer_ctrl                     ; timer precision x8
7CC3 CC7CE9           (./engine/irq/IrqS):00024 [3]     8001            ldd   #IrqSmps
7CC6 FD6027           (./engine/irq/IrqS):00025 [6]     8007            std   irq_routine
7CC9 8E4DFF           (./engine/irq/IrqS):00026 [3]     8010            ldx   #irq_one_frame                     ; on every frame
7CCC BFE7C6           (./engine/irq/IrqS):00027 [6]     8016            stx   irq_timer
7CCF BD7CD3           (./engine/irq/IrqS):00028 [8]     8024            jsr   IrqOn   
7CD2 39               (./engine/irq/IrqS):00029 [5]     8029            rts
                      (./engine/irq/IrqS):00030                        
7CD3                  (./engine/irq/IrqS):00031                 IrqOn         
7CD3 B66019           (./engine/irq/IrqS):00032 [5]     8034            lda   $6019                           
7CD6 8A20             (./engine/irq/IrqS):00033 [2]     8036            ora   #$20
7CD8 B76019           (./engine/irq/IrqS):00034 [5]     8041            sta   $6019                                   ; STATUS register
7CDB 1CEF             (./engine/irq/IrqS):00035 [3]     8044            andcc #$EF                                    ; tell 6809 to activate irq
7CDD 39               (./engine/irq/IrqS):00036 [5]     8049            rts
                      (./engine/irq/IrqS):00037                         
7CDE                  (./engine/irq/IrqS):00038                 IrqOff 
7CDE B66019           (./engine/irq/IrqS):00039 [5]     8054            lda   $6019                           
7CE1 84DF             (./engine/irq/IrqS):00040 [2]     8056            anda  #$DF
7CE3 B76019           (./engine/irq/IrqS):00041 [5]     8061            sta   $6019                                   ; STATUS register
7CE6 1A10             (./engine/irq/IrqS):00042 [3]     8064            orcc  #$10                                    ; tell 6809 to activate irq
7CE8 39               (./engine/irq/IrqS):00043 [5]     8069            rts
                      (./engine/irq/IrqS):00044                         
7CE9                  (./engine/irq/IrqS):00045                 IrqSmps 
                      (./engine/irq/IrqS):00046                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
7CE9 BD7949           (    _GetCartPageA):00002 [8]     8077            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
7CEC B77D08           (./engine/irq/IrqS):00047 [5]     8082            sta   IrqSmps_end+1                           ; backup data page
                      (./engine/irq/IrqS):00048                         
7CEF FC78E9           (./engine/irq/IrqS):00049 [6]     8088            ldd   Vint_runcount
7CF2 C30001           (./engine/irq/IrqS):00050 [4]     8092            addd  #1
7CF5 FD78E9           (./engine/irq/IrqS):00051 [6]     8098            std   Vint_runcount
                      (./engine/irq/IrqS):00052                         
7CF8 10FF7D05         (./engine/irq/IrqS):00053 [7]     8105            sts   @a+2                                    ; backup system stack
7CFC 10CE7D2F         (./engine/irq/IrqS):00054 [4]     8109            lds   #IRQSysStack                            ; set tmp system stack for IRQ 
7D00 BD81AD           (./engine/irq/IrqS):00055 [8]     8117            jsr   MusicFrame
7D03 10CE0000         (./engine/irq/IrqS):00056 [4]     8121    @a      lds   #0                                      ; (dynamic) restore system stack   
                      (./engine/irq/IrqS):00057                         
7D07                  (./engine/irq/IrqS):00058                 IrqSmps_end        
7D07 8600             (./engine/irq/IrqS):00059 [2]     8123            lda   #$00                                    ; (dynamic)
                      (./engine/irq/IrqS):00060                         _SetCartPageA                                 ; restore data page
                      (    _SetCartPageA):00001                  IFDEF T2
7D09 BD78F1           (    _SetCartPageA):00002 [8]     8131            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
7D0C 7EE830           (./engine/irq/IrqS):00061 [4]     8135            jmp   $E830                                   ; return to caller
                      (./engine/irq/IrqS):00062                 
                      (./engine/irq/IrqS):00063                 ; This space allow the use of system stack inside IRQ calls
                      (./engine/irq/IrqS):00064                 ; otherwise the writes in sys stack will erase data when S is in use
                      (./engine/irq/IrqS):00065                 ; (outside of IRQ) for another task than sys stack, ex: stack blast copy 
7D0F 0000000000000000 (./engine/irq/IrqS):00066                               fill  0,32
     0000000000000000
     0000000000000000
     0000000000000000
7D2F                  (./engine/irq/IrqS):00067                 IRQSysStack
                      (C:\Users\bhrou\gi):00146                         INCLUDE "./engine/sound/Smps.asm"
                      (./engine/sound/Sm):00001                 * ---------------------------------------------------------------------------
                      (./engine/sound/Sm):00002                 * SMPS 6809 - Sample Music Playback System for 6809 (LWASM)
                      (./engine/sound/Sm):00003                 * ---------------------------------------------------------------------------
                      (./engine/sound/Sm):00004                 * by Bentoc June 2021, based on
                      (./engine/sound/Sm):00005                 * Sonic the Hedgehog 2 disassembled Z80 sound driver
                      (./engine/sound/Sm):00006                 * Disassembled by Xenowhirl for AS
                      (./engine/sound/Sm):00007                 * Additional disassembly work by RAS Oct 2008
                      (./engine/sound/Sm):00008                 * RAS' work merged into SVN by Flamewing
                      (./engine/sound/Sm):00009                 *
                      (./engine/sound/Sm):00010                 * TODO
                      (./engine/sound/Sm):00011                 * - Test real hardware wait time and adjust the code
                      (./engine/sound/Sm):00012                 * ---------------------------------------------------------------------------
                      (./engine/sound/Sm):00013                 
                      (./engine/sound/Sm):00014                 ; SMPS Header
     0000             (./engine/sound/Sm):00015                 SMPS_VOICE                   equ   0
     0002             (./engine/sound/Sm):00016                 SMPS_NB_FM                   equ   2
     0003             (./engine/sound/Sm):00017                 SMPS_NB_PSG                  equ   3
     0004             (./engine/sound/Sm):00018                 SMPS_TEMPO                   equ   4
     0004             (./engine/sound/Sm):00019                 SMPS_TEMPO_DELAY             equ   4
     0005             (./engine/sound/Sm):00020                 SMPS_DELAY                   equ   5
     0006             (./engine/sound/Sm):00021                 SMPS_TRK_HEADER              equ   6
     0008             (./engine/sound/Sm):00022                 SMPS_DAC_FLAG                equ   8
                      (./engine/sound/Sm):00023                 
                      (./engine/sound/Sm):00024                 ; SMPS Header (each track)
     0000             (./engine/sound/Sm):00025                 SMPS_TRK_DATA_PTR            equ   0 
     0002             (./engine/sound/Sm):00026                 SMPS_TRK_TR_VOL_PTR          equ   2
     0005             (./engine/sound/Sm):00027                 SMPS_TRK_ENV_PTR             equ   5
     0004             (./engine/sound/Sm):00028                 SMPS_TRK_FM_HDR_LEN          equ   4
     0006             (./engine/sound/Sm):00029                 SMPS_TRK_PSG_HDR_LEN         equ   6
                      (./engine/sound/Sm):00030                 
                      (./engine/sound/Sm):00031                 ; SMPS SFX Header
     0000             (./engine/sound/Sm):00032                 SMPS_SFX_VOICE               equ   0
     0002             (./engine/sound/Sm):00033                 SMPS_SFX_TEMPO               equ   2
     0002             (./engine/sound/Sm):00034                 SMPS_SFX_TEMPO_NB_CH         equ   2
     0003             (./engine/sound/Sm):00035                 SMPS_SFX_NB_CH               equ   3
     0004             (./engine/sound/Sm):00036                 SMPS_SFX_HDR_LEN             equ   4
                      (./engine/sound/Sm):00037                 
                      (./engine/sound/Sm):00038                 ; SMPS SFX Header (each track)
     0000             (./engine/sound/Sm):00039                 SMPS_SFX_TRK_CH              equ   0
     0002             (./engine/sound/Sm):00040                 SMPS_SFX_TRK_DATA_PTR        equ   2 
     0004             (./engine/sound/Sm):00041                 SMPS_SFX_TRK_TR_VOL_PTR      equ   4
     0006             (./engine/sound/Sm):00042                 SMPS_SFX_TRK_HDR_LEN         equ   6
                      (./engine/sound/Sm):00043                 
                      (./engine/sound/Sm):00044                 ; Hardware Addresses
     E7FF             (./engine/sound/Sm):00045                 PSG                          equ   $E7FF
     E7FC             (./engine/sound/Sm):00046                 YM2413_A0                    equ   $E7FC
     E7FD             (./engine/sound/Sm):00047                 YM2413_D0                    equ   $E7FD
                      (./engine/sound/Sm):00048                 
                      (./engine/sound/Sm):00049                 ******************************************************************************
                      (./engine/sound/Sm):00050                 
                      (./engine/sound/Sm):00051                 Track STRUCT
                      (./engine/sound/Sm):00052                                                                       ;         "playback control"; bits 
                      (./engine/sound/Sm):00053                                                                       ;         1 (02h)  seems to be "track is at rest"
                      (./engine/sound/Sm):00054                                                                       ;         2 (04h)  SFX is overriding this track
                      (./engine/sound/Sm):00055                                                                       ;         3 (08h)  modulation on
                      (./engine/sound/Sm):00056                                                                       ;         4 (10h)  do not attack next note
                      (./engine/sound/Sm):00057                                                                       ;         7 (80h)  track is playing
0000s                 (./engine/sound/Sm):00058                 PlaybackControl                rmb   1
                      (./engine/sound/Sm):00059                                                                       ;         "voice control"; bits 
                      (./engine/sound/Sm):00060                                                                       ;         0-3 (00h-0Fh) Channel number
                      (./engine/sound/Sm):00061                                                                       ;         7   (80h) PSG Track
                      (./engine/sound/Sm):00062                                                                       ;         PSG    Chn    |a| |00000|
                      (./engine/sound/Sm):00063                                                                       ;         Voice1 0x80 = 100  00000
                      (./engine/sound/Sm):00064                                                                       ;         Voice2 0xa0 = 101  00000
                      (./engine/sound/Sm):00065                                                                       ;         Voice3 0xc0 = 110  00000                                                      
                      (./engine/sound/Sm):00066                                                                       ;         Voice4 0xe0 = 111  00000                                                      
0001s                 (./engine/sound/Sm):00067                 VoiceControl                   rmb   1
                      (./engine/sound/Sm):00068                                                                       ;         "note control"; bits
                      (./engine/sound/Sm):00069                                                                       ;         0-3 (00h-0Fh) Current Block(0-2) and FNum(8)
                      (./engine/sound/Sm):00070                                                                       ;         4   (10h) Key On
                      (./engine/sound/Sm):00071                                                                       ;         5   (20h) Sustain On
0002s                 (./engine/sound/Sm):00072                 NoteControl                    rmb   1
0003s                 (./engine/sound/Sm):00073                 TempoDivider                   rmb   1                ; timing divisor; 1 = Normal, 2 = Half, 3 = Third...
0004s                 (./engine/sound/Sm):00074                 DataPointer                    rmb   2                ; Track's position
0006s                 (./engine/sound/Sm):00075                 Transpose                      rmb   1                ; Transpose (from coord flag E9)
0007s                 (./engine/sound/Sm):00076                 Volume                         rmb   1                ; Attenuation - (Dependency) Should follow Transpose
0008s                 (./engine/sound/Sm):00077                 VoiceIndex                     rmb   1                ; Current voice in use OR current PSG tone
0009s                 (./engine/sound/Sm):00078                 VolFlutter                     rmb   1                ; PSG flutter (dynamically effects PSG volume for decay effects)
000As                 (./engine/sound/Sm):00079                 StackPointer                   rmb   1                ; "Gosub" stack position offset (starts at 2Ah, i.e. end of track, and each jump decrements by 2)
000Bs                 (./engine/sound/Sm):00080                 DurationTimeout                rmb   1                ; current duration timeout; counting down to zero
000Cs                 (./engine/sound/Sm):00081                 SavedDuration                  rmb   1                ; last set duration (if a note follows a note, this is reapplied to 0Bh)
                      (./engine/sound/Sm):00082                                                                       ; 0Dh / 0Eh change a little depending on track -- essentially they hold data relevant to the next note to play
000Ds                 (./engine/sound/Sm):00083                 NextData                       rmb   2                ; DAC Next drum to play - FM/PSG  frequency
000Fs                 (./engine/sound/Sm):00084                 NoteFillTimeout                rmb   1                ; Currently set note fill; counts down to zero and then cuts off note
0010s                 (./engine/sound/Sm):00085                 NoteFillMaster                 rmb   1                ; Reset value for current note fill
0011s                 (./engine/sound/Sm):00086                 ModulationPtr                  rmb   2                ; address of current modulation setting
0013s                 (./engine/sound/Sm):00087                 ModulationWait                 rmb   1                ; Wait for ww period of time before modulation starts
0014s                 (./engine/sound/Sm):00088                 ModulationSpeed                rmb   1                ; Modulation Speed
0015s                 (./engine/sound/Sm):00089                 ModulationDelta                rmb   1                ; Modulation change per Mod. Step
0016s                 (./engine/sound/Sm):00090                 ModulationSteps                rmb   1                ; Number of steps in modulation (divided by 2)
0017s                 (./engine/sound/Sm):00091                 ModulationVal                  rmb   2                ; Current modulation value
0019s                 (./engine/sound/Sm):00092                 Detune                         rmb   1                ; Set by detune coord flag E1; used to add directly to FM/PSG frequency
001As                 (./engine/sound/Sm):00093                 VolTLMask                      rmb   1                ; zVolTLMaskTbl value set during voice setting (value based on algorithm indexing zGain table)
001Bs                 (./engine/sound/Sm):00094                 PSGNoise                       rmb   1                ; PSG noise setting
001Cs                 (./engine/sound/Sm):00095                 TLPtr                          rmb   2                ; where TL bytes of current voice begin (set during voice setting)
001Es                 (./engine/sound/Sm):00096                 InstrTranspose                 rmb   1                ; instrument transpose
                      (./engine/sound/Sm):00097                                                                       ;         "InstrAndVolume"; bits
                      (./engine/sound/Sm):00098                                                                       ;          FM Instr.  Attnenuation
                      (./engine/sound/Sm):00099                                                                       ; FM       0000       xxxx
                      (./engine/sound/Sm):00100                                                                       ; FM       0001       xxxx 
                      (./engine/sound/Sm):00101                                                                       ; ...  
                      (./engine/sound/Sm):00102                                                                       ; PSG      Chn    |a| |1Fh|
                      (./engine/sound/Sm):00103                                                                       ; VOL1     0x90 = 100 1xxxx        vol 4b xxxx = attenuation value
                      (./engine/sound/Sm):00104                                                                       ; VOL2     0xb0 = 101 1xxxx        vol 4b
                      (./engine/sound/Sm):00105                                                                       ; VOL3     0xd0 = 110 1xxxx        vol 4b
                      (./engine/sound/Sm):00106                                                                       ; VOL4     0xf0 = 111 1xxxx        vol 4b       
001Fs                 (./engine/sound/Sm):00107                 InstrAndVolume                 rmb   1                ; current instrument and volume
0020s                 (./engine/sound/Sm):00108                 LoopCounters                   rmb   $A               ; Loop counter index 0
                      (./engine/sound/Sm):00109                                                                       ;   ... open ...
                      (./engine/sound/Sm):00110                                                                       ; start of next track, every two bytes below this is a coord flag "gosub" (F8h) return stack
                      (./engine/sound/Sm):00111                                                                       ;
                      (./engine/sound/Sm):00112                                                                       ;        The bytes between +20h and +29h are "open"; starting at +20h and going up are possible loop counters
                      (./engine/sound/Sm):00113                                                                       ;        (for coord flag F7) while +2Ah going down (never AT 2Ah though) are stacked return addresses going
                      (./engine/sound/Sm):00114                                                                       ;        down after calling coord flag F8h.  Of course, this does mean collisions are possible with either
                      (./engine/sound/Sm):00115                                                                       ;        or other track memory if you're not careful with these!  No range checking is performed!
                      (./engine/sound/Sm):00116                                                                       ;
                      (./engine/sound/Sm):00117                                                                       ;        All tracks are 2Ah bytes long
002As                 (./engine/sound/Sm):00118                  ENDSTRUCT
                      (./engine/sound/Sm):00119                 
                      (./engine/sound/Sm):00120                 ; Track STRUCT Constants
     0000             (./engine/sound/Sm):00121                 PlaybackControl              equ   0
     0001             (./engine/sound/Sm):00122                 VoiceControl                 equ   1
     0002             (./engine/sound/Sm):00123                 NoteControl                  equ   2
     0003             (./engine/sound/Sm):00124                 TempoDivider                 equ   3
     0004             (./engine/sound/Sm):00125                 DataPointer                  equ   4
     0006             (./engine/sound/Sm):00126                 TranspAndVolume              equ   6
     0006             (./engine/sound/Sm):00127                 Transpose                    equ   6
     0007             (./engine/sound/Sm):00128                 Volume                       equ   7
     0008             (./engine/sound/Sm):00129                 VoiceIndex                   equ   8
     0009             (./engine/sound/Sm):00130                 VolFlutter                   equ   9
     000A             (./engine/sound/Sm):00131                 StackPointer                 equ   10
     000B             (./engine/sound/Sm):00132                 DurationTimeout              equ   11
     000C             (./engine/sound/Sm):00133                 SavedDuration                equ   12
     000D             (./engine/sound/Sm):00134                 NextData                     equ   13
     000F             (./engine/sound/Sm):00135                 NoteFillTimeout              equ   15
     0010             (./engine/sound/Sm):00136                 NoteFillMaster               equ   16
     0011             (./engine/sound/Sm):00137                 ModulationPtr                equ   17
     0013             (./engine/sound/Sm):00138                 ModulationWait               equ   19
     0014             (./engine/sound/Sm):00139                 ModulationSpeed              equ   20
     0015             (./engine/sound/Sm):00140                 ModulationDelta              equ   21
     0016             (./engine/sound/Sm):00141                 ModulationSteps              equ   22
     0017             (./engine/sound/Sm):00142                 ModulationVal                equ   23
     0019             (./engine/sound/Sm):00143                 Detune                       equ   25
     001A             (./engine/sound/Sm):00144                 VolTLMask                    equ   26
     001B             (./engine/sound/Sm):00145                 PSGNoise                     equ   27
     001C             (./engine/sound/Sm):00146                 TLPtr                        equ   28
     001E             (./engine/sound/Sm):00147                 InstrTranspose               equ   30 
     001F             (./engine/sound/Sm):00148                 InstrAndVolume               equ   31 
     0020             (./engine/sound/Sm):00149                 LoopCounters                 equ   32   
     002A             (./engine/sound/Sm):00150                 GoSubStack                   equ   42
                      (./engine/sound/Sm):00151                 
                      (./engine/sound/Sm):00152                 ******************************************************************************
                      (./engine/sound/Sm):00153                 
                      (./engine/sound/Sm):00154                 SmpsVar STRUCT
0000s                 (./engine/sound/Sm):00155                 SFXPriorityVal                 rmb   1        
0001s                 (./engine/sound/Sm):00156                 TempoTimeout                   rmb   1        
0002s                 (./engine/sound/Sm):00157                 CurrentTempo                   rmb   1                ; Stores current tempo value here
0003s                 (./engine/sound/Sm):00158                 StopMusic                      rmb   1                ; Set to 7Fh to pause music, set to 80h to unpause. Otherwise 00h
0004s                 (./engine/sound/Sm):00159                 FadeOutCounter                 rmb   1        
0005s                 (./engine/sound/Sm):00160                 FadeOutDelay                   rmb   1        
0006s                 (./engine/sound/Sm):00161                 QueueToPlay                    rmb   1                ; if NOT set to 80h, means new index was requested by 68K
0007s                 (./engine/sound/Sm):00162                 SFXToPlay                      rmb   2                ; When Genesis wants to play "normal" sound, it writes it here
0009s                 (./engine/sound/Sm):00163                 VoiceTblPtr                    rmb   2                ; address of the voices
000Bs                 (./engine/sound/Sm):00164                 SFXVoiceTblPtr                 rmb   2                ; address of the SFX voices
000Ds                 (./engine/sound/Sm):00165                 FadeInFlag                     rmb   1        
000Es                 (./engine/sound/Sm):00166                 FadeInDelay                    rmb   1        
000Fs                 (./engine/sound/Sm):00167                 FadeInCounter                  rmb   1        
0010s                 (./engine/sound/Sm):00168                 1upPlaying                     rmb   1        
0011s                 (./engine/sound/Sm):00169                 TempoMod                       rmb   1        
0012s                 (./engine/sound/Sm):00170                 TempoTurbo                     rmb   1                ; Stores the tempo if speed shoes are acquired (or 7Bh is played anywho)
0013s                 (./engine/sound/Sm):00171                 SpeedUpFlag                    rmb   1        
0014s                 (./engine/sound/Sm):00172                 DACEnabled                     rmb   1                
0015s                 (./engine/sound/Sm):00173                 60HzData                       rmb   1                ; 1: play 60hz track at 50hz, 0: do not skip frames
0016s                 (./engine/sound/Sm):00174                  ENDSTRUCT
                      (./engine/sound/Sm):00175                 
                      (./engine/sound/Sm):00176                 ******************************************************************************
                      (./engine/sound/Sm):00177                 
7D2F                  (./engine/sound/Sm):00178                 StructStart
7D2F                  (./engine/sound/Sm):00179                 Smps          SmpsVar
                      (./engine/sound/Sm):00180                 
7D45                  (./engine/sound/Sm):00181                 tracksStart                ; This is the beginning of all BGM track memory
7D45                  (./engine/sound/Sm):00182                 SongDACFMStart
7D45                  (./engine/sound/Sm):00183                 SongDAC         Track
7D6F                  (./engine/sound/Sm):00184                 SongFMStart
7D6F                  (./engine/sound/Sm):00185                 SongFM1         Track
7D99                  (./engine/sound/Sm):00186                 SongFM2         Track
7DC3                  (./engine/sound/Sm):00187                 SongFM3         Track
7DED                  (./engine/sound/Sm):00188                 SongFM4         Track
7E17                  (./engine/sound/Sm):00189                 SongFM5         Track
7E41                  (./engine/sound/Sm):00190                 SongFM6         Track
7E6B                  (./engine/sound/Sm):00191                 SongFM7         Track
7E95                  (./engine/sound/Sm):00192                 SongFM8         Track
7EBF                  (./engine/sound/Sm):00193                 SongFM9         Track
7EE9                  (./engine/sound/Sm):00194                 SongFMEnd
7EE9                  (./engine/sound/Sm):00195                 SongDACFMEnd
7EE9                  (./engine/sound/Sm):00196                 SongPSGStart
7EE9                  (./engine/sound/Sm):00197                 SongPSG1        Track
7F13                  (./engine/sound/Sm):00198                 SongPSG2        Track
7F3D                  (./engine/sound/Sm):00199                 SongPSG3        Track
                      (./engine/sound/Sm):00200                 ;SongPSG4        Track
7F67                  (./engine/sound/Sm):00201                 SongPSGEnd
7F67                  (./engine/sound/Sm):00202                 tracksEnd
                      (./engine/sound/Sm):00203                 
7F67                  (./engine/sound/Sm):00204                 tracksSFXStart
7F67                  (./engine/sound/Sm):00205                 SFXFMStart
7F67                  (./engine/sound/Sm):00206                 SFXFM3          Track
7F91                  (./engine/sound/Sm):00207                 SFXFM4          Track
7FBB                  (./engine/sound/Sm):00208                 SFXFM5          Track
7FE5                  (./engine/sound/Sm):00209                 SFXFMEnd
7FE5                  (./engine/sound/Sm):00210                 SFXPSGStart
7FE5                  (./engine/sound/Sm):00211                 SFXPSG1         Track
800F                  (./engine/sound/Sm):00212                 SFXPSG2         Track
8039                  (./engine/sound/Sm):00213                 SFXPSG3         Track
8063                  (./engine/sound/Sm):00214                 SFXPSGEnd
8063                  (./engine/sound/Sm):00215                 tracksSFXEnd
8063                  (./engine/sound/Sm):00216                 StructEnd
                      (./engine/sound/Sm):00217                 
                      (./engine/sound/Sm):00218                         ; I want struct data to be in binary please ...
                      (./engine/sound/Sm):00219                         ; VoiceControl is hardcoded
                      (./engine/sound/Sm):00220                         
                      (./engine/sound/Sm):00221                         org   StructStart                
7D2F 0000000000000000 (./engine/sound/Sm):00222                         fill  0,sizeof{SmpsVar}
     0000000000000000
     000000000000
7D45 0006             (./engine/sound/Sm):00223                         fdb   $0006
7D47 0000000000000000 (./engine/sound/Sm):00224                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7D6F 0000             (./engine/sound/Sm):00225                         fdb   $0000
7D71 0000000000000000 (./engine/sound/Sm):00226                         fill  0,sizeof{Track}-2        
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7D99 0001             (./engine/sound/Sm):00227                         fdb   $0001
7D9B 0000000000000000 (./engine/sound/Sm):00228                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7DC3 0002             (./engine/sound/Sm):00229                         fdb   $0002
7DC5 0000000000000000 (./engine/sound/Sm):00230                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7DED 0003             (./engine/sound/Sm):00231                         fdb   $0003
7DEF 0000000000000000 (./engine/sound/Sm):00232                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7E17 0004             (./engine/sound/Sm):00233                         fdb   $0004
7E19 0000000000000000 (./engine/sound/Sm):00234                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7E41 0005             (./engine/sound/Sm):00235                         fdb   $0005
7E43 0000000000000000 (./engine/sound/Sm):00236                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7E6B 0006             (./engine/sound/Sm):00237                         fdb   $0006
7E6D 0000000000000000 (./engine/sound/Sm):00238                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7E95 0007             (./engine/sound/Sm):00239                         fdb   $0007
7E97 0000000000000000 (./engine/sound/Sm):00240                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7EBF 0008             (./engine/sound/Sm):00241                         fdb   $0008
7EC1 0000000000000000 (./engine/sound/Sm):00242                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7EE9 0080             (./engine/sound/Sm):00243                         fdb   $0080
7EEB 0000000000000000 (./engine/sound/Sm):00244                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7F13 00A0             (./engine/sound/Sm):00245                         fdb   $00A0
7F15 0000000000000000 (./engine/sound/Sm):00246                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7F3D 00C0             (./engine/sound/Sm):00247                         fdb   $00C0
7F3F 0000000000000000 (./engine/sound/Sm):00248                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (./engine/sound/Sm):00249                         ;fdb   $00E0
                      (./engine/sound/Sm):00250                         ;fill  0,sizeof{Track}-2
7F67 0003             (./engine/sound/Sm):00251                         fdb   $0003
7F69 0000000000000000 (./engine/sound/Sm):00252                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7F91 0004             (./engine/sound/Sm):00253                         fdb   $0004
7F93 0000000000000000 (./engine/sound/Sm):00254                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7FBB 0005             (./engine/sound/Sm):00255                         fdb   $0005
7FBD 0000000000000000 (./engine/sound/Sm):00256                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
7FE5 0080             (./engine/sound/Sm):00257                         fdb   $0080
7FE7 0000000000000000 (./engine/sound/Sm):00258                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
800F 00A0             (./engine/sound/Sm):00259                         fdb   $00A0
8011 0000000000000000 (./engine/sound/Sm):00260                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
8039 00C0             (./engine/sound/Sm):00261                         fdb   $00C0
803B 0000000000000000 (./engine/sound/Sm):00262                         fill  0,sizeof{Track}-2
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (./engine/sound/Sm):00263                                 
                      (./engine/sound/Sm):00264                 ******************************************************************************
                      (./engine/sound/Sm):00265                 
8063 00               (./engine/sound/Sm):00266                 PALUpdTick      fcb   0     ; this counts from 0 to 5 to periodically "double update" for PAL systems (basically every 6 frames you need to update twice to keep up)
8064 00               (./engine/sound/Sm):00267                 DoSFXFlag       fcb   0     ; flag to indicate we're updating SFX (and thus use custom voice table); set to FFh while doing SFX, 0 when not.
8065 00               (./engine/sound/Sm):00268                 Paused          fcb   0     ; 0 = normal, -1 = pause all sound and music
8066 00               (./engine/sound/Sm):00269                 SongDelay       fcb   0     ; song header delay
                      (./engine/sound/Sm):00270                 
8067 00               (./engine/sound/Sm):00271                 MusicPage       fcb   0     ; memory page of music data
8068 00               (./engine/sound/Sm):00272                 SoundPage       fcb   0     ; memory page of sound data
8069 0000             (./engine/sound/Sm):00273                 MusicData       fdb   0     ; address of song data
806B 0000             (./engine/sound/Sm):00274                 SoundData       fdb   0     ; address of sound data
                      (./engine/sound/Sm):00275                 
                      (./engine/sound/Sm):00276                 
     000D             (./engine/sound/Sm):00277                 MUSIC_TRACK_COUNT = (tracksEnd-tracksStart)/sizeof{Track}
     000A             (./engine/sound/Sm):00278                 MUSIC_DAC_FM_TRACK_COUNT = (SongDACFMEnd-SongDACFMStart)/sizeof{Track}
     0009             (./engine/sound/Sm):00279                 MUSIC_FM_TRACK_COUNT = (SongFMEnd-SongFMStart)/sizeof{Track}
     0003             (./engine/sound/Sm):00280                 MUSIC_PSG_TRACK_COUNT = (SongPSGEnd-SongPSGStart)/sizeof{Track}
                      (./engine/sound/Sm):00281                 
     0006             (./engine/sound/Sm):00282                 SFX_TRACK_COUNT = (tracksSFXEnd-tracksSFXStart)/sizeof{Track}
     0003             (./engine/sound/Sm):00283                 SFXFM_TRACK_COUNT = (SFXFMEnd-SFXFMStart)/sizeof{Track}
     0003             (./engine/sound/Sm):00284                 SFXPSG_TRACK_COUNT = (SFXPSGEnd-SFXPSGStart)/sizeof{Track}
                      (./engine/sound/Sm):00285                 
                      (./engine/sound/Sm):00286                 ******************************************************************************
                      (./engine/sound/Sm):00287                 * writes to YM2413 with required waits
                      (./engine/sound/Sm):00288                 ******************************************************************************
                      (./engine/sound/Sm):00289                 
806D                  (./engine/sound/Sm):00290                 _WriteYM MACRO
                      (./engine/sound/Sm):00291                         sta   YM2413_A0
                      (./engine/sound/Sm):00292                         nop
                      (./engine/sound/Sm):00293                         nop
                      (./engine/sound/Sm):00294                         stb   YM2413_D0
                      (./engine/sound/Sm):00295                  ENDM  
                      (./engine/sound/Sm):00296                 
806D                  (./engine/sound/Sm):00297                 _YMBusyWait5 MACRO
                      (./engine/sound/Sm):00298                         nop                                        
                      (./engine/sound/Sm):00299                         brn   *
                      (./engine/sound/Sm):00300                  ENDM
                      (./engine/sound/Sm):00301                 
806D                  (./engine/sound/Sm):00302                 _YMBusyWait9 MACRO
                      (./engine/sound/Sm):00303                         nop
                      (./engine/sound/Sm):00304                         nop
                      (./engine/sound/Sm):00305                         nop
                      (./engine/sound/Sm):00306                         brn   *
                      (./engine/sound/Sm):00307                  ENDM
                      (./engine/sound/Sm):00308                  
806D                  (./engine/sound/Sm):00309                 _YMBusyWait11 MACRO
                      (./engine/sound/Sm):00310                         nop
                      (./engine/sound/Sm):00311                         nop
                      (./engine/sound/Sm):00312                         nop
                      (./engine/sound/Sm):00313                         nop
                      (./engine/sound/Sm):00314                         brn   *
                      (./engine/sound/Sm):00315                  ENDM
                      (./engine/sound/Sm):00316                  
806D                  (./engine/sound/Sm):00317                 _YMBusyWait19 MACRO
                      (./engine/sound/Sm):00318                         exg   a,b
                      (./engine/sound/Sm):00319                         exg   a,b
                      (./engine/sound/Sm):00320                         brn   *
                      (./engine/sound/Sm):00321                  ENDM
                      (./engine/sound/Sm):00322                 
                      (./engine/sound/Sm):00323                 ******************************************************************************
                      (./engine/sound/Sm):00324                 * Setup YM2413 for Drum Mode
                      (./engine/sound/Sm):00325                 * destroys A, B
                      (./engine/sound/Sm):00326                 ******************************************************************************
                      (./engine/sound/Sm):00327                 
806D                  (./engine/sound/Sm):00328                 YM2413_DrumModeOn
806D 3416             (./engine/sound/Sm):00329 [9]     8144            pshs  d,x
806F 8E8094           (./engine/sound/Sm):00330 [3]     8147            ldx   #@data
8072 EC81             (./engine/sound/Sm):00331 [8]     8155    @a      ldd   ,x++
8074 2B0D             (./engine/sound/Sm):00332 [3]     8158            bmi   @end
                      (./engine/sound/Sm):00333                         _WriteYM
8076 B7E7FC           (         _WriteYM):00001 [5]     8163            sta   YM2413_A0
8079 12               (         _WriteYM):00002 [2]     8165            nop
807A 12               (         _WriteYM):00003 [2]     8167            nop
807B F7E7FD           (         _WriteYM):00004 [5]     8172            stb   YM2413_D0
                      (./engine/sound/Sm):00334                         _YMBusyWait5
807E 12               (     _YMBusyWait5):00001 [2]     8174            nop                                        
807F 21FE             (     _YMBusyWait5):00002 [3]     8177            brn   *
8081 20EF             (./engine/sound/Sm):00335 [3]     8180            bra   @a
8083 8605             (./engine/sound/Sm):00336 [2]     8182    @end    lda   #$05                     ; saves values for FMSilenceAll routine
8085 B77E6D           (./engine/sound/Sm):00337 [5]     8187            sta   SongFM7.NoteControl 
8088 8605             (./engine/sound/Sm):00338 [2]     8189            lda   #$05
808A B77E97           (./engine/sound/Sm):00339 [5]     8194            sta   SongFM8.NoteControl
808D 8601             (./engine/sound/Sm):00340 [2]     8196            lda   #$01
808F B77EC1           (./engine/sound/Sm):00341 [5]     8201            sta   SongFM9.NoteControl                
8092 3596             (./engine/sound/Sm):00342 [11]    8212            puls  d,x,pc       
8094                  (./engine/sound/Sm):00343                 @data
8094 0E20             (./engine/sound/Sm):00344                         fdb   $0E20
8096 1620             (./engine/sound/Sm):00345                         fdb   $1620
8098 1750             (./engine/sound/Sm):00346                         fdb   $1750 ; recommended setting is $1750 and $2705 for snare but $1700 and $2700 gives better SD sound (noise), affects HH that will sound more like a cowbell 
809A 18C0             (./engine/sound/Sm):00347                         fdb   $18C0
809C 2605             (./engine/sound/Sm):00348                         fdb   $2605 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
809E 2705             (./engine/sound/Sm):00349                         fdb   $2705 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
80A0 2801             (./engine/sound/Sm):00350                         fdb   $2801 ; (dependency) if modified, change hardcoded value at DrumModeOn end label
80A2 36F2             (./engine/sound/Sm):00351                         fdb   $36F2 ; drum at max vol        
80A4 3762             (./engine/sound/Sm):00352                         fdb   $3762 ; drum at max vol
80A6 3844             (./engine/sound/Sm):00353                         fdb   $3844 ; drum at max vol
80A8 FF               (./engine/sound/Sm):00354                         fcb   $FF
                      (./engine/sound/Sm):00355                         
                      (./engine/sound/Sm):00356                 ******************************************************************************
                      (./engine/sound/Sm):00357                 * InitMusicPlayback
                      (./engine/sound/Sm):00358                 * 
                      (./engine/sound/Sm):00359                 ******************************************************************************
                      (./engine/sound/Sm):00360                 
80A9                  (./engine/sound/Sm):00361                 InitMusicPlayback
80A9 BD80B0           (./engine/sound/Sm):00362 [8]     8220            jsr   FMSilenceAll
80AC BD80D9           (./engine/sound/Sm):00363 [8]     8228            jsr   PSGSilenceAll
80AF 39               (./engine/sound/Sm):00364 [5]     8233            rts
                      (./engine/sound/Sm):00365                 
                      (./engine/sound/Sm):00366                 ******************************************************************************
                      (./engine/sound/Sm):00367                 * FMSilenceAll
                      (./engine/sound/Sm):00368                 * destroys A, B, Y
                      (./engine/sound/Sm):00369                 ******************************************************************************
                      (./engine/sound/Sm):00370                 
80B0                  (./engine/sound/Sm):00371                 FMSilenceAll
80B0 CC200E           (./engine/sound/Sm):00372 [3]     8236            ldd   #$200E
80B3 F7E7FC           (./engine/sound/Sm):00373 [5]     8241            stb   YM2413_A0
80B6 108E7D71         (./engine/sound/Sm):00374 [4]     8245            ldy   #SongFM1.NoteControl
80BA B7E7FD           (./engine/sound/Sm):00375 [5]     8250            sta   YM2413_D0                ; note off for all drums     
                      (./engine/sound/Sm):00376                         _YMBusyWait5
80BD 12               (     _YMBusyWait5):00001 [2]     8252            nop                                        
80BE 21FE             (     _YMBusyWait5):00002 [3]     8255            brn   *
                      (./engine/sound/Sm):00377                         _YMBusyWait5        
80C0 12               (     _YMBusyWait5):00001 [2]     8257            nop                                        
80C1 21FE             (     _YMBusyWait5):00002 [3]     8260            brn   *
                      (./engine/sound/Sm):00378                                 
80C3                  (./engine/sound/Sm):00379                 @a      _YMBusyWait5                   ; total wait btw two notes : 20 cycles
80C3 12               (     _YMBusyWait5):00001 [2]     8262            nop                                        
80C4 21FE             (     _YMBusyWait5):00002 [3]     8265            brn   *
80C6 E6A4             (./engine/sound/Sm):00380 [4]     8269            ldb   ,y                       ; (wait of 4 cycles)
80C8 B7E7FC           (./engine/sound/Sm):00381 [5]     8274            sta   YM2413_A0
80CB C4EF             (./engine/sound/Sm):00382 [2]     8276            andb  #$EF                     ; note off for each track
80CD 4C               (./engine/sound/Sm):00383 [2]     8278            inca
80CE F7E7FD           (./engine/sound/Sm):00384 [5]     8283            stb   YM2413_D0
80D1 31A82A           (./engine/sound/Sm):00385 [5]     8288            leay  sizeof{Track},y          ; (wait of 5 cycles)        
80D4 8129             (./engine/sound/Sm):00386 [2]     8290            cmpa  #$29                     ; (wait of 2 cycles)
80D6 26EB             (./engine/sound/Sm):00387 [3]     8293            bne   @a                       ; (wait of 3 cycles)
80D8 39               (./engine/sound/Sm):00388 [5]     8298            rts
                      (./engine/sound/Sm):00389                 
                      (./engine/sound/Sm):00390                 ******************************************************************************
                      (./engine/sound/Sm):00391                 * PSGSilenceAll
                      (./engine/sound/Sm):00392                 * destroys A
                      (./engine/sound/Sm):00393                 ******************************************************************************
                      (./engine/sound/Sm):00394                         
80D9                  (./engine/sound/Sm):00395                 PSGSilenceAll
80D9 869F             (./engine/sound/Sm):00396 [2]     8300            lda   #$9F
80DB B7E7FF           (./engine/sound/Sm):00397 [5]     8305            sta   PSG
80DE 86BF             (./engine/sound/Sm):00398 [2]     8307            lda   #$BF
80E0 B7E7FF           (./engine/sound/Sm):00399 [5]     8312            sta   PSG       
80E3 86DF             (./engine/sound/Sm):00400 [2]     8314            lda   #$DF
80E5 B7E7FF           (./engine/sound/Sm):00401 [5]     8319            sta   PSG
80E8 86FF             (./engine/sound/Sm):00402 [2]     8321            lda   #$FF
80EA B7E7FF           (./engine/sound/Sm):00403 [5]     8326            sta   PSG                               
80ED 39               (./engine/sound/Sm):00404 [5]     8331            rts        
                      (./engine/sound/Sm):00405                 
                      (./engine/sound/Sm):00406                 ******************************************************************************
                      (./engine/sound/Sm):00407                 * PlayMusic - Load a new music and init all tracks
                      (./engine/sound/Sm):00408                 *
                      (./engine/sound/Sm):00409                 * receives in X the address of the song
                      (./engine/sound/Sm):00410                 * destroys X
                      (./engine/sound/Sm):00411                 ******************************************************************************
                      (./engine/sound/Sm):00412                 
80EE                  (./engine/sound/Sm):00413                 PlayMusic
80EE                  (./engine/sound/Sm):00414                 BGMLoad
80EE 3466             (./engine/sound/Sm):00415 [11]    8342            pshs  d,y,u
                      (./engine/sound/Sm):00416                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
80F0 BD7949           (    _GetCartPageA):00002 [8]     8350            jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
80F3 B78161           (./engine/sound/Sm):00417 [5]     8355            sta   BGMLoad_end+1            ; backup data page
                      (./engine/sound/Sm):00418                                 
80F6 A684             (./engine/sound/Sm):00419 [4]     8359            lda   ,x                       ; get memory page that contains track data
80F8 B78067           (./engine/sound/Sm):00420 [5]     8364            sta   MusicPage
80FB AE01             (./engine/sound/Sm):00421 [6]     8370            ldx   1,x                      ; get ptr to track data
80FD BF8069           (./engine/sound/Sm):00422 [6]     8376            stx   MusicData
                      (./engine/sound/Sm):00423                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
8100 BD78F1           (    _SetCartPageA):00002 [8]     8384            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/sound/Sm):00424                 
8103 BD80A9           (./engine/sound/Sm):00425 [8]     8392            jsr   InitMusicPlayback
8106 EC84             (./engine/sound/Sm):00426 [5]     8397            ldd   SMPS_VOICE,x
8108 F38069           (./engine/sound/Sm):00427 [7]     8404            addd  MusicData   
810B FD7D38           (./engine/sound/Sm):00428 [6]     8410            std   Smps.VoiceTblPtr
                      (./engine/sound/Sm):00429                         
810E EC04             (./engine/sound/Sm):00430 [6]     8416            ldd   SMPS_TEMPO_DELAY,x
8110 B78066           (./engine/sound/Sm):00431 [5]     8421            sta   SongDelay
8113 F77D40           (./engine/sound/Sm):00432 [5]     8426            stb   Smps.TempoMod
8116 F77D31           (./engine/sound/Sm):00433 [5]     8431            stb   Smps.CurrentTempo
8119 F77D30           (./engine/sound/Sm):00434 [5]     8436            stb   Smps.TempoTimeout
                      (./engine/sound/Sm):00435                         
811C 8605             (./engine/sound/Sm):00436 [2]     8438            lda   #$05
811E B78063           (./engine/sound/Sm):00437 [5]     8443            sta   PALUpdTick
                      (./engine/sound/Sm):00438                         
8121 A602             (./engine/sound/Sm):00439 [5]     8448            lda   SMPS_NB_FM,x
8123 B78137           (./engine/sound/Sm):00440 [5]     8453            sta   @fm+1
8126 3306             (./engine/sound/Sm):00441 [5]     8458            leau  SMPS_TRK_HEADER,x
8128 EC08             (./engine/sound/Sm):00442 [6]     8464            ldd   SMPS_DAC_FLAG,x
812A 260A             (./engine/sound/Sm):00443 [3]     8467            bne   @fm                      ; no DRUM track found (should be $0000 to be DRUM)
812C 108E7D45         (./engine/sound/Sm):00444 [4]     8471            ldy   #SongDAC
8130 BD8167           (./engine/sound/Sm):00445 [8]     8479            jsr   InitTrackFM              ; DRUM mode use channel 6-8
8133 7A8137           (./engine/sound/Sm):00446 [7]     8486            dec   @fm+1                    ; DAC track is part of FM nb channel count
8136                  (./engine/sound/Sm):00447                 @fm      
8136 8600             (./engine/sound/Sm):00448 [2]     8488            lda   #$00                     ; (dynamic) nb of FM tracks to init
8138 108E7D6F         (./engine/sound/Sm):00449 [4]     8492            ldy   #SongFM1                 ; Init all FM tracks
813C 7A8137           (./engine/sound/Sm):00450 [7]     8499    @fmlp   dec   @fm+1
813F 2B05             (./engine/sound/Sm):00451 [3]     8502            bmi   @psg     
8141 BD8167           (./engine/sound/Sm):00452 [8]     8510            jsr   InitTrackFM
8144 20F6             (./engine/sound/Sm):00453 [3]     8513            bra   @fmlp
8146                  (./engine/sound/Sm):00454                 @psg    
8146 86C0             (./engine/sound/Sm):00455 [2]     8515            lda   #$C0                     ; set back Tone channel for PSG3 (can be switched to noise by cfSetPSGNoise)
8148 B77F3E           (./engine/sound/Sm):00456 [5]     8520            sta   SongPSG3.VoiceControl
814B A603             (./engine/sound/Sm):00457 [5]     8525            lda   SMPS_NB_PSG,x
814D B78151           (./engine/sound/Sm):00458 [5]     8530            sta   >*+4
8150 8600             (./engine/sound/Sm):00459 [2]     8532    @dyn    lda   #$00                     ; (dynamic) nb of PSG tracks to init
8152 108E7EE9         (./engine/sound/Sm):00460 [4]     8536            ldy   #SongPSG1                ; Init all PSG tracks
8156 7A8151           (./engine/sound/Sm):00461 [7]     8543    @psglp  dec   @dyn+1
8159 2B05             (./engine/sound/Sm):00462 [3]     8546            bmi   BGMLoad_end     
815B BD8188           (./engine/sound/Sm):00463 [8]     8554            jsr   InitTrackPSG
815E 20F6             (./engine/sound/Sm):00464 [3]     8557            bra   @psglp
                      (./engine/sound/Sm):00465                 
8160                  (./engine/sound/Sm):00466                 BGMLoad_end
8160 8600             (./engine/sound/Sm):00467 [2]     8559            lda   #0                       ; (dynamic) set back data page
                      (./engine/sound/Sm):00468                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
8162 BD78F1           (    _SetCartPageA):00002 [8]     8567            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8165 35E6             (./engine/sound/Sm):00469 [13]    8580            puls  d,y,u,pc
                      (./engine/sound/Sm):00470                 
8167                  (./engine/sound/Sm):00471                 InitTrackFM
8167 B68066           (./engine/sound/Sm):00472 [5]     8585            lda   SongDelay        
816A A723             (./engine/sound/Sm):00473 [5]     8590            sta   TempoDivider,y
816C CC8201           (./engine/sound/Sm):00474 [3]     8593            ldd   #$8201
816F A7A4             (./engine/sound/Sm):00475 [4]     8597            sta   PlaybackControl,y
8171 E72B             (./engine/sound/Sm):00476 [5]     8602            stb   DurationTimeout,y
8173 C62A             (./engine/sound/Sm):00477 [2]     8604            ldb   #GoSubStack
8175 E72A             (./engine/sound/Sm):00478 [5]     8609            stb   StackPointer,y
8177 ECC4             (./engine/sound/Sm):00479 [5]     8614            ldd   SMPS_TRK_DATA_PTR,u
8179 F38069           (./engine/sound/Sm):00480 [7]     8621            addd  MusicData
817C ED24             (./engine/sound/Sm):00481 [6]     8627            std   DataPointer,y
817E EC42             (./engine/sound/Sm):00482 [6]     8633            ldd   SMPS_TRK_TR_VOL_PTR,u
8180 ED26             (./engine/sound/Sm):00483 [6]     8639            std   TranspAndVolume,y
8182 3344             (./engine/sound/Sm):00484 [5]     8644            leau  SMPS_TRK_FM_HDR_LEN,u
8184 31A82A           (./engine/sound/Sm):00485 [5]     8649            leay  sizeof{Track},y
8187 39               (./engine/sound/Sm):00486 [5]     8654            rts       
                      (./engine/sound/Sm):00487                  
8188                  (./engine/sound/Sm):00488                 InitTrackPSG
8188 B68066           (./engine/sound/Sm):00489 [5]     8659            lda   SongDelay        
818B A723             (./engine/sound/Sm):00490 [5]     8664            sta   TempoDivider,y
818D CC8201           (./engine/sound/Sm):00491 [3]     8667            ldd   #$8201
8190 A7A4             (./engine/sound/Sm):00492 [4]     8671            sta   PlaybackControl,y
8192 E72B             (./engine/sound/Sm):00493 [5]     8676            stb   DurationTimeout,y
8194 C62A             (./engine/sound/Sm):00494 [2]     8678            ldb   #GoSubStack
8196 E72A             (./engine/sound/Sm):00495 [5]     8683            stb   StackPointer,y        
8198 ECC4             (./engine/sound/Sm):00496 [5]     8688            ldd   SMPS_TRK_DATA_PTR,u
819A F38069           (./engine/sound/Sm):00497 [7]     8695            addd  MusicData
819D ED24             (./engine/sound/Sm):00498 [6]     8701            std   DataPointer,y
819F EC42             (./engine/sound/Sm):00499 [6]     8707            ldd   SMPS_TRK_TR_VOL_PTR,u
81A1 ED26             (./engine/sound/Sm):00500 [6]     8713            std   TranspAndVolume,y
81A3 A645             (./engine/sound/Sm):00501 [5]     8718            lda   SMPS_TRK_ENV_PTR,u
81A5 A728             (./engine/sound/Sm):00502 [5]     8723            sta   VoiceIndex,y
81A7 3346             (./engine/sound/Sm):00503 [5]     8728            leau  SMPS_TRK_PSG_HDR_LEN,u
81A9 31A82A           (./engine/sound/Sm):00504 [5]     8733            leay  sizeof{Track},y
81AC 39               (./engine/sound/Sm):00505 [5]     8738            rts        
                      (./engine/sound/Sm):00506                         
                      (./engine/sound/Sm):00507                 ******************************************************************************
                      (./engine/sound/Sm):00508                 * MusicFrame - processes a music frame (VInt)
                      (./engine/sound/Sm):00509                 *
                      (./engine/sound/Sm):00510                 * SMPS Song Data
                      (./engine/sound/Sm):00511                 * --------------
                      (./engine/sound/Sm):00512                 * value in range [$00, $7F] : Duration value
                      (./engine/sound/Sm):00513                 * value in range [$80]      : Rest (counts as a note value)
                      (./engine/sound/Sm):00514                 * value in range [$81, $DF] : Note value
                      (./engine/sound/Sm):00515                 * value in range [$E0, $FF] : Coordination flag
                      (./engine/sound/Sm):00516                 *
                      (./engine/sound/Sm):00517                 * destroys A,B,X,Y
                      (./engine/sound/Sm):00518                 ******************************************************************************
                      (./engine/sound/Sm):00519                 
81AD                  (./engine/sound/Sm):00520                 _UpdateTrack MACRO
                      (./engine/sound/Sm):00521                         lda   \1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
                      (./engine/sound/Sm):00522                         bpl   a@
                      (./engine/sound/Sm):00523                         ldy   #\1                               
                      (./engine/sound/Sm):00524                         jsr   \2                       ; If so, UpdateTrack
81AD                  (./engine/sound/Sm):00525                 a@      equ   *        
                      (./engine/sound/Sm):00526                  ENDM
                      (./engine/sound/Sm):00527                         
81AD                  (./engine/sound/Sm):00528                 MusicFrame 
                      (./engine/sound/Sm):00529                         
                      (./engine/sound/Sm):00530                         ; simple sound fx implementation with no priority
                      (./engine/sound/Sm):00531                         ; TODO upgrade to a queue system like original code
81AD BE7D36           (./engine/sound/Sm):00532 [6]     8744            ldx   Smps.SFXToPlay           ; get last requested sound effect to play
81B0 2709             (./engine/sound/Sm):00533 [3]     8747            beq   @a                       ; 0 means no sound effect to play
81B2 BD8970           (./engine/sound/Sm):00534 [8]     8755            jsr   PlaySound
81B5 CC0000           (./engine/sound/Sm):00535 [3]     8758            ldd   #0                       ; reset to be able to play another effect from now
81B8 FD7D36           (./engine/sound/Sm):00536 [6]     8764            std   Smps.SFXToPlay
81BB                  (./engine/sound/Sm):00537                 @a       
81BB B68067           (./engine/sound/Sm):00538 [5]     8769            lda   MusicPage                ; page switch to the music
81BE 10270095         (./engine/sound/Sm):00539 [5+?]   8774            lbeq  UpdateSound              ; no music to play
                      (./engine/sound/Sm):00540                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
81C2 BD78F1           (    _SetCartPageA):00002 [8]     8782            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
81C5 7F8064           (./engine/sound/Sm):00541 [7]     8789            clr   DoSFXFlag
                      (./engine/sound/Sm):00542                 
81C8                  (./engine/sound/Sm):00543                 UpdateEverything        
81C8 B67D44           (./engine/sound/Sm):00544 [5]     8794            lda   Smps.60HzData            ; TODO use SMPS relocate to convert timings
81CB 270D             (./engine/sound/Sm):00545 [3]     8797            beq   @a                       ; to play 60hz songs at 50hz at normal speed
81CD 7A8063           (./engine/sound/Sm):00546 [7]     8804            dec   PALUpdTick               ; this will allow to throw away this code
81D0 2608             (./engine/sound/Sm):00547 [3]     8807            bne   @a
81D2 8605             (./engine/sound/Sm):00548 [2]     8809            lda   #5
81D4 B78063           (./engine/sound/Sm):00549 [5]     8814            sta   PALUpdTick
81D7 BD81DF           (./engine/sound/Sm):00550 [8]     8822            jsr   UpdateMusic              ; play 2 frames in one to keep original speed
81DA BD81DF           (./engine/sound/Sm):00551 [8]     8830    @a      jsr   UpdateMusic              ; play 2 frames in one to keep original speed
81DD 2078             (./engine/sound/Sm):00552 [3]     8833            bra   UpdateSound
                      (./engine/sound/Sm):00553                 
81DF                  (./engine/sound/Sm):00554                 UpdateMusic
                      (./engine/sound/Sm):00555                         * jsr   TempoWait              ; optim : do not call TempoWait, instead skip update
81DF B67D31           (./engine/sound/Sm):00556 [5]     8838            lda   Smps.CurrentTempo        ; tempo value
81E2 BB7D30           (./engine/sound/Sm):00557 [5]     8843            adda  Smps.TempoTimeout        ; Adds previous value to
81E5 B77D30           (./engine/sound/Sm):00558 [5]     8848            sta   Smps.TempoTimeout        ; Store this as new
81E8 246C             (./engine/sound/Sm):00559 [3]     8851            bcc   @rts                     ; skip update if tempo need more waits
                      (./engine/sound/Sm):00560                         _UpdateTrack SongDAC,DACUpdateTrack
81EA B67D45           (     _UpdateTrack):00001 [5]     8856            lda   SongDAC.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
81ED 2A07             (     _UpdateTrack):00002 [3]     8859            bpl   a@
81EF 108E7D45         (     _UpdateTrack):00003 [4]     8863            ldy   #SongDAC                               
81F3 BD82AE           (     _UpdateTrack):00004 [8]     8871            jsr   DACUpdateTrack                       ; If so, UpdateTrack
     81F6             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00561                         _UpdateTrack SongFM1,FMUpdateTrack
81F6 B67D6F           (     _UpdateTrack):00001 [5]     8876            lda   SongFM1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
81F9 2A07             (     _UpdateTrack):00002 [3]     8879            bpl   a@
81FB 108E7D6F         (     _UpdateTrack):00003 [4]     8883            ldy   #SongFM1                               
81FF BD830D           (     _UpdateTrack):00004 [8]     8891            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8202             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00562                         _UpdateTrack SongFM2,FMUpdateTrack
8202 B67D99           (     _UpdateTrack):00001 [5]     8896            lda   SongFM2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8205 2A07             (     _UpdateTrack):00002 [3]     8899            bpl   a@
8207 108E7D99         (     _UpdateTrack):00003 [4]     8903            ldy   #SongFM2                               
820B BD830D           (     _UpdateTrack):00004 [8]     8911            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     820E             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00563                         _UpdateTrack SongFM3,FMUpdateTrack
820E B67DC3           (     _UpdateTrack):00001 [5]     8916            lda   SongFM3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8211 2A07             (     _UpdateTrack):00002 [3]     8919            bpl   a@
8213 108E7DC3         (     _UpdateTrack):00003 [4]     8923            ldy   #SongFM3                               
8217 BD830D           (     _UpdateTrack):00004 [8]     8931            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     821A             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00564                         _UpdateTrack SongFM4,FMUpdateTrack
821A B67DED           (     _UpdateTrack):00001 [5]     8936            lda   SongFM4.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
821D 2A07             (     _UpdateTrack):00002 [3]     8939            bpl   a@
821F 108E7DED         (     _UpdateTrack):00003 [4]     8943            ldy   #SongFM4                               
8223 BD830D           (     _UpdateTrack):00004 [8]     8951            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8226             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00565                         _UpdateTrack SongFM5,FMUpdateTrack
8226 B67E17           (     _UpdateTrack):00001 [5]     8956            lda   SongFM5.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8229 2A07             (     _UpdateTrack):00002 [3]     8959            bpl   a@
822B 108E7E17         (     _UpdateTrack):00003 [4]     8963            ldy   #SongFM5                               
822F BD830D           (     _UpdateTrack):00004 [8]     8971            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8232             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00566                         ;_UpdateTrack SongFM6,FMUpdateTrack      ; uncomment to use this channel
                      (./engine/sound/Sm):00567                         ;_UpdateTrack SongFM7,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit
                      (./engine/sound/Sm):00568                         ;_UpdateTrack SongFM8,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit
                      (./engine/sound/Sm):00569                         ;_UpdateTrack SongFM9,FMUpdateTrack      ; uncomment to use tone channel instead of drum kit        
                      (./engine/sound/Sm):00570                         ;_UpdateTrack SongPSG4,PSGUpdateTrack    ; uncomment to use noise channel as an independent channel from tone 3
                      (./engine/sound/Sm):00571                         _UpdateTrack SongPSG1,PSGUpdateTrack
8232 B67EE9           (     _UpdateTrack):00001 [5]     8976            lda   SongPSG1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8235 2A07             (     _UpdateTrack):00002 [3]     8979            bpl   a@
8237 108E7EE9         (     _UpdateTrack):00003 [4]     8983            ldy   #SongPSG1                               
823B BD858B           (     _UpdateTrack):00004 [8]     8991            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     823E             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00572                         _UpdateTrack SongPSG2,PSGUpdateTrack        
823E B67F13           (     _UpdateTrack):00001 [5]     8996            lda   SongPSG2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8241 2A07             (     _UpdateTrack):00002 [3]     8999            bpl   a@
8243 108E7F13         (     _UpdateTrack):00003 [4]     9003            ldy   #SongPSG2                               
8247 BD858B           (     _UpdateTrack):00004 [8]     9011            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     824A             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00573                         _UpdateTrack SongPSG3,PSGUpdateTrack
824A B67F3D           (     _UpdateTrack):00001 [5]     9016            lda   SongPSG3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
824D 2A07             (     _UpdateTrack):00002 [3]     9019            bpl   a@
824F 108E7F3D         (     _UpdateTrack):00003 [4]     9023            ldy   #SongPSG3                               
8253 BD858B           (     _UpdateTrack):00004 [8]     9031            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8256             (     _UpdateTrack):00005                 a@      equ   *        
8256 39               (./engine/sound/Sm):00574 [5]     9036    @rts    rts
                      (./engine/sound/Sm):00575                 
8257                  (./engine/sound/Sm):00576                 UpdateSound        
8257 B68068           (./engine/sound/Sm):00577 [5]     9041            lda   SoundPage                ; page switch to the sound
825A 2601             (./engine/sound/Sm):00578 [3]     9044            bne   @a
825C 39               (./engine/sound/Sm):00579 [5]     9049            rts
825D                  (./engine/sound/Sm):00580                 @a      _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
825D BD78F1           (    _SetCartPageA):00002 [8]     9057            jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8260 8680             (./engine/sound/Sm):00581 [2]     9059            lda   #$80
8262 B78064           (./engine/sound/Sm):00582 [5]     9064            sta   DoSFXFlag                ; Set zDoSFXFlag = 80h (updating sound effects)
                      (./engine/sound/Sm):00583                         _UpdateTrack SFXFM3,FMUpdateTrack
8265 B67F67           (     _UpdateTrack):00001 [5]     9069            lda   SFXFM3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8268 2A07             (     _UpdateTrack):00002 [3]     9072            bpl   a@
826A 108E7F67         (     _UpdateTrack):00003 [4]     9076            ldy   #SFXFM3                               
826E BD830D           (     _UpdateTrack):00004 [8]     9084            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8271             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00584                         _UpdateTrack SFXFM4,FMUpdateTrack
8271 B67F91           (     _UpdateTrack):00001 [5]     9089            lda   SFXFM4.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8274 2A07             (     _UpdateTrack):00002 [3]     9092            bpl   a@
8276 108E7F91         (     _UpdateTrack):00003 [4]     9096            ldy   #SFXFM4                               
827A BD830D           (     _UpdateTrack):00004 [8]     9104            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     827D             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00585                         _UpdateTrack SFXFM5,FMUpdateTrack
827D B67FBB           (     _UpdateTrack):00001 [5]     9109            lda   SFXFM5.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8280 2A07             (     _UpdateTrack):00002 [3]     9112            bpl   a@
8282 108E7FBB         (     _UpdateTrack):00003 [4]     9116            ldy   #SFXFM5                               
8286 BD830D           (     _UpdateTrack):00004 [8]     9124            jsr   FMUpdateTrack                       ; If so, UpdateTrack
     8289             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00586                         _UpdateTrack SFXPSG1,PSGUpdateTrack
8289 B67FE5           (     _UpdateTrack):00001 [5]     9129            lda   SFXPSG1.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
828C 2A07             (     _UpdateTrack):00002 [3]     9132            bpl   a@
828E 108E7FE5         (     _UpdateTrack):00003 [4]     9136            ldy   #SFXPSG1                               
8292 BD858B           (     _UpdateTrack):00004 [8]     9144            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     8295             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00587                         _UpdateTrack SFXPSG2,PSGUpdateTrack        
8295 B6800F           (     _UpdateTrack):00001 [5]     9149            lda   SFXPSG2.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
8298 2A07             (     _UpdateTrack):00002 [3]     9152            bpl   a@
829A 108E800F         (     _UpdateTrack):00003 [4]     9156            ldy   #SFXPSG2                               
829E BD858B           (     _UpdateTrack):00004 [8]     9164            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     82A1             (     _UpdateTrack):00005                 a@      equ   *        
                      (./engine/sound/Sm):00588                         _UpdateTrack SFXPSG3,PSGUpdateTrack
82A1 B68039           (     _UpdateTrack):00001 [5]     9169            lda   SFXPSG3.PlaybackControl       ; Is bit 7 (80h) set on playback control byte? (means "is playing")
82A4 2A07             (     _UpdateTrack):00002 [3]     9172            bpl   a@
82A6 108E8039         (     _UpdateTrack):00003 [4]     9176            ldy   #SFXPSG3                               
82AA BD858B           (     _UpdateTrack):00004 [8]     9184            jsr   PSGUpdateTrack                       ; If so, UpdateTrack
     82AD             (     _UpdateTrack):00005                 a@      equ   *        
82AD 39               (./engine/sound/Sm):00589 [5]     9189    @rts    rts
                      (./engine/sound/Sm):00590                 
                      (./engine/sound/Sm):00591                 * * ************************************************************************************
                      (./engine/sound/Sm):00592                 * * 
                      (./engine/sound/Sm):00593                 * TempoWait
                      (./engine/sound/Sm):00594                 *         ; Tempo works as divisions of the 60Hz clock (there is a fix supplied for
                      (./engine/sound/Sm):00595                 *         ; PAL that "kind of" keeps it on track.)  Every time the internal music clock
                      (./engine/sound/Sm):00596                 *         ; overflows, it will update.  So a tempo of 80h will update every other
                      (./engine/sound/Sm):00597                 *         ; frame, or 30 times a second.
                      (./engine/sound/Sm):00598                 
                      (./engine/sound/Sm):00599                 *         lda   Smps.CurrentTempo  ; tempo value
                      (./engine/sound/Sm):00600                 *         adda  Smps.TempoTimeout  ; Adds previous value to
                      (./engine/sound/Sm):00601                 *         sta   Smps.TempoTimeout  ; Store this as new
                      (./engine/sound/Sm):00602                 *         bcc   @a
                      (./engine/sound/Sm):00603                 *         rts                     ; If addition overflowed (answer greater than FFh), return
                      (./engine/sound/Sm):00604                 * @a
                      (./engine/sound/Sm):00605                 *         ; So if adding tempo value did NOT overflow, then we add 1 to all durations
                      (./engine/sound/Sm):00606                 *         inc   SongDAC.DurationTimeout
                      (./engine/sound/Sm):00607                 *         inc   SongFM1.DurationTimeout
                      (./engine/sound/Sm):00608                 *         inc   SongFM2.DurationTimeout
                      (./engine/sound/Sm):00609                 *         inc   SongFM3.DurationTimeout
                      (./engine/sound/Sm):00610                 *         inc   SongFM4.DurationTimeout
                      (./engine/sound/Sm):00611                 *         inc   SongFM5.DurationTimeout
                      (./engine/sound/Sm):00612                 *         ;inc   SongFM6.DurationTimeout
                      (./engine/sound/Sm):00613                 *         ;inc   SongFM7.DurationTimeout
                      (./engine/sound/Sm):00614                 *         ;inc   SongFM8.DurationTimeout                
                      (./engine/sound/Sm):00615                 *         ;inc   SongFM9.DurationTimeout                        
                      (./engine/sound/Sm):00616                 *         ;inc   SongPSG4.DurationTimeout
                      (./engine/sound/Sm):00617                 *         inc   SongPSG1.DurationTimeout
                      (./engine/sound/Sm):00618                 *         inc   SongPSG2.DurationTimeout
                      (./engine/sound/Sm):00619                 *         inc   SongPSG3.DurationTimeout
                      (./engine/sound/Sm):00620                 *         rts
                      (./engine/sound/Sm):00621                 
                      (./engine/sound/Sm):00622                 ******************************************************************************
                      (./engine/sound/Sm):00623                 * DACUpdateTrack
                      (./engine/sound/Sm):00624                 * input Y (ptr to SONGDAC, is used by CoordFlag)
                      (./engine/sound/Sm):00625                 * destroys A,B,X
                      (./engine/sound/Sm):00626                 ******************************************************************************
                      (./engine/sound/Sm):00627                 
82AE                  (./engine/sound/Sm):00628                 DACUpdateTrack        
82AE 7A7D50           (./engine/sound/Sm):00629 [7]     9196            dec   SongDAC.DurationTimeout
82B1 2701             (./engine/sound/Sm):00630 [3]     9199            beq   @a
82B3 39               (./engine/sound/Sm):00631 [5]     9204            rts
82B4                  (./engine/sound/Sm):00632                 @a
82B4 CC0E20           (./engine/sound/Sm):00633 [3]     9207            ldd   #$0E20                   ; note has ended, so note off
82B7 97FC             (./engine/sound/Sm):00634 [4]     9211            sta   <YM2413_A0
82B9 BE7D49           (./engine/sound/Sm):00635 [6]     9217            ldx   SongDAC.DataPointer
82BC D7FD             (./engine/sound/Sm):00636 [4]     9221            stb   <YM2413_D0        
                      (./engine/sound/Sm):00637                                  
82BE E680             (./engine/sound/Sm):00638 [6]     9227    @b      ldb   ,x+                      ; read DAC song data
82C0 C1E0             (./engine/sound/Sm):00639 [2]     9229            cmpb  #$E0
82C2 2505             (./engine/sound/Sm):00640 [3]     9232            blo   @a                       ; test for >= E0h, which is a coordination flag
82C4 BD8A30           (./engine/sound/Sm):00641 [8]     9240            jsr   CoordFlag
82C7 20F5             (./engine/sound/Sm):00642 [3]     9243            bra   @b                       ; read all consecutive coordination flags 
82C9                  (./engine/sound/Sm):00643                 @a        
82C9 2A0E             (./engine/sound/Sm):00644 [3]     9246            bpl   SetDuration              ; test for 80h not set, which is a note duration
82CB F77D52           (./engine/sound/Sm):00645 [5]     9251            stb   SongDAC.NextData               ; This is a note; store it here
82CE E684             (./engine/sound/Sm):00646 [4]     9255            ldb   ,x
82D0 2A05             (./engine/sound/Sm):00647 [3]     9258            bpl   SetDurationAndForward    ; test for 80h not set, which is a note duration
82D2 F67D51           (./engine/sound/Sm):00648 [5]     9263            ldb   SongDAC.SavedDuration
82D5 2009             (./engine/sound/Sm):00649 [3]     9266            bra   DACAfterDur
                      (./engine/sound/Sm):00650                 
82D7                  (./engine/sound/Sm):00651                 SetDurationAndForward
82D7 3001             (./engine/sound/Sm):00652 [5]     9271            leax  1,x
82D9                  (./engine/sound/Sm):00653                 SetDuration
82D9 B67D48           (./engine/sound/Sm):00654 [5]     9276            lda   SongDAC.TempoDivider
82DC 3D               (./engine/sound/Sm):00655 [11]    9287            mul
82DD F77D51           (./engine/sound/Sm):00656 [5]     9292            stb   SongDAC.SavedDuration
82E0                  (./engine/sound/Sm):00657                 DACAfterDur
82E0 F77D50           (./engine/sound/Sm):00658 [5]     9297            stb   SongDAC.DurationTimeout
82E3 BF7D49           (./engine/sound/Sm):00659 [6]     9303            stx   SongDAC.DataPointer
82E6 F67D52           (./engine/sound/Sm):00660 [5]     9308            ldb   SongDAC.NextData
82E9 C180             (./engine/sound/Sm):00661 [2]     9310            cmpb  #$80
82EB 2601             (./engine/sound/Sm):00662 [3]     9313            bne   @a
82ED 39               (./engine/sound/Sm):00663 [5]     9318            rts                            ; if a rest, quit
82EE                  (./engine/sound/Sm):00664                 @a
82EE 8E82FC           (./engine/sound/Sm):00665 [3]     9321            ldx   #@data            
82F1 C081             (./engine/sound/Sm):00666 [2]     9323            subb  #$81                     ; transform note into an index...      
82F3 860E             (./engine/sound/Sm):00667 [2]     9325            lda   #$0E
82F5 97FC             (./engine/sound/Sm):00668 [4]     9329            sta   <YM2413_A0
82F7 E685             (./engine/sound/Sm):00669 [5]     9334            ldb   b,x
82F9 D7FD             (./engine/sound/Sm):00670 [4]     9338            stb   <YM2413_D0      
82FB 39               (./engine/sound/Sm):00671 [5]     9343            rts
82FC                  (./engine/sound/Sm):00672                 @data
82FC 30               (./engine/sound/Sm):00673                         fcb   $30 ; $81 - Kick  (BD+TOM) 34
82FD 28               (./engine/sound/Sm):00674                         fcb   $28 ; $82 - Snare (SNARE noise+TOM) 2C
82FE 21               (./engine/sound/Sm):00675                         fcb   $21 ; $83 - Clap 21
82FF 22               (./engine/sound/Sm):00676                         fcb   $22 ; $84 - Scratch 22
8300 24               (./engine/sound/Sm):00677                         fcb   $24 ; $85 - Timpani 22
8301 24               (./engine/sound/Sm):00678                         fcb   $24 ; $86 - Hi Tom
8302 24               (./engine/sound/Sm):00679                         fcb   $24 ; $87 - Bongo
8303 24               (./engine/sound/Sm):00680                         fcb   $24 ; $88 - Hi Timpani
8304 30               (./engine/sound/Sm):00681                         fcb   $30 ; $89 - Mid Timpani
8305 30               (./engine/sound/Sm):00682                         fcb   $30 ; $8A - Mid Low Timpani
8306 34               (./engine/sound/Sm):00683                         fcb   $34 ; $8B - Low Timpani
8307 28               (./engine/sound/Sm):00684                         fcb   $28 ; $8C - Mid Tom
8308 30               (./engine/sound/Sm):00685                         fcb   $30 ; $8D - Low Tom
8309 34               (./engine/sound/Sm):00686                         fcb   $34 ; $8E - Floor Tom
830A 24               (./engine/sound/Sm):00687                         fcb   $24 ; $8F - Hi Bongo
830B 28               (./engine/sound/Sm):00688                         fcb   $28 ; $90 - Mid Bongo
830C 30               (./engine/sound/Sm):00689                         fcb   $30 ; $91 - Low Bongo
                      (./engine/sound/Sm):00690                 
                      (./engine/sound/Sm):00691                 ******************************************************************************
                      (./engine/sound/Sm):00692                 * FM Track Update
                      (./engine/sound/Sm):00693                 ******************************************************************************
                      (./engine/sound/Sm):00694                 
830D                  (./engine/sound/Sm):00695                 _FMNoteOff MACRO                       ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
                      (./engine/sound/Sm):00696                         bita  #$04                     ; Is SFX overriding set?
                      (./engine/sound/Sm):00697                         bne   @skip                    ; if true skip note off, sfx is playing        
                      (./engine/sound/Sm):00698                         addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
                      (./engine/sound/Sm):00699                         stb   <YM2413_A0
                      (./engine/sound/Sm):00700                         ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
                      (./engine/sound/Sm):00701                         andb  #$EF                     ; clear bit 4 (10h) Key Off
                      (./engine/sound/Sm):00702                         stb   <YM2413_D0               ; send to YM
                      (./engine/sound/Sm):00703                         stb   NoteControl,y               
830D                  (./engine/sound/Sm):00704                 @skip   equ   *        
                      (./engine/sound/Sm):00705                  ENDM        
                      (./engine/sound/Sm):00706                 
830D                  (./engine/sound/Sm):00707                 FMUpdateTrack
830D 6A2B             (./engine/sound/Sm):00708 [7]     9350            dec   DurationTimeout,y        ; Decrement duration
830F 2663             (./engine/sound/Sm):00709 [3]     9353            bne   NoteFillUpdate           ; If not time-out yet, go do updates only
8311 A6A4             (./engine/sound/Sm):00710 [4]     9357            lda   PlaybackControl,y
8313 84EF             (./engine/sound/Sm):00711 [2]     9359            anda  #$EF
8315 A7A4             (./engine/sound/Sm):00712 [4]     9363            sta   PlaybackControl,y        ; When duration over, clear "do not attack" bit 4 (0x10) of track's play control
                      (./engine/sound/Sm):00713                         
8317                  (./engine/sound/Sm):00714                 FMDoNext
8317 AE24             (./engine/sound/Sm):00715 [6]     9369            ldx   DataPointer,y
8319 A6A4             (./engine/sound/Sm):00716 [4]     9373            lda   PlaybackControl,y        ; Clear bit 1 (02h) "track is rest" from track
831B 84FD             (./engine/sound/Sm):00717 [2]     9375            anda  #$FD
831D A7A4             (./engine/sound/Sm):00718 [4]     9379            sta   PlaybackControl,y        
                      (./engine/sound/Sm):00719                        
831F                  (./engine/sound/Sm):00720                 FMReadCoordFlag        
831F E680             (./engine/sound/Sm):00721 [6]     9385            ldb   ,x+                      ; Read song data
8321 F78346           (./engine/sound/Sm):00722 [5]     9390            stb   NoteDyn+1
8324 C1E0             (./engine/sound/Sm):00723 [2]     9392            cmpb  #$E0
8326 2505             (./engine/sound/Sm):00724 [3]     9395            blo   FMNoteOff                ; Test for >= E0h, which is a coordination flag
8328 BD8A30           (./engine/sound/Sm):00725 [8]     9403            jsr   CoordFlag
832B 20F2             (./engine/sound/Sm):00726 [3]     9406            bra   FMReadCoordFlag          ; Read all consecutive coordination flags
                      (./engine/sound/Sm):00727                 
832D                  (./engine/sound/Sm):00728                 FMNoteOff
832D A6A4             (./engine/sound/Sm):00729 [4]     9410            lda   PlaybackControl,y
832F 8414             (./engine/sound/Sm):00730 [2]     9412            anda  #$14                     ; Are bits 4 (no attack) or 2 (SFX overriding) set?
8331 2612             (./engine/sound/Sm):00731 [3]     9415            bne   NoteDyn                  ; If they are, skip
8333 E621             (./engine/sound/Sm):00732 [5]     9420            ldb   VoiceControl,y           ; Otherwise, send a Key Off
                      (./engine/sound/Sm):00733                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
8335 8504             (       _FMNoteOff):00001 [2]     9422            bita  #$04                     ; Is SFX overriding set?
8337 260C             (       _FMNoteOff):00002 [3]     9425            bne   @skip                    ; if true skip note off, sfx is playing        
8339 CB20             (       _FMNoteOff):00003 [2]     9427            addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
833B D7FC             (       _FMNoteOff):00004 [4]     9431            stb   <YM2413_A0
833D E622             (       _FMNoteOff):00005 [5]     9436            ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
833F C4EF             (       _FMNoteOff):00006 [2]     9438            andb  #$EF                     ; clear bit 4 (10h) Key Off
8341 D7FD             (       _FMNoteOff):00007 [4]     9442            stb   <YM2413_D0               ; send to YM
8343 E722             (       _FMNoteOff):00008 [5]     9447            stb   NoteControl,y               
     8345             (       _FMNoteOff):00009                 @skip   equ   *        
8345 C600             (./engine/sound/Sm):00734 [2]     9449    NoteDyn ldb   #0                       ; (dynamic) retore note value   
8347 2A50             (./engine/sound/Sm):00735 [3]     9452            bpl   FMSetDuration            ; Test for 80h not set, which is a note duration
                      (./engine/sound/Sm):00736                         
8349                  (./engine/sound/Sm):00737                 FMSetFreq
8349 C080             (./engine/sound/Sm):00738 [2]     9454            subb  #$80                     ; Test for a rest
834B 2608             (./engine/sound/Sm):00739 [3]     9457            bne   @a
834D A6A4             (./engine/sound/Sm):00740 [4]     9461            lda   PlaybackControl,y        ; Set bit 1 (track is at rest)
834F 8A02             (./engine/sound/Sm):00741 [2]     9463            ora   #$02
8351 A7A4             (./engine/sound/Sm):00742 [4]     9467            sta   PlaybackControl,y
8353 2017             (./engine/sound/Sm):00743 [3]     9470            bra   @b        
8355 CB0B             (./engine/sound/Sm):00744 [2]     9472    @a      addb  #$0B                     ; Add FMFrequencies offet for C0 Note, access lower notes with transpose
8357 EB26             (./engine/sound/Sm):00745 [5]     9477            addb  Transpose,y              ; Add current channel transpose (coord flag E9)
8359 EBA81E           (./engine/sound/Sm):00746 [5]     9482            addb  InstrTranspose,y         ; Add Instrument (Voice) offset (coord flag EF)
835C C15F             (./engine/sound/Sm):00747 [2]     9484            cmpb  #95                      ; array bound check
835E 2502             (./engine/sound/Sm):00748 [3]     9487            blo   @c
8360 C65E             (./engine/sound/Sm):00749 [2]     9489            ldb   #94         
8362 58               (./engine/sound/Sm):00750 [2]     9491    @c      aslb                           ; Transform note into an index...
8363 CE846E           (./engine/sound/Sm):00751 [3]     9494            ldu   #FMFrequencies
8366 8600             (./engine/sound/Sm):00752 [2]     9496            lda   #0    
8368 ECCB             (./engine/sound/Sm):00753 [9]     9505            ldd   d,u
836A ED2D             (./engine/sound/Sm):00754 [6]     9511            std   NextData,y               ; Store Frequency
836C E684             (./engine/sound/Sm):00755 [4]     9515    @b      ldb   ,x                       ; Get next byte
836E 2A27             (./engine/sound/Sm):00756 [3]     9518            bpl   FMSetDurationAndForward  ; Test for 80h not set, which is a note duration
8370 E62C             (./engine/sound/Sm):00757 [5]     9523            ldb   SavedDuration,y        
8372 202A             (./engine/sound/Sm):00758 [3]     9526            bra   FinishTrackUpdate
                      (./engine/sound/Sm):00759                         
8374                  (./engine/sound/Sm):00760                 NoteFillUpdate
8374 A62F             (./engine/sound/Sm):00761 [5]     9531            lda   NoteFillTimeout,y        ; Get current note fill value
8376 10270072         (./engine/sound/Sm):00762 [5+?]   9536            lbeq  DoModulation             ; If zero, return!
837A 6A2F             (./engine/sound/Sm):00763 [7]     9543            dec   NoteFillTimeout,y        ; Decrement note fill
837C 266E             (./engine/sound/Sm):00764 [3]     9546            bne   DoModulation             ; If not zero, return
                      (./engine/sound/Sm):00765                         
837E A6A4             (./engine/sound/Sm):00766 [4]     9550            lda   PlaybackControl,y
8380 8A02             (./engine/sound/Sm):00767 [2]     9552            ora   #$02                     ; Set bit 1 (track is at rest)
8382 A7A4             (./engine/sound/Sm):00768 [4]     9556            sta   PlaybackControl,y        
8384 E621             (./engine/sound/Sm):00769 [5]     9561            ldb   VoiceControl,y
                      (./engine/sound/Sm):00770                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y         
8386 8504             (       _FMNoteOff):00001 [2]     9563            bita  #$04                     ; Is SFX overriding set?
8388 260C             (       _FMNoteOff):00002 [3]     9566            bne   @skip                    ; if true skip note off, sfx is playing        
838A CB20             (       _FMNoteOff):00003 [2]     9568            addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
838C D7FC             (       _FMNoteOff):00004 [4]     9572            stb   <YM2413_A0
838E E622             (       _FMNoteOff):00005 [5]     9577            ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
8390 C4EF             (       _FMNoteOff):00006 [2]     9579            andb  #$EF                     ; clear bit 4 (10h) Key Off
8392 D7FD             (       _FMNoteOff):00007 [4]     9583            stb   <YM2413_D0               ; send to YM
8394 E722             (       _FMNoteOff):00008 [5]     9588            stb   NoteControl,y               
     8396             (       _FMNoteOff):00009                 @skip   equ   *        
8396 39               (./engine/sound/Sm):00771 [5]     9593            rts         
                      (./engine/sound/Sm):00772                 
8397                  (./engine/sound/Sm):00773                 FMSetDurationAndForward
8397 3001             (./engine/sound/Sm):00774 [5]     9598            leax  1,x
                      (./engine/sound/Sm):00775                         
8399                  (./engine/sound/Sm):00776                 FMSetDuration
8399 A623             (./engine/sound/Sm):00777 [5]     9603            lda   TempoDivider,y
839B 3D               (./engine/sound/Sm):00778 [11]    9614            mul
839C E72C             (./engine/sound/Sm):00779 [5]     9619            stb   SavedDuration,y
                      (./engine/sound/Sm):00780                         
839E                  (./engine/sound/Sm):00781                 FinishTrackUpdate
839E E72B             (./engine/sound/Sm):00782 [5]     9624            stb   DurationTimeout,y        ; Last set duration ... put into ticker
83A0 AF24             (./engine/sound/Sm):00783 [6]     9630            stx   DataPointer,y            ; Stores to the track pointer memory
83A2 A6A4             (./engine/sound/Sm):00784 [4]     9634            lda   PlaybackControl,y
83A4 8510             (./engine/sound/Sm):00785 [2]     9636            bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
83A6 2702             (./engine/sound/Sm):00786 [3]     9639            beq   @a                       
83A8 2011             (./engine/sound/Sm):00787 [3]     9642            bra   FMPrepareNote            ; If so, quit
83AA E6A810           (./engine/sound/Sm):00788 [5]     9647    @a      ldb   NoteFillMaster,y
83AD E72F             (./engine/sound/Sm):00789 [5]     9652            stb   NoteFillTimeout,y        ; Reset 0Fh "note fill" value to master
83AF 8508             (./engine/sound/Sm):00790 [2]     9654            bita  #$08                     ; Is bit 3 (08h) modulation turned on?
83B1 2602             (./engine/sound/Sm):00791 [3]     9657            bne   @b
83B3 2006             (./engine/sound/Sm):00792 [3]     9660            bra   FMPrepareNote            ; if not, quit
83B5 AEA811           (./engine/sound/Sm):00793 [6]     9666    @b      ldx   ModulationPtr,y
83B8 BD8B5A           (./engine/sound/Sm):00794 [8]     9674            jsr   SetModulation            ; reload modulation settings for the new note
                      (./engine/sound/Sm):00795                         
83BB                  (./engine/sound/Sm):00796                 FMPrepareNote
83BB A6A4             (./engine/sound/Sm):00797 [4]     9678            lda   PlaybackControl,y
83BD 8504             (./engine/sound/Sm):00798 [2]     9680            bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
83BF 262B             (./engine/sound/Sm):00799 [3]     9683            bne   DoModulation             ; If so skip freq update                                                 
83C1 8502             (./engine/sound/Sm):00800 [2]     9685            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
83C3 2701             (./engine/sound/Sm):00801 [3]     9688            beq   FMUpdateFreqAndNoteOn
83C5 39               (./engine/sound/Sm):00802 [5]     9693            rts                            ; If so, quit
83C6                  (./engine/sound/Sm):00803                 FMUpdateFreqAndNoteOn
83C6 E6A819           (./engine/sound/Sm):00804 [5]     9698            ldb   Detune,y
83C9 1D               (./engine/sound/Sm):00805 [2]     9700            sex
83CA E32D             (./engine/sound/Sm):00806 [7]     9707            addd  NextData,y               ; Apply detune but don't update stored frequency
83CC B783E5           (./engine/sound/Sm):00807 [5]     9712            sta   @dyn+1
83CF 8610             (./engine/sound/Sm):00808 [2]     9714            lda   #$10                     ; set LSB Frequency Command
83D1 AB21             (./engine/sound/Sm):00809 [5]     9719            adda  VoiceControl,y
83D3 97FC             (./engine/sound/Sm):00810 [4]     9723            sta   <YM2413_A0
83D5 8B10             (./engine/sound/Sm):00811 [2]     9725            adda  #$10                     ; set Sus/Key/Block/FNum(MSB) Command
83D7 D7FD             (./engine/sound/Sm):00812 [4]     9729            stb   <YM2413_D0
                      (./engine/sound/Sm):00813                         _YMBusyWait9
83D9 12               (     _YMBusyWait9):00001 [2]     9731            nop
83DA 12               (     _YMBusyWait9):00002 [2]     9733            nop
83DB 12               (     _YMBusyWait9):00003 [2]     9735            nop
83DC 21FE             (     _YMBusyWait9):00004 [3]     9738            brn   *
83DE E622             (./engine/sound/Sm):00814 [5]     9743            ldb   NoteControl,y            ; load current value (do not erase FNum MSB) (and used as 5 cycles tempo)
83E0 CA10             (./engine/sound/Sm):00815 [2]     9745            orb   #$10                     ; Set bit 4 (10h) Key On
83E2 C4F0             (./engine/sound/Sm):00816 [2]     9747            andb  #$F0                     ; Clear FNum MSB (and used as 2 cycles tempo)
83E4 CB00             (./engine/sound/Sm):00817 [2]     9749    @dyn    addb  #0                       ; (dynamic) Set Fnum MSB (and used as 2 cycles tempo)                
83E6 97FC             (./engine/sound/Sm):00818 [4]     9753            sta   <YM2413_A0
83E8 E722             (./engine/sound/Sm):00819 [5]     9758            stb   NoteControl,y
83EA D7FD             (./engine/sound/Sm):00820 [4]     9762            stb   <YM2413_D0   
                      (./engine/sound/Sm):00821                         
83EC                  (./engine/sound/Sm):00822                 DoModulation  
83EC A6A4             (./engine/sound/Sm):00823 [4]     9766            lda   PlaybackControl,y
83EE 8502             (./engine/sound/Sm):00824 [2]     9768            bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
83F0 2701             (./engine/sound/Sm):00825 [3]     9771            beq   @a
83F2 39               (./engine/sound/Sm):00826 [5]     9776            rts                            ; If so, quit        
83F3 8508             (./engine/sound/Sm):00827 [2]     9778    @a      bita  #$08                     ; Is bit 3 (08h) "modulation on" set on playback?
83F5 2601             (./engine/sound/Sm):00828 [3]     9781            bne   @b
83F7 39               (./engine/sound/Sm):00829 [5]     9786            rts                            ; If not, quit        
83F8 A6A813           (./engine/sound/Sm):00830 [5]     9791    @b      lda   ModulationWait,y         ; 'ww' period of time before modulation starts
83FB 2704             (./engine/sound/Sm):00831 [3]     9794            beq   @c                       ; if zero, go to it!
83FD 6AA813           (./engine/sound/Sm):00832 [7]     9801            dec   ModulationWait,y         ; Otherwise, decrement timer
8400 39               (./engine/sound/Sm):00833 [5]     9806            rts                            ; return if decremented
8401 6AA814           (./engine/sound/Sm):00834 [7]     9813    @c      dec   ModulationSpeed,y        ; Decrement modulation speed counter
8404 2701             (./engine/sound/Sm):00835 [3]     9816            beq   @d
8406 39               (./engine/sound/Sm):00836 [5]     9821            rts                            ; Return if not yet zero
8407 AEA811           (./engine/sound/Sm):00837 [6]     9827    @d      ldx   ModulationPtr,y
840A A601             (./engine/sound/Sm):00838 [5]     9832            lda   1,x
840C A7A814           (./engine/sound/Sm):00839 [5]     9837            sta   ModulationSpeed,y
840F A6A816           (./engine/sound/Sm):00840 [5]     9842            lda   ModulationSteps,y
8412 2609             (./engine/sound/Sm):00841 [3]     9845            bne   @e
8414 A603             (./engine/sound/Sm):00842 [5]     9850            lda   3,x
8416 A7A816           (./engine/sound/Sm):00843 [5]     9855            sta   ModulationSteps,y     
8419 60A815           (./engine/sound/Sm):00844 [7]     9862            neg   ModulationDelta,y
841C 39               (./engine/sound/Sm):00845 [5]     9867            rts                
841D 6AA816           (./engine/sound/Sm):00846 [7]     9874    @e      dec   ModulationSteps,y
8420 E6A815           (./engine/sound/Sm):00847 [5]     9879            ldb   ModulationDelta,y
8423 1D               (./engine/sound/Sm):00848 [2]     9881            sex
8424 E3A817           (./engine/sound/Sm):00849 [7]     9888            addd  ModulationVal,y
8427 EDA817           (./engine/sound/Sm):00850 [6]     9894            std   ModulationVal,y        
                      (./engine/sound/Sm):00851                               
842A                  (./engine/sound/Sm):00852                 FMUpdateFreq
842A A6A4             (./engine/sound/Sm):00853 [4]     9898            lda   PlaybackControl,y
842C 8504             (./engine/sound/Sm):00854 [2]     9900            bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
842E 263D             (./engine/sound/Sm):00855 [3]     9903            bne   @rts
8430 E6A819           (./engine/sound/Sm):00856 [5]     9908            ldb   Detune,y
8433 1D               (./engine/sound/Sm):00857 [2]     9910            sex
8434 FD844C           (./engine/sound/Sm):00858 [6]     9916            std   @dyna+1
8437 ECA817           (./engine/sound/Sm):00859 [6]     9922            ldd   ModulationVal,y          ; get modulation effect
843A 2B06             (./engine/sound/Sm):00860 [3]     9925            bmi   @a
                      (./engine/sound/Sm):00861                         _asrd                          ; modulation is divided by four
843C 47               (            _asrd):00001 [2]     9927            asra
843D 56               (            _asrd):00002 [2]     9929            rorb
                      (./engine/sound/Sm):00862                         _asrd                          ; used for better precision of delta
843E 47               (            _asrd):00001 [2]     9931            asra
843F 56               (            _asrd):00002 [2]     9933            rorb
8440 2007             (./engine/sound/Sm):00863 [3]     9936            bra   @b
8442                  (./engine/sound/Sm):00864                 @a      _asrd                          ; modulation is divided by four
8442 47               (            _asrd):00001 [2]     9938            asra
8443 56               (            _asrd):00002 [2]     9940            rorb
                      (./engine/sound/Sm):00865                         _asrd                          ; used for better precision of delta        
8444 47               (            _asrd):00001 [2]     9942            asra
8445 56               (            _asrd):00002 [2]     9944            rorb
8446 C30001           (./engine/sound/Sm):00866 [4]     9948            addd  #1                       ; negative value need +1 when div 
8449 E32D             (./engine/sound/Sm):00867 [7]     9955    @b      addd  NextData,y               ; apply detune but don't update stored frequency
844B C30000           (./engine/sound/Sm):00868 [4]     9959    @dyna   addd  #0                       ; (dynamic) apply detune        
844E B78466           (./engine/sound/Sm):00869 [5]     9964            sta   @dynb+1
8451 8610             (./engine/sound/Sm):00870 [2]     9966            lda   #$10                     ; set LSB Frequency Command
8453 AB21             (./engine/sound/Sm):00871 [5]     9971            adda  VoiceControl,y           ; get channel number
8455 97FC             (./engine/sound/Sm):00872 [4]     9975            sta   <YM2413_A0               ; send Fnum update Command
8457 8B10             (./engine/sound/Sm):00873 [2]     9977            adda  #$10                     ; set Sus/Key/Block/FNum(MSB) Command
8459 D7FD             (./engine/sound/Sm):00874 [4]     9981            stb   <YM2413_D0               ; send FNum (b0-b7)
                      (./engine/sound/Sm):00875                         _YMBusyWait11                  ; total wait 20 cycles
845B 12               (    _YMBusyWait11):00001 [2]     9983            nop
845C 12               (    _YMBusyWait11):00002 [2]     9985            nop
845D 12               (    _YMBusyWait11):00003 [2]     9987            nop
845E 12               (    _YMBusyWait11):00004 [2]     9989            nop
845F 21FE             (    _YMBusyWait11):00005 [3]     9992            brn   *
8461 E622             (./engine/sound/Sm):00876 [5]     9997            ldb   NoteControl,y            ; load current value (do not erase FNum MSB) (and used as 5 cycles tempo)
8463 C4F0             (./engine/sound/Sm):00877 [2]     9999            andb  #$F0                     ; clear FNum MSB (and used as 2 cycles tempo)
8465 CB00             (./engine/sound/Sm):00878 [2]     10001   @dynb   addb  #0                       ; (dynamic) Set Fnum MSB (and used as 2 cycles tempo)        
8467 97FC             (./engine/sound/Sm):00879 [4]     10005           sta   <YM2413_A0               ; send command
8469 E722             (./engine/sound/Sm):00880 [5]     10010           stb   NoteControl,y
846B D7FD             (./engine/sound/Sm):00881 [4]     10014           stb   <YM2413_D0               ; send FNum (b8) and Block (b0-b2)
846D 39               (./engine/sound/Sm):00882 [5]     10019   @rts    rts        
                      (./engine/sound/Sm):00883                  
                      (./engine/sound/Sm):00884                 ; 95 notes (Note value $81=C0 $DF=A#7) with direct access
                      (./engine/sound/Sm):00885                 ; Other notes can be accessed by transpose
846E                  (./engine/sound/Sm):00886                 FMFrequencies
846E 0056005B00610067 (./engine/sound/Sm):00887                         fdb   $0056,$005B,$0061,$0067,$006D,$0073,$007A,$0081,$0089,$0091,$009A,$00A2 ; C-1 - B-1
     006D0073007A0081
     00890091009A00A2
8486 00AD00B700C200CD (./engine/sound/Sm):00888                         fdb   $00AD,$00B7,$00C2,$00CD,$00DA,$00E6,$00F4,$0102,$0112,$0122,$0133,$0146 ; C0 - B0
     00DA00E600F40102
     0112012201330146
849E 0159016D0183019A (./engine/sound/Sm):00889                         fdb   $0159,$016D,$0183,$019A,$01B3,$01CC,$01E8,$0302,$0312,$0322,$0333,$0346 ; C1 - B1
     01B301CC01E80302
     0312032203330346
84B6 0359036D0383039A (./engine/sound/Sm):00890                         fdb   $0359,$036D,$0383,$039A,$03B3,$03CC,$03E8,$0502,$0512,$0522,$0533,$0546 ; C2 - B2
     03B303CC03E80502
     0512052205330546
84CE 0559056D0583059A (./engine/sound/Sm):00891                         fdb   $0559,$056D,$0583,$059A,$05B3,$05CC,$05E8,$0702,$0712,$0722,$0733,$0746 ; C3 - B3
     05B305CC05E80702
     0712072207330746
84E6 0759076D0783079A (./engine/sound/Sm):00892                         fdb   $0759,$076D,$0783,$079A,$07B3,$07CC,$07E8,$0902,$0912,$0922,$0933,$0946 ; C4 - B4
     07B307CC07E80902
     0912092209330946
84FE 0959096D0983099A (./engine/sound/Sm):00893                         fdb   $0959,$096D,$0983,$099A,$09B3,$09CC,$09E8,$0B02,$0B12,$0B22,$0B33,$0B46 ; C5 - B5
     09B309CC09E80B02
     0B120B220B330B46
8516 0B590B6D0B830B9A (./engine/sound/Sm):00894                         fdb   $0B59,$0B6D,$0B83,$0B9A,$0BB3,$0BCC,$0BE8,$0D02,$0D12,$0D22,$0D33,$0D46 ; C6 - B6
     0BB30BCC0BE80D02
     0D120D220D330D46
852E 0D590D6D0D830D9A (./engine/sound/Sm):00895                         fdb   $0D59,$0D6D,$0D83,$0D9A,$0DB3,$0DCC,$0DE8,$0F02,$0F12,$0F22,$0F33,$0F46 ; C7 - B7        
     0DB30DCC0DE80F02
     0F120F220F330F46
8546 0F590F6D0F830F9A (./engine/sound/Sm):00896                         fdb   $0F59,$0F6D,$0F83,$0F9A,$0FB3,$0FCC,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8 ; C8 - F#8
     0FB30FCC0FE80FE8
     0FE80FE80FE80FE8
855E 0FE80FE80FE80FE8 (./engine/sound/Sm):00897                         fdb   $0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8,$0FE8                         ; F#8
     0FE80FE80FE80FE8
                      (./engine/sound/Sm):00898                         
                      (./engine/sound/Sm):00899                 ******************************************************************************
                      (./engine/sound/Sm):00900                 * PSG Update Track
                      (./engine/sound/Sm):00901                 ******************************************************************************
                      (./engine/sound/Sm):00902                 
856E                  (./engine/sound/Sm):00903                 _PSGNoteOff MACRO                      ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
                      (./engine/sound/Sm):00904                         bita  #$04                     ; Is SFX overriding set?
                      (./engine/sound/Sm):00905                         bne   @skip                    ; if true skip note off, sfx is playing               
                      (./engine/sound/Sm):00906                         orb   #$1F                     ; Volume Off
                      (./engine/sound/Sm):00907                         stb   <PSG
856E                  (./engine/sound/Sm):00908                 @skip   equ   *        
                      (./engine/sound/Sm):00909                  ENDM
                      (./engine/sound/Sm):00910                  
856E                  (./engine/sound/Sm):00911                 PSGNoteFillUpdate
856E A62F             (./engine/sound/Sm):00912 [5]     10024           lda   NoteFillTimeout,y        ; Get current note fill value
8570 102700BD         (./engine/sound/Sm):00913 [5+?]   10029           lbeq  PSGUpdateVolFX           ; If zero, return!
8574 6A2F             (./engine/sound/Sm):00914 [7]     10036           dec   NoteFillTimeout,y        ; Decrement note fill
8576 102600B7         (./engine/sound/Sm):00915 [5+?]   10041           lbne  PSGUpdateVolFX           ; If not zero, return
                      (./engine/sound/Sm):00916                         
857A A6A4             (./engine/sound/Sm):00917 [4]     10045           lda   PlaybackControl,y
857C 8A02             (./engine/sound/Sm):00918 [2]     10047           ora   #$02                     ; Set bit 1 (track is at rest)
857E A7A4             (./engine/sound/Sm):00919 [4]     10051           sta   PlaybackControl,y    
8580 E621             (./engine/sound/Sm):00920 [5]     10056           ldb   VoiceControl,y           ; Get "voice control" byte (loads upper bits which specify attenuation setting)
                      (./engine/sound/Sm):00921                         _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
8582 8504             (      _PSGNoteOff):00001 [2]     10058           bita  #$04                     ; Is SFX overriding set?
8584 2604             (      _PSGNoteOff):00002 [3]     10061           bne   @skip                    ; if true skip note off, sfx is playing               
8586 CA1F             (      _PSGNoteOff):00003 [2]     10063           orb   #$1F                     ; Volume Off
8588 D7FF             (      _PSGNoteOff):00004 [4]     10067           stb   <PSG
     858A             (      _PSGNoteOff):00005                 @skip   equ   *        
858A 39               (./engine/sound/Sm):00922 [5]     10072           rts 
                      (./engine/sound/Sm):00923                  
858B                  (./engine/sound/Sm):00924                 PSGUpdateTrack
858B 6A2B             (./engine/sound/Sm):00925 [7]     10079           dec   DurationTimeout,y        ; Decrement duration
858D 26DF             (./engine/sound/Sm):00926 [3]     10082           bne   PSGNoteFillUpdate        ; If not time-out yet, go do updates only
858F A6A4             (./engine/sound/Sm):00927 [4]     10086           lda   PlaybackControl,y
8591 84EF             (./engine/sound/Sm):00928 [2]     10088           anda  #$EF
8593 A7A4             (./engine/sound/Sm):00929 [4]     10092           sta   PlaybackControl,y        ; When duration over, clear "do not attack" bit 4 (0x10) of track's play control
                      (./engine/sound/Sm):00930                         
8595                  (./engine/sound/Sm):00931                 PSGDoNext
8595 AE24             (./engine/sound/Sm):00932 [6]     10098           ldx   DataPointer,y
8597 A6A4             (./engine/sound/Sm):00933 [4]     10102           lda   PlaybackControl,y        ; Clear bit 1 (02h) "track is rest" from track
8599 84FD             (./engine/sound/Sm):00934 [2]     10104           anda  #$FD
859B A7A4             (./engine/sound/Sm):00935 [4]     10108           sta   PlaybackControl,y        
                      (./engine/sound/Sm):00936                        
859D                  (./engine/sound/Sm):00937                 PSGReadCoordFlag        
859D E680             (./engine/sound/Sm):00938 [6]     10114           ldb   ,x+                      ; Read song data
859F C1E0             (./engine/sound/Sm):00939 [2]     10116           cmpb  #$E0
85A1 2505             (./engine/sound/Sm):00940 [3]     10119           blo   @a                       ; Test for >= E0h, which is a coordination flag
85A3 BD8A30           (./engine/sound/Sm):00941 [8]     10127           jsr   CoordFlag
85A6 20F5             (./engine/sound/Sm):00942 [3]     10130           bra   PSGReadCoordFlag         ; Read all consecutive coordination flags
85A8 2A34             (./engine/sound/Sm):00943 [3]     10133   @a      bpl   PSGSetDuration           ; Test for 80h not set, which is a note duration
                      (./engine/sound/Sm):00944                         
85AA                  (./engine/sound/Sm):00945                 PSGSetFreq
85AA C081             (./engine/sound/Sm):00946 [2]     10135           subb  #$81                     ; Test for a rest
85AC 2412             (./engine/sound/Sm):00947 [3]     10138           bcc   @a                       ; If a note branch
85AE A6A4             (./engine/sound/Sm):00948 [4]     10142           lda   PlaybackControl,y        ; If carry (only time that happens if 80h because of earlier logic) this is a rest!
85B0 8A02             (./engine/sound/Sm):00949 [2]     10144           ora   #$02
85B2 A7A4             (./engine/sound/Sm):00950 [4]     10148           sta   PlaybackControl,y        ; Set bit 1 (track is at rest)
85B4 E621             (./engine/sound/Sm):00951 [5]     10153           ldb   VoiceControl,y           ; Get "voice control" byte (loads upper bits which specify attenuation setting)        
                      (./engine/sound/Sm):00952                         _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
85B6 8504             (      _PSGNoteOff):00001 [2]     10155           bita  #$04                     ; Is SFX overriding set?
85B8 2604             (      _PSGNoteOff):00002 [3]     10158           bne   @skip                    ; if true skip note off, sfx is playing               
85BA CA1F             (      _PSGNoteOff):00003 [2]     10160           orb   #$1F                     ; Volume Off
85BC D7FF             (      _PSGNoteOff):00004 [4]     10164           stb   <PSG
     85BE             (      _PSGNoteOff):00005                 @skip   equ   *        
85BE 2014             (./engine/sound/Sm):00953 [3]     10167           bra   @b
85C0 CB03             (./engine/sound/Sm):00954 [2]     10169   @a      addb  #$03                     ; Add Frequencies offet for C0 Note, access lower notes with transpose
85C2 EB26             (./engine/sound/Sm):00955 [5]     10174           addb  Transpose,y              ; Add current channel transpose (coord flag E9)
85C4 C146             (./engine/sound/Sm):00956 [2]     10176           cmpb  #70                      ; array bound check
85C6 2502             (./engine/sound/Sm):00957 [3]     10179           blo   @c
85C8 C645             (./engine/sound/Sm):00958 [2]     10181           ldb   #69                      
85CA 58               (./engine/sound/Sm):00959 [2]     10183   @c      aslb                           ; Transform note into an index...
85CB CE86F0           (./engine/sound/Sm):00960 [3]     10186           ldu   #PSGFrequencies
85CE 8600             (./engine/sound/Sm):00961 [2]     10188           lda   #0    
85D0 ECCB             (./engine/sound/Sm):00962 [9]     10197           ldd   d,u
85D2 ED2D             (./engine/sound/Sm):00963 [6]     10203           std   NextData,y                ; Store Frequency
85D4 E684             (./engine/sound/Sm):00964 [4]     10207   @b      ldb   ,x                        ; Get next byte
85D6 2A04             (./engine/sound/Sm):00965 [3]     10210           bpl   PSGSetDurationAndForward  ; Test for 80h not set, which is a note duration
85D8 E62C             (./engine/sound/Sm):00966 [5]     10215           ldb   SavedDuration,y        
85DA 2007             (./engine/sound/Sm):00967 [3]     10218           bra   PSGFinishTrackUpdate
                      (./engine/sound/Sm):00968                 
85DC                  (./engine/sound/Sm):00969                 PSGSetDurationAndForward
85DC 3001             (./engine/sound/Sm):00970 [5]     10223           leax  1,x
                      (./engine/sound/Sm):00971                         
85DE                  (./engine/sound/Sm):00972                 PSGSetDuration
85DE A623             (./engine/sound/Sm):00973 [5]     10228           lda   TempoDivider,y
85E0 3D               (./engine/sound/Sm):00974 [11]    10239           mul
85E1 E72C             (./engine/sound/Sm):00975 [5]     10244           stb   SavedDuration,y
                      (./engine/sound/Sm):00976                 
85E3                  (./engine/sound/Sm):00977                 PSGFinishTrackUpdate
85E3 E72B             (./engine/sound/Sm):00978 [5]     10249           stb   DurationTimeout,y        ; Last set duration ... put into ticker
85E5 AF24             (./engine/sound/Sm):00979 [6]     10255           stx   DataPointer,y            ; Stores to the track pointer memory
85E7 A6A4             (./engine/sound/Sm):00980 [4]     10259           lda   PlaybackControl,y
85E9 8510             (./engine/sound/Sm):00981 [2]     10261           bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
85EB 2702             (./engine/sound/Sm):00982 [3]     10264           beq   @a                       
85ED 2013             (./engine/sound/Sm):00983 [3]     10267           bra   PSGDoNoteOn              ; If so, quit
85EF E6A810           (./engine/sound/Sm):00984 [5]     10272   @a      ldb   NoteFillMaster,y
85F2 E72F             (./engine/sound/Sm):00985 [5]     10277           stb   NoteFillTimeout,y        ; Reset 0Fh "note fill" value to master
85F4 6F29             (./engine/sound/Sm):00986 [7]     10284           clr   VolFlutter,y             ; Reset PSG flutter byte
85F6 8508             (./engine/sound/Sm):00987 [2]     10286           bita  #$08                     ; Is bit 3 (08h) modulation turned on?
85F8 2602             (./engine/sound/Sm):00988 [3]     10289           bne   @b
85FA 2006             (./engine/sound/Sm):00989 [3]     10292           bra   PSGDoNoteOn              ; if not, quit
85FC AEA811           (./engine/sound/Sm):00990 [6]     10298   @b      ldx   ModulationPtr,y
85FF BD8B5A           (./engine/sound/Sm):00991 [8]     10306           jsr   SetModulation            ; reload modulation settings for the new note
                      (./engine/sound/Sm):00992                         
8602                  (./engine/sound/Sm):00993                 PSGDoNoteOn
8602 A6A4             (./engine/sound/Sm):00994 [4]     10310           lda   PlaybackControl,y
8604 8502             (./engine/sound/Sm):00995 [2]     10312           bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
8606 2701             (./engine/sound/Sm):00996 [3]     10315           beq   PSGUpdateFreq                       
8608 39               (./engine/sound/Sm):00997 [5]     10320           rts                            ; If so, quit
8609                  (./engine/sound/Sm):00998                 PSGUpdateFreq
8609 E6A819           (./engine/sound/Sm):00999 [5]     10325           ldb   Detune,y
860C 1D               (./engine/sound/Sm):01000 [2]     10327           sex
860D E32D             (./engine/sound/Sm):01001 [7]     10334           addd  NextData,y               ; Apply detune but don't update stored frequency
860F FD8623           (./engine/sound/Sm):01002 [6]     10340           std   @dyn+1
8612 C40F             (./engine/sound/Sm):01003 [2]     10342           andb  #$0F                     ; Keep only lower four bits (first PSG reg write only applies d0-d3 of freq)
8614 A621             (./engine/sound/Sm):01004 [5]     10347           lda   VoiceControl,y
8616 81E0             (./engine/sound/Sm):01005 [2]     10349           cmpa  #$E0
8618 2604             (./engine/sound/Sm):01006 [3]     10352           bne   @a
861A CBC0             (./engine/sound/Sm):01007 [2]     10354           addb  #$C0
861C 2002             (./engine/sound/Sm):01008 [3]     10357           bra   @b
861E EB21             (./engine/sound/Sm):01009 [5]     10362   @a      addb  VoiceControl,y           ; Get "voice control" byte...
8620 D7FF             (./engine/sound/Sm):01010 [4]     10366   @b      stb   <PSG
8622 CC0000           (./engine/sound/Sm):01011 [3]     10369   @dyn    ldd   #0
                      (./engine/sound/Sm):01012                         _lsrd
8625 44               (            _lsrd):00001 [2]     10371           lsra
8626 56               (            _lsrd):00002 [2]     10373           rorb
                      (./engine/sound/Sm):01013                         _lsrd
8627 44               (            _lsrd):00001 [2]     10375           lsra
8628 56               (            _lsrd):00002 [2]     10377           rorb
                      (./engine/sound/Sm):01014                         _lsrd
8629 44               (            _lsrd):00001 [2]     10379           lsra
862A 56               (            _lsrd):00002 [2]     10381           rorb
                      (./engine/sound/Sm):01015                         _lsrd              
862B 44               (            _lsrd):00001 [2]     10383           lsra
862C 56               (            _lsrd):00002 [2]     10385           rorb
862D D7FF             (./engine/sound/Sm):01016 [4]     10389           stb   <PSG
862F 2011             (./engine/sound/Sm):01017 [3]     10392           bra   PSGDoVolFX
                      (./engine/sound/Sm):01018                         
8631                  (./engine/sound/Sm):01019                 PSGUpdateVolFX
8631 A628             (./engine/sound/Sm):01020 [5]     10397           lda   VoiceIndex,y
8633 2753             (./engine/sound/Sm):01021 [3]     10400           beq   PSGDoModulation
8635 E627             (./engine/sound/Sm):01022 [5]     10405           ldb   Volume,y
8637 F78670           (./engine/sound/Sm):01023 [5]     10410           stb   DynVol+1          
863A 200F             (./engine/sound/Sm):01024 [3]     10413           bra   PSGFlutter
                      (./engine/sound/Sm):01025                 
863C                  (./engine/sound/Sm):01026                 VolEnvHold
863C A629             (./engine/sound/Sm):01027 [5]     10418           lda   VolFlutter,y             ; This just decrements the flutter to keep it in place; no more volume changes in this list
863E 8002             (./engine/sound/Sm):01028 [2]     10420           suba  #2                       ; Put index back (before final volume value)
8640 A729             (./engine/sound/Sm):01029 [5]     10425           sta   VolFlutter,y             ; Loop back and update volume
                      (./engine/sound/Sm):01030                         
8642                  (./engine/sound/Sm):01031                 PSGDoVolFX
8642 E627             (./engine/sound/Sm):01032 [5]     10430           ldb   Volume,y
8644 F78670           (./engine/sound/Sm):01033 [5]     10435           stb   DynVol+1
8647 A628             (./engine/sound/Sm):01034 [5]     10440           lda   VoiceIndex,y
8649 271A             (./engine/sound/Sm):01035 [3]     10443           beq   PSGUpdateVol             ; If tone is zero, jump to PSGUpdateVol
                      (./engine/sound/Sm):01036                                 
864B                  (./engine/sound/Sm):01037                 PSGFlutter
864B 48               (./engine/sound/Sm):01038 [2]     10445           asla
864C 8E8782           (./engine/sound/Sm):01039 [3]     10448           ldx   #PSG_FlutterTbl
864F AE86             (./engine/sound/Sm):01040 [6]     10454           ldx   a,x
8651 A629             (./engine/sound/Sm):01041 [5]     10459           lda   VolFlutter,y
8653 6C29             (./engine/sound/Sm):01042 [7]     10466           inc   VolFlutter,y        
8655 A686             (./engine/sound/Sm):01043 [5]     10471           lda   a,x
8657 2A04             (./engine/sound/Sm):01044 [3]     10474           bpl   @a
8659 8180             (./engine/sound/Sm):01045 [2]     10476           cmpa  #$80
865B 27DF             (./engine/sound/Sm):01046 [3]     10479           beq   VolEnvHold
865D B78661           (./engine/sound/Sm):01047 [5]     10484   @a      sta   >*+4
8660 CB00             (./engine/sound/Sm):01048 [2]     10486           addb  #0
8662 F78670           (./engine/sound/Sm):01049 [5]     10491           stb   DynVol+1
                      (./engine/sound/Sm):01050                                 
8665                  (./engine/sound/Sm):01051                 PSGUpdateVol                
8665 A6A4             (./engine/sound/Sm):01052 [4]     10495           lda   PlaybackControl,y
8667 8506             (./engine/sound/Sm):01053 [2]     10497           bita  #$06                     ; If either bit 1 ("track in rest") and 2 ("SFX overriding this track"), quit!
8669 261D             (./engine/sound/Sm):01054 [3]     10500           bne   PSGDoModulation          ; If so, branch           
866B 8510             (./engine/sound/Sm):01055 [2]     10502           bita  #$10                     ; Is bit 4 (10h) "do not attack next note" set on playback?
866D 2610             (./engine/sound/Sm):01056 [3]     10505           bne   @b                       ; If so, branch
866F C600             (./engine/sound/Sm):01057 [2]     10507   DynVol  ldb   #0                       ; (dynamic) volume
8671 C110             (./engine/sound/Sm):01058 [2]     10509           cmpb  #$10
8673 2502             (./engine/sound/Sm):01059 [3]     10512           blo   @a
8675 C60F             (./engine/sound/Sm):01060 [2]     10514           ldb   #$0F
8677 EB21             (./engine/sound/Sm):01061 [5]     10519   @a      addb  VoiceControl,y
8679 CA10             (./engine/sound/Sm):01062 [2]     10521           orb   #$10
867B D7FF             (./engine/sound/Sm):01063 [4]     10525           stb   <PSG
867D 2009             (./engine/sound/Sm):01064 [3]     10528           bra   PSGDoModulation        
867F A6A810           (./engine/sound/Sm):01065 [5]     10533   @b      lda   NoteFillMaster,y         ; If you get here, then "do not attack next note" was set...
8682 27EB             (./engine/sound/Sm):01066 [3]     10536           beq   DynVol                   ; If it's zero, then just process normally
8684 A62F             (./engine/sound/Sm):01067 [5]     10541           lda   NoteFillTimeout,y        
8686 26E7             (./engine/sound/Sm):01068 [3]     10544           bne   DynVol                   ; If it's not zero, then just process normally
                      (./engine/sound/Sm):01069                         
8688                  (./engine/sound/Sm):01070                 PSGDoModulation  
8688 A6A4             (./engine/sound/Sm):01071 [4]     10548           lda   PlaybackControl,y
868A 8502             (./engine/sound/Sm):01072 [2]     10550           bita  #$02                     ; Is bit 1 (02h) "track is at rest" set on playback?
868C 2701             (./engine/sound/Sm):01073 [3]     10553           beq   @a
868E 39               (./engine/sound/Sm):01074 [5]     10558           rts                            ; If so, quit        
868F 8508             (./engine/sound/Sm):01075 [2]     10560   @a      bita  #$08                     ; Is bit 3 (08h) "modulation on" set on playback?
8691 2601             (./engine/sound/Sm):01076 [3]     10563           bne   @b
8693 39               (./engine/sound/Sm):01077 [5]     10568           rts                            ; If not, quit        
8694 A6A813           (./engine/sound/Sm):01078 [5]     10573   @b      lda   ModulationWait,y         ; 'ww' period of time before modulation starts
8697 2704             (./engine/sound/Sm):01079 [3]     10576           beq   @c                       ; if zero, go to it!
8699 6AA813           (./engine/sound/Sm):01080 [7]     10583           dec   ModulationWait,y         ; Otherwise, decrement timer
869C 39               (./engine/sound/Sm):01081 [5]     10588           rts                            ; return if decremented
869D 6AA814           (./engine/sound/Sm):01082 [7]     10595   @c      dec   ModulationSpeed,y        ; Decrement modulation speed counter
86A0 2701             (./engine/sound/Sm):01083 [3]     10598           beq   @d
86A2 39               (./engine/sound/Sm):01084 [5]     10603           rts                            ; Return if not yet zero
86A3 AEA811           (./engine/sound/Sm):01085 [6]     10609   @d      ldx   ModulationPtr,y
86A6 A601             (./engine/sound/Sm):01086 [5]     10614           lda   1,x
86A8 A7A814           (./engine/sound/Sm):01087 [5]     10619           sta   ModulationSpeed,y
86AB A6A816           (./engine/sound/Sm):01088 [5]     10624           lda   ModulationSteps,y
86AE 2609             (./engine/sound/Sm):01089 [3]     10627           bne   @e
86B0 A603             (./engine/sound/Sm):01090 [5]     10632           lda   3,x
86B2 A7A816           (./engine/sound/Sm):01091 [5]     10637           sta   ModulationSteps,y     
86B5 60A815           (./engine/sound/Sm):01092 [7]     10644           neg   ModulationDelta,y
86B8 39               (./engine/sound/Sm):01093 [5]     10649           rts                
86B9 6AA816           (./engine/sound/Sm):01094 [7]     10656   @e      dec   ModulationSteps,y
86BC E6A815           (./engine/sound/Sm):01095 [5]     10661           ldb   ModulationDelta,y
86BF 1D               (./engine/sound/Sm):01096 [2]     10663           sex
86C0 E3A817           (./engine/sound/Sm):01097 [7]     10670           addd  ModulationVal,y
86C3 EDA817           (./engine/sound/Sm):01098 [6]     10676           std   ModulationVal,y        
                      (./engine/sound/Sm):01099                               
86C6                  (./engine/sound/Sm):01100                 PSGUpdateFreq2
86C6 E6A819           (./engine/sound/Sm):01101 [5]     10681           ldb   Detune,y
86C9 1D               (./engine/sound/Sm):01102 [2]     10683           sex
86CA E32D             (./engine/sound/Sm):01103 [7]     10690           addd  NextData,y               ; apply detune but don't update stored frequency
86CC E3A817           (./engine/sound/Sm):01104 [7]     10697           addd  ModulationVal,y          ; add modulation effect
86CF FD86E3           (./engine/sound/Sm):01105 [6]     10703           std   @dyn+1
86D2 C40F             (./engine/sound/Sm):01106 [2]     10705           andb  #$0F                     ; Keep only lower four bits (first PSG reg write only applies d0-d3 of freq)
86D4 A621             (./engine/sound/Sm):01107 [5]     10710           lda   VoiceControl,y
86D6 81E0             (./engine/sound/Sm):01108 [2]     10712           cmpa  #$E0
86D8 2604             (./engine/sound/Sm):01109 [3]     10715           bne   @a
86DA CBC0             (./engine/sound/Sm):01110 [2]     10717           addb  #$C0
86DC 2002             (./engine/sound/Sm):01111 [3]     10720           bra   @b
86DE EB21             (./engine/sound/Sm):01112 [5]     10725   @a      addb  VoiceControl,y           ; Get "voice control" byte...
86E0 D7FF             (./engine/sound/Sm):01113 [4]     10729   @b      stb   <PSG
86E2 CC0000           (./engine/sound/Sm):01114 [3]     10732   @dyn    ldd   #0
                      (./engine/sound/Sm):01115                         _lsrd
86E5 44               (            _lsrd):00001 [2]     10734           lsra
86E6 56               (            _lsrd):00002 [2]     10736           rorb
                      (./engine/sound/Sm):01116                         _lsrd
86E7 44               (            _lsrd):00001 [2]     10738           lsra
86E8 56               (            _lsrd):00002 [2]     10740           rorb
                      (./engine/sound/Sm):01117                         _lsrd
86E9 44               (            _lsrd):00001 [2]     10742           lsra
86EA 56               (            _lsrd):00002 [2]     10744           rorb
                      (./engine/sound/Sm):01118                         _lsrd              
86EB 44               (            _lsrd):00001 [2]     10746           lsra
86EC 56               (            _lsrd):00002 [2]     10748           rorb
86ED D7FF             (./engine/sound/Sm):01119 [4]     10752           stb   <PSG
86EF 39               (./engine/sound/Sm):01120 [5]     10757           rts        
                      (./engine/sound/Sm):01121                  
                      (./engine/sound/Sm):01122                 ; 70 notes (Note value $81=C3 $C7=G#8) with direct access
                      (./engine/sound/Sm):01123                 ; (Note value $C8 is reserved for PSG3 to drive noise PSG4)
                      (./engine/sound/Sm):01124                 ; Other notes can be accessed by transpose
86F0                  (./engine/sound/Sm):01125                 PSGFrequencies
86F0 03F803C00388     (./engine/sound/Sm):01126                         fdb                                                         $03F8,$03C0,$0388 ; A2 - B2
86F6 0356032702FA02CF (./engine/sound/Sm):01127                         fdb   $0356,$0327,$02FA,$02CF,$02A5,$0281,$025C,$023B,$021A,$01FC,$01E0,$01C4 ; C3 - B3
     02A50281025C023B
     021A01FC01E001C4
870E 01AB0193017D0167 (./engine/sound/Sm):01128                         fdb   $01AB,$0193,$017D,$0167,$0152,$0140,$012E,$011D,$010D,$00FE,$00F0,$00E2 ; C4 - B4
     01520140012E011D
     010D00FE00F000E2
8726 00D500C900BE00B3 (./engine/sound/Sm):01129                         fdb   $00D5,$00C9,$00BE,$00B3,$00A9,$00A0,$0097,$008E,$0086,$007F,$0078,$0071 ; C5 - B5
     00A900A00097008E
     0086007F00780071
873E 006A0064005F0059 (./engine/sound/Sm):01130                         fdb   $006A,$0064,$005F,$0059,$0054,$0050,$004B,$0047,$0043,$0040,$003C,$0039 ; C6 - B6
     00540050004B0047
     00430040003C0039
8756 00350032002F002C (./engine/sound/Sm):01131                         fdb   $0035,$0032,$002F,$002C,$002A,$0028,$0025,$0023,$0022,$0020,$001F,$001D ; C7 - B7
     002A002800250023
     00220020001F001D
876E 001A001900170016 (./engine/sound/Sm):01132                         fdb   $001A,$0019,$0017,$0016,$0015,$0014,$0012,$0011,$0010,$0001             ; C8 - G#8
     0015001400120011
     00100001
                      (./engine/sound/Sm):01133                         ; (Last 3 values are also used for channel 3 when driving noise channel. $0000 doesn't work for real SN76489 chip, so was replaced by $0001 value)
                      (./engine/sound/Sm):01134                 
8782                  (./engine/sound/Sm):01135                 PSG_FlutterTbl
                      (./engine/sound/Sm):01136                     ; Basically, for any tone 0-11, dynamic volume adjustments are applied to produce a pseudo-decay,
                      (./engine/sound/Sm):01137                     ; or sometimes a ramp up for "soft" sounds, or really any other volume effect you might want!
                      (./engine/sound/Sm):01138                 
                      (./engine/sound/Sm):01139                     ; Remember on PSG that the higher the value, the quieter it gets (it's attenuation, not volume);
                      (./engine/sound/Sm):01140                     ; 0 is thus loudest, and increasing values decay, until level $F (silent)
8782 0000             (./engine/sound/Sm):01141                         fdb   0 ; saves a dec instruction in table lookup
8784 879E87B587BC87CD (./engine/sound/Sm):01142                         fdb   Flutter1,Flutter2,Flutter3,Flutter4
878C 87D887E78811882D (./engine/sound/Sm):01143                         fdb   Flutter5,Flutter6,Flutter7,Flutter8
8794 8855886688A488C0 (./engine/sound/Sm):01144                         fdb   Flutter9,Flutter10,Flutter11,Flutter12
879C 8940             (./engine/sound/Sm):01145                         fdb   Flutter13
879E                  (./engine/sound/Sm):01146                 Flutter1
879E 0000000101010202 (./engine/sound/Sm):01147                         fcb   0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5
     0203030304040405
87AE 05050606060780   (./engine/sound/Sm):01148                         fcb   5,5,6,6,6,7,$80
87B5                  (./engine/sound/Sm):01149                 Flutter2
87B5 00020406081080   (./engine/sound/Sm):01150                         fcb   0,2,4,6,8,$10,$80
87BC                  (./engine/sound/Sm):01151                 Flutter3
87BC 0000010102020303 (./engine/sound/Sm):01152                         fcb   0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,$80
     0404050506060707
     80
87CD                  (./engine/sound/Sm):01153                 Flutter4
87CD 0000020304040505 (./engine/sound/Sm):01154                         fcb   0,0,2,3,4,4,5,5,5,6,$80
     050680
87D8                  (./engine/sound/Sm):01155                 Flutter5
87D8 0303030202020201 (./engine/sound/Sm):01156                         fcb   3,3,3,2,2,2,2,1,1,1,0,0,0,0,$80
     01010000000080
87E7                  (./engine/sound/Sm):01157                 Flutter6
87E7 0000000000000000 (./engine/sound/Sm):01158                         fcb   0,0,0,0,0,0,0,0,0,0,1,1
     00000101
87F3 0101010101010101 (./engine/sound/Sm):01159                         fcb   1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2
     0101010102020202
8803 0202020203030303 (./engine/sound/Sm):01160                         fcb   2,2,2,2,3,3,3,3,3,3,3,3,4,$80
     030303030480
8811                  (./engine/sound/Sm):01161                 Flutter7
8811 0000000000000101 (./engine/sound/Sm):01162                         fcb   0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,2
     0101010202020202
8821 0303030404040505 (./engine/sound/Sm):01163                         fcb   3,3,3,4,4,4,5,5,5,6,7,$80
     05060780
882D                  (./engine/sound/Sm):01164                 Flutter8
882D 0000000000010101 (./engine/sound/Sm):01165                         fcb   0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,2
     0101020202020202
883D 0303030303040404 (./engine/sound/Sm):01166                         fcb   3,3,3,3,3,4,4,4,4,4,5,5,5,5,5,6
     0404050505050506
884D 0606060607070780 (./engine/sound/Sm):01167                         fcb   6,6,6,6,7,7,7,$80
8855                  (./engine/sound/Sm):01168                 Flutter9
8855 0001020304050607 (./engine/sound/Sm):01169                         fcb   0,1,2,3,4,5,6,7,8,9,$0A,$0B,$0C,$0D,$0E,$0F,$80
     08090A0B0C0D0E0F
     80
8866                  (./engine/sound/Sm):01170                 Flutter10
8866 0000000000000000 (./engine/sound/Sm):01171                         fcb   0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1
     0000010101010101
8876 0101010101010101 (./engine/sound/Sm):01172                         fcb   1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     0101010101010101
8886 0101010101010101 (./engine/sound/Sm):01173                         fcb   1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2
     0202020202020202
8896 0202030303030303 (./engine/sound/Sm):01174                         fcb   2,2,3,3,3,3,3,3,3,3,3,3,4,$80
     030303030480
88A4                  (./engine/sound/Sm):01175                 Flutter11
88A4 0404040303030202 (./engine/sound/Sm):01176                         fcb   4,4,4,3,3,3,2,2,2,1,1,1,1,1,1,1
     0201010101010101
88B4 0202020202030303 (./engine/sound/Sm):01177                         fcb   2,2,2,2,2,3,3,3,3,3,4,$80
     03030480
88C0                  (./engine/sound/Sm):01178                 Flutter12
88C0 0404030302020101 (./engine/sound/Sm):01179                         fcb   4,4,3,3,2,2,1,1,1,1,1,1,1,1,1,1
     0101010101010101
88D0 0101010101010101 (./engine/sound/Sm):01180                         fcb   1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2
     0101020202020202
88E0 0202020202020202 (./engine/sound/Sm):01181                         fcb   2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3
     0202020202020303
88F0 0303030303030303 (./engine/sound/Sm):01182                         fcb   3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
     0303030303030303
8900 0303040404040404 (./engine/sound/Sm):01183                         fcb   3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4
     0404040404040404
8910 0404040404040505 (./engine/sound/Sm):01184                         fcb   4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5
     0505050505050505
8920 0505050505050505 (./engine/sound/Sm):01185                         fcb   5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6
     0505060606060606
8930 0606060606060606 (./engine/sound/Sm):01186                         fcb   6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,$80
     0606060606060780
8940                  (./engine/sound/Sm):01187                 Flutter13
8940 0E0D0C0B0A090807 (./engine/sound/Sm):01188                         fcb   $0E,$0D,$0C,$0B,$0A,9,8,7,6,5,4,3,2,1,0,$80
     0605040302010080
                      (./engine/sound/Sm):01189                 
                      (./engine/sound/Sm):01190                 ;   END of PSG_FlutterTbl ---------------------------                 
                      (./engine/sound/Sm):01191                           
                      (./engine/sound/Sm):01192                 ******************************************************************************
                      (./engine/sound/Sm):01193                 * PlaySound - Load and play a new sound effect
                      (./engine/sound/Sm):01194                 *
                      (./engine/sound/Sm):01195                 * receives in X the address of the sound
                      (./engine/sound/Sm):01196                 * destroys X
                      (./engine/sound/Sm):01197                 ******************************************************************************          
                      (./engine/sound/Sm):01198                 
8950                  (./engine/sound/Sm):01199                 SFXTrackOffs        
8950 7F67             (./engine/sound/Sm):01200                         fdb   SFXFM3                   ; identified by Track id 8002 in smps sfx file (for Sonic 2 compatibility)
8952 7F67             (./engine/sound/Sm):01201                         fdb   SFXFM3                   ; identified by Track id 8003 in smps sfx file        
8954 7F91             (./engine/sound/Sm):01202                         fdb   SFXFM4                   ; identified by Track id 8004 in smps sfx file        
8956 7FBB             (./engine/sound/Sm):01203                         fdb   SFXFM5                   ; identified by Track id 8005 in smps sfx file
8958 7FE5             (./engine/sound/Sm):01204                         fdb   SFXPSG1                  ; identified by Track id 8080 in smps sfx file
895A 800F             (./engine/sound/Sm):01205                         fdb   SFXPSG2                  ; identified by Track id 80A0 in smps sfx file
895C 8039             (./engine/sound/Sm):01206                         fdb   SFXPSG3                  ; identified by Track id 80C0 in smps sfx file
895E 8039             (./engine/sound/Sm):01207                         fdb   SFXPSG3                  ; identified by Track id 80E0 in smps sfx file
                      (./engine/sound/Sm):01208                 
8960                  (./engine/sound/Sm):01209                 MusicTrackOffs
8960 7DC3             (./engine/sound/Sm):01210                         fdb   SongFM3
8962 7DC3             (./engine/sound/Sm):01211                         fdb   SongFM3        
8964 7DED             (./engine/sound/Sm):01212                         fdb   SongFM4        
8966 7E17             (./engine/sound/Sm):01213                         fdb   SongFM5
8968 7EE9             (./engine/sound/Sm):01214                         fdb   SongPSG1
896A 7F13             (./engine/sound/Sm):01215                         fdb   SongPSG2
896C 7F3D             (./engine/sound/Sm):01216                         fdb   SongPSG3
896E 7F3D             (./engine/sound/Sm):01217                         fdb   SongPSG3
                      (./engine/sound/Sm):01218                 
8970                  (./engine/sound/Sm):01219                 PlaySound
8970 3466             (./engine/sound/Sm):01220 [11]    10768           pshs  d,y,u
                      (./engine/sound/Sm):01221                 
                      (./engine/sound/Sm):01222                         _GetCartPageA
                      (    _GetCartPageA):00001                  IFDEF T2
8972 BD7949           (    _GetCartPageA):00002 [8]     10776           jsr   GetCartPageA
                      (    _GetCartPageA):00003                  ELSE
                      (    _GetCartPageA):00004                         lda   $E7E6
                      (    _GetCartPageA):00005                  ENDC
8975 B78A29           (./engine/sound/Sm):01223 [5]     10781           sta   PlaySound_end+1          ; backup data page
8978 A684             (./engine/sound/Sm):01224 [4]     10785           lda   ,x                       ; get memory page that contains track data
897A B78068           (./engine/sound/Sm):01225 [5]     10790           sta   SoundPage
897D AE01             (./engine/sound/Sm):01226 [6]     10796           ldx   1,x                      ; get ptr to track data
897F BF806B           (./engine/sound/Sm):01227 [6]     10802           stx   SoundData
                      (./engine/sound/Sm):01228                         _SetCartPageA
                      (    _SetCartPageA):00001                  IFDEF T2
8982 BD78F1           (    _SetCartPageA):00002 [8]     10810           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
                      (./engine/sound/Sm):01229                         
8985 EC84             (./engine/sound/Sm):01230 [5]     10815           ldd   SMPS_SFX_VOICE,x
8987 F3806B           (./engine/sound/Sm):01231 [7]     10822           addd  SoundData   
898A FD7D3A           (./engine/sound/Sm):01232 [6]     10828           std   Smps.SFXVoiceTblPtr
                      (./engine/sound/Sm):01233                 
898D EC02             (./engine/sound/Sm):01234 [6]     10834           ldd   SMPS_SFX_TEMPO_NB_CH,x   ; init process for each track
898F B78A04           (./engine/sound/Sm):01235 [5]     10839           sta   @dyna+2        
8992 F78A2F           (./engine/sound/Sm):01236 [5]     10844           stb   PS_cnt
8995 3004             (./engine/sound/Sm):01237 [5]     10849           leax  SMPS_SFX_HDR_LEN,x        
8997 CE8960           (./engine/sound/Sm):01238 [3]     10852   @a      ldu   #MusicTrackOffs
899A EC84             (./engine/sound/Sm):01239 [5]     10857           ldd   SMPS_SFX_TRK_CH,x        ; read playbackcontrol and voice id
899C FD8A0A           (./engine/sound/Sm):01240 [6]     10863           std   @dynb+1
899F 5D               (./engine/sound/Sm):01241 [2]     10865           tstb
89A0 2B08             (./engine/sound/Sm):01242 [3]     10868           bmi   @psg
89A2 C002             (./engine/sound/Sm):01243 [2]     10870           subb  #2                       ; this is an fm track
89A4 58               (./engine/sound/Sm):01244 [2]     10872           aslb                           ; transform track ref to an index: $02,$04,$05 => 0,4,6
89A5 10AEC5           (./engine/sound/Sm):01245 [7]     10879           ldy   b,u    
89A8 2013             (./engine/sound/Sm):01246 [3]     10882           bra   @c
89AA C1C0             (./engine/sound/Sm):01247 [2]     10884   @psg    cmpb  #$C0
89AC 2608             (./engine/sound/Sm):01248 [3]     10887           bne   @b
89AE 86DF             (./engine/sound/Sm):01249 [2]     10889           lda   #$DF                     ; set silence on PSG3
89B0 97FF             (./engine/sound/Sm):01250 [4]     10893           sta   <PSG
89B2 86FF             (./engine/sound/Sm):01251 [2]     10895           lda   #$FF
89B4 97FF             (./engine/sound/Sm):01252 [4]     10899           sta   <PSG
89B6 54               (./engine/sound/Sm):01253 [2]     10901   @b      lsrb                           ; this is a psg track
89B7 54               (./engine/sound/Sm):01254 [2]     10903           lsrb
89B8 54               (./engine/sound/Sm):01255 [2]     10905           lsrb
89B9 54               (./engine/sound/Sm):01256 [2]     10907           lsrb                           ; transform track ref to an index: $80,$A0,$C0,$E0 => 8,10,12,14
89BA 10AEC5           (./engine/sound/Sm):01257 [7]     10914           ldy   b,u    
89BD A6A4             (./engine/sound/Sm):01258 [4]     10918   @c      lda   PlaybackControl,y        ; y (hl) ptr to Music Track
89BF 8A04             (./engine/sound/Sm):01259 [2]     10920           ora   #$04                     ; Set "SFX is overriding this track!" bit
89C1 A7A4             (./engine/sound/Sm):01260 [4]     10924           sta   PlaybackControl,y
89C3 CE8950           (./engine/sound/Sm):01261 [3]     10927           ldu   #SFXTrackOffs
89C6 EEC5             (./engine/sound/Sm):01262 [6]     10933           ldu   b,u                      ; u (ix) ptr to SFX Track
89C8 CC0000           (./engine/sound/Sm):01263 [3]     10936           ldd   #0                       ; clear SFX Track
89CB EDC4             (./engine/sound/Sm):01264 [5]     10941           std   ,u
89CD ED42             (./engine/sound/Sm):01265 [6]     10947           std   2,u
89CF ED44             (./engine/sound/Sm):01266 [6]     10953           std   4,u
89D1 ED46             (./engine/sound/Sm):01267 [6]     10959           std   6,u
89D3 ED48             (./engine/sound/Sm):01268 [6]     10965           std   8,u
89D5 ED4A             (./engine/sound/Sm):01269 [6]     10971           std   10,u
89D7 ED4C             (./engine/sound/Sm):01270 [6]     10977           std   12,u
89D9 ED4E             (./engine/sound/Sm):01271 [6]     10983           std   14,u
89DB EDC810           (./engine/sound/Sm):01272 [6]     10989           std   16,u
89DE EDC812           (./engine/sound/Sm):01273 [6]     10995           std   18,u
89E1 EDC814           (./engine/sound/Sm):01274 [6]     11001           std   20,u
89E4 EDC816           (./engine/sound/Sm):01275 [6]     11007           std   22,u
89E7 EDC818           (./engine/sound/Sm):01276 [6]     11013           std   24,u
89EA EDC81A           (./engine/sound/Sm):01277 [6]     11019           std   26,u
89ED EDC81C           (./engine/sound/Sm):01278 [6]     11025           std   28,u
89F0 EDC81E           (./engine/sound/Sm):01279 [6]     11031           std   30,u
89F3 EDC820           (./engine/sound/Sm):01280 [6]     11037           std   32,u
89F6 EDC822           (./engine/sound/Sm):01281 [6]     11043           std   34,u
89F9 EDC824           (./engine/sound/Sm):01282 [6]     11049           std   36,u
89FC EDC826           (./engine/sound/Sm):01283 [6]     11055           std   38,u
89FF EDC828           (./engine/sound/Sm):01284 [6]     11061           std   40,u
8A02 CC0100           (./engine/sound/Sm):01285 [3]     11064   @dyna   ldd   #$0100                   ; (dynamic) TempoDivider
8A05 A74B             (./engine/sound/Sm):01286 [5]     11069           sta   DurationTimeout,u        ; current duration timeout to 1 (will expire immediately and thus update)
8A07 E743             (./engine/sound/Sm):01287 [5]     11074           stb   TempoDivider,u
8A09 CC0000           (./engine/sound/Sm):01288 [3]     11077   @dynb   ldd   #0                       ; (dynamic)
8A0C A7C4             (./engine/sound/Sm):01289 [4]     11081           sta   PlaybackControl,u
8A0E E741             (./engine/sound/Sm):01290 [5]     11086           stb   VoiceControl,u
8A10 C62A             (./engine/sound/Sm):01291 [2]     11088           ldb   #GoSubStack
8A12 E74A             (./engine/sound/Sm):01292 [5]     11093           stb   StackPointer,u           ; Reset track "gosub" stack
8A14 EC02             (./engine/sound/Sm):01293 [6]     11099           ldd   SMPS_SFX_TRK_DATA_PTR,x 
8A16 F3806B           (./engine/sound/Sm):01294 [7]     11106           addd  SoundData
8A19 ED44             (./engine/sound/Sm):01295 [6]     11112           std   DataPointer,u
8A1B EC04             (./engine/sound/Sm):01296 [6]     11118           ldd   SMPS_SFX_TRK_TR_VOL_PTR,x
8A1D ED46             (./engine/sound/Sm):01297 [6]     11124           std   TranspAndVolume,u        
8A1F 3006             (./engine/sound/Sm):01298 [5]     11129           leax  SMPS_SFX_TRK_HDR_LEN,x
8A21 7A8A2F           (./engine/sound/Sm):01299 [7]     11136           dec   PS_cnt    
8A24 1026FF6F         (./engine/sound/Sm):01300 [5+?]   11141           lbne  @a  
                      (./engine/sound/Sm):01301                 
8A28                  (./engine/sound/Sm):01302                 PlaySound_end
8A28 8600             (./engine/sound/Sm):01303 [2]     11143           lda   #0
                      (./engine/sound/Sm):01304                         _SetCartPageA          
                      (    _SetCartPageA):00001                  IFDEF T2
8A2A BD78F1           (    _SetCartPageA):00002 [8]     11151           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8A2D 35E6             (./engine/sound/Sm):01305 [13]    11164           puls  d,y,u,pc
                      (./engine/sound/Sm):01306                 
8A2F 00               (./engine/sound/Sm):01307                 PS_cnt  fcb   0
                      (./engine/sound/Sm):01308                         
                      (./engine/sound/Sm):01309                 ******************************************************************************
                      (./engine/sound/Sm):01310                 * CoordFlag
                      (./engine/sound/Sm):01311                 ******************************************************************************
                      (./engine/sound/Sm):01312                 
8A30                  (./engine/sound/Sm):01313                 CoordFlag
8A30 C0E0             (./engine/sound/Sm):01314 [2]     11166           subb  #$E0
8A32 58               (./engine/sound/Sm):01315 [2]     11168           aslb
8A33 CE8A38           (./engine/sound/Sm):01316 [3]     11171           ldu   #CoordFlagLookup
8A36 6ED5             (./engine/sound/Sm):01317 [7]     11178           jmp   [b,u] 
                      (./engine/sound/Sm):01318                 
8A38                  (./engine/sound/Sm):01319                 CoordFlagLookup
8A38 8C67             (./engine/sound/Sm):01320                         fdb   cfSkip1               ; E0 -- unsupported (panning)
8A3A 8A78             (./engine/sound/Sm):01321                         fdb   cfDetune              ; E1 -- done
8A3C 8C67             (./engine/sound/Sm):01322                         fdb   cfSkip1               ; E2 -- unsupported
8A3E 8A8E             (./engine/sound/Sm):01323                         fdb   cfJumpReturn          ; E3 -- done
8A40 8A97             (./engine/sound/Sm):01324                         fdb   cfFadeInToPrevious    ; E4 --todo
8A42 8A98             (./engine/sound/Sm):01325                         fdb   cfSetTempoDivider     ; E5 -- done
8A44 8A9D             (./engine/sound/Sm):01326                         fdb   cfChangeFMVolume      ; E6 -- done
8A46 8ACA             (./engine/sound/Sm):01327                         fdb   cfPreventAttack       ; E7 -- done
8A48 8AD1             (./engine/sound/Sm):01328                         fdb   cfNoteFill            ; E8 -- done
8A4A 8AD9             (./engine/sound/Sm):01329                         fdb   cfChangeTransposition ; E9 -- done
8A4C 8AE0             (./engine/sound/Sm):01330                         fdb   cfSetTempo            ; EA -- done
8A4E 8AE6             (./engine/sound/Sm):01331                         fdb   cfSetTempoMod         ; EB -- done
8A50 8B04             (./engine/sound/Sm):01332                         fdb   cfChangePSGVolume     ; EC -- done
8A52 8C69             (./engine/sound/Sm):01333                         fdb   cfNop                 ; ED -- unsupported
8A54 8C69             (./engine/sound/Sm):01334                         fdb   cfNop                 ; EE -- unsupported
8A56 8B0B             (./engine/sound/Sm):01335                         fdb   cfSetVoice            ; EF -- done
8A58 8B51             (./engine/sound/Sm):01336                         fdb   cfModulation          ; F0 -- done
8A5A 8B75             (./engine/sound/Sm):01337                         fdb   cfEnableModulation    ; F1 -- done
8A5C 8B7C             (./engine/sound/Sm):01338                         fdb   cfStopTrack           ; F2 -- done
8A5E 8C1D             (./engine/sound/Sm):01339                         fdb   cfSetPSGNoise         ; F3 -- done
8A60 8C2F             (./engine/sound/Sm):01340                         fdb   cfDisableModulation   ; F4 -- done
8A62 8C36             (./engine/sound/Sm):01341                         fdb   cfSetPSGTone          ; F5 -- done
8A64 8C3B             (./engine/sound/Sm):01342                         fdb   cfJumpTo              ; F6 -- done
8A66 8C40             (./engine/sound/Sm):01343                         fdb   cfRepeatAtPos         ; F7 -- done
8A68 8C58             (./engine/sound/Sm):01344                         fdb   cfJumpToGosub         ; F8 -- done
8A6A 8C69             (./engine/sound/Sm):01345                         fdb   cfNop                 ; F9 -- unsupported
8A6C 8C69             (./engine/sound/Sm):01346                         fdb   cfNop                 ; FA -- free
8A6E 8C69             (./engine/sound/Sm):01347                         fdb   cfNop                 ; FB -- free
8A70 8C69             (./engine/sound/Sm):01348                         fdb   cfNop                 ; FC -- free
8A72 8C69             (./engine/sound/Sm):01349                         fdb   cfNop                 ; FD -- free
8A74 8C69             (./engine/sound/Sm):01350                         fdb   cfNop                 ; FE -- free
8A76 8C69             (./engine/sound/Sm):01351                         fdb   cfNop                 ; FF -- free
                      (./engine/sound/Sm):01352                 
                      (./engine/sound/Sm):01353                 ; (via Saxman's doc): Alter note values by xx
                      (./engine/sound/Sm):01354                 ; More or less a pitch bend; this is applied to the frequency as a signed value
                      (./engine/sound/Sm):01355                 ;              
8A78                  (./engine/sound/Sm):01356                 cfDetune
8A78 A680             (./engine/sound/Sm):01357 [6]     11184           lda   ,x+
                      (./engine/sound/Sm):01358                         ; this should be replaced by a conversion of the smps music file
                      (./engine/sound/Sm):01359                         ; here to play sonic2 files only
8A7A E621             (./engine/sound/Sm):01360 [5]     11189           ldb   VoiceControl,y           ; read channel nb
8A7C 2B0C             (./engine/sound/Sm):01361 [3]     11192           bmi   @a                       ; Is voice control bit 7 (80h) a PSG track set?        
8A7E 47               (./engine/sound/Sm):01362 [2]     11194           asra                           ; ratio freq btw YM2612 and YM2413 is 3.73, so tame a bit (/3)
8A7F B78A87           (./engine/sound/Sm):01363 [5]     11199           sta   @dyna+1
8A82 47               (./engine/sound/Sm):01364 [2]     11201           asra        
8A83 B78A89           (./engine/sound/Sm):01365 [5]     11206           sta   @dynb+1
8A86 8600             (./engine/sound/Sm):01366 [2]     11208   @dyna   lda   #0           
8A88 8000             (./engine/sound/Sm):01367 [2]     11210   @dynb   suba  #0         
                      (./engine/sound/Sm):01368                         ; end of tmp code
8A8A A7A819           (./engine/sound/Sm):01369 [5]     11215   @a      sta   Detune,y
8A8D 39               (./engine/sound/Sm):01370 [5]     11220           rts           
                      (./engine/sound/Sm):01371                 
                      (./engine/sound/Sm):01372                 ; Return (Sonic 1 & 2)
                      (./engine/sound/Sm):01373                 ;
8A8E                  (./engine/sound/Sm):01374                 cfJumpReturn
8A8E A62A             (./engine/sound/Sm):01375 [5]     11225           lda   StackPointer,y           ; retrieve stack ptr
8A90 AEA6             (./engine/sound/Sm):01376 [6]     11231           ldx   a,y                      ; load return address
8A92 8B02             (./engine/sound/Sm):01377 [2]     11233           adda  #2                       
8A94 A72A             (./engine/sound/Sm):01378 [5]     11238           sta   StackPointer,y           ; free stack position
8A96 39               (./engine/sound/Sm):01379 [5]     11243           rts         
                      (./engine/sound/Sm):01380                         
8A97                  (./engine/sound/Sm):01381                 cfFadeInToPrevious
8A97 39               (./engine/sound/Sm):01382 [5]     11248           rts   
                      (./engine/sound/Sm):01383                 
                      (./engine/sound/Sm):01384                 ; Change tempo divider to xx
                      (./engine/sound/Sm):01385                 ;        
8A98                  (./engine/sound/Sm):01386                 cfSetTempoDivider
8A98 A680             (./engine/sound/Sm):01387 [6]     11254           lda   ,x+
8A9A A723             (./engine/sound/Sm):01388 [5]     11259           sta   TempoDivider,y
8A9C 39               (./engine/sound/Sm):01389 [5]     11264           rts    
                      (./engine/sound/Sm):01390                         
                      (./engine/sound/Sm):01391                 ; (via Saxman's doc): Change channel volume BY xx; xx is signed
                      (./engine/sound/Sm):01392                 ;
8A9D                  (./engine/sound/Sm):01393                 cfChangeFMVolume
8A9D A627             (./engine/sound/Sm):01394 [5]     11269           lda   Volume,y                 ; apply volume attenuation change
8A9F AB80             (./engine/sound/Sm):01395 [6]     11275           adda  ,x+
8AA1 A727             (./engine/sound/Sm):01396 [5]     11280           sta   Volume,y
8AA3 E6A4             (./engine/sound/Sm):01397 [4]     11284           ldb   PlaybackControl,y
8AA5 C504             (./engine/sound/Sm):01398 [2]     11286           bitb  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8AA7 2620             (./engine/sound/Sm):01399 [3]     11289           bne   @rts        
8AA9 44               (./engine/sound/Sm):01400 [2]     11291           lsra                           ; volume attenuation is unsigned
8AAA 44               (./engine/sound/Sm):01401 [2]     11293           lsra
8AAB 44               (./engine/sound/Sm):01402 [2]     11295           lsra
8AAC B78AC0           (./engine/sound/Sm):01403 [5]     11300           sta   @dyn1+1
8AAF 8630             (./engine/sound/Sm):01404 [2]     11302           lda   #$30
8AB1 AB21             (./engine/sound/Sm):01405 [5]     11307           adda  VoiceControl,y
8AB3 97FC             (./engine/sound/Sm):01406 [4]     11311           sta   <YM2413_A0
8AB5 E6A81F           (./engine/sound/Sm):01407 [5]     11316           ldb   InstrAndVolume,y         
8AB8 1F98             (./engine/sound/Sm):01408 [6]     11322           tfr   b,a
8ABA 8A0F             (./engine/sound/Sm):01409 [2]     11324           ora   #$0F                     ; set maximum attenuation for compare        
8ABC B78AC2           (./engine/sound/Sm):01410 [5]     11329           sta   @dyn2+1
8ABF CB00             (./engine/sound/Sm):01411 [2]     11331   @dyn1   addb  #0                       ; (dynamic) add global volume attenuation to actual voice
8AC1 C100             (./engine/sound/Sm):01412 [2]     11333   @dyn2   cmpb  #0                       ; (dynamic) test if overflow of attenuation value
8AC3 2502             (./engine/sound/Sm):01413 [3]     11336           blo   @write                   ; attenuation < F and no overflow
8AC5 1F89             (./engine/sound/Sm):01414 [6]     11342           tfr   a,b                      ; set maximum attenuation (F)
8AC7 D7FD             (./engine/sound/Sm):01415 [4]     11346   @write  stb   <YM2413_D0        
8AC9 39               (./engine/sound/Sm):01416 [5]     11351   @rts    rts     
                      (./engine/sound/Sm):01417                 
8ACA                  (./engine/sound/Sm):01418                 cfPreventAttack
8ACA A6A4             (./engine/sound/Sm):01419 [4]     11355           lda   PlaybackControl,y
8ACC 8A10             (./engine/sound/Sm):01420 [2]     11357           ora   #$10
8ACE A7A4             (./engine/sound/Sm):01421 [4]     11361           sta   PlaybackControl,y        ; Set bit 4 (10h) on playback control; do not attack next note
8AD0 39               (./engine/sound/Sm):01422 [5]     11366           rts      
                      (./engine/sound/Sm):01423                 
                      (./engine/sound/Sm):01424                 ; (via Saxman's doc): set note fill amount to xx
                      (./engine/sound/Sm):01425                 ;
8AD1                  (./engine/sound/Sm):01426                 cfNoteFill 
8AD1 A680             (./engine/sound/Sm):01427 [6]     11372           lda   ,x+
8AD3 A72F             (./engine/sound/Sm):01428 [5]     11377           sta   NoteFillTimeout,y
8AD5 A7A810           (./engine/sound/Sm):01429 [5]     11382           sta   NoteFillMaster,y
8AD8 39               (./engine/sound/Sm):01430 [5]     11387           rts          
                      (./engine/sound/Sm):01431                 
                      (./engine/sound/Sm):01432                 ; (via Saxman's doc): add xx to channel key
                      (./engine/sound/Sm):01433                 ;
8AD9                  (./engine/sound/Sm):01434                 cfChangeTransposition
8AD9 A626             (./engine/sound/Sm):01435 [5]     11392           lda   Transpose,y
8ADB AB80             (./engine/sound/Sm):01436 [6]     11398           adda  ,x+
8ADD A726             (./engine/sound/Sm):01437 [5]     11403           sta   Transpose,y
8ADF 39               (./engine/sound/Sm):01438 [5]     11408           rts
                      (./engine/sound/Sm):01439                 
                      (./engine/sound/Sm):01440                 ; (via Saxman's doc): set music tempo to xx
                      (./engine/sound/Sm):01441                 ;
8AE0                  (./engine/sound/Sm):01442                 cfSetTempo 
8AE0 A680             (./engine/sound/Sm):01443 [6]     11414           lda   ,x+
8AE2 B77D31           (./engine/sound/Sm):01444 [5]     11419           sta   Smps.CurrentTempo
8AE5 39               (./engine/sound/Sm):01445 [5]     11424           rts          
                      (./engine/sound/Sm):01446                 
                      (./engine/sound/Sm):01447                 ; (via Saxman's doc): Change Tempo Modifier to xx for ALL channels
                      (./engine/sound/Sm):01448                 ;
8AE6                  (./engine/sound/Sm):01449                 cfSetTempoMod
8AE6 A680             (./engine/sound/Sm):01450 [6]     11430           lda   ,x+
8AE8 B77D48           (./engine/sound/Sm):01451 [5]     11435           sta   SongDAC.TempoDivider
8AEB B77D72           (./engine/sound/Sm):01452 [5]     11440           sta   SongFM1.TempoDivider
8AEE B77D9C           (./engine/sound/Sm):01453 [5]     11445           sta   SongFM2.TempoDivider
8AF1 B77DC6           (./engine/sound/Sm):01454 [5]     11450           sta   SongFM3.TempoDivider
8AF4 B77DF0           (./engine/sound/Sm):01455 [5]     11455           sta   SongFM4.TempoDivider
8AF7 B77E1A           (./engine/sound/Sm):01456 [5]     11460           sta   SongFM5.TempoDivider
                      (./engine/sound/Sm):01457                         ;sta   SongFM6.TempoDivider
                      (./engine/sound/Sm):01458                         ;sta   SongFM7.TempoDivider
                      (./engine/sound/Sm):01459                         ;sta   SongFM8.TempoDivider
                      (./engine/sound/Sm):01460                         ;sta   SongFM9.TempoDivider        
8AFA B77EEC           (./engine/sound/Sm):01461 [5]     11465           sta   SongPSG1.TempoDivider
8AFD B77F16           (./engine/sound/Sm):01462 [5]     11470           sta   SongPSG2.TempoDivider
8B00 B77F40           (./engine/sound/Sm):01463 [5]     11475           sta   SongPSG3.TempoDivider
                      (./engine/sound/Sm):01464                         ;sta   SongPSG4.TempoDivider        
8B03 39               (./engine/sound/Sm):01465 [5]     11480           rts        
                      (./engine/sound/Sm):01466                 
8B04                  (./engine/sound/Sm):01467                 cfChangePSGVolume
8B04 A627             (./engine/sound/Sm):01468 [5]     11485           lda   Volume,y
8B06 AB80             (./engine/sound/Sm):01469 [6]     11491           adda  ,x+
8B08 A727             (./engine/sound/Sm):01470 [5]     11496           sta   Volume,y
8B0A 39               (./engine/sound/Sm):01471 [5]     11501           rts    
                      (./engine/sound/Sm):01472                         
                      (./engine/sound/Sm):01473                 ; (via Saxman's doc): set voice selection to xx
                      (./engine/sound/Sm):01474                 ;
8B0B                  (./engine/sound/Sm):01475                 cfSetVoice
8B0B E680             (./engine/sound/Sm):01476 [6]     11507           ldb   ,x+
8B0D E728             (./engine/sound/Sm):01477 [5]     11512           stb   VoiceIndex,y             ; save voice index to restore voice after sfx        
8B0F A6A4             (./engine/sound/Sm):01478 [4]     11516           lda   PlaybackControl,y
8B11 8504             (./engine/sound/Sm):01479 [2]     11518           bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8B13 263B             (./engine/sound/Sm):01480 [3]     11521           bne   @rts                     ; yes skip YM command
8B15 B68064           (./engine/sound/Sm):01481 [5]     11526           lda   DoSFXFlag
8B18 2B05             (./engine/sound/Sm):01482 [3]     11529           bmi   @a
8B1A FE7D38           (./engine/sound/Sm):01483 [6]     11535           ldu   Smps.VoiceTblPtr
8B1D 2003             (./engine/sound/Sm):01484 [3]     11538           bra   @b
8B1F FE7D3A           (./engine/sound/Sm):01485 [6]     11544   @a      ldu   Smps.SFXVoiceTblPtr
8B22                  (./engine/sound/Sm):01486                 @b        
8B22 A621             (./engine/sound/Sm):01487 [5]     11549           lda   VoiceControl,y           ; read channel nb   
8B24 8B30             (./engine/sound/Sm):01488 [2]     11551           adda  #$30
8B26 97FC             (./engine/sound/Sm):01489 [4]     11555           sta   <YM2413_A0
8B28 58               (./engine/sound/Sm):01490 [2]     11557           aslb
8B29 ECC5             (./engine/sound/Sm):01491 [6]     11563           ldd   b,u
8B2B A7A81F           (./engine/sound/Sm):01492 [5]     11568           sta   InstrAndVolume,y        
8B2E E7A81E           (./engine/sound/Sm):01493 [5]     11573           stb   InstrTranspose,y
8B31 E627             (./engine/sound/Sm):01494 [5]     11578           ldb   Volume,y                 ; apply current track attenuation to voice
8B33 54               (./engine/sound/Sm):01495 [2]     11580           lsrb                           ; volume attenuation is unsigned
8B34 54               (./engine/sound/Sm):01496 [2]     11582           lsrb
8B35 54               (./engine/sound/Sm):01497 [2]     11584           lsrb
8B36 F78B47           (./engine/sound/Sm):01498 [5]     11589           stb   @dyn1+1
8B39 C630             (./engine/sound/Sm):01499 [2]     11591           ldb   #$30
8B3B EB21             (./engine/sound/Sm):01500 [5]     11596           addb  VoiceControl,y
8B3D D7FC             (./engine/sound/Sm):01501 [4]     11600           stb   <YM2413_A0
8B3F 1F89             (./engine/sound/Sm):01502 [6]     11606           tfr   a,b
8B41 CA0F             (./engine/sound/Sm):01503 [2]     11608           orb   #$0F                     ; set maximum attenuation for compare        
8B43 F78B49           (./engine/sound/Sm):01504 [5]     11613           stb   @dyn2+1
8B46 8B00             (./engine/sound/Sm):01505 [2]     11615   @dyn1   adda  #0                       ; (dynamic) add global volume attenuation
8B48 8100             (./engine/sound/Sm):01506 [2]     11617   @dyn2   cmpa  #0                       ; (dynamic) test if overflow of attenuation value
8B4A 2502             (./engine/sound/Sm):01507 [3]     11620           blo   @write                   ; attenuation < F and no overflow
8B4C 1F98             (./engine/sound/Sm):01508 [6]     11626           tfr   b,a                      ; set maximum attenuation (F)
8B4E 97FD             (./engine/sound/Sm):01509 [4]     11630   @write  sta   <YM2413_D0     
8B50 39               (./engine/sound/Sm):01510 [5]     11635   @rts    rts
                      (./engine/sound/Sm):01511                 
                      (./engine/sound/Sm):01512                 ; (via Saxman's doc): F0wwxxyyzz - modulation
                      (./engine/sound/Sm):01513                 ; o        ww - Wait for ww period of time before modulation starts
                      (./engine/sound/Sm):01514                 ; o        xx - Modulation Speed
                      (./engine/sound/Sm):01515                 ; o        yy - Modulation change per Mod. Step
                      (./engine/sound/Sm):01516                 ; o        zz - Number of steps in modulation
                      (./engine/sound/Sm):01517                 ;
8B51                  (./engine/sound/Sm):01518                 cfModulation
8B51 A6A4             (./engine/sound/Sm):01519 [4]     11639           lda   PlaybackControl,y
8B53 8A08             (./engine/sound/Sm):01520 [2]     11641           ora   #$08
8B55 A7A4             (./engine/sound/Sm):01521 [4]     11645           sta   PlaybackControl,y        ; Set bit 3 (08h) of "playback control" byte (modulation on)
8B57 AFA811           (./engine/sound/Sm):01522 [6]     11651           stx   ModulationPtr,y          ; Back up modulation setting address
8B5A                  (./engine/sound/Sm):01523                 SetModulation
8B5A EC81             (./engine/sound/Sm):01524 [8]     11659           ldd   ,x++                     ; also read ModulationSpeed
8B5C EDA813           (./engine/sound/Sm):01525 [6]     11665           std   ModulationWait,y         ; also write ModulationSpeed
8B5F EC81             (./engine/sound/Sm):01526 [8]     11673           ldd   ,x++                     ; also read ModulationSteps
8B61 A7A815           (./engine/sound/Sm):01527 [5]     11678           sta   ModulationDelta,y        
8B64 54               (./engine/sound/Sm):01528 [2]     11680           lsrb                           ; divide number of steps by 2
8B65 E7A816           (./engine/sound/Sm):01529 [5]     11685           stb   ModulationSteps,y
8B68 A6A4             (./engine/sound/Sm):01530 [4]     11689           lda   PlaybackControl,y
8B6A 8510             (./engine/sound/Sm):01531 [2]     11691           bita  #$10                     ; Is bit 4 "do not attack next note" (10h) set?
8B6C 2606             (./engine/sound/Sm):01532 [3]     11694           bne   @a                       ; If so, quit!
8B6E CC0000           (./engine/sound/Sm):01533 [3]     11697           ldd   #0
8B71 EDA817           (./engine/sound/Sm):01534 [6]     11703           std   ModulationVal,y          ; Clear modulation value
8B74 39               (./engine/sound/Sm):01535 [5]     11708   @a      rts         
                      (./engine/sound/Sm):01536                 
                      (./engine/sound/Sm):01537                 ; (via Saxman's doc): Turn on modulation
                      (./engine/sound/Sm):01538                 ;
8B75                  (./engine/sound/Sm):01539                 cfEnableModulation
8B75 A6A4             (./engine/sound/Sm):01540 [4]     11712           lda   PlaybackControl,y
8B77 8A08             (./engine/sound/Sm):01541 [2]     11714           ora   #$08
8B79 A7A4             (./engine/sound/Sm):01542 [4]     11718           sta   PlaybackControl,y        ; Set bit 3 (08h) of "playback control" byte (modulation on)
8B7B 39               (./engine/sound/Sm):01543 [5]     11723           rts   
                      (./engine/sound/Sm):01544                 
                      (./engine/sound/Sm):01545                 ; (via Saxman's doc): stop the track
                      (./engine/sound/Sm):01546                 ;
8B7C                  (./engine/sound/Sm):01547                 cfStopTrack
8B7C A6A4             (./engine/sound/Sm):01548 [4]     11727           lda   PlaybackControl,y
8B7E 846F             (./engine/sound/Sm):01549 [2]     11729           anda  #$6F                     ; clear playback byte bit 7 (80h) -- currently playing (not anymore)
8B80 A7A4             (./engine/sound/Sm):01550 [4]     11733           sta   PlaybackControl,y        ; clear playback byte bit 4 (10h) -- do not attack
                      (./engine/sound/Sm):01551                         
8B82 E621             (./engine/sound/Sm):01552 [5]     11738           ldb   VoiceControl,y           ; read channel nb
8B84 2B12             (./engine/sound/Sm):01553 [3]     11741           bmi   @a                       ; Is voice control bit 7 (80h) a PSG track set?
                      (./engine/sound/Sm):01554                         _FMNoteOff                     ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y               
8B86 8504             (       _FMNoteOff):00001 [2]     11743           bita  #$04                     ; Is SFX overriding set?
8B88 260C             (       _FMNoteOff):00002 [3]     11746           bne   @skip                    ; if true skip note off, sfx is playing        
8B8A CB20             (       _FMNoteOff):00003 [2]     11748           addb  #$20                     ; set Sus/Key/Block/FNum(MSB) Command
8B8C D7FC             (       _FMNoteOff):00004 [4]     11752           stb   <YM2413_A0
8B8E E622             (       _FMNoteOff):00005 [5]     11757           ldb   NoteControl,y            ; load current value (do not erase FNum MSB)
8B90 C4EF             (       _FMNoteOff):00006 [2]     11759           andb  #$EF                     ; clear bit 4 (10h) Key Off
8B92 D7FD             (       _FMNoteOff):00007 [4]     11763           stb   <YM2413_D0               ; send to YM
8B94 E722             (       _FMNoteOff):00008 [5]     11768           stb   NoteControl,y               
     8B96             (       _FMNoteOff):00009                 @skip   equ   *        
8B96 2008             (./engine/sound/Sm):01555 [3]     11771           bra   @b
8B98                  (./engine/sound/Sm):01556                 @a      _PSGNoteOff                    ; (dependency) should be preceded by A loaded with PlaybackControl,y and B with VoiceControl,y
8B98 8504             (      _PSGNoteOff):00001 [2]     11773           bita  #$04                     ; Is SFX overriding set?
8B9A 2604             (      _PSGNoteOff):00002 [3]     11776           bne   @skip                    ; if true skip note off, sfx is playing               
8B9C CA1F             (      _PSGNoteOff):00003 [2]     11778           orb   #$1F                     ; Volume Off
8B9E D7FF             (      _PSGNoteOff):00004 [4]     11782           stb   <PSG
     8BA0             (      _PSGNoteOff):00005                 @skip   equ   *        
8BA0 B68064           (./engine/sound/Sm):01557 [5]     11787   @b      lda   DoSFXFlag
8BA3 2B03             (./engine/sound/Sm):01558 [3]     11790           bmi   @d
8BA5 3540             (./engine/sound/Sm):01559 [7]     11797   @rts    puls  u                        ; removing return address from stack; will not return to coord flag loop
8BA7 39               (./engine/sound/Sm):01560 [5]     11802           rts
8BA8 A621             (./engine/sound/Sm):01561 [5]     11807   @d      lda   VoiceControl,y           ; this is SFX Track
8BAA 102B0050         (./engine/sound/Sm):01562 [5+?]   11812           lbmi  @psgsfx
8BAE CE8960           (./engine/sound/Sm):01563 [3]     11815           ldu   #MusicTrackOffs          ; get back the overriden music track
8BB1 8002             (./engine/sound/Sm):01564 [2]     11817           suba  #2
8BB3 48               (./engine/sound/Sm):01565 [2]     11819           asla                           ; transform track ref to an index: $02,$04,$05 => 0,4,6
8BB4 EEC6             (./engine/sound/Sm):01566 [6]     11825           ldu   a,u                      ; U ptr to same FM track ID than SFX but for Music, Y still for FM SFX Track
8BB6 A6C4             (./engine/sound/Sm):01567 [4]     11829           lda   PlaybackControl,u
8BB8 8504             (./engine/sound/Sm):01568 [2]     11831           bita  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8BBA 27E9             (./engine/sound/Sm):01569 [3]     11834           beq   @rts                     ; if not skip this part (i.e. if SFX was not overriding this track, then nothing to restore)
8BBC 84FB             (./engine/sound/Sm):01570 [2]     11836           anda  #$FB                     ; Clear SFX is overriding this track from playback control
8BBE 8A02             (./engine/sound/Sm):01571 [2]     11838           ora   #$02                     ; Set bit 1 (track is at rest)
8BC0 A7C4             (./engine/sound/Sm):01572 [4]     11842           sta   PlaybackControl,u
8BC2 B68067           (./engine/sound/Sm):01573 [5]     11847           lda   MusicPage
                      (./engine/sound/Sm):01574                         _SetCartPageA        
                      (    _SetCartPageA):00001                  IFDEF T2
8BC5 BD78F1           (    _SetCartPageA):00002 [8]     11855           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8BC8 BE7D38           (./engine/sound/Sm):01575 [6]     11861           ldx   Smps.VoiceTblPtr       ; Restore Voice to music channel (x can be erased because we are stopping track read)        
8BCB E648             (./engine/sound/Sm):01576 [5]     11866           ldb   VoiceIndex,u
8BCD A641             (./engine/sound/Sm):01577 [5]     11871           lda   VoiceControl,u           ; read channel nb  
8BCF 8B30             (./engine/sound/Sm):01578 [2]     11873           adda  #$30
8BD1 97FC             (./engine/sound/Sm):01579 [4]     11877           sta   <YM2413_A0
8BD3 58               (./engine/sound/Sm):01580 [2]     11879           aslb
8BD4 EC85             (./engine/sound/Sm):01581 [6]     11885           ldd   b,x
8BD6 A7C81F           (./engine/sound/Sm):01582 [5]     11890           sta   InstrAndVolume,u        
8BD9 E7C81E           (./engine/sound/Sm):01583 [5]     11895           stb   InstrTranspose,u
8BDC E647             (./engine/sound/Sm):01584 [5]     11900           ldb   Volume,u                 ; apply current track attenuation to voice
8BDE 54               (./engine/sound/Sm):01585 [2]     11902           lsrb                           ; volume attenuation is unsigned
8BDF 54               (./engine/sound/Sm):01586 [2]     11904           lsrb
8BE0 54               (./engine/sound/Sm):01587 [2]     11906           lsrb
8BE1 F78BEC           (./engine/sound/Sm):01588 [5]     11911           stb   @dyn1+1
8BE4 1F89             (./engine/sound/Sm):01589 [6]     11917           tfr   a,b
8BE6 CA0F             (./engine/sound/Sm):01590 [2]     11919           orb   #$0F                     ; set maximum attenuation for compare        
8BE8 F78BEE           (./engine/sound/Sm):01591 [5]     11924           stb   @dyn2+1
8BEB 8B00             (./engine/sound/Sm):01592 [2]     11926   @dyn1   adda  #0                       ; (dynamic) add global volume attenuation
8BED 8100             (./engine/sound/Sm):01593 [2]     11928   @dyn2   cmpa  #0                       ; (dynamic) test if overflow of attenuation value
8BEF 2502             (./engine/sound/Sm):01594 [3]     11931           blo   @write                   ; attenuation < F and no overflow
8BF1 1F98             (./engine/sound/Sm):01595 [6]     11937           tfr   b,a                      ; set maximum attenuation (F)
8BF3 97FD             (./engine/sound/Sm):01596 [4]     11941   @write  sta   <YM2413_D0   
8BF5 B68068           (./engine/sound/Sm):01597 [5]     11946           lda   SoundPage
                      (./engine/sound/Sm):01598                         _SetCartPageA  
                      (    _SetCartPageA):00001                  IFDEF T2
8BF8 BD78F1           (    _SetCartPageA):00002 [8]     11954           jsr   SetCartPageA
                      (    _SetCartPageA):00003                  ELSE
                      (    _SetCartPageA):00004                         sta   $E7E6                    ; selection de la page RAM en zone cartouche
                      (    _SetCartPageA):00005                  ENDC
8BFB 3540             (./engine/sound/Sm):01599 [7]     11961           puls  u                        ; removing return address from stack; will not return to coord flag loop
8BFD 39               (./engine/sound/Sm):01600 [5]     11966           rts                   
8BFE CE8960           (./engine/sound/Sm):01601 [3]     11969   @psgsfx ldu   #MusicTrackOffs
8C01 44               (./engine/sound/Sm):01602 [2]     11971           lsra                           ; this is a psg fx track
8C02 44               (./engine/sound/Sm):01603 [2]     11973           lsra
8C03 44               (./engine/sound/Sm):01604 [2]     11975           lsra
8C04 44               (./engine/sound/Sm):01605 [2]     11977           lsra                           ; transform track ref to an index: $80,$A0,$C0,$E0 => 8,10,12,14
8C05 EEC6             (./engine/sound/Sm):01606 [6]     11983           ldu   a,u                      ; U ptr to same FM track ID than SFX but for Music, Y still for FM SFX Track
8C07 A6C4             (./engine/sound/Sm):01607 [4]     11987           lda   PlaybackControl,u
8C09 84FB             (./engine/sound/Sm):01608 [2]     11989           anda  #$FB                     ; Clear SFX is overriding this track from playback control
8C0B 8A02             (./engine/sound/Sm):01609 [2]     11991           ora   #$02                     ; Set bit 1 (track is at rest)
8C0D A7C4             (./engine/sound/Sm):01610 [4]     11995           sta   PlaybackControl,u
8C0F A641             (./engine/sound/Sm):01611 [5]     12000           lda   VoiceControl,u           ; read channel nb
8C11 81E0             (./engine/sound/Sm):01612 [2]     12002           cmpa  #$E0                     ; Is this a PSG 3 noise (not tone) track?
8C13 2605             (./engine/sound/Sm):01613 [3]     12005           bne   @c                       ; If it isn't, don't do next part (non-PSG Noise doesn't restore)
8C15 A6C81B           (./engine/sound/Sm):01614 [5]     12010           lda   PSGNoise,u               ; Get PSG noise setting
8C18 97FF             (./engine/sound/Sm):01615 [4]     12014           sta   <PSG                     ; Write it to PSG
8C1A 3540             (./engine/sound/Sm):01616 [7]     12021   @c      puls  u                        ; removing return address from stack; will not return to coord flag loop                        
8C1C 39               (./engine/sound/Sm):01617 [5]     12026           rts
                      (./engine/sound/Sm):01618                 
                      (./engine/sound/Sm):01619                 ; (via Saxman's doc): Change current PSG noise to xx (For noise channel, E0-E7)
                      (./engine/sound/Sm):01620                 ;
8C1D                  (./engine/sound/Sm):01621                 cfSetPSGNoise
8C1D 86E0             (./engine/sound/Sm):01622 [2]     12028           lda   #$E0
8C1F A721             (./engine/sound/Sm):01623 [5]     12033           sta   VoiceControl,y
8C21 A680             (./engine/sound/Sm):01624 [6]     12039           lda   ,x+
8C23 A7A81B           (./engine/sound/Sm):01625 [5]     12044           sta   PSGNoise,y
8C26 E6A4             (./engine/sound/Sm):01626 [4]     12048           ldb   PlaybackControl,y
8C28 C504             (./engine/sound/Sm):01627 [2]     12050           bitb  #$04                     ; Is bit 2 (04h) Is SFX overriding this track?
8C2A 2602             (./engine/sound/Sm):01628 [3]     12053           bne   @rts        
8C2C 97FF             (./engine/sound/Sm):01629 [4]     12057           sta   <PSG
8C2E 39               (./engine/sound/Sm):01630 [5]     12062   @rts    rts        
                      (./engine/sound/Sm):01631                 
8C2F                  (./engine/sound/Sm):01632                 cfDisableModulation
8C2F A6A4             (./engine/sound/Sm):01633 [4]     12066           lda   PlaybackControl,y
8C31 84F7             (./engine/sound/Sm):01634 [2]     12068           anda  #$F7
8C33 A7A4             (./engine/sound/Sm):01635 [4]     12072           sta   PlaybackControl,y        ; Clear bit 3 (08h) of "playback control" byte (modulation off)        
8C35 39               (./engine/sound/Sm):01636 [5]     12077           rts  
                      (./engine/sound/Sm):01637                 
                      (./engine/sound/Sm):01638                 ; (via Saxman's doc): Change current PSG tone to xx
                      (./engine/sound/Sm):01639                 ;
8C36                  (./engine/sound/Sm):01640                 cfSetPSGTone
8C36 A680             (./engine/sound/Sm):01641 [6]     12083           lda   ,x+
8C38 A728             (./engine/sound/Sm):01642 [5]     12088           sta   VoiceIndex,y
8C3A 39               (./engine/sound/Sm):01643 [5]     12093           rts         
                      (./engine/sound/Sm):01644                 
                      (./engine/sound/Sm):01645                 ; (via Saxman's doc):  $F6zzzz - jump to position
                      (./engine/sound/Sm):01646                 ;    * zzzz - position to loop back to (negative offset)
                      (./engine/sound/Sm):01647                 ;
8C3B                  (./engine/sound/Sm):01648                 cfJumpTo
8C3B EC84             (./engine/sound/Sm):01649 [5]     12098           ldd   ,x
8C3D 308B             (./engine/sound/Sm):01650 [8]     12106           leax  d,x
8C3F 39               (./engine/sound/Sm):01651 [5]     12111           rts             
                      (./engine/sound/Sm):01652                 
                      (./engine/sound/Sm):01653                 ; (via Saxman's doc): $F7xxyyzzzz - repeat section of music
                      (./engine/sound/Sm):01654                 ;    * xx - loop index, for loops within loops without confusing the engine.
                      (./engine/sound/Sm):01655                 ;          o EXAMPLE: Some notes, then a section that is looped twice, then some more notes, and finally the whole thing is looped three times.
                      (./engine/sound/Sm):01656                 ;            The "inner" loop (the section that is looped twice) would have an xx of 01, looking something along the lines of F70102zzzz, whereas the "outside" loop (the whole thing loop) would have an xx of 00, looking something like F70003zzzz.
                      (./engine/sound/Sm):01657                 ;    * yy - number of times to repeat
                      (./engine/sound/Sm):01658                 ;          o NOTE: This includes the initial encounter of the F7 flag, not number of times to repeat AFTER hitting the flag.
                      (./engine/sound/Sm):01659                 ;    * zzzz - position to loop back to (negative offset)
                      (./engine/sound/Sm):01660                 ;
8C40                  (./engine/sound/Sm):01661                 cfRepeatAtPos
8C40 EC81             (./engine/sound/Sm):01662 [8]     12119           ldd   ,x++                     ; Loop index is in 'a'
8C42 8B20             (./engine/sound/Sm):01663 [2]     12121           adda  #LoopCounters            ; Add to make loop index offset
8C44 33A6             (./engine/sound/Sm):01664 [5]     12126           leau  a,y
8C46 6DC4             (./engine/sound/Sm):01665 [6]     12132           tst   ,u
8C48 2602             (./engine/sound/Sm):01666 [3]     12135           bne   @a
8C4A E7C4             (./engine/sound/Sm):01667 [4]     12139           stb   ,u                       ; Otherwise, set it to the new number of repeats  
8C4C 6AC4             (./engine/sound/Sm):01668 [6]     12145   @a      dec   ,u                       ; One less loop
8C4E 2705             (./engine/sound/Sm):01669 [3]     12148           beq   @b                       ; If counted to zero, skip the rest of this (hence start loop count of 1 terminates the loop without ever looping)
8C50 EC84             (./engine/sound/Sm):01670 [5]     12153           ldd   ,x
8C52 308B             (./engine/sound/Sm):01671 [8]     12161           leax  d,x                      ; loop back
8C54 39               (./engine/sound/Sm):01672 [5]     12166           rts
8C55 3002             (./engine/sound/Sm):01673 [5]     12171   @b      leax  2,x
8C57 39               (./engine/sound/Sm):01674 [5]     12176           rts        
                      (./engine/sound/Sm):01675                 
                      (./engine/sound/Sm):01676                 ; (via Saxman's doc): jump to position yyyy (keep previous position in memory for returning)
8C58                  (./engine/sound/Sm):01677                 cfJumpToGosub
8C58 A62A             (./engine/sound/Sm):01678 [5]     12181           lda   StackPointer,y
8C5A 8002             (./engine/sound/Sm):01679 [2]     12183           suba  #2
8C5C A72A             (./engine/sound/Sm):01680 [5]     12188           sta   StackPointer,y           ; move stack backward
8C5E 3302             (./engine/sound/Sm):01681 [5]     12193           leau  2,x                      ; move x to return address
8C60 EFA6             (./engine/sound/Sm):01682 [6]     12199           stu   a,y                      ; store return address to stack
8C62 EC84             (./engine/sound/Sm):01683 [5]     12204           ldd   ,x                       ; read sub address
8C64 308B             (./engine/sound/Sm):01684 [8]     12212           leax  d,x                      ; gosub
8C66 39               (./engine/sound/Sm):01685 [5]     12217           rts        
                      (./engine/sound/Sm):01686                 
8C67                  (./engine/sound/Sm):01687                 cfSkip1
8C67 3001             (./engine/sound/Sm):01688 [5]     12222           leax  1,x
8C69                  (./engine/sound/Sm):01689                 cfNop 
8C69 39               (./engine/sound/Sm):01690 [5]     12227           rts                                                 
                      (./engine/sound/Sm):01691                 
                      (./engine/sound/Sm):01692                 * YM2413 Instrument presets
                      (./engine/sound/Sm):01693                 * -------------------------
                      (./engine/sound/Sm):01694                 *
                      (./engine/sound/Sm):01695                 * /* Order of array = { modulator, carrier } */
                      (./engine/sound/Sm):01696                 * typedef struct {
                      (./engine/sound/Sm):01697                 *     Bit8u tl;
                      (./engine/sound/Sm):01698                 *     Bit8u dc;
                      (./engine/sound/Sm):01699                 *     Bit8u dm;
                      (./engine/sound/Sm):01700                 *     Bit8u fb;
                      (./engine/sound/Sm):01701                 *     Bit8u am[2];
                      (./engine/sound/Sm):01702                 *     Bit8u vib[2];
                      (./engine/sound/Sm):01703                 *     Bit8u et[2];
                      (./engine/sound/Sm):01704                 *     Bit8u ksr[2];
                      (./engine/sound/Sm):01705                 *     Bit8u multi[2];
                      (./engine/sound/Sm):01706                 *     Bit8u ksl[2];
                      (./engine/sound/Sm):01707                 *     Bit8u ar[2];
                      (./engine/sound/Sm):01708                 *     Bit8u dr[2];
                      (./engine/sound/Sm):01709                 *     Bit8u sl[2];
                      (./engine/sound/Sm):01710                 *     Bit8u rr[2];
                      (./engine/sound/Sm):01711                 * } opll_patch_t;
                      (./engine/sound/Sm):01712                 
                      (./engine/sound/Sm):01713                 * static const opll_patch_t patch_ds1001[opll_patch_max] = {
                      (./engine/sound/Sm):01714                 *     { 0x05, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0e, 0x08 },{ 0x08, 0x01 },{ 0x04, 0x02 },{ 0x02, 0x07 } }, * 1 : Violin
                      (./engine/sound/Sm):01715                 *     { 0x14, 0x00, 0x01, 0x05,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0d, 0x0f },{ 0x08, 0x06 },{ 0x02, 0x01 },{ 0x03, 0x02 } }, * 2 : Guitar
                      (./engine/sound/Sm):01716                 *     { 0x08, 0x00, 0x01, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x0f, 0x0b },{ 0x0a, 0x02 },{ 0x02, 0x01 },{ 0x00, 0x02 } }, * 3 : Piano
                      (./engine/sound/Sm):01717                 *     { 0x0c, 0x00, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x06 },{ 0x08, 0x04 },{ 0x06, 0x02 },{ 0x01, 0x07 } }, * 4 : Flute
                      (./engine/sound/Sm):01718                 *     { 0x1e, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x02, 0x01 },{ 0x00, 0x00 },{ 0x0e, 0x07 },{ 0x01, 0x06 },{ 0x00, 0x02 },{ 0x01, 0x08 } }, * 5 : Clarinet
                      (./engine/sound/Sm):01719                 *     { 0x06, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x02, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x0e },{ 0x03, 0x02 },{ 0x0f, 0x0f },{ 0x04, 0x04 } }, * 6 : Oboe
                      (./engine/sound/Sm):01720                 *     { 0x1d, 0x00, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x08, 0x08 },{ 0x02, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x07 } }, * 7 : Trumpet
                      (./engine/sound/Sm):01721                 *     { 0x22, 0x01, 0x00, 0x07,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x03, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x07 },{ 0x02, 0x02 },{ 0x00, 0x01 },{ 0x01, 0x07 } }, * 8 : Organ
                      (./engine/sound/Sm):01722                 *     { 0x25, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x05, 0x01 },{ 0x00, 0x00 },{ 0x04, 0x07 },{ 0x00, 0x03 },{ 0x07, 0x00 },{ 0x02, 0x01 } }, * 9 : Horn
                      (./engine/sound/Sm):01723                 *     { 0x0f, 0x00, 0x01, 0x07,{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x00 },{ 0x05, 0x01 },{ 0x00, 0x00 },{ 0x0a, 0x0a },{ 0x08, 0x05 },{ 0x05, 0x00 },{ 0x01, 0x02 } }, * A : Synthesizer
                      (./engine/sound/Sm):01724                 *     { 0x24, 0x00, 0x00, 0x07,{ 0x00, 0x01 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x07, 0x01 },{ 0x00, 0x00 },{ 0x0f, 0x0f },{ 0x08, 0x08 },{ 0x02, 0x01 },{ 0x02, 0x02 } }, * B : Harpsichord
                      (./engine/sound/Sm):01725                 *     { 0x11, 0x00, 0x00, 0x06,{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x00 },{ 0x01, 0x03 },{ 0x00, 0x00 },{ 0x06, 0x07 },{ 0x05, 0x04 },{ 0x01, 0x01 },{ 0x08, 0x06 } }, * C : Vibraphone
                      (./engine/sound/Sm):01726                 *     { 0x13, 0x00, 0x00, 0x05,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x02 },{ 0x03, 0x00 },{ 0x0c, 0x09 },{ 0x09, 0x05 },{ 0x00, 0x00 },{ 0x03, 0x02 } }, * D : Synthesizer Bass
                      (./engine/sound/Sm):01727                 *     { 0x0c, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x01, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x00 },{ 0x01, 0x03 },{ 0x00, 0x00 },{ 0x09, 0x0c },{ 0x04, 0x00 },{ 0x03, 0x0f },{ 0x03, 0x06 } }, * E : Acoustic Bass
                      (./engine/sound/Sm):01728                 *     { 0x0d, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x01, 0x01 },{ 0x00, 0x01 },{ 0x01, 0x02 },{ 0x00, 0x00 },{ 0x0c, 0x0d },{ 0x01, 0x05 },{ 0x05, 0x00 },{ 0x06, 0x06 } }, * F : Electric Guitar
                      (./engine/sound/Sm):01729                 *     /* Rhythm Patches: rows 1 and 4 are bass drum, 2 and 5 are Snare Drum & Hi-Hat, 3 and 6 are Tom and Top Cymbal */
                      (./engine/sound/Sm):01730                 *     { 0x18, 0x00, 0x01, 0x07,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x0d, 0x00 },{ 0x0f, 0x00 },{ 0x06, 0x00 },{ 0x0a, 0x00 } },
                      (./engine/sound/Sm):01731                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x01, 0x00 },{ 0x00, 0x00 },{ 0x0c, 0x00 },{ 0x08, 0x00 },{ 0x0a, 0x00 },{ 0x07, 0x00 } },
                      (./engine/sound/Sm):01732                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x05, 0x00 },{ 0x00, 0x00 },{ 0x0f, 0x00 },{ 0x08, 0x00 },{ 0x05, 0x00 },{ 0x09, 0x00 } },
                      (./engine/sound/Sm):01733                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0f },{ 0x00, 0x08 },{ 0x00, 0x06 },{ 0x00, 0x0d } },
                      (./engine/sound/Sm):01734                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0d },{ 0x00, 0x08 },{ 0x00, 0x06 },{ 0x00, 0x08 } },
                      (./engine/sound/Sm):01735                 *     { 0x00, 0x00, 0x00, 0x00,{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x00 },{ 0x00, 0x01 },{ 0x00, 0x00 },{ 0x00, 0x0a },{ 0x00, 0x0a },{ 0x00, 0x05 },{ 0x00, 0x05 } }
                      (./engine/sound/Sm):01736                 * };             
                      (C:\Users\bhrou\gi):00147                         INCLUDE "./generated-code/LostWoods/BuilderMainGenCode.asm"
                      (./generated-code/):00001                 * Generated Code
                      (./generated-code/):00002                 
8C6A                  (./generated-code/):00003                 Pal_Triangle
8C6A 0000             (./generated-code/):00004                         fdb   $0000
8C6C BE00             (./generated-code/):00005                         fdb   $be00
8C6E 6900             (./generated-code/):00006                         fdb   $6900
8C70 3500             (./generated-code/):00007                         fdb   $3500
8C72 2300             (./generated-code/):00008                         fdb   $2300
8C74 0000             (./generated-code/):00009                         fdb   $0000
8C76 0000             (./generated-code/):00010                         fdb   $0000
8C78 0000             (./generated-code/):00011                         fdb   $0000
8C7A 0000             (./generated-code/):00012                         fdb   $0000
8C7C 0000             (./generated-code/):00013                         fdb   $0000
8C7E 0300             (./generated-code/):00014                         fdb   $0300
8C80 8906             (./generated-code/):00015                         fdb   $8906
8C82 BE00             (./generated-code/):00016                         fdb   $be00
8C84 3500             (./generated-code/):00017                         fdb   $3500
8C86 0000             (./generated-code/):00018                         fdb   $0000
8C88 0000             (./generated-code/):00019                         fdb   $0000
                      (./generated-code/):00020                 
8C8A                  (./generated-code/):00021                 Pal_Flash_G
8C8A F000             (./generated-code/):00022                         fdb   $f000
8C8C 760D             (./generated-code/):00023                         fdb   $760d
8C8E 430A             (./generated-code/):00024                         fdb   $430a
8C90 1105             (./generated-code/):00025                         fdb   $1105
8C92 1105             (./generated-code/):00026                         fdb   $1105
8C94 8906             (./generated-code/):00027                         fdb   $8906
8C96 3402             (./generated-code/):00028                         fdb   $3402
8C98 2201             (./generated-code/):00029                         fdb   $2201
8C9A 1101             (./generated-code/):00030                         fdb   $1101
8C9C 4000             (./generated-code/):00031                         fdb   $4000
8C9E 2000             (./generated-code/):00032                         fdb   $2000
8CA0 1000             (./generated-code/):00033                         fdb   $1000
8CA2 BE00             (./generated-code/):00034                         fdb   $be00
8CA4 3500             (./generated-code/):00035                         fdb   $3500
8CA6 DD02             (./generated-code/):00036                         fdb   $dd02
8CA8 EE00             (./generated-code/):00037                         fdb   $ee00
                      (./generated-code/):00038                 
8CAA                  (./generated-code/):00039                 Pal_Flash
8CAA 0000             (./generated-code/):00040                         fdb   $0000
8CAC 760D             (./generated-code/):00041                         fdb   $760d
8CAE 430A             (./generated-code/):00042                         fdb   $430a
8CB0 1105             (./generated-code/):00043                         fdb   $1105
8CB2 1105             (./generated-code/):00044                         fdb   $1105
8CB4 8906             (./generated-code/):00045                         fdb   $8906
8CB6 3402             (./generated-code/):00046                         fdb   $3402
8CB8 2201             (./generated-code/):00047                         fdb   $2201
8CBA 1101             (./generated-code/):00048                         fdb   $1101
8CBC 4000             (./generated-code/):00049                         fdb   $4000
8CBE 2000             (./generated-code/):00050                         fdb   $2000
8CC0 1000             (./generated-code/):00051                         fdb   $1000
8CC2 BE00             (./generated-code/):00052                         fdb   $be00
8CC4 3500             (./generated-code/):00053                         fdb   $3500
8CC6 1901             (./generated-code/):00054                         fdb   $1901
8CC8 0300             (./generated-code/):00055                         fdb   $0300
                      (./generated-code/):00056                 
8CCA                  (./generated-code/):00057                 Pal_Title
8CCA 0000             (./generated-code/):00058                         fdb   $0000
8CCC 760D             (./generated-code/):00059                         fdb   $760d
8CCE 430A             (./generated-code/):00060                         fdb   $430a
8CD0 1105             (./generated-code/):00061                         fdb   $1105
8CD2 1105             (./generated-code/):00062                         fdb   $1105
8CD4 8906             (./generated-code/):00063                         fdb   $8906
8CD6 3402             (./generated-code/):00064                         fdb   $3402
8CD8 2201             (./generated-code/):00065                         fdb   $2201
8CDA 1101             (./generated-code/):00066                         fdb   $1101
8CDC 4000             (./generated-code/):00067                         fdb   $4000
8CDE 0300             (./generated-code/):00068                         fdb   $0300
8CE0 8906             (./generated-code/):00069                         fdb   $8906
8CE2 BE00             (./generated-code/):00070                         fdb   $be00
8CE4 3500             (./generated-code/):00071                         fdb   $3500
8CE6 1901             (./generated-code/):00072                         fdb   $1901
8CE8 0300             (./generated-code/):00073                         fdb   $0300
                      (./generated-code/):00074                 
8CEA                  (./generated-code/):00075                 Pal_TriangleTmp
8CEA 0000             (./generated-code/):00076                         fdb   $0000
8CEC BE00             (./generated-code/):00077                         fdb   $be00
8CEE 6900             (./generated-code/):00078                         fdb   $6900
8CF0 3500             (./generated-code/):00079                         fdb   $3500
8CF2 2300             (./generated-code/):00080                         fdb   $2300
8CF4 0000             (./generated-code/):00081                         fdb   $0000
8CF6 0000             (./generated-code/):00082                         fdb   $0000
8CF8 0000             (./generated-code/):00083                         fdb   $0000
8CFA 0000             (./generated-code/):00084                         fdb   $0000
8CFC 0000             (./generated-code/):00085                         fdb   $0000
8CFE 0300             (./generated-code/):00086                         fdb   $0300
8D00 8906             (./generated-code/):00087                         fdb   $8906
8D02 BE00             (./generated-code/):00088                         fdb   $be00
8D04 3500             (./generated-code/):00089                         fdb   $3500
8D06 0000             (./generated-code/):00090                         fdb   $0000
8D08 0000             (./generated-code/):00091                         fdb   $0000
                      (./generated-code/):00092                 
8D0A                  (./generated-code/):00093                 Pal_Flash_R
8D0A 0F00             (./generated-code/):00094                         fdb   $0f00
8D0C 760D             (./generated-code/):00095                         fdb   $760d
8D0E 430A             (./generated-code/):00096                         fdb   $430a
8D10 1105             (./generated-code/):00097                         fdb   $1105
8D12 1105             (./generated-code/):00098                         fdb   $1105
8D14 8906             (./generated-code/):00099                         fdb   $8906
8D16 3402             (./generated-code/):00100                         fdb   $3402
8D18 2201             (./generated-code/):00101                         fdb   $2201
8D1A 1101             (./generated-code/):00102                         fdb   $1101
8D1C 4000             (./generated-code/):00103                         fdb   $4000
8D1E 2000             (./generated-code/):00104                         fdb   $2000
8D20 1000             (./generated-code/):00105                         fdb   $1000
8D22 BE00             (./generated-code/):00106                         fdb   $be00
8D24 3500             (./generated-code/):00107                         fdb   $3500
8D26 1901             (./generated-code/):00108                         fdb   $1901
8D28 0F00             (./generated-code/):00109                         fdb   $0f00
                      (./generated-code/):00110                 
8D2A                  (./generated-code/):00111                 Pal_Flash_B
8D2A 000F             (./generated-code/):00112                         fdb   $000f
8D2C 760D             (./generated-code/):00113                         fdb   $760d
8D2E 430A             (./generated-code/):00114                         fdb   $430a
8D30 1105             (./generated-code/):00115                         fdb   $1105
8D32 1105             (./generated-code/):00116                         fdb   $1105
8D34 8906             (./generated-code/):00117                         fdb   $8906
8D36 3402             (./generated-code/):00118                         fdb   $3402
8D38 2201             (./generated-code/):00119                         fdb   $2201
8D3A 1101             (./generated-code/):00120                         fdb   $1101
8D3C 4000             (./generated-code/):00121                         fdb   $4000
8D3E 2000             (./generated-code/):00122                         fdb   $2000
8D40 1000             (./generated-code/):00123                         fdb   $1000
8D42 BE00             (./generated-code/):00124                         fdb   $be00
8D44 3500             (./generated-code/):00125                         fdb   $3500
8D46 5E0E             (./generated-code/):00126                         fdb   $5e0e
8D48 090F             (./generated-code/):00127                         fdb   $090f
                      (./generated-code/):00128                 
8D4A                  (./generated-code/):00129                 Pal_LostWoods2
8D4A 1000             (./generated-code/):00130                         fdb   $1000
8D4C 2000             (./generated-code/):00131                         fdb   $2000
8D4E 3000             (./generated-code/):00132                         fdb   $3000
8D50 1201             (./generated-code/):00133                         fdb   $1201
8D52 2301             (./generated-code/):00134                         fdb   $2301
8D54 3501             (./generated-code/):00135                         fdb   $3501
8D56 6803             (./generated-code/):00136                         fdb   $6803
8D58 3102             (./generated-code/):00137                         fdb   $3102
8D5A 6203             (./generated-code/):00138                         fdb   $6203
8D5C FF0F             (./generated-code/):00139                         fdb   $ff0f
8D5E 4D01             (./generated-code/):00140                         fdb   $4d01
8D60 1200             (./generated-code/):00141                         fdb   $1200
8D62 7902             (./generated-code/):00142                         fdb   $7902
8D64 4000             (./generated-code/):00143                         fdb   $4000
8D66 0000             (./generated-code/):00144                         fdb   $0000
8D68 1B06             (./generated-code/):00145                         fdb   $1b06
                      (./generated-code/):00146                 
8D6A                  (./generated-code/):00147                 Pal_LostWoods3
8D6A 1000             (./generated-code/):00148                         fdb   $1000
8D6C 2000             (./generated-code/):00149                         fdb   $2000
8D6E 3000             (./generated-code/):00150                         fdb   $3000
8D70 1201             (./generated-code/):00151                         fdb   $1201
8D72 2301             (./generated-code/):00152                         fdb   $2301
8D74 3501             (./generated-code/):00153                         fdb   $3501
8D76 6803             (./generated-code/):00154                         fdb   $6803
8D78 3102             (./generated-code/):00155                         fdb   $3102
8D7A 6203             (./generated-code/):00156                         fdb   $6203
8D7C FF0F             (./generated-code/):00157                         fdb   $ff0f
8D7E 4D01             (./generated-code/):00158                         fdb   $4d01
8D80 1200             (./generated-code/):00159                         fdb   $1200
8D82 7902             (./generated-code/):00160                         fdb   $7902
8D84 4000             (./generated-code/):00161                         fdb   $4000
8D86 0000             (./generated-code/):00162                         fdb   $0000
8D88 1B06             (./generated-code/):00163                         fdb   $1b06
                      (./generated-code/):00164                 
8D8A                  (./generated-code/):00165                 Pal_LostWoods1
8D8A 1000             (./generated-code/):00166                         fdb   $1000
8D8C 2000             (./generated-code/):00167                         fdb   $2000
8D8E 3000             (./generated-code/):00168                         fdb   $3000
8D90 1201             (./generated-code/):00169                         fdb   $1201
8D92 2301             (./generated-code/):00170                         fdb   $2301
8D94 3501             (./generated-code/):00171                         fdb   $3501
8D96 6803             (./generated-code/):00172                         fdb   $6803
8D98 3102             (./generated-code/):00173                         fdb   $3102
8D9A 6203             (./generated-code/):00174                         fdb   $6203
8D9C FF0F             (./generated-code/):00175                         fdb   $ff0f
8D9E 4D01             (./generated-code/):00176                         fdb   $4d01
8DA0 1200             (./generated-code/):00177                         fdb   $1200
8DA2 7902             (./generated-code/):00178                         fdb   $7902
8DA4 4000             (./generated-code/):00179                         fdb   $4000
8DA6 0000             (./generated-code/):00180                         fdb   $0000
8DA8 1B06             (./generated-code/):00181                         fdb   $1b06
                      (./generated-code/):00182                 
8DAA                  (./generated-code/):00183                 Obj_Index_Page
8DAA 00               (./generated-code/):00184                         fcb   $00
8DAB 6C               (./generated-code/):00185                         fcb   $6C
8DAC 6C               (./generated-code/):00186                         fcb   $6C
8DAD 6C               (./generated-code/):00187                         fcb   $6C
8DAE 6C               (./generated-code/):00188                         fcb   $6C
8DAF 6B               (./generated-code/):00189                         fcb   $6B
8DB0 67               (./generated-code/):00190                         fcb   $67
8DB1 6A               (./generated-code/):00191                         fcb   $6A
8DB2 67               (./generated-code/):00192                         fcb   $67
8DB3                  (./generated-code/):00193                 Obj_Index_Address
8DB3 0000             (./generated-code/):00194                         fcb   $00,$00
8DB5 0000             (./generated-code/):00195                         fcb   $00,$00
8DB7 38C6             (./generated-code/):00196                         fcb   $38,$C6
8DB9 37C8             (./generated-code/):00197                         fcb   $37,$C8
8DBB 0138             (./generated-code/):00198                         fcb   $01,$38
8DBD 0000             (./generated-code/):00199                         fcb   $00,$00
8DBF 1314             (./generated-code/):00200                         fcb   $13,$14
8DC1 0000             (./generated-code/):00201                         fcb   $00,$00
8DC3 12C0             (./generated-code/):00202                         fcb   $12,$C0
8DC5                  (./generated-code/):00203                 Smps_Zelda 
8DC5 6C20C029E1       (./generated-code/):00204                         fcb   $6C,$20,$C0,$29,$E1
8DCA 00               (./generated-code/):00205                         fcb   $00
8DCB                  (./generated-code/):00206                 Img_Page_Index
8DCB 00               (./generated-code/):00207                         fcb   $00
8DCC 67               (./generated-code/):00208                         fcb   $67
8DCD 80               (./generated-code/):00209                         fcb   $80
8DCE 80               (./generated-code/):00210                         fcb   $80
8DCF 80               (./generated-code/):00211                         fcb   $80
8DD0 8F               (./generated-code/):00212                         fcb   $8F
8DD1 80               (./generated-code/):00213                         fcb   $80
8DD2 80               (./generated-code/):00214                         fcb   $80
8DD3 80               (./generated-code/):00215                         fcb   $80
8DD4                  (./generated-code/):00216                 Ani_Page_Index
8DD4 00               (./generated-code/):00217                         fcb   $00
8DD5 64               (./generated-code/):00218                         fcb   $64
8DD6 80               (./generated-code/):00219                         fcb   $80
8DD7 80               (./generated-code/):00220                         fcb   $80
8DD8 80               (./generated-code/):00221                         fcb   $80
8DD9 80               (./generated-code/):00222                         fcb   $80
8DDA 80               (./generated-code/):00223                         fcb   $80
8DDB 80               (./generated-code/):00224                         fcb   $80
8DDC 80               (./generated-code/):00225                         fcb   $80
8DDD                  (./generated-code/):00226                 Ani_Asd_Index
8DDD 0000             (./generated-code/):00227                         fdb   $0000
8DDF 01D9             (./generated-code/):00228                         fdb   $01D9
8DE1 0000             (./generated-code/):00229                         fdb   $0000
8DE3 0000             (./generated-code/):00230                         fdb   $0000
8DE5 0000             (./generated-code/):00231                         fdb   $0000
8DE7 0667             (./generated-code/):00232                         fdb   $0667
8DE9 0000             (./generated-code/):00233                         fdb   $0000
8DEB 0000             (./generated-code/):00234                         fdb   $0000
8DED 0000             (./generated-code/):00235                         fdb   $0000
8DEF                  (./generated-code/):00236                 LoadAct
8DEF C602             (./generated-code/):00237 [2]     12229           ldb   #$02                     * load page 2
8DF1 F7E7E5           (./generated-code/):00238 [5]     12234           stb   $E7E5                    * in data space ($A000-$DFFF)
8DF4 8E0000           (./generated-code/):00239 [3]     12237           ldx   #$0000                   * set Background solid color
8DF7 BD7858           (./generated-code/):00240 [8]     12245           jsr   ClearDataMem
8DFA B6E7DD           (./generated-code/):00241 [5]     12250           lda   $E7DD                    * set border color
8DFD 84F0             (./generated-code/):00242 [2]     12252           anda  #$F0
8DFF 8B00             (./generated-code/):00243 [2]     12254           adda  #$00                     * color ref
8E01 B7E7DD           (./generated-code/):00244 [5]     12259           sta   $E7DD
8E04 840F             (./generated-code/):00245 [2]     12261           anda  #$0F
8E06 8B80             (./generated-code/):00246 [2]     12263           adda  #$80
8E08 B778AC           (./generated-code/):00247 [5]     12268           sta   glb_screen_border_color+1    * maj WaitVBL
8E0B BD7892           (./generated-code/):00248 [8]     12276           jsr   WaitVBL
8E0E C603             (./generated-code/):00249 [2]     12278           ldb   #$03                     * load page 3
8E10 F7E7E5           (./generated-code/):00250 [5]     12283           stb   $E7E5                    * data space ($A000-$DFFF)
8E13 8E0000           (./generated-code/):00251 [3]     12286           ldx   #$0000                   * set Background solid color
8E16 BD7858           (./generated-code/):00252 [8]     12294           jsr   ClearDataMem
8E19 CC8C6A           (./generated-code/):00253 [3]     12297           ldd   #Pal_Triangle
8E1C FD7995           (./generated-code/):00254 [6]     12303           std   Cur_palette
8E1F 7F7994           (./generated-code/):00255 [7]     12310           clr   Refresh_palette
8E22 39               (./generated-code/):00256 [5]     12315           rts
