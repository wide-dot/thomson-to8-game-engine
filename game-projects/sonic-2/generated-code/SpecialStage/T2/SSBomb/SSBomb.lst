                      (C:\Users\bhrou\gi):00001                 opt   c,ct
                      (C:\Users\bhrou\gi):00002                         INCLUDE "./generated-code/SpecialStage/T2/main-engine.glb"
     864A             (./generated-code/):00001                 am_RunNextObject EQU $864A
     75C8             (./generated-code/):00002                 am_SwapVideoPage EQU $75C8
     985B             (./generated-code/):00003                 Ani_Asd_Index EQU $985B
     9858             (./generated-code/):00004                 Ani_Page_Index EQU $9858
     0004             (./generated-code/):00005                 anim EQU $0004
     7729             (./generated-code/):00006                 Anim_End EQU $7729
     7723             (./generated-code/):00007                 Anim_End_FA EQU $7723
     7717             (./generated-code/):00008                 Anim_End_FB EQU $7717
     7709             (./generated-code/):00009                 Anim_End_FC EQU $7709
     7700             (./generated-code/):00010                 Anim_End_FD EQU $7700
     76ED             (./generated-code/):00011                 Anim_End_FE EQU $76ED
     76F5             (./generated-code/):00012                 Anim_End_FE_dyn EQU $76F5
     76E2             (./generated-code/):00013                 Anim_End_FF EQU $76E2
     000A             (./generated-code/):00014                 anim_flags EQU $000A
     0008             (./generated-code/):00015                 anim_frame EQU $0008
     0009             (./generated-code/):00016                 anim_frame_duration EQU $0009
     0001             (./generated-code/):00017                 anim_link_mask EQU $0001
     76C9             (./generated-code/):00018                 Anim_Next EQU $76C9
     76BB             (./generated-code/):00019                 Anim_Reload EQU $76BB
     76DC             (./generated-code/):00020                 Anim_Rts EQU $76DC
     76B3             (./generated-code/):00021                 Anim_Run EQU $76B3
     7680             (./generated-code/):00022                 AnimateSprite EQU $7680
     85B3             (./generated-code/):00023                 BBA0 EQU $85B3
     85BC             (./generated-code/):00024                 BBA1 EQU $85BC
     85E8             (./generated-code/):00025                 BBA_DivideCell EQU $85E8
     85ED             (./generated-code/):00026                 BBA_dyn EQU $85ED
     85D2             (./generated-code/):00027                 BBA_FitCell EQU $85D2
     85C3             (./generated-code/):00028                 BBA_Next EQU $85C3
     8605             (./generated-code/):00029                 BBA_rts EQU $8605
     82CB             (./generated-code/):00030                 BBF_AddLastEntry EQU $82CB
     82D1             (./generated-code/):00031                 BBF_AddNewEntry EQU $82D1
     8261             (./generated-code/):00032                 BBF_cell_end EQU $8261
     825F             (./generated-code/):00033                 BBF_cell_start EQU $825F
     827E             (./generated-code/):00034                 BBF_CombineNext EQU $827E
     8294             (./generated-code/):00035                 BBF_CombineNextAndPrev EQU $8294
     82B6             (./generated-code/):00036                 BBF_CombinePrev EQU $82B6
     82B0             (./generated-code/):00037                 BBF_CombinePrevNoNext EQU $82B0
     82D4             (./generated-code/):00038                 BBF_FindFreeSlot EQU $82D4
     825E             (./generated-code/):00039                 BBF_nb_cells EQU $825E
     8263             (./generated-code/):00040                 BBF_prev EQU $8263
     82F3             (./generated-code/):00041                 BBF_rts EQU $82F3
     8267             (./generated-code/):00042                 BBF_SearchPos EQU $8267
     82DC             (./generated-code/):00043                 BBF_SetNewEntry EQU $82DC
     82EB             (./generated-code/):00044                 BBF_SetNewEntryNextentry EQU $82EB
     82F0             (./generated-code/):00045                 BBF_SetNewEntryPrevLink EQU $82F0
     85AC             (./generated-code/):00046                 BgBufferAlloc EQU $85AC
     8265             (./generated-code/):00047                 BgBufferFree EQU $8265
     9861             (./generated-code/):00048                 Bgi_specialStage EQU $9861
     8C39             (./generated-code/):00049                 BGMLoad EQU $8C39
     8CAB             (./generated-code/):00050                 BGMLoad_end EQU $8CAB
     880E             (./generated-code/):00051                 Black_palette EQU $880E
     000B             (./generated-code/):00052                 buf_bgdata EQU $000B
     0007             (./generated-code/):00053                 buf_erase_nb_cell EQU $0007
     0009             (./generated-code/):00054                 buf_erase_routine EQU $0009
     0024             (./generated-code/):00055                 buf_Lst_Priority_Unset EQU $0024
     0008             (./generated-code/):00056                 buf_page_erase_routine EQU $0008
     0005             (./generated-code/):00057                 buf_prev_mapping_frame EQU $0005
     0013             (./generated-code/):00058                 buf_prev_render_flags EQU $0013
     000F             (./generated-code/):00059                 buf_prev_x1_pixel EQU $000F
     0011             (./generated-code/):00060                 buf_prev_x2_pixel EQU $0011
     000D             (./generated-code/):00061                 buf_prev_x_pixel EQU $000D
     000F             (./generated-code/):00062                 buf_prev_xy1_pixel EQU $000F
     0011             (./generated-code/):00063                 buf_prev_xy2_pixel EQU $0011
     000D             (./generated-code/):00064                 buf_prev_xy_pixel EQU $000D
     0010             (./generated-code/):00065                 buf_prev_y1_pixel EQU $0010
     0012             (./generated-code/):00066                 buf_prev_y2_pixel EQU $0012
     000E             (./generated-code/):00067                 buf_prev_y_pixel EQU $000E
     0000             (./generated-code/):00068                 buf_priority EQU $0000
     0003             (./generated-code/):00069                 buf_priority_next_obj EQU $0003
     0001             (./generated-code/):00070                 buf_priority_prev_obj EQU $0001
     0000             (./generated-code/):00071                 buf_Tbl_Priority_First_Entry EQU $0000
     0012             (./generated-code/):00072                 buf_Tbl_Priority_Last_Entry EQU $0012
     010E             (./generated-code/):00073                 Build_RAMLoaderManager EQU $010E
     0044             (./generated-code/):00074                 c1_butn EQU $0044
     0040             (./generated-code/):00075                 c1_button_A_mask EQU $0040
     0004             (./generated-code/):00076                 c1_button_B_mask EQU $0004
     0002             (./generated-code/):00077                 c1_button_down_mask EQU $0002
     0004             (./generated-code/):00078                 c1_button_left_mask EQU $0004
     0008             (./generated-code/):00079                 c1_button_right_mask EQU $0008
     0001             (./generated-code/):00080                 c1_button_up_mask EQU $0001
     000F             (./generated-code/):00081                 c1_dpad EQU $000F
     0088             (./generated-code/):00082                 c2_butn EQU $0088
     0080             (./generated-code/):00083                 c2_button_A_mask EQU $0080
     0008             (./generated-code/):00084                 c2_button_B_mask EQU $0008
     0020             (./generated-code/):00085                 c2_button_down_mask EQU $0020
     0040             (./generated-code/):00086                 c2_button_left_mask EQU $0040
     0080             (./generated-code/):00087                 c2_button_right_mask EQU $0080
     0010             (./generated-code/):00088                 c2_button_up_mask EQU $0010
     00F0             (./generated-code/):00089                 c2_dpad EQU $00F0
     00C0             (./generated-code/):00090                 c_button_A_mask EQU $00C0
     000C             (./generated-code/):00091                 c_button_B_mask EQU $000C
     0022             (./generated-code/):00092                 c_button_down_mask EQU $0022
     0044             (./generated-code/):00093                 c_button_left_mask EQU $0044
     0088             (./generated-code/):00094                 c_button_right_mask EQU $0088
     0011             (./generated-code/):00095                 c_button_up_mask EQU $0011
     0003             (./generated-code/):00096                 cell_end EQU $0003
     8601             (./generated-code/):00097                 cell_end_return EQU $8601
     0040             (./generated-code/):00098                 cell_size EQU $0040
     0001             (./generated-code/):00099                 cell_start EQU $0001
     6000             (./generated-code/):00100                 cell_start_adr EQU $6000
     95E8             (./generated-code/):00101                 cfChangeFMVolume EQU $95E8
     964F             (./generated-code/):00102                 cfChangePSGVolume EQU $964F
     9624             (./generated-code/):00103                 cfChangeTransposition EQU $9624
     95C3             (./generated-code/):00104                 cfDetune EQU $95C3
     977A             (./generated-code/):00105                 cfDisableModulation EQU $977A
     96C0             (./generated-code/):00106                 cfEnableModulation EQU $96C0
     95E2             (./generated-code/):00107                 cfFadeInToPrevious EQU $95E2
     95D9             (./generated-code/):00108                 cfJumpReturn EQU $95D9
     9786             (./generated-code/):00109                 cfJumpTo EQU $9786
     97A3             (./generated-code/):00110                 cfJumpToGosub EQU $97A3
     969C             (./generated-code/):00111                 cfModulation EQU $969C
     97B4             (./generated-code/):00112                 cfNop EQU $97B4
     961C             (./generated-code/):00113                 cfNoteFill EQU $961C
     9615             (./generated-code/):00114                 cfPreventAttack EQU $9615
     978B             (./generated-code/):00115                 cfRepeatAtPos EQU $978B
     9768             (./generated-code/):00116                 cfSetPSGNoise EQU $9768
     9781             (./generated-code/):00117                 cfSetPSGTone EQU $9781
     962B             (./generated-code/):00118                 cfSetTempo EQU $962B
     95E3             (./generated-code/):00119                 cfSetTempoDivider EQU $95E3
     9631             (./generated-code/):00120                 cfSetTempoMod EQU $9631
     9656             (./generated-code/):00121                 cfSetVoice EQU $9656
     97B2             (./generated-code/):00122                 cfSkip1 EQU $97B2
     96C7             (./generated-code/):00123                 cfStopTrack EQU $96C7
     8770             (./generated-code/):00124                 ChangeGameMode EQU $8770
     7987             (./generated-code/):00125                 CheckSpritesRefresh EQU $7987
     87BB             (./generated-code/):00126                 CIDM_a EQU $87BB
     87C5             (./generated-code/):00127                 CIDM_a_end EQU $87C5
     87AF             (./generated-code/):00128                 CIDM_a_start EQU $87AF
     87D2             (./generated-code/):00129                 CIDM_b EQU $87D2
     87DC             (./generated-code/):00130                 CIDM_b_end EQU $87DC
     87CE             (./generated-code/):00131                 CIDM_b_start EQU $87CE
     87E5             (./generated-code/):00132                 CIDM_end EQU $87E5
     87A9             (./generated-code/):00133                 ClearInterlacedDataMemory EQU $87A9
     8787             (./generated-code/):00134                 ClearInterlacedEvenDataMemory EQU $8787
     8799             (./generated-code/):00135                 ClearInterlacedOddDataMemory EQU $8799
     8721             (./generated-code/):00136                 ClearObj EQU $8721
     874E             (./generated-code/):00137                 CLO_1 EQU $874E
     8758             (./generated-code/):00138                 CLO_2 EQU $8758
     957B             (./generated-code/):00139                 CoordFlag EQU $957B
     9583             (./generated-code/):00140                 CoordFlagLookup EQU $9583
     7A65             (./generated-code/):00141                 CSR_CheckDelHide EQU $7A65
     7C9E             (./generated-code/):00142                 CSR_CheckDraw EQU $7C9E
     7BC5             (./generated-code/):00143                 CSR_CheckErase EQU $7BC5
     7BE3             (./generated-code/):00144                 CSR_CheckErase_InRange EQU $7BE3
     7A9F             (./generated-code/):00145                 CSR_CheckPlayFieldCoord EQU $7A9F
     7B45             (./generated-code/):00146                 CSR_CheckPosition EQU $7B45
     7A6D             (./generated-code/):00147                 CSR_CheckRefresh EQU $7A6D
     7AEF             (./generated-code/):00148                 CSR_ComputeMappingFrame EQU $7AEF
     7AC8             (./generated-code/):00149                 CSR_DoNotDisplaySprite EQU $7AC8
     7B9F             (./generated-code/):00150                 CSR_DontCheckXFrontier EQU $7B9F
     7BB3             (./generated-code/):00151                 CSR_DontCheckXFrontier_end EQU $7BB3
     7AE8             (./generated-code/):00152                 CSR_NextObject EQU $7AE8
     7B0B             (./generated-code/):00153                 CSR_NoDefinedFrame EQU $7B0B
     79EF             (./generated-code/):00154                 CSR_P1B0 EQU $79EF
     7A55             (./generated-code/):00155                 CSR_P1B1 EQU $7A55
     79E3             (./generated-code/):00156                 CSR_P2B0 EQU $79E3
     7A49             (./generated-code/):00157                 CSR_P2B1 EQU $7A49
     79D7             (./generated-code/):00158                 CSR_P3B0 EQU $79D7
     7A3D             (./generated-code/):00159                 CSR_P3B1 EQU $7A3D
     79CB             (./generated-code/):00160                 CSR_P4B0 EQU $79CB
     7A31             (./generated-code/):00161                 CSR_P4B1 EQU $7A31
     79BF             (./generated-code/):00162                 CSR_P5B0 EQU $79BF
     7A25             (./generated-code/):00163                 CSR_P5B1 EQU $7A25
     79B3             (./generated-code/):00164                 CSR_P6B0 EQU $79B3
     7A19             (./generated-code/):00165                 CSR_P6B1 EQU $7A19
     79A7             (./generated-code/):00166                 CSR_P7B0 EQU $79A7
     7A0D             (./generated-code/):00167                 CSR_P7B1 EQU $7A0D
     799B             (./generated-code/):00168                 CSR_P8B0 EQU $799B
     7A01             (./generated-code/):00169                 CSR_P8B1 EQU $7A01
     7A62             (./generated-code/):00170                 CSR_ProcessEachPriorityLevel EQU $7A62
     79FB             (./generated-code/):00171                 CSR_rtsB0 EQU $79FB
     7A61             (./generated-code/):00172                 CSR_rtsB1 EQU $7A61
     7CCC             (./generated-code/):00173                 CSR_SDT1 EQU $7CCC
     7CD3             (./generated-code/):00174                 CSR_SDT2 EQU $7CD3
     7CD8             (./generated-code/):00175                 CSR_SDT3 EQU $7CD8
     7996             (./generated-code/):00176                 CSR_SetBuffer0 EQU $7996
     79FC             (./generated-code/):00177                 CSR_SetBuffer1 EQU $79FC
     7CF2             (./generated-code/):00178                 CSR_SetDrawFalse EQU $7CF2
     7CBE             (./generated-code/):00179                 CSR_SetDrawTrue EQU $7CBE
     7CEA             (./generated-code/):00180                 CSR_SetEraseDrawFalse EQU $7CEA
     7C96             (./generated-code/):00181                 CSR_SetEraseFalse EQU $7C96
     7C07             (./generated-code/):00182                 CSR_SetEraseTrue EQU $7C07
     7CDD             (./generated-code/):00183                 CSR_SetHide EQU $7CDD
     7BBD             (./generated-code/):00184                 CSR_SetOutOfRange EQU $7BBD
     7987             (./generated-code/):00185                 CSR_Start EQU $7987
     7C76             (./generated-code/):00186                 CSR_SubDrawCheckCollision EQU $7C76
     7C6E             (./generated-code/):00187                 CSR_SubDrawSearch EQU $7C6E
     7C6C             (./generated-code/):00188                 CSR_SubDrawSpriteSearchInit EQU $7C6C
     7C26             (./generated-code/):00189                 CSR_SubEraseCheckCollisionB0 EQU $7C26
     7C4D             (./generated-code/):00190                 CSR_SubEraseCheckCollisionB1 EQU $7C4D
     7C1E             (./generated-code/):00191                 CSR_SubEraseSearchB0 EQU $7C1E
     7C45             (./generated-code/):00192                 CSR_SubEraseSearchB1 EQU $7C45
     7C17             (./generated-code/):00193                 CSR_SubEraseSpriteSearchInit EQU $7C17
     7B2C             (./generated-code/):00194                 CSR_UpdateMetadata EQU $7B2C
     7A76             (./generated-code/):00195                 CSR_UpdSpriteImageBasedOnMirror EQU $7A76
     87EC             (./generated-code/):00196                 Cur_palette EQU $87EC
     7478             (./generated-code/):00197                 Current_Special_Stage EQU $7478
     8E2B             (./generated-code/):00198                 DACAfterDur EQU $8E2B
     8DF9             (./generated-code/):00199                 DACUpdateTrack EQU $8DF9
     0004             (./generated-code/):00200                 DataPointer EQU $0004
     8659             (./generated-code/):00201                 DeleteObject EQU $8659
     8657             (./generated-code/):00202                 DeleteObject_return EQU $8657
     8651             (./generated-code/):00203                 DeleteObject_x EQU $8651
     0019             (./generated-code/):00204                 Detune EQU $0019
     761D             (./generated-code/):00205                 DFI_a EQU $761D
     7675             (./generated-code/):00206                 DFI_a_rts EQU $7675
     764B             (./generated-code/):00207                 DFI_b EQU $764B
     7679             (./generated-code/):00208                 DFI_rts EQU $7679
     774C             (./generated-code/):00209                 DisplaySprite EQU $774C
     7746             (./generated-code/):00210                 DisplaySprite_x EQU $7746
     6049             (./generated-code/):00211                 dk_drive EQU $6049
     604C             (./generated-code/):00212                 dk_sector EQU $604C
     604A             (./generated-code/):00213                 dk_track EQU $604A
     604B             (./generated-code/):00214                 dk_track_lsb EQU $604B
     604F             (./generated-code/):00215                 dk_write_location EQU $604F
     86C3             (./generated-code/):00216                 DOB_ChainNextB0 EQU $86C3
     870D             (./generated-code/):00217                 DOB_ChainNextB1 EQU $870D
     86A3             (./generated-code/):00218                 DOB_ChainPrevB0 EQU $86A3
     86E5             (./generated-code/):00219                 DOB_ChainPrevB1 EQU $86E5
     86AD             (./generated-code/):00220                 DOB_CheckPrioNextB0 EQU $86AD
     86EF             (./generated-code/):00221                 DOB_CheckPrioNextB1 EQU $86EF
     868D             (./generated-code/):00222                 DOB_RemoveFromDPSB0 EQU $868D
     86CF             (./generated-code/):00223                 DOB_RemoveFromDPSB1 EQU $86CF
     870B             (./generated-code/):00224                 DOB_rts EQU $870B
     8661             (./generated-code/):00225                 DOB_Start EQU $8661
     8676             (./generated-code/):00226                 DOB_TestOnscreen1 EQU $8676
     8666             (./generated-code/):00227                 DOB_ToDeleteFlag0 EQU $8666
     867B             (./generated-code/):00228                 DOB_ToDeleteFlag1 EQU $867B
     866C             (./generated-code/):00229                 DOB_Unset0 EQU $866C
     8681             (./generated-code/):00230                 DOB_Unset1 EQU $8681
     8F37             (./generated-code/):00231                 DoModulation EQU $8F37
     8BAF             (./generated-code/):00232                 DoSFXFlag EQU $8BAF
     8609             (./generated-code/):00233                 Dpad_Held EQU $8609
     860B             (./generated-code/):00234                 Dpad_Press EQU $860B
     8607             (./generated-code/):00235                 Dpad_Read EQU $8607
     77CB             (./generated-code/):00236                 DPS_buffer_0 EQU $77CB
     784D             (./generated-code/):00237                 DPS_buffer_1 EQU $784D
     78CF             (./generated-code/):00238                 DPS_buffer_end EQU $78CF
     0001             (./generated-code/):00239                 draw_routine EQU $0001
     7606             (./generated-code/):00240                 DrawFullscreenImage EQU $7606
     83D6             (./generated-code/):00241                 DrawSprites EQU $83D6
     8481             (./generated-code/):00242                 DRS_DrawWithoutBackupB0 EQU $8481
     8540             (./generated-code/):00243                 DRS_DrawWithoutBackupB1 EQU $8540
     8500             (./generated-code/):00244                 DRS_dyn1 EQU $8500
     8511             (./generated-code/):00245                 DRS_dyn2 EQU $8511
     849E             (./generated-code/):00246                 DRS_dyn3B0 EQU $849E
     855D             (./generated-code/):00247                 DRS_dyn3B1 EQU $855D
     84E5             (./generated-code/):00248                 DRS_NextObjectB0 EQU $84E5
     85A4             (./generated-code/):00249                 DRS_NextObjectB1 EQU $85A4
     84D8             (./generated-code/):00250                 DRS_NoOverlayB0 EQU $84D8
     8597             (./generated-code/):00251                 DRS_NoOverlayB1 EQU $8597
     8413             (./generated-code/):00252                 DRS_P1B0 EQU $8413
     8454             (./generated-code/):00253                 DRS_P1B1 EQU $8454
     840B             (./generated-code/):00254                 DRS_P2B0 EQU $840B
     844C             (./generated-code/):00255                 DRS_P2B1 EQU $844C
     8403             (./generated-code/):00256                 DRS_P3B0 EQU $8403
     8444             (./generated-code/):00257                 DRS_P3B1 EQU $8444
     83FB             (./generated-code/):00258                 DRS_P4B0 EQU $83FB
     843C             (./generated-code/):00259                 DRS_P4B1 EQU $843C
     83F3             (./generated-code/):00260                 DRS_P5B0 EQU $83F3
     8434             (./generated-code/):00261                 DRS_P5B1 EQU $8434
     83EB             (./generated-code/):00262                 DRS_P6B0 EQU $83EB
     842C             (./generated-code/):00263                 DRS_P6B1 EQU $842C
     83E3             (./generated-code/):00264                 DRS_P7B0 EQU $83E3
     8424             (./generated-code/):00265                 DRS_P7B1 EQU $8424
     83DB             (./generated-code/):00266                 DRS_P8B0 EQU $83DB
     841C             (./generated-code/):00267                 DRS_P8B1 EQU $841C
     845D             (./generated-code/):00268                 DRS_ProcessEachPriorityLevelB0 EQU $845D
     851C             (./generated-code/):00269                 DRS_ProcessEachPriorityLevelB1 EQU $851C
     841B             (./generated-code/):00270                 DRS_rtsB0 EQU $841B
     845C             (./generated-code/):00271                 DRS_rtsB1 EQU $845C
     83D6             (./generated-code/):00272                 DRS_Start EQU $83D6
     84DA             (./generated-code/):00273                 DRS_UpdateRenderFlagB0 EQU $84DA
     8599             (./generated-code/):00274                 DRS_UpdateRenderFlagB1 EQU $8599
     84ED             (./generated-code/):00275                 DRS_XYToAddress EQU $84ED
     84F4             (./generated-code/):00276                 DRS_XYToAddressPositive EQU $84F4
     84FA             (./generated-code/):00277                 DRS_XYToAddressRAM1First EQU $84FA
     850B             (./generated-code/):00278                 DRS_XYToAddressRAM2First EQU $850B
     777E             (./generated-code/):00279                 DSP_addFirstNode EQU $777E
     778F             (./generated-code/):00280                 DSP_addToExistingNode EQU $778F
     7769             (./generated-code/):00281                 DSP_BufferPositionned EQU $7769
     77B4             (./generated-code/):00282                 DSP_ChangePriority EQU $77B4
     7775             (./generated-code/):00283                 DSP_CheckLastEntry EQU $7775
     7773             (./generated-code/):00284                 DSP_InitPriority EQU $7773
     77A4             (./generated-code/):00285                 DSP_LinkBuffer1 EQU $77A4
     77B0             (./generated-code/):00286                 DSP_LinkCurWithPrev EQU $77B0
     778D             (./generated-code/):00287                 DSP_rts EQU $778D
     7759             (./generated-code/):00288                 DSP_SetBuffer0 EQU $7759
     7762             (./generated-code/):00289                 DSP_SetBuffer1 EQU $7762
     774E             (./generated-code/):00290                 DSP_Start EQU $774E
     000B             (./generated-code/):00291                 DurationTimeout EQU $000B
     87EE             (./generated-code/):00292                 Dyn_palette EQU $87EE
     6355             (./generated-code/):00293                 Dynamic_Object_RAM EQU $6355
     740D             (./generated-code/):00294                 Dynamic_Object_RAM_End EQU $740D
     91BA             (./generated-code/):00295                 DynVol EQU $91BA
     0007             (./generated-code/):00296                 entry_size EQU $0007
     0006             (./generated-code/):00297                 erase_nb_cell EQU $0006
     0004             (./generated-code/):00298                 erase_routine EQU $0004
     8091             (./generated-code/):00299                 EraseSprites EQU $8091
     8190             (./generated-code/):00300                 ESP_CallEraseRoutineB0 EQU $8190
     81A4             (./generated-code/):00301                 ESP_CallEraseRoutineB0_00 EQU $81A4
     8209             (./generated-code/):00302                 ESP_CallEraseRoutineB1 EQU $8209
     821D             (./generated-code/):00303                 ESP_CallEraseRoutineB1_00 EQU $821D
     8183             (./generated-code/):00304                 ESP_CheckEraseB0 EQU $8183
     81FC             (./generated-code/):00305                 ESP_CheckEraseB1 EQU $81FC
     816F             (./generated-code/):00306                 ESP_CheckPriorityB0 EQU $816F
     81E8             (./generated-code/):00307                 ESP_CheckPriorityB1 EQU $81E8
     81B2             (./generated-code/):00308                 ESP_FreeEraseBufferB0 EQU $81B2
     822B             (./generated-code/):00309                 ESP_FreeEraseBufferB1 EQU $822B
     81DD             (./generated-code/):00310                 ESP_NextObjectB0 EQU $81DD
     8256             (./generated-code/):00311                 ESP_NextObjectB1 EQU $8256
     809A             (./generated-code/):00312                 ESP_P1B0 EQU $809A
     8103             (./generated-code/):00313                 ESP_P1B1 EQU $8103
     80A7             (./generated-code/):00314                 ESP_P2B0 EQU $80A7
     8110             (./generated-code/):00315                 ESP_P2B1 EQU $8110
     80B4             (./generated-code/):00316                 ESP_P3B0 EQU $80B4
     811D             (./generated-code/):00317                 ESP_P3B1 EQU $811D
     80C1             (./generated-code/):00318                 ESP_P4B0 EQU $80C1
     812A             (./generated-code/):00319                 ESP_P4B1 EQU $812A
     80CE             (./generated-code/):00320                 ESP_P5B0 EQU $80CE
     8137             (./generated-code/):00321                 ESP_P5B1 EQU $8137
     80DB             (./generated-code/):00322                 ESP_P6B0 EQU $80DB
     8144             (./generated-code/):00323                 ESP_P6B1 EQU $8144
     80E8             (./generated-code/):00324                 ESP_P7B0 EQU $80E8
     8151             (./generated-code/):00325                 ESP_P7B1 EQU $8151
     80F5             (./generated-code/):00326                 ESP_P8B0 EQU $80F5
     815E             (./generated-code/):00327                 ESP_P8B1 EQU $815E
     816C             (./generated-code/):00328                 ESP_ProcessEachPriorityLevelB0 EQU $816C
     81E5             (./generated-code/):00329                 ESP_ProcessEachPriorityLevelB1 EQU $81E5
     8102             (./generated-code/):00330                 ESP_rtsB0 EQU $8102
     816B             (./generated-code/):00331                 ESP_rtsB1 EQU $816B
     8095             (./generated-code/):00332                 ESP_Start EQU $8095
     8175             (./generated-code/):00333                 ESP_UnsetCheckRefreshB0 EQU $8175
     81EE             (./generated-code/):00334                 ESP_UnsetCheckRefreshB1 EQU $81EE
     81CD             (./generated-code/):00335                 ESP_UnsetOnScreenFlagB0 EQU $81CD
     8246             (./generated-code/):00336                 ESP_UnsetOnScreenFlagB1 EQU $8246
     005D             (./generated-code/):00337                 ext_variables EQU $005D
     000E             (./generated-code/):00338                 ext_variables_size EQU $000E
     8EE9             (./generated-code/):00339                 FinishTrackUpdate EQU $8EE9
     860A             (./generated-code/):00340                 Fire_Held EQU $860A
     860C             (./generated-code/):00341                 Fire_Press EQU $860C
     8608             (./generated-code/):00342                 Fire_Read EQU $8608
     92E9             (./generated-code/):00343                 Flutter1 EQU $92E9
     93B1             (./generated-code/):00344                 Flutter10 EQU $93B1
     93EF             (./generated-code/):00345                 Flutter11 EQU $93EF
     940B             (./generated-code/):00346                 Flutter12 EQU $940B
     948B             (./generated-code/):00347                 Flutter13 EQU $948B
     9300             (./generated-code/):00348                 Flutter2 EQU $9300
     9307             (./generated-code/):00349                 Flutter3 EQU $9307
     9318             (./generated-code/):00350                 Flutter4 EQU $9318
     9323             (./generated-code/):00351                 Flutter5 EQU $9323
     9332             (./generated-code/):00352                 Flutter6 EQU $9332
     935C             (./generated-code/):00353                 Flutter7 EQU $935C
     9378             (./generated-code/):00354                 Flutter8 EQU $9378
     93A0             (./generated-code/):00355                 Flutter9 EQU $93A0
     8E62             (./generated-code/):00356                 FMDoNext EQU $8E62
     8FB9             (./generated-code/):00357                 FMFrequencies EQU $8FB9
     8E78             (./generated-code/):00358                 FMNoteOff EQU $8E78
     8F06             (./generated-code/):00359                 FMPrepareNote EQU $8F06
     8E6A             (./generated-code/):00360                 FMReadCoordFlag EQU $8E6A
     8EE4             (./generated-code/):00361                 FMSetDuration EQU $8EE4
     8EE2             (./generated-code/):00362                 FMSetDurationAndForward EQU $8EE2
     8E94             (./generated-code/):00363                 FMSetFreq EQU $8E94
     8BFB             (./generated-code/):00364                 FMSilenceAll EQU $8BFB
     8F75             (./generated-code/):00365                 FMUpdateFreq EQU $8F75
     8F11             (./generated-code/):00366                 FMUpdateFreqAndNoteOn EQU $8F11
     8E58             (./generated-code/):00367                 FMUpdateTrack EQU $8E58
     876F             (./generated-code/):00368                 GameMode EQU $876F
     7595             (./generated-code/):00369                 GetCartPageA EQU $7595
     759E             (./generated-code/):00370                 GetCartPageB EQU $759E
     7740             (./generated-code/):00371                 GetImgId_Rts EQU $7740
     772B             (./generated-code/):00372                 GetImgIdA EQU $772B
     876D             (./generated-code/):00373                 glb_Address EQU $876D
     9FE6             (./generated-code/):00374                 glb_alphaTiles EQU $9FE6
     9FE7             (./generated-code/):00375                 glb_camera_move EQU $9FE7
     9FEB             (./generated-code/):00376                 glb_camera_x_max_pos EQU $9FEB
     9FEF             (./generated-code/):00377                 glb_camera_x_min_pos EQU $9FEF
     9FF3             (./generated-code/):00378                 glb_camera_x_pos EQU $9FF3
     9FE9             (./generated-code/):00379                 glb_camera_y_max_pos EQU $9FE9
     9FED             (./generated-code/):00380                 glb_camera_y_min_pos EQU $9FED
     9FF1             (./generated-code/):00381                 glb_camera_y_pos EQU $9FF1
     8771             (./generated-code/):00382                 glb_Cur_Game_Mode EQU $8771
     9FF9             (./generated-code/):00383                 glb_cur_priority EQU $9FF9
     9FF5             (./generated-code/):00384                 glb_cur_ptr_sub_obj_draw EQU $9FF5
     9FF7             (./generated-code/):00385                 glb_cur_ptr_sub_obj_erase EQU $9FF7
     7605             (./generated-code/):00386                 glb_Cur_Wrk_Screen_Id EQU $7605
     009F             (./generated-code/):00387                 glb_direct_page EQU $009F
     9FE8             (./generated-code/):00388                 glb_force_sprite_refresh EQU $9FE8
     75FC             (./generated-code/):00389                 glb_Main_runcount EQU $75FC
     8772             (./generated-code/):00390                 glb_Next_Game_Mode EQU $8772
     7538             (./generated-code/):00391                 glb_Page EQU $7538
     9FFE             (./generated-code/):00392                 glb_register_s EQU $9FFE
     75C0             (./generated-code/):00393                 glb_screen_border_color EQU $75C0
     9FFC             (./generated-code/):00394                 glb_screen_location_1 EQU $9FFC
     9FFA             (./generated-code/):00395                 glb_screen_location_2 EQU $9FFA
     9F00             (./generated-code/):00396                 glb_system_stack EQU $9F00
     9F00             (./generated-code/):00397                 glb_tmp_var EQU $9F00
     0000             (./generated-code/):00398                 gmboot EQU $0000
     0000             (./generated-code/):00399                 GmID_SpecialStage EQU $0000
     002A             (./generated-code/):00400                 GoSubStack EQU $002A
     7535             (./generated-code/):00401                 HalfPipe_Nb_Elapsed_Frames EQU $7535
     752C             (./generated-code/):00402                 HalfPipe_Seq EQU $752C
     752D             (./generated-code/):00403                 HalfPipe_Seq_UpdFlip EQU $752D
     7536             (./generated-code/):00404                 HalfPipe_Vint_Main_Loop EQU $7536
     752F             (./generated-code/):00405                 HalfPipe_Vint_Track_Image EQU $752F
     7533             (./generated-code/):00406                 HalfPipe_z_step EQU $7533
     61A9             (./generated-code/):00407                 HalfPipeEven EQU $61A9
     6214             (./generated-code/):00408                 HalfPipeOdd EQU $6214
     0000             (./generated-code/):00409                 id EQU $0000
     0006             (./generated-code/):00410                 image_center_offset EQU $0006
     000C             (./generated-code/):00411                 image_set EQU $000C
     0004             (./generated-code/):00412                 image_subset_x1_offset EQU $0004
     0005             (./generated-code/):00413                 image_subset_y1_offset EQU $0005
     0004             (./generated-code/):00414                 image_x_size EQU $0004
     0005             (./generated-code/):00415                 image_y_size EQU $0005
     9855             (./generated-code/):00416                 Img_Page_Index EQU $9855
     8BF4             (./generated-code/):00417                 InitMusicPlayback EQU $8BF4
     8CB2             (./generated-code/):00418                 InitTrackFM EQU $8CB2
     8CD3             (./generated-code/):00419                 InitTrackPSG EQU $8CD3
     001F             (./generated-code/):00420                 InstrAndVolume EQU $001F
     001E             (./generated-code/):00421                 InstrTranspose EQU $001E
     4DFF             (./generated-code/):00422                 irq_one_frame EQU $4DFF
     6027             (./generated-code/):00423                 irq_routine EQU $6027
     E7C6             (./generated-code/):00424                 irq_timer EQU $E7C6
     E7C5             (./generated-code/):00425                 irq_timer_ctrl EQU $E7C5
     97D5             (./generated-code/):00426                 IrqOff EQU $97D5
     97CA             (./generated-code/):00427                 IrqOn EQU $97CA
     97B5             (./generated-code/):00428                 IrqSet50Hz EQU $97B5
     97E0             (./generated-code/):00429                 IrqSmps EQU $97E0
     97FE             (./generated-code/):00430                 IrqSmps_end EQU $97FE
     9826             (./generated-code/):00431                 IRQSysStack EQU $9826
     8609             (./generated-code/):00432                 Joypads EQU $8609
     8609             (./generated-code/):00433                 Joypads_Held EQU $8609
     860B             (./generated-code/):00434                 Joypads_Press EQU $860B
     8607             (./generated-code/):00435                 Joypads_Read EQU $8607
     6116             (./generated-code/):00436                 LevelMainLoop EQU $6116
     9864             (./generated-code/):00437                 LoadAct EQU $9864
     8773             (./generated-code/):00438                 LoadGameMode EQU $8773
     8779             (./generated-code/):00439                 LoadGameModeNow EQU $8779
     0020             (./generated-code/):00440                 LoopCounters EQU $0020
     7D03             (./generated-code/):00441                 Lst_FreeCell_0 EQU $7D03
     7ECB             (./generated-code/):00442                 Lst_FreeCell_1 EQU $7ECB
     7D01             (./generated-code/):00443                 Lst_FreeCellFirstEntry_0 EQU $7D01
     7EC9             (./generated-code/):00444                 Lst_FreeCellFirstEntry_1 EQU $7EC9
     77EF             (./generated-code/):00445                 Lst_Priority_Unset_0 EQU $77EF
     7871             (./generated-code/):00446                 Lst_Priority_Unset_1 EQU $7871
     627F             (./generated-code/):00447                 MainCharacter EQU $627F
     0015             (./generated-code/):00448                 ModulationDelta EQU $0015
     0011             (./generated-code/):00449                 ModulationPtr EQU $0011
     0014             (./generated-code/):00450                 ModulationSpeed EQU $0014
     0016             (./generated-code/):00451                 ModulationSteps EQU $0016
     0017             (./generated-code/):00452                 ModulationVal EQU $0017
     0013             (./generated-code/):00453                 ModulationWait EQU $0013
     000A             (./generated-code/):00454                 MUSIC_DAC_FM_TRACK_COUNT EQU $000A
     0009             (./generated-code/):00455                 MUSIC_FM_TRACK_COUNT EQU $0009
     0003             (./generated-code/):00456                 MUSIC_PSG_TRACK_COUNT EQU $0003
     000D             (./generated-code/):00457                 MUSIC_TRACK_COUNT EQU $000D
     8BB4             (./generated-code/):00458                 MusicData EQU $8BB4
     8CF8             (./generated-code/):00459                 MusicFrame EQU $8CF8
     8BB2             (./generated-code/):00460                 MusicPage EQU $8BB2
     94AB             (./generated-code/):00461                 MusicTrackOffs EQU $94AB
     0000             (./generated-code/):00462                 nb_cells EQU $0000
     0028             (./generated-code/):00463                 nb_dynamic_objects EQU $0028
     0080             (./generated-code/):00464                 nb_free_cells EQU $0080
     002E             (./generated-code/):00465                 nb_graphical_objects EQU $002E
     0003             (./generated-code/):00466                 nb_level_objects EQU $0003
     0008             (./generated-code/):00467                 nb_priority_levels EQU $0008
     0002             (./generated-code/):00468                 nb_reserved_objects EQU $0002
     0005             (./generated-code/):00469                 next_entry EQU $0005
     006B             (./generated-code/):00470                 next_object EQU $006B
     000D             (./generated-code/):00471                 NextData EQU $000D
     0002             (./generated-code/):00472                 NoteControl EQU $0002
     8E90             (./generated-code/):00473                 NoteDyn EQU $8E90
     0010             (./generated-code/):00474                 NoteFillMaster EQU $0010
     000F             (./generated-code/):00475                 NoteFillTimeout EQU $000F
     8EBF             (./generated-code/):00476                 NoteFillUpdate EQU $8EBF
     9849             (./generated-code/):00477                 Obj_Index_Address EQU $9849
     9846             (./generated-code/):00478                 Obj_Index_Page EQU $9846
     005D             (./generated-code/):00479                 object_core_size EQU $005D
     627F             (./generated-code/):00480                 Object_RAM EQU $627F
     7478             (./generated-code/):00481                 Object_RAM_End EQU $7478
     006B             (./generated-code/):00482                 object_size EQU $006B
     0002             (./generated-code/):00483                 ObjID_HalfPipe EQU $0002
     0001             (./generated-code/):00484                 ObjID_SSBomb EQU $0001
     0000             (./generated-code/):00485                 page_draw_routine EQU $0000
     0003             (./generated-code/):00486                 page_erase_routine EQU $0003
     9826             (./generated-code/):00487                 Pal_HalfPipe EQU $9826
     8BAE             (./generated-code/):00488                 PALUpdTick EQU $8BAE
     8BB0             (./generated-code/):00489                 Paused EQU $8BB0
     0000             (./generated-code/):00490                 PlaybackControl EQU $0000
     8C39             (./generated-code/):00491                 PlayMusic EQU $8C39
     94BB             (./generated-code/):00492                 PlaySound EQU $94BB
     9573             (./generated-code/):00493                 PlaySound_end EQU $9573
     0006             (./generated-code/):00494                 prev_anim EQU $0006
     0003             (./generated-code/):00495                 priority EQU $0003
     957A             (./generated-code/):00496                 PS_cnt EQU $957A
     E7FF             (./generated-code/):00497                 PSG EQU $E7FF
     92CD             (./generated-code/):00498                 PSG_FlutterTbl EQU $92CD
     91D3             (./generated-code/):00499                 PSGDoModulation EQU $91D3
     90E0             (./generated-code/):00500                 PSGDoNext EQU $90E0
     914D             (./generated-code/):00501                 PSGDoNoteOn EQU $914D
     918D             (./generated-code/):00502                 PSGDoVolFX EQU $918D
     912E             (./generated-code/):00503                 PSGFinishTrackUpdate EQU $912E
     9196             (./generated-code/):00504                 PSGFlutter EQU $9196
     923B             (./generated-code/):00505                 PSGFrequencies EQU $923B
     001B             (./generated-code/):00506                 PSGNoise EQU $001B
     90B9             (./generated-code/):00507                 PSGNoteFillUpdate EQU $90B9
     90E8             (./generated-code/):00508                 PSGReadCoordFlag EQU $90E8
     9129             (./generated-code/):00509                 PSGSetDuration EQU $9129
     9127             (./generated-code/):00510                 PSGSetDurationAndForward EQU $9127
     90F5             (./generated-code/):00511                 PSGSetFreq EQU $90F5
     8C24             (./generated-code/):00512                 PSGSilenceAll EQU $8C24
     9154             (./generated-code/):00513                 PSGUpdateFreq EQU $9154
     9211             (./generated-code/):00514                 PSGUpdateFreq2 EQU $9211
     90D6             (./generated-code/):00515                 PSGUpdateTrack EQU $90D6
     91B0             (./generated-code/):00516                 PSGUpdateVol EQU $91B0
     917C             (./generated-code/):00517                 PSGUpdateVolFX EQU $917C
     860D             (./generated-code/):00518                 ReadJoypads EQU $860D
     87EB             (./generated-code/):00519                 Refresh_palette EQU $87EB
     0002             (./generated-code/):00520                 render_flags EQU $0002
     0020             (./generated-code/):00521                 render_hide_mask EQU $0020
     0008             (./generated-code/):00522                 render_motionless_mask EQU $0008
     0004             (./generated-code/):00523                 render_overlay_mask EQU $0004
     0010             (./generated-code/):00524                 render_playfieldcoord_mask EQU $0010
     0040             (./generated-code/):00525                 render_todelete_mask EQU $0040
     0080             (./generated-code/):00526                 render_xloop_mask EQU $0080
     0001             (./generated-code/):00527                 render_xmirror_mask EQU $0001
     0002             (./generated-code/):00528                 render_ymirror_mask EQU $0002
     7479             (./generated-code/):00529                 Ring_count EQU $7479
     001E             (./generated-code/):00530                 routine EQU $001E
     0021             (./generated-code/):00531                 routine_quaternary EQU $0021
     001F             (./generated-code/):00532                 routine_secondary EQU $001F
     0020             (./generated-code/):00533                 routine_tertiary EQU $0020
     0040             (./generated-code/):00534                 rsv_bgdata_0 EQU $0040
     0054             (./generated-code/):00535                 rsv_bgdata_1 EQU $0054
     0035             (./generated-code/):00536                 rsv_buffer_0 EQU $0035
     0049             (./generated-code/):00537                 rsv_buffer_1 EQU $0049
     002C             (./generated-code/):00538                 rsv_draw_routine EQU $002C
     002A             (./generated-code/):00539                 rsv_erase_nb_cell EQU $002A
     002F             (./generated-code/):00540                 rsv_erase_routine EQU $002F
     0025             (./generated-code/):00541                 rsv_image_center_offset EQU $0025
     0026             (./generated-code/):00542                 rsv_image_subset EQU $0026
     0028             (./generated-code/):00543                 rsv_mapping_frame EQU $0028
     002B             (./generated-code/):00544                 rsv_page_draw_routine EQU $002B
     002E             (./generated-code/):00545                 rsv_page_erase_routine EQU $002E
     0023             (./generated-code/):00546                 rsv_prev_anim EQU $0023
     003C             (./generated-code/):00547                 rsv_prev_erase_nb_cell_0 EQU $003C
     0050             (./generated-code/):00548                 rsv_prev_erase_nb_cell_1 EQU $0050
     003E             (./generated-code/):00549                 rsv_prev_erase_routine_0 EQU $003E
     0052             (./generated-code/):00550                 rsv_prev_erase_routine_1 EQU $0052
     003A             (./generated-code/):00551                 rsv_prev_mapping_frame_0 EQU $003A
     004E             (./generated-code/):00552                 rsv_prev_mapping_frame_1 EQU $004E
     003D             (./generated-code/):00553                 rsv_prev_page_erase_routine_0 EQU $003D
     0051             (./generated-code/):00554                 rsv_prev_page_erase_routine_1 EQU $0051
     0048             (./generated-code/):00555                 rsv_prev_render_flags_0 EQU $0048
     005C             (./generated-code/):00556                 rsv_prev_render_flags_1 EQU $005C
     0080             (./generated-code/):00557                 rsv_prev_render_onscreen_mask EQU $0080
     0001             (./generated-code/):00558                 rsv_prev_render_overlay_mask EQU $0001
     0044             (./generated-code/):00559                 rsv_prev_x1_pixel_0 EQU $0044
     0058             (./generated-code/):00560                 rsv_prev_x1_pixel_1 EQU $0058
     0046             (./generated-code/):00561                 rsv_prev_x2_pixel_0 EQU $0046
     005A             (./generated-code/):00562                 rsv_prev_x2_pixel_1 EQU $005A
     0042             (./generated-code/):00563                 rsv_prev_x_pixel_0 EQU $0042
     0056             (./generated-code/):00564                 rsv_prev_x_pixel_1 EQU $0056
     0044             (./generated-code/):00565                 rsv_prev_xy1_pixel_0 EQU $0044
     0058             (./generated-code/):00566                 rsv_prev_xy1_pixel_1 EQU $0058
     0046             (./generated-code/):00567                 rsv_prev_xy2_pixel_0 EQU $0046
     005A             (./generated-code/):00568                 rsv_prev_xy2_pixel_1 EQU $005A
     0042             (./generated-code/):00569                 rsv_prev_xy_pixel_0 EQU $0042
     0056             (./generated-code/):00570                 rsv_prev_xy_pixel_1 EQU $0056
     0045             (./generated-code/):00571                 rsv_prev_y1_pixel_0 EQU $0045
     0059             (./generated-code/):00572                 rsv_prev_y1_pixel_1 EQU $0059
     0047             (./generated-code/):00573                 rsv_prev_y2_pixel_0 EQU $0047
     005B             (./generated-code/):00574                 rsv_prev_y2_pixel_1 EQU $005B
     0043             (./generated-code/):00575                 rsv_prev_y_pixel_0 EQU $0043
     0057             (./generated-code/):00576                 rsv_prev_y_pixel_1 EQU $0057
     0035             (./generated-code/):00577                 rsv_priority_0 EQU $0035
     0049             (./generated-code/):00578                 rsv_priority_1 EQU $0049
     0038             (./generated-code/):00579                 rsv_priority_next_obj_0 EQU $0038
     004C             (./generated-code/):00580                 rsv_priority_next_obj_1 EQU $004C
     0036             (./generated-code/):00581                 rsv_priority_prev_obj_0 EQU $0036
     004A             (./generated-code/):00582                 rsv_priority_prev_obj_1 EQU $004A
     0001             (./generated-code/):00583                 rsv_render_checkrefresh_mask EQU $0001
     0004             (./generated-code/):00584                 rsv_render_displaysprite_mask EQU $0004
     0002             (./generated-code/):00585                 rsv_render_erasesprite_mask EQU $0002
     0022             (./generated-code/):00586                 rsv_render_flags EQU $0022
     0080             (./generated-code/):00587                 rsv_render_onscreen_mask EQU $0080
     0008             (./generated-code/):00588                 rsv_render_outofrange_mask EQU $0008
     0031             (./generated-code/):00589                 rsv_x1_pixel EQU $0031
     0033             (./generated-code/):00590                 rsv_x2_pixel EQU $0033
     0031             (./generated-code/):00591                 rsv_xy1_pixel EQU $0031
     0033             (./generated-code/):00592                 rsv_xy2_pixel EQU $0033
     0032             (./generated-code/):00593                 rsv_y1_pixel EQU $0032
     0034             (./generated-code/):00594                 rsv_y2_pixel EQU $0034
     8647             (./generated-code/):00595                 RunNextObject EQU $8647
     8633             (./generated-code/):00596                 RunObject EQU $8633
     862E             (./generated-code/):00597                 RunObjects EQU $862E
     8633             (./generated-code/):00598                 RunObjects_01 EQU $8633
     8650             (./generated-code/):00599                 RunObjects_End EQU $8650
     8651             (./generated-code/):00600                 RunObjectsWhenPlayerIsDead EQU $8651
     875A             (./generated-code/):00601                 RunPgSubRoutine EQU $875A
     8767             (./generated-code/):00602                 RunPgSubRoutine_return EQU $8767
     000C             (./generated-code/):00603                 SavedDuration EQU $000C
     00E3             (./generated-code/):00604                 screen_bottom EQU $00E3
     0030             (./generated-code/):00605                 screen_left EQU $0030
     00CF             (./generated-code/):00606                 screen_right EQU $00CF
     001C             (./generated-code/):00607                 screen_top EQU $001C
     00A0             (./generated-code/):00608                 screen_width EQU $00A0
     7539             (./generated-code/):00609                 SetCartPageA EQU $7539
     7567             (./generated-code/):00610                 SetCartPageB EQU $7567
     8E24             (./generated-code/):00611                 SetDuration EQU $8E24
     8E22             (./generated-code/):00612                 SetDurationAndForward EQU $8E22
     96A5             (./generated-code/):00613                 SetModulation EQU $96A5
     0006             (./generated-code/):00614                 SFX_TRACK_COUNT EQU $0006
     8AB2             (./generated-code/):00615                 SFXFM3 EQU $8AB2
     8AB6             (./generated-code/):00616                 SFXFM3.DataPointer EQU $8AB6
     8ACB             (./generated-code/):00617                 SFXFM3.Detune EQU $8ACB
     8ABD             (./generated-code/):00618                 SFXFM3.DurationTimeout EQU $8ABD
     8AD1             (./generated-code/):00619                 SFXFM3.InstrAndVolume EQU $8AD1
     8AD0             (./generated-code/):00620                 SFXFM3.InstrTranspose EQU $8AD0
     8AD2             (./generated-code/):00621                 SFXFM3.LoopCounters EQU $8AD2
     8AC7             (./generated-code/):00622                 SFXFM3.ModulationDelta EQU $8AC7
     8AC3             (./generated-code/):00623                 SFXFM3.ModulationPtr EQU $8AC3
     8AC6             (./generated-code/):00624                 SFXFM3.ModulationSpeed EQU $8AC6
     8AC8             (./generated-code/):00625                 SFXFM3.ModulationSteps EQU $8AC8
     8AC9             (./generated-code/):00626                 SFXFM3.ModulationVal EQU $8AC9
     8AC5             (./generated-code/):00627                 SFXFM3.ModulationWait EQU $8AC5
     8ABF             (./generated-code/):00628                 SFXFM3.NextData EQU $8ABF
     8AB4             (./generated-code/):00629                 SFXFM3.NoteControl EQU $8AB4
     8AC2             (./generated-code/):00630                 SFXFM3.NoteFillMaster EQU $8AC2
     8AC1             (./generated-code/):00631                 SFXFM3.NoteFillTimeout EQU $8AC1
     8AB2             (./generated-code/):00632                 SFXFM3.PlaybackControl EQU $8AB2
     8ACD             (./generated-code/):00633                 SFXFM3.PSGNoise EQU $8ACD
     8ABE             (./generated-code/):00634                 SFXFM3.SavedDuration EQU $8ABE
     8ABC             (./generated-code/):00635                 SFXFM3.StackPointer EQU $8ABC
     8AB5             (./generated-code/):00636                 SFXFM3.TempoDivider EQU $8AB5
     8ACE             (./generated-code/):00637                 SFXFM3.TLPtr EQU $8ACE
     8AB8             (./generated-code/):00638                 SFXFM3.Transpose EQU $8AB8
     8AB3             (./generated-code/):00639                 SFXFM3.VoiceControl EQU $8AB3
     8ABA             (./generated-code/):00640                 SFXFM3.VoiceIndex EQU $8ABA
     8ABB             (./generated-code/):00641                 SFXFM3.VolFlutter EQU $8ABB
     8ACC             (./generated-code/):00642                 SFXFM3.VolTLMask EQU $8ACC
     8AB9             (./generated-code/):00643                 SFXFM3.Volume EQU $8AB9
     8ADC             (./generated-code/):00644                 SFXFM4 EQU $8ADC
     8AE0             (./generated-code/):00645                 SFXFM4.DataPointer EQU $8AE0
     8AF5             (./generated-code/):00646                 SFXFM4.Detune EQU $8AF5
     8AE7             (./generated-code/):00647                 SFXFM4.DurationTimeout EQU $8AE7
     8AFB             (./generated-code/):00648                 SFXFM4.InstrAndVolume EQU $8AFB
     8AFA             (./generated-code/):00649                 SFXFM4.InstrTranspose EQU $8AFA
     8AFC             (./generated-code/):00650                 SFXFM4.LoopCounters EQU $8AFC
     8AF1             (./generated-code/):00651                 SFXFM4.ModulationDelta EQU $8AF1
     8AED             (./generated-code/):00652                 SFXFM4.ModulationPtr EQU $8AED
     8AF0             (./generated-code/):00653                 SFXFM4.ModulationSpeed EQU $8AF0
     8AF2             (./generated-code/):00654                 SFXFM4.ModulationSteps EQU $8AF2
     8AF3             (./generated-code/):00655                 SFXFM4.ModulationVal EQU $8AF3
     8AEF             (./generated-code/):00656                 SFXFM4.ModulationWait EQU $8AEF
     8AE9             (./generated-code/):00657                 SFXFM4.NextData EQU $8AE9
     8ADE             (./generated-code/):00658                 SFXFM4.NoteControl EQU $8ADE
     8AEC             (./generated-code/):00659                 SFXFM4.NoteFillMaster EQU $8AEC
     8AEB             (./generated-code/):00660                 SFXFM4.NoteFillTimeout EQU $8AEB
     8ADC             (./generated-code/):00661                 SFXFM4.PlaybackControl EQU $8ADC
     8AF7             (./generated-code/):00662                 SFXFM4.PSGNoise EQU $8AF7
     8AE8             (./generated-code/):00663                 SFXFM4.SavedDuration EQU $8AE8
     8AE6             (./generated-code/):00664                 SFXFM4.StackPointer EQU $8AE6
     8ADF             (./generated-code/):00665                 SFXFM4.TempoDivider EQU $8ADF
     8AF8             (./generated-code/):00666                 SFXFM4.TLPtr EQU $8AF8
     8AE2             (./generated-code/):00667                 SFXFM4.Transpose EQU $8AE2
     8ADD             (./generated-code/):00668                 SFXFM4.VoiceControl EQU $8ADD
     8AE4             (./generated-code/):00669                 SFXFM4.VoiceIndex EQU $8AE4
     8AE5             (./generated-code/):00670                 SFXFM4.VolFlutter EQU $8AE5
     8AF6             (./generated-code/):00671                 SFXFM4.VolTLMask EQU $8AF6
     8AE3             (./generated-code/):00672                 SFXFM4.Volume EQU $8AE3
     8B06             (./generated-code/):00673                 SFXFM5 EQU $8B06
     8B0A             (./generated-code/):00674                 SFXFM5.DataPointer EQU $8B0A
     8B1F             (./generated-code/):00675                 SFXFM5.Detune EQU $8B1F
     8B11             (./generated-code/):00676                 SFXFM5.DurationTimeout EQU $8B11
     8B25             (./generated-code/):00677                 SFXFM5.InstrAndVolume EQU $8B25
     8B24             (./generated-code/):00678                 SFXFM5.InstrTranspose EQU $8B24
     8B26             (./generated-code/):00679                 SFXFM5.LoopCounters EQU $8B26
     8B1B             (./generated-code/):00680                 SFXFM5.ModulationDelta EQU $8B1B
     8B17             (./generated-code/):00681                 SFXFM5.ModulationPtr EQU $8B17
     8B1A             (./generated-code/):00682                 SFXFM5.ModulationSpeed EQU $8B1A
     8B1C             (./generated-code/):00683                 SFXFM5.ModulationSteps EQU $8B1C
     8B1D             (./generated-code/):00684                 SFXFM5.ModulationVal EQU $8B1D
     8B19             (./generated-code/):00685                 SFXFM5.ModulationWait EQU $8B19
     8B13             (./generated-code/):00686                 SFXFM5.NextData EQU $8B13
     8B08             (./generated-code/):00687                 SFXFM5.NoteControl EQU $8B08
     8B16             (./generated-code/):00688                 SFXFM5.NoteFillMaster EQU $8B16
     8B15             (./generated-code/):00689                 SFXFM5.NoteFillTimeout EQU $8B15
     8B06             (./generated-code/):00690                 SFXFM5.PlaybackControl EQU $8B06
     8B21             (./generated-code/):00691                 SFXFM5.PSGNoise EQU $8B21
     8B12             (./generated-code/):00692                 SFXFM5.SavedDuration EQU $8B12
     8B10             (./generated-code/):00693                 SFXFM5.StackPointer EQU $8B10
     8B09             (./generated-code/):00694                 SFXFM5.TempoDivider EQU $8B09
     8B22             (./generated-code/):00695                 SFXFM5.TLPtr EQU $8B22
     8B0C             (./generated-code/):00696                 SFXFM5.Transpose EQU $8B0C
     8B07             (./generated-code/):00697                 SFXFM5.VoiceControl EQU $8B07
     8B0E             (./generated-code/):00698                 SFXFM5.VoiceIndex EQU $8B0E
     8B0F             (./generated-code/):00699                 SFXFM5.VolFlutter EQU $8B0F
     8B20             (./generated-code/):00700                 SFXFM5.VolTLMask EQU $8B20
     8B0D             (./generated-code/):00701                 SFXFM5.Volume EQU $8B0D
     0003             (./generated-code/):00702                 SFXFM_TRACK_COUNT EQU $0003
     8B30             (./generated-code/):00703                 SFXFMEnd EQU $8B30
     8AB2             (./generated-code/):00704                 SFXFMStart EQU $8AB2
     8B30             (./generated-code/):00705                 SFXPSG1 EQU $8B30
     8B34             (./generated-code/):00706                 SFXPSG1.DataPointer EQU $8B34
     8B49             (./generated-code/):00707                 SFXPSG1.Detune EQU $8B49
     8B3B             (./generated-code/):00708                 SFXPSG1.DurationTimeout EQU $8B3B
     8B4F             (./generated-code/):00709                 SFXPSG1.InstrAndVolume EQU $8B4F
     8B4E             (./generated-code/):00710                 SFXPSG1.InstrTranspose EQU $8B4E
     8B50             (./generated-code/):00711                 SFXPSG1.LoopCounters EQU $8B50
     8B45             (./generated-code/):00712                 SFXPSG1.ModulationDelta EQU $8B45
     8B41             (./generated-code/):00713                 SFXPSG1.ModulationPtr EQU $8B41
     8B44             (./generated-code/):00714                 SFXPSG1.ModulationSpeed EQU $8B44
     8B46             (./generated-code/):00715                 SFXPSG1.ModulationSteps EQU $8B46
     8B47             (./generated-code/):00716                 SFXPSG1.ModulationVal EQU $8B47
     8B43             (./generated-code/):00717                 SFXPSG1.ModulationWait EQU $8B43
     8B3D             (./generated-code/):00718                 SFXPSG1.NextData EQU $8B3D
     8B32             (./generated-code/):00719                 SFXPSG1.NoteControl EQU $8B32
     8B40             (./generated-code/):00720                 SFXPSG1.NoteFillMaster EQU $8B40
     8B3F             (./generated-code/):00721                 SFXPSG1.NoteFillTimeout EQU $8B3F
     8B30             (./generated-code/):00722                 SFXPSG1.PlaybackControl EQU $8B30
     8B4B             (./generated-code/):00723                 SFXPSG1.PSGNoise EQU $8B4B
     8B3C             (./generated-code/):00724                 SFXPSG1.SavedDuration EQU $8B3C
     8B3A             (./generated-code/):00725                 SFXPSG1.StackPointer EQU $8B3A
     8B33             (./generated-code/):00726                 SFXPSG1.TempoDivider EQU $8B33
     8B4C             (./generated-code/):00727                 SFXPSG1.TLPtr EQU $8B4C
     8B36             (./generated-code/):00728                 SFXPSG1.Transpose EQU $8B36
     8B31             (./generated-code/):00729                 SFXPSG1.VoiceControl EQU $8B31
     8B38             (./generated-code/):00730                 SFXPSG1.VoiceIndex EQU $8B38
     8B39             (./generated-code/):00731                 SFXPSG1.VolFlutter EQU $8B39
     8B4A             (./generated-code/):00732                 SFXPSG1.VolTLMask EQU $8B4A
     8B37             (./generated-code/):00733                 SFXPSG1.Volume EQU $8B37
     8B5A             (./generated-code/):00734                 SFXPSG2 EQU $8B5A
     8B5E             (./generated-code/):00735                 SFXPSG2.DataPointer EQU $8B5E
     8B73             (./generated-code/):00736                 SFXPSG2.Detune EQU $8B73
     8B65             (./generated-code/):00737                 SFXPSG2.DurationTimeout EQU $8B65
     8B79             (./generated-code/):00738                 SFXPSG2.InstrAndVolume EQU $8B79
     8B78             (./generated-code/):00739                 SFXPSG2.InstrTranspose EQU $8B78
     8B7A             (./generated-code/):00740                 SFXPSG2.LoopCounters EQU $8B7A
     8B6F             (./generated-code/):00741                 SFXPSG2.ModulationDelta EQU $8B6F
     8B6B             (./generated-code/):00742                 SFXPSG2.ModulationPtr EQU $8B6B
     8B6E             (./generated-code/):00743                 SFXPSG2.ModulationSpeed EQU $8B6E
     8B70             (./generated-code/):00744                 SFXPSG2.ModulationSteps EQU $8B70
     8B71             (./generated-code/):00745                 SFXPSG2.ModulationVal EQU $8B71
     8B6D             (./generated-code/):00746                 SFXPSG2.ModulationWait EQU $8B6D
     8B67             (./generated-code/):00747                 SFXPSG2.NextData EQU $8B67
     8B5C             (./generated-code/):00748                 SFXPSG2.NoteControl EQU $8B5C
     8B6A             (./generated-code/):00749                 SFXPSG2.NoteFillMaster EQU $8B6A
     8B69             (./generated-code/):00750                 SFXPSG2.NoteFillTimeout EQU $8B69
     8B5A             (./generated-code/):00751                 SFXPSG2.PlaybackControl EQU $8B5A
     8B75             (./generated-code/):00752                 SFXPSG2.PSGNoise EQU $8B75
     8B66             (./generated-code/):00753                 SFXPSG2.SavedDuration EQU $8B66
     8B64             (./generated-code/):00754                 SFXPSG2.StackPointer EQU $8B64
     8B5D             (./generated-code/):00755                 SFXPSG2.TempoDivider EQU $8B5D
     8B76             (./generated-code/):00756                 SFXPSG2.TLPtr EQU $8B76
     8B60             (./generated-code/):00757                 SFXPSG2.Transpose EQU $8B60
     8B5B             (./generated-code/):00758                 SFXPSG2.VoiceControl EQU $8B5B
     8B62             (./generated-code/):00759                 SFXPSG2.VoiceIndex EQU $8B62
     8B63             (./generated-code/):00760                 SFXPSG2.VolFlutter EQU $8B63
     8B74             (./generated-code/):00761                 SFXPSG2.VolTLMask EQU $8B74
     8B61             (./generated-code/):00762                 SFXPSG2.Volume EQU $8B61
     8B84             (./generated-code/):00763                 SFXPSG3 EQU $8B84
     8B88             (./generated-code/):00764                 SFXPSG3.DataPointer EQU $8B88
     8B9D             (./generated-code/):00765                 SFXPSG3.Detune EQU $8B9D
     8B8F             (./generated-code/):00766                 SFXPSG3.DurationTimeout EQU $8B8F
     8BA3             (./generated-code/):00767                 SFXPSG3.InstrAndVolume EQU $8BA3
     8BA2             (./generated-code/):00768                 SFXPSG3.InstrTranspose EQU $8BA2
     8BA4             (./generated-code/):00769                 SFXPSG3.LoopCounters EQU $8BA4
     8B99             (./generated-code/):00770                 SFXPSG3.ModulationDelta EQU $8B99
     8B95             (./generated-code/):00771                 SFXPSG3.ModulationPtr EQU $8B95
     8B98             (./generated-code/):00772                 SFXPSG3.ModulationSpeed EQU $8B98
     8B9A             (./generated-code/):00773                 SFXPSG3.ModulationSteps EQU $8B9A
     8B9B             (./generated-code/):00774                 SFXPSG3.ModulationVal EQU $8B9B
     8B97             (./generated-code/):00775                 SFXPSG3.ModulationWait EQU $8B97
     8B91             (./generated-code/):00776                 SFXPSG3.NextData EQU $8B91
     8B86             (./generated-code/):00777                 SFXPSG3.NoteControl EQU $8B86
     8B94             (./generated-code/):00778                 SFXPSG3.NoteFillMaster EQU $8B94
     8B93             (./generated-code/):00779                 SFXPSG3.NoteFillTimeout EQU $8B93
     8B84             (./generated-code/):00780                 SFXPSG3.PlaybackControl EQU $8B84
     8B9F             (./generated-code/):00781                 SFXPSG3.PSGNoise EQU $8B9F
     8B90             (./generated-code/):00782                 SFXPSG3.SavedDuration EQU $8B90
     8B8E             (./generated-code/):00783                 SFXPSG3.StackPointer EQU $8B8E
     8B87             (./generated-code/):00784                 SFXPSG3.TempoDivider EQU $8B87
     8BA0             (./generated-code/):00785                 SFXPSG3.TLPtr EQU $8BA0
     8B8A             (./generated-code/):00786                 SFXPSG3.Transpose EQU $8B8A
     8B85             (./generated-code/):00787                 SFXPSG3.VoiceControl EQU $8B85
     8B8C             (./generated-code/):00788                 SFXPSG3.VoiceIndex EQU $8B8C
     8B8D             (./generated-code/):00789                 SFXPSG3.VolFlutter EQU $8B8D
     8B9E             (./generated-code/):00790                 SFXPSG3.VolTLMask EQU $8B9E
     8B8B             (./generated-code/):00791                 SFXPSG3.Volume EQU $8B8B
     0003             (./generated-code/):00792                 SFXPSG_TRACK_COUNT EQU $0003
     8BAE             (./generated-code/):00793                 SFXPSGEnd EQU $8BAE
     8B30             (./generated-code/):00794                 SFXPSGStart EQU $8B30
     949B             (./generated-code/):00795                 SFXTrackOffs EQU $949B
     887A             (./generated-code/):00796                 Smps EQU $887A
     888A             (./generated-code/):00797                 Smps.1upPlaying EQU $888A
     888F             (./generated-code/):00798                 Smps.60HzData EQU $888F
     887C             (./generated-code/):00799                 Smps.CurrentTempo EQU $887C
     888E             (./generated-code/):00800                 Smps.DACEnabled EQU $888E
     8889             (./generated-code/):00801                 Smps.FadeInCounter EQU $8889
     8888             (./generated-code/):00802                 Smps.FadeInDelay EQU $8888
     8887             (./generated-code/):00803                 Smps.FadeInFlag EQU $8887
     887E             (./generated-code/):00804                 Smps.FadeOutCounter EQU $887E
     887F             (./generated-code/):00805                 Smps.FadeOutDelay EQU $887F
     8880             (./generated-code/):00806                 Smps.QueueToPlay EQU $8880
     887A             (./generated-code/):00807                 Smps.SFXPriorityVal EQU $887A
     8881             (./generated-code/):00808                 Smps.SFXToPlay EQU $8881
     8885             (./generated-code/):00809                 Smps.SFXVoiceTblPtr EQU $8885
     888D             (./generated-code/):00810                 Smps.SpeedUpFlag EQU $888D
     887D             (./generated-code/):00811                 Smps.StopMusic EQU $887D
     888B             (./generated-code/):00812                 Smps.TempoMod EQU $888B
     887B             (./generated-code/):00813                 Smps.TempoTimeout EQU $887B
     888C             (./generated-code/):00814                 Smps.TempoTurbo EQU $888C
     8883             (./generated-code/):00815                 Smps.VoiceTblPtr EQU $8883
     0008             (./generated-code/):00816                 SMPS_DAC_FLAG EQU $0008
     0005             (./generated-code/):00817                 SMPS_DELAY EQU $0005
     0002             (./generated-code/):00818                 SMPS_NB_FM EQU $0002
     0003             (./generated-code/):00819                 SMPS_NB_PSG EQU $0003
     0004             (./generated-code/):00820                 SMPS_SFX_HDR_LEN EQU $0004
     0003             (./generated-code/):00821                 SMPS_SFX_NB_CH EQU $0003
     0002             (./generated-code/):00822                 SMPS_SFX_TEMPO EQU $0002
     0002             (./generated-code/):00823                 SMPS_SFX_TEMPO_NB_CH EQU $0002
     0000             (./generated-code/):00824                 SMPS_SFX_TRK_CH EQU $0000
     0002             (./generated-code/):00825                 SMPS_SFX_TRK_DATA_PTR EQU $0002
     0006             (./generated-code/):00826                 SMPS_SFX_TRK_HDR_LEN EQU $0006
     0004             (./generated-code/):00827                 SMPS_SFX_TRK_TR_VOL_PTR EQU $0004
     0000             (./generated-code/):00828                 SMPS_SFX_VOICE EQU $0000
     984F             (./generated-code/):00829                 Smps_SpecialStage EQU $984F
     0004             (./generated-code/):00830                 SMPS_TEMPO EQU $0004
     0004             (./generated-code/):00831                 SMPS_TEMPO_DELAY EQU $0004
     0000             (./generated-code/):00832                 SMPS_TRK_DATA_PTR EQU $0000
     0005             (./generated-code/):00833                 SMPS_TRK_ENV_PTR EQU $0005
     0004             (./generated-code/):00834                 SMPS_TRK_FM_HDR_LEN EQU $0004
     0006             (./generated-code/):00835                 SMPS_TRK_HEADER EQU $0006
     0006             (./generated-code/):00836                 SMPS_TRK_PSG_HDR_LEN EQU $0006
     0002             (./generated-code/):00837                 SMPS_TRK_TR_VOL_PTR EQU $0002
     0000             (./generated-code/):00838                 SMPS_VOICE EQU $0000
     0010             (./generated-code/):00839                 SmpsVar.1upPlaying EQU $0010
     0015             (./generated-code/):00840                 SmpsVar.60HzData EQU $0015
     0002             (./generated-code/):00841                 SmpsVar.CurrentTempo EQU $0002
     0014             (./generated-code/):00842                 SmpsVar.DACEnabled EQU $0014
     000F             (./generated-code/):00843                 SmpsVar.FadeInCounter EQU $000F
     000E             (./generated-code/):00844                 SmpsVar.FadeInDelay EQU $000E
     000D             (./generated-code/):00845                 SmpsVar.FadeInFlag EQU $000D
     0004             (./generated-code/):00846                 SmpsVar.FadeOutCounter EQU $0004
     0005             (./generated-code/):00847                 SmpsVar.FadeOutDelay EQU $0005
     0006             (./generated-code/):00848                 SmpsVar.QueueToPlay EQU $0006
     0000             (./generated-code/):00849                 SmpsVar.SFXPriorityVal EQU $0000
     0007             (./generated-code/):00850                 SmpsVar.SFXToPlay EQU $0007
     000B             (./generated-code/):00851                 SmpsVar.SFXVoiceTblPtr EQU $000B
     0013             (./generated-code/):00852                 SmpsVar.SpeedUpFlag EQU $0013
     0003             (./generated-code/):00853                 SmpsVar.StopMusic EQU $0003
     0011             (./generated-code/):00854                 SmpsVar.TempoMod EQU $0011
     0001             (./generated-code/):00855                 SmpsVar.TempoTimeout EQU $0001
     0012             (./generated-code/):00856                 SmpsVar.TempoTurbo EQU $0012
     0009             (./generated-code/):00857                 SmpsVar.VoiceTblPtr EQU $0009
     8890             (./generated-code/):00858                 SongDAC EQU $8890
     8894             (./generated-code/):00859                 SongDAC.DataPointer EQU $8894
     88A9             (./generated-code/):00860                 SongDAC.Detune EQU $88A9
     889B             (./generated-code/):00861                 SongDAC.DurationTimeout EQU $889B
     88AF             (./generated-code/):00862                 SongDAC.InstrAndVolume EQU $88AF
     88AE             (./generated-code/):00863                 SongDAC.InstrTranspose EQU $88AE
     88B0             (./generated-code/):00864                 SongDAC.LoopCounters EQU $88B0
     88A5             (./generated-code/):00865                 SongDAC.ModulationDelta EQU $88A5
     88A1             (./generated-code/):00866                 SongDAC.ModulationPtr EQU $88A1
     88A4             (./generated-code/):00867                 SongDAC.ModulationSpeed EQU $88A4
     88A6             (./generated-code/):00868                 SongDAC.ModulationSteps EQU $88A6
     88A7             (./generated-code/):00869                 SongDAC.ModulationVal EQU $88A7
     88A3             (./generated-code/):00870                 SongDAC.ModulationWait EQU $88A3
     889D             (./generated-code/):00871                 SongDAC.NextData EQU $889D
     8892             (./generated-code/):00872                 SongDAC.NoteControl EQU $8892
     88A0             (./generated-code/):00873                 SongDAC.NoteFillMaster EQU $88A0
     889F             (./generated-code/):00874                 SongDAC.NoteFillTimeout EQU $889F
     8890             (./generated-code/):00875                 SongDAC.PlaybackControl EQU $8890
     88AB             (./generated-code/):00876                 SongDAC.PSGNoise EQU $88AB
     889C             (./generated-code/):00877                 SongDAC.SavedDuration EQU $889C
     889A             (./generated-code/):00878                 SongDAC.StackPointer EQU $889A
     8893             (./generated-code/):00879                 SongDAC.TempoDivider EQU $8893
     88AC             (./generated-code/):00880                 SongDAC.TLPtr EQU $88AC
     8896             (./generated-code/):00881                 SongDAC.Transpose EQU $8896
     8891             (./generated-code/):00882                 SongDAC.VoiceControl EQU $8891
     8898             (./generated-code/):00883                 SongDAC.VoiceIndex EQU $8898
     8899             (./generated-code/):00884                 SongDAC.VolFlutter EQU $8899
     88AA             (./generated-code/):00885                 SongDAC.VolTLMask EQU $88AA
     8897             (./generated-code/):00886                 SongDAC.Volume EQU $8897
     8A34             (./generated-code/):00887                 SongDACFMEnd EQU $8A34
     8890             (./generated-code/):00888                 SongDACFMStart EQU $8890
     8BB1             (./generated-code/):00889                 SongDelay EQU $8BB1
     88BA             (./generated-code/):00890                 SongFM1 EQU $88BA
     88BE             (./generated-code/):00891                 SongFM1.DataPointer EQU $88BE
     88D3             (./generated-code/):00892                 SongFM1.Detune EQU $88D3
     88C5             (./generated-code/):00893                 SongFM1.DurationTimeout EQU $88C5
     88D9             (./generated-code/):00894                 SongFM1.InstrAndVolume EQU $88D9
     88D8             (./generated-code/):00895                 SongFM1.InstrTranspose EQU $88D8
     88DA             (./generated-code/):00896                 SongFM1.LoopCounters EQU $88DA
     88CF             (./generated-code/):00897                 SongFM1.ModulationDelta EQU $88CF
     88CB             (./generated-code/):00898                 SongFM1.ModulationPtr EQU $88CB
     88CE             (./generated-code/):00899                 SongFM1.ModulationSpeed EQU $88CE
     88D0             (./generated-code/):00900                 SongFM1.ModulationSteps EQU $88D0
     88D1             (./generated-code/):00901                 SongFM1.ModulationVal EQU $88D1
     88CD             (./generated-code/):00902                 SongFM1.ModulationWait EQU $88CD
     88C7             (./generated-code/):00903                 SongFM1.NextData EQU $88C7
     88BC             (./generated-code/):00904                 SongFM1.NoteControl EQU $88BC
     88CA             (./generated-code/):00905                 SongFM1.NoteFillMaster EQU $88CA
     88C9             (./generated-code/):00906                 SongFM1.NoteFillTimeout EQU $88C9
     88BA             (./generated-code/):00907                 SongFM1.PlaybackControl EQU $88BA
     88D5             (./generated-code/):00908                 SongFM1.PSGNoise EQU $88D5
     88C6             (./generated-code/):00909                 SongFM1.SavedDuration EQU $88C6
     88C4             (./generated-code/):00910                 SongFM1.StackPointer EQU $88C4
     88BD             (./generated-code/):00911                 SongFM1.TempoDivider EQU $88BD
     88D6             (./generated-code/):00912                 SongFM1.TLPtr EQU $88D6
     88C0             (./generated-code/):00913                 SongFM1.Transpose EQU $88C0
     88BB             (./generated-code/):00914                 SongFM1.VoiceControl EQU $88BB
     88C2             (./generated-code/):00915                 SongFM1.VoiceIndex EQU $88C2
     88C3             (./generated-code/):00916                 SongFM1.VolFlutter EQU $88C3
     88D4             (./generated-code/):00917                 SongFM1.VolTLMask EQU $88D4
     88C1             (./generated-code/):00918                 SongFM1.Volume EQU $88C1
     88E4             (./generated-code/):00919                 SongFM2 EQU $88E4
     88E8             (./generated-code/):00920                 SongFM2.DataPointer EQU $88E8
     88FD             (./generated-code/):00921                 SongFM2.Detune EQU $88FD
     88EF             (./generated-code/):00922                 SongFM2.DurationTimeout EQU $88EF
     8903             (./generated-code/):00923                 SongFM2.InstrAndVolume EQU $8903
     8902             (./generated-code/):00924                 SongFM2.InstrTranspose EQU $8902
     8904             (./generated-code/):00925                 SongFM2.LoopCounters EQU $8904
     88F9             (./generated-code/):00926                 SongFM2.ModulationDelta EQU $88F9
     88F5             (./generated-code/):00927                 SongFM2.ModulationPtr EQU $88F5
     88F8             (./generated-code/):00928                 SongFM2.ModulationSpeed EQU $88F8
     88FA             (./generated-code/):00929                 SongFM2.ModulationSteps EQU $88FA
     88FB             (./generated-code/):00930                 SongFM2.ModulationVal EQU $88FB
     88F7             (./generated-code/):00931                 SongFM2.ModulationWait EQU $88F7
     88F1             (./generated-code/):00932                 SongFM2.NextData EQU $88F1
     88E6             (./generated-code/):00933                 SongFM2.NoteControl EQU $88E6
     88F4             (./generated-code/):00934                 SongFM2.NoteFillMaster EQU $88F4
     88F3             (./generated-code/):00935                 SongFM2.NoteFillTimeout EQU $88F3
     88E4             (./generated-code/):00936                 SongFM2.PlaybackControl EQU $88E4
     88FF             (./generated-code/):00937                 SongFM2.PSGNoise EQU $88FF
     88F0             (./generated-code/):00938                 SongFM2.SavedDuration EQU $88F0
     88EE             (./generated-code/):00939                 SongFM2.StackPointer EQU $88EE
     88E7             (./generated-code/):00940                 SongFM2.TempoDivider EQU $88E7
     8900             (./generated-code/):00941                 SongFM2.TLPtr EQU $8900
     88EA             (./generated-code/):00942                 SongFM2.Transpose EQU $88EA
     88E5             (./generated-code/):00943                 SongFM2.VoiceControl EQU $88E5
     88EC             (./generated-code/):00944                 SongFM2.VoiceIndex EQU $88EC
     88ED             (./generated-code/):00945                 SongFM2.VolFlutter EQU $88ED
     88FE             (./generated-code/):00946                 SongFM2.VolTLMask EQU $88FE
     88EB             (./generated-code/):00947                 SongFM2.Volume EQU $88EB
     890E             (./generated-code/):00948                 SongFM3 EQU $890E
     8912             (./generated-code/):00949                 SongFM3.DataPointer EQU $8912
     8927             (./generated-code/):00950                 SongFM3.Detune EQU $8927
     8919             (./generated-code/):00951                 SongFM3.DurationTimeout EQU $8919
     892D             (./generated-code/):00952                 SongFM3.InstrAndVolume EQU $892D
     892C             (./generated-code/):00953                 SongFM3.InstrTranspose EQU $892C
     892E             (./generated-code/):00954                 SongFM3.LoopCounters EQU $892E
     8923             (./generated-code/):00955                 SongFM3.ModulationDelta EQU $8923
     891F             (./generated-code/):00956                 SongFM3.ModulationPtr EQU $891F
     8922             (./generated-code/):00957                 SongFM3.ModulationSpeed EQU $8922
     8924             (./generated-code/):00958                 SongFM3.ModulationSteps EQU $8924
     8925             (./generated-code/):00959                 SongFM3.ModulationVal EQU $8925
     8921             (./generated-code/):00960                 SongFM3.ModulationWait EQU $8921
     891B             (./generated-code/):00961                 SongFM3.NextData EQU $891B
     8910             (./generated-code/):00962                 SongFM3.NoteControl EQU $8910
     891E             (./generated-code/):00963                 SongFM3.NoteFillMaster EQU $891E
     891D             (./generated-code/):00964                 SongFM3.NoteFillTimeout EQU $891D
     890E             (./generated-code/):00965                 SongFM3.PlaybackControl EQU $890E
     8929             (./generated-code/):00966                 SongFM3.PSGNoise EQU $8929
     891A             (./generated-code/):00967                 SongFM3.SavedDuration EQU $891A
     8918             (./generated-code/):00968                 SongFM3.StackPointer EQU $8918
     8911             (./generated-code/):00969                 SongFM3.TempoDivider EQU $8911
     892A             (./generated-code/):00970                 SongFM3.TLPtr EQU $892A
     8914             (./generated-code/):00971                 SongFM3.Transpose EQU $8914
     890F             (./generated-code/):00972                 SongFM3.VoiceControl EQU $890F
     8916             (./generated-code/):00973                 SongFM3.VoiceIndex EQU $8916
     8917             (./generated-code/):00974                 SongFM3.VolFlutter EQU $8917
     8928             (./generated-code/):00975                 SongFM3.VolTLMask EQU $8928
     8915             (./generated-code/):00976                 SongFM3.Volume EQU $8915
     8938             (./generated-code/):00977                 SongFM4 EQU $8938
     893C             (./generated-code/):00978                 SongFM4.DataPointer EQU $893C
     8951             (./generated-code/):00979                 SongFM4.Detune EQU $8951
     8943             (./generated-code/):00980                 SongFM4.DurationTimeout EQU $8943
     8957             (./generated-code/):00981                 SongFM4.InstrAndVolume EQU $8957
     8956             (./generated-code/):00982                 SongFM4.InstrTranspose EQU $8956
     8958             (./generated-code/):00983                 SongFM4.LoopCounters EQU $8958
     894D             (./generated-code/):00984                 SongFM4.ModulationDelta EQU $894D
     8949             (./generated-code/):00985                 SongFM4.ModulationPtr EQU $8949
     894C             (./generated-code/):00986                 SongFM4.ModulationSpeed EQU $894C
     894E             (./generated-code/):00987                 SongFM4.ModulationSteps EQU $894E
     894F             (./generated-code/):00988                 SongFM4.ModulationVal EQU $894F
     894B             (./generated-code/):00989                 SongFM4.ModulationWait EQU $894B
     8945             (./generated-code/):00990                 SongFM4.NextData EQU $8945
     893A             (./generated-code/):00991                 SongFM4.NoteControl EQU $893A
     8948             (./generated-code/):00992                 SongFM4.NoteFillMaster EQU $8948
     8947             (./generated-code/):00993                 SongFM4.NoteFillTimeout EQU $8947
     8938             (./generated-code/):00994                 SongFM4.PlaybackControl EQU $8938
     8953             (./generated-code/):00995                 SongFM4.PSGNoise EQU $8953
     8944             (./generated-code/):00996                 SongFM4.SavedDuration EQU $8944
     8942             (./generated-code/):00997                 SongFM4.StackPointer EQU $8942
     893B             (./generated-code/):00998                 SongFM4.TempoDivider EQU $893B
     8954             (./generated-code/):00999                 SongFM4.TLPtr EQU $8954
     893E             (./generated-code/):01000                 SongFM4.Transpose EQU $893E
     8939             (./generated-code/):01001                 SongFM4.VoiceControl EQU $8939
     8940             (./generated-code/):01002                 SongFM4.VoiceIndex EQU $8940
     8941             (./generated-code/):01003                 SongFM4.VolFlutter EQU $8941
     8952             (./generated-code/):01004                 SongFM4.VolTLMask EQU $8952
     893F             (./generated-code/):01005                 SongFM4.Volume EQU $893F
     8962             (./generated-code/):01006                 SongFM5 EQU $8962
     8966             (./generated-code/):01007                 SongFM5.DataPointer EQU $8966
     897B             (./generated-code/):01008                 SongFM5.Detune EQU $897B
     896D             (./generated-code/):01009                 SongFM5.DurationTimeout EQU $896D
     8981             (./generated-code/):01010                 SongFM5.InstrAndVolume EQU $8981
     8980             (./generated-code/):01011                 SongFM5.InstrTranspose EQU $8980
     8982             (./generated-code/):01012                 SongFM5.LoopCounters EQU $8982
     8977             (./generated-code/):01013                 SongFM5.ModulationDelta EQU $8977
     8973             (./generated-code/):01014                 SongFM5.ModulationPtr EQU $8973
     8976             (./generated-code/):01015                 SongFM5.ModulationSpeed EQU $8976
     8978             (./generated-code/):01016                 SongFM5.ModulationSteps EQU $8978
     8979             (./generated-code/):01017                 SongFM5.ModulationVal EQU $8979
     8975             (./generated-code/):01018                 SongFM5.ModulationWait EQU $8975
     896F             (./generated-code/):01019                 SongFM5.NextData EQU $896F
     8964             (./generated-code/):01020                 SongFM5.NoteControl EQU $8964
     8972             (./generated-code/):01021                 SongFM5.NoteFillMaster EQU $8972
     8971             (./generated-code/):01022                 SongFM5.NoteFillTimeout EQU $8971
     8962             (./generated-code/):01023                 SongFM5.PlaybackControl EQU $8962
     897D             (./generated-code/):01024                 SongFM5.PSGNoise EQU $897D
     896E             (./generated-code/):01025                 SongFM5.SavedDuration EQU $896E
     896C             (./generated-code/):01026                 SongFM5.StackPointer EQU $896C
     8965             (./generated-code/):01027                 SongFM5.TempoDivider EQU $8965
     897E             (./generated-code/):01028                 SongFM5.TLPtr EQU $897E
     8968             (./generated-code/):01029                 SongFM5.Transpose EQU $8968
     8963             (./generated-code/):01030                 SongFM5.VoiceControl EQU $8963
     896A             (./generated-code/):01031                 SongFM5.VoiceIndex EQU $896A
     896B             (./generated-code/):01032                 SongFM5.VolFlutter EQU $896B
     897C             (./generated-code/):01033                 SongFM5.VolTLMask EQU $897C
     8969             (./generated-code/):01034                 SongFM5.Volume EQU $8969
     898C             (./generated-code/):01035                 SongFM6 EQU $898C
     8990             (./generated-code/):01036                 SongFM6.DataPointer EQU $8990
     89A5             (./generated-code/):01037                 SongFM6.Detune EQU $89A5
     8997             (./generated-code/):01038                 SongFM6.DurationTimeout EQU $8997
     89AB             (./generated-code/):01039                 SongFM6.InstrAndVolume EQU $89AB
     89AA             (./generated-code/):01040                 SongFM6.InstrTranspose EQU $89AA
     89AC             (./generated-code/):01041                 SongFM6.LoopCounters EQU $89AC
     89A1             (./generated-code/):01042                 SongFM6.ModulationDelta EQU $89A1
     899D             (./generated-code/):01043                 SongFM6.ModulationPtr EQU $899D
     89A0             (./generated-code/):01044                 SongFM6.ModulationSpeed EQU $89A0
     89A2             (./generated-code/):01045                 SongFM6.ModulationSteps EQU $89A2
     89A3             (./generated-code/):01046                 SongFM6.ModulationVal EQU $89A3
     899F             (./generated-code/):01047                 SongFM6.ModulationWait EQU $899F
     8999             (./generated-code/):01048                 SongFM6.NextData EQU $8999
     898E             (./generated-code/):01049                 SongFM6.NoteControl EQU $898E
     899C             (./generated-code/):01050                 SongFM6.NoteFillMaster EQU $899C
     899B             (./generated-code/):01051                 SongFM6.NoteFillTimeout EQU $899B
     898C             (./generated-code/):01052                 SongFM6.PlaybackControl EQU $898C
     89A7             (./generated-code/):01053                 SongFM6.PSGNoise EQU $89A7
     8998             (./generated-code/):01054                 SongFM6.SavedDuration EQU $8998
     8996             (./generated-code/):01055                 SongFM6.StackPointer EQU $8996
     898F             (./generated-code/):01056                 SongFM6.TempoDivider EQU $898F
     89A8             (./generated-code/):01057                 SongFM6.TLPtr EQU $89A8
     8992             (./generated-code/):01058                 SongFM6.Transpose EQU $8992
     898D             (./generated-code/):01059                 SongFM6.VoiceControl EQU $898D
     8994             (./generated-code/):01060                 SongFM6.VoiceIndex EQU $8994
     8995             (./generated-code/):01061                 SongFM6.VolFlutter EQU $8995
     89A6             (./generated-code/):01062                 SongFM6.VolTLMask EQU $89A6
     8993             (./generated-code/):01063                 SongFM6.Volume EQU $8993
     89B6             (./generated-code/):01064                 SongFM7 EQU $89B6
     89BA             (./generated-code/):01065                 SongFM7.DataPointer EQU $89BA
     89CF             (./generated-code/):01066                 SongFM7.Detune EQU $89CF
     89C1             (./generated-code/):01067                 SongFM7.DurationTimeout EQU $89C1
     89D5             (./generated-code/):01068                 SongFM7.InstrAndVolume EQU $89D5
     89D4             (./generated-code/):01069                 SongFM7.InstrTranspose EQU $89D4
     89D6             (./generated-code/):01070                 SongFM7.LoopCounters EQU $89D6
     89CB             (./generated-code/):01071                 SongFM7.ModulationDelta EQU $89CB
     89C7             (./generated-code/):01072                 SongFM7.ModulationPtr EQU $89C7
     89CA             (./generated-code/):01073                 SongFM7.ModulationSpeed EQU $89CA
     89CC             (./generated-code/):01074                 SongFM7.ModulationSteps EQU $89CC
     89CD             (./generated-code/):01075                 SongFM7.ModulationVal EQU $89CD
     89C9             (./generated-code/):01076                 SongFM7.ModulationWait EQU $89C9
     89C3             (./generated-code/):01077                 SongFM7.NextData EQU $89C3
     89B8             (./generated-code/):01078                 SongFM7.NoteControl EQU $89B8
     89C6             (./generated-code/):01079                 SongFM7.NoteFillMaster EQU $89C6
     89C5             (./generated-code/):01080                 SongFM7.NoteFillTimeout EQU $89C5
     89B6             (./generated-code/):01081                 SongFM7.PlaybackControl EQU $89B6
     89D1             (./generated-code/):01082                 SongFM7.PSGNoise EQU $89D1
     89C2             (./generated-code/):01083                 SongFM7.SavedDuration EQU $89C2
     89C0             (./generated-code/):01084                 SongFM7.StackPointer EQU $89C0
     89B9             (./generated-code/):01085                 SongFM7.TempoDivider EQU $89B9
     89D2             (./generated-code/):01086                 SongFM7.TLPtr EQU $89D2
     89BC             (./generated-code/):01087                 SongFM7.Transpose EQU $89BC
     89B7             (./generated-code/):01088                 SongFM7.VoiceControl EQU $89B7
     89BE             (./generated-code/):01089                 SongFM7.VoiceIndex EQU $89BE
     89BF             (./generated-code/):01090                 SongFM7.VolFlutter EQU $89BF
     89D0             (./generated-code/):01091                 SongFM7.VolTLMask EQU $89D0
     89BD             (./generated-code/):01092                 SongFM7.Volume EQU $89BD
     89E0             (./generated-code/):01093                 SongFM8 EQU $89E0
     89E4             (./generated-code/):01094                 SongFM8.DataPointer EQU $89E4
     89F9             (./generated-code/):01095                 SongFM8.Detune EQU $89F9
     89EB             (./generated-code/):01096                 SongFM8.DurationTimeout EQU $89EB
     89FF             (./generated-code/):01097                 SongFM8.InstrAndVolume EQU $89FF
     89FE             (./generated-code/):01098                 SongFM8.InstrTranspose EQU $89FE
     8A00             (./generated-code/):01099                 SongFM8.LoopCounters EQU $8A00
     89F5             (./generated-code/):01100                 SongFM8.ModulationDelta EQU $89F5
     89F1             (./generated-code/):01101                 SongFM8.ModulationPtr EQU $89F1
     89F4             (./generated-code/):01102                 SongFM8.ModulationSpeed EQU $89F4
     89F6             (./generated-code/):01103                 SongFM8.ModulationSteps EQU $89F6
     89F7             (./generated-code/):01104                 SongFM8.ModulationVal EQU $89F7
     89F3             (./generated-code/):01105                 SongFM8.ModulationWait EQU $89F3
     89ED             (./generated-code/):01106                 SongFM8.NextData EQU $89ED
     89E2             (./generated-code/):01107                 SongFM8.NoteControl EQU $89E2
     89F0             (./generated-code/):01108                 SongFM8.NoteFillMaster EQU $89F0
     89EF             (./generated-code/):01109                 SongFM8.NoteFillTimeout EQU $89EF
     89E0             (./generated-code/):01110                 SongFM8.PlaybackControl EQU $89E0
     89FB             (./generated-code/):01111                 SongFM8.PSGNoise EQU $89FB
     89EC             (./generated-code/):01112                 SongFM8.SavedDuration EQU $89EC
     89EA             (./generated-code/):01113                 SongFM8.StackPointer EQU $89EA
     89E3             (./generated-code/):01114                 SongFM8.TempoDivider EQU $89E3
     89FC             (./generated-code/):01115                 SongFM8.TLPtr EQU $89FC
     89E6             (./generated-code/):01116                 SongFM8.Transpose EQU $89E6
     89E1             (./generated-code/):01117                 SongFM8.VoiceControl EQU $89E1
     89E8             (./generated-code/):01118                 SongFM8.VoiceIndex EQU $89E8
     89E9             (./generated-code/):01119                 SongFM8.VolFlutter EQU $89E9
     89FA             (./generated-code/):01120                 SongFM8.VolTLMask EQU $89FA
     89E7             (./generated-code/):01121                 SongFM8.Volume EQU $89E7
     8A0A             (./generated-code/):01122                 SongFM9 EQU $8A0A
     8A0E             (./generated-code/):01123                 SongFM9.DataPointer EQU $8A0E
     8A23             (./generated-code/):01124                 SongFM9.Detune EQU $8A23
     8A15             (./generated-code/):01125                 SongFM9.DurationTimeout EQU $8A15
     8A29             (./generated-code/):01126                 SongFM9.InstrAndVolume EQU $8A29
     8A28             (./generated-code/):01127                 SongFM9.InstrTranspose EQU $8A28
     8A2A             (./generated-code/):01128                 SongFM9.LoopCounters EQU $8A2A
     8A1F             (./generated-code/):01129                 SongFM9.ModulationDelta EQU $8A1F
     8A1B             (./generated-code/):01130                 SongFM9.ModulationPtr EQU $8A1B
     8A1E             (./generated-code/):01131                 SongFM9.ModulationSpeed EQU $8A1E
     8A20             (./generated-code/):01132                 SongFM9.ModulationSteps EQU $8A20
     8A21             (./generated-code/):01133                 SongFM9.ModulationVal EQU $8A21
     8A1D             (./generated-code/):01134                 SongFM9.ModulationWait EQU $8A1D
     8A17             (./generated-code/):01135                 SongFM9.NextData EQU $8A17
     8A0C             (./generated-code/):01136                 SongFM9.NoteControl EQU $8A0C
     8A1A             (./generated-code/):01137                 SongFM9.NoteFillMaster EQU $8A1A
     8A19             (./generated-code/):01138                 SongFM9.NoteFillTimeout EQU $8A19
     8A0A             (./generated-code/):01139                 SongFM9.PlaybackControl EQU $8A0A
     8A25             (./generated-code/):01140                 SongFM9.PSGNoise EQU $8A25
     8A16             (./generated-code/):01141                 SongFM9.SavedDuration EQU $8A16
     8A14             (./generated-code/):01142                 SongFM9.StackPointer EQU $8A14
     8A0D             (./generated-code/):01143                 SongFM9.TempoDivider EQU $8A0D
     8A26             (./generated-code/):01144                 SongFM9.TLPtr EQU $8A26
     8A10             (./generated-code/):01145                 SongFM9.Transpose EQU $8A10
     8A0B             (./generated-code/):01146                 SongFM9.VoiceControl EQU $8A0B
     8A12             (./generated-code/):01147                 SongFM9.VoiceIndex EQU $8A12
     8A13             (./generated-code/):01148                 SongFM9.VolFlutter EQU $8A13
     8A24             (./generated-code/):01149                 SongFM9.VolTLMask EQU $8A24
     8A11             (./generated-code/):01150                 SongFM9.Volume EQU $8A11
     8A34             (./generated-code/):01151                 SongFMEnd EQU $8A34
     88BA             (./generated-code/):01152                 SongFMStart EQU $88BA
     8A34             (./generated-code/):01153                 SongPSG1 EQU $8A34
     8A38             (./generated-code/):01154                 SongPSG1.DataPointer EQU $8A38
     8A4D             (./generated-code/):01155                 SongPSG1.Detune EQU $8A4D
     8A3F             (./generated-code/):01156                 SongPSG1.DurationTimeout EQU $8A3F
     8A53             (./generated-code/):01157                 SongPSG1.InstrAndVolume EQU $8A53
     8A52             (./generated-code/):01158                 SongPSG1.InstrTranspose EQU $8A52
     8A54             (./generated-code/):01159                 SongPSG1.LoopCounters EQU $8A54
     8A49             (./generated-code/):01160                 SongPSG1.ModulationDelta EQU $8A49
     8A45             (./generated-code/):01161                 SongPSG1.ModulationPtr EQU $8A45
     8A48             (./generated-code/):01162                 SongPSG1.ModulationSpeed EQU $8A48
     8A4A             (./generated-code/):01163                 SongPSG1.ModulationSteps EQU $8A4A
     8A4B             (./generated-code/):01164                 SongPSG1.ModulationVal EQU $8A4B
     8A47             (./generated-code/):01165                 SongPSG1.ModulationWait EQU $8A47
     8A41             (./generated-code/):01166                 SongPSG1.NextData EQU $8A41
     8A36             (./generated-code/):01167                 SongPSG1.NoteControl EQU $8A36
     8A44             (./generated-code/):01168                 SongPSG1.NoteFillMaster EQU $8A44
     8A43             (./generated-code/):01169                 SongPSG1.NoteFillTimeout EQU $8A43
     8A34             (./generated-code/):01170                 SongPSG1.PlaybackControl EQU $8A34
     8A4F             (./generated-code/):01171                 SongPSG1.PSGNoise EQU $8A4F
     8A40             (./generated-code/):01172                 SongPSG1.SavedDuration EQU $8A40
     8A3E             (./generated-code/):01173                 SongPSG1.StackPointer EQU $8A3E
     8A37             (./generated-code/):01174                 SongPSG1.TempoDivider EQU $8A37
     8A50             (./generated-code/):01175                 SongPSG1.TLPtr EQU $8A50
     8A3A             (./generated-code/):01176                 SongPSG1.Transpose EQU $8A3A
     8A35             (./generated-code/):01177                 SongPSG1.VoiceControl EQU $8A35
     8A3C             (./generated-code/):01178                 SongPSG1.VoiceIndex EQU $8A3C
     8A3D             (./generated-code/):01179                 SongPSG1.VolFlutter EQU $8A3D
     8A4E             (./generated-code/):01180                 SongPSG1.VolTLMask EQU $8A4E
     8A3B             (./generated-code/):01181                 SongPSG1.Volume EQU $8A3B
     8A5E             (./generated-code/):01182                 SongPSG2 EQU $8A5E
     8A62             (./generated-code/):01183                 SongPSG2.DataPointer EQU $8A62
     8A77             (./generated-code/):01184                 SongPSG2.Detune EQU $8A77
     8A69             (./generated-code/):01185                 SongPSG2.DurationTimeout EQU $8A69
     8A7D             (./generated-code/):01186                 SongPSG2.InstrAndVolume EQU $8A7D
     8A7C             (./generated-code/):01187                 SongPSG2.InstrTranspose EQU $8A7C
     8A7E             (./generated-code/):01188                 SongPSG2.LoopCounters EQU $8A7E
     8A73             (./generated-code/):01189                 SongPSG2.ModulationDelta EQU $8A73
     8A6F             (./generated-code/):01190                 SongPSG2.ModulationPtr EQU $8A6F
     8A72             (./generated-code/):01191                 SongPSG2.ModulationSpeed EQU $8A72
     8A74             (./generated-code/):01192                 SongPSG2.ModulationSteps EQU $8A74
     8A75             (./generated-code/):01193                 SongPSG2.ModulationVal EQU $8A75
     8A71             (./generated-code/):01194                 SongPSG2.ModulationWait EQU $8A71
     8A6B             (./generated-code/):01195                 SongPSG2.NextData EQU $8A6B
     8A60             (./generated-code/):01196                 SongPSG2.NoteControl EQU $8A60
     8A6E             (./generated-code/):01197                 SongPSG2.NoteFillMaster EQU $8A6E
     8A6D             (./generated-code/):01198                 SongPSG2.NoteFillTimeout EQU $8A6D
     8A5E             (./generated-code/):01199                 SongPSG2.PlaybackControl EQU $8A5E
     8A79             (./generated-code/):01200                 SongPSG2.PSGNoise EQU $8A79
     8A6A             (./generated-code/):01201                 SongPSG2.SavedDuration EQU $8A6A
     8A68             (./generated-code/):01202                 SongPSG2.StackPointer EQU $8A68
     8A61             (./generated-code/):01203                 SongPSG2.TempoDivider EQU $8A61
     8A7A             (./generated-code/):01204                 SongPSG2.TLPtr EQU $8A7A
     8A64             (./generated-code/):01205                 SongPSG2.Transpose EQU $8A64
     8A5F             (./generated-code/):01206                 SongPSG2.VoiceControl EQU $8A5F
     8A66             (./generated-code/):01207                 SongPSG2.VoiceIndex EQU $8A66
     8A67             (./generated-code/):01208                 SongPSG2.VolFlutter EQU $8A67
     8A78             (./generated-code/):01209                 SongPSG2.VolTLMask EQU $8A78
     8A65             (./generated-code/):01210                 SongPSG2.Volume EQU $8A65
     8A88             (./generated-code/):01211                 SongPSG3 EQU $8A88
     8A8C             (./generated-code/):01212                 SongPSG3.DataPointer EQU $8A8C
     8AA1             (./generated-code/):01213                 SongPSG3.Detune EQU $8AA1
     8A93             (./generated-code/):01214                 SongPSG3.DurationTimeout EQU $8A93
     8AA7             (./generated-code/):01215                 SongPSG3.InstrAndVolume EQU $8AA7
     8AA6             (./generated-code/):01216                 SongPSG3.InstrTranspose EQU $8AA6
     8AA8             (./generated-code/):01217                 SongPSG3.LoopCounters EQU $8AA8
     8A9D             (./generated-code/):01218                 SongPSG3.ModulationDelta EQU $8A9D
     8A99             (./generated-code/):01219                 SongPSG3.ModulationPtr EQU $8A99
     8A9C             (./generated-code/):01220                 SongPSG3.ModulationSpeed EQU $8A9C
     8A9E             (./generated-code/):01221                 SongPSG3.ModulationSteps EQU $8A9E
     8A9F             (./generated-code/):01222                 SongPSG3.ModulationVal EQU $8A9F
     8A9B             (./generated-code/):01223                 SongPSG3.ModulationWait EQU $8A9B
     8A95             (./generated-code/):01224                 SongPSG3.NextData EQU $8A95
     8A8A             (./generated-code/):01225                 SongPSG3.NoteControl EQU $8A8A
     8A98             (./generated-code/):01226                 SongPSG3.NoteFillMaster EQU $8A98
     8A97             (./generated-code/):01227                 SongPSG3.NoteFillTimeout EQU $8A97
     8A88             (./generated-code/):01228                 SongPSG3.PlaybackControl EQU $8A88
     8AA3             (./generated-code/):01229                 SongPSG3.PSGNoise EQU $8AA3
     8A94             (./generated-code/):01230                 SongPSG3.SavedDuration EQU $8A94
     8A92             (./generated-code/):01231                 SongPSG3.StackPointer EQU $8A92
     8A8B             (./generated-code/):01232                 SongPSG3.TempoDivider EQU $8A8B
     8AA4             (./generated-code/):01233                 SongPSG3.TLPtr EQU $8AA4
     8A8E             (./generated-code/):01234                 SongPSG3.Transpose EQU $8A8E
     8A89             (./generated-code/):01235                 SongPSG3.VoiceControl EQU $8A89
     8A90             (./generated-code/):01236                 SongPSG3.VoiceIndex EQU $8A90
     8A91             (./generated-code/):01237                 SongPSG3.VolFlutter EQU $8A91
     8AA2             (./generated-code/):01238                 SongPSG3.VolTLMask EQU $8AA2
     8A8F             (./generated-code/):01239                 SongPSG3.Volume EQU $8A8F
     8AB2             (./generated-code/):01240                 SongPSGEnd EQU $8AB2
     8A34             (./generated-code/):01241                 SongPSGStart EQU $8A34
     0003             (./generated-code/):01242                 sound_end_addr EQU $0003
     0005             (./generated-code/):01243                 sound_meta_size EQU $0005
     0000             (./generated-code/):01244                 sound_page EQU $0000
     0001             (./generated-code/):01245                 sound_start_addr EQU $0001
     8BB6             (./generated-code/):01246                 SoundData EQU $8BB6
     8BB3             (./generated-code/):01247                 SoundPage EQU $8BB3
     7491             (./generated-code/):01248                 SpecialStage_CurrentSegment EQU $7491
     74D3             (./generated-code/):01249                 SpecialStage_LastSegment2 EQU $74D3
     74AA             (./generated-code/):01250                 SpecialStage_Started EQU $74AA
     613E             (./generated-code/):01251                 SpecialStageHalfPipe EQU $613E
     62EA             (./generated-code/):01252                 SpecialStageShadow_Sonic EQU $62EA
     747B             (./generated-code/):01253                 SS2p_RingBuffer EQU $747B
     7517             (./generated-code/):01254                 SS_2P_BCD_Score EQU $7517
     7497             (./generated-code/):01255                 SS_Alternate_HorizScroll_Buf EQU $7497
     7494             (./generated-code/):01256                 SS_Alternate_PNT EQU $7494
     750A             (./generated-code/):01257                 SS_Check_Rings_flag EQU $750A
     751A             (./generated-code/):01258                 SS_Checkpoint_Rainbow_flag EQU $751A
     74EA             (./generated-code/):01259                 SS_Ctrl_Record_Buf EQU $74EA
     750A             (./generated-code/):01260                 SS_Ctrl_Record_Buf_End EQU $750A
     749E             (./generated-code/):01261                 SS_Cur_Speed_Factor EQU $749E
     7512             (./generated-code/):01262                 SS_CurrentLevelLayout EQU $7512
     750C             (./generated-code/):01263                 SS_CurrentLevelObjectLocations EQU $750C
     7527             (./generated-code/):01264                 SS_HideRingsToGo EQU $7527
     7499             (./generated-code/):01265                 SS_Last_Alternate_HorizScroll_Buf EQU $7499
     7508             (./generated-code/):01266                 SS_Last_Ctrl_Record EQU $7508
     7487             (./generated-code/):01267                 SS_Misc_Variables EQU $7487
     7529             (./generated-code/):01268                 SS_Misc_Variables_End EQU $7529
     749A             (./generated-code/):01269                 SS_New_Speed_Factor EQU $749A
     7519             (./generated-code/):01270                 SS_NoCheckpoint_flag EQU $7519
     7522             (./generated-code/):01271                 SS_NoCheckpointMsg_flag EQU $7522
     7523             (./generated-code/):01272                 SS_NoRingsTogoLifetime EQU $7523
     627F             (./generated-code/):01273                 SS_Object_RAM EQU $627F
     7478             (./generated-code/):01274                 SS_Object_RAM_End EQU $7478
     7529             (./generated-code/):01275                 SS_Offset_X EQU $7529
     752A             (./generated-code/):01276                 SS_Offset_Y EQU $752A
     750B             (./generated-code/):01277                 SS_Pause_Only_flag EQU $750B
     751C             (./generated-code/):01278                 SS_Perfect_rings_left EQU $751C
     74A9             (./generated-code/):01279                 SS_player_anim_frame_timer EQU $74A9
     751B             (./generated-code/):01280                 SS_Rainbow_palette EQU $751B
     7510             (./generated-code/):01281                 SS_Ring_Requirement EQU $7510
     7525             (./generated-code/):01282                 SS_RingsToGoBCD EQU $7525
     7531             (./generated-code/):01283                 SS_Seg_Len_x4 EQU $7531
     7520             (./generated-code/):01284                 SS_Star_color_1 EQU $7520
     7521             (./generated-code/):01285                 SS_Star_color_2 EQU $7521
     752B             (./generated-code/):01286                 SS_Swap_Positions_Flag EQU $752B
     7528             (./generated-code/):01287                 SS_TriggerRingsToGo EQU $7528
     74D5             (./generated-code/):01288                 SS_unk_DB4D EQU $74D5
     74C5             (./generated-code/):01289                 SSDrawRegBuffer EQU $74C5
     74D1             (./generated-code/):01290                 SSDrawRegBuffer_End EQU $74D1
     748F             (./generated-code/):01291                 SSTrack_anim EQU $748F
     7493             (./generated-code/):01292                 SSTrack_anim_frame EQU $7493
     7495             (./generated-code/):01293                 SSTrack_drawing_index EQU $7495
     74A7             (./generated-code/):01294                 SSTrack_duration_timer EQU $74A7
     7490             (./generated-code/):01295                 SSTrack_last_anim_frame EQU $7490
     74C0             (./generated-code/):01296                 SSTrack_last_mapping_frame EQU $74C0
     74B3             (./generated-code/):01297                 SSTrack_last_mappings EQU $74B3
     74AF             (./generated-code/):01298                 SSTrack_last_mappings_copy EQU $74AF
     74BB             (./generated-code/):01299                 SSTrack_LastVScroll EQU $74BB
     7498             (./generated-code/):01300                 SSTrack_mapping_frame EQU $7498
     7487             (./generated-code/):01301                 SSTrack_mappings_bitflags EQU $7487
     74C1             (./generated-code/):01302                 SSTrack_mappings_RLE EQU $74C1
     748B             (./generated-code/):01303                 SSTrack_mappings_uncompressed EQU $748B
     7496             (./generated-code/):01304                 SSTrack_Orientation EQU $7496
     000A             (./generated-code/):01305                 StackPointer EQU $000A
     000B             (./generated-code/):01306                 status_flags EQU $000B
     0001             (./generated-code/):01307                 status_xflip_mask EQU $0001
     0002             (./generated-code/):01308                 status_yflip_mask EQU $0002
     8BAE             (./generated-code/):01309                 StructEnd EQU $8BAE
     887A             (./generated-code/):01310                 StructStart EQU $887A
     0000             (./generated-code/):01311                 Sub_SpecialStage_Init EQU $0000
     0001             (./generated-code/):01312                 Sub_SpecialStage_Main EQU $0001
     0001             (./generated-code/):01313                 subtype EQU $0001
     75BB             (./generated-code/):01314                 SwapVideoPage EQU $75BB
     77CB             (./generated-code/):01315                 Tbl_Priority_First_Entry_0 EQU $77CB
     784D             (./generated-code/):01316                 Tbl_Priority_First_Entry_1 EQU $784D
     77DD             (./generated-code/):01317                 Tbl_Priority_Last_Entry_0 EQU $77DD
     785F             (./generated-code/):01318                 Tbl_Priority_Last_Entry_1 EQU $785F
     792B             (./generated-code/):01319                 Tbl_Sub_Object_Draw EQU $792B
     78CF             (./generated-code/):01320                 Tbl_Sub_Object_Erase EQU $78CF
     0003             (./generated-code/):01321                 TempoDivider EQU $0003
     001C             (./generated-code/):01322                 TLPtr EQU $001C
     0004             (./generated-code/):01323                 Track.DataPointer EQU $0004
     0019             (./generated-code/):01324                 Track.Detune EQU $0019
     000B             (./generated-code/):01325                 Track.DurationTimeout EQU $000B
     001F             (./generated-code/):01326                 Track.InstrAndVolume EQU $001F
     001E             (./generated-code/):01327                 Track.InstrTranspose EQU $001E
     0020             (./generated-code/):01328                 Track.LoopCounters EQU $0020
     0015             (./generated-code/):01329                 Track.ModulationDelta EQU $0015
     0011             (./generated-code/):01330                 Track.ModulationPtr EQU $0011
     0014             (./generated-code/):01331                 Track.ModulationSpeed EQU $0014
     0016             (./generated-code/):01332                 Track.ModulationSteps EQU $0016
     0017             (./generated-code/):01333                 Track.ModulationVal EQU $0017
     0013             (./generated-code/):01334                 Track.ModulationWait EQU $0013
     000D             (./generated-code/):01335                 Track.NextData EQU $000D
     0002             (./generated-code/):01336                 Track.NoteControl EQU $0002
     0010             (./generated-code/):01337                 Track.NoteFillMaster EQU $0010
     000F             (./generated-code/):01338                 Track.NoteFillTimeout EQU $000F
     0000             (./generated-code/):01339                 Track.PlaybackControl EQU $0000
     001B             (./generated-code/):01340                 Track.PSGNoise EQU $001B
     000C             (./generated-code/):01341                 Track.SavedDuration EQU $000C
     000A             (./generated-code/):01342                 Track.StackPointer EQU $000A
     0003             (./generated-code/):01343                 Track.TempoDivider EQU $0003
     001C             (./generated-code/):01344                 Track.TLPtr EQU $001C
     0006             (./generated-code/):01345                 Track.Transpose EQU $0006
     0001             (./generated-code/):01346                 Track.VoiceControl EQU $0001
     0008             (./generated-code/):01347                 Track.VoiceIndex EQU $0008
     0009             (./generated-code/):01348                 Track.VolFlutter EQU $0009
     001A             (./generated-code/):01349                 Track.VolTLMask EQU $001A
     0007             (./generated-code/):01350                 Track.Volume EQU $0007
     8AB2             (./generated-code/):01351                 tracksEnd EQU $8AB2
     8BAE             (./generated-code/):01352                 tracksSFXEnd EQU $8BAE
     8AB2             (./generated-code/):01353                 tracksSFXStart EQU $8AB2
     8890             (./generated-code/):01354                 tracksStart EQU $8890
     0006             (./generated-code/):01355                 TranspAndVolume EQU $0006
     0006             (./generated-code/):01356                 Transpose EQU $0006
     82FC             (./generated-code/):01357                 UDP_B0 EQU $82FC
     8369             (./generated-code/):01358                 UDP_B1 EQU $8369
     8343             (./generated-code/):01359                 UDP_ChainNextB0 EQU $8343
     83B0             (./generated-code/):01360                 UDP_ChainNextB1 EQU $83B0
     8323             (./generated-code/):01361                 UDP_ChainPrevB0 EQU $8323
     8390             (./generated-code/):01362                 UDP_ChainPrevB1 EQU $8390
     834D             (./generated-code/):01363                 UDP_CheckDeleteB0 EQU $834D
     83BA             (./generated-code/):01364                 UDP_CheckDeleteB1 EQU $83BA
     82FF             (./generated-code/):01365                 UDP_CheckEndB0 EQU $82FF
     836C             (./generated-code/):01366                 UDP_CheckEndB1 EQU $836C
     832D             (./generated-code/):01367                 UDP_CheckPrioNextB0 EQU $832D
     839A             (./generated-code/):01368                 UDP_CheckPrioNextB1 EQU $839A
     830B             (./generated-code/):01369                 UDP_CheckPrioPrevB0 EQU $830B
     8378             (./generated-code/):01370                 UDP_CheckPrioPrevB1 EQU $8378
     8304             (./generated-code/):01371                 UDP_InitListB0 EQU $8304
     8371             (./generated-code/):01372                 UDP_InitListB1 EQU $8371
     8362             (./generated-code/):01373                 UDP_SetNewPrioB0 EQU $8362
     83CF             (./generated-code/):01374                 UDP_SetNewPrioB1 EQU $83CF
     82F7             (./generated-code/):01375                 UDP_Start EQU $82F7
     82F7             (./generated-code/):01376                 UnsetDisplayPriority EQU $82F7
     8D13             (./generated-code/):01377                 UpdateEverything EQU $8D13
     8D2A             (./generated-code/):01378                 UpdateMusic EQU $8D2A
     884E             (./generated-code/):01379                 UpdatePalette EQU $884E
     8DA2             (./generated-code/):01380                 UpdateSound EQU $8DA2
     8878             (./generated-code/):01381                 UPP_return EQU $8878
     886B             (./generated-code/):01382                 UPP_SetColor EQU $886B
     885A             (./generated-code/):01383                 UPP_Tempo EQU $885A
     7600             (./generated-code/):01384                 Vint_Last_runcount EQU $7600
     7603             (./generated-code/):01385                 Vint_Main_runcount EQU $7603
     7604             (./generated-code/):01386                 Vint_Main_runcount_cap EQU $7604
     7602             (./generated-code/):01387                 Vint_Main_runcount_w EQU $7602
     75FE             (./generated-code/):01388                 Vint_runcount EQU $75FE
     0001             (./generated-code/):01389                 VoiceControl EQU $0001
     0008             (./generated-code/):01390                 VoiceIndex EQU $0008
     9187             (./generated-code/):01391                 VolEnvHold EQU $9187
     0009             (./generated-code/):01392                 VolFlutter EQU $0009
     001A             (./generated-code/):01393                 VolTLMask EQU $001A
     0007             (./generated-code/):01394                 Volume EQU $0007
     75A7             (./generated-code/):01395                 WaitVBL EQU $75A7
     882E             (./generated-code/):01396                 White_palette EQU $882E
     001A             (./generated-code/):01397                 x_acl EQU $001A
     0014             (./generated-code/):01398                 x_pixel EQU $0014
     000E             (./generated-code/):01399                 x_pos EQU $000E
     0010             (./generated-code/):01400                 x_sub EQU $0010
     0016             (./generated-code/):01401                 x_vel EQU $0016
     0014             (./generated-code/):01402                 xy_pixel EQU $0014
     001C             (./generated-code/):01403                 y_acl EQU $001C
     0015             (./generated-code/):01404                 y_pixel EQU $0015
     0011             (./generated-code/):01405                 y_pos EQU $0011
     0013             (./generated-code/):01406                 y_sub EQU $0013
     0018             (./generated-code/):01407                 y_vel EQU $0018
     E7FC             (./generated-code/):01408                 YM2413_A0 EQU $E7FC
     E7FD             (./generated-code/):01409                 YM2413_D0 EQU $E7FD
     8BB8             (./generated-code/):01410                 YM2413_DrumModeOn EQU $8BB8
                      (C:\Users\bhrou\gi):00003                         INCLUDE "./generated-code/SpecialStage/T2/SSBomb/SSBomb_Animation.glb"
     00FE             (./generated-code/):00001                 _goBackNFrames EQU $00FE
     00FD             (./generated-code/):00002                 _goToAnimation EQU $00FD
     00FC             (./generated-code/):00003                 _nextRoutine EQU $00FC
     00FA             (./generated-code/):00004                 _nextSubRoutine EQU $00FA
     00FF             (./generated-code/):00005                 _resetAnim EQU $00FF
     00FB             (./generated-code/):00006                 _resetAnimAndSubRoutine EQU $00FB
     031E             (./generated-code/):00007                 Ani_SSBomb_0 EQU $031E
     0322             (./generated-code/):00008                 Ani_SSBomb_1 EQU $0322
     0326             (./generated-code/):00009                 Ani_SSBomb_2 EQU $0326
     032A             (./generated-code/):00010                 Ani_SSBomb_3 EQU $032A
     032E             (./generated-code/):00011                 Ani_SSBomb_4 EQU $032E
     0332             (./generated-code/):00012                 Ani_SSBomb_5 EQU $0332
     0336             (./generated-code/):00013                 Ani_SSBomb_6 EQU $0336
     033A             (./generated-code/):00014                 Ani_SSBomb_7 EQU $033A
     033E             (./generated-code/):00015                 Ani_SSBomb_8 EQU $033E
     0342             (./generated-code/):00016                 Ani_SSBomb_9 EQU $0342
     0346             (./generated-code/):00017                 Ani_SSBomb_explode EQU $0346
     034E             (./generated-code/):00018                 Ani_SSRing_0 EQU $034E
     0358             (./generated-code/):00019                 Ani_SSRing_1 EQU $0358
     0362             (./generated-code/):00020                 Ani_SSRing_2 EQU $0362
     036C             (./generated-code/):00021                 Ani_SSRing_3 EQU $036C
     0376             (./generated-code/):00022                 Ani_SSRing_4 EQU $0376
     0380             (./generated-code/):00023                 Ani_SSRing_5 EQU $0380
     038A             (./generated-code/):00024                 Ani_SSRing_6 EQU $038A
     0394             (./generated-code/):00025                 Ani_SSRing_7 EQU $0394
     039E             (./generated-code/):00026                 Ani_SSRing_8 EQU $039E
     03A8             (./generated-code/):00027                 Ani_SSRing_9 EQU $03A8
     03B2             (./generated-code/):00028                 Ani_SSRing_stars EQU $03B2
     0012             (./generated-code/):00029                 IdImg_SSBomb_000 EQU $0012
     0010             (./generated-code/):00030                 IdImg_SSBomb_001 EQU $0010
     000E             (./generated-code/):00031                 IdImg_SSBomb_002 EQU $000E
     000C             (./generated-code/):00032                 IdImg_SSBomb_003 EQU $000C
     000A             (./generated-code/):00033                 IdImg_SSBomb_004 EQU $000A
     0008             (./generated-code/):00034                 IdImg_SSBomb_005 EQU $0008
     0006             (./generated-code/):00035                 IdImg_SSBomb_006 EQU $0006
     0004             (./generated-code/):00036                 IdImg_SSBomb_007 EQU $0004
     0002             (./generated-code/):00037                 IdImg_SSBomb_008 EQU $0002
     0000             (./generated-code/):00038                 IdImg_SSBomb_009 EQU $0000
     0000             (./generated-code/):00039                 IdImg_SSBomb_010 EQU $0000
     0000             (./generated-code/):00040                 IdImg_SSBomb_011 EQU $0000
     0000             (./generated-code/):00041                 IdImg_SSBomb_012 EQU $0000
     0012             (./generated-code/):00042                 IdImg_SSRing_000 EQU $0012
     0010             (./generated-code/):00043                 IdImg_SSRing_001 EQU $0010
     000E             (./generated-code/):00044                 IdImg_SSRing_002 EQU $000E
     000C             (./generated-code/):00045                 IdImg_SSRing_003 EQU $000C
     000A             (./generated-code/):00046                 IdImg_SSRing_004 EQU $000A
     0008             (./generated-code/):00047                 IdImg_SSRing_005 EQU $0008
     0006             (./generated-code/):00048                 IdImg_SSRing_006 EQU $0006
     0004             (./generated-code/):00049                 IdImg_SSRing_007 EQU $0004
     0002             (./generated-code/):00050                 IdImg_SSRing_008 EQU $0002
     0000             (./generated-code/):00051                 IdImg_SSRing_009 EQU $0000
     0012             (./generated-code/):00052                 IdImg_SSRing_010 EQU $0012
     0010             (./generated-code/):00053                 IdImg_SSRing_011 EQU $0010
     000E             (./generated-code/):00054                 IdImg_SSRing_012 EQU $000E
     000C             (./generated-code/):00055                 IdImg_SSRing_013 EQU $000C
     000A             (./generated-code/):00056                 IdImg_SSRing_014 EQU $000A
     0008             (./generated-code/):00057                 IdImg_SSRing_015 EQU $0008
     0006             (./generated-code/):00058                 IdImg_SSRing_016 EQU $0006
     0004             (./generated-code/):00059                 IdImg_SSRing_017 EQU $0004
     0002             (./generated-code/):00060                 IdImg_SSRing_018 EQU $0002
     0000             (./generated-code/):00061                 IdImg_SSRing_019 EQU $0000
     0012             (./generated-code/):00062                 IdImg_SSRing_020 EQU $0012
     0010             (./generated-code/):00063                 IdImg_SSRing_021 EQU $0010
     000E             (./generated-code/):00064                 IdImg_SSRing_022 EQU $000E
     000C             (./generated-code/):00065                 IdImg_SSRing_023 EQU $000C
     000A             (./generated-code/):00066                 IdImg_SSRing_024 EQU $000A
     0008             (./generated-code/):00067                 IdImg_SSRing_025 EQU $0008
     0006             (./generated-code/):00068                 IdImg_SSRing_026 EQU $0006
     0004             (./generated-code/):00069                 IdImg_SSRing_027 EQU $0004
     0002             (./generated-code/):00070                 IdImg_SSRing_028 EQU $0002
     0000             (./generated-code/):00071                 IdImg_SSRing_029 EQU $0000
     0000             (./generated-code/):00072                 IdImg_SSRing_030 EQU $0000
     0000             (./generated-code/):00073                 IdImg_SSRing_031 EQU $0000
     0000             (./generated-code/):00074                 IdImg_SSRing_032 EQU $0000
     3F27             (./generated-code/):00075                 Img_SSBomb_000 EQU $3F27
     3D08             (./generated-code/):00076                 Img_SSBomb_001 EQU $3D08
     3D1D             (./generated-code/):00077                 Img_SSBomb_002 EQU $3D1D
     3CB4             (./generated-code/):00078                 Img_SSBomb_003 EQU $3CB4
     3CDE             (./generated-code/):00079                 Img_SSBomb_004 EQU $3CDE
     3D5C             (./generated-code/):00080                 Img_SSBomb_005 EQU $3D5C
     3D86             (./generated-code/):00081                 Img_SSBomb_006 EQU $3D86
     3D32             (./generated-code/):00082                 Img_SSBomb_007 EQU $3D32
     3D47             (./generated-code/):00083                 Img_SSBomb_008 EQU $3D47
     3D9B             (./generated-code/):00084                 Img_SSBomb_009 EQU $3D9B
     3901             (./generated-code/):00085                 Img_SSBomb_010 EQU $3901
     3916             (./generated-code/):00086                 Img_SSBomb_011 EQU $3916
     3844             (./generated-code/):00087                 Img_SSBomb_012 EQU $3844
     3B7C             (./generated-code/):00088                 Img_SSRing_000 EQU $3B7C
     3B52             (./generated-code/):00089                 Img_SSRing_001 EQU $3B52
     3B67             (./generated-code/):00090                 Img_SSRing_002 EQU $3B67
     3AE9             (./generated-code/):00091                 Img_SSRing_003 EQU $3AE9
     3AFE             (./generated-code/):00092                 Img_SSRing_004 EQU $3AFE
     3ABF             (./generated-code/):00093                 Img_SSRing_005 EQU $3ABF
     3AD4             (./generated-code/):00094                 Img_SSRing_006 EQU $3AD4
     3B28             (./generated-code/):00095                 Img_SSRing_007 EQU $3B28
     3B3D             (./generated-code/):00096                 Img_SSRing_008 EQU $3B3D
     3B13             (./generated-code/):00097                 Img_SSRing_009 EQU $3B13
     397F             (./generated-code/):00098                 Img_SSRing_010 EQU $397F
     3994             (./generated-code/):00099                 Img_SSRing_011 EQU $3994
     3955             (./generated-code/):00100                 Img_SSRing_012 EQU $3955
     396A             (./generated-code/):00101                 Img_SSRing_013 EQU $396A
     38D7             (./generated-code/):00102                 Img_SSRing_014 EQU $38D7
     38EC             (./generated-code/):00103                 Img_SSRing_015 EQU $38EC
     38AD             (./generated-code/):00104                 Img_SSRing_016 EQU $38AD
     38C2             (./generated-code/):00105                 Img_SSRing_017 EQU $38C2
     392B             (./generated-code/):00106                 Img_SSRing_018 EQU $392B
     3940             (./generated-code/):00107                 Img_SSRing_019 EQU $3940
     382F             (./generated-code/):00108                 Img_SSRing_020 EQU $382F
     3883             (./generated-code/):00109                 Img_SSRing_021 EQU $3883
     3898             (./generated-code/):00110                 Img_SSRing_022 EQU $3898
     3859             (./generated-code/):00111                 Img_SSRing_023 EQU $3859
     386E             (./generated-code/):00112                 Img_SSRing_024 EQU $386E
     3EFD             (./generated-code/):00113                 Img_SSRing_025 EQU $3EFD
     3F12             (./generated-code/):00114                 Img_SSRing_026 EQU $3F12
     3ED3             (./generated-code/):00115                 Img_SSRing_027 EQU $3ED3
     3EE8             (./generated-code/):00116                 Img_SSRing_028 EQU $3EE8
     3F3C             (./generated-code/):00117                 Img_SSRing_029 EQU $3F3C
     3CC9             (./generated-code/):00118                 Img_SSRing_030 EQU $3CC9
     3CF3             (./generated-code/):00119                 Img_SSRing_031 EQU $3CF3
     3D71             (./generated-code/):00120                 Img_SSRing_032 EQU $3D71
     3AAA             (./generated-code/):00121                 Img_SSShadow_000 EQU $3AAA
     3A89             (./generated-code/):00122                 Img_SSShadow_001 EQU $3A89
     3A68             (./generated-code/):00123                 Img_SSShadow_002 EQU $3A68
     3A54             (./generated-code/):00124                 Img_SSShadow_003 EQU $3A54
     3A33             (./generated-code/):00125                 Img_SSShadow_004 EQU $3A33
     3A12             (./generated-code/):00126                 Img_SSShadow_005 EQU $3A12
     39FE             (./generated-code/):00127                 Img_SSShadow_006 EQU $39FE
     39DD             (./generated-code/):00128                 Img_SSShadow_007 EQU $39DD
     39BC             (./generated-code/):00129                 Img_SSShadow_008 EQU $39BC
     39A8             (./generated-code/):00130                 Img_SSShadow_009 EQU $39A8
     3C92             (./generated-code/):00131                 Img_SSShadow_010 EQU $3C92
     3C71             (./generated-code/):00132                 Img_SSShadow_011 EQU $3C71
     3C5D             (./generated-code/):00133                 Img_SSShadow_012 EQU $3C5D
     3C3C             (./generated-code/):00134                 Img_SSShadow_013 EQU $3C3C
     3C1B             (./generated-code/):00135                 Img_SSShadow_014 EQU $3C1B
     3C07             (./generated-code/):00136                 Img_SSShadow_015 EQU $3C07
     3BE6             (./generated-code/):00137                 Img_SSShadow_016 EQU $3BE6
     3BC5             (./generated-code/):00138                 Img_SSShadow_017 EQU $3BC5
     3BB1             (./generated-code/):00139                 Img_SSShadow_018 EQU $3BB1
     3B90             (./generated-code/):00140                 Img_SSShadow_019 EQU $3B90
     3EB1             (./generated-code/):00141                 Img_SSShadow_020 EQU $3EB1
     3E9D             (./generated-code/):00142                 Img_SSShadow_021 EQU $3E9D
     3E7C             (./generated-code/):00143                 Img_SSShadow_022 EQU $3E7C
     3E5B             (./generated-code/):00144                 Img_SSShadow_023 EQU $3E5B
     3E47             (./generated-code/):00145                 Img_SSShadow_024 EQU $3E47
     3E26             (./generated-code/):00146                 Img_SSShadow_025 EQU $3E26
     3E05             (./generated-code/):00147                 Img_SSShadow_026 EQU $3E05
     3DF1             (./generated-code/):00148                 Img_SSShadow_027 EQU $3DF1
     3DD0             (./generated-code/):00149                 Img_SSShadow_028 EQU $3DD0
     3DAF             (./generated-code/):00150                 Img_SSShadow_029 EQU $3DAF
                      (C:\Users\bhrou\gi):00004                         org   $020F
     FF               (C:\Users\bhrou\gi):00005                         setdp $FF
                      (C:\Users\bhrou\gi):00006                 
                      (C:\Users\bhrou\gi):00007                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00008                 ; Object - Bombs and Rings from Special Stage
                      (C:\Users\bhrou\gi):00009                 ;
                      (C:\Users\bhrou\gi):00010                 ; input REG : [u] pointer to Object Status Table (OST)
                      (C:\Users\bhrou\gi):00011                 ; ---------
                      (C:\Users\bhrou\gi):00012                 ;
                      (C:\Users\bhrou\gi):00013                 ; ---------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00014                 
                      (C:\Users\bhrou\gi):00015                         INCLUDE "./objects/levels/special-stage/SSBomb/Constants.asm"
                      (./objects/levels/):00001                 * ---------------------------------------------------------------------------
                      (./objects/levels/):00002                 * Constants
                      (./objects/levels/):00003                 *
                      (./objects/levels/):00004                 * Naming convention
                      (./objects/levels/):00005                 * -----------------
                      (./objects/levels/):00006                 * - lower case
                      (./objects/levels/):00007                 * - underscore-separated names
                      (./objects/levels/):00008                 *
                      (./objects/levels/):00009                 * ---------------------------------------------------------------------------
                      (./objects/levels/):00010                 
     0004             (./objects/levels/):00011                 HalfPipe_Img_z_depth  equ 4 ; number of z pos increment into a single image 
                      (./objects/levels/):00012                 
                      (./objects/levels/):00013                 * ===========================================================================
                      (./objects/levels/):00014                 * Physics Constants
                      (./objects/levels/):00015                 * ===========================================================================
                      (./objects/levels/):00016                 
     0038             (./objects/levels/):00017                 gravity                       equ $38 ; in 8bit decimal, sub-pixel value
                      (./objects/levels/):00018                 
                      (./objects/levels/):00019                 * ===========================================================================
                      (./objects/levels/):00020                 * Object Constants
                      (./objects/levels/):00021                 * ===========================================================================
                      (./objects/levels/):00022                 
     005D             (./objects/levels/):00023                 ss_z_pos                      equ ext_variables    ; and ext_variables+1 ; and ext_variables+2 ; first byte is always 0, distance from camera to half-pipe segment end (0: front)
     0060             (./objects/levels/):00024                 ss_parent                     equ ext_variables+3  ; and ext_variables+4  ; object ptr to child or parent (0: front)
     0062             (./objects/levels/):00025                 ss_shadow_tilt                equ ext_variables+5  ; 0:flat 1:diagonal 2:side
     0063             (./objects/levels/):00026                 ss_self_delete                equ ext_variables+6  ; flag usually set by parent to tell to child to self delete
     0064             (./objects/levels/):00027                 collision_property            equ ext_variables+7
     0065             (./objects/levels/):00028                 mapping_frame                 equ ext_variables+8
     0066             (./objects/levels/):00029                 ss_z_pos_img_start            equ ext_variables+9  ; and ext_variables+10  ; distance from camera to half-pipe segment end (0: front) at start of last image
     0068             (./objects/levels/):00030                 angle                         equ ext_variables+11 ; angle (z axis) 360 degrees = 256, from camera view: $00 right, $40 bottom, $80 left, $c0 top
     0069             (./objects/levels/):00031                 collision_flags               equ ext_variables+12 ; Collision response bitfield, tells what the object will do if hit by the character
                      (./objects/levels/):00032                 * --- collision bitfield variables for objects ---
                      (./objects/levels/):00033                 ; format TTSS SSSS
                      (./objects/levels/):00034                 ; TT is the type of collision - 00 is enemy, 01 sets the routine counter to $4, 10 is harm, and 11 seems to be a special thing for the starpole.
                      (./objects/levels/):00035                 ; SSSSSS is the size, lifted from a lookup table in the collision response routine.
                      (./objects/levels/):00036                 
                      (./objects/levels/):00037                 ;ss_dplc_timer = $23
                      (./objects/levels/):00038                 ;ss_x_pos = objoff_2A
                      (./objects/levels/):00039                 ;ss_x_sub = objoff_2C
                      (./objects/levels/):00040                 ;ss_y_pos = objoff_2E
                      (./objects/levels/):00041                 ;ss_y_sub = objoff_30
                      (./objects/levels/):00042                 ;ss_init_flip_timer = objoff_32
                      (./objects/levels/):00043                 ;ss_flip_timer = objoff_33
                      (./objects/levels/):00044                 ;ss_z_pos = objoff_34
                      (./objects/levels/):00045                 ;ss_hurt_timer = objoff_36
                      (./objects/levels/):00046                 ;ss_slide_timer = objoff_37
                      (./objects/levels/):00047                 ;ss_parent = objoff_38
                      (./objects/levels/):00048                 ;ss_rings_base = objoff_3C      ; word
                      (./objects/levels/):00049                 ;ss_rings_hundreds = objoff_3C
                      (./objects/levels/):00050                 ;ss_rings_tens = objoff_3D
                      (./objects/levels/):00051                 ;ss_rings_units = objoff_3E
                      (./objects/levels/):00052                 ;ss_last_angle_index = objoff_3F
                      (C:\Users\bhrou\gi):00016                 
020F                  (C:\Users\bhrou\gi):00017                 SSObject
020F 7F0694           (C:\Users\bhrou\gi):00018 [7]     7               clr   is_out_of_screen
0212 A641             (C:\Users\bhrou\gi):00019 [5]     12              lda   subtype,u
0214 48               (C:\Users\bhrou\gi):00020 [2]     14              asla           
0215 8E021A           (C:\Users\bhrou\gi):00021 [3]     17              ldx   #SSObject_Routines
0218 6E96             (C:\Users\bhrou\gi):00022 [7]     24              jmp   [a,x]
                      (C:\Users\bhrou\gi):00023                 
021A                  (C:\Users\bhrou\gi):00024                 SSObject_Routines
021A 021E             (C:\Users\bhrou\gi):00025                         fdb   SSBomb
021C 02C1             (C:\Users\bhrou\gi):00026                         fdb   SSRing
                      (C:\Users\bhrou\gi):00027                 
                      (C:\Users\bhrou\gi):00028                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00029                                                                                           *; ----------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00030                                                                                           *; Object 61 - Bombs from Special Stage
                      (C:\Users\bhrou\gi):00031                                                                                           *; ----------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00032                                                                                           *; Sprite_34EB0:
021E                  (C:\Users\bhrou\gi):00033                 SSBomb                                                                    *Obj61:
021E A6C81E           (C:\Users\bhrou\gi):00034 [5]     29              lda   routine,u                                                   *    moveq   #0,d0
0221 48               (C:\Users\bhrou\gi):00035 [2]     31              asla                                                              *    move.b  routine(a0),d0
0222 8E0227           (C:\Users\bhrou\gi):00036 [3]     34              ldx   #SSB_Routines                                               *    move.w  Obj61_Index(pc,d0.w),d1
0225 6E96             (C:\Users\bhrou\gi):00037 [7]     41              jmp   [a,x]                                                       *    jmp Obj61_Index(pc,d1.w)
                      (C:\Users\bhrou\gi):00038                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00039                                                                                           *; off_34EBE:
0227                  (C:\Users\bhrou\gi):00040                 SSB_Routines                                                              *Obj61_Index:    offsetTable
0227 022F             (C:\Users\bhrou\gi):00041                         fdb   SSB_Init                                                    *        offsetTableEntry.w Obj61_Init   ; 0
0229 0248             (C:\Users\bhrou\gi):00042                         fdb   SSB_Bomb                                                    *        offsetTableEntry.w loc_34F06    ; 2
022B 064D             (C:\Users\bhrou\gi):00043                         fdb   SSB_Shadow                                                  *        offsetTableEntry.w loc_3533A    ; 4
022D 028D             (C:\Users\bhrou\gi):00044                         fdb   SSB_Explode                                                 *        offsetTableEntry.w loc_34F6A    ; 6
                      (C:\Users\bhrou\gi):00045                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00046                                                                                                                                                                   
                      (C:\Users\bhrou\gi):00047                                                                                           *; loc_34EC6:
022F                  (C:\Users\bhrou\gi):00048                 SSB_Init                                                                  *Obj61_Init:
022F 6CC81E           (C:\Users\bhrou\gi):00049 [7]     48              inc   routine,u                                                   *        addq.b  #2,routine(a0)
0232 CC0000           (C:\Users\bhrou\gi):00050 [3]     51              ldd   #$0000                                                      *        move.w  #$7F,x_pos(a0)
0235 EDC814           (C:\Users\bhrou\gi):00051 [6]     57              std   xy_pixel,u                                                  *        move.w  #$58,y_pos(a0)
                      (C:\Users\bhrou\gi):00052                                                                                           *        move.l  #Obj61_MapUnc_36508,mappings(a0)
                      (C:\Users\bhrou\gi):00053                                                                                           *        move.w  #make_art_tile(ArtTile_ArtNem_SpecialBomb,1,0),art_tile(a0)
                      (C:\Users\bhrou\gi):00054                         ; coordinate system                                               *        move.b  #4,render_flags(a0)
0238 CC0402           (C:\Users\bhrou\gi):00055 [3]     60              ldd   #$0402                                                      
023B A743             (C:\Users\bhrou\gi):00056 [5]     65              sta   priority,u                                                  *        move.b  #3,priority(a0)
023D E7C869           (C:\Users\bhrou\gi):00057 [5]     70              stb   collision_flags,u                                           *        move.b  #2,collision_flags(a0)
                      (C:\Users\bhrou\gi):00058                                                                                           *        move.b  #-1,(SS_unk_DB4D).w
0240 6DC868           (C:\Users\bhrou\gi):00059 [7]     77              tst   angle,u                                                     *        tst.b   angle(a0)
0243 2B03             (C:\Users\bhrou\gi):00060 [3]     80              bmi   SSB_Bomb                                                    *        bmi.s   loc_34F06
0245 BD05F8           (C:\Users\bhrou\gi):00061 [8]     88              jsr   SSB_InitShadow                                              *        bsr.w   loc_3529C
                      (C:\Users\bhrou\gi):00062                                                                                           *
0248                  (C:\Users\bhrou\gi):00063                 SSB_Bomb                                                                  *loc_34F06:
                      (C:\Users\bhrou\gi):00064                 
                      (C:\Users\bhrou\gi):00065                         ; TODO optim
                      (C:\Users\bhrou\gi):00066                         ; keep a variable with max zz_pos for visible obj on the curr img
                      (C:\Users\bhrou\gi):00067                         ; test it here instead of SSB_ComputeCoordinates
                      (C:\Users\bhrou\gi):00068                         ; simplify SSB_ComputeCoordinates (remove the test)
                      (C:\Users\bhrou\gi):00069                         ; decrease zz_pos here and return
                      (C:\Users\bhrou\gi):00070                         ; same when zz_pos=0 this case should be processed here 
                      (C:\Users\bhrou\gi):00071                         ; otherwise call the following code
                      (C:\Users\bhrou\gi):00072                 
0248 BD0389           (C:\Users\bhrou\gi):00073 [8]     96              jsr   SSB_ScaleAnim                                               *        bsr.w   loc_3512A
024B BD0492           (C:\Users\bhrou\gi):00074 [8]     104             jsr   SSB_ComputeCoordinates                                      *        bsr.w   loc_351A0
                      (C:\Users\bhrou\gi):00075                                                                                           *        lea     (Ani_obj61).l,a1
024E BD7680           (C:\Users\bhrou\gi):00076 [8]     112             jsr   AnimateSprite                                               *        bsr.w   loc_3539E
0251 BD772B           (C:\Users\bhrou\gi):00077 [8]     120             jsr   GetImgIdA
0254 A7C865           (C:\Users\bhrou\gi):00078 [5]     125             sta   mapping_frame,u        
0257 7D0694           (C:\Users\bhrou\gi):00079 [7]     132             tst   is_out_of_screen
025A 2603             (C:\Users\bhrou\gi):00080 [3]     135             bne   SSB_Init_hide_and_return
                      (C:\Users\bhrou\gi):00081                         ; tst   rsv_render_flags,u                                        *        tst.b   render_flags(a0)
                      (C:\Users\bhrou\gi):00082                         ; bpl   SSB_Init_return        ; not on screen last frame         *        bpl.s   return_34F26
                      (C:\Users\bhrou\gi):00083                         ; jsr   SSB_CheckCollision     ; so no collision test             *        bsr.w   loc_34F28
025C 7E774C           (C:\Users\bhrou\gi):00084 [4]     139             jmp   DisplaySprite                                               *        bra.w   JmpTo44_DisplaySprite
                      (C:\Users\bhrou\gi):00085                                                                                           *
025F                  (C:\Users\bhrou\gi):00086                 SSB_Init_hide_and_return
025F A642             (C:\Users\bhrou\gi):00087 [5]     144             lda   render_flags,u
0261 8A20             (C:\Users\bhrou\gi):00088 [2]     146             ora   #render_hide_mask        ; set hide flag
0263 A742             (C:\Users\bhrou\gi):00089 [5]     151             sta   render_flags,u
0265                  (C:\Users\bhrou\gi):00090                 SSB_Init_return                                                           *return_34F26:
0265 39               (C:\Users\bhrou\gi):00091 [5]     156             rts                                                               *        rts
                      (C:\Users\bhrou\gi):00092                                 
                      (C:\Users\bhrou\gi):00093                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00094                                                                                           *
                      (C:\Users\bhrou\gi):00095                 
0266                  (C:\Users\bhrou\gi):00096                 SSB_CheckCollision                                                        *loc_34F28:
                      (C:\Users\bhrou\gi):00097                         ; collision width, now hardcoded in collision routine             *        move.w  #8,d6
0266 BD0339           (C:\Users\bhrou\gi):00098 [8]     164             jsr   CheckCollision                                              *        bsr.w   loc_350A0
0269 2421             (C:\Users\bhrou\gi):00099 [3]     167             bcc   return_34F68                                                *        bcc.s   return_34F68
026B 8601             (C:\Users\bhrou\gi):00100 [2]     169             lda   #1
026D A78864           (C:\Users\bhrou\gi):00101 [5]     174             sta   collision_property,x                                        *        move.b  #1,collision_property(a1)
                      (C:\Users\bhrou\gi):00102                                                                                           *        move.w  #SndID_SlowSmash,d0
                      (C:\Users\bhrou\gi):00103                                                                                           *        jsr     (PlaySoundStereo).l
0270 CC0300           (C:\Users\bhrou\gi):00104 [3]     177             ldd   #$0300                                                          
0273 A7C81E           (C:\Users\bhrou\gi):00105 [5]     182             sta   routine,u                ; explode                          *        move.b  #6,routine(a0)
0276 E748             (C:\Users\bhrou\gi):00106 [5]     187             stb   anim_frame,u                                                *        move.b  #0,anim_frame(a0)
0278 E749             (C:\Users\bhrou\gi):00107 [5]     192             stb   anim_frame_duration,u                                       *        move.b  #0,anim_frame_duration(a0)
027A AEC860           (C:\Users\bhrou\gi):00108 [6]     198             ldx   ss_parent,u                                                 *        move.l  objoff_34(a0),d0
027D 270D             (C:\Users\bhrou\gi):00109 [3]     201             beq   return_34F68             ; no shadow for this Bomb          *        beq.s   return_34F68
027F CC0000           (C:\Users\bhrou\gi):00110 [3]     204             ldd   #0
0282 EDC860           (C:\Users\bhrou\gi):00111 [6]     210             std   ss_parent,u                                                 *        move.l  #0,objoff_34(a0)
                      (C:\Users\bhrou\gi):00112                                                                                           *        movea.l d0,a1 ; a1=object
0285 6D84             (C:\Users\bhrou\gi):00113 [6]     216             tst   id,x
0287 2703             (C:\Users\bhrou\gi):00114 [3]     219             beq   return_34F68                                                                          
0289 638863           (C:\Users\bhrou\gi):00115 [7]     226             com   ss_self_delete,x         ; tell shadow to self delete       *        st      objoff_2A(a1)
                      (C:\Users\bhrou\gi):00116                                                                                           *
028C                  (C:\Users\bhrou\gi):00117                 return_34F68                                                              *return_34F68:
028C 39               (C:\Users\bhrou\gi):00118 [5]     231             rts                                                               *        rts
                      (C:\Users\bhrou\gi):00119                 
                      (C:\Users\bhrou\gi):00120                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00121                                                                                           *
                      (C:\Users\bhrou\gi):00122                 
028D                  (C:\Users\bhrou\gi):00123                 SSB_Explode                                                               *loc_34F6A:
028D CC0346           (C:\Users\bhrou\gi):00124 [3]     234             ldd   #Ani_SSBomb_explode                                         *        move.b  #$A,anim(a0)
0290 ED44             (C:\Users\bhrou\gi):00125 [6]     240             std   anim,u                                                      
                      (C:\Users\bhrou\gi):00126                                                                                           *        move.w  #make_art_tile(ArtTile_ArtNem_SpecialExplosion,2,0),art_tile(a0)
0292 BD02B3           (C:\Users\bhrou\gi):00127 [8]     248             jsr   SSB_CheckIfForeground                                       *        bsr.w   loc_34F90
0295 BD0389           (C:\Users\bhrou\gi):00128 [8]     256             jsr   SSB_ScaleAnim                                               *        bsr.w   loc_3512A
0298 BD0492           (C:\Users\bhrou\gi):00129 [8]     264             jsr   SSB_ComputeCoordinates                                      *        bsr.w   loc_351A0
                      (C:\Users\bhrou\gi):00130                                                                                           *        lea     (Ani_obj61).l,a1
029B BD7680           (C:\Users\bhrou\gi):00131 [8]     272             jsr   AnimateSprite                                               *        jsrto   (AnimateSprite).l, JmpTo24_AnimateSprite
029E BD772B           (C:\Users\bhrou\gi):00132 [8]     280             jsr   GetImgIdA
02A1 A7C865           (C:\Users\bhrou\gi):00133 [5]     285             sta   mapping_frame,u
02A4 7D0694           (C:\Users\bhrou\gi):00134 [7]     292             tst   is_out_of_screen
02A7 2603             (C:\Users\bhrou\gi):00135 [3]     295             bne   SSB_Explode_hide_and_return                
02A9 7E774C           (C:\Users\bhrou\gi):00136 [4]     299             jmp   DisplaySprite                                               *        bra.w   JmpTo44_DisplaySprite
02AC                  (C:\Users\bhrou\gi):00137                 SSB_Explode_hide_and_return
02AC A642             (C:\Users\bhrou\gi):00138 [5]     304             lda   render_flags,u
02AE 8A20             (C:\Users\bhrou\gi):00139 [2]     306             ora   #render_hide_mask        ; set hide flag
02B0 A742             (C:\Users\bhrou\gi):00140 [5]     311             sta   render_flags,u
02B2 39               (C:\Users\bhrou\gi):00141 [5]     316             rts  
                      (C:\Users\bhrou\gi):00142                                 
                      (C:\Users\bhrou\gi):00143                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00144                 
02B3                  (C:\Users\bhrou\gi):00145                 SSB_CheckIfForeground                                                     *loc_34F90:
02B3 ECC85D           (C:\Users\bhrou\gi):00146 [6]     322             ldd   ss_z_pos,u                                                  
02B6 10830004         (C:\Users\bhrou\gi):00147 [5]     327             cmpd  #4                                                          *        cmpi.w  #4,objoff_30(a0)
02BA 2404             (C:\Users\bhrou\gi):00148 [3]     330             bhs   @a                                                          *        bhs.s   return_34F9E
02BC 8602             (C:\Users\bhrou\gi):00149 [2]     332             lda   #2                                                          
02BE A743             (C:\Users\bhrou\gi):00150 [5]     337             sta   priority,u                                                  *        move.b  #1,priority(a0)
                      (C:\Users\bhrou\gi):00151                                                                                           *
02C0                  (C:\Users\bhrou\gi):00152                 @a                                                                        *return_34F9E:
02C0 39               (C:\Users\bhrou\gi):00153 [5]     342             rts                                                               *        rts
                      (C:\Users\bhrou\gi):00154                 
                      (C:\Users\bhrou\gi):00155                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00156                                                                                           *; ----------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00157                                                                                           *; Object 60 - Rings from Special Stage
                      (C:\Users\bhrou\gi):00158                                                                                           *; ----------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):00159                                                                                           *; Sprite_34FA0:
02C1                  (C:\Users\bhrou\gi):00160                 SSRing                                                                    *Obj60:
02C1 A6C81E           (C:\Users\bhrou\gi):00161 [5]     347             lda   routine,u                                                   *    moveq   #0,d0
02C4 48               (C:\Users\bhrou\gi):00162 [2]     349             asla                                                              *    move.b  routine(a0),d0
02C5 8E02CA           (C:\Users\bhrou\gi):00163 [3]     352             ldx   #SSR_Routines                                               *    move.w  Obj60_Index(pc,d0.w),d1
02C8 6E96             (C:\Users\bhrou\gi):00164 [7]     359             jmp   [a,x]                                                       *    jmp Obj60_Index(pc,d1.w)
                      (C:\Users\bhrou\gi):00165                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00166                                                                                           *; off_34FAE:
02CA                  (C:\Users\bhrou\gi):00167                 SSR_Routines                                                              *Obj60_Index:    offsetTable
02CA 02D2             (C:\Users\bhrou\gi):00168                         fdb   SSR_Init                                                    *        offsetTableEntry.w Obj60_Init   ; 0
02CC 02F1             (C:\Users\bhrou\gi):00169                         fdb   SSR_Ring                                                    *        offsetTableEntry.w loc_34FF0    ; 1
02CE 064D             (C:\Users\bhrou\gi):00170                         fdb   SSB_Shadow                                                  *        offsetTableEntry.w loc_3533A    ; 2
02D0 0312             (C:\Users\bhrou\gi):00171                         fdb   SSR_Stars                                                   *        offsetTableEntry.w loc_35010    ; 3
                      (C:\Users\bhrou\gi):00172                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00173                                                                                                                                                                   
                      (C:\Users\bhrou\gi):00174                                                                                           *; loc_34FB6:
02D2                  (C:\Users\bhrou\gi):00175                 SSR_Init                                                                  *Obj60_Init:
02D2 6CC81E           (C:\Users\bhrou\gi):00176 [7]     366             inc   routine,u                                                   *    addq.b  #2,routine(a0)
02D5 CC0000           (C:\Users\bhrou\gi):00177 [3]     369             ldd   #$0000                                                      *    move.w  #$7F,x_pos(a0)
02D8 EDC814           (C:\Users\bhrou\gi):00178 [6]     375             std   xy_pixel,u                                                  *    move.w  #$58,y_pos(a0)
                      (C:\Users\bhrou\gi):00179                                                                                           *    move.l  #Obj5A_Obj5B_Obj60_MapUnc_3632A,mappings(a0)
                      (C:\Users\bhrou\gi):00180                                                                                           *    move.w  #make_art_tile(ArtTile_ArtNem_SpecialRings,3,0),art_tile(a0)
                      (C:\Users\bhrou\gi):00181                                                                                           *    move.b  #4,render_flags(a0)
02DB CC0401           (C:\Users\bhrou\gi):00182 [3]     378             ldd   #$0401
02DE A743             (C:\Users\bhrou\gi):00183 [5]     383             sta   priority,u                                                  *    move.b  #3,priority(a0)
02E0 E7C869           (C:\Users\bhrou\gi):00184 [5]     388             stb   collision_flags,u                                           *    move.b  #1,collision_flags(a0)
                      (C:\Users\bhrou\gi):00185                                 
02E3 A64A             (C:\Users\bhrou\gi):00186 [5]     393             lda   anim_flags,u
02E5 8A01             (C:\Users\bhrou\gi):00187 [2]     395             ora   #anim_link_mask
02E7 A74A             (C:\Users\bhrou\gi):00188 [5]     400             sta   anim_flags,u
                      (C:\Users\bhrou\gi):00189                                 
02E9 6DC868           (C:\Users\bhrou\gi):00190 [7]     407             tst   angle,u                                                     *    tst.b   angle(a0)
02EC 2B03             (C:\Users\bhrou\gi):00191 [3]     410             bmi   SSR_Ring                                                    *    bmi.s   loc_34FF0
02EE BD05F8           (C:\Users\bhrou\gi):00192 [8]     418             jsr   SSB_InitShadow                                              *    bsr.w   loc_3529C
                      (C:\Users\bhrou\gi):00193                                                                                           *
02F1                  (C:\Users\bhrou\gi):00194                 SSR_Ring                                                                  *loc_34FF0:
                      (C:\Users\bhrou\gi):00195                 
                      (C:\Users\bhrou\gi):00196                         ; TODO optim
                      (C:\Users\bhrou\gi):00197                         ; keep a variable with max zz_pos for visible obj on the curr img
                      (C:\Users\bhrou\gi):00198                         ; test it here instead of SSB_ComputeCoordinates
                      (C:\Users\bhrou\gi):00199                         ; simplify SSB_ComputeCoordinates (remove the test)
                      (C:\Users\bhrou\gi):00200                         ; decrease zz_pos here and return
                      (C:\Users\bhrou\gi):00201                         ; same when zz_pos=0 this case should be processed here 
                      (C:\Users\bhrou\gi):00202                         ; otherwise call the following code
                      (C:\Users\bhrou\gi):00203                 
02F1 BD03C5           (C:\Users\bhrou\gi):00204 [8]     426             jsr   SSR_ScaleAnim                                               *    bsr.w   loc_3512A
02F4 BD0492           (C:\Users\bhrou\gi):00205 [8]     434             jsr   SSB_ComputeCoordinates                                      *    bsr.w   loc_351A0
02F7 BD0338           (C:\Users\bhrou\gi):00206 [8]     442             jsr   SSR_RingCounter                                             *    bsr.w   loc_35036
                      (C:\Users\bhrou\gi):00207                                                                                           *    lea (Ani_obj5B_obj60).l,a1
02FA BD7680           (C:\Users\bhrou\gi):00208 [8]     450             jsr   AnimateSprite                                               *    bsr.w   loc_3539E
02FD BD772B           (C:\Users\bhrou\gi):00209 [8]     458             jsr   GetImgIdA
0300 A7C865           (C:\Users\bhrou\gi):00210 [5]     463             sta   mapping_frame,u        
0303 7D0694           (C:\Users\bhrou\gi):00211 [7]     470             tst   is_out_of_screen
0306 2603             (C:\Users\bhrou\gi):00212 [3]     473             bne   SSR_Init_hide_and_return          
                      (C:\Users\bhrou\gi):00213                                                                                           *    tst.b   render_flags(a0)
0308 7E774C           (C:\Users\bhrou\gi):00214 [4]     477             jmp   DisplaySprite                                               *    bmi.w   JmpTo44_DisplaySprite
                      (C:\Users\bhrou\gi):00215                            
030B                  (C:\Users\bhrou\gi):00216                 SSR_Init_hide_and_return
030B A642             (C:\Users\bhrou\gi):00217 [5]     482             lda   render_flags,u
030D 8A20             (C:\Users\bhrou\gi):00218 [2]     484             ora   #render_hide_mask        ; set hide flag
030F A742             (C:\Users\bhrou\gi):00219 [5]     489             sta   render_flags,u
0311                  (C:\Users\bhrou\gi):00220                 SSR_Init_return
0311 39               (C:\Users\bhrou\gi):00221 [5]     494             rts                                                               *    rts
                      (C:\Users\bhrou\gi):00222                                                                                                                                                                   
                      (C:\Users\bhrou\gi):00223                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00224                                                                                           *
                      (C:\Users\bhrou\gi):00225                                                                                                                                                                   
0312                  (C:\Users\bhrou\gi):00226                 SSR_Stars                                                                 *loc_35010:
0312 CC03B2           (C:\Users\bhrou\gi):00227 [3]     497             ldd   #Ani_SSRing_stars                                           *    move.b  #$A,anim(a0)
0315 ED44             (C:\Users\bhrou\gi):00228 [6]     503             std   anim,u
                      (C:\Users\bhrou\gi):00229                                                                                           *    move.w  #make_art_tile(ArtTile_ArtNem_SpecialStars,2,0),art_tile(a0)
0317 BD02B3           (C:\Users\bhrou\gi):00230 [8]     511             jsr   SSB_CheckIfForeground                                       *    bsr.w   loc_34F90
031A BD0389           (C:\Users\bhrou\gi):00231 [8]     519             jsr   SSB_ScaleAnim                                               *    bsr.w   loc_3512A
031D BD0492           (C:\Users\bhrou\gi):00232 [8]     527             jsr   SSB_ComputeCoordinates                                      *    bsr.w   loc_351A0
                      (C:\Users\bhrou\gi):00233                                                                                           *    lea (Ani_obj5B_obj60).l,a1
0320 BD7680           (C:\Users\bhrou\gi):00234 [8]     535             jsr   AnimateSprite                                               *    jsrto   (AnimateSprite).l, JmpTo24_AnimateSprite
0323 BD772B           (C:\Users\bhrou\gi):00235 [8]     543             jsr   GetImgIdA
0326 A7C865           (C:\Users\bhrou\gi):00236 [5]     548             sta   mapping_frame,u
0329 7D0694           (C:\Users\bhrou\gi):00237 [7]     555             tst   is_out_of_screen
032C 2603             (C:\Users\bhrou\gi):00238 [3]     558             bne   SSR_Stars_hide_and_return         
032E 7E774C           (C:\Users\bhrou\gi):00239 [4]     562             jmp   DisplaySprite                                               *    bra.w   JmpTo44_DisplaySprite
0331                  (C:\Users\bhrou\gi):00240                 SSR_Stars_hide_and_return
0331 A642             (C:\Users\bhrou\gi):00241 [5]     567             lda   render_flags,u
0333 8A20             (C:\Users\bhrou\gi):00242 [2]     569             ora   #render_hide_mask        ; set hide flag
0335 A742             (C:\Users\bhrou\gi):00243 [5]     574             sta   render_flags,u
0337 39               (C:\Users\bhrou\gi):00244 [5]     579             rts 
                      (C:\Users\bhrou\gi):00245                                                                                                                                                                   
                      (C:\Users\bhrou\gi):00246                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00247                                                                                           *
0338                  (C:\Users\bhrou\gi):00248                 SSR_RingCounter                                                           *loc_35036:
                      (C:\Users\bhrou\gi):00249                                                                                           *    move.w  #$A,d6
                      (C:\Users\bhrou\gi):00250                                                                                           *    bsr.w   loc_350A0
                      (C:\Users\bhrou\gi):00251                                                                                           *    bcc.s   return_3509E
                      (C:\Users\bhrou\gi):00252                                                                                           *    cmpa.l  #MainCharacter,a1
                      (C:\Users\bhrou\gi):00253                                                                                           *    bne.s   loc_3504E
                      (C:\Users\bhrou\gi):00254                                                                                           *    addq.w  #1,(Ring_count).w
                      (C:\Users\bhrou\gi):00255                                                                                           *    bra.s   loc_35052
                      (C:\Users\bhrou\gi):00256                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00257                                                                                           *
                      (C:\Users\bhrou\gi):00258                                                                                           *loc_3504E:
                      (C:\Users\bhrou\gi):00259                                                                                           *    addq.w  #1,(Ring_count_2P).w
                      (C:\Users\bhrou\gi):00260                                                                                           *
                      (C:\Users\bhrou\gi):00261                                                                                           *loc_35052:
                      (C:\Users\bhrou\gi):00262                                                                                           *    addq.b  #1,ss_rings_units(a1)
                      (C:\Users\bhrou\gi):00263                                                                                           *    cmpi.b  #$A,ss_rings_units(a1)
                      (C:\Users\bhrou\gi):00264                                                                                           *    blt.s   loc_3507A
                      (C:\Users\bhrou\gi):00265                                                                                           *    addq.b  #1,ss_rings_tens(a1)
                      (C:\Users\bhrou\gi):00266                                                                                           *    move.b  #0,ss_rings_units(a1)
                      (C:\Users\bhrou\gi):00267                                                                                           *    cmpi.b  #$A,ss_rings_tens(a1)
                      (C:\Users\bhrou\gi):00268                                                                                           *    blt.s   loc_3507A
                      (C:\Users\bhrou\gi):00269                                                                                           *    addq.b  #1,ss_rings_hundreds(a1)
                      (C:\Users\bhrou\gi):00270                                                                                           *    move.b  #0,ss_rings_tens(a1)
                      (C:\Users\bhrou\gi):00271                                                                                           *
                      (C:\Users\bhrou\gi):00272                                                                                           *loc_3507A:
                      (C:\Users\bhrou\gi):00273                                                                                           *    move.b  #6,routine(a0)
                      (C:\Users\bhrou\gi):00274                                                                                           *    move.l  objoff_34(a0),d0
                      (C:\Users\bhrou\gi):00275                                                                                           *    beq.s   loc_35094
                      (C:\Users\bhrou\gi):00276                                                                                           *    move.l  #0,objoff_34(a0)
                      (C:\Users\bhrou\gi):00277                                                                                           *    movea.l d0,a1 ; a1=object
                      (C:\Users\bhrou\gi):00278                                                                                           *    st  objoff_2A(a1)
                      (C:\Users\bhrou\gi):00279                                                                                           *
                      (C:\Users\bhrou\gi):00280                                                                                           *loc_35094:
                      (C:\Users\bhrou\gi):00281                                                                                           *    move.w  #SndID_Ring,d0
                      (C:\Users\bhrou\gi):00282                                                                                           *    jsr (PlaySoundStereo).l
                      (C:\Users\bhrou\gi):00283                                                                                           *
                      (C:\Users\bhrou\gi):00284                                                                                           *return_3509E:
0338 39               (C:\Users\bhrou\gi):00285 [5]     584             rts                                                               *    rts
                      (C:\Users\bhrou\gi):00286                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00287                 
0339                  (C:\Users\bhrou\gi):00288                 CheckCollision                                                            *loc_350A0:
0339 EC44             (C:\Users\bhrou\gi):00289 [6]     590             ldd   anim,u                                                      
033B 1083033E         (C:\Users\bhrou\gi):00290 [5]     595             cmpd  #Ani_SSBomb_8                                               *    cmpi.b  #8,anim(a0)
033F 260A             (C:\Users\bhrou\gi):00291 [3]     598             bne   @a                                                          *    bne.s   loc_350DC
0341 6DC869           (C:\Users\bhrou\gi):00292 [7]     605             tst   collision_flags,u                                           *    tst.b   collision_flags(a0)
0344 2705             (C:\Users\bhrou\gi):00293 [3]     608             beq   @a                                                          *    beq.s   loc_350DC
0346 8E627F           (C:\Users\bhrou\gi):00294 [3]     611             ldx   #MainCharacter                                              *    lea (MainCharacter).w,a2 ; a2=object (special stage sonic)
                      (C:\Users\bhrou\gi):00295                                                                                           *    lea (Sidekick).w,a3 ; a3=object (special stage tails)
                      (C:\Users\bhrou\gi):00296                                                                                           *    move.w  objoff_34(a2),d0
                      (C:\Users\bhrou\gi):00297                                                                                           *    cmp.w   objoff_34(a3),d0
                      (C:\Users\bhrou\gi):00298                                                                                           *    blo.s   loc_350CE
                      (C:\Users\bhrou\gi):00299                                                                                           *    movea.l a3,a1
                      (C:\Users\bhrou\gi):00300                                                                                           *    bsr.w   loc_350E2
                      (C:\Users\bhrou\gi):00301                                                                                           *    bcs.s   return_350E0
                      (C:\Users\bhrou\gi):00302                                                                                           *    movea.l a2,a1
0349 2003             (C:\Users\bhrou\gi):00303 [3]     614             bra   @b                                                          *    bra.w   loc_350E2
                      (C:\Users\bhrou\gi):00304                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00305                                                                                           *
                      (C:\Users\bhrou\gi):00306                                                                                           *loc_350CE:
                      (C:\Users\bhrou\gi):00307                                                                                           *    movea.l a2,a1
                      (C:\Users\bhrou\gi):00308                                                                                           *    bsr.w   loc_350E2
                      (C:\Users\bhrou\gi):00309                                                                                           *    bcs.s   return_350E0
                      (C:\Users\bhrou\gi):00310                                                                                           *    movea.l a3,a1
                      (C:\Users\bhrou\gi):00311                                                                                           *    bra.w   loc_350E2
                      (C:\Users\bhrou\gi):00312                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00313                                                                                           *
034B                  (C:\Users\bhrou\gi):00314                 @a                                                                        *loc_350DC:
034B 1CFE             (C:\Users\bhrou\gi):00315 [3]     617             andcc #$FE                                                        *    move    #0,ccr
                      (C:\Users\bhrou\gi):00316                                                                                           *
034D                  (C:\Users\bhrou\gi):00317                 @c                                                                        *return_350E0:
034D 39               (C:\Users\bhrou\gi):00318 [5]     622             rts                                                               *    rts
                      (C:\Users\bhrou\gi):00319                                                                                           *; ===========================================================================
034E                  (C:\Users\bhrou\gi):00320                 @b                                                                        *loc_350E2:
                      (C:\Users\bhrou\gi):00321                                                                                           *    tst.b   id(a1)
                      (C:\Users\bhrou\gi):00322                                                                                           *    beq.s   loc_3511A
034E A6881E           (C:\Users\bhrou\gi):00323 [5]     627             lda   routine,x
0351 8101             (C:\Users\bhrou\gi):00324 [2]     629             cmpa  #$1                      ; sonic is in MdNormal             *    cmpi.b  #2,routine(a1)
0353 262B             (C:\Users\bhrou\gi):00325 [3]     632             bne   @d                                                          *    bne.s   loc_3511A
0355 6D881F           (C:\Users\bhrou\gi):00326 [7]     639             tst   routine_secondary,x                                         *    tst.b   routine_secondary(a1)
0358 2626             (C:\Users\bhrou\gi):00327 [3]     642             bne   @d                       ; branch if sonic in hurt state    *    bne.s   loc_3511A
                      (C:\Users\bhrou\gi):00328                                                                                           *    move.b  angle(a1),d0
035A A6C868           (C:\Users\bhrou\gi):00329 [5]     647             lda   angle,u                  ; bomb angle                       *    move.b  angle(a0),d1
035D E6C868           (C:\Users\bhrou\gi):00330 [5]     652             ldb   angle,u                                                                          
                      (C:\Users\bhrou\gi):00331                                                                                           *    move.b  d1,d2
0360 8B08             (C:\Users\bhrou\gi):00332 [2]     654             adda  #8                                                          *    add.b   d6,d1
0362 2510             (C:\Users\bhrou\gi):00333 [3]     657             bcs   @e                                                          *    bcs.s   loc_35110
0364 C008             (C:\Users\bhrou\gi):00334 [2]     659             subb  #8                                                          *    sub.b   d6,d2
0366 250E             (C:\Users\bhrou\gi):00335 [3]     662             bcs   @f                                                          *    bcs.s   loc_35112
0368 A18868           (C:\Users\bhrou\gi):00336 [5]     667             cmpa  angle,x                                                     *    cmp.b   d1,d0
036B 2513             (C:\Users\bhrou\gi):00337 [3]     670             blo   @d                                                          *    bhs.s   loc_3511A
036D E18868           (C:\Users\bhrou\gi):00338 [5]     675             cmpb  angle,x                                                     *    cmp.b   d2,d0
0370 2511             (C:\Users\bhrou\gi):00339 [3]     678             blo   @g                                                          *    bhs.s   loc_35120
0372 200C             (C:\Users\bhrou\gi):00340 [3]     681             bra   @d                                                          *    bra.s   loc_3511A
                      (C:\Users\bhrou\gi):00341                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00342                                                                                           *
0374                  (C:\Users\bhrou\gi):00343                 @e                                                                        *loc_35110:
0374 C008             (C:\Users\bhrou\gi):00344 [2]     683             subb  #8                                                          *    sub.b   d6,d2
                      (C:\Users\bhrou\gi):00345                                                                                           *
0376                  (C:\Users\bhrou\gi):00346                 @f                                                                        *loc_35112:
0376 A18868           (C:\Users\bhrou\gi):00347 [5]     688             cmpa  angle,x                                                     *    cmp.b   d1,d0
0379 2408             (C:\Users\bhrou\gi):00348 [3]     691             bhs   @g                                                          *    blo.s   loc_35120
037B E18868           (C:\Users\bhrou\gi):00349 [5]     696             cmpb  angle,x                                                     *    cmp.b   d2,d0
037E 2403             (C:\Users\bhrou\gi):00350 [3]     699             bhs   @g                                                          *    bhs.s   loc_35120
                      (C:\Users\bhrou\gi):00351                                                                                           *
0380                  (C:\Users\bhrou\gi):00352                 @d                                                                        *loc_3511A:
0380 1CFE             (C:\Users\bhrou\gi):00353 [3]     702             andcc #$FE                                                        *    move    #0,ccr
0382 39               (C:\Users\bhrou\gi):00354 [5]     707             rts                                                               *    rts
                      (C:\Users\bhrou\gi):00355                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00356                                                                                           *
0383                  (C:\Users\bhrou\gi):00357                 @g                                                                        *loc_35120:
0383 6FC869           (C:\Users\bhrou\gi):00358 [7]     714             clr   collision_flags,u                                           *    clr.b   collision_flags(a0)
0386 1A01             (C:\Users\bhrou\gi):00359 [3]     717             orcc  #$01                                                        *    move    #1,ccr
0388 39               (C:\Users\bhrou\gi):00360 [5]     722             rts                                                               *    rts
                      (C:\Users\bhrou\gi):00361                 
                      (C:\Users\bhrou\gi):00362                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00363                                                                                           *
0389                  (C:\Users\bhrou\gi):00364                 SSB_ScaleAnim                                                             *loc_3512A:
                      (C:\Users\bhrou\gi):00365                                                                                           *    btst    #7,status(a0)
                      (C:\Users\bhrou\gi):00366                                                                                           *    bne.s   loc_3516C
                      (C:\Users\bhrou\gi):00367                                                                                           *    cmpi.b  #4,(SSTrack_drawing_index).w
                      (C:\Users\bhrou\gi):00368                                                                                           *    bne.s   loc_35146
0389 B67495           (C:\Users\bhrou\gi):00369 [5]     727             lda   SSTrack_drawing_index
038C 2613             (C:\Users\bhrou\gi):00370 [3]     730             bne   @a                  
038E ECC866           (C:\Users\bhrou\gi):00371 [6]     736             ldd   ss_z_pos_img_start,u
0391 830004           (C:\Users\bhrou\gi):00372 [4]     740             subd  #HalfPipe_Img_z_depth
0394 2F6B             (C:\Users\bhrou\gi):00373 [3]     743             ble   SSB_DeleteObject
0396 EDC866           (C:\Users\bhrou\gi):00374 [6]     749             std   ss_z_pos_img_start,u
0399 E7C85E           (C:\Users\bhrou\gi):00375 [5]     754             stb   ss_z_pos+1,u
039C A7C85F           (C:\Users\bhrou\gi):00376 [5]     759             sta   ss_z_pos+2,u                  ; ss_z_pos is always 0
039F 200B             (C:\Users\bhrou\gi):00377 [3]     762             bra   @b
03A1 ECC85E           (C:\Users\bhrou\gi):00378 [6]     768     @a      ldd   ss_z_pos+1,u                                                                          
03A4 B37533           (C:\Users\bhrou\gi):00379 [7]     775             subd  HalfPipe_z_step                                             *    subi.l  #$CCCC,objoff_30(a0)
03A7 2F58             (C:\Users\bhrou\gi):00380 [3]     778             ble   SSB_DeleteObject                                            *    ble.s   loc_3516C
03A9 EDC85E           (C:\Users\bhrou\gi):00381 [6]     784             std   ss_z_pos+1,u        
03AC                  (C:\Users\bhrou\gi):00382                 @b                                                                        *    bra.s   loc_35150
                      (C:\Users\bhrou\gi):00383                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00384                                                                                           *
                      (C:\Users\bhrou\gi):00385                                                                                           *loc_35146:
                      (C:\Users\bhrou\gi):00386                                                                                           *    subi.l  #$CCCD,objoff_30(a0)
                      (C:\Users\bhrou\gi):00387                                                                                           *    ble.s   loc_3516C
                      (C:\Users\bhrou\gi):00388                                                                                           *
                      (C:\Users\bhrou\gi):00389                                                                                                                                                                   
                      (C:\Users\bhrou\gi):00390                                                                                           *loc_35150:
03AC AE44             (C:\Users\bhrou\gi):00391 [6]     790             ldx   anim,u                                                      *    cmpi.b  #$A,anim(a0)
03AE 8C0346           (C:\Users\bhrou\gi):00392 [4]     794             cmpx  #Ani_SSBomb_explode                                         
03B1 2711             (C:\Users\bhrou\gi):00393 [3]     797             beq   SSB_ScaleAnim_return                                        *    beq.s   return_3516A
03B3 E6C85E           (C:\Users\bhrou\gi):00394 [5]     802             ldb   ss_z_pos+1,u                                                *    move.w  objoff_30(a0),d0
03B6 C11D             (C:\Users\bhrou\gi):00395 [2]     804             cmpb  #$1D                                                        *    cmpi.w  #$1D,d0
03B8 2F02             (C:\Users\bhrou\gi):00396 [3]     807             ble   SSB_ScaleAnim_LoadAnim                                      *    ble.s   loc_35164
03BA C61E             (C:\Users\bhrou\gi):00397 [2]     809             ldb   #$1E                                                        *    moveq   #$1E,d0
                      (C:\Users\bhrou\gi):00398                                                                                           *
03BC                  (C:\Users\bhrou\gi):00399                 SSB_ScaleAnim_LoadAnim                                                    *loc_35164:
03BC 8E0410           (C:\Users\bhrou\gi):00400 [3]     812             ldx   #Ani_SSBomb                                                 *    move.b  byte_35180(pc,d0.w),anim(a0)
03BF 58               (C:\Users\bhrou\gi):00401 [2]     814             aslb
03C0 EC85             (C:\Users\bhrou\gi):00402 [6]     820             ldd   b,x
03C2 ED44             (C:\Users\bhrou\gi):00403 [6]     826             std   anim,u
                      (C:\Users\bhrou\gi):00404                                                                                           *  
03C4                  (C:\Users\bhrou\gi):00405                 SSB_ScaleAnim_return                                                      *return_3516A:
03C4 39               (C:\Users\bhrou\gi):00406 [5]     831             rts                                                               *    rts
                      (C:\Users\bhrou\gi):00407                                 
03C5                  (C:\Users\bhrou\gi):00408                 SSR_ScaleAnim
03C5 B67495           (C:\Users\bhrou\gi):00409 [5]     836             lda   SSTrack_drawing_index
03C8 2613             (C:\Users\bhrou\gi):00410 [3]     839             bne   @a                  
03CA ECC866           (C:\Users\bhrou\gi):00411 [6]     845             ldd   ss_z_pos_img_start,u
03CD 830004           (C:\Users\bhrou\gi):00412 [4]     849             subd  #HalfPipe_Img_z_depth
03D0 2F2F             (C:\Users\bhrou\gi):00413 [3]     852             ble   SSB_DeleteObject
03D2 EDC866           (C:\Users\bhrou\gi):00414 [6]     858             std   ss_z_pos_img_start,u
03D5 E7C85E           (C:\Users\bhrou\gi):00415 [5]     863             stb   ss_z_pos+1,u
03D8 A7C85F           (C:\Users\bhrou\gi):00416 [5]     868             sta   ss_z_pos+2,u                  ; ss_z_pos is always 0
03DB 200B             (C:\Users\bhrou\gi):00417 [3]     871             bra   @b
03DD ECC85E           (C:\Users\bhrou\gi):00418 [6]     877     @a      ldd   ss_z_pos+1,u                                                                          
03E0 B37533           (C:\Users\bhrou\gi):00419 [7]     884             subd  HalfPipe_z_step
03E3 2F1C             (C:\Users\bhrou\gi):00420 [3]     887             ble   SSB_DeleteObject
03E5 EDC85E           (C:\Users\bhrou\gi):00421 [6]     893             std   ss_z_pos+1,u        
03E8                  (C:\Users\bhrou\gi):00422                 @b
03E8 AE44             (C:\Users\bhrou\gi):00423 [6]     899             ldx   anim,u
03EA 8C03B2           (C:\Users\bhrou\gi):00424 [4]     903             cmpx  #Ani_SSRing_stars                                         
03ED 2711             (C:\Users\bhrou\gi):00425 [3]     906             beq   SSR_ScaleAnim_return
                      (C:\Users\bhrou\gi):00426                 
03EF E6C85E           (C:\Users\bhrou\gi):00427 [5]     911             ldb   ss_z_pos+1,u
03F2 C11D             (C:\Users\bhrou\gi):00428 [2]     913             cmpb  #$1D
03F4 2F02             (C:\Users\bhrou\gi):00429 [3]     916             ble   SSR_ScaleAnim_LoadAnim
03F6 C61E             (C:\Users\bhrou\gi):00430 [2]     918             ldb   #$1E
                      (C:\Users\bhrou\gi):00431                 
03F8                  (C:\Users\bhrou\gi):00432                 SSR_ScaleAnim_LoadAnim
03F8 8E044E           (C:\Users\bhrou\gi):00433 [3]     921             ldx   #Ani_SSRing
03FB 58               (C:\Users\bhrou\gi):00434 [2]     923             aslb
03FC EC85             (C:\Users\bhrou\gi):00435 [6]     929             ldd   b,x
03FE ED44             (C:\Users\bhrou\gi):00436 [6]     935             std   anim,u
                      (C:\Users\bhrou\gi):00437                                                                                           
0400                  (C:\Users\bhrou\gi):00438                 SSR_ScaleAnim_return
0400 39               (C:\Users\bhrou\gi):00439 [5]     940             rts             
                      (C:\Users\bhrou\gi):00440                 
0401                  (C:\Users\bhrou\gi):00441                 SSB_DeleteObject
0401 AEC860           (C:\Users\bhrou\gi):00442 [6]     946             ldx   ss_parent,u
0404 2707             (C:\Users\bhrou\gi):00443 [3]     949             beq   SSB_DeleteObject_End     ; no shadow for this Bomb
0406 6D84             (C:\Users\bhrou\gi):00444 [6]     955             tst   id,x
0408 2703             (C:\Users\bhrou\gi):00445 [3]     958             beq   SSB_DeleteObject_End
040A 638863           (C:\Users\bhrou\gi):00446 [7]     965             com   ss_self_delete,x         ; tell shadow to self delete
040D                  (C:\Users\bhrou\gi):00447                 SSB_DeleteObject_End                     
040D 7E8659           (C:\Users\bhrou\gi):00448 [4]     969             jmp   DeleteObject              
                      (C:\Users\bhrou\gi):00449                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00450                                                                                           *
                      (C:\Users\bhrou\gi):00451                                                                                           *loc_3516C:
                      (C:\Users\bhrou\gi):00452                                                                                           *    move.l  (sp)+,d0
                      (C:\Users\bhrou\gi):00453                                                                                           *    move.l  objoff_34(a0),d0
                      (C:\Users\bhrou\gi):00454                                                                                           *    beq.w   JmpTo63_DeleteObject
                      (C:\Users\bhrou\gi):00455                                                                                           *    movea.l d0,a1 ; a1=object
                      (C:\Users\bhrou\gi):00456                                                                                           *    st  objoff_2A(a1)
                      (C:\Users\bhrou\gi):00457                                                                                           *
                      (C:\Users\bhrou\gi):00458                                                                                           *    if removeJmpTos
                      (C:\Users\bhrou\gi):00459                                                                                           *JmpTo63_DeleteObject ; JmpTo
                      (C:\Users\bhrou\gi):00460                                                                                           *    endif
                      (C:\Users\bhrou\gi):00461                                                                                           *
                      (C:\Users\bhrou\gi):00462                                                                                           *    jmpto   (DeleteObject).l, JmpTo63_DeleteObject
                      (C:\Users\bhrou\gi):00463                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00464                                                                                           *byte_35180:
                      (C:\Users\bhrou\gi):00465                                                                                           *    dc.b   9,  9,  9,  8,  8,  7,  7,  6,  6,  5,  5,  4,  4,  3,  3,  3
                      (C:\Users\bhrou\gi):00466                                                                                           *    dc.b   2,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0; 16
                      (C:\Users\bhrou\gi):00467                                                                                           *; ===========================================================================
0410                  (C:\Users\bhrou\gi):00468                 Ani_SSBomb
0410 0342             (C:\Users\bhrou\gi):00469                         fdb   Ani_SSBomb_9 ; 0         ; ajdusted some values here
0412 0342             (C:\Users\bhrou\gi):00470                         fdb   Ani_SSBomb_9 ; 2         ; however in-game sprite does not
0414 0342             (C:\Users\bhrou\gi):00471                         fdb   Ani_SSBomb_9 ; 4         ; match this table, because of
0416 033E             (C:\Users\bhrou\gi):00472                         fdb   Ani_SSBomb_8 ; 6         ; animate method that forces
0418 033E             (C:\Users\bhrou\gi):00473                         fdb   Ani_SSBomb_8 ; 8         ; to end an animation before
041A 033A             (C:\Users\bhrou\gi):00474                         fdb   Ani_SSBomb_7 ; $A        ; setting the new one
041C 033A             (C:\Users\bhrou\gi):00475                         fdb   Ani_SSBomb_7 ; $C
041E 0336             (C:\Users\bhrou\gi):00476                         fdb   Ani_SSBomb_6 ; $E
0420 0336             (C:\Users\bhrou\gi):00477                         fdb   Ani_SSBomb_6 ; $10
0422 0332             (C:\Users\bhrou\gi):00478                         fdb   Ani_SSBomb_5 ; $12
0424 0332             (C:\Users\bhrou\gi):00479                         fdb   Ani_SSBomb_5 ; $14
0426 032E             (C:\Users\bhrou\gi):00480                         fdb   Ani_SSBomb_4 ; $16
0428 032E             (C:\Users\bhrou\gi):00481                         fdb   Ani_SSBomb_4 ; $18                                                
042A 032A             (C:\Users\bhrou\gi):00482                         fdb   Ani_SSBomb_3 ; $1A
042C 032A             (C:\Users\bhrou\gi):00483                         fdb   Ani_SSBomb_3 ; $1C
042E 032A             (C:\Users\bhrou\gi):00484                         fdb   Ani_SSBomb_3 ; $1E
0430 0326             (C:\Users\bhrou\gi):00485                         fdb   Ani_SSBomb_2 ; $20                               
0432 0326             (C:\Users\bhrou\gi):00486                                 fdb   Ani_SSBomb_2 ; $22
0434 0326             (C:\Users\bhrou\gi):00487                         fdb   Ani_SSBomb_2 ; $24
0436 0322             (C:\Users\bhrou\gi):00488                         fdb   Ani_SSBomb_1 ; $26
0438 0322             (C:\Users\bhrou\gi):00489                         fdb   Ani_SSBomb_1 ; $28
043A 0322             (C:\Users\bhrou\gi):00490                         fdb   Ani_SSBomb_1 ; $2A
043C 0322             (C:\Users\bhrou\gi):00491                         fdb   Ani_SSBomb_1 ; $2C
043E 0322             (C:\Users\bhrou\gi):00492                         fdb   Ani_SSBomb_1 ; $2E
0440 0322             (C:\Users\bhrou\gi):00493                         fdb   Ani_SSBomb_1 ; $30
0442 0322             (C:\Users\bhrou\gi):00494                         fdb   Ani_SSBomb_1 ; $32
0444 0322             (C:\Users\bhrou\gi):00495                         fdb   Ani_SSBomb_1 ; $34
0446 0322             (C:\Users\bhrou\gi):00496                         fdb   Ani_SSBomb_1 ; $36
0448 0322             (C:\Users\bhrou\gi):00497                         fdb   Ani_SSBomb_1 ; $38
044A 0322             (C:\Users\bhrou\gi):00498                         fdb   Ani_SSBomb_1 ; $3A
044C 031E             (C:\Users\bhrou\gi):00499                         fdb   Ani_SSBomb_0 ; $3C                
                      (C:\Users\bhrou\gi):00500                        
                      (C:\Users\bhrou\gi):00501                         
044E                  (C:\Users\bhrou\gi):00502                 Ani_SSRing
044E 03A8             (C:\Users\bhrou\gi):00503                         fdb   Ani_SSRing_9 ; 0
0450 03A8             (C:\Users\bhrou\gi):00504                         fdb   Ani_SSRing_9 ; 2
0452 03A8             (C:\Users\bhrou\gi):00505                         fdb   Ani_SSRing_9 ; 4
0454 039E             (C:\Users\bhrou\gi):00506                         fdb   Ani_SSRing_8 ; 6
0456 039E             (C:\Users\bhrou\gi):00507                         fdb   Ani_SSRing_8 ; 8
0458 0394             (C:\Users\bhrou\gi):00508                         fdb   Ani_SSRing_7 ; $A
045A 0394             (C:\Users\bhrou\gi):00509                         fdb   Ani_SSRing_7 ; $C
045C 038A             (C:\Users\bhrou\gi):00510                         fdb   Ani_SSRing_6 ; $E
045E 038A             (C:\Users\bhrou\gi):00511                         fdb   Ani_SSRing_6 ; $10
0460 0380             (C:\Users\bhrou\gi):00512                         fdb   Ani_SSRing_5 ; $12
0462 0380             (C:\Users\bhrou\gi):00513                         fdb   Ani_SSRing_5 ; $14
0464 0376             (C:\Users\bhrou\gi):00514                         fdb   Ani_SSRing_4 ; $16
0466 0376             (C:\Users\bhrou\gi):00515                         fdb   Ani_SSRing_4 ; $18                                                
0468 036C             (C:\Users\bhrou\gi):00516                         fdb   Ani_SSRing_3 ; $1A
046A 036C             (C:\Users\bhrou\gi):00517                         fdb   Ani_SSRing_3 ; $1C
046C 036C             (C:\Users\bhrou\gi):00518                         fdb   Ani_SSRing_3 ; $1E
046E 0362             (C:\Users\bhrou\gi):00519                         fdb   Ani_SSRing_2 ; $20                               
0470 0362             (C:\Users\bhrou\gi):00520                                 fdb   Ani_SSRing_2 ; $22
0472 0362             (C:\Users\bhrou\gi):00521                         fdb   Ani_SSRing_2 ; $24
0474 0358             (C:\Users\bhrou\gi):00522                         fdb   Ani_SSRing_1 ; $26
0476 0358             (C:\Users\bhrou\gi):00523                         fdb   Ani_SSRing_1 ; $28
0478 0358             (C:\Users\bhrou\gi):00524                         fdb   Ani_SSRing_1 ; $2A
047A 0358             (C:\Users\bhrou\gi):00525                         fdb   Ani_SSRing_1 ; $2C
047C 0358             (C:\Users\bhrou\gi):00526                         fdb   Ani_SSRing_1 ; $2E
047E 0358             (C:\Users\bhrou\gi):00527                         fdb   Ani_SSRing_1 ; $30
0480 0358             (C:\Users\bhrou\gi):00528                         fdb   Ani_SSRing_1 ; $32
0482 0358             (C:\Users\bhrou\gi):00529                         fdb   Ani_SSRing_1 ; $34
0484 0358             (C:\Users\bhrou\gi):00530                         fdb   Ani_SSRing_1 ; $36
0486 0358             (C:\Users\bhrou\gi):00531                         fdb   Ani_SSRing_1 ; $38
0488 0358             (C:\Users\bhrou\gi):00532                         fdb   Ani_SSRing_1 ; $3A
048A 034E             (C:\Users\bhrou\gi):00533                         fdb   Ani_SSRing_0 ; $3C
                      (C:\Users\bhrou\gi):00534                                                                                                 
048C                  (C:\Users\bhrou\gi):00535                 SSB_CC_OutOfScreen             
048C 8601             (C:\Users\bhrou\gi):00536 [2]     971             lda   #$01
048E B70694           (C:\Users\bhrou\gi):00537 [5]     976             sta   is_out_of_screen
0491                  (C:\Users\bhrou\gi):00538                 SSB_CC_Return_1        
0491 39               (C:\Users\bhrou\gi):00539 [5]     981             rts
                      (C:\Users\bhrou\gi):00540                                                                                                 
0492                  (C:\Users\bhrou\gi):00541                 SSB_ComputeCoordinates                                                    *loc_351A0:
                      (C:\Users\bhrou\gi):00542                                                                                           *    move.w  d7,-(sp)
                      (C:\Users\bhrou\gi):00543                                                                                           *    moveq   #0,d2
                      (C:\Users\bhrou\gi):00544                                                                                           *    moveq   #0,d3
                      (C:\Users\bhrou\gi):00545                                                                                           *    moveq   #0,d4
                      (C:\Users\bhrou\gi):00546                                                                                           *    moveq   #0,d5
                      (C:\Users\bhrou\gi):00547                                                                                           *    moveq   #0,d6
                      (C:\Users\bhrou\gi):00548                                                                                           *    moveq   #0,d7
                      (C:\Users\bhrou\gi):00549                                                                                           
                      (C:\Users\bhrou\gi):00550                         ; this call was initially from loc_4F64
                      (C:\Users\bhrou\gi):00551                         ; has been moved because of SpecialPerspective data location
                      (C:\Users\bhrou\gi):00552                         
                      (C:\Users\bhrou\gi):00553                                                                                           *; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
                      (C:\Users\bhrou\gi):00554                                                                                           *;sub_5514
                      (C:\Users\bhrou\gi):00555                                                                                           *SSLoadCurrentPerspective:
                      (C:\Users\bhrou\gi):00556                                                                                           *    cmpi.b  #4,(SSTrack_drawing_index).w
                      (C:\Users\bhrou\gi):00557                                                                                           *    bne.s   +   ; rts
0492 8E0951           (C:\Users\bhrou\gi):00558 [3]     984             ldx   #SpecialPerspective                                         *    movea.l #SSRAM_MiscKoz_SpecialPerspective,a0
                      (C:\Users\bhrou\gi):00559                                                                                           *    moveq   #0,d0
0495 B67498           (C:\Users\bhrou\gi):00560 [5]     989             lda   SSTrack_mapping_frame                                       *    move.b  (SSTrack_mapping_frame).w,d0
0498 48               (C:\Users\bhrou\gi):00561 [2]     991             asla                                                              *    add.w   d0,d0
0499 EC86             (C:\Users\bhrou\gi):00562 [6]     997             ldd   a,x                                                         *    adda.w  (a0,d0.w),a0
049B 308B             (C:\Users\bhrou\gi):00563 [8]     1005            leax  d,x                                                         
                      (C:\Users\bhrou\gi):00564                                                                                           *    move.l  a0,(SS_CurrentPerspective).w
                      (C:\Users\bhrou\gi):00565                                                                                           *+   rts
                      (C:\Users\bhrou\gi):00566                                                                                           *; End of function SSLoadCurrentPerspective
                      (C:\Users\bhrou\gi):00567                                                                                           *
                      (C:\Users\bhrou\gi):00568                                                                                           *                                                                          
                      (C:\Users\bhrou\gi):00569                                                                                           
                      (C:\Users\bhrou\gi):00570                                                                                           *    movea.l (SS_CurrentPerspective).w,a1
049D ECC85D           (C:\Users\bhrou\gi):00571 [6]     1011            ldd   ss_z_pos,u               ; load sprite z position           *    move.w  objoff_30(a0),d0
04A0 27EA             (C:\Users\bhrou\gi):00572 [3]     1014            beq   SSB_CC_OutOfScreen       ; if z=0 sprite is behind camera   *    beq.w   loc_35258
04A2 10A381           (C:\Users\bhrou\gi):00573 [10]    1024            cmpd  ,x++                     ; read nb of ellipses for this img *    cmp.w   (a1)+,d0
04A5 2EEA             (C:\Users\bhrou\gi):00574 [3]     1027            bgt   SSB_CC_Return_1          ; sprite is too far, no ellipse    *    bgt.w   loc_35258
04A7 830001           (C:\Users\bhrou\gi):00575 [4]     1031            subd  #1                       ; each perspective data for an img *    subq.w  #1,d0
04AA 58               (C:\Users\bhrou\gi):00576 [2]     1033            aslb                           ; is stored in groups of 6 bytes
04AB 49               (C:\Users\bhrou\gi):00577 [2]     1035            rola                           ; one group defines an ellipse     *    add.w   d0,d0
04AC FD04B2           (C:\Users\bhrou\gi):00578 [6]     1041            std   d1+1                     ; for a specific distance from     *    move.w  d0,d1
04AF 58               (C:\Users\bhrou\gi):00579 [2]     1043            aslb                           ; camera, first group is
04B0 49               (C:\Users\bhrou\gi):00580 [2]     1045            rola                           ; for ss_z_pos = 1                 *    add.w   d0,d0
04B1 C30000           (C:\Users\bhrou\gi):00581 [4]     1049    d1      addd  #$0000                   ; (dynamic) d = (ss_z_pos-1)*6     *    add.w   d1,d0
04B4 308B             (C:\Users\bhrou\gi):00582 [8]     1057            leax  d,x
04B6 7D7496           (C:\Users\bhrou\gi):00583 [7]     1064            tst   SSTrack_Orientation                                         *    tst.b   (SSTrack_Orientation).w
04B9 10260107         (C:\Users\bhrou\gi):00584 [5+?]   1069            lbne  SSB_CC_Flipped           ; branch if image is h flipped     *    bne.w   loc_35260
04BD EC04             (C:\Users\bhrou\gi):00585 [6]     1075            ldd   4,x                                                         *    move.b  4(a1,d0.w),d6
04BF B704CB           (C:\Users\bhrou\gi):00586 [5]     1080            sta   d6+1                                                        *    move.b  5(a1,d0.w),d7
04C2 F704CF           (C:\Users\bhrou\gi):00587 [5]     1085            stb   d7+1                     ; branch if angle min
04C5 270B             (C:\Users\bhrou\gi):00588 [3]     1088            beq   SSB_CC_VisibleArea       ; of visible area is 0             *    beq.s   loc_351E8
04C7 A6C868           (C:\Users\bhrou\gi):00589 [5]     1093            lda   angle,u                  ; load sprite angle                *    move.b  angle(a0),d1
04CA 8100             (C:\Users\bhrou\gi):00590 [2]     1095    d6      cmpa  #$00                     ; (dynamic) angle max (incl.)      *    cmp.b   d6,d1
04CC 2504             (C:\Users\bhrou\gi):00591 [3]     1098            blo   SSB_CC_VisibleArea       ; of visible area                  *    blo.s   loc_351E8
04CE 8100             (C:\Users\bhrou\gi):00592 [2]     1100    d7      cmpa  #$00                     ; (dynamic) angle min (excl.)      *    cmp.b   d7,d1
04D0 25BA             (C:\Users\bhrou\gi):00593 [3]     1103            blo   SSB_CC_OutOfScreen       ; of visible area                  *    blo.s   loc_35258
                      (C:\Users\bhrou\gi):00594                                                                                           *
04D2                  (C:\Users\bhrou\gi):00595                 SSB_CC_VisibleArea                                                        *loc_351E8:
04D2 4F               (C:\Users\bhrou\gi):00596 [2]     1105            clra
04D3 E684             (C:\Users\bhrou\gi):00597 [4]     1109            ldb   ,x                                                          *    move.b  (a1,d0.w),d2
04D5 FD052E           (C:\Users\bhrou\gi):00598 [6]     1115            std   xCenter+1
04D8 FD0590           (C:\Users\bhrou\gi):00599 [6]     1121            std   sxCenter+1
                      (C:\Users\bhrou\gi):00600                                                                                           *    move.b  2(a1,d0.w),d4
                      (C:\Users\bhrou\gi):00601                                                                                           *    move.b  3(a1,d0.w),d5
                      (C:\Users\bhrou\gi):00602                                                                                           *    move.b  1(a1,d0.w),d3
                      (C:\Users\bhrou\gi):00603                                                                                           *
04DB                  (C:\Users\bhrou\gi):00604                 SSB_CC_ProcessYCenter                                                     *loc_351F8:
04DB 4F               (C:\Users\bhrou\gi):00605 [2]     1123            clra
04DC E601             (C:\Users\bhrou\gi):00606 [5]     1128            ldb   1,x
04DE 5D               (C:\Users\bhrou\gi):00607 [2]     1130            tstb
04DF 2A05             (C:\Users\bhrou\gi):00608 [3]     1133            bpl   @a                                                          *    bpl.s   loc_35202
04E1 C148             (C:\Users\bhrou\gi):00609 [2]     1135            cmpb  #$48                                                        *    cmpi.b  #$48,d3
04E3 2501             (C:\Users\bhrou\gi):00610 [3]     1138            blo   @a                                                          *    blo.s   loc_35202
04E5 1D               (C:\Users\bhrou\gi):00611 [2]     1140            sex                                                               *    ext.w   d3
04E6 FD056B           (C:\Users\bhrou\gi):00612 [6]     1146    @a      std   yCenter+1
04E9 FD05B1           (C:\Users\bhrou\gi):00613 [6]     1152            std   syCenter+1
                      (C:\Users\bhrou\gi):00614                                                                                           *
                      (C:\Users\bhrou\gi):00615                                                                                           *loc_35202:
04EC E6C868           (C:\Users\bhrou\gi):00616 [5]     1157            ldb   angle,u                                                     *    move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):00617                 
04EF 108E06D1         (C:\Users\bhrou\gi):00618 [4]     1161            ldy   #Sine_Data                                                  *CalcSine:
04F3 8600             (C:\Users\bhrou\gi):00619 [2]     1163            lda   #$00                                                        *    andi.w  #$FF,d0
04F5 58               (C:\Users\bhrou\gi):00620 [2]     1165            aslb                                                              *    add.w   d0,d0
04F6 49               (C:\Users\bhrou\gi):00621 [2]     1167                rola
04F7 31AB             (C:\Users\bhrou\gi):00622 [8]     1175                leay  d,y
04F9 ECA4             (C:\Users\bhrou\gi):00623 [5]     1180                ldd   ,y
04FB FD053F           (C:\Users\bhrou\gi):00624 [6]     1186                std   ysin+1
04FE 31A90080         (C:\Users\bhrou\gi):00625 [8]     1194            leay  $80,y                                                       *    addi.w  #$80,d0
0502 ECA4             (C:\Users\bhrou\gi):00626 [5]     1199                ldd   ,y                                                          *    move.w  Sine_Data(pc,d0.w),d1 ; cos
                      (C:\Users\bhrou\gi):00627                                                                                           *    subi.w  #$80,d0
                      (C:\Users\bhrou\gi):00628                                                                                           *    move.w  Sine_Data(pc,d0.w),d0 ; sin
                      (C:\Users\bhrou\gi):00629                                                                                           *; CalcSineEnd
                      (C:\Users\bhrou\gi):00630                                                                                           
                      (C:\Users\bhrou\gi):00631                                                                                           *    muls.w  d4,d1
                      (C:\Users\bhrou\gi):00632                                                                                           *    muls.w  d5,d0
                      (C:\Users\bhrou\gi):00633                                                                                           *    asr.l   #8,d0
                      (C:\Users\bhrou\gi):00634                                                                                           *    asr.l   #8,d1
                      (C:\Users\bhrou\gi):00635                                                                                           *    add.w   d2,d1
                      (C:\Users\bhrou\gi):00636                                                                                           *    add.w   d3,d0
                      (C:\Users\bhrou\gi):00637                                                                                           *    move.w  d1,x_pos(a0)
                      (C:\Users\bhrou\gi):00638                                                                                           *    move.w  d0,y_pos(a0)
                      (C:\Users\bhrou\gi):00639                         ; Compute X coordinate
                      (C:\Users\bhrou\gi):00640                         ; --------------------                                                                                                                                            
                      (C:\Users\bhrou\gi):00641                         ; signed mul of a value (range FF00-1000) with an non null unsigned byte (01-FF)
                      (C:\Users\bhrou\gi):00642                         ; next the value is divided by 256
                      (C:\Users\bhrou\gi):00643                         
0504 4D               (C:\Users\bhrou\gi):00644 [2]     1201            tsta
0505 270F             (C:\Users\bhrou\gi):00645 [3]     1204            beq   xpos  ; cas $0000 <= d <= $00FF
0507 2A08             (C:\Users\bhrou\gi):00646 [3]     1207            bpl   xp256 ; cas d = $0100
0509 5D               (C:\Users\bhrou\gi):00647 [2]     1209            tstb
050A 2612             (C:\Users\bhrou\gi):00648 [3]     1212            bne   xneg  ; cas $FF01 >= d >= $FFFF    
                      (C:\Users\bhrou\gi):00649                 
050C E602             (C:\Users\bhrou\gi):00650 [5]     1217    xn256   ldb   2,x  ; cas d = $FF00
050E 50               (C:\Users\bhrou\gi):00651 [2]     1219            negb
050F 2019             (C:\Users\bhrou\gi):00652 [3]     1222            bra   xEnd
                      (C:\Users\bhrou\gi):00653                 
0511 4F               (C:\Users\bhrou\gi):00654 [2]     1224    xp256   clra
0512 E602             (C:\Users\bhrou\gi):00655 [5]     1229            ldb   2,x
0514 2014             (C:\Users\bhrou\gi):00656 [3]     1232            bra   xEnd
                      (C:\Users\bhrou\gi):00657                 
0516 A602             (C:\Users\bhrou\gi):00658 [5]     1237    xpos    lda   2,x 
0518 3D               (C:\Users\bhrou\gi):00659 [11]    1248            mul
0519 1F89             (C:\Users\bhrou\gi):00660 [6]     1254            tfr   a,b
051B 4F               (C:\Users\bhrou\gi):00661 [2]     1256            clra
051C 200C             (C:\Users\bhrou\gi):00662 [3]     1259            bra   xEnd
                      (C:\Users\bhrou\gi):00663                 
051E A602             (C:\Users\bhrou\gi):00664 [5]     1264    xneg    lda   2,x    
0520 50               (C:\Users\bhrou\gi):00665 [2]     1266            negb
0521 3D               (C:\Users\bhrou\gi):00666 [11]    1277            mul
0522 40               (C:\Users\bhrou\gi):00667 [2]     1279            nega
0523 50               (C:\Users\bhrou\gi):00668 [2]     1281            negb
0524 8200             (C:\Users\bhrou\gi):00669 [2]     1283            sbca  #0
0526 1F89             (C:\Users\bhrou\gi):00670 [6]     1289            tfr   a,b
0528 86FF             (C:\Users\bhrou\gi):00671 [2]     1291            lda   #$FF
                      (C:\Users\bhrou\gi):00672                         
052A FD0584           (C:\Users\bhrou\gi):00673 [6]     1297    xEnd    std   sx+1
052D C30000           (C:\Users\bhrou\gi):00674 [4]     1301    xCenter addd  #$0000                   ; (dynamic) add x center of ellipse
                      (C:\Users\bhrou\gi):00675                         ;std   x_pos,u
                      (C:\Users\bhrou\gi):00676                         
0530 44               (C:\Users\bhrou\gi):00677 [2]     1303            lsra                           ; megadrive coordinates conversion
0531 56               (C:\Users\bhrou\gi):00678 [2]     1305            rorb    
0532 C30040           (C:\Users\bhrou\gi):00679 [4]     1309            addd  #$40
0535 E7C814           (C:\Users\bhrou\gi):00680 [5]     1314            stb   x_pixel,u
0538 4D               (C:\Users\bhrou\gi):00681 [2]     1316            tsta
0539 2703             (C:\Users\bhrou\gi):00682 [3]     1319            beq   ysin
053B B70694           (C:\Users\bhrou\gi):00683 [5]     1324            sta   is_out_of_screen
                      (C:\Users\bhrou\gi):00684                           
                      (C:\Users\bhrou\gi):00685                         ; Compute Y coordinate
                      (C:\Users\bhrou\gi):00686                         ; --------------------          
                      (C:\Users\bhrou\gi):00687                         ; signed mul of a value (range FF00-1000) with an non null unsigned byte (01-FF)
                      (C:\Users\bhrou\gi):00688                         ; next the value is divided by 256
                      (C:\Users\bhrou\gi):00689                         
053E CC0000           (C:\Users\bhrou\gi):00690 [3]     1327    ysin    ldd   #$0000                   ; (dynamic) get sin
0541 4D               (C:\Users\bhrou\gi):00691 [2]     1329            tsta
0542 270F             (C:\Users\bhrou\gi):00692 [3]     1332            beq   ypos  ; cas $0000 <= d <= $00FF
0544 2A08             (C:\Users\bhrou\gi):00693 [3]     1335            bpl   yp256 ; cas d = $0100
0546 5D               (C:\Users\bhrou\gi):00694 [2]     1337            tstb
0547 2612             (C:\Users\bhrou\gi):00695 [3]     1340            bne   yneg  ; cas $FF01 >= d >= $FFFF    
                      (C:\Users\bhrou\gi):00696                 
0549 E603             (C:\Users\bhrou\gi):00697 [5]     1345    yn256   ldb   3,x  ; cas d = $FF00
054B 50               (C:\Users\bhrou\gi):00698 [2]     1347            negb
054C 2019             (C:\Users\bhrou\gi):00699 [3]     1350            bra   yEnd
                      (C:\Users\bhrou\gi):00700                 
054E 4F               (C:\Users\bhrou\gi):00701 [2]     1352    yp256   clra
054F E603             (C:\Users\bhrou\gi):00702 [5]     1357            ldb   3,x
0551 2014             (C:\Users\bhrou\gi):00703 [3]     1360            bra   yEnd
                      (C:\Users\bhrou\gi):00704                 
0553 A603             (C:\Users\bhrou\gi):00705 [5]     1365    ypos    lda   3,x 
0555 3D               (C:\Users\bhrou\gi):00706 [11]    1376            mul
0556 1F89             (C:\Users\bhrou\gi):00707 [6]     1382            tfr   a,b
0558 4F               (C:\Users\bhrou\gi):00708 [2]     1384            clra
0559 200C             (C:\Users\bhrou\gi):00709 [3]     1387            bra   yEnd
                      (C:\Users\bhrou\gi):00710                 
055B A603             (C:\Users\bhrou\gi):00711 [5]     1392    yneg    lda   3,x    
055D 50               (C:\Users\bhrou\gi):00712 [2]     1394            negb
055E 3D               (C:\Users\bhrou\gi):00713 [11]    1405            mul
055F 40               (C:\Users\bhrou\gi):00714 [2]     1407            nega
0560 50               (C:\Users\bhrou\gi):00715 [2]     1409            negb
0561 8200             (C:\Users\bhrou\gi):00716 [2]     1411            sbca  #0
0563 1F89             (C:\Users\bhrou\gi):00717 [6]     1417            tfr   a,b
0565 86FF             (C:\Users\bhrou\gi):00718 [2]     1419            lda   #$FF
                      (C:\Users\bhrou\gi):00719                         
0567 FD05A5           (C:\Users\bhrou\gi):00720 [6]     1425    yEnd    std   sy+1
056A C30000           (C:\Users\bhrou\gi):00721 [4]     1429    yCenter addd  #$0000                   ; (dynamic) add y center of ellipse
                      (C:\Users\bhrou\gi):00722                         ;std   y_pos,u
056D C30010           (C:\Users\bhrou\gi):00723 [4]     1433            addd  #$10
0570 E7C815           (C:\Users\bhrou\gi):00724 [5]     1438            stb   y_pixel,u
0573 4D               (C:\Users\bhrou\gi):00725 [2]     1440            tsta
0574 2703             (C:\Users\bhrou\gi):00726 [3]     1443            beq   scoord
0576 B70694           (C:\Users\bhrou\gi):00727 [5]     1448            sta   is_out_of_screen        
                      (C:\Users\bhrou\gi):00728                 
                      (C:\Users\bhrou\gi):00729                         ; Process shadow coordinates
                      (C:\Users\bhrou\gi):00730                         ; --------------------------
                      (C:\Users\bhrou\gi):00731                 
0579 10AEC860         (C:\Users\bhrou\gi):00732 [7]     1455    scoord  ldy   ss_parent,u                                                 *    move.l  objoff_34(a0),d0
057D 2744             (C:\Users\bhrou\gi):00733 [3]     1458            beq   SSB_CC_Return_2                                             *    beq.s   loc_3524E
057F 6DA4             (C:\Users\bhrou\gi):00734 [6]     1464            tst   id,y
0581 2740             (C:\Users\bhrou\gi):00735 [3]     1467            beq   SSB_CC_Return_2
                      (C:\Users\bhrou\gi):00736                                                                                           *    movea.l d0,a1 ; a1=object
                      (C:\Users\bhrou\gi):00737                                                                                           *    move.b  angle(a0),d0
                      (C:\Users\bhrou\gi):00738                                                                                           *
                      (C:\Users\bhrou\gi):00739                                                                                           *CalcSine:
                      (C:\Users\bhrou\gi):00740                                                                                           *    andi.w  #$FF,d0
                      (C:\Users\bhrou\gi):00741                                                                                           *    add.w   d0,d0
                      (C:\Users\bhrou\gi):00742                                                                                                                                                           
                      (C:\Users\bhrou\gi):00743                                                                                                                                                           
                      (C:\Users\bhrou\gi):00744                                                                                                                                                           
                      (C:\Users\bhrou\gi):00745                                                                                                                                                           
                      (C:\Users\bhrou\gi):00746                                                                                           *    addi.w  #$80,d0
                      (C:\Users\bhrou\gi):00747                                                                                               *    move.w  Sine_Data(pc,d0.w),d1 ; cos
                      (C:\Users\bhrou\gi):00748                                                                                           *    subi.w  #$80,d0
                      (C:\Users\bhrou\gi):00749                                                                                           *    move.w  Sine_Data(pc,d0.w),d0 ; sin
                      (C:\Users\bhrou\gi):00750                                                                                           *; CalcSineEnd
                      (C:\Users\bhrou\gi):00751                         ; we will appy 1,25 factor on already calculated ellipse          *
                      (C:\Users\bhrou\gi):00752                         ; instead of process muls one more time                                                                  
0583 CC0000           (C:\Users\bhrou\gi):00753 [3]     1470    sx      ldd   #$0000                   ; (dynamic)
0586 BE0584           (C:\Users\bhrou\gi):00754 [6]     1476            ldx   >*-2
0589 47               (C:\Users\bhrou\gi):00755 [2]     1478            asra
058A 56               (C:\Users\bhrou\gi):00756 [2]     1480            rorb
058B 47               (C:\Users\bhrou\gi):00757 [2]     1482            asra
058C 56               (C:\Users\bhrou\gi):00758 [2]     1484            rorb        
058D 308B             (C:\Users\bhrou\gi):00759 [8]     1492            leax  d,x
                      (C:\Users\bhrou\gi):00760                 
                      (C:\Users\bhrou\gi):00761                          
058F                  (C:\Users\bhrou\gi):00762                 sxCenter
058F CC0000           (C:\Users\bhrou\gi):00763 [3]     1495            ldd   #$0000                   ; (dynamic) add x center of ellipse
0592 308B             (C:\Users\bhrou\gi):00764 [8]     1503            leax  d,x        
                      (C:\Users\bhrou\gi):00765                         ;stx   x_pos,y 
                      (C:\Users\bhrou\gi):00766                         
0594 1F10             (C:\Users\bhrou\gi):00767 [6]     1509            tfr   x,d        
0596 44               (C:\Users\bhrou\gi):00768 [2]     1511            lsra                           ; megadrive coordinates conversion
0597 56               (C:\Users\bhrou\gi):00769 [2]     1513            rorb    
0598 C30040           (C:\Users\bhrou\gi):00770 [4]     1517            addd  #$40
059B E7A814           (C:\Users\bhrou\gi):00771 [5]     1522            stb   x_pixel,y
059E 4D               (C:\Users\bhrou\gi):00772 [2]     1524            tsta
059F 2703             (C:\Users\bhrou\gi):00773 [3]     1527            beq   sy
05A1 B70694           (C:\Users\bhrou\gi):00774 [5]     1532            sta   is_out_of_screen            
                      (C:\Users\bhrou\gi):00775                                                                                           *    move.w  d4,d7
                      (C:\Users\bhrou\gi):00776                                                                                           *    lsr.w   #2,d7
                      (C:\Users\bhrou\gi):00777                                                                                           *    add.w   d7,d4
                      (C:\Users\bhrou\gi):00778                                                                                           *    muls.w  d4,d1
                      (C:\Users\bhrou\gi):00779                         ; we will appy 1,25 factor on already calculated ellipse          *
                      (C:\Users\bhrou\gi):00780                         ; instead of process muls one more time                                                                  
05A4 CC0000           (C:\Users\bhrou\gi):00781 [3]     1535    sy      ldd   #$0000                   ; (dynamic)
05A7 BE05A5           (C:\Users\bhrou\gi):00782 [6]     1541            ldx   >*-2
05AA 47               (C:\Users\bhrou\gi):00783 [2]     1543            asra
05AB 56               (C:\Users\bhrou\gi):00784 [2]     1545            rorb
05AC 47               (C:\Users\bhrou\gi):00785 [2]     1547            asra
05AD 56               (C:\Users\bhrou\gi):00786 [2]     1549            rorb        
05AE 308B             (C:\Users\bhrou\gi):00787 [8]     1557            leax  d,x
                      (C:\Users\bhrou\gi):00788                 
                      (C:\Users\bhrou\gi):00789                          
05B0                  (C:\Users\bhrou\gi):00790                 syCenter
05B0 CC0000           (C:\Users\bhrou\gi):00791 [3]     1560            ldd   #$0000                   ; (dynamic) add y center of ellipse
05B3 308B             (C:\Users\bhrou\gi):00792 [8]     1568            leax  d,x        
                      (C:\Users\bhrou\gi):00793                         ;stx   y_pos,y  
                      (C:\Users\bhrou\gi):00794                         
05B5 1F10             (C:\Users\bhrou\gi):00795 [6]     1574            tfr   x,d
05B7 C30010           (C:\Users\bhrou\gi):00796 [4]     1578            addd  #$10
05BA E7A815           (C:\Users\bhrou\gi):00797 [5]     1583            stb   y_pixel,y
05BD 4D               (C:\Users\bhrou\gi):00798 [2]     1585            tsta
05BE 2703             (C:\Users\bhrou\gi):00799 [3]     1588            beq   SSB_CC_Return_2
05C0 B70694           (C:\Users\bhrou\gi):00800 [5]     1593            sta   is_out_of_screen          
                      (C:\Users\bhrou\gi):00801                                                                                           *    move.w  d5,d7
                      (C:\Users\bhrou\gi):00802                                                                                           *    asr.w   #2,d7
                      (C:\Users\bhrou\gi):00803                                                                                           *    add.w   d7,d5
                      (C:\Users\bhrou\gi):00804                                                                                           *    muls.w  d5,d0
                      (C:\Users\bhrou\gi):00805                                                                                           *    asr.l   #8,d0
                      (C:\Users\bhrou\gi):00806                                                                                           *    asr.l   #8,d1
                      (C:\Users\bhrou\gi):00807                                                                                           *    add.w   d2,d1
                      (C:\Users\bhrou\gi):00808                                                                                           *    move.w  d1,x_pos(a1)                                                                                                                            
                      (C:\Users\bhrou\gi):00809                                                                                           *    add.w   d3,d0
                      (C:\Users\bhrou\gi):00810                                                                                           *    move.w  d0,y_pos(a1)
                      (C:\Users\bhrou\gi):00811                                                                                           *
05C3                  (C:\Users\bhrou\gi):00812                 SSB_CC_Return_2                                                           *loc_3524E:
                      (C:\Users\bhrou\gi):00813                                                                                           *    ori.b   #$80,render_flags(a0)
                      (C:\Users\bhrou\gi):00814                                                                                           *
                      (C:\Users\bhrou\gi):00815                                                                                           *loc_35254:
                      (C:\Users\bhrou\gi):00816                                                                                           *    move.w  (sp)+,d7
05C3 39               (C:\Users\bhrou\gi):00817 [5]     1598            rts                                                               *    rts                                                      
                      (C:\Users\bhrou\gi):00818                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00819                                                                                           *loc_35258:
                      (C:\Users\bhrou\gi):00820                                                                                           *    andi.b  #$7F,render_flags(a0)
                      (C:\Users\bhrou\gi):00821                                                                                           *    bra.s   loc_35254
                      (C:\Users\bhrou\gi):00822                                                                                           *; ===========================================================================  
05C4                  (C:\Users\bhrou\gi):00823                 SSB_CC_Flipped                                                            *loc_35260:
                      (C:\Users\bhrou\gi):00824                                                                                           *    move.b  #$80,d1
                      (C:\Users\bhrou\gi):00825                                                                                           *    move.b  4(a1,d0.w),d6
05C4 E605             (C:\Users\bhrou\gi):00826 [5]     1603            ldb   5,x                      ; branch if angle min              *    move.b  5(a1,d0.w),d7
05C6 271D             (C:\Users\bhrou\gi):00827 [3]     1606            beq   SSB_CC_FVisibleArea      ; of visible area is 0             *    beq.s   loc_35282
05C8 4F               (C:\Users\bhrou\gi):00828 [2]     1608            clra
05C9 830080           (C:\Users\bhrou\gi):00829 [4]     1612            subd  #$0080
05CC 50               (C:\Users\bhrou\gi):00830 [2]     1614            negb
05CD F705DE           (C:\Users\bhrou\gi):00831 [5]     1619            stb   fd7+1
05D0 4F               (C:\Users\bhrou\gi):00832 [2]     1621            clra
05D1 E604             (C:\Users\bhrou\gi):00833 [5]     1626            ldb   4,x
05D3 830080           (C:\Users\bhrou\gi):00834 [4]     1630            subd  #$0080
05D6 50               (C:\Users\bhrou\gi):00835 [2]     1632            negb
05D7 F705E2           (C:\Users\bhrou\gi):00836 [5]     1637            stb   fd6+1        
                      (C:\Users\bhrou\gi):00837                                                                                           *    sub.w   d1,d6
                      (C:\Users\bhrou\gi):00838                                                                                           *    sub.w   d1,d7
                      (C:\Users\bhrou\gi):00839                                                                                           *    neg.w   d6
                      (C:\Users\bhrou\gi):00840                                                                                           *    neg.w   d7
05DA A6C868           (C:\Users\bhrou\gi):00841 [5]     1642            lda   angle,u                  ; load sprite angle                *    move.b  angle(a0),d1
05DD 8100             (C:\Users\bhrou\gi):00842 [2]     1644    fd7     cmpa  #$00                     ; (dynamic) angle min (excl.)      *    cmp.b   d7,d1
05DF 2504             (C:\Users\bhrou\gi):00843 [3]     1647            blo   SSB_CC_FVisibleArea                                         *    blo.s   loc_35282
05E1 8100             (C:\Users\bhrou\gi):00844 [2]     1649    fd6     cmpa  #$00                     ; (dynamic) angle max (incl.)      *    cmp.b   d6,d1
05E3 25DE             (C:\Users\bhrou\gi):00845 [3]     1652            blo   SSB_CC_Return_2                                             *    blo.s   loc_35258
                      (C:\Users\bhrou\gi):00846                                                                                           *
05E5                  (C:\Users\bhrou\gi):00847                 SSB_CC_FVisibleArea                                                       *loc_35282:
05E5 4F               (C:\Users\bhrou\gi):00848 [2]     1654            clra
05E6 E684             (C:\Users\bhrou\gi):00849 [4]     1658            ldb   ,x                                                          *    move.b  (a1,d0.w),d2
                      (C:\Users\bhrou\gi):00850                                                                                           *    move.b  2(a1,d0.w),d4
                      (C:\Users\bhrou\gi):00851                                                                                           *    move.b  3(a1,d0.w),d5
05E8 830100           (C:\Users\bhrou\gi):00852 [4]     1662            subd  #$100                                                       *    subi.w  #$100,d2
05EB 40               (C:\Users\bhrou\gi):00853 [2]     1664            nega                                                              *    neg.w   d2
05EC 50               (C:\Users\bhrou\gi):00854 [2]     1666            negb
05ED 8200             (C:\Users\bhrou\gi):00855 [2]     1668            sbca  #0
05EF FD052E           (C:\Users\bhrou\gi):00856 [6]     1674            std   xCenter+1
05F2 FD0590           (C:\Users\bhrou\gi):00857 [6]     1680            std   sxCenter+1
                      (C:\Users\bhrou\gi):00858                                                                                           *    move.b  1(a1,d0.w),d3
05F5 7E04DB           (C:\Users\bhrou\gi):00859 [4]     1684            jmp   SSB_CC_ProcessYCenter                                       *    bra.w   loc_351F8
                      (C:\Users\bhrou\gi):00860                                                                                                                                                                                                                                           
                      (C:\Users\bhrou\gi):00861                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00862                                                                                           *
                      (C:\Users\bhrou\gi):00863                                                                                                                                                                   
05F8                  (C:\Users\bhrou\gi):00864                 SSB_InitShadow                                                            *loc_3529C:
05F8 39               (C:\Users\bhrou\gi):00865 [5]     1689            rts
05F9 BD244D           (C:\Users\bhrou\gi):00866 [8]     1697            jsr   SSSingleObjLoad2                                            *    jsrto   (SSSingleObjLoad2).l, JmpTo_SSSingleObjLoad2
05FC 2624             (C:\Users\bhrou\gi):00867 [3]     1700            bne   SSB_InitShadow_return                                       *    bne.w   return_3532C
05FE EF8860           (C:\Users\bhrou\gi):00868 [6]     1706            stu   ss_parent,x                                                 *    move.l  a0,objoff_34(a1)
0601 AFC860           (C:\Users\bhrou\gi):00869 [6]     1712            stx   ss_parent,u                                                 
0604 A6C4             (C:\Users\bhrou\gi):00870 [4]     1716            lda   id,u                                                        
0606 A784             (C:\Users\bhrou\gi):00871 [4]     1720            sta   id,x                                                        *    move.b  id(a0),id(a1)
0608 CC0205           (C:\Users\bhrou\gi):00872 [3]     1723            ldd   #$0205                                                      
060B A7881E           (C:\Users\bhrou\gi):00873 [5]     1728            sta   routine,x                                                   *    move.b  #4,routine(a1)
                      (C:\Users\bhrou\gi):00874                                                                                           *    move.l  #Obj63_MapUnc_34492,mappings(a1)
                      (C:\Users\bhrou\gi):00875                                                                                           *    move.w  #make_art_tile(ArtTile_ArtNem_SpecialFlatShadow,3,0),art_tile(a1)
                      (C:\Users\bhrou\gi):00876                                                                                           *    move.b  #4,render_flags(a1)
060E E703             (C:\Users\bhrou\gi):00877 [5]     1733            stb   priority,x                                                  *    move.b  #5,priority(a1)
0610 A6C868           (C:\Users\bhrou\gi):00878 [5]     1738            lda   angle,u                                                     *    move.b  angle(a0),d0
0613 8110             (C:\Users\bhrou\gi):00879 [2]     1740            cmpa  #$10                                                        *    cmpi.b  #$10,d0
0615 2E0C             (C:\Users\bhrou\gi):00880 [3]     1743            bgt   loc_352E6                                                   *    bgt.s   loc_352E6
0617 A602             (C:\Users\bhrou\gi):00881 [5]     1748            lda   render_flags,x                                              
0619 8A01             (C:\Users\bhrou\gi):00882 [2]     1750            ora   #render_xmirror_mask                                        *    bset    #0,render_flags(a1)
061B A702             (C:\Users\bhrou\gi):00883 [5]     1755            sta   render_flags,x
061D 8602             (C:\Users\bhrou\gi):00884 [2]     1757            lda   #2                                                          
061F A78862           (C:\Users\bhrou\gi):00885 [5]     1762            sta   ss_shadow_tilt,x                                            *    move.b  #2,objoff_2B(a1)
                      (C:\Users\bhrou\gi):00886                                                                                           *    move.l  a1,objoff_34(a0)
0622                  (C:\Users\bhrou\gi):00887                 SSB_InitShadow_return
0622 39               (C:\Users\bhrou\gi):00888 [5]     1767            rts                                                               *    rts
                      (C:\Users\bhrou\gi):00889                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00890                                                                                           *
0623                  (C:\Users\bhrou\gi):00891                 loc_352E6                                                                 *loc_352E6:
0623 8130             (C:\Users\bhrou\gi):00892 [2]     1769            cmpa  #$30                                                        *    cmpi.b  #$30,d0
0625 2E0C             (C:\Users\bhrou\gi):00893 [3]     1772            bgt   loc_352FE                                                   *    bgt.s   loc_352FE
0627 A602             (C:\Users\bhrou\gi):00894 [5]     1777            lda   render_flags,x                                              
0629 8A01             (C:\Users\bhrou\gi):00895 [2]     1779            ora   #render_xmirror_mask                                        *    bset    #0,render_flags(a1)
062B A702             (C:\Users\bhrou\gi):00896 [5]     1784            sta   render_flags,x
062D 8601             (C:\Users\bhrou\gi):00897 [2]     1786            lda   #1                                                          
062F A78862           (C:\Users\bhrou\gi):00898 [5]     1791            sta   ss_shadow_tilt,x                                            *    move.b  #1,objoff_2B(a1)
                      (C:\Users\bhrou\gi):00899                                                                                           *    move.l  a1,objoff_34(a0)
0632 39               (C:\Users\bhrou\gi):00900 [5]     1796            rts                                                               *    rts
                      (C:\Users\bhrou\gi):00901                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00902                                                                                           *
0633                  (C:\Users\bhrou\gi):00903                 loc_352FE                                                                 *loc_352FE:
0633 8150             (C:\Users\bhrou\gi):00904 [2]     1798            cmpa  #$50                                                        *    cmpi.b  #$50,d0
0635 2E06             (C:\Users\bhrou\gi):00905 [3]     1801            bgt   loc_35310                                                   *    bgt.s   loc_35310
0637 8600             (C:\Users\bhrou\gi):00906 [2]     1803            lda   #0                                                          
0639 A78862           (C:\Users\bhrou\gi):00907 [5]     1808            sta   ss_shadow_tilt,x                                            *    move.b  #0,objoff_2B(a1)
                      (C:\Users\bhrou\gi):00908                                                                                           *    move.l  a1,objoff_34(a0)
063C 39               (C:\Users\bhrou\gi):00909 [5]     1813            rts                                                               *    rts
                      (C:\Users\bhrou\gi):00910                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00911                                                                                           *
063D                  (C:\Users\bhrou\gi):00912                 loc_35310                                                                 *loc_35310:
063D 8170             (C:\Users\bhrou\gi):00913 [2]     1815            cmpa  #$70                                                        *    cmpi.b  #$70,d0
063F 2E06             (C:\Users\bhrou\gi):00914 [3]     1818            bgt   loc_35322                                                   *    bgt.s   loc_35322
0641 8601             (C:\Users\bhrou\gi):00915 [2]     1820            lda   #1                                                          
0643 A78862           (C:\Users\bhrou\gi):00916 [5]     1825            sta   ss_shadow_tilt,x                                            *    move.b  #1,objoff_2B(a1)
                      (C:\Users\bhrou\gi):00917                                                                                           *    move.l  a1,objoff_34(a0)
0646 39               (C:\Users\bhrou\gi):00918 [5]     1830            rts                                                               *    rts
                      (C:\Users\bhrou\gi):00919                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00920                                                                                           *
0647                  (C:\Users\bhrou\gi):00921                 loc_35322                                                                 *loc_35322:
0647 8602             (C:\Users\bhrou\gi):00922 [2]     1832            lda   #2                                                          
0649 A78862           (C:\Users\bhrou\gi):00923 [5]     1837            sta   ss_shadow_tilt,x                                            *    move.b  #2,objoff_2B(a1)
                      (C:\Users\bhrou\gi):00924                                                                                           *    move.l  a1,objoff_34(a0)
                      (C:\Users\bhrou\gi):00925                                                                                           *
                      (C:\Users\bhrou\gi):00926                                                                                           *return_3532C:
064C 39               (C:\Users\bhrou\gi):00927 [5]     1842            rts                                                               *    rts
                      (C:\Users\bhrou\gi):00928                                 
                      (C:\Users\bhrou\gi):00929                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00930                                                                                           *    dc.b   0
                      (C:\Users\bhrou\gi):00931                                                                                           *    dc.b   0    ; 1
                      (C:\Users\bhrou\gi):00932                                                                                           *    dc.b   0    ; 2
                      (C:\Users\bhrou\gi):00933                                                                                           *    dc.b $18    ; 3
                      (C:\Users\bhrou\gi):00934                                                                                           *    dc.b   0    ; 4
                      (C:\Users\bhrou\gi):00935                                                                                           *    dc.b $14    ; 5
                      (C:\Users\bhrou\gi):00936                                                                                           *    dc.b   0    ; 6
                      (C:\Users\bhrou\gi):00937                                                                                           *    dc.b $14    ; 7
                      (C:\Users\bhrou\gi):00938                                                                                           *    dc.b   0    ; 8
                      (C:\Users\bhrou\gi):00939                                                                                           *    dc.b $14    ; 9
                      (C:\Users\bhrou\gi):00940                                                                                           *    dc.b   0    ; 10
                      (C:\Users\bhrou\gi):00941                                                                                           *    dc.b   0    ; 11
                      (C:\Users\bhrou\gi):00942                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00943                                                                                           *
                      (C:\Users\bhrou\gi):00944                                                                                                                                                                   
064D                  (C:\Users\bhrou\gi):00945                 SSB_Shadow                                                                *loc_3533A:
064D 6DC863           (C:\Users\bhrou\gi):00946 [7]     1849            tst   ss_self_delete,u                                            *    tst.b   objoff_2A(a0)
0650 263F             (C:\Users\bhrou\gi):00947 [3]     1852            bne   SSB_DeleteShadow                                            *    bne.w   BranchTo_JmpTo63_DeleteObject
0652 AEC860           (C:\Users\bhrou\gi):00948 [6]     1858            ldx   ss_parent,u                                                 *    movea.l objoff_34(a0),a1 ; a1=object
0655 273A             (C:\Users\bhrou\gi):00949 [3]     1861            beq   SSB_DeleteShadow
0657 6D84             (C:\Users\bhrou\gi):00950 [6]     1867            tst   id,x
0659 2736             (C:\Users\bhrou\gi):00951 [3]     1870            beq   SSB_DeleteShadow
065B 6D8822           (C:\Users\bhrou\gi):00952 [7]     1877            tst   rsv_render_flags,x       ; only render shadow if parent     *    tst.b   render_flags(a1)
065E 2B01             (C:\Users\bhrou\gi):00953 [3]     1880            bmi   @a                       ; is on screen                     *    bmi.s   loc_3534E
0660 39               (C:\Users\bhrou\gi):00954 [5]     1885            rts                                                               *    rts
                      (C:\Users\bhrou\gi):00955                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00956                                                                                           *
0661                  (C:\Users\bhrou\gi):00957                 @a                                                                        *loc_3534E:
                      (C:\Users\bhrou\gi):00958                                                                                           *    moveq   #9,d0
                      (C:\Users\bhrou\gi):00959                                                                                           *    sub.b   anim(a1),d0
                      (C:\Users\bhrou\gi):00960                                                                                           *    addi_.b #1,d0
                      (C:\Users\bhrou\gi):00961                                                                                           *    cmpi.b  #$A,d0
                      (C:\Users\bhrou\gi):00962                                                                                           *    bne.s   loc_35362
                      (C:\Users\bhrou\gi):00963                                                                                           *    move.w  #9,d0
                      (C:\Users\bhrou\gi):00964                                                                                           *
                      (C:\Users\bhrou\gi):00965                                                                                           *loc_35362:
                      (C:\Users\bhrou\gi):00966                                                                                           *    move.w  d0,d1
                      (C:\Users\bhrou\gi):00967                                                                                           *    add.w   d0,d0
                      (C:\Users\bhrou\gi):00968                                                                                           *    add.w   d1,d0
                      (C:\Users\bhrou\gi):00969                                                                                           *    moveq   #0,d1
0661 A6C862           (C:\Users\bhrou\gi):00970 [5]     1890            lda   ss_shadow_tilt,u                                            *    move.b  objoff_2B(a0),d1
0664 271E             (C:\Users\bhrou\gi):00971 [3]     1893            beq   loc_3538A                                                   *    beq.s   loc_3538A
0666 8101             (C:\Users\bhrou\gi):00972 [2]     1895            cmpa  #1                                                          *    cmpi.b  #1,d1
0668 270D             (C:\Users\bhrou\gi):00973 [3]     1898            beq   loc_35380                                                   *    beq.s   loc_35380
                      (C:\Users\bhrou\gi):00974                                                                                           *    add.w   d1,d0
                      (C:\Users\bhrou\gi):00975                                                                                           *    move.w  #make_art_tile(ArtTile_ArtNem_SpecialSideShadow,3,0),art_tile(a0)
066A A68865           (C:\Users\bhrou\gi):00976 [5]     1903            lda   mapping_frame,x
066D 8E06BD           (C:\Users\bhrou\gi):00977 [3]     1906            ldx   #Tbl_SSShadow_Side
0670 EC86             (C:\Users\bhrou\gi):00978 [6]     1912            ldd   a,x
0672 ED4C             (C:\Users\bhrou\gi):00979 [6]     1918            std   image_set,u
0674 7E774C           (C:\Users\bhrou\gi):00980 [4]     1922            jmp   DisplaySprite                                                                               
                      (C:\Users\bhrou\gi):00981                                                                                           *    bra.s   loc_35392
                      (C:\Users\bhrou\gi):00982                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00983                                                                                           *
0677                  (C:\Users\bhrou\gi):00984                 loc_35380                                                                 *loc_35380:
                      (C:\Users\bhrou\gi):00985                                                                                           *    add.w   d1,d0
                      (C:\Users\bhrou\gi):00986                                                                                           *    move.w  #make_art_tile(ArtTile_ArtNem_SpecialDiagShadow,3,0),art_tile(a0)
0677 A68865           (C:\Users\bhrou\gi):00987 [5]     1927            lda   mapping_frame,x
067A 8E06A9           (C:\Users\bhrou\gi):00988 [3]     1930            ldx   #Tbl_SSShadow_Diag
067D EC86             (C:\Users\bhrou\gi):00989 [6]     1936            ldd   a,x
067F ED4C             (C:\Users\bhrou\gi):00990 [6]     1942            std   image_set,u
0681 7E774C           (C:\Users\bhrou\gi):00991 [4]     1946            jmp   DisplaySprite                                                                                          
                      (C:\Users\bhrou\gi):00992                                                                                           *    bra.s   loc_35392
                      (C:\Users\bhrou\gi):00993                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):00994                                                                                           *
0684                  (C:\Users\bhrou\gi):00995                 loc_3538A                                                                 *loc_3538A:
                      (C:\Users\bhrou\gi):00996                                                                                           *    add.w   d1,d0
                      (C:\Users\bhrou\gi):00997                                                                                           *    move.w  #make_art_tile(ArtTile_ArtNem_SpecialFlatShadow,3,0),art_tile(a0)
0684 A68865           (C:\Users\bhrou\gi):00998 [5]     1951            lda   mapping_frame,x
0687 8E0695           (C:\Users\bhrou\gi):00999 [3]     1954            ldx   #Tbl_SSShadow_Flat
068A EC86             (C:\Users\bhrou\gi):01000 [6]     1960            ldd   a,x
068C ED4C             (C:\Users\bhrou\gi):01001 [6]     1966            std   image_set,u  
068E 7E774C           (C:\Users\bhrou\gi):01002 [4]     1970            jmp   DisplaySprite                                                                                        
                      (C:\Users\bhrou\gi):01003                                                                                           *
                      (C:\Users\bhrou\gi):01004                                                                                           *loc_35392:
                      (C:\Users\bhrou\gi):01005                                                                                           *    move.b  d0,mapping_frame(a0)
                      (C:\Users\bhrou\gi):01006                                                                                           *    bra.w   JmpTo44_DisplaySprite
                      (C:\Users\bhrou\gi):01007                                                                                           *
                      (C:\Users\bhrou\gi):01008                                                                                           *BranchTo_JmpTo63_DeleteObject ; BranchTo
0691                  (C:\Users\bhrou\gi):01009                 SSB_DeleteShadow
0691 7E8659           (C:\Users\bhrou\gi):01010 [4]     1974            jmp   DeleteObject                                                *    jmpto   (DeleteObject).l, JmpTo63_DeleteObject
                      (C:\Users\bhrou\gi):01011                                 
                      (C:\Users\bhrou\gi):01012                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):01013                                                                                           *
                      (C:\Users\bhrou\gi):01014                                                                                           *loc_3539E:
                      (C:\Users\bhrou\gi):01015                                                                                           *    subq.b  #1,anim_frame_duration(a0)
                      (C:\Users\bhrou\gi):01016                                                                                           *    bpl.s   return_353E8
                      (C:\Users\bhrou\gi):01017                                                                                           *    moveq   #0,d0
                      (C:\Users\bhrou\gi):01018                                                                                           *    move.b  anim(a0),d0
                      (C:\Users\bhrou\gi):01019                                                                                           *    add.w   d0,d0
                      (C:\Users\bhrou\gi):01020                                                                                           *    adda.w  (a1,d0.w),a1
                      (C:\Users\bhrou\gi):01021                                                                                           *    move.b  (a1),anim_frame_duration(a0)
                      (C:\Users\bhrou\gi):01022                                                                                           *    moveq   #0,d1
                      (C:\Users\bhrou\gi):01023                                                                                           *    move.b  anim_frame(a0),d1
                      (C:\Users\bhrou\gi):01024                                                                                           *    move.b  1(a1,d1.w),d0
                      (C:\Users\bhrou\gi):01025                                                                                           *    bpl.s   loc_353CA
                      (C:\Users\bhrou\gi):01026                                                                                           *    move.b  #0,anim_frame(a0)
                      (C:\Users\bhrou\gi):01027                                                                                           *    move.b  1(a1),d0
                      (C:\Users\bhrou\gi):01028                                                                                           *
                      (C:\Users\bhrou\gi):01029                                                                                           *loc_353CA:
                      (C:\Users\bhrou\gi):01030                                                                                           *    andi.b  #$7F,d0
                      (C:\Users\bhrou\gi):01031                                                                                           *    move.b  d0,mapping_frame(a0)
                      (C:\Users\bhrou\gi):01032                                                                                           *    move.b  status(a0),d1
                      (C:\Users\bhrou\gi):01033                                                                                           *    andi.b  #3,d1
                      (C:\Users\bhrou\gi):01034                                                                                           *    andi.b  #$FC,render_flags(a0)
                      (C:\Users\bhrou\gi):01035                                                                                           *    or.b    d1,render_flags(a0)
                      (C:\Users\bhrou\gi):01036                                                                                           *    addq.b  #1,anim_frame(a0)
                      (C:\Users\bhrou\gi):01037                                                                                           *
                      (C:\Users\bhrou\gi):01038                                                                                           *return_353E8:
                      (C:\Users\bhrou\gi):01039                                                                                           *    rts
                      (C:\Users\bhrou\gi):01040                                                                                           *; ===========================================================================
                      (C:\Users\bhrou\gi):01041                                                                                           *byte_353EA:
                      (C:\Users\bhrou\gi):01042                                                                                           *    dc.b $38
                      (C:\Users\bhrou\gi):01043                                                                                           *    dc.b $48    ; 1
                      (C:\Users\bhrou\gi):01044                                                                                           *    dc.b $2A    ; 2
                      (C:\Users\bhrou\gi):01045                                                                                           *    dc.b $56    ; 3
                      (C:\Users\bhrou\gi):01046                                                                                           *    dc.b $1C    ; 4
                      (C:\Users\bhrou\gi):01047                                                                                           *    dc.b $64    ; 5
                      (C:\Users\bhrou\gi):01048                                                                                           *    dc.b  $E    ; 6
                      (C:\Users\bhrou\gi):01049                                                                                           *    dc.b $72    ; 7
                      (C:\Users\bhrou\gi):01050                                                                                           *    dc.b   0    ; 8
                      (C:\Users\bhrou\gi):01051                                                                                           *    dc.b $80    ; 9
                      (C:\Users\bhrou\gi):01052                                                                                           *byte_353F4:
                      (C:\Users\bhrou\gi):01053                                                                                           *    dc.b $40
                      (C:\Users\bhrou\gi):01054                                                                                           *    dc.b $30    ; 1
                      (C:\Users\bhrou\gi):01055                                                                                           *    dc.b $50    ; 2
                      (C:\Users\bhrou\gi):01056                                                                                           *    dc.b $20    ; 3
                      (C:\Users\bhrou\gi):01057                                                                                           *    dc.b $60    ; 4
                      (C:\Users\bhrou\gi):01058                                                                                           *    dc.b $10    ; 5
                      (C:\Users\bhrou\gi):01059                                                                                           *    dc.b $70    ; 6
                      (C:\Users\bhrou\gi):01060                                                                                           *    dc.b   0    ; 7
                      (C:\Users\bhrou\gi):01061                                                                                           *    dc.b $80    ; 8
                      (C:\Users\bhrou\gi):01062                                                                                           *    dc.b   0    ; 9
                      (C:\Users\bhrou\gi):01063                                                                                                                                               
0694                  (C:\Users\bhrou\gi):01064                 is_out_of_screen
0694 00               (C:\Users\bhrou\gi):01065                         fcb   $00
                      (C:\Users\bhrou\gi):01066                         
0695                  (C:\Users\bhrou\gi):01067                 Tbl_SSShadow_Flat
0695 3AAA             (C:\Users\bhrou\gi):01068                         fdb   Img_SSShadow_000
0697 3A54             (C:\Users\bhrou\gi):01069                         fdb   Img_SSShadow_003
0699 39FE             (C:\Users\bhrou\gi):01070                         fdb   Img_SSShadow_006
069B 39A8             (C:\Users\bhrou\gi):01071                         fdb   Img_SSShadow_009
069D 3C5D             (C:\Users\bhrou\gi):01072                         fdb   Img_SSShadow_012
069F 3C07             (C:\Users\bhrou\gi):01073                         fdb   Img_SSShadow_015
06A1 3BB1             (C:\Users\bhrou\gi):01074                         fdb   Img_SSShadow_018
06A3 3E9D             (C:\Users\bhrou\gi):01075                         fdb   Img_SSShadow_021
06A5 3E47             (C:\Users\bhrou\gi):01076                         fdb   Img_SSShadow_024
06A7 3DF1             (C:\Users\bhrou\gi):01077                         fdb   Img_SSShadow_027
                      (C:\Users\bhrou\gi):01078                 
06A9                  (C:\Users\bhrou\gi):01079                 Tbl_SSShadow_Diag
06A9 3A89             (C:\Users\bhrou\gi):01080                         fdb   Img_SSShadow_001
06AB 3A33             (C:\Users\bhrou\gi):01081                         fdb   Img_SSShadow_004
06AD 39DD             (C:\Users\bhrou\gi):01082                         fdb   Img_SSShadow_007
06AF 3C92             (C:\Users\bhrou\gi):01083                         fdb   Img_SSShadow_010
06B1 3C3C             (C:\Users\bhrou\gi):01084                         fdb   Img_SSShadow_013
06B3 3BE6             (C:\Users\bhrou\gi):01085                         fdb   Img_SSShadow_016
06B5 3B90             (C:\Users\bhrou\gi):01086                         fdb   Img_SSShadow_019
06B7 3E7C             (C:\Users\bhrou\gi):01087                         fdb   Img_SSShadow_022
06B9 3E26             (C:\Users\bhrou\gi):01088                         fdb   Img_SSShadow_025
06BB 3DD0             (C:\Users\bhrou\gi):01089                         fdb   Img_SSShadow_028
                      (C:\Users\bhrou\gi):01090                 
06BD                  (C:\Users\bhrou\gi):01091                 Tbl_SSShadow_Side
06BD 3A68             (C:\Users\bhrou\gi):01092                         fdb   Img_SSShadow_002
06BF 3A12             (C:\Users\bhrou\gi):01093                         fdb   Img_SSShadow_005
06C1 39BC             (C:\Users\bhrou\gi):01094                         fdb   Img_SSShadow_008
06C3 3C71             (C:\Users\bhrou\gi):01095                         fdb   Img_SSShadow_011
06C5 3C1B             (C:\Users\bhrou\gi):01096                         fdb   Img_SSShadow_014
06C7 3BC5             (C:\Users\bhrou\gi):01097                         fdb   Img_SSShadow_017
06C9 3EB1             (C:\Users\bhrou\gi):01098                         fdb   Img_SSShadow_020
06CB 3E5B             (C:\Users\bhrou\gi):01099                         fdb   Img_SSShadow_023
06CD 3E05             (C:\Users\bhrou\gi):01100                         fdb   Img_SSShadow_026
06CF 3DAF             (C:\Users\bhrou\gi):01101                         fdb   Img_SSShadow_029                                                                                                                                            
                      (C:\Users\bhrou\gi):01102                                                                                                                                                                   
06D1                  (C:\Users\bhrou\gi):01103                 Sine_Data                                                                 *Sine_Data:      BINCLUDE        "misc/sinewave.bin"
06D1 00000006000C0012 (C:\Users\bhrou\gi):01104                         INCLUDEBIN "./Engine/Math/sinewave.bin"                                 
     0019001F0025002B
     00310038003E0044
     004A00500056005C
     00610067006D0073
     0078007E00830088
     008E00930098009D
     00A200A700AB00B0
     00B500B900BD00C1
     00C500C900CD00D1
     00D400D800DB00DE
     00E100E400E700EA
     00EC00EE00F100F3
     00F400F600F800F9
     00FB00FC00FD00FE
     00FE00FF00FF00FF
     010000FF00FF00FF
     00FE00FE00FD00FC
     00FB00F900F800F6
     00F400F300F100EE
     00EC00EA00E700E4
     00E100DE00DB00D8
     00D400D100CD00C9
     00C500C100BD00B9
     00B500B000AB00A7
     00A2009D00980093
     008E00880083007E
     00780073006D0067
     0061005C00560050
     004A0044003E0038
     0031002B0025001F
     00190012000C0006
     0000FFFAFFF4FFEE
     FFE7FFE1FFDBFFD5
     FFCFFFC8FFC2FFBC
     FFB6FFB0FFAAFFA4
     FF9FFF99FF93FF8B
     FF88FF82FF7DFF78
     FF72FF6DFF68FF63
     FF5EFF59FF55FF50
     FF4BFF47FF43FF3F
     FF3BFF37FF33FF2F
     FF2CFF28FF25FF22
     FF1FFF1CFF19FF16
     FF14FF12FF0FFF0D
     FF0CFF0AFF08FF07
     FF05FF04FF03FF02
     FF02FF01FF01FF01
     FF00FF01FF01FF01
     FF02FF02FF03FF04
     FF05FF07FF08FF0A
     FF0CFF0DFF0FFF12
     FF14FF16FF19FF1C
     FF1FFF22FF25FF28
     FF2CFF2FFF33FF37
     FF3BFF3FFF43FF47
     FF4BFF50FF55FF59
     FF5EFF63FF68FF6D
     FF72FF78FF7DFF82
     FF88FF8BFF93FF99
     FF9FFFA4FFAAFFB0
     FFB6FFBCFFC2FFC8
     FFCFFFD5FFDBFFE1
     FFE7FFEEFFF4FFFA
     00000006000C0012
     0019001F0025002B
     00310038003E0044
     004A00500056005C
     00610067006D0073
     0078007E00830088
     008E00930098009D
     00A200A700AB00B0
     00B500B900BD00C1
     00C500C900CD00D1
     00D400D800DB00DE
     00E100E400E700EA
     00EC00EE00F100F3
     00F400F600F800F9
     00FB00FC00FD00FE
     00FE00FF00FF00FF
                      (C:\Users\bhrou\gi):01105                 
                      (C:\Users\bhrou\gi):01106                         ; -------------------------------------------------------------------------------------------------------------        
                      (C:\Users\bhrou\gi):01107                         ; Sinus/Cosinus
                      (C:\Users\bhrou\gi):01108                         ; -------------------------------------------------------------------------------------------------------------             
                      (C:\Users\bhrou\gi):01109                         ;
                      (C:\Users\bhrou\gi):01110                         ; 0000 0006 000c ... 00ff 0100 00ff ... 0006 0000 fffa ... ff01 ff00 ff01 ... fffa 0000 0006 ... 00ff
                      (C:\Users\bhrou\gi):01111                         ; |______________________________________________________________________________|
                      (C:\Users\bhrou\gi):01112                         ;  sin values from index $0000 to index $01ff, value range: $ff00 (-256) to $0100 (256) 
                      (C:\Users\bhrou\gi):01113                         ;                         |_________________________________________________________________________|
                      (C:\Users\bhrou\gi):01114                         ;                          cos values from index $0080 to index $027f, value range: $ff00 (-256) to $0100 (256)
                      (C:\Users\bhrou\gi):01115                         ;
                      (C:\Users\bhrou\gi):01116                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01117                         
0951                  (C:\Users\bhrou\gi):01118                 SpecialPerspective
0951 007000EA01D002A4 (C:\Users\bhrou\gi):01119                         INCLUDEBIN "./game-mode/special-stage/Special stage object perspective data.bin" 
     035403EC046604E0
     055A05E6064806A4
     06FA074A079A0808
     088819B019B019B0
     19B00902097C09FC
     0A7C0AF00B4C0BA2
     0BF80C480D280E08
     0EAC0F2C0FA61032
     10D0115611BE11BE
     11BE11BE11BE11BE
     11BE123812BE13AA
     1484154615F616BE
     177A181E18B01936
     00147BDDB8E60000
     800289AC00008619
     6F8B00008C285C73
     000091324F630000
     983A455700009D40
     3E4E0000A4453846
     0000A949323F0040
     AF4C2E3A0040B54E
     2C370040BC512832
     0040C152252F0040
     C755242D0040CD56
     212A0043D3571D25
     0047D8571C23004A
     E05A1B22004EE55A
     1920004EEA5A1920
     005500267BDDB8E6
     0000800289AC0000
     8619708C00008C28
     5D75000091324F63
     0000983A45570000
     9D403E4E0000A445
     37450000A9493340
     0031B04C2E3A0031
     B54E2B360031BB51
     28320038C153252F
     003CC755242D0040
     CC55212A0040D155
     1F270040D5551E26
     0040D9531C240040
     DD521B220040E050
     1A210043E44D1A21
     0043E74A181F0047
     E846181E0047EC42
     181E0047EE3E171D
     004AF03A151B004A
     F235151B004EF330
     141A004EF42B1419
     0051F62514190055
     F82013180055F91B
     13180051FA151217
     004EFC1012170040
     FC0912170000FD02
     11160000FEFC0A0D
     0000FFF607090000
     00237BDDB8E60000
     800289AC00008619
     6F8B00008C285C74
     0000923250650000
     983A455700009E40
     3E4E0000A4453846
     0000A94933400000
     B04C303C0000B44E
     2C370000B84F2833
     0000BC4E26300000
     C04D242D0000C34B
     212A0000C6491F27
     0000C8461D250000
     CA421C240000CC3F
     1E260000CE3A1A21
     0000D037181F0000
     D131181E0000D32D
     161C0000D428151B
     0000D522141A0000
     D61C141A0000D817
     141A0000D8111419
     0000D90B14190000
     DA0513180000DBFF
     13180000DCF81318
     0000DCF213180000
     DCEB11160000DDE4
     11160000001D7BDD
     B8E60000800289AC
     000086186E8A0000
     8C285C7300009132
     4F630000983A4557
     00009C3E3E4E0000
     A04138460000A442
     323F0000A7422E3A
     0000A9412B360000
     AB3E28320000AC3B
     252F0000AE38232C
     0000B034212A0000
     B02F20280000B22B
     1F270000B3261C23
     0000B4211B220000
     B41B1A210000B515
     1A210000B50F1920
     0000B609181E0000
     B703171D0000B8FD
     161C0000B8F6151B
     0000B8F1151B0000
     B8E9141A0000B9E3
     1419000000197BDD
     B8E60000800289AC
     000080EC81A20000
     80FB698400008415
     6C88000088215D75
     00008A2750640000
     8C2A465800008E2A
     405000008F293846
     0000902834420000
     9024303C00009021
     2C380000901C2934
     0000911827310000
     9112242E0000920D
     232C00009208212A
     000092001F270000
     92FB1E26000092F5
     1C24000093EF1C23
     000093E81A210000
     93E11920000094DA
     19200000001480DD
     BEEE000080FD90B4
     0000800C74910000
     8014607900008018
     5469000080194A5D
     0000801842530000
     80163C4B00008013
     36440000800F323F
     0000800A2E3A0000
     80062B3600008000
     2833000080FA2630
     000080F6242D0000
     80EF222B000080E8
     212A000080E11F27
     000080DB1D250000
     80D41C2400000014
     80D2C8FB000080F6
     95BB000080077795
     00008010627B0000
     8015566C00008016
     4B5E000080164354
     000080143C4C0000
     801137450000800D
     323F000080092E3A
     000080042B360000
     80FE2833000080F9
     2630000080F3242D
     000080ED222B0000
     80E62029000080E0
     1F27000080D91E26
     000080D31C240000
     001480C4CCFF0000
     80ED9CC300008000
     7A990000800B647E
     00008010586E0000
     80124C6000008012
     4456000080113D4D
     0000800E38460000
     800B334000008007
     303C000080022C37
     000080FC29340000
     80F72630000080F1
     242E000080ED222B
     000080EA20290000
     80E91E26000080E9
     1C24000080E91B22
     0000001780BECCFF
     000080E0A1CA0000
     80F77D9D00008005
     67810000800B5A71
     0000800E4E620000
     800E45570000800D
     3E4E0000800A3847
     0000800734410000
     80042F3B00008002
     2B36000080022833
     00008003252F0000
     8005232C00008007
     20290000800A1E26
     0000800E1C240000
     80121C2318678016
     1A21116E801B181F
     0E718020181E0A75
     8026151B07780010
     80B8CCFF000080D2
     A4CE000080035C73
     000080074F630000
     800B45570000800F
     3D4D000080143745
     00008019313E0000
     801E2D3900008024
     28331C63802B2630
     18678031242D156A
     8037212A116E803E
     1F270E7180451D25
     0A75804C1C230778
     000F80B8CCFF0000
     80C0AAD5000080E6
     84A5000080016883
     00008015586E0000
     80264A5D00008033
     4152000080403A49
     2A55804B3442235C
     80552F3B20608060
     2B361C6380692833
     18678073252F116E
     807D232C0E718084
     20290778000E80B8
     CCFF000080C5A4CE
     000080F27E9E0000
     8014657F0000802C
     546900008040485A
     2A55804F3F4F2758
     805D3847235C806B
     3340AC6380782F3B
     156A80822B36116E
     808C28320E718098
     252F0A7580A2232C
     0778000D80B8CCFF
     000080D59CC30000
     8000799800008021
     6078000080365166
     0000804947590000
     80593E4E27588067
     3846235C8074323F
     206080802E3A1C63
     808A2A35156A8096
     28320E7180A0252F
     0778000D80B8CCFF
     000080E395BB0000
     8000799800008021
     6078000080365166
     0000804947590000
     80593E4E27588067
     3846235C8074323F
     206080802E3A1C63
     808A2A35156A8096
     28320E7180A0252F
     0778001280B8CCFF
     000080EC93B80000
     801073900000802A
     5D750000803F4F63
     0000805144560000
     805F3C4C2060806C
     37451C558078313E
     155C80842D391163
     808E2934006A8296
     26300071849D242D
     007186A3212A0071
     88A91F2700718CAE
     1C24007590B21C24
     007893B71A210078
     001580BCC2F30000
     80F58DB100008015
     708D0000802E5B72
     000080424D610000
     8053435400008060
     3C4B0000836B3543
     00008473303C0000
     887A2C3700008B7F
     2833000090852630
     00009389232C0040
     988C202900479C90
     1F27004AA0931C24
     004EA5961B220051
     AA981A210055B09A
     181F0058B49C181E
     005CBA9E161C0060
     001480D2B9E80000
     800688AB00008124
     6C88000084365970
     000088434D610000
     8C4E435400009057
     3C4B0000955D3543
     00009A62303D0000
     9F672C380000A46B
     29340000AA6E2630
     0031B071242D0035
     B573212A0038BB75
     2028003CC0771E26
     0040C5791C230043
     CC7A1A210047D17B
     181F004ED87C181E
     005500147BDDB8E6
     0000800289AC0000
     86196D8900008C28
     5B72000091324C60
     0000983943540000
     9C403C4B0000A444
     36440000A948313E
     0000AF4C2D390000
     B54E2A350000BB51
     2630002AC053242D
     0031C755212A0035
     CD5620280038D457
     1E260040D9591B22
     0043E05A1B220047
     E65B1A21004AEC5E
     181F004E00157BDD
     B8E60000800289AC
     000086196D890000
     8C28597000009232
     4C600000983A4354
     00009E403C4B0000
     A44536440000A948
     303D0000AF4C2C38
     0000B54E2A350000
     BC5126300031C153
     242D0035C855222B
     0038CD571F27003C
     D35A1E260040D85D
     1C240047DC601C24
     004EE0641B220055
     E369181F0058E66E
     181E005C00157BDD
     B8E60000800289AC
     000086196E8A0000
     8C285B7200009132
     4F630000983A4456
     00009E403D4D0000
     A44437450000A949
     323F0000B04C2E3A
     0000B54F2B360000
     BA5328320000BE58
     242D0000C25C242D
     0040C5621F270047
     C8681E26004ECB6E
     1C24005CCC731B22
     005CCF791A210063
     D180181F006AD387
     181E007100137BDD
     B8E60000800289AC
     000086196D890000
     8C285B7200009132
     4F630000983A4456
     00009D413D4D0000
     A24836440000A550
     303C0000A8562C38
     0000AA5E28330000
     AC66252F0055AE6D
     242D0060B074212A
     005CB17C1F270060
     B2831D250063B38A
     1C24006AB4921B22
     0071B59919200078
     000F7BDDB8E60000
     800289AC0000851C
     6D890000882E5B72
     00008B3E4C600000
     8C4A445500008E57
     3B4A00008F613442
     0000906C303C004E
     90752C370055907F
     283300639188252F
     00679291232C006E
     9299212A007192A2
     1F270078000E80D3
     B1DE000080FD85A7
     0000801969840000
     802E586E00008040
     4B5E0000804E4152
     0000805B3A490000
     80673442233C8072
     303C1C63807D2B36
     186780872833156A
     8092252F0E71809B
     232C0A7580A3212A
     0778000E80D7A9D4
     0000800081A20000
     8020688200008037
     566C00008048485B
     0000805740510000
     8065394800008071
     3340233C807D2F3B
     1C6380872B361867
     80912832156A809B
     242E0E7180A6232C
     0A7580AF20290778
     000D80E197BD0000
     8007759300008021
     5F77000080365064
     0000804745570000
     80553D4D00008062
     3745233C806E313E
     1C63807A2D391867
     80842934156A808E
     26300E718098242D
     0A7580A2212A0778
     002580D59DC50000
     80FD7A990000801A
     637C000080305267
     0000804247590000
     80513E4E0000805E
     3846235C806B323F
     206080772E3A1C63
     80812B36156A8089
     2832116E8090252F
     0E718094232C0E71
     8097212A0E718099
     2028116E809B1E26
     116E809B1C24116E
     809B1B22156A809A
     1A211C6380981920
     20608097181E2758
     8094171D00008092
     161C0000808F151B
     0000808C141A0000
     8088141900008084
     1318000080801318
     0000807C12170000
     8078111600008073
     10150000806E1015
     0000806910150000
     806510140000805F
     0F130000805A0E12
     000081550E120000
     002580D299C00000
     80FE789600008017
     60780000802F5065
     0000803F45570000
     804E3E4E00008059
     384700008061323F
     000080652D390000
     806A2C370000806D
     28330000806C2630
     0000806C242D0000
     806C222B0000806B
     2028000080681D25
     000080641C240000
     80611B220000805E
     1A210000805A1A21
     00008056181E0000
     8053151B0000804D
     151B000080481419
     0000804313180000
     803F131800008039
     1318000080341318
     0000802E13180000
     8028121700008022
     11160000801C1116
     0000831710150000
     841110150000840D
     0F13000086090F13
     000088050F130000
     001B80D994B90000
     8000749200008019
     6078000080275267
     00008031485A0000
     803640510000803B
     3A490000803B3442
     0000803A303C0000
     803A2C3800008039
     2934000080352630
     00008031242D0000
     802D212A00008029
     2028000080251E26
     0000801F1D250000
     801B1A2100008015
     1A21000080111A21
     0000800A181E0000
     8004181F000080FE
     181E000080F6181E
     000080F1171D0000
     80EB151B000080E4
     151B0000001580EC
     88AB000080006E8A
     0000800C5B720000
     80124E6200008015
     4658000080164050
     0000801539480000
     8014344200008011
     303C0000800E2D39
     0000800A2B360000
     8005273100008001
     242E00008000242D
     000080FB242D0000
     80F5212A000080EF
     2029000080E91F27
     000080E31D250000
     80DC1C24000080D5
     1C230000001480E5
     99C0000080FC7998
     0000800B817E0000
     8012576D00008016
     4C5F000080174354
     000080163C4C0000
     8014374500008011
     323F0000800E2F3B
     000080092C370000
     8005293400008001
     2630000080FB242D
     000080F5222B0000
     80EF2029000080E8
     1F27000080E21E26
     000080DB1C240000
     80D51A2100000017
     80E99FC700008000
     7C9C0000800E6781
     00008016586F0000
     80194D6100008019
     4456000080183D4D
     0000801638460000
     8013323F0000800F
     2E3A0000800B2B36
     0000800728330000
     80012630000080FC
     242D000080F6222B
     000080F220280000
     82EB1E26000084E8
     1D25000087E41B22
     00008AE11A210000
     8CDE1A21001891DB
     181F002094D8181E
     0023001A80EBA5CF
     0000800381A20000
     8011698400008016
     59700000801A4D61
     0000801B44560000
     801B3D4D00008018
     3847000080143340
     000080112E3A0000
     800C2B3600008008
     2833000080052630
     00008003242D0000
     8001202900008CFF
     2028000090FD1F27
     002094FB1D250023
     98F91C2300279CF8
     1B22002AA0F71920
     0031A5F6181E0035
     AAF5181E003CAFF4
     161C0040B3F3151B
     0043B8F2151B0047
     001680EAACD80000
     800484A500008011
     6C87000080185B72
     0000801A4F630000
     801C45570000801B
     3D4D0000841B3745
     0000861A323F0000
     8A1A2E3A00008A1A
     29340000901A2630
     0000951A242E0000
     9B1A222B00009D1A
     1F270000A21A1D25
     0000A61A1E26002E
     AC1A1C240035B01A
     1C230038B51A1A21
     0040BB1A19200043
     C01A181E00470011
     80C1B4E200008001
     89AC000080126F8B
     0000841E59700000
     88254D6100008C2B
     4354000091313C4B
     0000953335430000
     9A35313E0000A038
     2D390000A43B2833
     0000AA3C26300000
     B03E242D002AB53F
     232C0031BB402028
     0031C0421E260038
     C7431C2400400014
     7BDDB8E600008002
     89AC0000871A6E8A
     00008C285B720000
     91314F6300009839
     455700009D403D4D
     0000A44537450000
     A949323F0000B04D
     2E3A0000B54F2B36
     0000BB5128320000
     C153252F0000C755
     242D0000CD56212A
     0000D4571E260000
     D9591C240000E05A
     1B220047E65B1A21
     004EEC5C181F0055
     00167BDDB8E60000
     800289AC0000871A
     6E8A00008C285B72
     000091314F630000
     9839455700009D40
     3D4D0000A4453745
     0000A949323F0000
     B04D2E3A0000B54F
     2B360000BB512832
     0000C153252F0000
     C755242D0000CD56
     212A0000D4571E26
     0000D9591C240000
     E05A1B220040E35B
     1920004EE75C181F
     0051EA5D171D0058
     ED5E161C005C0027
     7BDDB8E600008002
     89AC0000871A6E8A
     00008C285B720000
     91314F6300009839
     455700009D403D4D
     0000A44537450000
     A949323F0000B04D
     2E3A0000B64E2934
     0000BC5126300000
     C053242D0000C455
     212A0000C8571F27
     0000CB581C240000
     CE5A1B220000D05B
     1A210035D25D181E
     0038D45E181E003C
     D55F161C0040D860
     151B0040D960141A
     0040DA6113180040
     DC6213180040DC62
     12170040DE621116
     0043DF6310150047
     E06310150047E065
     1014004AE1660F13
     004AE2660F13004A
     E3660E12004AE467
     0E12004EE5670E12
     0051E6670C100055
     E7670C0F0055E868
     0C0F0055E8680C0F
     005500247BDDB8E6
     0000800289AC0000
     871A6E8A00008C28
     5B72000091314F63
     0000983945570000
     9E3F3B4A0000A344
     34420000A64A2E3A
     0000AA4D2A350000
     AC5027310000AF53
     242D0000B0552029
     0000B2571F270000
     B3591C240000B45A
     1A210000B55B1920
     0000B65C181E0000
     B75E171D0000B85E
     151B0000B85F141A
     0000B96114190000
     BA6113180000BB61
     12170000BC621116
     0000BC6310150000
     BC6310150000BC64
     10140000BD650F13
     0000BE660D110000
     BF670C100000C068
     0C0F0000C0690A0D
     0000C16A080B0000
     C26B07090000C36C
     0608000000207BDD
     B8E60000800289AC
     000086196B860000
     8A2A566C00008C36
     465800008D3E3E4E
     00008F4435430000
     90492F3B0000904D
     2B36000091502731
     00009153242D0000
     9255212A00009357
     1F27000093581C24
     0000935A1A210000
     945C19200000945D
     181E0000945E171D
     0000945F151B0000
     9460141A00009461
     1419000095611217
     0000956211160000
     9563101500009564
     1015000095650F13
     000096660D110000
     96670B0E00009668
     090C00009669080A
     0000976A07090000
     976B06080000001D
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     000080581F270000
     805A1C240000805B
     1B220000805D1920
     0000805E181E0000
     805F161C00008060
     151B00008061141A
     0000806114190000
     8062131800008063
     1116000080631116
     0000806410150000
     8064101400008065
     0F13000080650F13
     000080660E120000
     80660E1200000021
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     000080581F270000
     805A1C240000805B
     1B220000805D1920
     0000805E181E0000
     805F161C00008060
     151B00008061141A
     0000806114190000
     8062131800008063
     1116000080631217
     0000816510150000
     8264101500408364
     1014004084640F13
     004086650F130040
     88650E1200408A66
     0E1200408C660D11
     00478F660D11004A
     91660C10004E001F
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     000080581F270000
     805A1C240000805B
     1B220000805D1920
     0000805E181E0000
     805F161C00008060
     151B00008060151B
     0000816114190000
     8261131800408462
     1318004085631217
     0040876311160040
     8963101500408C64
     101500408E641014
     004791640F13004A
     94650E12004E9765
     0E12004E9A650D11
     0055001B80F891B6
     000080156D890000
     80285B7200008035
     4B5E0000803E4050
     0000804537450000
     804A303D0000804E
     2C37000080522832
     00008054242D0000
     8056212A00008058
     1F270000805A1C24
     0000805B1B220000
     805C1A210000815D
     181F0000825D181E
     0040845E171D0040
     865F151B00408860
     141A00408B611318
     00408D6113180040
     9062121700409462
     1116004797631015
     004A9A631014004E
     9E640F13004E0018
     80F891B600008015
     6D89000080285B72
     000080354B5E0000
     803E405000008045
     37450000804A303D
     0000804E2C370000
     8052283200008054
     242D00008056212A
     0000815620280000
     83581E260000855A
     1C240040885B1A21
     00408A5C181F0040
     8D5D181E0040905E
     181E0040945E161C
     00409860151B0043
     9B60141900479F60
     13180047A3611217
     004EA86212170055
     001680F891B60000
     80156D8900008028
     5B72000080354B5E
     0000803E40500000
     8045374500008049
     313E0000824D2D39
     0000844F29340000
     8752263000008A54
     242D00408D56212A
     004091571F270040
     94591C240040995A
     1C2300409D5B1A21
     0040A15C19200043
     A65D181E0047AB5E
     161C004AB05F151B
     004EB45F141A0051
     BA5F141900550014
     80F891B600008019
     6E8A000081285B72
     000084334F630000
     873A455700008B40
     3D4D00008F453745
     00009449313E0000
     984C2D3900009D4F
     2A350000A2512832
     0040A854252F0040
     AC55232C0040B257
     20290040B7581F27
     0040BC5A1C240040
     C25A1A210047C85B
     1920004ACD5C181E
     0051D45D171D0055
     002080F891B60000
     80156D8900008028
     5B72000080354B5E
     0000803E40500000
     804537450000804A
     303D0000804E2C37
     0000805228320000
     8054242D00008056
     212A000080581F27
     0000805A1C240000
     805B1B220000805D
     19200000805E181E
     0000805F161C0000
     8060151B00008061
     141A000080611419
     0000806213180000
     8063111600008063
     1116000080641015
     0000806410140000
     80650F1300008065
     0F13000080660E12
     000080660E120000
     80660D1100008067
     0C10000080670C10
     000080670C0F0000
     80680C0F00008068
     0C0F000080680B0E
     000080680B0E0000
     80690A0D00008069
     0A0D00008069090C
     00008069090C0000
     8069090C0000806A
     090C0000806A090C
     0000806A080B0000
     806A080B0000806A
     080B0000806A080B
     0000806B080A0000
     806B080A0000806B
     080A0000806B080A
     0000806B07090000
     806B07090000806B
     07090000
                      (C:\Users\bhrou\gi):01120                 
                      (C:\Users\bhrou\gi):01121                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01122                         ; Perspective data
                      (C:\Users\bhrou\gi):01123                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01124                         ;        
                      (C:\Users\bhrou\gi):01125                         ; Index (words)
                      (C:\Users\bhrou\gi):01126                         ; -----
                      (C:\Users\bhrou\gi):01127                         ; Offset to each halfpipe image perspective data (56 word offsets for the 56 images)
                      (C:\Users\bhrou\gi):01128                         ;
                      (C:\Users\bhrou\gi):01129                         ; Image perspective data
                      (C:\Users\bhrou\gi):01130                         ; ----------------------      
                      (C:\Users\bhrou\gi):01131                         ;  1 word : n number of z_pos defined for this frame from 1 (camera front) to n (far away)
                      (C:\Users\bhrou\gi):01132                         ;  n groups of 6 bytes : 7b dd b8 e6 00 00   that defines an elipse arc
                      (C:\Users\bhrou\gi):01133                         ;                        |  |  |  |  |  |___ angle min (excl.) of visible area (0: no invisible area)
                      (C:\Users\bhrou\gi):01134                         ;                        |  |  |  |  |______ angle max (incl.) of visible area
                      (C:\Users\bhrou\gi):01135                         ;                        |  |  |  |_________ y radius
                      (C:\Users\bhrou\gi):01136                         ;                        |  |  |____________ x radius
                      (C:\Users\bhrou\gi):01137                         ;                        |  |_______________ y origin
                      (C:\Users\bhrou\gi):01138                         ;                        |__________________ x origin
                      (C:\Users\bhrou\gi):01139                         ;
                      (C:\Users\bhrou\gi):01140                         ; -------------------------------------------------------------------------------------------------------------
                      (C:\Users\bhrou\gi):01141                         
                      (C:\Users\bhrou\gi):01142                         INCLUDE "./Engine/ObjectManagement/SSSingleObjLoad.asm"                                                                                                                                                           
                      (./Engine/ObjectMa):00001                 ; search for a free object slot after the current one
                      (./Engine/ObjectMa):00002                 ; IN
                      (./Engine/ObjectMa):00003                 ; [u]: object slot
                      (./Engine/ObjectMa):00004                 ; OUT
                      (./Engine/ObjectMa):00005                 ; [x]: object slot
                      (./Engine/ObjectMa):00006                 ; [cc|z]: 1=found 0=not found  
                      (./Engine/ObjectMa):00007                                                                                           *;loc_6FA4:
244D                  (./Engine/ObjectMa):00008                 SSSingleObjLoad2                                                          *SSSingleObjLoad2:
244D 30C4             (./Engine/ObjectMa):00009 [4]     1978            leax  ,u                                                          *    movea.l a0,a1
244F 2004             (./Engine/ObjectMa):00010 [3]     1981            bra   @a                                                          *    move.w  #SS_Dynamic_Object_RAM_End,d5
                      (./Engine/ObjectMa):00011                                                                                           *    sub.w   a0,d5
                      (./Engine/ObjectMa):00012                                                                                           *
                      (./Engine/ObjectMa):00013                                                                                           *    if object_size=$40
                      (./Engine/ObjectMa):00014                                                                                           *    lsr.w   #6,d5
                      (./Engine/ObjectMa):00015                                                                                           *    subq.w  #1,d5
                      (./Engine/ObjectMa):00016                                                                                           *    bcs.s   +   ; rts
                      (./Engine/ObjectMa):00017                                                                                           *    else
                      (./Engine/ObjectMa):00018                                                                                           *    lsr.w   #6,d5           ; divide by $40
                      (./Engine/ObjectMa):00019                                                                                           *    move.b  ++(pc,d5.w),d5      ; load the right number of objects from table
                      (./Engine/ObjectMa):00020                                                                                           *    bmi.s   +           ; if negative, we have failed!
                      (./Engine/ObjectMa):00021                                                                                           *    endif
                      (./Engine/ObjectMa):00022                                                                                           *
2451 6D84             (./Engine/ObjectMa):00023 [6]     1987    @b      tst   id,x                                                        *-   tst.b   id(a1)
2453 270A             (./Engine/ObjectMa):00024 [3]     1990            beq   @c                                                          *    beq.s   +   ; rts
2455 30886B           (./Engine/ObjectMa):00025 [5]     1995    @a      leax  next_object,x                                               *    lea next_object(a1),a1
2458 8C740D           (./Engine/ObjectMa):00026 [4]     1999            cmpx  #Dynamic_Object_RAM_End                                     *    dbf d5,-
245B 26F4             (./Engine/ObjectMa):00027 [3]     2002            bne   @b                                                          *
245D 86FF             (./Engine/ObjectMa):00028 [2]     2004            lda   #$FF                                                        
245F 39               (./Engine/ObjectMa):00029 [5]     2009    @c      rts                                                               *+   rts
                      (./Engine/ObjectMa):00030                                                                                           *
                      (./Engine/ObjectMa):00031                                                                                           *
                      (./Engine/ObjectMa):00032                                                                                           *    if object_size<>$40
                      (./Engine/ObjectMa):00033                                                                                           *+   dc.b -1
                      (./Engine/ObjectMa):00034                                                                                           *.a :=   1       ; .a is the object slot we are currently processing
                      (./Engine/ObjectMa):00035                                                                                           *.b :=   1       ; .b is used to calculate when there will be a conversion error due to object_size being > $40
                      (./Engine/ObjectMa):00036                                                                                           *
                      (./Engine/ObjectMa):00037                                                                                           *    rept (SS_Dynamic_Object_RAM_End-SS_Object_RAM)/object_size-1
                      (./Engine/ObjectMa):00038                                                                                           *        if (object_size * (.a-1)) / $40 > .b+1  ; this line checks, if there would be a conversion error
                      (./Engine/ObjectMa):00039                                                                                           *            dc.b .a-1, .a-1         ; and if is, it generates 2 entries to correct for the error
                      (./Engine/ObjectMa):00040                                                                                           *        else
                      (./Engine/ObjectMa):00041                                                                                           *            dc.b .a-1
                      (./Engine/ObjectMa):00042                                                                                           *        endif
                      (./Engine/ObjectMa):00043                                                                                           *
                      (./Engine/ObjectMa):00044                                                                                           *.b :=       (object_size * (.a-1)) / $40        ; this line adjusts .b based on the iteration count to check
                      (./Engine/ObjectMa):00045                                                                                           *.a :=       .a+1                    ; run interation counter
                      (./Engine/ObjectMa):00046                                                                                           *    endm
                      (./Engine/ObjectMa):00047                                                                                           *    even
                      (./Engine/ObjectMa):00048                                                                                           *    endif
